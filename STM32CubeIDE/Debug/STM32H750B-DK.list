
STM32H750B-DK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .bootloader   0000227c  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .isr_vector   00000298  90000000  90000000  00004000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         0002a340  900002a0  900002a0  000042a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000035dc  9002a5e0  9002a5e0  0002e5e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000028  9002dbbc  9002dbbc  00031bbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM.extab    00000000  9002dbe4  9002dbe4  0005f374  2**0
                  CONTENTS
  6 .ARM          00000008  9002dbe4  9002dbe4  00031be4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .preinit_array 00000000  9002dbec  9002dbec  0005f374  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  8 .init_array   00000018  9002dbec  9002dbec  00031bec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .fini_array   00000008  9002dc04  9002dc04  00031c04  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .data         00000168  24000000  9002dc0c  00032000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 TouchGFX_MCU_Data_OutBuffer1 00002d00  24000180  9002dd74  00032180  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 12 TouchGFX_MCU_Data_OutBuffer0 00002d00  24002e80  90030a74  00034e80  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferA 00000100  24005b80  90033774  00037b80  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 TouchGFX_ScratchbufferB 00000100  24005c80  90033874  00037c80  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          0001c94c  24005d80  90033974  00037d80  2**3
                  ALLOC
 16 ._user_heap_stack 00002004  240226cc  90033974  000386cc  2**0
                  ALLOC
 17 .ARM.attributes 0000002e  00000000  00000000  0005f374  2**0
                  CONTENTS, READONLY
 18 FontFlashSection 00001554  90200000  90200000  00038000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 19 TextFlashSection 000000a8  90201554  90201554  00039554  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 20 ExtFlashSection 00025d78  902015fc  902015fc  000395fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 21 TouchGFX_Framebuffer 000bf400  d0000000  d0000000  00060000  2**2
                  ALLOC
 22 .debug_line   000774f9  00000000  00000000  0005f3a2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line_str 0000007b  00000000  00000000  000d689b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_info   000e2841  00000000  00000000  000d6916  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .debug_abbrev 00018368  00000000  00000000  001b9157  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 26 .debug_aranges 00003780  00000000  00000000  001d14c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_str    001a7b1e  00000000  00000000  001d4c40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 28 .debug_rnglists 000067ed  00000000  00000000  0037c75e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 29 .debug_macro  0004aa9d  00000000  00000000  00382f4b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 30 .comment      000000c2  00000000  00000000  003cd9e8  2**0
                  CONTENTS, READONLY
 31 .debug_frame  0000aa40  00000000  00000000  003cdaac  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 32 .debug_loclists 00037bad  00000000  00000000  003d84ec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

900002a0 <__do_global_dtors_aux>:
900002a0:	b510      	push	{r4, lr}
900002a2:	4c05      	ldr	r4, [pc, #20]	@ (900002b8 <__do_global_dtors_aux+0x18>)
900002a4:	7823      	ldrb	r3, [r4, #0]
900002a6:	b933      	cbnz	r3, 900002b6 <__do_global_dtors_aux+0x16>
900002a8:	4b04      	ldr	r3, [pc, #16]	@ (900002bc <__do_global_dtors_aux+0x1c>)
900002aa:	b113      	cbz	r3, 900002b2 <__do_global_dtors_aux+0x12>
900002ac:	4804      	ldr	r0, [pc, #16]	@ (900002c0 <__do_global_dtors_aux+0x20>)
900002ae:	f3af 8000 	nop.w
900002b2:	2301      	movs	r3, #1
900002b4:	7023      	strb	r3, [r4, #0]
900002b6:	bd10      	pop	{r4, pc}
900002b8:	24005d80 	.word	0x24005d80
900002bc:	00000000 	.word	0x00000000
900002c0:	9002a5c8 	.word	0x9002a5c8

900002c4 <frame_dummy>:
900002c4:	b508      	push	{r3, lr}
900002c6:	4b03      	ldr	r3, [pc, #12]	@ (900002d4 <frame_dummy+0x10>)
900002c8:	b11b      	cbz	r3, 900002d2 <frame_dummy+0xe>
900002ca:	4903      	ldr	r1, [pc, #12]	@ (900002d8 <frame_dummy+0x14>)
900002cc:	4803      	ldr	r0, [pc, #12]	@ (900002dc <frame_dummy+0x18>)
900002ce:	f3af 8000 	nop.w
900002d2:	bd08      	pop	{r3, pc}
900002d4:	00000000 	.word	0x00000000
900002d8:	24005d84 	.word	0x24005d84
900002dc:	9002a5c8 	.word	0x9002a5c8

900002e0 <memchr>:
900002e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
900002e4:	2a10      	cmp	r2, #16
900002e6:	db2b      	blt.n	90000340 <memchr+0x60>
900002e8:	f010 0f07 	tst.w	r0, #7
900002ec:	d008      	beq.n	90000300 <memchr+0x20>
900002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
900002f2:	3a01      	subs	r2, #1
900002f4:	428b      	cmp	r3, r1
900002f6:	d02d      	beq.n	90000354 <memchr+0x74>
900002f8:	f010 0f07 	tst.w	r0, #7
900002fc:	b342      	cbz	r2, 90000350 <memchr+0x70>
900002fe:	d1f6      	bne.n	900002ee <memchr+0xe>
90000300:	b4f0      	push	{r4, r5, r6, r7}
90000302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
90000306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
9000030a:	f022 0407 	bic.w	r4, r2, #7
9000030e:	f07f 0700 	mvns.w	r7, #0
90000312:	2300      	movs	r3, #0
90000314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
90000318:	3c08      	subs	r4, #8
9000031a:	ea85 0501 	eor.w	r5, r5, r1
9000031e:	ea86 0601 	eor.w	r6, r6, r1
90000322:	fa85 f547 	uadd8	r5, r5, r7
90000326:	faa3 f587 	sel	r5, r3, r7
9000032a:	fa86 f647 	uadd8	r6, r6, r7
9000032e:	faa5 f687 	sel	r6, r5, r7
90000332:	b98e      	cbnz	r6, 90000358 <memchr+0x78>
90000334:	d1ee      	bne.n	90000314 <memchr+0x34>
90000336:	bcf0      	pop	{r4, r5, r6, r7}
90000338:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
9000033c:	f002 0207 	and.w	r2, r2, #7
90000340:	b132      	cbz	r2, 90000350 <memchr+0x70>
90000342:	f810 3b01 	ldrb.w	r3, [r0], #1
90000346:	3a01      	subs	r2, #1
90000348:	ea83 0301 	eor.w	r3, r3, r1
9000034c:	b113      	cbz	r3, 90000354 <memchr+0x74>
9000034e:	d1f8      	bne.n	90000342 <memchr+0x62>
90000350:	2000      	movs	r0, #0
90000352:	4770      	bx	lr
90000354:	3801      	subs	r0, #1
90000356:	4770      	bx	lr
90000358:	2d00      	cmp	r5, #0
9000035a:	bf06      	itte	eq
9000035c:	4635      	moveq	r5, r6
9000035e:	3803      	subeq	r0, #3
90000360:	3807      	subne	r0, #7
90000362:	f015 0f01 	tst.w	r5, #1
90000366:	d107      	bne.n	90000378 <memchr+0x98>
90000368:	3001      	adds	r0, #1
9000036a:	f415 7f80 	tst.w	r5, #256	@ 0x100
9000036e:	bf02      	ittt	eq
90000370:	3001      	addeq	r0, #1
90000372:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
90000376:	3001      	addeq	r0, #1
90000378:	bcf0      	pop	{r4, r5, r6, r7}
9000037a:	3801      	subs	r0, #1
9000037c:	4770      	bx	lr
9000037e:	bf00      	nop

90000380 <__aeabi_drsub>:
90000380:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
90000384:	e002      	b.n	9000038c <__adddf3>
90000386:	bf00      	nop

90000388 <__aeabi_dsub>:
90000388:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

9000038c <__adddf3>:
9000038c:	b530      	push	{r4, r5, lr}
9000038e:	ea4f 0441 	mov.w	r4, r1, lsl #1
90000392:	ea4f 0543 	mov.w	r5, r3, lsl #1
90000396:	ea94 0f05 	teq	r4, r5
9000039a:	bf08      	it	eq
9000039c:	ea90 0f02 	teqeq	r0, r2
900003a0:	bf1f      	itttt	ne
900003a2:	ea54 0c00 	orrsne.w	ip, r4, r0
900003a6:	ea55 0c02 	orrsne.w	ip, r5, r2
900003aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
900003ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
900003b2:	f000 80e2 	beq.w	9000057a <__adddf3+0x1ee>
900003b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
900003ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
900003be:	bfb8      	it	lt
900003c0:	426d      	neglt	r5, r5
900003c2:	dd0c      	ble.n	900003de <__adddf3+0x52>
900003c4:	442c      	add	r4, r5
900003c6:	ea80 0202 	eor.w	r2, r0, r2
900003ca:	ea81 0303 	eor.w	r3, r1, r3
900003ce:	ea82 0000 	eor.w	r0, r2, r0
900003d2:	ea83 0101 	eor.w	r1, r3, r1
900003d6:	ea80 0202 	eor.w	r2, r0, r2
900003da:	ea81 0303 	eor.w	r3, r1, r3
900003de:	2d36      	cmp	r5, #54	@ 0x36
900003e0:	bf88      	it	hi
900003e2:	bd30      	pophi	{r4, r5, pc}
900003e4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
900003e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
900003ec:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
900003f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
900003f4:	d002      	beq.n	900003fc <__adddf3+0x70>
900003f6:	4240      	negs	r0, r0
900003f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900003fc:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
90000400:	ea4f 3303 	mov.w	r3, r3, lsl #12
90000404:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
90000408:	d002      	beq.n	90000410 <__adddf3+0x84>
9000040a:	4252      	negs	r2, r2
9000040c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000410:	ea94 0f05 	teq	r4, r5
90000414:	f000 80a7 	beq.w	90000566 <__adddf3+0x1da>
90000418:	f1a4 0401 	sub.w	r4, r4, #1
9000041c:	f1d5 0e20 	rsbs	lr, r5, #32
90000420:	db0d      	blt.n	9000043e <__adddf3+0xb2>
90000422:	fa02 fc0e 	lsl.w	ip, r2, lr
90000426:	fa22 f205 	lsr.w	r2, r2, r5
9000042a:	1880      	adds	r0, r0, r2
9000042c:	f141 0100 	adc.w	r1, r1, #0
90000430:	fa03 f20e 	lsl.w	r2, r3, lr
90000434:	1880      	adds	r0, r0, r2
90000436:	fa43 f305 	asr.w	r3, r3, r5
9000043a:	4159      	adcs	r1, r3
9000043c:	e00e      	b.n	9000045c <__adddf3+0xd0>
9000043e:	f1a5 0520 	sub.w	r5, r5, #32
90000442:	f10e 0e20 	add.w	lr, lr, #32
90000446:	2a01      	cmp	r2, #1
90000448:	fa03 fc0e 	lsl.w	ip, r3, lr
9000044c:	bf28      	it	cs
9000044e:	f04c 0c02 	orrcs.w	ip, ip, #2
90000452:	fa43 f305 	asr.w	r3, r3, r5
90000456:	18c0      	adds	r0, r0, r3
90000458:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
9000045c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000460:	d507      	bpl.n	90000472 <__adddf3+0xe6>
90000462:	f04f 0e00 	mov.w	lr, #0
90000466:	f1dc 0c00 	rsbs	ip, ip, #0
9000046a:	eb7e 0000 	sbcs.w	r0, lr, r0
9000046e:	eb6e 0101 	sbc.w	r1, lr, r1
90000472:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
90000476:	d31b      	bcc.n	900004b0 <__adddf3+0x124>
90000478:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000047c:	d30c      	bcc.n	90000498 <__adddf3+0x10c>
9000047e:	0849      	lsrs	r1, r1, #1
90000480:	ea5f 0030 	movs.w	r0, r0, rrx
90000484:	ea4f 0c3c 	mov.w	ip, ip, rrx
90000488:	f104 0401 	add.w	r4, r4, #1
9000048c:	ea4f 5244 	mov.w	r2, r4, lsl #21
90000490:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
90000494:	f080 809a 	bcs.w	900005cc <__adddf3+0x240>
90000498:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
9000049c:	bf08      	it	eq
9000049e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
900004a2:	f150 0000 	adcs.w	r0, r0, #0
900004a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
900004aa:	ea41 0105 	orr.w	r1, r1, r5
900004ae:	bd30      	pop	{r4, r5, pc}
900004b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
900004b4:	4140      	adcs	r0, r0
900004b6:	eb41 0101 	adc.w	r1, r1, r1
900004ba:	3c01      	subs	r4, #1
900004bc:	bf28      	it	cs
900004be:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
900004c2:	d2e9      	bcs.n	90000498 <__adddf3+0x10c>
900004c4:	f091 0f00 	teq	r1, #0
900004c8:	bf04      	itt	eq
900004ca:	4601      	moveq	r1, r0
900004cc:	2000      	moveq	r0, #0
900004ce:	fab1 f381 	clz	r3, r1
900004d2:	bf08      	it	eq
900004d4:	3320      	addeq	r3, #32
900004d6:	f1a3 030b 	sub.w	r3, r3, #11
900004da:	f1b3 0220 	subs.w	r2, r3, #32
900004de:	da0c      	bge.n	900004fa <__adddf3+0x16e>
900004e0:	320c      	adds	r2, #12
900004e2:	dd08      	ble.n	900004f6 <__adddf3+0x16a>
900004e4:	f102 0c14 	add.w	ip, r2, #20
900004e8:	f1c2 020c 	rsb	r2, r2, #12
900004ec:	fa01 f00c 	lsl.w	r0, r1, ip
900004f0:	fa21 f102 	lsr.w	r1, r1, r2
900004f4:	e00c      	b.n	90000510 <__adddf3+0x184>
900004f6:	f102 0214 	add.w	r2, r2, #20
900004fa:	bfd8      	it	le
900004fc:	f1c2 0c20 	rsble	ip, r2, #32
90000500:	fa01 f102 	lsl.w	r1, r1, r2
90000504:	fa20 fc0c 	lsr.w	ip, r0, ip
90000508:	bfdc      	itt	le
9000050a:	ea41 010c 	orrle.w	r1, r1, ip
9000050e:	4090      	lslle	r0, r2
90000510:	1ae4      	subs	r4, r4, r3
90000512:	bfa2      	ittt	ge
90000514:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
90000518:	4329      	orrge	r1, r5
9000051a:	bd30      	popge	{r4, r5, pc}
9000051c:	ea6f 0404 	mvn.w	r4, r4
90000520:	3c1f      	subs	r4, #31
90000522:	da1c      	bge.n	9000055e <__adddf3+0x1d2>
90000524:	340c      	adds	r4, #12
90000526:	dc0e      	bgt.n	90000546 <__adddf3+0x1ba>
90000528:	f104 0414 	add.w	r4, r4, #20
9000052c:	f1c4 0220 	rsb	r2, r4, #32
90000530:	fa20 f004 	lsr.w	r0, r0, r4
90000534:	fa01 f302 	lsl.w	r3, r1, r2
90000538:	ea40 0003 	orr.w	r0, r0, r3
9000053c:	fa21 f304 	lsr.w	r3, r1, r4
90000540:	ea45 0103 	orr.w	r1, r5, r3
90000544:	bd30      	pop	{r4, r5, pc}
90000546:	f1c4 040c 	rsb	r4, r4, #12
9000054a:	f1c4 0220 	rsb	r2, r4, #32
9000054e:	fa20 f002 	lsr.w	r0, r0, r2
90000552:	fa01 f304 	lsl.w	r3, r1, r4
90000556:	ea40 0003 	orr.w	r0, r0, r3
9000055a:	4629      	mov	r1, r5
9000055c:	bd30      	pop	{r4, r5, pc}
9000055e:	fa21 f004 	lsr.w	r0, r1, r4
90000562:	4629      	mov	r1, r5
90000564:	bd30      	pop	{r4, r5, pc}
90000566:	f094 0f00 	teq	r4, #0
9000056a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
9000056e:	bf06      	itte	eq
90000570:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
90000574:	3401      	addeq	r4, #1
90000576:	3d01      	subne	r5, #1
90000578:	e74e      	b.n	90000418 <__adddf3+0x8c>
9000057a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
9000057e:	bf18      	it	ne
90000580:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
90000584:	d029      	beq.n	900005da <__adddf3+0x24e>
90000586:	ea94 0f05 	teq	r4, r5
9000058a:	bf08      	it	eq
9000058c:	ea90 0f02 	teqeq	r0, r2
90000590:	d005      	beq.n	9000059e <__adddf3+0x212>
90000592:	ea54 0c00 	orrs.w	ip, r4, r0
90000596:	bf04      	itt	eq
90000598:	4619      	moveq	r1, r3
9000059a:	4610      	moveq	r0, r2
9000059c:	bd30      	pop	{r4, r5, pc}
9000059e:	ea91 0f03 	teq	r1, r3
900005a2:	bf1e      	ittt	ne
900005a4:	2100      	movne	r1, #0
900005a6:	2000      	movne	r0, #0
900005a8:	bd30      	popne	{r4, r5, pc}
900005aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
900005ae:	d105      	bne.n	900005bc <__adddf3+0x230>
900005b0:	0040      	lsls	r0, r0, #1
900005b2:	4149      	adcs	r1, r1
900005b4:	bf28      	it	cs
900005b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
900005ba:	bd30      	pop	{r4, r5, pc}
900005bc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
900005c0:	bf3c      	itt	cc
900005c2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
900005c6:	bd30      	popcc	{r4, r5, pc}
900005c8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
900005cc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
900005d0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
900005d4:	f04f 0000 	mov.w	r0, #0
900005d8:	bd30      	pop	{r4, r5, pc}
900005da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
900005de:	bf1a      	itte	ne
900005e0:	4619      	movne	r1, r3
900005e2:	4610      	movne	r0, r2
900005e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
900005e8:	bf1c      	itt	ne
900005ea:	460b      	movne	r3, r1
900005ec:	4602      	movne	r2, r0
900005ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
900005f2:	bf06      	itte	eq
900005f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
900005f8:	ea91 0f03 	teqeq	r1, r3
900005fc:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
90000600:	bd30      	pop	{r4, r5, pc}
90000602:	bf00      	nop

90000604 <__aeabi_ui2d>:
90000604:	f090 0f00 	teq	r0, #0
90000608:	bf04      	itt	eq
9000060a:	2100      	moveq	r1, #0
9000060c:	4770      	bxeq	lr
9000060e:	b530      	push	{r4, r5, lr}
90000610:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000614:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000618:	f04f 0500 	mov.w	r5, #0
9000061c:	f04f 0100 	mov.w	r1, #0
90000620:	e750      	b.n	900004c4 <__adddf3+0x138>
90000622:	bf00      	nop

90000624 <__aeabi_i2d>:
90000624:	f090 0f00 	teq	r0, #0
90000628:	bf04      	itt	eq
9000062a:	2100      	moveq	r1, #0
9000062c:	4770      	bxeq	lr
9000062e:	b530      	push	{r4, r5, lr}
90000630:	f44f 6480 	mov.w	r4, #1024	@ 0x400
90000634:	f104 0432 	add.w	r4, r4, #50	@ 0x32
90000638:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
9000063c:	bf48      	it	mi
9000063e:	4240      	negmi	r0, r0
90000640:	f04f 0100 	mov.w	r1, #0
90000644:	e73e      	b.n	900004c4 <__adddf3+0x138>
90000646:	bf00      	nop

90000648 <__aeabi_f2d>:
90000648:	0042      	lsls	r2, r0, #1
9000064a:	ea4f 01e2 	mov.w	r1, r2, asr #3
9000064e:	ea4f 0131 	mov.w	r1, r1, rrx
90000652:	ea4f 7002 	mov.w	r0, r2, lsl #28
90000656:	bf1f      	itttt	ne
90000658:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
9000065c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
90000660:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
90000664:	4770      	bxne	lr
90000666:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
9000066a:	bf08      	it	eq
9000066c:	4770      	bxeq	lr
9000066e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
90000672:	bf04      	itt	eq
90000674:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
90000678:	4770      	bxeq	lr
9000067a:	b530      	push	{r4, r5, lr}
9000067c:	f44f 7460 	mov.w	r4, #896	@ 0x380
90000680:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
90000684:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
90000688:	e71c      	b.n	900004c4 <__adddf3+0x138>
9000068a:	bf00      	nop

9000068c <__aeabi_ul2d>:
9000068c:	ea50 0201 	orrs.w	r2, r0, r1
90000690:	bf08      	it	eq
90000692:	4770      	bxeq	lr
90000694:	b530      	push	{r4, r5, lr}
90000696:	f04f 0500 	mov.w	r5, #0
9000069a:	e00a      	b.n	900006b2 <__aeabi_l2d+0x16>

9000069c <__aeabi_l2d>:
9000069c:	ea50 0201 	orrs.w	r2, r0, r1
900006a0:	bf08      	it	eq
900006a2:	4770      	bxeq	lr
900006a4:	b530      	push	{r4, r5, lr}
900006a6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
900006aa:	d502      	bpl.n	900006b2 <__aeabi_l2d+0x16>
900006ac:	4240      	negs	r0, r0
900006ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
900006b2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
900006b6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
900006ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
900006be:	f43f aed8 	beq.w	90000472 <__adddf3+0xe6>
900006c2:	f04f 0203 	mov.w	r2, #3
900006c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006ca:	bf18      	it	ne
900006cc:	3203      	addne	r2, #3
900006ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
900006d2:	bf18      	it	ne
900006d4:	3203      	addne	r2, #3
900006d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
900006da:	f1c2 0320 	rsb	r3, r2, #32
900006de:	fa00 fc03 	lsl.w	ip, r0, r3
900006e2:	fa20 f002 	lsr.w	r0, r0, r2
900006e6:	fa01 fe03 	lsl.w	lr, r1, r3
900006ea:	ea40 000e 	orr.w	r0, r0, lr
900006ee:	fa21 f102 	lsr.w	r1, r1, r2
900006f2:	4414      	add	r4, r2
900006f4:	e6bd      	b.n	90000472 <__adddf3+0xe6>
900006f6:	bf00      	nop

900006f8 <__aeabi_ldivmod>:
900006f8:	b97b      	cbnz	r3, 9000071a <__aeabi_ldivmod+0x22>
900006fa:	b972      	cbnz	r2, 9000071a <__aeabi_ldivmod+0x22>
900006fc:	2900      	cmp	r1, #0
900006fe:	bfbe      	ittt	lt
90000700:	2000      	movlt	r0, #0
90000702:	f04f 4100 	movlt.w	r1, #2147483648	@ 0x80000000
90000706:	e006      	blt.n	90000716 <__aeabi_ldivmod+0x1e>
90000708:	bf08      	it	eq
9000070a:	2800      	cmpeq	r0, #0
9000070c:	bf1c      	itt	ne
9000070e:	f06f 4100 	mvnne.w	r1, #2147483648	@ 0x80000000
90000712:	f04f 30ff 	movne.w	r0, #4294967295
90000716:	f000 b9d3 	b.w	90000ac0 <__aeabi_idiv0>
9000071a:	f1ad 0c08 	sub.w	ip, sp, #8
9000071e:	e96d ce04 	strd	ip, lr, [sp, #-16]!
90000722:	2900      	cmp	r1, #0
90000724:	db09      	blt.n	9000073a <__aeabi_ldivmod+0x42>
90000726:	2b00      	cmp	r3, #0
90000728:	db1a      	blt.n	90000760 <__aeabi_ldivmod+0x68>
9000072a:	f000 f84d 	bl	900007c8 <__udivmoddi4>
9000072e:	f8dd e004 	ldr.w	lr, [sp, #4]
90000732:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000736:	b004      	add	sp, #16
90000738:	4770      	bx	lr
9000073a:	4240      	negs	r0, r0
9000073c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000740:	2b00      	cmp	r3, #0
90000742:	db1b      	blt.n	9000077c <__aeabi_ldivmod+0x84>
90000744:	f000 f840 	bl	900007c8 <__udivmoddi4>
90000748:	f8dd e004 	ldr.w	lr, [sp, #4]
9000074c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000750:	b004      	add	sp, #16
90000752:	4240      	negs	r0, r0
90000754:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
90000758:	4252      	negs	r2, r2
9000075a:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
9000075e:	4770      	bx	lr
90000760:	4252      	negs	r2, r2
90000762:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000766:	f000 f82f 	bl	900007c8 <__udivmoddi4>
9000076a:	f8dd e004 	ldr.w	lr, [sp, #4]
9000076e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
90000772:	b004      	add	sp, #16
90000774:	4240      	negs	r0, r0
90000776:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
9000077a:	4770      	bx	lr
9000077c:	4252      	negs	r2, r2
9000077e:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000782:	f000 f821 	bl	900007c8 <__udivmoddi4>
90000786:	f8dd e004 	ldr.w	lr, [sp, #4]
9000078a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
9000078e:	b004      	add	sp, #16
90000790:	4252      	negs	r2, r2
90000792:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
90000796:	4770      	bx	lr

90000798 <__aeabi_uldivmod>:
90000798:	b953      	cbnz	r3, 900007b0 <__aeabi_uldivmod+0x18>
9000079a:	b94a      	cbnz	r2, 900007b0 <__aeabi_uldivmod+0x18>
9000079c:	2900      	cmp	r1, #0
9000079e:	bf08      	it	eq
900007a0:	2800      	cmpeq	r0, #0
900007a2:	bf1c      	itt	ne
900007a4:	f04f 31ff 	movne.w	r1, #4294967295
900007a8:	f04f 30ff 	movne.w	r0, #4294967295
900007ac:	f000 b988 	b.w	90000ac0 <__aeabi_idiv0>
900007b0:	f1ad 0c08 	sub.w	ip, sp, #8
900007b4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
900007b8:	f000 f806 	bl	900007c8 <__udivmoddi4>
900007bc:	f8dd e004 	ldr.w	lr, [sp, #4]
900007c0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
900007c4:	b004      	add	sp, #16
900007c6:	4770      	bx	lr

900007c8 <__udivmoddi4>:
900007c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900007cc:	9d08      	ldr	r5, [sp, #32]
900007ce:	468e      	mov	lr, r1
900007d0:	4604      	mov	r4, r0
900007d2:	4688      	mov	r8, r1
900007d4:	2b00      	cmp	r3, #0
900007d6:	d14a      	bne.n	9000086e <__udivmoddi4+0xa6>
900007d8:	428a      	cmp	r2, r1
900007da:	4617      	mov	r7, r2
900007dc:	d962      	bls.n	900008a4 <__udivmoddi4+0xdc>
900007de:	fab2 f682 	clz	r6, r2
900007e2:	b14e      	cbz	r6, 900007f8 <__udivmoddi4+0x30>
900007e4:	f1c6 0320 	rsb	r3, r6, #32
900007e8:	fa01 f806 	lsl.w	r8, r1, r6
900007ec:	fa20 f303 	lsr.w	r3, r0, r3
900007f0:	40b7      	lsls	r7, r6
900007f2:	ea43 0808 	orr.w	r8, r3, r8
900007f6:	40b4      	lsls	r4, r6
900007f8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
900007fc:	fa1f fc87 	uxth.w	ip, r7
90000800:	fbb8 f1fe 	udiv	r1, r8, lr
90000804:	0c23      	lsrs	r3, r4, #16
90000806:	fb0e 8811 	mls	r8, lr, r1, r8
9000080a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
9000080e:	fb01 f20c 	mul.w	r2, r1, ip
90000812:	429a      	cmp	r2, r3
90000814:	d909      	bls.n	9000082a <__udivmoddi4+0x62>
90000816:	18fb      	adds	r3, r7, r3
90000818:	f101 30ff 	add.w	r0, r1, #4294967295
9000081c:	f080 80ea 	bcs.w	900009f4 <__udivmoddi4+0x22c>
90000820:	429a      	cmp	r2, r3
90000822:	f240 80e7 	bls.w	900009f4 <__udivmoddi4+0x22c>
90000826:	3902      	subs	r1, #2
90000828:	443b      	add	r3, r7
9000082a:	1a9a      	subs	r2, r3, r2
9000082c:	b2a3      	uxth	r3, r4
9000082e:	fbb2 f0fe 	udiv	r0, r2, lr
90000832:	fb0e 2210 	mls	r2, lr, r0, r2
90000836:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000083a:	fb00 fc0c 	mul.w	ip, r0, ip
9000083e:	459c      	cmp	ip, r3
90000840:	d909      	bls.n	90000856 <__udivmoddi4+0x8e>
90000842:	18fb      	adds	r3, r7, r3
90000844:	f100 32ff 	add.w	r2, r0, #4294967295
90000848:	f080 80d6 	bcs.w	900009f8 <__udivmoddi4+0x230>
9000084c:	459c      	cmp	ip, r3
9000084e:	f240 80d3 	bls.w	900009f8 <__udivmoddi4+0x230>
90000852:	443b      	add	r3, r7
90000854:	3802      	subs	r0, #2
90000856:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
9000085a:	eba3 030c 	sub.w	r3, r3, ip
9000085e:	2100      	movs	r1, #0
90000860:	b11d      	cbz	r5, 9000086a <__udivmoddi4+0xa2>
90000862:	40f3      	lsrs	r3, r6
90000864:	2200      	movs	r2, #0
90000866:	e9c5 3200 	strd	r3, r2, [r5]
9000086a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9000086e:	428b      	cmp	r3, r1
90000870:	d905      	bls.n	9000087e <__udivmoddi4+0xb6>
90000872:	b10d      	cbz	r5, 90000878 <__udivmoddi4+0xb0>
90000874:	e9c5 0100 	strd	r0, r1, [r5]
90000878:	2100      	movs	r1, #0
9000087a:	4608      	mov	r0, r1
9000087c:	e7f5      	b.n	9000086a <__udivmoddi4+0xa2>
9000087e:	fab3 f183 	clz	r1, r3
90000882:	2900      	cmp	r1, #0
90000884:	d146      	bne.n	90000914 <__udivmoddi4+0x14c>
90000886:	4573      	cmp	r3, lr
90000888:	d302      	bcc.n	90000890 <__udivmoddi4+0xc8>
9000088a:	4282      	cmp	r2, r0
9000088c:	f200 8105 	bhi.w	90000a9a <__udivmoddi4+0x2d2>
90000890:	1a84      	subs	r4, r0, r2
90000892:	eb6e 0203 	sbc.w	r2, lr, r3
90000896:	2001      	movs	r0, #1
90000898:	4690      	mov	r8, r2
9000089a:	2d00      	cmp	r5, #0
9000089c:	d0e5      	beq.n	9000086a <__udivmoddi4+0xa2>
9000089e:	e9c5 4800 	strd	r4, r8, [r5]
900008a2:	e7e2      	b.n	9000086a <__udivmoddi4+0xa2>
900008a4:	2a00      	cmp	r2, #0
900008a6:	f000 8090 	beq.w	900009ca <__udivmoddi4+0x202>
900008aa:	fab2 f682 	clz	r6, r2
900008ae:	2e00      	cmp	r6, #0
900008b0:	f040 80a4 	bne.w	900009fc <__udivmoddi4+0x234>
900008b4:	1a8a      	subs	r2, r1, r2
900008b6:	0c03      	lsrs	r3, r0, #16
900008b8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
900008bc:	b280      	uxth	r0, r0
900008be:	b2bc      	uxth	r4, r7
900008c0:	2101      	movs	r1, #1
900008c2:	fbb2 fcfe 	udiv	ip, r2, lr
900008c6:	fb0e 221c 	mls	r2, lr, ip, r2
900008ca:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
900008ce:	fb04 f20c 	mul.w	r2, r4, ip
900008d2:	429a      	cmp	r2, r3
900008d4:	d907      	bls.n	900008e6 <__udivmoddi4+0x11e>
900008d6:	18fb      	adds	r3, r7, r3
900008d8:	f10c 38ff 	add.w	r8, ip, #4294967295
900008dc:	d202      	bcs.n	900008e4 <__udivmoddi4+0x11c>
900008de:	429a      	cmp	r2, r3
900008e0:	f200 80e0 	bhi.w	90000aa4 <__udivmoddi4+0x2dc>
900008e4:	46c4      	mov	ip, r8
900008e6:	1a9b      	subs	r3, r3, r2
900008e8:	fbb3 f2fe 	udiv	r2, r3, lr
900008ec:	fb0e 3312 	mls	r3, lr, r2, r3
900008f0:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
900008f4:	fb02 f404 	mul.w	r4, r2, r4
900008f8:	429c      	cmp	r4, r3
900008fa:	d907      	bls.n	9000090c <__udivmoddi4+0x144>
900008fc:	18fb      	adds	r3, r7, r3
900008fe:	f102 30ff 	add.w	r0, r2, #4294967295
90000902:	d202      	bcs.n	9000090a <__udivmoddi4+0x142>
90000904:	429c      	cmp	r4, r3
90000906:	f200 80ca 	bhi.w	90000a9e <__udivmoddi4+0x2d6>
9000090a:	4602      	mov	r2, r0
9000090c:	1b1b      	subs	r3, r3, r4
9000090e:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
90000912:	e7a5      	b.n	90000860 <__udivmoddi4+0x98>
90000914:	f1c1 0620 	rsb	r6, r1, #32
90000918:	408b      	lsls	r3, r1
9000091a:	fa22 f706 	lsr.w	r7, r2, r6
9000091e:	431f      	orrs	r7, r3
90000920:	fa0e f401 	lsl.w	r4, lr, r1
90000924:	fa20 f306 	lsr.w	r3, r0, r6
90000928:	fa2e fe06 	lsr.w	lr, lr, r6
9000092c:	ea4f 4917 	mov.w	r9, r7, lsr #16
90000930:	4323      	orrs	r3, r4
90000932:	fa00 f801 	lsl.w	r8, r0, r1
90000936:	fa1f fc87 	uxth.w	ip, r7
9000093a:	fbbe f0f9 	udiv	r0, lr, r9
9000093e:	0c1c      	lsrs	r4, r3, #16
90000940:	fb09 ee10 	mls	lr, r9, r0, lr
90000944:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
90000948:	fb00 fe0c 	mul.w	lr, r0, ip
9000094c:	45a6      	cmp	lr, r4
9000094e:	fa02 f201 	lsl.w	r2, r2, r1
90000952:	d909      	bls.n	90000968 <__udivmoddi4+0x1a0>
90000954:	193c      	adds	r4, r7, r4
90000956:	f100 3aff 	add.w	sl, r0, #4294967295
9000095a:	f080 809c 	bcs.w	90000a96 <__udivmoddi4+0x2ce>
9000095e:	45a6      	cmp	lr, r4
90000960:	f240 8099 	bls.w	90000a96 <__udivmoddi4+0x2ce>
90000964:	3802      	subs	r0, #2
90000966:	443c      	add	r4, r7
90000968:	eba4 040e 	sub.w	r4, r4, lr
9000096c:	fa1f fe83 	uxth.w	lr, r3
90000970:	fbb4 f3f9 	udiv	r3, r4, r9
90000974:	fb09 4413 	mls	r4, r9, r3, r4
90000978:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
9000097c:	fb03 fc0c 	mul.w	ip, r3, ip
90000980:	45a4      	cmp	ip, r4
90000982:	d908      	bls.n	90000996 <__udivmoddi4+0x1ce>
90000984:	193c      	adds	r4, r7, r4
90000986:	f103 3eff 	add.w	lr, r3, #4294967295
9000098a:	f080 8082 	bcs.w	90000a92 <__udivmoddi4+0x2ca>
9000098e:	45a4      	cmp	ip, r4
90000990:	d97f      	bls.n	90000a92 <__udivmoddi4+0x2ca>
90000992:	3b02      	subs	r3, #2
90000994:	443c      	add	r4, r7
90000996:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
9000099a:	eba4 040c 	sub.w	r4, r4, ip
9000099e:	fba0 ec02 	umull	lr, ip, r0, r2
900009a2:	4564      	cmp	r4, ip
900009a4:	4673      	mov	r3, lr
900009a6:	46e1      	mov	r9, ip
900009a8:	d362      	bcc.n	90000a70 <__udivmoddi4+0x2a8>
900009aa:	d05f      	beq.n	90000a6c <__udivmoddi4+0x2a4>
900009ac:	b15d      	cbz	r5, 900009c6 <__udivmoddi4+0x1fe>
900009ae:	ebb8 0203 	subs.w	r2, r8, r3
900009b2:	eb64 0409 	sbc.w	r4, r4, r9
900009b6:	fa04 f606 	lsl.w	r6, r4, r6
900009ba:	fa22 f301 	lsr.w	r3, r2, r1
900009be:	431e      	orrs	r6, r3
900009c0:	40cc      	lsrs	r4, r1
900009c2:	e9c5 6400 	strd	r6, r4, [r5]
900009c6:	2100      	movs	r1, #0
900009c8:	e74f      	b.n	9000086a <__udivmoddi4+0xa2>
900009ca:	fbb1 fcf2 	udiv	ip, r1, r2
900009ce:	0c01      	lsrs	r1, r0, #16
900009d0:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
900009d4:	b280      	uxth	r0, r0
900009d6:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
900009da:	463b      	mov	r3, r7
900009dc:	4638      	mov	r0, r7
900009de:	463c      	mov	r4, r7
900009e0:	46b8      	mov	r8, r7
900009e2:	46be      	mov	lr, r7
900009e4:	2620      	movs	r6, #32
900009e6:	fbb1 f1f7 	udiv	r1, r1, r7
900009ea:	eba2 0208 	sub.w	r2, r2, r8
900009ee:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
900009f2:	e766      	b.n	900008c2 <__udivmoddi4+0xfa>
900009f4:	4601      	mov	r1, r0
900009f6:	e718      	b.n	9000082a <__udivmoddi4+0x62>
900009f8:	4610      	mov	r0, r2
900009fa:	e72c      	b.n	90000856 <__udivmoddi4+0x8e>
900009fc:	f1c6 0220 	rsb	r2, r6, #32
90000a00:	fa2e f302 	lsr.w	r3, lr, r2
90000a04:	40b7      	lsls	r7, r6
90000a06:	40b1      	lsls	r1, r6
90000a08:	fa20 f202 	lsr.w	r2, r0, r2
90000a0c:	ea4f 4e17 	mov.w	lr, r7, lsr #16
90000a10:	430a      	orrs	r2, r1
90000a12:	fbb3 f8fe 	udiv	r8, r3, lr
90000a16:	b2bc      	uxth	r4, r7
90000a18:	fb0e 3318 	mls	r3, lr, r8, r3
90000a1c:	0c11      	lsrs	r1, r2, #16
90000a1e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
90000a22:	fb08 f904 	mul.w	r9, r8, r4
90000a26:	40b0      	lsls	r0, r6
90000a28:	4589      	cmp	r9, r1
90000a2a:	ea4f 4310 	mov.w	r3, r0, lsr #16
90000a2e:	b280      	uxth	r0, r0
90000a30:	d93e      	bls.n	90000ab0 <__udivmoddi4+0x2e8>
90000a32:	1879      	adds	r1, r7, r1
90000a34:	f108 3cff 	add.w	ip, r8, #4294967295
90000a38:	d201      	bcs.n	90000a3e <__udivmoddi4+0x276>
90000a3a:	4589      	cmp	r9, r1
90000a3c:	d81f      	bhi.n	90000a7e <__udivmoddi4+0x2b6>
90000a3e:	eba1 0109 	sub.w	r1, r1, r9
90000a42:	fbb1 f9fe 	udiv	r9, r1, lr
90000a46:	fb09 f804 	mul.w	r8, r9, r4
90000a4a:	fb0e 1119 	mls	r1, lr, r9, r1
90000a4e:	b292      	uxth	r2, r2
90000a50:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90000a54:	4542      	cmp	r2, r8
90000a56:	d229      	bcs.n	90000aac <__udivmoddi4+0x2e4>
90000a58:	18ba      	adds	r2, r7, r2
90000a5a:	f109 31ff 	add.w	r1, r9, #4294967295
90000a5e:	d2c4      	bcs.n	900009ea <__udivmoddi4+0x222>
90000a60:	4542      	cmp	r2, r8
90000a62:	d2c2      	bcs.n	900009ea <__udivmoddi4+0x222>
90000a64:	f1a9 0102 	sub.w	r1, r9, #2
90000a68:	443a      	add	r2, r7
90000a6a:	e7be      	b.n	900009ea <__udivmoddi4+0x222>
90000a6c:	45f0      	cmp	r8, lr
90000a6e:	d29d      	bcs.n	900009ac <__udivmoddi4+0x1e4>
90000a70:	ebbe 0302 	subs.w	r3, lr, r2
90000a74:	eb6c 0c07 	sbc.w	ip, ip, r7
90000a78:	3801      	subs	r0, #1
90000a7a:	46e1      	mov	r9, ip
90000a7c:	e796      	b.n	900009ac <__udivmoddi4+0x1e4>
90000a7e:	eba7 0909 	sub.w	r9, r7, r9
90000a82:	4449      	add	r1, r9
90000a84:	f1a8 0c02 	sub.w	ip, r8, #2
90000a88:	fbb1 f9fe 	udiv	r9, r1, lr
90000a8c:	fb09 f804 	mul.w	r8, r9, r4
90000a90:	e7db      	b.n	90000a4a <__udivmoddi4+0x282>
90000a92:	4673      	mov	r3, lr
90000a94:	e77f      	b.n	90000996 <__udivmoddi4+0x1ce>
90000a96:	4650      	mov	r0, sl
90000a98:	e766      	b.n	90000968 <__udivmoddi4+0x1a0>
90000a9a:	4608      	mov	r0, r1
90000a9c:	e6fd      	b.n	9000089a <__udivmoddi4+0xd2>
90000a9e:	443b      	add	r3, r7
90000aa0:	3a02      	subs	r2, #2
90000aa2:	e733      	b.n	9000090c <__udivmoddi4+0x144>
90000aa4:	f1ac 0c02 	sub.w	ip, ip, #2
90000aa8:	443b      	add	r3, r7
90000aaa:	e71c      	b.n	900008e6 <__udivmoddi4+0x11e>
90000aac:	4649      	mov	r1, r9
90000aae:	e79c      	b.n	900009ea <__udivmoddi4+0x222>
90000ab0:	eba1 0109 	sub.w	r1, r1, r9
90000ab4:	46c4      	mov	ip, r8
90000ab6:	fbb1 f9fe 	udiv	r9, r1, lr
90000aba:	fb09 f804 	mul.w	r8, r9, r4
90000abe:	e7c4      	b.n	90000a4a <__udivmoddi4+0x282>

90000ac0 <__aeabi_idiv0>:
90000ac0:	4770      	bx	lr
90000ac2:	bf00      	nop

90000ac4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack      /* set stack pointer */
90000ac4:	f8df d034 	ldr.w	sp, [pc, #52]	@ 90000afc <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
90000ac8:	2100      	movs	r1, #0
  b  LoopCopyDataInit
90000aca:	e003      	b.n	90000ad4 <LoopCopyDataInit>

90000acc <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
90000acc:	4b0c      	ldr	r3, [pc, #48]	@ (90000b00 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
90000ace:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
90000ad0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
90000ad2:	3104      	adds	r1, #4

90000ad4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
90000ad4:	480b      	ldr	r0, [pc, #44]	@ (90000b04 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
90000ad6:	4b0c      	ldr	r3, [pc, #48]	@ (90000b08 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
90000ad8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
90000ada:	429a      	cmp	r2, r3
  bcc  CopyDataInit
90000adc:	d3f6      	bcc.n	90000acc <CopyDataInit>
  ldr  r2, =_sbss
90000ade:	4a0b      	ldr	r2, [pc, #44]	@ (90000b0c <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
90000ae0:	e002      	b.n	90000ae8 <LoopFillZerobss>

90000ae2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
90000ae2:	2300      	movs	r3, #0
  str  r3, [r2], #4
90000ae4:	f842 3b04 	str.w	r3, [r2], #4

90000ae8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
90000ae8:	4b09      	ldr	r3, [pc, #36]	@ (90000b10 <LoopFillZerobss+0x28>)
  cmp  r2, r3
90000aea:	429a      	cmp	r2, r3
  bcc  FillZerobss
90000aec:	d3f9      	bcc.n	90000ae2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
90000aee:	f006 f93f 	bl	90006d70 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
90000af2:	f029 f88f 	bl	90029c14 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
90000af6:	f002 fea7 	bl	90003848 <main>
  bx  lr    
90000afa:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
90000afc:	24080000 	.word	0x24080000
  ldr  r3, =_sidata
90000b00:	9002dc0c 	.word	0x9002dc0c
  ldr  r0, =_sdata
90000b04:	24000000 	.word	0x24000000
  ldr  r3, =_edata
90000b08:	24000168 	.word	0x24000168
  ldr  r2, =_sbss
90000b0c:	24005d80 	.word	0x24005d80
  ldr  r3, = _ebss
90000b10:	240226cc 	.word	0x240226cc

90000b14 <ADC3_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
90000b14:	e7fe      	b.n	90000b14 <ADC3_IRQHandler>
	...

90000b18 <MX_LIBJPEG_Init>:
  */

  /* USER CODE BEGIN 3 */
  /* USER CODE END 3 */

}
90000b18:	4770      	bx	lr
90000b1a:	bf00      	nop

90000b1c <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
90000b1c:	4770      	bx	lr
90000b1e:	bf00      	nop

90000b20 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
90000b20:	b508      	push	{r3, lr}
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
90000b22:	f002 f915 	bl	90002d50 <touchgfx_components_init>
    touchgfx_init();
}
90000b26:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    touchgfx_init();
90000b2a:	f002 b893 	b.w	90002c54 <touchgfx_init>
90000b2e:	bf00      	nop

90000b30 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void* argument)
{
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
90000b30:	f002 b910 	b.w	90002d54 <touchgfx_taskEntry>

90000b34 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
90000b34:	6840      	ldr	r0, [r0, #4]
    }
90000b36:	4770      	bx	lr

90000b38 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
90000b38:	6041      	str	r1, [r0, #4]
    }
90000b3a:	4770      	bx	lr

90000b3c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    // Enable Debug Exception and Monitor Control Register
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000b3c:	f04f 20e0 	mov.w	r0, #3758153728	@ 0xe000e000
    // Enable Lock Access Register
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000b40:	4b08      	ldr	r3, [pc, #32]	@ (90000b64 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x28>)
90000b42:	4a09      	ldr	r2, [pc, #36]	@ (90000b68 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x2c>)
    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
90000b44:	f8d0 1dfc 	ldr.w	r1, [r0, #3580]	@ 0xdfc
90000b48:	f041 7180 	orr.w	r1, r1, #16777216	@ 0x1000000
90000b4c:	f8c0 1dfc 	str.w	r1, [r0, #3580]	@ 0xdfc
    *((volatile unsigned int*)0xE0001FB0) |= 0xC5ACCE55;
90000b50:	f8d3 1fb0 	ldr.w	r1, [r3, #4016]	@ 0xfb0
90000b54:	430a      	orrs	r2, r1
90000b56:	f8c3 2fb0 	str.w	r2, [r3, #4016]	@ 0xfb0
    // Enable Data Watchpoint and Trace Control Register
    *((volatile unsigned int*)0xE0001000) |= 1;
90000b5a:	681a      	ldr	r2, [r3, #0]
90000b5c:	f042 0201 	orr.w	r2, r2, #1
90000b60:	601a      	str	r2, [r3, #0]
}
90000b62:	4770      	bx	lr
90000b64:	e0001000 	.word	0xe0001000
90000b68:	c5acce55 	.word	0xc5acce55

90000b6c <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
90000b6c:	1a52      	subs	r2, r2, r1
90000b6e:	eb02 0253 	add.w	r2, r2, r3, lsr #1
}
90000b72:	fbb2 f0f3 	udiv	r0, r2, r3
90000b76:	4770      	bx	lr

90000b78 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
90000b78:	4b01      	ldr	r3, [pc, #4]	@ (90000b80 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
90000b7a:	6858      	ldr	r0, [r3, #4]
}
90000b7c:	4770      	bx	lr
90000b7e:	bf00      	nop
90000b80:	e0001000 	.word	0xe0001000

90000b84 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
90000b84:	4770      	bx	lr
90000b86:	bf00      	nop

90000b88 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
90000b88:	b510      	push	{r4, lr}
90000b8a:	4604      	mov	r4, r0
90000b8c:	210c      	movs	r1, #12
90000b8e:	f028 f975 	bl	90028e7c <_ZdlPvj>
90000b92:	4620      	mov	r0, r4
90000b94:	bd10      	pop	{r4, pc}
90000b96:	bf00      	nop

90000b98 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000b98:	6803      	ldr	r3, [r0, #0]
90000b9a:	4a0c      	ldr	r2, [pc, #48]	@ (90000bcc <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x34>)
90000b9c:	691b      	ldr	r3, [r3, #16]
{
90000b9e:	b510      	push	{r4, lr}
90000ba0:	4604      	mov	r4, r0
    if (active) //idle task sched out
90000ba2:	b149      	cbz	r1, 90000bb8 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x20>
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000ba4:	4293      	cmp	r3, r2
90000ba6:	d10d      	bne.n	90000bc4 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x2c>
    return *((volatile unsigned int*)0xE0001004);
90000ba8:	4b09      	ldr	r3, [pc, #36]	@ (90000bd0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000baa:	6858      	ldr	r0, [r3, #4]
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000bac:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
90000bae:	6863      	ldr	r3, [r4, #4]
90000bb0:	1a9b      	subs	r3, r3, r2
90000bb2:	4403      	add	r3, r0
90000bb4:	6063      	str	r3, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
90000bb6:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
90000bb8:	4293      	cmp	r3, r2
90000bba:	d105      	bne.n	90000bc8 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x30>
    return *((volatile unsigned int*)0xE0001004);
90000bbc:	4b04      	ldr	r3, [pc, #16]	@ (90000bd0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x38>)
90000bbe:	6858      	ldr	r0, [r3, #4]
        cc_in = getCPUCycles();
90000bc0:	60a0      	str	r0, [r4, #8]
}
90000bc2:	bd10      	pop	{r4, pc}
        uint32_t cc_temp = getCPUCycles() - cc_in;
90000bc4:	4798      	blx	r3
90000bc6:	e7f1      	b.n	90000bac <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x14>
        cc_in = getCPUCycles();
90000bc8:	4798      	blx	r3
90000bca:	e7f9      	b.n	90000bc0 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x28>
90000bcc:	90000b79 	.word	0x90000b79
90000bd0:	e0001000 	.word	0xe0001000

90000bd4 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
90000bd4:	4770      	bx	lr
90000bd6:	bf00      	nop

90000bd8 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "stm32h750b_discovery_ts.h"

void STM32TouchController::init()
{
90000bd8:	b500      	push	{lr}
90000bda:	b085      	sub	sp, #20
     *
     */
    TS_Init_t hTS;
    hTS.Orientation = TS_SWAP_XY;
    hTS.Accuracy = 0;
    hTS.Width = 480;
90000bdc:	2208      	movs	r2, #8
90000bde:	2300      	movs	r3, #0
    hTS.Height = 272;
    BSP_TS_Init(0, &hTS);
90000be0:	2000      	movs	r0, #0
90000be2:	4669      	mov	r1, sp
    hTS.Width = 480;
90000be4:	ed9f 7b06 	vldr	d7, [pc, #24]	@ 90000c00 <_ZN20STM32TouchController4initEv+0x28>
90000be8:	e9cd 2302 	strd	r2, r3, [sp, #8]
90000bec:	ed8d 7b00 	vstr	d7, [sp]
    BSP_TS_Init(0, &hTS);
90000bf0:	f005 ffd0 	bl	90006b94 <BSP_TS_Init>
}
90000bf4:	b005      	add	sp, #20
90000bf6:	f85d fb04 	ldr.w	pc, [sp], #4
90000bfa:	bf00      	nop
90000bfc:	f3af 8000 	nop.w
90000c00:	000001e0 	.word	0x000001e0
90000c04:	00000110 	.word	0x00000110

90000c08 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
90000c08:	b530      	push	{r4, r5, lr}
90000c0a:	b085      	sub	sp, #20
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    TS_State_t  TS_State = { 0 };
90000c0c:	2000      	movs	r0, #0
{
90000c0e:	460d      	mov	r5, r1
90000c10:	4614      	mov	r4, r2
    BSP_TS_GetState(0, &TS_State);
90000c12:	a901      	add	r1, sp, #4
    TS_State_t  TS_State = { 0 };
90000c14:	9001      	str	r0, [sp, #4]
90000c16:	e9cd 0002 	strd	r0, r0, [sp, #8]
    BSP_TS_GetState(0, &TS_State);
90000c1a:	f006 f849 	bl	90006cb0 <BSP_TS_GetState>
    if (TS_State.TouchDetected)
90000c1e:	9801      	ldr	r0, [sp, #4]
90000c20:	b120      	cbz	r0, 90000c2c <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        x = TS_State.TouchX;
        y = TS_State.TouchY;
        return true;
90000c22:	2001      	movs	r0, #1
        y = TS_State.TouchY;
90000c24:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
        x = TS_State.TouchX;
90000c28:	602a      	str	r2, [r5, #0]
        y = TS_State.TouchY;
90000c2a:	6023      	str	r3, [r4, #0]
    }

    return false;
}
90000c2c:	b005      	add	sp, #20
90000c2e:	bd30      	pop	{r4, r5, pc}

90000c30 <_ZN20STM32TouchControllerD0Ev>:
90000c30:	b510      	push	{r4, lr}
90000c32:	4604      	mov	r4, r0
90000c34:	2104      	movs	r1, #4
90000c36:	f028 f921 	bl	90028e7c <_ZdlPvj>
90000c3a:	4620      	mov	r0, r4
90000c3c:	bd10      	pop	{r4, pc}
90000c3e:	bf00      	nop

90000c40 <_ZN8touchgfx4GPIO4initEv>:
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000c40:	2108      	movs	r1, #8
90000c42:	4810      	ldr	r0, [pc, #64]	@ (90000c84 <_ZN8touchgfx4GPIO4initEv+0x44>)
{
90000c44:	b508      	push	{r3, lr}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000c46:	f006 fec3 	bl	900079d0 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c4a:	2801      	cmp	r0, #1
90000c4c:	d101      	bne.n	90000c52 <_ZN8touchgfx4GPIO4initEv+0x12>
            GPIO_InvertedLevels[id] = 1;
90000c4e:	4b0e      	ldr	r3, [pc, #56]	@ (90000c88 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000c50:	6018      	str	r0, [r3, #0]
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000c52:	2180      	movs	r1, #128	@ 0x80
90000c54:	480d      	ldr	r0, [pc, #52]	@ (90000c8c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000c56:	f006 febb 	bl	900079d0 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c5a:	2801      	cmp	r0, #1
90000c5c:	d101      	bne.n	90000c62 <_ZN8touchgfx4GPIO4initEv+0x22>
            GPIO_InvertedLevels[id] = 1;
90000c5e:	4b0a      	ldr	r3, [pc, #40]	@ (90000c88 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000c60:	6058      	str	r0, [r3, #4]
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000c62:	2140      	movs	r1, #64	@ 0x40
90000c64:	4809      	ldr	r0, [pc, #36]	@ (90000c8c <_ZN8touchgfx4GPIO4initEv+0x4c>)
90000c66:	f006 feb3 	bl	900079d0 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c6a:	2801      	cmp	r0, #1
90000c6c:	d101      	bne.n	90000c72 <_ZN8touchgfx4GPIO4initEv+0x32>
            GPIO_InvertedLevels[id] = 1;
90000c6e:	4b06      	ldr	r3, [pc, #24]	@ (90000c88 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000c70:	6098      	str	r0, [r3, #8]
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000c72:	2140      	movs	r1, #64	@ 0x40
90000c74:	4806      	ldr	r0, [pc, #24]	@ (90000c90 <_ZN8touchgfx4GPIO4initEv+0x50>)
90000c76:	f006 feab 	bl	900079d0 <HAL_GPIO_ReadPin>
        if (GPIO::get(static_cast<GPIO_ID>(id)))
90000c7a:	2801      	cmp	r0, #1
90000c7c:	d101      	bne.n	90000c82 <_ZN8touchgfx4GPIO4initEv+0x42>
            GPIO_InvertedLevels[id] = 1;
90000c7e:	4b02      	ldr	r3, [pc, #8]	@ (90000c88 <_ZN8touchgfx4GPIO4initEv+0x48>)
90000c80:	60d8      	str	r0, [r3, #12]
}
90000c82:	bd08      	pop	{r3, pc}
90000c84:	58021800 	.word	0x58021800
90000c88:	24005d9c 	.word	0x24005d9c
90000c8c:	58020400 	.word	0x58020400
90000c90:	58020000 	.word	0x58020000

90000c94 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
    switch (id)
90000c94:	2803      	cmp	r0, #3
90000c96:	d827      	bhi.n	90000ce8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>
90000c98:	e8df f000 	tbb	[pc, r0]
90000c9c:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
90000ca0:	4b12      	ldr	r3, [pc, #72]	@ (90000cec <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000ca2:	2140      	movs	r1, #64	@ 0x40
90000ca4:	4812      	ldr	r0, [pc, #72]	@ (90000cf0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x5c>)
90000ca6:	68da      	ldr	r2, [r3, #12]
90000ca8:	fab2 f282 	clz	r2, r2
90000cac:	0952      	lsrs	r2, r2, #5
90000cae:	f006 be95 	b.w	900079dc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
90000cb2:	4b0e      	ldr	r3, [pc, #56]	@ (90000cec <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000cb4:	2140      	movs	r1, #64	@ 0x40
90000cb6:	480f      	ldr	r0, [pc, #60]	@ (90000cf4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000cb8:	689a      	ldr	r2, [r3, #8]
90000cba:	fab2 f282 	clz	r2, r2
90000cbe:	0952      	lsrs	r2, r2, #5
90000cc0:	f006 be8c 	b.w	900079dc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
90000cc4:	4b09      	ldr	r3, [pc, #36]	@ (90000cec <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000cc6:	2180      	movs	r1, #128	@ 0x80
90000cc8:	480a      	ldr	r0, [pc, #40]	@ (90000cf4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x60>)
90000cca:	685a      	ldr	r2, [r3, #4]
90000ccc:	fab2 f282 	clz	r2, r2
90000cd0:	0952      	lsrs	r2, r2, #5
90000cd2:	f006 be83 	b.w	900079dc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
90000cd6:	4b05      	ldr	r3, [pc, #20]	@ (90000cec <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
90000cd8:	2108      	movs	r1, #8
90000cda:	4807      	ldr	r0, [pc, #28]	@ (90000cf8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x64>)
90000cdc:	681a      	ldr	r2, [r3, #0]
90000cde:	fab2 f282 	clz	r2, r2
90000ce2:	0952      	lsrs	r2, r2, #5
90000ce4:	f006 be7a 	b.w	900079dc <HAL_GPIO_WritePin>
}
90000ce8:	4770      	bx	lr
90000cea:	bf00      	nop
90000cec:	24005d9c 	.word	0x24005d9c
90000cf0:	58020000 	.word	0x58020000
90000cf4:	58020400 	.word	0x58020400
90000cf8:	58021800 	.word	0x58021800

90000cfc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
    switch (id)
90000cfc:	2803      	cmp	r0, #3
90000cfe:	d827      	bhi.n	90000d50 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>
90000d00:	e8df f000 	tbb	[pc, r0]
90000d04:	020b141d 	.word	0x020b141d
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
90000d08:	4b12      	ldr	r3, [pc, #72]	@ (90000d54 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000d0a:	2140      	movs	r1, #64	@ 0x40
90000d0c:	4812      	ldr	r0, [pc, #72]	@ (90000d58 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x5c>)
90000d0e:	68da      	ldr	r2, [r3, #12]
90000d10:	3a00      	subs	r2, #0
90000d12:	bf18      	it	ne
90000d14:	2201      	movne	r2, #1
90000d16:	f006 be61 	b.w	900079dc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
90000d1a:	4b0e      	ldr	r3, [pc, #56]	@ (90000d54 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000d1c:	2140      	movs	r1, #64	@ 0x40
90000d1e:	480f      	ldr	r0, [pc, #60]	@ (90000d5c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90000d20:	689a      	ldr	r2, [r3, #8]
90000d22:	3a00      	subs	r2, #0
90000d24:	bf18      	it	ne
90000d26:	2201      	movne	r2, #1
90000d28:	f006 be58 	b.w	900079dc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
90000d2c:	4b09      	ldr	r3, [pc, #36]	@ (90000d54 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000d2e:	2180      	movs	r1, #128	@ 0x80
90000d30:	480a      	ldr	r0, [pc, #40]	@ (90000d5c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x60>)
90000d32:	685a      	ldr	r2, [r3, #4]
90000d34:	3a00      	subs	r2, #0
90000d36:	bf18      	it	ne
90000d38:	2201      	movne	r2, #1
90000d3a:	f006 be4f 	b.w	900079dc <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
90000d3e:	4b05      	ldr	r3, [pc, #20]	@ (90000d54 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
90000d40:	2108      	movs	r1, #8
90000d42:	4807      	ldr	r0, [pc, #28]	@ (90000d60 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x64>)
90000d44:	681a      	ldr	r2, [r3, #0]
90000d46:	3a00      	subs	r2, #0
90000d48:	bf18      	it	ne
90000d4a:	2201      	movne	r2, #1
90000d4c:	f006 be46 	b.w	900079dc <HAL_GPIO_WritePin>
}
90000d50:	4770      	bx	lr
90000d52:	bf00      	nop
90000d54:	24005d9c 	.word	0x24005d9c
90000d58:	58020000 	.word	0x58020000
90000d5c:	58020400 	.word	0x58020400
90000d60:	58021800 	.word	0x58021800

90000d64 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
    switch (id)
90000d64:	2803      	cmp	r0, #3
90000d66:	d813      	bhi.n	90000d90 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>
90000d68:	e8df f000 	tbb	[pc, r0]
90000d6c:	02060a0e 	.word	0x02060a0e
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
90000d70:	2140      	movs	r1, #64	@ 0x40
90000d72:	4808      	ldr	r0, [pc, #32]	@ (90000d94 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x30>)
90000d74:	f006 be36 	b.w	900079e4 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
90000d78:	2140      	movs	r1, #64	@ 0x40
90000d7a:	4807      	ldr	r0, [pc, #28]	@ (90000d98 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000d7c:	f006 be32 	b.w	900079e4 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
90000d80:	2180      	movs	r1, #128	@ 0x80
90000d82:	4805      	ldr	r0, [pc, #20]	@ (90000d98 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x34>)
90000d84:	f006 be2e 	b.w	900079e4 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
90000d88:	2108      	movs	r1, #8
90000d8a:	4804      	ldr	r0, [pc, #16]	@ (90000d9c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x38>)
90000d8c:	f006 be2a 	b.w	900079e4 <HAL_GPIO_TogglePin>
}
90000d90:	4770      	bx	lr
90000d92:	bf00      	nop
90000d94:	58020000 	.word	0x58020000
90000d98:	58020400 	.word	0x58020400
90000d9c:	58021800 	.word	0x58021800

90000da0 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType()
    {
        return DMA_TYPE_GENERIC;
    }
90000da0:	2000      	movs	r0, #0
90000da2:	4770      	bx	lr

90000da4 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
90000da4:	2301      	movs	r3, #1
        requestedOrientation = orientation;
90000da6:	f880 1078 	strb.w	r1, [r0, #120]	@ 0x78
        displayOrientationChangeRequested = true;
90000daa:	f880 3079 	strb.w	r3, [r0, #121]	@ 0x79
    }
90000dae:	4770      	bx	lr

90000db0 <_ZN8touchgfx3HAL11submitGPU2DEv>:
     *
     * Only implemented on systems with the GPU2D IP.
     */
    virtual void submitGPU2D()
    {
    }
90000db0:	4770      	bx	lr
90000db2:	bf00      	nop

90000db4 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
90000db4:	2000      	movs	r0, #0
90000db6:	4770      	bx	lr

90000db8 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000db8:	1e0a      	subs	r2, r1, #0
90000dba:	4b03      	ldr	r3, [pc, #12]	@ (90000dc8 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000dbc:	6441      	str	r1, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000dbe:	bf18      	it	ne
90000dc0:	2201      	movne	r2, #1
90000dc2:	701a      	strb	r2, [r3, #0]
    }
90000dc4:	4770      	bx	lr
90000dc6:	bf00      	nop
90000dc8:	2402198b 	.word	0x2402198b

90000dcc <_ZN8touchgfx3HAL16waitForLTDCLinesEt>:
     *
     * @param numberOfLines Number of lines to wait.
     */
    virtual void waitForLTDCLines(uint16_t numberOfLines)
    {
    }
90000dcc:	4770      	bx	lr
90000dce:	bf00      	nop

90000dd0 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
90000dd0:	2000      	movs	r0, #0
90000dd2:	4770      	bx	lr

90000dd4 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
90000dd4:	6b83      	ldr	r3, [r0, #56]	@ 0x38
    virtual void taskDelay(uint16_t ms)
90000dd6:	4608      	mov	r0, r1
        if (taskDelayFunc)
90000dd8:	b103      	cbz	r3, 90000ddc <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
90000dda:	4718      	bx	r3
        }
    }
90000ddc:	4770      	bx	lr
90000dde:	bf00      	nop

90000de0 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
90000de0:	f64f 70ff 	movw	r0, #65535	@ 0xffff
90000de4:	4770      	bx	lr
90000de6:	bf00      	nop

90000de8 <_ZN8touchgfx3HAL25partialLTDCDeadlineMissedEv>:
     * This empty function can be overridden to e.g. output this error condition
     * on a pin.
     */
    virtual void partialLTDCDeadlineMissed()
    {
    }
90000de8:	4770      	bx	lr
90000dea:	bf00      	nop

90000dec <_ZN8touchgfx3HAL22InvalidateTextureCacheEv>:
     * Called on every tick before drawing into the framebuffer to enable
     * invalidation of any caches that may be incoherent with main memory.
     */
    virtual void InvalidateTextureCache()
    {
    }
90000dec:	4770      	bx	lr
90000dee:	bf00      	nop

90000df0 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
90000df0:	4770      	bx	lr
90000df2:	bf00      	nop

90000df4 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
90000df4:	b510      	push	{r4, lr}
90000df6:	4604      	mov	r4, r0
        swapFrameBuffers();
90000df8:	f010 f8ca 	bl	90010f90 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90000dfc:	6823      	ldr	r3, [r4, #0]
90000dfe:	4620      	mov	r0, r4
90000e00:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
    }
90000e04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
90000e08:	4718      	bx	r3
90000e0a:	bf00      	nop

90000e0c <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
90000e0c:	f002 b8c6 	b.w	90002f9c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

90000e10 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
90000e10:	f002 b8ca 	b.w	90002fa8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

90000e14 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
90000e14:	b510      	push	{r4, lr}
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
90000e16:	f002 f961 	bl	900030dc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    uint32_t ccsidr;
    uint32_t sets;
    uint32_t ways;

    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
90000e1a:	4812      	ldr	r0, [pc, #72]	@ (90000e64 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x50>)
90000e1c:	2300      	movs	r3, #0
90000e1e:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
90000e22:	f3bf 8f4f 	dsb	sy
    __DSB();

    ccsidr = SCB->CCSIDR;
90000e26:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
                                            /* clean & invalidate D-Cache */
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
    do {
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
      do {
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000e2a:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90000e2e:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000e32:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90000e36:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000e3a:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90000e3e:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000e40:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
        #if defined ( __CC_ARM )
          __schedule_barrier();
        #endif
      } while (ways-- != 0U);
90000e44:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90000e46:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
90000e4a:	1c5a      	adds	r2, r3, #1
90000e4c:	d1f8      	bne.n	90000e40 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x2c>
    } while(sets-- != 0U);
90000e4e:	f1ac 0c20 	sub.w	ip, ip, #32
90000e52:	f11c 0f20 	cmn.w	ip, #32
90000e56:	d1f0      	bne.n	90000e3a <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE+0x26>
90000e58:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90000e5c:	f3bf 8f6f 	isb	sy
    // If the framebuffer is placed in Write Through cached memory (e.g. SRAM) then we need
    // to flush the Dcache to make sure framebuffer is correct in RAM. That's done
    // using SCB_CleanInvalidateDCache().

    SCB_CleanInvalidateDCache();
}
90000e60:	bd10      	pop	{r4, pc}
90000e62:	bf00      	nop
90000e64:	e000ed00 	.word	0xe000ed00

90000e68 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
90000e68:	f002 b874 	b.w	90002f54 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

90000e6c <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
90000e6c:	f002 b9ba 	b.w	900031e4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

90000e70 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
90000e70:	f002 b9a4 	b.w	900031bc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

90000e74 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
90000e74:	f002 b878 	b.w	90002f68 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

90000e78 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
90000e78:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e7a:	4b09      	ldr	r3, [pc, #36]	@ (90000ea0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
90000e7c:	881b      	ldrh	r3, [r3, #0]
90000e7e:	428b      	cmp	r3, r1
90000e80:	d808      	bhi.n	90000e94 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
90000e82:	4b08      	ldr	r3, [pc, #32]	@ (90000ea4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
90000e84:	881b      	ldrh	r3, [r3, #0]
90000e86:	4293      	cmp	r3, r2
90000e88:	d804      	bhi.n	90000e94 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1c>
        FRAME_BUFFER_WIDTH = width;
90000e8a:	4807      	ldr	r0, [pc, #28]	@ (90000ea8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
        FRAME_BUFFER_HEIGHT = height;
90000e8c:	4b07      	ldr	r3, [pc, #28]	@ (90000eac <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
        FRAME_BUFFER_WIDTH = width;
90000e8e:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = height;
90000e90:	801a      	strh	r2, [r3, #0]
    }
90000e92:	bd08      	pop	{r3, pc}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
90000e94:	4b06      	ldr	r3, [pc, #24]	@ (90000eb0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
90000e96:	21a3      	movs	r1, #163	@ 0xa3
90000e98:	4a06      	ldr	r2, [pc, #24]	@ (90000eb4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
90000e9a:	4807      	ldr	r0, [pc, #28]	@ (90000eb8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
90000e9c:	f028 fb64 	bl	90029568 <__assert_func>
90000ea0:	24021980 	.word	0x24021980
90000ea4:	24021982 	.word	0x24021982
90000ea8:	24021986 	.word	0x24021986
90000eac:	24021988 	.word	0x24021988
90000eb0:	9002a660 	.word	0x9002a660
90000eb4:	9002a6c4 	.word	0x9002a6c4
90000eb8:	9002a708 	.word	0x9002a708

90000ebc <_ZN20TouchGFXGeneratedHAL17unlockFrameBufferEv>:
     * This specialization is marks DMA2D as un-reserved by the framwork.
     * @see HAL::unlockFrameBuffer
     */
    virtual void unlockFrameBuffer()
    {
        HAL::unlockFrameBuffer();
90000ebc:	f00f bbb4 	b.w	90010628 <_ZN8touchgfx3HAL17unlockFrameBufferEv>

90000ec0 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
        HAL::flushFrameBuffer();
90000ec0:	f00f ba7a 	b.w	900103b8 <_ZN8touchgfx3HAL16flushFrameBufferEv>

90000ec4 <_ZN11TouchGFXHALD0Ev>:
90000ec4:	b510      	push	{r4, lr}
90000ec6:	4604      	mov	r4, r0
90000ec8:	2190      	movs	r1, #144	@ 0x90
90000eca:	f027 ffd7 	bl	90028e7c <_ZdlPvj>
90000ece:	4620      	mov	r0, r4
90000ed0:	bd10      	pop	{r4, pc}
90000ed2:	bf00      	nop

90000ed4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
        if (requestedOrientation != nativeDisplayOrientation)
90000ed4:	f890 c078 	ldrb.w	ip, [r0, #120]	@ 0x78
90000ed8:	f890 1034 	ldrb.w	r1, [r0, #52]	@ 0x34
            if (DISPLAY_ROTATION == rotate0)
90000edc:	4b0b      	ldr	r3, [pc, #44]	@ (90000f0c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x38>)
        if (requestedOrientation != nativeDisplayOrientation)
90000ede:	458c      	cmp	ip, r1
            if (DISPLAY_ROTATION == rotate0)
90000ee0:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
90000ee2:	d00b      	beq.n	90000efc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x28>
            if (DISPLAY_ROTATION == rotate0)
90000ee4:	b94a      	cbnz	r2, 90000efa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
                const uint16_t tmp = DISPLAY_HEIGHT;
90000ee6:	4a0a      	ldr	r2, [pc, #40]	@ (90000f10 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
                DISPLAY_ROTATION = rotate90;
90000ee8:	f04f 0c01 	mov.w	ip, #1
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000eec:	4909      	ldr	r1, [pc, #36]	@ (90000f14 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
90000eee:	8810      	ldrh	r0, [r2, #0]
            DISPLAY_ROTATION = rotate0;
90000ef0:	f883 c000 	strb.w	ip, [r3]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ef4:	880b      	ldrh	r3, [r1, #0]
            DISPLAY_WIDTH = tmp;
90000ef6:	8008      	strh	r0, [r1, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000ef8:	8013      	strh	r3, [r2, #0]
    }
90000efa:	4770      	bx	lr
        else if (DISPLAY_ROTATION != rotate0)
90000efc:	2a00      	cmp	r2, #0
90000efe:	d0fc      	beq.n	90000efa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            const uint16_t tmp = DISPLAY_HEIGHT;
90000f00:	4a03      	ldr	r2, [pc, #12]	@ (90000f10 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
            DISPLAY_ROTATION = rotate0;
90000f02:	f04f 0c00 	mov.w	ip, #0
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
90000f06:	4903      	ldr	r1, [pc, #12]	@ (90000f14 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
90000f08:	e7f1      	b.n	90000eee <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x1a>
90000f0a:	bf00      	nop
90000f0c:	24021984 	.word	0x24021984
90000f10:	24021982 	.word	0x24021982
90000f14:	24021980 	.word	0x24021980

90000f18 <_ZN8touchgfx3HAL11getBlitCapsEv>:
    virtual BlitOperations getBlitCaps()
90000f18:	4603      	mov	r3, r0
        if (useDMAAcceleration)
90000f1a:	f890 007a 	ldrb.w	r0, [r0, #122]	@ 0x7a
90000f1e:	b118      	cbz	r0, 90000f28 <_ZN8touchgfx3HAL11getBlitCapsEv+0x10>
90000f20:	6858      	ldr	r0, [r3, #4]
            return dma.getBlitCaps();
90000f22:	6803      	ldr	r3, [r0, #0]
90000f24:	681b      	ldr	r3, [r3, #0]
90000f26:	4718      	bx	r3
    }
90000f28:	4770      	bx	lr
90000f2a:	bf00      	nop

90000f2c <_ZN8touchgfx3HAL10getDMATypeEv>:
        return dma.getDMAType();
90000f2c:	6840      	ldr	r0, [r0, #4]
90000f2e:	4a04      	ldr	r2, [pc, #16]	@ (90000f40 <_ZN8touchgfx3HAL10getDMATypeEv+0x14>)
90000f30:	6803      	ldr	r3, [r0, #0]
90000f32:	699b      	ldr	r3, [r3, #24]
90000f34:	4293      	cmp	r3, r2
90000f36:	d101      	bne.n	90000f3c <_ZN8touchgfx3HAL10getDMATypeEv+0x10>
    }
90000f38:	2000      	movs	r0, #0
90000f3a:	4770      	bx	lr
        return dma.getDMAType();
90000f3c:	4718      	bx	r3
90000f3e:	bf00      	nop
90000f40:	90000da1 	.word	0x90000da1

90000f44 <_ZN11TouchGFXHAL10initializeEv>:
{
90000f44:	b538      	push	{r3, r4, r5, lr}
90000f46:	4604      	mov	r4, r0
    TouchGFXGeneratedHAL::initialize();
90000f48:	f002 face 	bl	900034e8 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000f4c:	4a0b      	ldr	r2, [pc, #44]	@ (90000f7c <_ZN11TouchGFXHAL10initializeEv+0x38>)
90000f4e:	6823      	ldr	r3, [r4, #0]
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f50:	490b      	ldr	r1, [pc, #44]	@ (90000f80 <_ZN11TouchGFXHAL10initializeEv+0x3c>)
90000f52:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
90000f56:	4293      	cmp	r3, r2
90000f58:	d10d      	bne.n	90000f76 <_ZN11TouchGFXHAL10initializeEv+0x32>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f5a:	4b0a      	ldr	r3, [pc, #40]	@ (90000f84 <_ZN11TouchGFXHAL10initializeEv+0x40>)
90000f5c:	2201      	movs	r2, #1
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000f5e:	6461      	str	r1, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000f60:	701a      	strb	r2, [r3, #0]
    instrumentation.init();
90000f62:	f104 0584 	add.w	r5, r4, #132	@ 0x84
90000f66:	4628      	mov	r0, r5
90000f68:	f7ff fde8 	bl	90000b3c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
90000f6c:	2301      	movs	r3, #1
        mcuInstrumentation = mcuInstr;
90000f6e:	6125      	str	r5, [r4, #16]
        updateMCULoad = enabled;
90000f70:	f884 3070 	strb.w	r3, [r4, #112]	@ 0x70
}
90000f74:	bd38      	pop	{r3, r4, r5, pc}
    setAnimationStorage((void*)animationBuffer);    // Add animation storage
90000f76:	4620      	mov	r0, r4
90000f78:	4798      	blx	r3
90000f7a:	e7f2      	b.n	90000f62 <_ZN11TouchGFXHAL10initializeEv+0x1e>
90000f7c:	90000db9 	.word	0x90000db9
90000f80:	d0000000 	.word	0xd0000000
90000f84:	2402198b 	.word	0x2402198b

90000f88 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000f88:	b1a9      	cbz	r1, 90000fb6 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2e>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90000f8a:	6402      	str	r2, [r0, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f8c:	3a00      	subs	r2, #0
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90000f8e:	63c1      	str	r1, [r0, #60]	@ 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90000f90:	bf18      	it	ne
90000f92:	2201      	movne	r2, #1
90000f94:	490c      	ldr	r1, [pc, #48]	@ (90000fc8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x40>)
90000f96:	700a      	strb	r2, [r1, #0]
        setAnimationStorage(animationStorage);
90000f98:	6802      	ldr	r2, [r0, #0]
90000f9a:	490c      	ldr	r1, [pc, #48]	@ (90000fcc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x44>)
90000f9c:	f8d2 2090 	ldr.w	r2, [r2, #144]	@ 0x90
90000fa0:	428a      	cmp	r2, r1
90000fa2:	d106      	bne.n	90000fb2 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x2a>
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000fa4:	1e19      	subs	r1, r3, #0
90000fa6:	4a0a      	ldr	r2, [pc, #40]	@ (90000fd0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x48>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90000fa8:	6443      	str	r3, [r0, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
90000faa:	bf18      	it	ne
90000fac:	2101      	movne	r1, #1
90000fae:	7011      	strb	r1, [r2, #0]
90000fb0:	4770      	bx	lr
        setAnimationStorage(animationStorage);
90000fb2:	4619      	mov	r1, r3
90000fb4:	4710      	bx	r2
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000fb6:	4b07      	ldr	r3, [pc, #28]	@ (90000fd4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x4c>)
90000fb8:	f240 21ff 	movw	r1, #767	@ 0x2ff
90000fbc:	4a06      	ldr	r2, [pc, #24]	@ (90000fd8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x50>)
90000fbe:	4807      	ldr	r0, [pc, #28]	@ (90000fdc <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
90000fc0:	b510      	push	{r4, lr}
        assert(frameBuffer != 0 && "A framebuffer address must be set");
90000fc2:	f028 fad1 	bl	90029568 <__assert_func>
90000fc6:	bf00      	nop
90000fc8:	2402198a 	.word	0x2402198a
90000fcc:	90000db9 	.word	0x90000db9
90000fd0:	2402198b 	.word	0x2402198b
90000fd4:	9002a750 	.word	0x9002a750
90000fd8:	9002a788 	.word	0x9002a788
90000fdc:	9002a708 	.word	0x9002a708

90000fe0 <_ZN11TouchGFXHAL9taskEntryEv>:
{
90000fe0:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
90000fe2:	6803      	ldr	r3, [r0, #0]
{
90000fe4:	4604      	mov	r4, r0
90000fe6:	4d14      	ldr	r5, [pc, #80]	@ (90001038 <_ZN11TouchGFXHAL9taskEntryEv+0x58>)
    enableLCDControllerInterrupt();
90000fe8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90000fec:	4798      	blx	r3
    enableInterrupts();
90000fee:	6823      	ldr	r3, [r4, #0]
90000ff0:	4620      	mov	r0, r4
90000ff2:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90000ff4:	4798      	blx	r3
    OSWrappers::waitForVSync();
90000ff6:	f001 f9f1 	bl	900023dc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
90000ffa:	6823      	ldr	r3, [r4, #0]
90000ffc:	4620      	mov	r0, r4
90000ffe:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90001000:	4798      	blx	r3
    HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_SET);
90001002:	2201      	movs	r2, #1
90001004:	2180      	movs	r1, #128	@ 0x80
90001006:	480d      	ldr	r0, [pc, #52]	@ (9000103c <_ZN11TouchGFXHAL9taskEntryEv+0x5c>)
90001008:	f006 fce8 	bl	900079dc <HAL_GPIO_WritePin>
    HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
9000100c:	2201      	movs	r2, #1
9000100e:	480c      	ldr	r0, [pc, #48]	@ (90001040 <_ZN11TouchGFXHAL9taskEntryEv+0x60>)
90001010:	4611      	mov	r1, r2
90001012:	f006 fce3 	bl	900079dc <HAL_GPIO_WritePin>
        OSWrappers::waitForVSync();
90001016:	f001 f9e1 	bl	900023dc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
9000101a:	6823      	ldr	r3, [r4, #0]
        swapFrameBuffers();
9000101c:	4620      	mov	r0, r4
9000101e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
90001020:	42ab      	cmp	r3, r5
90001022:	d107      	bne.n	90001034 <_ZN11TouchGFXHAL9taskEntryEv+0x54>
90001024:	f00f ffb4 	bl	90010f90 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
90001028:	6823      	ldr	r3, [r4, #0]
9000102a:	4620      	mov	r0, r4
9000102c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
90001030:	4798      	blx	r3
    }
90001032:	e7f0      	b.n	90001016 <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90001034:	4798      	blx	r3
90001036:	e7ee      	b.n	90001016 <_ZN11TouchGFXHAL9taskEntryEv+0x36>
90001038:	90000df5 	.word	0x90000df5
9000103c:	58020c00 	.word	0x58020c00
90001040:	58022800 	.word	0x58022800

90001044 <IdleTaskHook>:

extern "C"
{
    portBASE_TYPE IdleTaskHook(void* p)
    {
        if ((int)p) //idle task sched out
90001044:	4601      	mov	r1, r0
    {
90001046:	b508      	push	{r3, lr}
        return instance;
90001048:	4b05      	ldr	r3, [pc, #20]	@ (90001060 <IdleTaskHook+0x1c>)
9000104a:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
9000104c:	b121      	cbz	r1, 90001058 <IdleTaskHook+0x14>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
9000104e:	2101      	movs	r1, #1
90001050:	f00f ffb8 	bl	90010fc4 <_ZN8touchgfx3HAL12setMCUActiveEb>
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
        }
        return pdTRUE;
    }
90001054:	2001      	movs	r0, #1
90001056:	bd08      	pop	{r3, pc}
            touchgfx::HAL::getInstance()->setMCUActive(false);
90001058:	f00f ffb4 	bl	90010fc4 <_ZN8touchgfx3HAL12setMCUActiveEb>
    }
9000105c:	2001      	movs	r0, #1
9000105e:	bd08      	pop	{r3, pc}
90001060:	2402198c 	.word	0x2402198c

90001064 <_ZNK20HardwareMJPEGDecoder21getCurrentFrameNumberEv>:
    virtual bool decodeThumbnail(uint32_t frameno, uint8_t* buffer, uint16_t width, uint16_t height);
    virtual void gotoFrame(uint32_t frameno);
    virtual uint32_t getCurrentFrameNumber() const
    {
        return frameNumber;
    }
90001064:	6940      	ldr	r0, [r0, #20]
90001066:	4770      	bx	lr

90001068 <_ZN20HardwareMJPEGDecoder12getLastErrorEv>:
    }

    virtual AVIErrors getLastError()
    {
        return lastError;
    }
90001068:	f890 0040 	ldrb.w	r0, [r0, #64]	@ 0x40
9000106c:	4770      	bx	lr
9000106e:	bf00      	nop

90001070 <_ZN20HardwareMJPEGDecoder8hasVideoEv>:
    readVideoHeader();
}

bool HardwareMJPEGDecoder::hasVideo()
{
    return (reader != 0) || (movieData != 0);
90001070:	6b03      	ldr	r3, [r0, #48]	@ 0x30
90001072:	b10b      	cbz	r3, 90001078 <_ZN20HardwareMJPEGDecoder8hasVideoEv+0x8>
90001074:	2001      	movs	r0, #1
}
90001076:	4770      	bx	lr
    return (reader != 0) || (movieData != 0);
90001078:	6ac0      	ldr	r0, [r0, #44]	@ 0x2c
9000107a:	3800      	subs	r0, #0
9000107c:	bf18      	it	ne
9000107e:	2001      	movne	r0, #1
90001080:	4770      	bx	lr
90001082:	bf00      	nop

90001084 <_ZN20HardwareMJPEGDecoder17getNumberOfFramesEv>:
}

uint32_t HardwareMJPEGDecoder::getNumberOfFrames()
{
    return videoInfo.number_of_frames;
}
90001084:	6880      	ldr	r0, [r0, #8]
90001086:	4770      	bx	lr

90001088 <_ZN20HardwareMJPEGDecoder14setRepeatVideoEb>:

void HardwareMJPEGDecoder::setRepeatVideo(bool repeat)
{

}
90001088:	4770      	bx	lr
9000108a:	bf00      	nop

9000108c <_ZN20HardwareMJPEGDecoder12getVideoInfoEPN8touchgfx16VideoInformationE>:

void HardwareMJPEGDecoder::getVideoInfo(touchgfx::VideoInformation* data)
{
    *data = videoInfo;
9000108c:	3004      	adds	r0, #4
{
9000108e:	468c      	mov	ip, r1
    *data = videoInfo;
90001090:	c80f      	ldmia	r0, {r0, r1, r2, r3}
90001092:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
}
90001096:	4770      	bx	lr

90001098 <_ZN20HardwareMJPEGDecoderD1Ev>:
class HardwareMJPEGDecoder : public MJPEGDecoder
90001098:	4770      	bx	lr
9000109a:	bf00      	nop

9000109c <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt>:
{
9000109c:	b508      	push	{r3, lr}
    assert(0);
9000109e:	4a03      	ldr	r2, [pc, #12]	@ (900010ac <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x10>)
900010a0:	f44f 71fc 	mov.w	r1, #504	@ 0x1f8
900010a4:	4b02      	ldr	r3, [pc, #8]	@ (900010b0 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x14>)
900010a6:	4803      	ldr	r0, [pc, #12]	@ (900010b4 <_ZN20HardwareMJPEGDecoder15decodeThumbnailEmPhtt+0x18>)
900010a8:	f028 fa5e 	bl	90029568 <__assert_func>
900010ac:	9002a7dc 	.word	0x9002a7dc
900010b0:	9002a7d8 	.word	0x9002a7d8
900010b4:	9002a838 	.word	0x9002a838

900010b8 <_ZN20HardwareMJPEGDecoderD0Ev>:
900010b8:	b510      	push	{r4, lr}
900010ba:	4604      	mov	r4, r0
900010bc:	2148      	movs	r1, #72	@ 0x48
900010be:	f027 fedd 	bl	90028e7c <_ZdlPvj>
900010c2:	4620      	mov	r0, r4
900010c4:	bd10      	pop	{r4, pc}
900010c6:	bf00      	nop

900010c8 <_ZN20HardwareMJPEGDecoder9gotoFrameEm>:
{
900010c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if (frameNumber > getNumberOfFrames())
900010ca:	6803      	ldr	r3, [r0, #0]
900010cc:	2901      	cmp	r1, #1
900010ce:	4d30      	ldr	r5, [pc, #192]	@ (90001190 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc8>)
{
900010d0:	4604      	mov	r4, r0
    if (frameNumber > getNumberOfFrames())
900010d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900010d4:	bf38      	it	cc
900010d6:	2101      	movcc	r1, #1
900010d8:	42ab      	cmp	r3, r5
900010da:	460e      	mov	r6, r1
900010dc:	d13f      	bne.n	9000115e <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x96>
    return videoInfo.number_of_frames;
900010de:	6885      	ldr	r5, [r0, #8]
    if (frameNumber > getNumberOfFrames())
900010e0:	42a9      	cmp	r1, r5
900010e2:	d947      	bls.n	90001174 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010e4:	1e6b      	subs	r3, r5, #1
900010e6:	69e2      	ldr	r2, [r4, #28]
    if (reader != 0)
900010e8:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010ea:	eb02 1703 	add.w	r7, r2, r3, lsl #4
    if (reader != 0)
900010ee:	b338      	cbz	r0, 90001140 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        if (length > aviBufferLength)
900010f0:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
900010f2:	2b0f      	cmp	r3, #15
900010f4:	d940      	bls.n	90001178 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xb0>
        reader->seek(offset);
900010f6:	6803      	ldr	r3, [r0, #0]
    uint32_t offset = indexOffset + 8 + (frameNumber - 1) * 16;
900010f8:	f107 0608 	add.w	r6, r7, #8
        reader->seek(offset);
900010fc:	68db      	ldr	r3, [r3, #12]
900010fe:	4631      	mov	r1, r6
90001100:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001102:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001104:	2210      	movs	r2, #16
90001106:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001108:	6803      	ldr	r3, [r0, #0]
9000110a:	691b      	ldr	r3, [r3, #16]
9000110c:	4798      	blx	r3
9000110e:	b198      	cbz	r0, 90001138 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x70>
    if (reader != 0)
90001110:	6b23      	ldr	r3, [r4, #48]	@ 0x30
        aviBufferStartOffset = offset;
90001112:	63e6      	str	r6, [r4, #60]	@ 0x3c
    if (reader != 0)
90001114:	b1a3      	cbz	r3, 90001140 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x78>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001116:	6b62      	ldr	r2, [r4, #52]	@ 0x34
90001118:	7a93      	ldrb	r3, [r2, #10]
9000111a:	7a51      	ldrb	r1, [r2, #9]
9000111c:	041b      	lsls	r3, r3, #16
9000111e:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
90001122:	7a11      	ldrb	r1, [r2, #8]
90001124:	7ad2      	ldrb	r2, [r2, #11]
90001126:	430b      	orrs	r3, r1
90001128:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
9000112c:	6a22      	ldr	r2, [r4, #32]
    this->frameNumber = frameNumber;
9000112e:	6165      	str	r5, [r4, #20]
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90001130:	3a04      	subs	r2, #4
90001132:	441a      	add	r2, r3
90001134:	61a2      	str	r2, [r4, #24]
}
90001136:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001138:	230d      	movs	r3, #13
9000113a:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
9000113e:	e7e7      	b.n	90001110 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x48>
    currentMovieOffset = getU32(offset + 8) + firstFrameOffset - 4;
90001140:	f107 0310 	add.w	r3, r7, #16
        volatile const uint8_t* const d = movieData + offset;
90001144:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90001146:	18ca      	adds	r2, r1, r3
        val |= d[0];
90001148:	5cc9      	ldrb	r1, [r1, r3]
        val |= d[1] << 8;
9000114a:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
9000114c:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
9000114e:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001150:	041b      	lsls	r3, r3, #16
90001152:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
90001156:	430b      	orrs	r3, r1
        val |= d[3] << 24;
90001158:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        return val;
9000115c:	e7e6      	b.n	9000112c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x64>
    if (frameNumber > getNumberOfFrames())
9000115e:	4798      	blx	r3
90001160:	4286      	cmp	r6, r0
90001162:	d907      	bls.n	90001174 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xac>
        frameNumber = getNumberOfFrames();
90001164:	6823      	ldr	r3, [r4, #0]
90001166:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90001168:	42ab      	cmp	r3, r5
9000116a:	d00e      	beq.n	9000118a <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xc2>
9000116c:	4620      	mov	r0, r4
9000116e:	4798      	blx	r3
90001170:	4605      	mov	r5, r0
90001172:	e7b7      	b.n	900010e4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
{
90001174:	4635      	mov	r5, r6
90001176:	e7b5      	b.n	900010e4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001178:	2009      	movs	r0, #9
            assert(!"Buffer to small");
9000117a:	4b06      	ldr	r3, [pc, #24]	@ (90001194 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xcc>)
9000117c:	4a06      	ldr	r2, [pc, #24]	@ (90001198 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd0>)
9000117e:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001180:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001184:	4805      	ldr	r0, [pc, #20]	@ (9000119c <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0xd4>)
90001186:	f028 f9ef 	bl	90029568 <__assert_func>
    return videoInfo.number_of_frames;
9000118a:	68a5      	ldr	r5, [r4, #8]
9000118c:	e7aa      	b.n	900010e4 <_ZN20HardwareMJPEGDecoder9gotoFrameEm+0x1c>
9000118e:	bf00      	nop
90001190:	90001085 	.word	0x90001085
90001194:	9002a8a4 	.word	0x9002a8a4
90001198:	9002a8b8 	.word	0x9002a8b8
9000119c:	9002a838 	.word	0x9002a838

900011a0 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
900011a0:	6943      	ldr	r3, [r0, #20]
{
900011a2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
900011a6:	2b00      	cmp	r3, #0
900011a8:	f000 80c1 	beq.w	9000132e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18e>
    readData(currentMovieOffset, 8);
900011ac:	4605      	mov	r5, r0
    if (reader != 0)
900011ae:	6b00      	ldr	r0, [r0, #48]	@ 0x30
    readData(currentMovieOffset, 8);
900011b0:	69ac      	ldr	r4, [r5, #24]
    if (reader != 0)
900011b2:	2800      	cmp	r0, #0
900011b4:	f000 80a1 	beq.w	900012fa <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15a>
        if (length > aviBufferLength)
900011b8:	6bab      	ldr	r3, [r5, #56]	@ 0x38
900011ba:	2b07      	cmp	r3, #7
900011bc:	f240 80ac 	bls.w	90001318 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
900011c0:	6803      	ldr	r3, [r0, #0]
900011c2:	4621      	mov	r1, r4
900011c4:	68db      	ldr	r3, [r3, #12]
900011c6:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900011c8:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900011ca:	2208      	movs	r2, #8
900011cc:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900011ce:	6803      	ldr	r3, [r0, #0]
900011d0:	691b      	ldr	r3, [r3, #16]
900011d2:	4798      	blx	r3
900011d4:	2800      	cmp	r0, #0
900011d6:	f000 808c 	beq.w	900012f2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x152>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900011da:	69ab      	ldr	r3, [r5, #24]
    if (reader != 0)
900011dc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900011de:	1d1a      	adds	r2, r3, #4
        aviBufferStartOffset = offset;
900011e0:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
900011e2:	2800      	cmp	r0, #0
900011e4:	f000 808b 	beq.w	900012fe <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x15e>
        const uint32_t index = offset - aviBufferStartOffset;
900011e8:	1b12      	subs	r2, r2, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900011ea:	6b6c      	ldr	r4, [r5, #52]	@ 0x34
900011ec:	18a1      	adds	r1, r4, r2
900011ee:	5ca2      	ldrb	r2, [r4, r2]
900011f0:	788c      	ldrb	r4, [r1, #2]
900011f2:	784e      	ldrb	r6, [r1, #1]
900011f4:	0424      	lsls	r4, r4, #16
900011f6:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
900011fa:	4314      	orrs	r4, r2
900011fc:	78ca      	ldrb	r2, [r1, #3]
900011fe:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
            lastError = AVI_ERROR_EOF_REACHED;
90001202:	270d      	movs	r7, #13
        if (streamNo == STREAM0 && chunkType == TYPEDC)
90001204:	f243 0630 	movw	r6, #12336	@ 0x3030
90001208:	e03a      	b.n	90001280 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xe0>
        if (length > aviBufferLength)
9000120a:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000120c:	2b07      	cmp	r3, #7
9000120e:	f240 8083 	bls.w	90001318 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x178>
        reader->seek(offset);
90001212:	6803      	ldr	r3, [r0, #0]
90001214:	4621      	mov	r1, r4
90001216:	68db      	ldr	r3, [r3, #12]
90001218:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
9000121a:	6b28      	ldr	r0, [r5, #48]	@ 0x30
9000121c:	2208      	movs	r2, #8
9000121e:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001220:	6803      	ldr	r3, [r0, #0]
90001222:	691b      	ldr	r3, [r3, #16]
90001224:	4798      	blx	r3
90001226:	b908      	cbnz	r0, 9000122c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x8c>
            lastError = AVI_ERROR_EOF_REACHED;
90001228:	f885 7040 	strb.w	r7, [r5, #64]	@ 0x40
    if (reader != 0)
9000122c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
        uint32_t streamNo  = getU16(currentMovieOffset);
9000122e:	69ab      	ldr	r3, [r5, #24]
        aviBufferStartOffset = offset;
90001230:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
90001232:	2800      	cmp	r0, #0
90001234:	d079      	beq.n	9000132a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x18a>
        const uint32_t index = offset - aviBufferStartOffset;
90001236:	1b1b      	subs	r3, r3, r4
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001238:	6b69      	ldr	r1, [r5, #52]	@ 0x34
9000123a:	18ca      	adds	r2, r1, r3
9000123c:	5ccb      	ldrb	r3, [r1, r3]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000123e:	7994      	ldrb	r4, [r2, #6]
90001240:	f892 a005 	ldrb.w	sl, [r2, #5]
90001244:	0424      	lsls	r4, r4, #16
90001246:	f892 c004 	ldrb.w	ip, [r2, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
9000124a:	f892 9001 	ldrb.w	r9, [r2, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000124e:	ea44 240a 	orr.w	r4, r4, sl, lsl #8
90001252:	79d1      	ldrb	r1, [r2, #7]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001254:	f892 8003 	ldrb.w	r8, [r2, #3]
90001258:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
9000125c:	f892 e002 	ldrb.w	lr, [r2, #2]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001260:	ea44 040c 	orr.w	r4, r4, ip
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001264:	ea4e 2208 	orr.w	r2, lr, r8, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001268:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        if (streamNo == STREAM0 && chunkType == TYPEDC)
9000126c:	f246 3164 	movw	r1, #25444	@ 0x6364
90001270:	42b3      	cmp	r3, r6
90001272:	bf08      	it	eq
90001274:	428a      	cmpeq	r2, r1
90001276:	bf0c      	ite	eq
90001278:	2301      	moveq	r3, #1
9000127a:	2300      	movne	r3, #0
9000127c:	d036      	beq.n	900012ec <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x14c>
    while (currentMovieOffset + 8 + chunkSize < movieLength)
9000127e:	69ab      	ldr	r3, [r5, #24]
90001280:	441c      	add	r4, r3
90001282:	6aab      	ldr	r3, [r5, #40]	@ 0x28
90001284:	f104 0208 	add.w	r2, r4, #8
90001288:	429a      	cmp	r2, r3
9000128a:	d22a      	bcs.n	900012e2 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x142>
        frameNumber++;
9000128c:	696b      	ldr	r3, [r5, #20]
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
9000128e:	3409      	adds	r4, #9
        frameNumber++;
90001290:	3301      	adds	r3, #1
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001292:	f024 0401 	bic.w	r4, r4, #1
90001296:	e9c5 3405 	strd	r3, r4, [r5, #20]
    if (reader != 0)
9000129a:	2800      	cmp	r0, #0
9000129c:	d1b5      	bne.n	9000120a <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x6a>
        volatile const uint8_t* const d = movieData + offset;
9000129e:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        uint32_t chunkType = getU16(currentMovieOffset + 2);
900012a0:	1ca2      	adds	r2, r4, #2
        chunkSize = getU32(currentMovieOffset + 4);
900012a2:	f104 0e04 	add.w	lr, r4, #4
        volatile const uint8_t* const d = movieData + offset;
900012a6:	eb01 0c04 	add.w	ip, r1, r4
        val |= d[0];
900012aa:	5d0b      	ldrb	r3, [r1, r4]
        val |= d[1] << 8;
900012ac:	f89c 4001 	ldrb.w	r4, [ip, #1]
        volatile const uint8_t* const d = movieData + offset;
900012b0:	eb01 0c0e 	add.w	ip, r1, lr
        val |= d[1] << 8;
900012b4:	ea43 2304 	orr.w	r3, r3, r4, lsl #8
        volatile const uint8_t* const d = movieData + offset;
900012b8:	188c      	adds	r4, r1, r2
        val |= d[0];
900012ba:	5c8a      	ldrb	r2, [r1, r2]
        val |= d[1] << 8;
900012bc:	7864      	ldrb	r4, [r4, #1]
        val |= d[0];
900012be:	f811 e00e 	ldrb.w	lr, [r1, lr]
        val |= d[1] << 8;
900012c2:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
        val |= d[1] << 8;
900012c6:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
900012ca:	f89c 4002 	ldrb.w	r4, [ip, #2]
        val |= d[3] << 24;
900012ce:	f89c 1003 	ldrb.w	r1, [ip, #3]
        val |= d[2] << 16;
900012d2:	0424      	lsls	r4, r4, #16
900012d4:	ea44 2408 	orr.w	r4, r4, r8, lsl #8
900012d8:	ea44 040e 	orr.w	r4, r4, lr
        val |= d[3] << 24;
900012dc:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
        return val;
900012e0:	e7c4      	b.n	9000126c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xcc>
    frameNumber = 1;
900012e2:	2101      	movs	r1, #1
    currentMovieOffset = firstFrameOffset; /* start over */
900012e4:	6a2a      	ldr	r2, [r5, #32]
    return false;
900012e6:	2300      	movs	r3, #0
    currentMovieOffset = firstFrameOffset; /* start over */
900012e8:	e9c5 1205 	strd	r1, r2, [r5, #20]
}
900012ec:	4618      	mov	r0, r3
900012ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            lastError = AVI_ERROR_EOF_REACHED;
900012f2:	230d      	movs	r3, #13
900012f4:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900012f8:	e76f      	b.n	900011da <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x3a>
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
900012fa:	1d22      	adds	r2, r4, #4
900012fc:	4623      	mov	r3, r4
        volatile const uint8_t* const d = movieData + offset;
900012fe:	6aec      	ldr	r4, [r5, #44]	@ 0x2c
90001300:	18a1      	adds	r1, r4, r2
        val |= d[0];
90001302:	5ca6      	ldrb	r6, [r4, r2]
        val |= d[1] << 8;
90001304:	784f      	ldrb	r7, [r1, #1]
        val |= d[2] << 16;
90001306:	788c      	ldrb	r4, [r1, #2]
        val |= d[3] << 24;
90001308:	78ca      	ldrb	r2, [r1, #3]
        val |= d[2] << 16;
9000130a:	0424      	lsls	r4, r4, #16
9000130c:	ea44 2407 	orr.w	r4, r4, r7, lsl #8
90001310:	4334      	orrs	r4, r6
        val |= d[3] << 24;
90001312:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        return val;
90001316:	e774      	b.n	90001202 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x62>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001318:	2009      	movs	r0, #9
            assert(!"Buffer to small");
9000131a:	4b08      	ldr	r3, [pc, #32]	@ (9000133c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x19c>)
9000131c:	4a08      	ldr	r2, [pc, #32]	@ (90001340 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a0>)
9000131e:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001320:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
90001324:	4807      	ldr	r0, [pc, #28]	@ (90001344 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
90001326:	f028 f91f 	bl	90029568 <__assert_func>
9000132a:	461c      	mov	r4, r3
9000132c:	e7b7      	b.n	9000129e <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0xfe>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
9000132e:	4b06      	ldr	r3, [pc, #24]	@ (90001348 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a8>)
90001330:	21f7      	movs	r1, #247	@ 0xf7
90001332:	4a06      	ldr	r2, [pc, #24]	@ (9000134c <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1ac>)
90001334:	4803      	ldr	r0, [pc, #12]	@ (90001344 <_ZN20HardwareMJPEGDecoder13gotoNextFrameEv+0x1a4>)
90001336:	f028 f917 	bl	90029568 <__assert_func>
9000133a:	bf00      	nop
9000133c:	9002a8a4 	.word	0x9002a8a4
90001340:	9002a8b8 	.word	0x9002a8b8
90001344:	9002a838 	.word	0x9002a838
90001348:	9002a8fc 	.word	0x9002a8fc
9000134c:	9002a948 	.word	0x9002a948

90001350 <_ZN20HardwareMJPEGDecoderC1Ev>:
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
90001350:	b510      	push	{r4, lr}
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
90001352:	2200      	movs	r2, #0
HardwareMJPEGDecoder::HardwareMJPEGDecoder()
90001354:	4604      	mov	r4, r0
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001356:	4b0e      	ldr	r3, [pc, #56]	@ (90001390 <_ZN20HardwareMJPEGDecoderC1Ev+0x40>)
    semDecodingDone = SEM_CREATE();
90001358:	2001      	movs	r0, #1
9000135a:	4611      	mov	r1, r2
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
9000135c:	63e2      	str	r2, [r4, #60]	@ 0x3c
9000135e:	6023      	str	r3, [r4, #0]
90001360:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
    : frameNumber(0), currentMovieOffset(0), indexOffset(0), firstFrameOffset(0), lastFrameEnd(0), movieLength(0), movieData(0),
90001364:	e9c4 2205 	strd	r2, r2, [r4, #20]
90001368:	e9c4 2207 	strd	r2, r2, [r4, #28]
9000136c:	e9c4 2209 	strd	r2, r2, [r4, #36]	@ 0x24
90001370:	e9c4 220b 	strd	r2, r2, [r4, #44]	@ 0x2c
      reader(0), aviBuffer(0), aviBufferLength(0), aviBufferStartOffset(0), lastError(AVI_NO_ERROR)
90001374:	e9c4 220d 	strd	r2, r2, [r4, #52]	@ 0x34
    videoInfo.frame_width = 0;
90001378:	e9c4 2203 	strd	r2, r2, [r4, #12]
    videoInfo.number_of_frames = 0;
9000137c:	e9c4 2201 	strd	r2, r2, [r4, #4]
    semDecodingDone = SEM_CREATE();
90001380:	f00b ff9c 	bl	9000d2bc <osSemaphoreNew>
90001384:	4b03      	ldr	r3, [pc, #12]	@ (90001394 <_ZN20HardwareMJPEGDecoderC1Ev+0x44>)
90001386:	4602      	mov	r2, r0
}
90001388:	4620      	mov	r0, r4
    semDecodingDone = SEM_CREATE();
9000138a:	601a      	str	r2, [r3, #0]
}
9000138c:	bd10      	pop	{r4, pc}
9000138e:	bf00      	nop
90001390:	9002c394 	.word	0x9002c394
90001394:	24005df4 	.word	0x24005df4

90001398 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>:
{
90001398:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    currentMovieOffset = 0;
9000139c:	2100      	movs	r1, #0
    if (reader != 0)
9000139e:	6b06      	ldr	r6, [r0, #48]	@ 0x30
{
900013a0:	4605      	mov	r5, r0
    currentMovieOffset = 0;
900013a2:	6181      	str	r1, [r0, #24]
    lastError = AVI_NO_ERROR;
900013a4:	f880 1040 	strb.w	r1, [r0, #64]	@ 0x40
    if (reader != 0)
900013a8:	2e00      	cmp	r6, #0
900013aa:	f000 81b3 	beq.w	90001714 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37c>
        if (length > aviBufferLength)
900013ae:	6b83      	ldr	r3, [r0, #56]	@ 0x38
900013b0:	2b47      	cmp	r3, #71	@ 0x47
900013b2:	f240 8270 	bls.w	90001896 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900013b6:	6833      	ldr	r3, [r6, #0]
900013b8:	4630      	mov	r0, r6
900013ba:	68db      	ldr	r3, [r3, #12]
900013bc:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900013be:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900013c0:	2248      	movs	r2, #72	@ 0x48
900013c2:	6b69      	ldr	r1, [r5, #52]	@ 0x34
900013c4:	6803      	ldr	r3, [r0, #0]
900013c6:	691b      	ldr	r3, [r3, #16]
900013c8:	4798      	blx	r3
900013ca:	2800      	cmp	r0, #0
900013cc:	f000 80b7 	beq.w	9000153e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1a6>
        aviBufferStartOffset = offset;
900013d0:	2300      	movs	r3, #0
    if (reader != 0)
900013d2:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
    if (compare(currentMovieOffset, "RIFF", 4))
900013d4:	69af      	ldr	r7, [r5, #24]
    if (reader != 0)
900013d6:	46b2      	mov	sl, r6
        aviBufferStartOffset = offset;
900013d8:	63eb      	str	r3, [r5, #60]	@ 0x3c
    if (reader != 0)
900013da:	2e00      	cmp	r6, #0
900013dc:	f000 819b 	beq.w	90001716 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x37e>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900013e0:	f8d5 9034 	ldr.w	r9, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
900013e4:	2204      	movs	r2, #4
900013e6:	49c3      	ldr	r1, [pc, #780]	@ (900016f4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x35c>)
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900013e8:	eb09 0407 	add.w	r4, r9, r7
    return strncmp(src, str, num);
900013ec:	4620      	mov	r0, r4
900013ee:	f028 fb5f 	bl	90029ab0 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
900013f2:	2800      	cmp	r0, #0
900013f4:	f040 825f 	bne.w	900018b6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
900013f8:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
900013fc:	2204      	movs	r2, #4
900013fe:	49be      	ldr	r1, [pc, #760]	@ (900016f8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x360>)
    currentMovieOffset += 8;
90001400:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
90001402:	4448      	add	r0, r9
90001404:	f028 fb54 	bl	90029ab0 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
90001408:	2800      	cmp	r0, #0
9000140a:	f040 8268 	bne.w	900018de <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
9000140e:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
90001412:	2204      	movs	r2, #4
90001414:	49b9      	ldr	r1, [pc, #740]	@ (900016fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x364>)
90001416:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
9000141a:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
9000141e:	f028 fb47 	bl	90029ab0 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
90001422:	4680      	mov	r8, r0
90001424:	2800      	cmp	r0, #0
90001426:	f040 8250 	bne.w	900018ca <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000142a:	7ca3      	ldrb	r3, [r4, #18]
9000142c:	7c62      	ldrb	r2, [r4, #17]
9000142e:	041b      	lsls	r3, r3, #16
90001430:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
90001434:	7c22      	ldrb	r2, [r4, #16]
90001436:	4313      	orrs	r3, r2
90001438:	7ce2      	ldrb	r2, [r4, #19]
    assert(aviListSize);
9000143a:	ea53 6402 	orrs.w	r4, r3, r2, lsl #24
9000143e:	f000 8233 	beq.w	900018a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90001442:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
90001446:	2204      	movs	r2, #4
90001448:	49ad      	ldr	r1, [pc, #692]	@ (90001700 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x368>)
9000144a:	4448      	add	r0, r9
9000144c:	f028 fb30 	bl	90029ab0 <strncmp>
    if (compare(offset, "hdrl", 4))
90001450:	2800      	cmp	r0, #0
90001452:	d078      	beq.n	90001546 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ae>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
90001454:	2306      	movs	r3, #6
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001456:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
9000145a:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
9000145e:	4448      	add	r0, r9
    uint32_t listOffset = aviListOffset + aviListSize + 8;
90001460:	445c      	add	r4, fp
    return strncmp(src, str, num);
90001462:	2204      	movs	r2, #4
90001464:	49a7      	ldr	r1, [pc, #668]	@ (90001704 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x36c>)
    uint32_t listOffset = aviListOffset + aviListSize + 8;
90001466:	3408      	adds	r4, #8
    return strncmp(src, str, num);
90001468:	f028 fb22 	bl	90029ab0 <strncmp>
    if (compare(offset, "avih", 4))
9000146c:	2800      	cmp	r0, #0
9000146e:	f000 80e6 	beq.w	9000163e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x2a6>
        lastError = AVI_ERROR_AVI_AVIH_NOT_FOUND;
90001472:	2307      	movs	r3, #7
90001474:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
90001478:	f1ba 0f00 	cmp.w	sl, #0
9000147c:	f000 8190 	beq.w	900017a0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x408>
        if (length > aviBufferLength)
90001480:	6bab      	ldr	r3, [r5, #56]	@ 0x38
90001482:	2b0b      	cmp	r3, #11
90001484:	f240 8207 	bls.w	90001896 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
90001488:	f8da 3000 	ldr.w	r3, [sl]
9000148c:	4621      	mov	r1, r4
9000148e:	4650      	mov	r0, sl
90001490:	68db      	ldr	r3, [r3, #12]
90001492:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001494:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001496:	220c      	movs	r2, #12
90001498:	6b69      	ldr	r1, [r5, #52]	@ 0x34
9000149a:	6803      	ldr	r3, [r0, #0]
9000149c:	691b      	ldr	r3, [r3, #16]
9000149e:	4798      	blx	r3
900014a0:	2800      	cmp	r0, #0
900014a2:	f000 8121 	beq.w	900016e8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x350>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900014a6:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        aviBufferStartOffset = offset;
900014aa:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
900014ac:	63ec      	str	r4, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
900014ae:	f8df 825c 	ldr.w	r8, [pc, #604]	@ 9000170c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x374>
            lastError = AVI_ERROR_EOF_REACHED;
900014b2:	f04f 090d 	mov.w	r9, #13
900014b6:	e003      	b.n	900014c0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x128>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900014b8:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
    if (reader != 0)
900014bc:	6b2e      	ldr	r6, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
900014be:	63ec      	str	r4, [r5, #60]	@ 0x3c
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900014c0:	f104 0708 	add.w	r7, r4, #8
    if (reader != 0)
900014c4:	2e00      	cmp	r6, #0
900014c6:	d052      	beq.n	9000156e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1d6>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900014c8:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
    return strncmp(src, str, num);
900014ca:	2204      	movs	r2, #4
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900014cc:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
900014ce:	4641      	mov	r1, r8
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
900014d0:	1afb      	subs	r3, r7, r3
900014d2:	4418      	add	r0, r3
    return strncmp(src, str, num);
900014d4:	f028 faec 	bl	90029ab0 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900014d8:	2800      	cmp	r0, #0
900014da:	d051      	beq.n	90001580 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1e8>
900014dc:	f1ba 0f00 	cmp.w	sl, #0
900014e0:	f040 80a8 	bne.w	90001634 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
900014e4:	6aab      	ldr	r3, [r5, #40]	@ 0x28
900014e6:	42a3      	cmp	r3, r4
900014e8:	d94d      	bls.n	90001586 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1ee>
        const uint32_t listSize = getU32(listOffset + 4) + 8;
900014ea:	3404      	adds	r4, #4
    if (reader != 0)
900014ec:	b386      	cbz	r6, 90001550 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x1b8>
        const uint32_t index = offset - aviBufferStartOffset;
900014ee:	6bea      	ldr	r2, [r5, #60]	@ 0x3c
        if (length > aviBufferLength)
900014f0:	e9d5 130d 	ldrd	r1, r3, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
900014f4:	1aa4      	subs	r4, r4, r2
        if (length > aviBufferLength)
900014f6:	2b0b      	cmp	r3, #11
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900014f8:	eb01 0204 	add.w	r2, r1, r4
900014fc:	5d09      	ldrb	r1, [r1, r4]
900014fe:	7894      	ldrb	r4, [r2, #2]
90001500:	7850      	ldrb	r0, [r2, #1]
90001502:	ea4f 4404 	mov.w	r4, r4, lsl #16
90001506:	78d2      	ldrb	r2, [r2, #3]
90001508:	ea44 2400 	orr.w	r4, r4, r0, lsl #8
9000150c:	ea44 0401 	orr.w	r4, r4, r1
90001510:	ea44 6402 	orr.w	r4, r4, r2, lsl #24
        listOffset += listSize;
90001514:	443c      	add	r4, r7
        if (length > aviBufferLength)
90001516:	f240 81be 	bls.w	90001896 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
9000151a:	6833      	ldr	r3, [r6, #0]
9000151c:	4621      	mov	r1, r4
9000151e:	4630      	mov	r0, r6
90001520:	68db      	ldr	r3, [r3, #12]
90001522:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001524:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90001526:	220c      	movs	r2, #12
90001528:	6b69      	ldr	r1, [r5, #52]	@ 0x34
9000152a:	6803      	ldr	r3, [r0, #0]
9000152c:	691b      	ldr	r3, [r3, #16]
9000152e:	4798      	blx	r3
90001530:	2800      	cmp	r0, #0
90001532:	d1c1      	bne.n	900014b8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x120>
            lastError = AVI_ERROR_EOF_REACHED;
90001534:	f04f 0a0d 	mov.w	sl, #13
90001538:	f885 9040 	strb.w	r9, [r5, #64]	@ 0x40
9000153c:	e7be      	b.n	900014bc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x124>
9000153e:	230d      	movs	r3, #13
90001540:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
90001544:	e744      	b.n	900013d0 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x38>
    offset += 4;
90001546:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
9000154a:	f04f 0801 	mov.w	r8, #1
9000154e:	e786      	b.n	9000145e <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc6>
        volatile const uint8_t* const d = movieData + offset;
90001550:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
90001552:	1913      	adds	r3, r2, r4
        val |= d[0];
90001554:	5d12      	ldrb	r2, [r2, r4]
        val |= d[1] << 8;
90001556:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
90001558:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
9000155a:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
9000155c:	0424      	lsls	r4, r4, #16
9000155e:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
90001562:	4314      	orrs	r4, r2
        val |= d[3] << 24;
90001564:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
        listOffset += listSize;
90001568:	443c      	add	r4, r7
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000156a:	f104 0708 	add.w	r7, r4, #8
        src = (const char*)movieData + offset;
9000156e:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
90001570:	2204      	movs	r2, #4
90001572:	4641      	mov	r1, r8
        src = (const char*)movieData + offset;
90001574:	2600      	movs	r6, #0
90001576:	4438      	add	r0, r7
    return strncmp(src, str, num);
90001578:	f028 fa9a 	bl	90029ab0 <strncmp>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
9000157c:	2800      	cmp	r0, #0
9000157e:	d1ad      	bne.n	900014dc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x144>
    if (lastError != AVI_NO_ERROR)
90001580:	f1ba 0f00 	cmp.w	sl, #0
90001584:	d156      	bne.n	90001634 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x29c>
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
90001586:	f104 030c 	add.w	r3, r4, #12
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
9000158a:	3404      	adds	r4, #4
    currentMovieOffset = listOffset + 8 + 4; /* skip LIST and 'movi' */
9000158c:	61ab      	str	r3, [r5, #24]
    if (reader != 0)
9000158e:	2e00      	cmp	r6, #0
90001590:	f000 8118 	beq.w	900017c4 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x42c>
        const uint32_t index = offset - aviBufferStartOffset;
90001594:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
90001596:	1ae4      	subs	r4, r4, r3
        if (length > aviBufferLength)
90001598:	e9d5 120d 	ldrd	r1, r2, [r5, #52]	@ 0x34
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000159c:	f104 0e02 	add.w	lr, r4, #2
900015a0:	f104 0c01 	add.w	ip, r4, #1
900015a4:	f811 8004 	ldrb.w	r8, [r1, r4]
900015a8:	1ce0      	adds	r0, r4, #3
900015aa:	f811 300e 	ldrb.w	r3, [r1, lr]
        if (length > aviBufferLength)
900015ae:	2a03      	cmp	r2, #3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900015b0:	f811 900c 	ldrb.w	r9, [r1, ip]
900015b4:	ea4f 4303 	mov.w	r3, r3, lsl #16
900015b8:	ea43 2309 	orr.w	r3, r3, r9, lsl #8
900015bc:	ea43 0308 	orr.w	r3, r3, r8
900015c0:	f811 8000 	ldrb.w	r8, [r1, r0]
900015c4:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900015c8:	443b      	add	r3, r7
900015ca:	626b      	str	r3, [r5, #36]	@ 0x24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900015cc:	f811 300e 	ldrb.w	r3, [r1, lr]
900015d0:	f811 e00c 	ldrb.w	lr, [r1, ip]
900015d4:	f811 c004 	ldrb.w	ip, [r1, r4]
900015d8:	ea4f 4403 	mov.w	r4, r3, lsl #16
900015dc:	5c09      	ldrb	r1, [r1, r0]
900015de:	ea44 240e 	orr.w	r4, r4, lr, lsl #8
900015e2:	ea44 040c 	orr.w	r4, r4, ip
900015e6:	ea44 6401 	orr.w	r4, r4, r1, lsl #24
    listOffset += listSize;
900015ea:	443c      	add	r4, r7
        if (length > aviBufferLength)
900015ec:	f240 8153 	bls.w	90001896 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x4fe>
        reader->seek(offset);
900015f0:	6833      	ldr	r3, [r6, #0]
900015f2:	4621      	mov	r1, r4
900015f4:	4630      	mov	r0, r6
900015f6:	68db      	ldr	r3, [r3, #12]
900015f8:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
900015fa:	6b28      	ldr	r0, [r5, #48]	@ 0x30
900015fc:	2204      	movs	r2, #4
900015fe:	6b69      	ldr	r1, [r5, #52]	@ 0x34
90001600:	6803      	ldr	r3, [r0, #0]
90001602:	691b      	ldr	r3, [r3, #16]
90001604:	4798      	blx	r3
90001606:	2800      	cmp	r0, #0
90001608:	f000 80cd 	beq.w	900017a6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x40e>
    if (reader != 0)
9000160c:	6b2b      	ldr	r3, [r5, #48]	@ 0x30
        aviBufferStartOffset = offset;
9000160e:	63ec      	str	r4, [r5, #60]	@ 0x3c
    if (reader != 0)
90001610:	2b00      	cmp	r3, #0
90001612:	f000 816e 	beq.w	900018f2 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x55a>
        src = reinterpret_cast<const char*>(aviBuffer + (offset - aviBufferStartOffset));
90001616:	6b68      	ldr	r0, [r5, #52]	@ 0x34
    return strncmp(src, str, num);
90001618:	2204      	movs	r2, #4
9000161a:	493b      	ldr	r1, [pc, #236]	@ (90001708 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x370>)
9000161c:	f028 fa48 	bl	90029ab0 <strncmp>
    if (!compare(listOffset, "idx1", 4))
90001620:	2800      	cmp	r0, #0
90001622:	f040 80ca 	bne.w	900017ba <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x422>
    frameNumber = 1; /* next frame number is 1 */
90001626:	2201      	movs	r2, #1
    firstFrameOffset = currentMovieOffset;
90001628:	69ab      	ldr	r3, [r5, #24]
        indexOffset = listOffset;
9000162a:	61ec      	str	r4, [r5, #28]
    frameNumber = 1; /* next frame number is 1 */
9000162c:	616a      	str	r2, [r5, #20]
    firstFrameOffset = currentMovieOffset;
9000162e:	622b      	str	r3, [r5, #32]
}
90001630:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        lastError = AVI_ERROR_MOVI_NOT_FOUND;
90001634:	230a      	movs	r3, #10
90001636:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
9000163a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (foundFrame)
9000163e:	f1b8 0f00 	cmp.w	r8, #0
90001642:	f43f af19 	beq.w	90001478 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe0>
        offset += 8; /* skip fourcc and cb in AVIMAINHEADER */
90001646:	f107 0220 	add.w	r2, r7, #32
    if (reader != 0)
9000164a:	f1ba 0f00 	cmp.w	sl, #0
9000164e:	f000 80d4 	beq.w	900017fa <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x462>
        const uint32_t index = offset - aviBufferStartOffset;
90001652:	6beb      	ldr	r3, [r5, #60]	@ 0x3c
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001654:	f8df c0b8 	ldr.w	ip, [pc, #184]	@ 90001710 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x378>
        const uint32_t index = offset - aviBufferStartOffset;
90001658:	1ad1      	subs	r1, r2, r3
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000165a:	6b6a      	ldr	r2, [r5, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
9000165c:	f1c3 0030 	rsb	r0, r3, #48	@ 0x30
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001660:	f812 8001 	ldrb.w	r8, [r2, r1]
90001664:	eb02 0e01 	add.w	lr, r2, r1
        const uint32_t index = offset - aviBufferStartOffset;
90001668:	f1c3 0140 	rsb	r1, r3, #64	@ 0x40
9000166c:	f1c3 0344 	rsb	r3, r3, #68	@ 0x44
90001670:	4438      	add	r0, r7
90001672:	19de      	adds	r6, r3, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001674:	f89e 3002 	ldrb.w	r3, [lr, #2]
        const uint32_t index = offset - aviBufferStartOffset;
90001678:	4439      	add	r1, r7
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000167a:	f89e 7001 	ldrb.w	r7, [lr, #1]
9000167e:	041b      	lsls	r3, r3, #16
90001680:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
90001684:	f89e 7003 	ldrb.w	r7, [lr, #3]
90001688:	ea43 0308 	orr.w	r3, r3, r8
9000168c:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
90001690:	1817      	adds	r7, r2, r0
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001692:	fbac c303 	umull	ip, r3, ip, r3
90001696:	099b      	lsrs	r3, r3, #6
90001698:	606b      	str	r3, [r5, #4]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
9000169a:	78bb      	ldrb	r3, [r7, #2]
9000169c:	f897 e001 	ldrb.w	lr, [r7, #1]
900016a0:	041b      	lsls	r3, r3, #16
900016a2:	f812 c000 	ldrb.w	ip, [r2, r0]
900016a6:	78ff      	ldrb	r7, [r7, #3]
900016a8:	1850      	adds	r0, r2, r1
900016aa:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
900016ae:	ea43 030c 	orr.w	r3, r3, ip
900016b2:	ea43 6307 	orr.w	r3, r3, r7, lsl #24
        videoInfo.number_of_frames = getU32(offset + 16);
900016b6:	60ab      	str	r3, [r5, #8]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900016b8:	7883      	ldrb	r3, [r0, #2]
900016ba:	7847      	ldrb	r7, [r0, #1]
900016bc:	041b      	lsls	r3, r3, #16
900016be:	5c51      	ldrb	r1, [r2, r1]
900016c0:	ea43 2307 	orr.w	r3, r3, r7, lsl #8
900016c4:	430b      	orrs	r3, r1
900016c6:	78c1      	ldrb	r1, [r0, #3]
900016c8:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
900016cc:	1991      	adds	r1, r2, r6
        videoInfo.frame_width = getU32(offset + 32);
900016ce:	60eb      	str	r3, [r5, #12]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
900016d0:	788b      	ldrb	r3, [r1, #2]
900016d2:	7848      	ldrb	r0, [r1, #1]
900016d4:	041b      	lsls	r3, r3, #16
900016d6:	5d92      	ldrb	r2, [r2, r6]
900016d8:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
900016dc:	4313      	orrs	r3, r2
900016de:	78ca      	ldrb	r2, [r1, #3]
900016e0:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
900016e4:	612b      	str	r3, [r5, #16]
    if (reader != 0)
900016e6:	e6cb      	b.n	90001480 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xe8>
            lastError = AVI_ERROR_EOF_REACHED;
900016e8:	230d      	movs	r3, #13
900016ea:	469a      	mov	sl, r3
900016ec:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900016f0:	e6db      	b.n	900014aa <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x112>
900016f2:	bf00      	nop
900016f4:	9002a97c 	.word	0x9002a97c
900016f8:	9002aa34 	.word	0x9002aa34
900016fc:	9002aa2c 	.word	0x9002aa2c
90001700:	9002aa00 	.word	0x9002aa00
90001704:	9002aa14 	.word	0x9002aa14
90001708:	9002aa24 	.word	0x9002aa24
9000170c:	9002aa1c 	.word	0x9002aa1c
90001710:	10624dd3 	.word	0x10624dd3
    if (compare(currentMovieOffset, "RIFF", 4))
90001714:	4637      	mov	r7, r6
        src = (const char*)movieData + offset;
90001716:	f8d5 902c 	ldr.w	r9, [r5, #44]	@ 0x2c
    return strncmp(src, str, num);
9000171a:	2204      	movs	r2, #4
9000171c:	4976      	ldr	r1, [pc, #472]	@ (900018f8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x560>)
9000171e:	eb09 0007 	add.w	r0, r9, r7
90001722:	f028 f9c5 	bl	90029ab0 <strncmp>
    if (compare(currentMovieOffset, "RIFF", 4))
90001726:	2800      	cmp	r0, #0
90001728:	f040 80c5 	bne.w	900018b6 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x51e>
    currentMovieOffset += 8;
9000172c:	f107 0008 	add.w	r0, r7, #8
    return strncmp(src, str, num);
90001730:	2204      	movs	r2, #4
90001732:	4972      	ldr	r1, [pc, #456]	@ (900018fc <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x564>)
    currentMovieOffset += 8;
90001734:	61a8      	str	r0, [r5, #24]
    return strncmp(src, str, num);
90001736:	4448      	add	r0, r9
90001738:	f028 f9ba 	bl	90029ab0 <strncmp>
    if (compare(currentMovieOffset, "AVI ", 4))
9000173c:	2800      	cmp	r0, #0
9000173e:	f040 80ce 	bne.w	900018de <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x546>
    currentMovieOffset += 4;
90001742:	f107 0b0c 	add.w	fp, r7, #12
    return strncmp(src, str, num);
90001746:	2204      	movs	r2, #4
90001748:	496d      	ldr	r1, [pc, #436]	@ (90001900 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x568>)
9000174a:	eb09 000b 	add.w	r0, r9, fp
    currentMovieOffset += 4;
9000174e:	f8c5 b018 	str.w	fp, [r5, #24]
    return strncmp(src, str, num);
90001752:	f028 f9ad 	bl	90029ab0 <strncmp>
    if (compare(currentMovieOffset, "LIST", 4))
90001756:	4680      	mov	r8, r0
90001758:	2800      	cmp	r0, #0
9000175a:	f040 80b6 	bne.w	900018ca <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x532>
    const uint32_t aviListSize = getU32(currentMovieOffset + 4);
9000175e:	f107 0210 	add.w	r2, r7, #16
        volatile const uint8_t* const d = movieData + offset;
90001762:	eb09 0302 	add.w	r3, r9, r2
        val |= d[0];
90001766:	f819 2002 	ldrb.w	r2, [r9, r2]
        val |= d[1] << 8;
9000176a:	7859      	ldrb	r1, [r3, #1]
        val |= d[2] << 16;
9000176c:	789c      	ldrb	r4, [r3, #2]
        val |= d[3] << 24;
9000176e:	78db      	ldrb	r3, [r3, #3]
        val |= d[2] << 16;
90001770:	0424      	lsls	r4, r4, #16
90001772:	ea44 2401 	orr.w	r4, r4, r1, lsl #8
90001776:	4314      	orrs	r4, r2
    assert(aviListSize);
90001778:	ea54 6403 	orrs.w	r4, r4, r3, lsl #24
9000177c:	f000 8094 	beq.w	900018a8 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x510>
    uint32_t offset =  currentMovieOffset + 8;
90001780:	f107 0014 	add.w	r0, r7, #20
    return strncmp(src, str, num);
90001784:	2204      	movs	r2, #4
90001786:	495f      	ldr	r1, [pc, #380]	@ (90001904 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x56c>)
90001788:	4448      	add	r0, r9
9000178a:	f028 f991 	bl	90029ab0 <strncmp>
    if (compare(offset, "hdrl", 4))
9000178e:	b970      	cbnz	r0, 900017ae <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x416>
    offset += 4;
90001790:	f107 0018 	add.w	r0, r7, #24
    bool foundFrame = true;
90001794:	f04f 0801 	mov.w	r8, #1
        src = (const char*)movieData + offset;
90001798:	4448      	add	r0, r9
9000179a:	f04f 0a00 	mov.w	sl, #0
9000179e:	e65f      	b.n	90001460 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0xc8>
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
900017a0:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
900017a4:	e683      	b.n	900014ae <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_EOF_REACHED;
900017a6:	230d      	movs	r3, #13
900017a8:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
900017ac:	e72e      	b.n	9000160c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x274>
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900017ae:	2306      	movs	r3, #6
    offset += 4;
900017b0:	f107 0018 	add.w	r0, r7, #24
        lastError = AVI_ERROR_AVI_HDRL_NOT_FOUND;
900017b4:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
    if (reader != 0)
900017b8:	e7ee      	b.n	90001798 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x400>
        lastError = AVI_ERROR_IDX1_NOT_FOUND;
900017ba:	230b      	movs	r3, #11
900017bc:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
900017c0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
900017c4:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
        volatile const uint8_t* const d = movieData + offset;
900017c6:	1902      	adds	r2, r0, r4
        val |= d[0];
900017c8:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
900017ca:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
900017cc:	7893      	ldrb	r3, [r2, #2]
900017ce:	041b      	lsls	r3, r3, #16
900017d0:	ea43 2306 	orr.w	r3, r3, r6, lsl #8
900017d4:	430b      	orrs	r3, r1
        val |= d[3] << 24;
900017d6:	78d1      	ldrb	r1, [r2, #3]
900017d8:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
    lastFrameEnd = listOffset + 8 + getU32(listOffset + 4);
900017dc:	443b      	add	r3, r7
900017de:	626b      	str	r3, [r5, #36]	@ 0x24
        val |= d[0];
900017e0:	5d01      	ldrb	r1, [r0, r4]
        val |= d[1] << 8;
900017e2:	7856      	ldrb	r6, [r2, #1]
        val |= d[2] << 16;
900017e4:	7894      	ldrb	r4, [r2, #2]
        val |= d[3] << 24;
900017e6:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
900017e8:	0424      	lsls	r4, r4, #16
900017ea:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
900017ee:	430c      	orrs	r4, r1
        val |= d[3] << 24;
900017f0:	ea44 6403 	orr.w	r4, r4, r3, lsl #24
    listOffset += listSize;
900017f4:	443c      	add	r4, r7
        src = (const char*)movieData + offset;
900017f6:	4420      	add	r0, r4
900017f8:	e70e      	b.n	90001618 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900017fa:	6ae9      	ldr	r1, [r5, #44]	@ 0x2c
        videoInfo.number_of_frames = getU32(offset + 16);
900017fc:	f107 0c30 	add.w	ip, r7, #48	@ 0x30
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001800:	f8df e124 	ldr.w	lr, [pc, #292]	@ 90001928 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x590>
        videoInfo.frame_width = getU32(offset + 32);
90001804:	f107 0040 	add.w	r0, r7, #64	@ 0x40
        volatile const uint8_t* const d = movieData + offset;
90001808:	eb01 0802 	add.w	r8, r1, r2
        val |= d[0];
9000180c:	f811 9002 	ldrb.w	r9, [r1, r2]
        volatile const uint8_t* const d = movieData + offset;
90001810:	eb01 020c 	add.w	r2, r1, ip
        videoInfo.frame_height = getU32(offset + 36);
90001814:	3744      	adds	r7, #68	@ 0x44
        val |= d[1] << 8;
90001816:	f898 a001 	ldrb.w	sl, [r8, #1]
        val |= d[2] << 16;
9000181a:	f898 3002 	ldrb.w	r3, [r8, #2]
        val |= d[3] << 24;
9000181e:	f898 8003 	ldrb.w	r8, [r8, #3]
        val |= d[2] << 16;
90001822:	041b      	lsls	r3, r3, #16
90001824:	ea43 230a 	orr.w	r3, r3, sl, lsl #8
    while (compare(listOffset + 8, "movi", 4) && (lastError == AVI_NO_ERROR) && listOffset < movieLength)
90001828:	f895 a040 	ldrb.w	sl, [r5, #64]	@ 0x40
        val |= d[2] << 16;
9000182c:	ea43 0309 	orr.w	r3, r3, r9
        val |= d[3] << 24;
90001830:	ea43 6308 	orr.w	r3, r3, r8, lsl #24
        videoInfo.ms_between_frames = getU32(offset) / 1000;
90001834:	fbae e303 	umull	lr, r3, lr, r3
90001838:	099b      	lsrs	r3, r3, #6
9000183a:	606b      	str	r3, [r5, #4]
        val |= d[0];
9000183c:	f811 c00c 	ldrb.w	ip, [r1, ip]
        val |= d[1] << 8;
90001840:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
90001844:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
90001846:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001848:	041b      	lsls	r3, r3, #16
9000184a:	ea43 230e 	orr.w	r3, r3, lr, lsl #8
9000184e:	ea43 030c 	orr.w	r3, r3, ip
        volatile const uint8_t* const d = movieData + offset;
90001852:	eb01 0c00 	add.w	ip, r1, r0
        val |= d[3] << 24;
90001856:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        volatile const uint8_t* const d = movieData + offset;
9000185a:	19ca      	adds	r2, r1, r7
        videoInfo.number_of_frames = getU32(offset + 16);
9000185c:	60ab      	str	r3, [r5, #8]
        val |= d[0];
9000185e:	f811 e000 	ldrb.w	lr, [r1, r0]
        val |= d[1] << 8;
90001862:	f89c 8001 	ldrb.w	r8, [ip, #1]
        val |= d[2] << 16;
90001866:	f89c 3002 	ldrb.w	r3, [ip, #2]
        val |= d[3] << 24;
9000186a:	f89c 0003 	ldrb.w	r0, [ip, #3]
        val |= d[2] << 16;
9000186e:	041b      	lsls	r3, r3, #16
90001870:	ea43 2308 	orr.w	r3, r3, r8, lsl #8
90001874:	ea43 030e 	orr.w	r3, r3, lr
        val |= d[3] << 24;
90001878:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
        videoInfo.frame_width = getU32(offset + 32);
9000187c:	60eb      	str	r3, [r5, #12]
        val |= d[0];
9000187e:	5dc9      	ldrb	r1, [r1, r7]
        val |= d[1] << 8;
90001880:	7850      	ldrb	r0, [r2, #1]
        val |= d[2] << 16;
90001882:	7893      	ldrb	r3, [r2, #2]
        val |= d[3] << 24;
90001884:	78d2      	ldrb	r2, [r2, #3]
        val |= d[2] << 16;
90001886:	041b      	lsls	r3, r3, #16
90001888:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
9000188c:	430b      	orrs	r3, r1
        val |= d[3] << 24;
9000188e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
        videoInfo.frame_height = getU32(offset + 36);
90001892:	612b      	str	r3, [r5, #16]
    if (reader != 0)
90001894:	e60b      	b.n	900014ae <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x116>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001896:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001898:	4b1b      	ldr	r3, [pc, #108]	@ (90001908 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x570>)
9000189a:	4a1c      	ldr	r2, [pc, #112]	@ (9000190c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x574>)
9000189c:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
9000189e:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
            assert(!"Buffer to small");
900018a2:	481b      	ldr	r0, [pc, #108]	@ (90001910 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018a4:	f027 fe60 	bl	90029568 <__assert_func>
    assert(aviListSize);
900018a8:	4b1a      	ldr	r3, [pc, #104]	@ (90001914 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x57c>)
900018aa:	f44f 71aa 	mov.w	r1, #340	@ 0x154
900018ae:	4a1a      	ldr	r2, [pc, #104]	@ (90001918 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
900018b0:	4817      	ldr	r0, [pc, #92]	@ (90001910 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018b2:	f027 fe59 	bl	90029568 <__assert_func>
        lastError = AVI_ERROR_NOT_RIFF;
900018b6:	2003      	movs	r0, #3
        assert(!"RIFF header not found");
900018b8:	4b18      	ldr	r3, [pc, #96]	@ (9000191c <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x584>)
900018ba:	4a17      	ldr	r2, [pc, #92]	@ (90001918 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
900018bc:	f240 113f 	movw	r1, #319	@ 0x13f
        lastError = AVI_ERROR_NOT_RIFF;
900018c0:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"RIFF header not found");
900018c4:	4812      	ldr	r0, [pc, #72]	@ (90001910 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018c6:	f027 fe4f 	bl	90029568 <__assert_func>
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
900018ca:	2005      	movs	r0, #5
        assert(!"AVI LIST not found");
900018cc:	4b14      	ldr	r3, [pc, #80]	@ (90001920 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x588>)
900018ce:	4a12      	ldr	r2, [pc, #72]	@ (90001918 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
900018d0:	f44f 71a7 	mov.w	r1, #334	@ 0x14e
        lastError = AVI_ERROR_AVI_LIST_NOT_FOUND;
900018d4:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI LIST not found");
900018d8:	480d      	ldr	r0, [pc, #52]	@ (90001910 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018da:	f027 fe45 	bl	90029568 <__assert_func>
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
900018de:	2004      	movs	r0, #4
        assert(!"AVI header not found");
900018e0:	4b10      	ldr	r3, [pc, #64]	@ (90001924 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x58c>)
900018e2:	4a0d      	ldr	r2, [pc, #52]	@ (90001918 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x580>)
900018e4:	f240 1147 	movw	r1, #327	@ 0x147
        lastError = AVI_ERROR_AVI_HEADER_NOT_FOUND;
900018e8:	f885 0040 	strb.w	r0, [r5, #64]	@ 0x40
        assert(!"AVI header not found");
900018ec:	4808      	ldr	r0, [pc, #32]	@ (90001910 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x578>)
900018ee:	f027 fe3b 	bl	90029568 <__assert_func>
        src = (const char*)movieData + offset;
900018f2:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
900018f4:	4420      	add	r0, r4
900018f6:	e68f      	b.n	90001618 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv+0x280>
900018f8:	9002a97c 	.word	0x9002a97c
900018fc:	9002aa34 	.word	0x9002aa34
90001900:	9002aa2c 	.word	0x9002aa2c
90001904:	9002aa00 	.word	0x9002aa00
90001908:	9002a8a4 	.word	0x9002a8a4
9000190c:	9002a8b8 	.word	0x9002a8b8
90001910:	9002a838 	.word	0x9002a838
90001914:	9002aa08 	.word	0x9002aa08
90001918:	9002a9a0 	.word	0x9002a9a0
9000191c:	9002a984 	.word	0x9002a984
90001920:	9002a9e8 	.word	0x9002a9e8
90001924:	9002a9d0 	.word	0x9002a9d0
90001928:	10624dd3 	.word	0x10624dd3

9000192c <_ZN20HardwareMJPEGDecoder12setVideoDataEPKhm>:
{
9000192c:	b410      	push	{r4}
    reader = 0; /* not using reader */
9000192e:	2400      	movs	r4, #0
    movieLength = length;
90001930:	e9c0 210a 	strd	r2, r1, [r0, #40]	@ 0x28
    reader = 0; /* not using reader */
90001934:	6304      	str	r4, [r0, #48]	@ 0x30
}
90001936:	f85d 4b04 	ldr.w	r4, [sp], #4
    readVideoHeader();
9000193a:	f7ff bd2d 	b.w	90001398 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>
9000193e:	bf00      	nop

90001940 <_ZN20HardwareMJPEGDecoder12setVideoDataERN8touchgfx15VideoDataReaderE>:
{
90001940:	b510      	push	{r4, lr}
    movieLength = reader.getDataLength();
90001942:	680b      	ldr	r3, [r1, #0]
{
90001944:	4604      	mov	r4, r0
    movieData = 0;
90001946:	2200      	movs	r2, #0
    movieLength = reader.getDataLength();
90001948:	4608      	mov	r0, r1
9000194a:	689b      	ldr	r3, [r3, #8]
    movieData = 0;
9000194c:	e9c4 210b 	strd	r2, r1, [r4, #44]	@ 0x2c
    movieLength = reader.getDataLength();
90001950:	4798      	blx	r3
90001952:	4603      	mov	r3, r0
    readVideoHeader();
90001954:	4620      	mov	r0, r4
    movieLength = reader.getDataLength();
90001956:	62a3      	str	r3, [r4, #40]	@ 0x28
}
90001958:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    readVideoHeader();
9000195c:	f7ff bd1c 	b.w	90001398 <_ZN20HardwareMJPEGDecoder15readVideoHeaderEv>

90001960 <JPEG_Decode_DMA>:
     * @param  JPEGImageSize_Bytes    : jpg image size in bytes.
     * @param  DestAddress : ARGB8888 destination Frame Buffer Address.
     * @retval None
     */
    uint32_t JPEG_Decode_DMA(JPEG_HandleTypeDef* hjpeg, uint8_t* input, uint32_t chunkSizeIn /* length */, uint8_t* output)
    {
90001960:	b570      	push	{r4, r5, r6, lr}
        JPEG_output_is_paused = 0;
90001962:	4b1f      	ldr	r3, [pc, #124]	@ (900019e0 <JPEG_Decode_DMA+0x80>)
90001964:	2400      	movs	r4, #0
        JPEG_OUT_Read_BufferIndex = 0;
90001966:	4d1f      	ldr	r5, [pc, #124]	@ (900019e4 <JPEG_Decode_DMA+0x84>)
    {
90001968:	b082      	sub	sp, #8
        JPEG_output_is_paused = 0;
9000196a:	601c      	str	r4, [r3, #0]
        JPEG_OUT_Read_BufferIndex = 0;
9000196c:	602c      	str	r4, [r5, #0]
        JPEG_OUT_Write_BufferIndex = 0;
9000196e:	4b1e      	ldr	r3, [pc, #120]	@ (900019e8 <JPEG_Decode_DMA+0x88>)
        JPEG_InputImageIndex = 0;
        JPEG_InputImageAddress = (uint32_t)input;
        JPEG_InputImageSize_Bytes = chunkSizeIn;
        MCU_BlockIndex = 0;
90001970:	4d1e      	ldr	r5, [pc, #120]	@ (900019ec <JPEG_Decode_DMA+0x8c>)
        JPEG_OUT_Write_BufferIndex = 0;
90001972:	601c      	str	r4, [r3, #0]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
            Jpeg_OUT_BufferTab[i].FirstJob = false;
            Jpeg_OUT_BufferTab[i].LastJob = false;
        }
        Jpeg_OUT_BufferTab[0].FirstJob = true;
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001974:	4e1e      	ldr	r6, [pc, #120]	@ (900019f0 <JPEG_Decode_DMA+0x90>)
        MCU_BlockIndex = 0;
90001976:	602c      	str	r4, [r5, #0]
        line_count = 0;
90001978:	4d1e      	ldr	r5, [pc, #120]	@ (900019f4 <JPEG_Decode_DMA+0x94>)
9000197a:	602c      	str	r4, [r5, #0]
        {
            Jpeg_OUT_BufferTab[0].DoCropping = true;
        }

        /* Do not return from this function until done with decoding all chunks. */
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000197c:	68f5      	ldr	r5, [r6, #12]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
9000197e:	6b76      	ldr	r6, [r6, #52]	@ 0x34
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90001980:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90001984:	681b      	ldr	r3, [r3, #0]
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001986:	ebb6 0c04 	subs.w	ip, r6, r4
        JPEG_InputImageIndex = 0;
9000198a:	4e1b      	ldr	r6, [pc, #108]	@ (900019f8 <JPEG_Decode_DMA+0x98>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000198c:	ea4f 15c5 	mov.w	r5, r5, lsl #7
90001990:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        if (JPEG_ConvertorParams.firstRowOffset != 0)
90001994:	bf18      	it	ne
90001996:	f04f 0c01 	movne.w	ip, #1
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
9000199a:	9500      	str	r5, [sp, #0]
        JPEG_InputImageIndex = 0;
9000199c:	6034      	str	r4, [r6, #0]
        JPEG_InputImageAddress = (uint32_t)input;
9000199e:	4e17      	ldr	r6, [pc, #92]	@ (900019fc <JPEG_Decode_DMA+0x9c>)
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
900019a0:	4d17      	ldr	r5, [pc, #92]	@ (90001a00 <JPEG_Decode_DMA+0xa0>)
        JPEG_InputImageAddress = (uint32_t)input;
900019a2:	6031      	str	r1, [r6, #0]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
900019a4:	4e17      	ldr	r6, [pc, #92]	@ (90001a04 <JPEG_Decode_DMA+0xa4>)
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900019a6:	eb05 0383 	add.w	r3, r5, r3, lsl #2
        if (JPEG_ConvertorParams.firstRowOffset != 0)
900019aa:	f885 c018 	strb.w	ip, [r5, #24]
        JPEG_InputImageSize_Bytes = chunkSizeIn;
900019ae:	6032      	str	r2, [r6, #0]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
900019b0:	2201      	movs	r2, #1
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900019b2:	685b      	ldr	r3, [r3, #4]
        Jpeg_OUT_BufferTab[0].FirstJob = true;
900019b4:	766a      	strb	r2, [r5, #25]
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900019b6:	f44f 4250 	mov.w	r2, #53248	@ 0xd000
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
900019ba:	702c      	strb	r4, [r5, #0]
            Jpeg_OUT_BufferTab[i].DataBufferSize = 0;
900019bc:	60ac      	str	r4, [r5, #8]
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
900019be:	616c      	str	r4, [r5, #20]
            Jpeg_OUT_BufferTab[i].LastJob = false;
900019c0:	76ac      	strb	r4, [r5, #26]
            Jpeg_OUT_BufferTab[i].State = JPEG_BUFFER_EMPTY;
900019c2:	772c      	strb	r4, [r5, #28]
            Jpeg_OUT_BufferTab[i].DoCropping = false;
900019c4:	86ac      	strh	r4, [r5, #52]	@ 0x34
            Jpeg_OUT_BufferTab[i].LastJob = false;
900019c6:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
            Jpeg_OUT_BufferTab[i].MCU_drawn = 0;
900019ca:	e9c5 4403 	strd	r4, r4, [r5, #12]
            Jpeg_OUT_BufferTab[i].MCU_index = 0;
900019ce:	e9c5 4409 	strd	r4, r4, [r5, #36]	@ 0x24
            Jpeg_OUT_BufferTab[i].OutputBuffer = NULL;
900019d2:	e9c5 440b 	strd	r4, r4, [r5, #44]	@ 0x2c
        HAL_JPEG_Decode_DMA(hjpeg, input, CHUNK_SIZE_IN, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900019d6:	f007 f9fb 	bl	90008dd0 <HAL_JPEG_Decode_DMA>

        return 0;
    }
900019da:	4620      	mov	r0, r4
900019dc:	b002      	add	sp, #8
900019de:	bd70      	pop	{r4, r5, r6, pc}
900019e0:	24006010 	.word	0x24006010
900019e4:	24005df0 	.word	0x24005df0
900019e8:	24006004 	.word	0x24006004
900019ec:	24005df8 	.word	0x24005df8
900019f0:	24005dac 	.word	0x24005dac
900019f4:	24006000 	.word	0x24006000
900019f8:	24006020 	.word	0x24006020
900019fc:	24006018 	.word	0x24006018
90001a00:	24000004 	.word	0x24000004
90001a04:	2400601c 	.word	0x2400601c

90001a08 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>:
void HardwareMJPEGDecoder::decodeMJPEGFrame(const uint8_t* const mjpgdata, const uint32_t length, uint8_t* outputBuffer, uint16_t bufferWidth, uint16_t bufferHeight, uint32_t bufferStride)
90001a08:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90001a0c:	4606      	mov	r6, r0
        JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001a0e:	2402      	movs	r4, #2
90001a10:	483e      	ldr	r0, [pc, #248]	@ (90001b0c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x104>)
90001a12:	6104      	str	r4, [r0, #16]
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001a14:	68f4      	ldr	r4, [r6, #12]
        if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001a16:	0725      	lsls	r5, r4, #28
90001a18:	d002      	beq.n	90001a20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x18>
            JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90001a1a:	f024 040f 	bic.w	r4, r4, #15
90001a1e:	3410      	adds	r4, #16
        JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001a20:	6004      	str	r4, [r0, #0]
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001a22:	0924      	lsrs	r4, r4, #4
        DMA2D_reference = dma;
90001a24:	4d3a      	ldr	r5, [pc, #232]	@ (90001b10 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x108>)
        JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001a26:	60c4      	str	r4, [r0, #12]
        JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001a28:	f44f 7470 	mov.w	r4, #960	@ 0x3c0
90001a2c:	f8df a100 	ldr.w	sl, [pc, #256]	@ 90001b30 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x128>
90001a30:	6044      	str	r4, [r0, #4]
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001a32:	6934      	ldr	r4, [r6, #16]
    {
        DMA2D_reference->start();
    }

    /* Start JPEG IP if paused and next buffer is empty */
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a34:	4f37      	ldr	r7, [pc, #220]	@ (90001b14 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x10c>)
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001a36:	f014 040f 	ands.w	r4, r4, #15
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a3a:	f8df 90f8 	ldr.w	r9, [pc, #248]	@ 90001b34 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x12c>
90001a3e:	f8df 80f8 	ldr.w	r8, [pc, #248]	@ 90001b38 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x130>
        JPEG_ConvertorParams.LastLineHeight = (videoInfo.frame_height % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (videoInfo.frame_height % MCU_HEIGHT_PIXELS);
90001a42:	bf18      	it	ne
90001a44:	f1c4 0410 	rsbne	r4, r4, #16
90001a48:	6084      	str	r4, [r0, #8]
        FrameBufferAddress = outputBuffer;
90001a4a:	4833      	ldr	r0, [pc, #204]	@ (90001b18 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x110>)
90001a4c:	4c33      	ldr	r4, [pc, #204]	@ (90001b1c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x114>)
90001a4e:	6003      	str	r3, [r0, #0]
        JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, outputBuffer);
90001a50:	4833      	ldr	r0, [pc, #204]	@ (90001b20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001a52:	f7ff ff85 	bl	90001960 <JPEG_Decode_DMA>
        DMA2D_reference = dma;
90001a56:	6c73      	ldr	r3, [r6, #68]	@ 0x44
90001a58:	4e32      	ldr	r6, [pc, #200]	@ (90001b24 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x11c>)
90001a5a:	602b      	str	r3, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001a5c:	f8da 3000 	ldr.w	r3, [sl]
90001a60:	b10b      	cbz	r3, 90001a66 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x5e>
90001a62:	6833      	ldr	r3, [r6, #0]
90001a64:	bb6b      	cbnz	r3, 90001ac2 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xba>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001a66:	6828      	ldr	r0, [r5, #0]
90001a68:	7a03      	ldrb	r3, [r0, #8]
90001a6a:	b93b      	cbnz	r3, 90001a7c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x74>
90001a6c:	4b2e      	ldr	r3, [pc, #184]	@ (90001b28 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x120>)
90001a6e:	681b      	ldr	r3, [r3, #0]
90001a70:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001a74:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001a78:	2b01      	cmp	r3, #1
90001a7a:	d03b      	beq.n	90001af4 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xec>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a7c:	683b      	ldr	r3, [r7, #0]
90001a7e:	2b01      	cmp	r3, #1
90001a80:	d00d      	beq.n	90001a9e <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x96>
    {
        JPEG_output_is_paused = 0;
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
    }

    return 2;
90001a82:	2302      	movs	r3, #2
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001a84:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001a86:	6823      	ldr	r3, [r4, #0]
90001a88:	2b02      	cmp	r3, #2
90001a8a:	d024      	beq.n	90001ad6 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xce>
        } while (JpegProcessing_End != 1);
90001a8c:	6823      	ldr	r3, [r4, #0]
90001a8e:	2b01      	cmp	r3, #1
90001a90:	d1e4      	bne.n	90001a5c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x54>
        Jpeg_HWDecodingEnd = 0;
90001a92:	2300      	movs	r3, #0
90001a94:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001a98:	6033      	str	r3, [r6, #0]
}
90001a9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001a9e:	f8d9 3000 	ldr.w	r3, [r9]
90001aa2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001aa6:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001aaa:	2b00      	cmp	r3, #0
90001aac:	d1e9      	bne.n	90001a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x7a>
90001aae:	f8da 3000 	ldr.w	r3, [sl]
90001ab2:	2b00      	cmp	r3, #0
90001ab4:	d1e5      	bne.n	90001a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x7a>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001ab6:	2102      	movs	r1, #2
90001ab8:	4819      	ldr	r0, [pc, #100]	@ (90001b20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
        JPEG_output_is_paused = 0;
90001aba:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001abc:	f007 fb38 	bl	90009130 <HAL_JPEG_Resume>
90001ac0:	e7df      	b.n	90001a82 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x7a>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001ac2:	4817      	ldr	r0, [pc, #92]	@ (90001b20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001ac4:	f008 f8fe 	bl	90009cc4 <HAL_JPEG_GetState>
90001ac8:	2804      	cmp	r0, #4
90001aca:	d01a      	beq.n	90001b02 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xfa>
        return 1;
90001acc:	2301      	movs	r3, #1
            JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001ace:	6023      	str	r3, [r4, #0]
            if (JpegProcessing_End == 2)
90001ad0:	6823      	ldr	r3, [r4, #0]
90001ad2:	2b02      	cmp	r3, #2
90001ad4:	d1da      	bne.n	90001a8c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x84>
                SEM_WAIT(semDecodingDone);
90001ad6:	4b15      	ldr	r3, [pc, #84]	@ (90001b2c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x124>)
90001ad8:	f04f 31ff 	mov.w	r1, #4294967295
90001adc:	6818      	ldr	r0, [r3, #0]
90001ade:	f00b fc43 	bl	9000d368 <osSemaphoreAcquire>
        } while (JpegProcessing_End != 1);
90001ae2:	6823      	ldr	r3, [r4, #0]
90001ae4:	2b01      	cmp	r3, #1
90001ae6:	d1b9      	bne.n	90001a5c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x54>
        Jpeg_HWDecodingEnd = 0;
90001ae8:	2300      	movs	r3, #0
90001aea:	f8ca 3000 	str.w	r3, [sl]
        DMA2D_CopyBufferEnd = 0;
90001aee:	6033      	str	r3, [r6, #0]
}
90001af0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001af4:	6833      	ldr	r3, [r6, #0]
90001af6:	2b00      	cmp	r3, #0
90001af8:	d1c0      	bne.n	90001a7c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x74>
        DMA2D_reference->start();
90001afa:	6803      	ldr	r3, [r0, #0]
90001afc:	691b      	ldr	r3, [r3, #16]
90001afe:	4798      	blx	r3
90001b00:	e7bc      	b.n	90001a7c <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x74>
            HAL_JPEG_Abort(hjpeg);
90001b02:	4807      	ldr	r0, [pc, #28]	@ (90001b20 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0x118>)
90001b04:	f007 f9e2 	bl	90008ecc <HAL_JPEG_Abort>
90001b08:	e7e0      	b.n	90001acc <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0+0xc4>
90001b0a:	bf00      	nop
90001b0c:	24005dac 	.word	0x24005dac
90001b10:	24006008 	.word	0x24006008
90001b14:	24006010 	.word	0x24006010
90001b18:	24006024 	.word	0x24006024
90001b1c:	2400600c 	.word	0x2400600c
90001b20:	24007730 	.word	0x24007730
90001b24:	24005dec 	.word	0x24005dec
90001b28:	24005df0 	.word	0x24005df0
90001b2c:	24005df4 	.word	0x24005df4
90001b30:	24006014 	.word	0x24006014
90001b34:	24006004 	.word	0x24006004
90001b38:	24000004 	.word	0x24000004

90001b3c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm>:
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001b3c:	6943      	ldr	r3, [r0, #20]
{
90001b3e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001b42:	2b00      	cmp	r3, #0
90001b44:	f000 80ad 	beq.w	90001ca2 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x166>
    readData(currentMovieOffset, 8);
90001b48:	4604      	mov	r4, r0
    if (reader != 0)
90001b4a:	6b00      	ldr	r0, [r0, #48]	@ 0x30
90001b4c:	460e      	mov	r6, r1
    readData(currentMovieOffset, 8);
90001b4e:	69a5      	ldr	r5, [r4, #24]
    if (reader != 0)
90001b50:	2800      	cmp	r0, #0
90001b52:	d05f      	beq.n	90001c14 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd8>
        if (length > aviBufferLength)
90001b54:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001b56:	2b07      	cmp	r3, #7
90001b58:	f240 80a9 	bls.w	90001cae <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001b5c:	6803      	ldr	r3, [r0, #0]
90001b5e:	4629      	mov	r1, r5
90001b60:	68db      	ldr	r3, [r3, #12]
90001b62:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001b64:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001b66:	2208      	movs	r2, #8
90001b68:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001b6a:	6803      	ldr	r3, [r0, #0]
90001b6c:	691b      	ldr	r3, [r3, #16]
90001b6e:	4798      	blx	r3
90001b70:	2800      	cmp	r0, #0
90001b72:	d04a      	beq.n	90001c0a <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xce>
    uint32_t streamNo  = getU16(currentMovieOffset);
90001b74:	69a1      	ldr	r1, [r4, #24]
    if (reader != 0)
90001b76:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001b78:	f101 0c04 	add.w	ip, r1, #4
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001b7c:	1c8a      	adds	r2, r1, #2
        aviBufferStartOffset = offset;
90001b7e:	63e5      	str	r5, [r4, #60]	@ 0x3c
    if (reader != 0)
90001b80:	2800      	cmp	r0, #0
90001b82:	d046      	beq.n	90001c12 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xd6>
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b84:	6b63      	ldr	r3, [r4, #52]	@ 0x34
        const uint32_t index = offset - aviBufferStartOffset;
90001b86:	ebac 0c05 	sub.w	ip, ip, r5
        const uint32_t index = offset - aviBufferStartOffset;
90001b8a:	1b52      	subs	r2, r2, r5
90001b8c:	1b4d      	subs	r5, r1, r5
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001b8e:	eb03 070c 	add.w	r7, r3, ip
90001b92:	f813 e00c 	ldrb.w	lr, [r3, ip]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001b96:	eb03 0805 	add.w	r8, r3, r5
90001b9a:	f813 c005 	ldrb.w	ip, [r3, r5]
90001b9e:	f898 5001 	ldrb.w	r5, [r8, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001ba2:	f897 8001 	ldrb.w	r8, [r7, #1]
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001ba6:	ea4c 2c05 	orr.w	ip, ip, r5, lsl #8
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001baa:	78bd      	ldrb	r5, [r7, #2]
90001bac:	78ff      	ldrb	r7, [r7, #3]
90001bae:	042d      	lsls	r5, r5, #16
90001bb0:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
90001bb4:	ea45 050e 	orr.w	r5, r5, lr
90001bb8:	ea45 6507 	orr.w	r5, r5, r7, lsl #24
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8);
90001bbc:	189f      	adds	r7, r3, r2
90001bbe:	5c9b      	ldrb	r3, [r3, r2]
90001bc0:	787a      	ldrb	r2, [r7, #1]
90001bc2:	ea43 2702 	orr.w	r7, r3, r2, lsl #8
    if (currentMovieOffset + 8 + chunkSize < movieLength)
90001bc6:	eb01 0e05 	add.w	lr, r1, r5
90001bca:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90001bcc:	f10e 0208 	add.w	r2, lr, #8
90001bd0:	429a      	cmp	r2, r3
90001bd2:	d213      	bcs.n	90001bfc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
        if (streamNo == STREAM0 && chunkType == TYPEDC && chunkSize > 0)
90001bd4:	f243 0330 	movw	r3, #12336	@ 0x3030
90001bd8:	459c      	cmp	ip, r3
90001bda:	d138      	bne.n	90001c4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001bdc:	f246 3364 	movw	r3, #25444	@ 0x6364
90001be0:	429f      	cmp	r7, r3
90001be2:	d134      	bne.n	90001c4e <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x112>
90001be4:	2d00      	cmp	r5, #0
90001be6:	d136      	bne.n	90001c56 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x11a>
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001be8:	3201      	adds	r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001bea:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001bec:	f022 0201 	bic.w	r2, r2, #1
        if (currentMovieOffset == lastFrameEnd)
90001bf0:	429a      	cmp	r2, r3
        currentMovieOffset = (currentMovieOffset + 1) & 0xFFFFFFFE; /* pad to next word */
90001bf2:	61a2      	str	r2, [r4, #24]
        if (currentMovieOffset == lastFrameEnd)
90001bf4:	d002      	beq.n	90001bfc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xc0>
90001bf6:	2001      	movs	r0, #1
}
90001bf8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        frameNumber = 1;
90001bfc:	2201      	movs	r2, #1
        currentMovieOffset = firstFrameOffset; /* start over */
90001bfe:	6a23      	ldr	r3, [r4, #32]
        if (chunkSize == 0) /* Empty frame - Skip */
90001c00:	2000      	movs	r0, #0
        currentMovieOffset = firstFrameOffset; /* start over */
90001c02:	e9c4 2305 	strd	r2, r3, [r4, #20]
}
90001c06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            lastError = AVI_ERROR_EOF_REACHED;
90001c0a:	230d      	movs	r3, #13
90001c0c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001c10:	e7b0      	b.n	90001b74 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x38>
90001c12:	460d      	mov	r5, r1
        volatile const uint8_t* const d = movieData + offset;
90001c14:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    uint32_t chunkType = getU16(currentMovieOffset + 2);
90001c16:	1caf      	adds	r7, r5, #2
    uint32_t chunkSize = getU32(currentMovieOffset + 4);
90001c18:	1d28      	adds	r0, r5, #4
        val |= d[3] << 24;
90001c1a:	4629      	mov	r1, r5
        volatile const uint8_t* const d = movieData + offset;
90001c1c:	195a      	adds	r2, r3, r5
        val |= d[0];
90001c1e:	f813 c005 	ldrb.w	ip, [r3, r5]
        volatile const uint8_t* const d = movieData + offset;
90001c22:	19dd      	adds	r5, r3, r7
        val |= d[1] << 8;
90001c24:	7852      	ldrb	r2, [r2, #1]
        val |= d[0];
90001c26:	5ddf      	ldrb	r7, [r3, r7]
        val |= d[1] << 8;
90001c28:	ea4c 2c02 	orr.w	ip, ip, r2, lsl #8
90001c2c:	786d      	ldrb	r5, [r5, #1]
        volatile const uint8_t* const d = movieData + offset;
90001c2e:	181a      	adds	r2, r3, r0
        val |= d[0];
90001c30:	5c18      	ldrb	r0, [r3, r0]
        val |= d[1] << 8;
90001c32:	ea47 2705 	orr.w	r7, r7, r5, lsl #8
        val |= d[1] << 8;
90001c36:	f892 e001 	ldrb.w	lr, [r2, #1]
        val |= d[2] << 16;
90001c3a:	7895      	ldrb	r5, [r2, #2]
        val |= d[3] << 24;
90001c3c:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001c3e:	042d      	lsls	r5, r5, #16
90001c40:	ea45 250e 	orr.w	r5, r5, lr, lsl #8
90001c44:	4305      	orrs	r5, r0
        val |= d[3] << 24;
90001c46:	2000      	movs	r0, #0
90001c48:	ea45 6503 	orr.w	r5, r5, r3, lsl #24
        return val;
90001c4c:	e7bb      	b.n	90001bc6 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x8a>
        if (chunkSize == 0) /* Empty frame - Skip */
90001c4e:	2d00      	cmp	r5, #0
90001c50:	bf18      	it	ne
90001c52:	4672      	movne	r2, lr
90001c54:	e7c8      	b.n	90001be8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
            currentMovieOffset += 8;
90001c56:	f101 0708 	add.w	r7, r1, #8
90001c5a:	61a7      	str	r7, [r4, #24]
    if (reader != 0)
90001c5c:	b1f0      	cbz	r0, 90001c9c <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x160>
        if (length > aviBufferLength)
90001c5e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001c60:	429d      	cmp	r5, r3
90001c62:	d824      	bhi.n	90001cae <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x172>
        reader->seek(offset);
90001c64:	6803      	ldr	r3, [r0, #0]
90001c66:	4639      	mov	r1, r7
90001c68:	68db      	ldr	r3, [r3, #12]
90001c6a:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001c6c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001c6e:	462a      	mov	r2, r5
90001c70:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001c72:	6803      	ldr	r3, [r0, #0]
90001c74:	691b      	ldr	r3, [r3, #16]
90001c76:	4798      	blx	r3
90001c78:	b910      	cbnz	r0, 90001c80 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x144>
            lastError = AVI_ERROR_EOF_REACHED;
90001c7a:	230d      	movs	r3, #13
90001c7c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
        return aviBuffer;
90001c80:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001c82:	63e7      	str	r7, [r4, #60]	@ 0x3c
    if (outputBuffer) /* only decode if buffers are assigned. */
90001c84:	b126      	cbz	r6, 90001c90 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x154>
90001c86:	4633      	mov	r3, r6
90001c88:	462a      	mov	r2, r5
90001c8a:	4620      	mov	r0, r4
90001c8c:	f7ff febc 	bl	90001a08 <_ZN20HardwareMJPEGDecoder16decodeMJPEGFrameEPKhmPhttm.part.0>
        currentMovieOffset += chunkSize;
90001c90:	e9d4 3205 	ldrd	r3, r2, [r4, #20]
            frameNumber++;
90001c94:	3301      	adds	r3, #1
        currentMovieOffset += chunkSize;
90001c96:	442a      	add	r2, r5
            frameNumber++;
90001c98:	6163      	str	r3, [r4, #20]
        if (chunkSize == 0) /* Empty frame - Skip */
90001c9a:	e7a5      	b.n	90001be8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0xac>
    return movieData + offset;
90001c9c:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90001c9e:	4439      	add	r1, r7
90001ca0:	e7f0      	b.n	90001c84 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x148>
    assert((frameNumber > 0) && "HardwareMJPEGDecoder decoding without frame data!");
90001ca2:	4b07      	ldr	r3, [pc, #28]	@ (90001cc0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x184>)
90001ca4:	21c3      	movs	r1, #195	@ 0xc3
90001ca6:	4a07      	ldr	r2, [pc, #28]	@ (90001cc4 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x188>)
90001ca8:	4807      	ldr	r0, [pc, #28]	@ (90001cc8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001caa:	f027 fc5d 	bl	90029568 <__assert_func>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001cae:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001cb0:	4b06      	ldr	r3, [pc, #24]	@ (90001ccc <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x190>)
90001cb2:	4a07      	ldr	r2, [pc, #28]	@ (90001cd0 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x194>)
90001cb4:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001cb6:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001cba:	4803      	ldr	r0, [pc, #12]	@ (90001cc8 <_ZN20HardwareMJPEGDecoder15decodeNextFrameEPhttm+0x18c>)
90001cbc:	f027 fc54 	bl	90029568 <__assert_func>
90001cc0:	9002a8fc 	.word	0x9002a8fc
90001cc4:	9002aa3c 	.word	0x9002aa3c
90001cc8:	9002a838 	.word	0x9002a838
90001ccc:	9002a8a4 	.word	0x9002a8a4
90001cd0:	9002a8b8 	.word	0x9002a8b8

90001cd4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm>:
{
90001cd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90001cd8:	4604      	mov	r4, r0
    readData(currentMovieOffset, 8);
90001cda:	f8d0 9018 	ldr.w	r9, [r0, #24]
    if (reader != 0)
90001cde:	6b00      	ldr	r0, [r0, #48]	@ 0x30
{
90001ce0:	460e      	mov	r6, r1
90001ce2:	4690      	mov	r8, r2
90001ce4:	461f      	mov	r7, r3
    if (reader != 0)
90001ce6:	2800      	cmp	r0, #0
90001ce8:	f000 80f9 	beq.w	90001ede <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x20a>
        if (length > aviBufferLength)
90001cec:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
90001cee:	2b07      	cmp	r3, #7
90001cf0:	f240 810a 	bls.w	90001f08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x234>
        reader->seek(offset);
90001cf4:	6803      	ldr	r3, [r0, #0]
90001cf6:	4649      	mov	r1, r9
90001cf8:	68db      	ldr	r3, [r3, #12]
90001cfa:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001cfc:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001cfe:	2208      	movs	r2, #8
90001d00:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001d02:	6803      	ldr	r3, [r0, #0]
90001d04:	691b      	ldr	r3, [r3, #16]
90001d06:	4798      	blx	r3
90001d08:	2800      	cmp	r0, #0
90001d0a:	f000 80b3 	beq.w	90001e74 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a0>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001d0e:	69a2      	ldr	r2, [r4, #24]
    if (reader != 0)
90001d10:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    const uint32_t length = getU32(currentMovieOffset + 4);
90001d12:	1d13      	adds	r3, r2, #4
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001d14:	f102 0508 	add.w	r5, r2, #8
        aviBufferStartOffset = offset;
90001d18:	f8c4 903c 	str.w	r9, [r4, #60]	@ 0x3c
    if (reader != 0)
90001d1c:	2800      	cmp	r0, #0
90001d1e:	f000 80fc 	beq.w	90001f1a <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x246>
        const uint32_t index = offset - aviBufferStartOffset;
90001d22:	eba3 0209 	sub.w	r2, r3, r9
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001d26:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90001d28:	1899      	adds	r1, r3, r2
90001d2a:	5c9a      	ldrb	r2, [r3, r2]
        if (length > aviBufferLength)
90001d2c:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
        return aviBuffer[index + 0] | (aviBuffer[index + 1] << 8) | (aviBuffer[index + 2] << 16) | (aviBuffer[index + 3] << 24);
90001d2e:	f891 9002 	ldrb.w	r9, [r1, #2]
90001d32:	f891 c001 	ldrb.w	ip, [r1, #1]
90001d36:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001d3a:	ea49 290c 	orr.w	r9, r9, ip, lsl #8
90001d3e:	ea49 0902 	orr.w	r9, r9, r2
90001d42:	78ca      	ldrb	r2, [r1, #3]
90001d44:	ea49 6902 	orr.w	r9, r9, r2, lsl #24
        if (length > aviBufferLength)
90001d48:	454b      	cmp	r3, r9
90001d4a:	f0c0 80dd 	bcc.w	90001f08 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x234>
        reader->seek(offset);
90001d4e:	6803      	ldr	r3, [r0, #0]
90001d50:	4629      	mov	r1, r5
90001d52:	68db      	ldr	r3, [r3, #12]
90001d54:	4798      	blx	r3
        if (!reader->readData(aviBuffer, length))
90001d56:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90001d58:	464a      	mov	r2, r9
90001d5a:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90001d5c:	6803      	ldr	r3, [r0, #0]
90001d5e:	691b      	ldr	r3, [r3, #16]
90001d60:	4798      	blx	r3
90001d62:	2800      	cmp	r0, #0
90001d64:	f000 8082 	beq.w	90001e6c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x198>
        return aviBuffer;
90001d68:	6b61      	ldr	r1, [r4, #52]	@ 0x34
        aviBufferStartOffset = offset;
90001d6a:	63e5      	str	r5, [r4, #60]	@ 0x3c
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d6c:	f8d4 c00c 	ldr.w	ip, [r4, #12]
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d70:	2302      	movs	r3, #2
90001d72:	486b      	ldr	r0, [pc, #428]	@ (90001f20 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x24c>)
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d74:	f01c 0f0f 	tst.w	ip, #15
    JPEG_ConvertorParams.bytes_pr_pixel = 2;
90001d78:	6103      	str	r3, [r0, #16]
    if ((JPEG_ConvertorParams.WidthExtend % 16) != 0)
90001d7a:	d172      	bne.n	90001e62 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x18e>
90001d7c:	4662      	mov	r2, ip
90001d7e:	4663      	mov	r3, ip
     *
     * @return x coordinate of the right edge (calculated as "x + width").
     */
    FORCE_INLINE_FUNCTION int16_t right() const
    {
        return x + width;
90001d80:	88b5      	ldrh	r5, [r6, #4]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d82:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.WidthExtend = videoInfo.frame_width;
90001d84:	6002      	str	r2, [r0, #0]
    JPEG_ConvertorParams.startX = area.x;
90001d86:	f9b6 2000 	ldrsh.w	r2, [r6]
    JPEG_ConvertorParams.MCU_pr_line = JPEG_ConvertorParams.WidthExtend / MCU_WIDTH_PIXELS;
90001d8a:	60c3      	str	r3, [r0, #12]
90001d8c:	4415      	add	r5, r2
    JPEG_ConvertorParams.startY = area.y;
90001d8e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
     *
     * @return y coordinate of the bottom edge (calculated as "y + height").
     */
    FORCE_INLINE_FUNCTION int16_t bottom() const
    {
        return y + height;
90001d92:	88f6      	ldrh	r6, [r6, #6]
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d94:	b22d      	sxth	r5, r5
    JPEG_ConvertorParams.startY = area.y;
90001d96:	6143      	str	r3, [r0, #20]
90001d98:	441e      	add	r6, r3
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001d9a:	f003 030f 	and.w	r3, r3, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001d9e:	4565      	cmp	r5, ip
    JPEG_ConvertorParams.startX = area.x;
90001da0:	61c2      	str	r2, [r0, #28]
    JPEG_ConvertorParams.firstRowOffset = JPEG_ConvertorParams.startY % MCU_HEIGHT_PIXELS;
90001da2:	6343      	str	r3, [r0, #52]	@ 0x34
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001da4:	b236      	sxth	r6, r6
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001da6:	bf28      	it	cs
90001da8:	4665      	movcs	r5, ip
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001daa:	ea4f 1c12 	mov.w	ip, r2, lsr #4
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001dae:	f002 020f 	and.w	r2, r2, #15
90001db2:	f8df a1a0 	ldr.w	sl, [pc, #416]	@ 90001f54 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x280>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001db6:	f105 030f 	add.w	r3, r5, #15
    JPEG_ConvertorParams.endX = MIN((uint32_t)area.right(), videoInfo.frame_width);
90001dba:	6205      	str	r5, [r0, #32]
    JPEG_ConvertorParams.firstColOffset = JPEG_ConvertorParams.startX % MCU_WIDTH_PIXELS;
90001dbc:	6302      	str	r2, [r0, #48]	@ 0x30
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001dbe:	464a      	mov	r2, r9
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001dc0:	091b      	lsrs	r3, r3, #4
    JPEG_ConvertorParams.MCUStart = JPEG_ConvertorParams.startX / MCU_WIDTH_PIXELS;
90001dc2:	f8c0 c024 	str.w	ip, [r0, #36]	@ 0x24
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001dc6:	f8df 9190 	ldr.w	r9, [pc, #400]	@ 90001f58 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x284>
    JPEG_ConvertorParams.MCUEnd = (JPEG_ConvertorParams.endX + MCU_WIDTH_PIXELS - 1) / MCU_WIDTH_PIXELS; // Ceil division
90001dca:	6283      	str	r3, [r0, #40]	@ 0x28
    JPEG_ConvertorParams.MCU_pr_job = JPEG_ConvertorParams.MCUEnd - JPEG_ConvertorParams.MCUStart;
90001dcc:	eba3 030c 	sub.w	r3, r3, ip
90001dd0:	62c3      	str	r3, [r0, #44]	@ 0x2c
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001dd2:	6923      	ldr	r3, [r4, #16]
90001dd4:	429e      	cmp	r6, r3
90001dd6:	bf28      	it	cs
90001dd8:	461e      	movcs	r6, r3
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001dda:	f015 050f 	ands.w	r5, r5, #15
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001dde:	f44f 7370 	mov.w	r3, #960	@ 0x3c0
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001de2:	bf18      	it	ne
90001de4:	f1c5 0510 	rsbne	r5, r5, #16
    JPEG_ConvertorParams.endY = MIN((uint32_t)area.bottom(), videoInfo.frame_height);
90001de8:	6186      	str	r6, [r0, #24]
    JPEG_ConvertorParams.ScaledWidth = 480 * JPEG_ConvertorParams.bytes_pr_pixel;
90001dea:	6043      	str	r3, [r0, #4]
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001dec:	f016 060f 	ands.w	r6, r6, #15
    FrameBufferWidth = framebuffer_width;
90001df0:	4b4c      	ldr	r3, [pc, #304]	@ (90001f24 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x250>)
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001df2:	bf18      	it	ne
90001df4:	f1c6 0610 	rsbne	r6, r6, #16
    JPEG_ConvertorParams.lastColOffset = (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (JPEG_ConvertorParams.endX % MCU_WIDTH_PIXELS);
90001df8:	6385      	str	r5, [r0, #56]	@ 0x38
    FrameBufferWidth = framebuffer_width;
90001dfa:	601f      	str	r7, [r3, #0]
    FrameBufferAddress = frameBuffer;
90001dfc:	4b4a      	ldr	r3, [pc, #296]	@ (90001f28 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x254>)
    JPEG_ConvertorParams.lastRowOffset = (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS) == 0 ? 0 : MCU_HEIGHT_PIXELS - (JPEG_ConvertorParams.endY % MCU_HEIGHT_PIXELS);
90001dfe:	63c6      	str	r6, [r0, #60]	@ 0x3c
    FrameBufferAddress = frameBuffer;
90001e00:	f8c3 8000 	str.w	r8, [r3]
    JPEG_Decode_DMA(&hjpeg, const_cast<uint8_t*>(mjpgdata), length, frameBuffer);
90001e04:	4643      	mov	r3, r8
90001e06:	4849      	ldr	r0, [pc, #292]	@ (90001f2c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
90001e08:	f7ff fdaa 	bl	90001960 <JPEG_Decode_DMA>
    DMA2D_reference = dma;
90001e0c:	4d48      	ldr	r5, [pc, #288]	@ (90001f30 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x25c>)
90001e0e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90001e10:	4e48      	ldr	r6, [pc, #288]	@ (90001f34 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x260>)
90001e12:	4c49      	ldr	r4, [pc, #292]	@ (90001f38 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x264>)
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001e14:	4f49      	ldr	r7, [pc, #292]	@ (90001f3c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x268>)
90001e16:	f8df 8144 	ldr.w	r8, [pc, #324]	@ 90001f5c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x288>
    DMA2D_reference = dma;
90001e1a:	602b      	str	r3, [r5, #0]
    if (Jpeg_HWDecodingEnd && DMA2D_CopyBufferEnd)
90001e1c:	f8da 3000 	ldr.w	r3, [sl]
90001e20:	b113      	cbz	r3, 90001e28 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x154>
90001e22:	6833      	ldr	r3, [r6, #0]
90001e24:	2b00      	cmp	r3, #0
90001e26:	d13b      	bne.n	90001ea0 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1cc>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001e28:	6828      	ldr	r0, [r5, #0]
90001e2a:	7a03      	ldrb	r3, [r0, #8]
90001e2c:	b93b      	cbnz	r3, 90001e3e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16a>
90001e2e:	4b44      	ldr	r3, [pc, #272]	@ (90001f40 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x26c>)
90001e30:	681b      	ldr	r3, [r3, #0]
90001e32:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001e36:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001e3a:	2b01      	cmp	r3, #1
90001e3c:	d044      	beq.n	90001ec8 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1f4>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001e3e:	683b      	ldr	r3, [r7, #0]
90001e40:	2b01      	cmp	r3, #1
90001e42:	d01b      	beq.n	90001e7c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1a8>
    return 2;
90001e44:	2302      	movs	r3, #2
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001e46:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001e48:	6823      	ldr	r3, [r4, #0]
90001e4a:	2b02      	cmp	r3, #2
90001e4c:	d032      	beq.n	90001eb4 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1e0>
    } while (JpegProcessing_End != 1);
90001e4e:	6823      	ldr	r3, [r4, #0]
90001e50:	2b01      	cmp	r3, #1
90001e52:	d1e3      	bne.n	90001e1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
    Jpeg_HWDecodingEnd = 0;
90001e54:	2300      	movs	r3, #0
}
90001e56:	2001      	movs	r0, #1
    Jpeg_HWDecodingEnd = 0;
90001e58:	f8ca 3000 	str.w	r3, [sl]
    DMA2D_CopyBufferEnd = 0;
90001e5c:	6033      	str	r3, [r6, #0]
}
90001e5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        JPEG_ConvertorParams.WidthExtend += 16 - (JPEG_ConvertorParams.WidthExtend % 16);
90001e62:	f02c 030f 	bic.w	r3, ip, #15
90001e66:	3310      	adds	r3, #16
90001e68:	461a      	mov	r2, r3
90001e6a:	e789      	b.n	90001d80 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0xac>
            lastError = AVI_ERROR_EOF_REACHED;
90001e6c:	230d      	movs	r3, #13
90001e6e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e72:	e779      	b.n	90001d68 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x94>
90001e74:	230d      	movs	r3, #13
90001e76:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
90001e7a:	e748      	b.n	90001d0e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x3a>
    if ((JPEG_output_is_paused == 1) && (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State == JPEG_BUFFER_EMPTY) && (Jpeg_HWDecodingEnd == 0))
90001e7c:	f8d9 3000 	ldr.w	r3, [r9]
90001e80:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90001e84:	f818 3023 	ldrb.w	r3, [r8, r3, lsl #2]
90001e88:	2b00      	cmp	r3, #0
90001e8a:	d1db      	bne.n	90001e44 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
90001e8c:	f8da 3000 	ldr.w	r3, [sl]
90001e90:	2b00      	cmp	r3, #0
90001e92:	d1d7      	bne.n	90001e44 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e94:	2102      	movs	r1, #2
90001e96:	4825      	ldr	r0, [pc, #148]	@ (90001f2c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
        JPEG_output_is_paused = 0;
90001e98:	603b      	str	r3, [r7, #0]
        HAL_JPEG_Resume(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
90001e9a:	f007 f949 	bl	90009130 <HAL_JPEG_Resume>
90001e9e:	e7d1      	b.n	90001e44 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x170>
        if (HAL_JPEG_GetState(hjpeg) == HAL_JPEG_STATE_BUSY_DECODING)
90001ea0:	4822      	ldr	r0, [pc, #136]	@ (90001f2c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
90001ea2:	f007 ff0f 	bl	90009cc4 <HAL_JPEG_GetState>
90001ea6:	2804      	cmp	r0, #4
90001ea8:	d015      	beq.n	90001ed6 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x202>
        return 1;
90001eaa:	2301      	movs	r3, #1
        JpegProcessing_End = JPEG_OutputHandler(&hjpeg);
90001eac:	6023      	str	r3, [r4, #0]
        if (JpegProcessing_End == 2)
90001eae:	6823      	ldr	r3, [r4, #0]
90001eb0:	2b02      	cmp	r3, #2
90001eb2:	d1cc      	bne.n	90001e4e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x17a>
            SEM_WAIT(semDecodingDone);
90001eb4:	4b23      	ldr	r3, [pc, #140]	@ (90001f44 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x270>)
90001eb6:	f04f 31ff 	mov.w	r1, #4294967295
90001eba:	6818      	ldr	r0, [r3, #0]
90001ebc:	f00b fa54 	bl	9000d368 <osSemaphoreAcquire>
    } while (JpegProcessing_End != 1);
90001ec0:	6823      	ldr	r3, [r4, #0]
90001ec2:	2b01      	cmp	r3, #1
90001ec4:	d1aa      	bne.n	90001e1c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x148>
90001ec6:	e7c5      	b.n	90001e54 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x180>
    if (!DMA2D_reference->isDMARunning() && (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && (DMA2D_CopyBufferEnd == 0))
90001ec8:	6833      	ldr	r3, [r6, #0]
90001eca:	2b00      	cmp	r3, #0
90001ecc:	d1b7      	bne.n	90001e3e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16a>
        DMA2D_reference->start();
90001ece:	6803      	ldr	r3, [r0, #0]
90001ed0:	691b      	ldr	r3, [r3, #16]
90001ed2:	4798      	blx	r3
90001ed4:	e7b3      	b.n	90001e3e <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x16a>
            HAL_JPEG_Abort(hjpeg);
90001ed6:	4815      	ldr	r0, [pc, #84]	@ (90001f2c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x258>)
90001ed8:	f006 fff8 	bl	90008ecc <HAL_JPEG_Abort>
90001edc:	e7e5      	b.n	90001eaa <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x1d6>
    const uint32_t length = getU32(currentMovieOffset + 4);
90001ede:	f109 0304 	add.w	r3, r9, #4
    if (reader != 0)
90001ee2:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
    const uint8_t* mjpgdata = readData(currentMovieOffset + 8, length);
90001ee4:	f109 0108 	add.w	r1, r9, #8
        volatile const uint8_t* const d = movieData + offset;
90001ee8:	18c2      	adds	r2, r0, r3
    return movieData + offset;
90001eea:	4401      	add	r1, r0
        val |= d[0];
90001eec:	5cc0      	ldrb	r0, [r0, r3]
        val |= d[1] << 8;
90001eee:	7855      	ldrb	r5, [r2, #1]
        val |= d[2] << 16;
90001ef0:	f892 9002 	ldrb.w	r9, [r2, #2]
        val |= d[3] << 24;
90001ef4:	78d3      	ldrb	r3, [r2, #3]
        val |= d[2] << 16;
90001ef6:	ea4f 4909 	mov.w	r9, r9, lsl #16
90001efa:	ea49 2905 	orr.w	r9, r9, r5, lsl #8
90001efe:	ea49 0900 	orr.w	r9, r9, r0
        val |= d[3] << 24;
90001f02:	ea49 6903 	orr.w	r9, r9, r3, lsl #24
    return movieData + offset;
90001f06:	e731      	b.n	90001d6c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x98>
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001f08:	2009      	movs	r0, #9
            assert(!"Buffer to small");
90001f0a:	4b0f      	ldr	r3, [pc, #60]	@ (90001f48 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x274>)
90001f0c:	4a0f      	ldr	r2, [pc, #60]	@ (90001f4c <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x278>)
90001f0e:	21b1      	movs	r1, #177	@ 0xb1
            lastError = AVI_ERROR_FILE_BUFFER_TO_SMALL;
90001f10:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
            assert(!"Buffer to small");
90001f14:	480e      	ldr	r0, [pc, #56]	@ (90001f50 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x27c>)
90001f16:	f027 fb27 	bl	90029568 <__assert_func>
90001f1a:	4691      	mov	r9, r2
90001f1c:	e7e1      	b.n	90001ee2 <_ZN20HardwareMJPEGDecoder11decodeFrameERKN8touchgfx4RectEPhm+0x20e>
90001f1e:	bf00      	nop
90001f20:	24005dac 	.word	0x24005dac
90001f24:	24005ffc 	.word	0x24005ffc
90001f28:	24006024 	.word	0x24006024
90001f2c:	24007730 	.word	0x24007730
90001f30:	24006008 	.word	0x24006008
90001f34:	24005dec 	.word	0x24005dec
90001f38:	2400600c 	.word	0x2400600c
90001f3c:	24006010 	.word	0x24006010
90001f40:	24005df0 	.word	0x24005df0
90001f44:	24005df4 	.word	0x24005df4
90001f48:	9002a8a4 	.word	0x9002a8a4
90001f4c:	9002a8b8 	.word	0x9002a8b8
90001f50:	9002a838 	.word	0x9002a838
90001f54:	24006014 	.word	0x24006014
90001f58:	24006004 	.word	0x24006004
90001f5c:	24000004 	.word	0x24000004

90001f60 <HAL_JPEG_InfoReadyCallback>:
        if (pInfo->ChromaSubsampling == JPEG_420_SUBSAMPLING)
90001f60:	684b      	ldr	r3, [r1, #4]
90001f62:	2b01      	cmp	r3, #1
90001f64:	d015      	beq.n	90001f92 <HAL_JPEG_InfoReadyCallback+0x32>
            if (pInfo->ChromaSubsampling == JPEG_422_SUBSAMPLING)
90001f66:	2b02      	cmp	r3, #2
90001f68:	d00b      	beq.n	90001f82 <HAL_JPEG_InfoReadyCallback+0x22>
            if (pInfo->ChromaSubsampling == JPEG_444_SUBSAMPLING)
90001f6a:	b94b      	cbnz	r3, 90001f80 <HAL_JPEG_InfoReadyCallback+0x20>
                if ((pInfo->ImageWidth % 8) != 0)
90001f6c:	68cb      	ldr	r3, [r1, #12]
90001f6e:	0758      	lsls	r0, r3, #29
90001f70:	d11e      	bne.n	90001fb0 <HAL_JPEG_InfoReadyCallback+0x50>
                if ((pInfo->ImageHeight % 8) != 0)
90001f72:	688b      	ldr	r3, [r1, #8]
90001f74:	075a      	lsls	r2, r3, #29
90001f76:	d003      	beq.n	90001f80 <HAL_JPEG_InfoReadyCallback+0x20>
                    pInfo->ImageHeight += (8 - (pInfo->ImageHeight % 8));
90001f78:	f023 0307 	bic.w	r3, r3, #7
90001f7c:	3308      	adds	r3, #8
90001f7e:	608b      	str	r3, [r1, #8]
    }
90001f80:	4770      	bx	lr
                if ((pInfo->ImageWidth % 16) != 0)
90001f82:	68cb      	ldr	r3, [r1, #12]
90001f84:	071a      	lsls	r2, r3, #28
90001f86:	d0f4      	beq.n	90001f72 <HAL_JPEG_InfoReadyCallback+0x12>
                    pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f88:	f023 030f 	bic.w	r3, r3, #15
90001f8c:	3310      	adds	r3, #16
90001f8e:	60cb      	str	r3, [r1, #12]
90001f90:	e7ef      	b.n	90001f72 <HAL_JPEG_InfoReadyCallback+0x12>
            if ((pInfo->ImageWidth % 16) != 0)
90001f92:	68cb      	ldr	r3, [r1, #12]
90001f94:	071a      	lsls	r2, r3, #28
90001f96:	d003      	beq.n	90001fa0 <HAL_JPEG_InfoReadyCallback+0x40>
                pInfo->ImageWidth += (16 - (pInfo->ImageWidth % 16));
90001f98:	f023 030f 	bic.w	r3, r3, #15
90001f9c:	3310      	adds	r3, #16
90001f9e:	60cb      	str	r3, [r1, #12]
            if ((pInfo->ImageHeight % 16) != 0)
90001fa0:	688b      	ldr	r3, [r1, #8]
90001fa2:	0718      	lsls	r0, r3, #28
90001fa4:	d0ec      	beq.n	90001f80 <HAL_JPEG_InfoReadyCallback+0x20>
                pInfo->ImageHeight += (16 - (pInfo->ImageHeight % 16));
90001fa6:	f023 030f 	bic.w	r3, r3, #15
90001faa:	3310      	adds	r3, #16
90001fac:	608b      	str	r3, [r1, #8]
90001fae:	4770      	bx	lr
                    pInfo->ImageWidth += (8 - (pInfo->ImageWidth % 8));
90001fb0:	f023 0307 	bic.w	r3, r3, #7
90001fb4:	3308      	adds	r3, #8
90001fb6:	60cb      	str	r3, [r1, #12]
90001fb8:	e7db      	b.n	90001f72 <HAL_JPEG_InfoReadyCallback+0x12>
90001fba:	bf00      	nop

90001fbc <HAL_JPEG_GetDataCallback>:
    {
90001fbc:	b410      	push	{r4}
        JPEG_InputImageIndex += NbDecodedData;
90001fbe:	4c0c      	ldr	r4, [pc, #48]	@ (90001ff0 <HAL_JPEG_GetDataCallback+0x34>)
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001fc0:	4a0c      	ldr	r2, [pc, #48]	@ (90001ff4 <HAL_JPEG_GetDataCallback+0x38>)
        JPEG_InputImageIndex += NbDecodedData;
90001fc2:	6823      	ldr	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001fc4:	6812      	ldr	r2, [r2, #0]
        JPEG_InputImageIndex += NbDecodedData;
90001fc6:	440b      	add	r3, r1
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001fc8:	4293      	cmp	r3, r2
        JPEG_InputImageIndex += NbDecodedData;
90001fca:	6023      	str	r3, [r4, #0]
        if (JPEG_InputImageIndex < JPEG_InputImageSize_Bytes)
90001fcc:	d302      	bcc.n	90001fd4 <HAL_JPEG_GetDataCallback+0x18>
    }
90001fce:	f85d 4b04 	ldr.w	r4, [sp], #4
90001fd2:	4770      	bx	lr
            uint32_t inDataLength = JPEG_InputImageSize_Bytes - JPEG_InputImageIndex;
90001fd4:	1ad2      	subs	r2, r2, r3
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001fd6:	4b08      	ldr	r3, [pc, #32]	@ (90001ff8 <HAL_JPEG_GetDataCallback+0x3c>)
90001fd8:	681c      	ldr	r4, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001fda:	f5b2 4f50 	cmp.w	r2, #53248	@ 0xd000
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001fde:	4421      	add	r1, r4
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001fe0:	bf28      	it	cs
90001fe2:	f44f 4250 	movcs.w	r2, #53248	@ 0xd000
    }
90001fe6:	f85d 4b04 	ldr.w	r4, [sp], #4
            JPEG_InputImageAddress = JPEG_InputImageAddress + NbDecodedData;
90001fea:	6019      	str	r1, [r3, #0]
            HAL_JPEG_ConfigInputBuffer(hjpeg, (uint8_t*)JPEG_InputImageAddress, inDataLength >= CHUNK_SIZE_IN ? CHUNK_SIZE_IN : inDataLength);
90001fec:	f006 bf66 	b.w	90008ebc <HAL_JPEG_ConfigInputBuffer>
90001ff0:	24006020 	.word	0x24006020
90001ff4:	2400601c 	.word	0x2400601c
90001ff8:	24006018 	.word	0x24006018

90001ffc <HAL_JPEG_DataReadyCallback>:
    {
90001ffc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        line_count += MCU_HEIGHT_PIXELS;
90002000:	4e4a      	ldr	r6, [pc, #296]	@ (9000212c <HAL_JPEG_DataReadyCallback+0x130>)
    {
90002002:	4696      	mov	lr, r2
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90002004:	4f4a      	ldr	r7, [pc, #296]	@ (90002130 <HAL_JPEG_DataReadyCallback+0x134>)
        line_count += MCU_HEIGHT_PIXELS;
90002006:	6833      	ldr	r3, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90002008:	4d4a      	ldr	r5, [pc, #296]	@ (90002134 <HAL_JPEG_DataReadyCallback+0x138>)
        line_count += MCU_HEIGHT_PIXELS;
9000200a:	3310      	adds	r3, #16
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
9000200c:	693a      	ldr	r2, [r7, #16]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
9000200e:	f8d5 c000 	ldr.w	ip, [r5]
        line_count += MCU_HEIGHT_PIXELS;
90002012:	6033      	str	r3, [r6, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90002014:	4b48      	ldr	r3, [pc, #288]	@ (90002138 <HAL_JPEG_DataReadyCallback+0x13c>)
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90002016:	4c49      	ldr	r4, [pc, #292]	@ (9000213c <HAL_JPEG_DataReadyCallback+0x140>)
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90002018:	6819      	ldr	r1, [r3, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
9000201a:	6823      	ldr	r3, [r4, #0]
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
9000201c:	fb02 f101 	mul.w	r1, r2, r1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
90002020:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        FrameBufferAddress += FrameBufferWidth * MCU_HEIGHT_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;
90002024:	eb0c 1101 	add.w	r1, ip, r1, lsl #4
90002028:	6029      	str	r1, [r5, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
9000202a:	4d45      	ldr	r5, [pc, #276]	@ (90002140 <HAL_JPEG_DataReadyCallback+0x144>)
        if (line_count <= JPEG_ConvertorParams.startY)
9000202c:	6831      	ldr	r1, [r6, #0]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].OutputBuffer = FrameBufferAddress;
9000202e:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002032:	f8c3 c014 	str.w	ip, [r3, #20]
        if (line_count <= JPEG_ConvertorParams.startY)
90002036:	697b      	ldr	r3, [r7, #20]
90002038:	428b      	cmp	r3, r1
9000203a:	d260      	bcs.n	900020fe <HAL_JPEG_DataReadyCallback+0x102>
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
9000203c:	6821      	ldr	r1, [r4, #0]
9000203e:	2201      	movs	r2, #1
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90002040:	6823      	ldr	r3, [r4, #0]
90002042:	4680      	mov	r8, r0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
90002044:	ebc1 01c1 	rsb	r1, r1, r1, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90002048:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State = JPEG_BUFFER_FULL;
9000204c:	f805 2021 	strb.w	r2, [r5, r1, lsl #2]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
90002050:	2100      	movs	r1, #0
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBufferSize = OutDataLength;
90002052:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002056:	f8c3 e008 	str.w	lr, [r3, #8]
        Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].MCU_drawn = 0;
9000205a:	6823      	ldr	r3, [r4, #0]
9000205c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002060:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002064:	6119      	str	r1, [r3, #16]
        if (JPEG_ConvertorParams.firstColOffset != 0)
90002066:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
90002068:	b12b      	cbz	r3, 90002076 <HAL_JPEG_DataReadyCallback+0x7a>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DoCropping = true;
9000206a:	6823      	ldr	r3, [r4, #0]
9000206c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002070:	eb05 0383 	add.w	r3, r5, r3, lsl #2
90002074:	761a      	strb	r2, [r3, #24]
        if (line_count < JPEG_ConvertorParams.endY)
90002076:	6832      	ldr	r2, [r6, #0]
90002078:	69bb      	ldr	r3, [r7, #24]
9000207a:	4293      	cmp	r3, r2
9000207c:	d922      	bls.n	900020c4 <HAL_JPEG_DataReadyCallback+0xc8>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000207e:	6823      	ldr	r3, [r4, #0]
            JPEG_OUT_Write_BufferIndex++;
90002080:	6822      	ldr	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002082:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            JPEG_OUT_Write_BufferIndex++;
90002086:	3201      	adds	r2, #1
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
90002088:	eb05 0383 	add.w	r3, r5, r3, lsl #2
            JPEG_OUT_Write_BufferIndex++;
9000208c:	6022      	str	r2, [r4, #0]
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = false;
9000208e:	2200      	movs	r2, #0
90002090:	769a      	strb	r2, [r3, #26]
            if (JPEG_OUT_Write_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
90002092:	6823      	ldr	r3, [r4, #0]
90002094:	2b01      	cmp	r3, #1
90002096:	d900      	bls.n	9000209a <HAL_JPEG_DataReadyCallback+0x9e>
                JPEG_OUT_Write_BufferIndex = 0;
90002098:	6022      	str	r2, [r4, #0]
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].State != JPEG_BUFFER_EMPTY)
9000209a:	6823      	ldr	r3, [r4, #0]
9000209c:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900020a0:	f815 3023 	ldrb.w	r3, [r5, r3, lsl #2]
900020a4:	2b00      	cmp	r3, #0
900020a6:	d138      	bne.n	9000211a <HAL_JPEG_DataReadyCallback+0x11e>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900020a8:	6823      	ldr	r3, [r4, #0]
900020aa:	4640      	mov	r0, r8
900020ac:	68fa      	ldr	r2, [r7, #12]
900020ae:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900020b2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900020b6:	eb05 0383 	add.w	r3, r5, r3, lsl #2
900020ba:	01d2      	lsls	r2, r2, #7
900020bc:	6859      	ldr	r1, [r3, #4]
900020be:	f006 ff01 	bl	90008ec4 <HAL_JPEG_ConfigOutputBuffer>
        if (line_count >= JPEG_ConvertorParams.endY)
900020c2:	69bb      	ldr	r3, [r7, #24]
900020c4:	6832      	ldr	r2, [r6, #0]
900020c6:	429a      	cmp	r2, r3
900020c8:	d20b      	bcs.n	900020e2 <HAL_JPEG_DataReadyCallback+0xe6>
        return isRunning;
900020ca:	4b1e      	ldr	r3, [pc, #120]	@ (90002144 <HAL_JPEG_DataReadyCallback+0x148>)
900020cc:	681b      	ldr	r3, [r3, #0]
        if (!DMA2D_reference->isDMARunning())
900020ce:	7a1b      	ldrb	r3, [r3, #8]
900020d0:	b10b      	cbz	r3, 900020d6 <HAL_JPEG_DataReadyCallback+0xda>
    }
900020d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            SEM_POST(semDecodingDone);
900020d6:	4b1c      	ldr	r3, [pc, #112]	@ (90002148 <HAL_JPEG_DataReadyCallback+0x14c>)
    }
900020d8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            SEM_POST(semDecodingDone);
900020dc:	6818      	ldr	r0, [r3, #0]
900020de:	f00b b975 	b.w	9000d3cc <osSemaphoreRelease>
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
900020e2:	6823      	ldr	r3, [r4, #0]
900020e4:	2201      	movs	r2, #1
            Jpeg_HWDecodingEnd = 1;
900020e6:	4919      	ldr	r1, [pc, #100]	@ (9000214c <HAL_JPEG_DataReadyCallback+0x150>)
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020e8:	4640      	mov	r0, r8
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
900020ea:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
            Jpeg_HWDecodingEnd = 1;
900020ee:	600a      	str	r2, [r1, #0]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020f0:	2102      	movs	r1, #2
            Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].LastJob = true;
900020f2:	eb05 0583 	add.w	r5, r5, r3, lsl #2
900020f6:	76aa      	strb	r2, [r5, #26]
            HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
900020f8:	f006 fea8 	bl	90008e4c <HAL_JPEG_Pause>
900020fc:	e7e5      	b.n	900020ca <HAL_JPEG_DataReadyCallback+0xce>
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
900020fe:	6823      	ldr	r3, [r4, #0]
90002100:	68fa      	ldr	r2, [r7, #12]
90002102:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002106:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9000210a:	eb05 0383 	add.w	r3, r5, r3, lsl #2
9000210e:	01d2      	lsls	r2, r2, #7
90002110:	6859      	ldr	r1, [r3, #4]
    }
90002112:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
            HAL_JPEG_ConfigOutputBuffer(hjpeg, Jpeg_OUT_BufferTab[JPEG_OUT_Write_BufferIndex].DataBuffer, MCU_CHROMA_420_SIZE_BYTES * JPEG_ConvertorParams.MCU_pr_line);
90002116:	f006 bed5 	b.w	90008ec4 <HAL_JPEG_ConfigOutputBuffer>
                HAL_JPEG_Pause(hjpeg, JPEG_PAUSE_RESUME_OUTPUT);
9000211a:	2102      	movs	r1, #2
9000211c:	4640      	mov	r0, r8
9000211e:	f006 fe95 	bl	90008e4c <HAL_JPEG_Pause>
                JPEG_output_is_paused = 1;
90002122:	4b0b      	ldr	r3, [pc, #44]	@ (90002150 <HAL_JPEG_DataReadyCallback+0x154>)
90002124:	2201      	movs	r2, #1
90002126:	601a      	str	r2, [r3, #0]
90002128:	e7be      	b.n	900020a8 <HAL_JPEG_DataReadyCallback+0xac>
9000212a:	bf00      	nop
9000212c:	24006000 	.word	0x24006000
90002130:	24005dac 	.word	0x24005dac
90002134:	24006024 	.word	0x24006024
90002138:	24005ffc 	.word	0x24005ffc
9000213c:	24006004 	.word	0x24006004
90002140:	24000004 	.word	0x24000004
90002144:	24006008 	.word	0x24006008
90002148:	24005df4 	.word	0x24005df4
9000214c:	24006014 	.word	0x24006014
90002150:	24006010 	.word	0x24006010

90002154 <HAL_JPEG_ErrorCallback>:
  __ASM volatile ("cpsid i" : : : "memory");
90002154:	b672      	cpsid	i
        while (1)
90002156:	e7fe      	b.n	90002156 <HAL_JPEG_ErrorCallback+0x2>

90002158 <HAL_JPEG_DecodeCpltCallback>:
        Jpeg_HWDecodingEnd = 1;
90002158:	4b01      	ldr	r3, [pc, #4]	@ (90002160 <HAL_JPEG_DecodeCpltCallback+0x8>)
9000215a:	2201      	movs	r2, #1
9000215c:	601a      	str	r2, [r3, #0]
    }
9000215e:	4770      	bx	lr
90002160:	24006014 	.word	0x24006014

90002164 <DMA2D_CopyBuffer>:
 * @brief  Configures external DMA2D job to copy YCbCr data to RGB buffer(s)
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CopyBuffer(JPEG_Data_BufferTypeDef& job)
{
90002164:	b5f0      	push	{r4, r5, r6, r7, lr}
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002166:	4f1e      	ldr	r7, [pc, #120]	@ (900021e0 <DMA2D_CopyBuffer+0x7c>)
90002168:	6903      	ldr	r3, [r0, #16]
9000216a:	6afc      	ldr	r4, [r7, #44]	@ 0x2c
9000216c:	6bba      	ldr	r2, [r7, #56]	@ 0x38
9000216e:	eba4 0c03 	sub.w	ip, r4, r3
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
                               + job.MCU_drawn * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel;

    /* Mark job as fully drawn */
    job.MCU_drawn = JPEG_ConvertorParams.MCU_pr_job;
90002172:	6104      	str	r4, [r0, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002174:	4e1b      	ldr	r6, [pc, #108]	@ (900021e4 <DMA2D_CopyBuffer+0x80>)
    const uint32_t width = JPEG_ConvertorParams.MCU_pr_job * MCU_WIDTH_PIXELS - job.MCU_drawn * MCU_WIDTH_PIXELS - JPEG_ConvertorParams.lastColOffset;
90002176:	ebc2 110c 	rsb	r1, r2, ip, lsl #4
9000217a:	ea4f 1c0c 	mov.w	ip, ip, lsl #4
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
9000217e:	f011 050f 	ands.w	r5, r1, #15

    /* Configure DMA2D data size */
    if (job.LastJob)  /* Last line of frame */
    {
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
90002182:	ea4f 4401 	mov.w	r4, r1, lsl #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002186:	6a79      	ldr	r1, [r7, #36]	@ 0x24
    const uint32_t scaledWidth = (width % MCU_WIDTH_PIXELS) == 0 ? 0 : MCU_WIDTH_PIXELS - (width % MCU_WIDTH_PIXELS);
90002188:	bf18      	it	ne
9000218a:	f1c5 0510 	rsbne	r5, r5, #16
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000218e:	440b      	add	r3, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
90002190:	6939      	ldr	r1, [r7, #16]
90002192:	fb03 f101 	mul.w	r1, r3, r1
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002196:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
9000219a:	ea4f 1e01 	mov.w	lr, r1, lsl #4
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000219e:	2102      	movs	r1, #2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
900021a0:	01db      	lsls	r3, r3, #7
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900021a2:	6371      	str	r1, [r6, #52]	@ 0x34
    if (job.LastJob)  /* Last line of frame */
900021a4:	7e81      	ldrb	r1, [r0, #26]
900021a6:	b1b9      	cbz	r1, 900021d8 <DMA2D_CopyBuffer+0x74>
        WRITE_REG(DMA2D->NLR, (MCU_HEIGHT_PIXELS - JPEG_ConvertorParams.lastRowOffset) | (width << DMA2D_NLR_PL_Pos));
900021a8:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
900021aa:	f1c1 0110 	rsb	r1, r1, #16
900021ae:	4321      	orrs	r1, r4
900021b0:	6471      	str	r1, [r6, #68]	@ 0x44
    {
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
    }

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
900021b2:	6941      	ldr	r1, [r0, #20]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, 480 - width);
900021b4:	f502 72f0 	add.w	r2, r2, #480	@ 0x1e0
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
900021b8:	eb01 040e 	add.w	r4, r1, lr

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
900021bc:	6841      	ldr	r1, [r0, #4]
    WRITE_REG(DMA2D->OOR, 480 - width);
900021be:	eba2 020c 	sub.w	r2, r2, ip

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900021c2:	4809      	ldr	r0, [pc, #36]	@ (900021e8 <DMA2D_CopyBuffer+0x84>)
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
900021c4:	4419      	add	r1, r3
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(job.OutputBuffer + dstOffset));
900021c6:	4b07      	ldr	r3, [pc, #28]	@ (900021e4 <DMA2D_CopyBuffer+0x80>)
900021c8:	63dc      	str	r4, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 480 - width);
900021ca:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900021cc:	4a07      	ldr	r2, [pc, #28]	@ (900021ec <DMA2D_CopyBuffer+0x88>)
    WRITE_REG(DMA2D->FGOR, scaledWidth);
900021ce:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900021d0:	61da      	str	r2, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
900021d2:	60d9      	str	r1, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900021d4:	6018      	str	r0, [r3, #0]
}
900021d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (width << DMA2D_NLR_PL_Pos));
900021d8:	f044 0410 	orr.w	r4, r4, #16
900021dc:	6474      	str	r4, [r6, #68]	@ 0x44
900021de:	e7e8      	b.n	900021b2 <DMA2D_CopyBuffer+0x4e>
900021e0:	24005dac 	.word	0x24005dac
900021e4:	52001000 	.word	0x52001000
900021e8:	00012301 	.word	0x00012301
900021ec:	ff09000b 	.word	0xff09000b

900021f0 <DMA2D_CropBuffer>:
 * @param job: External job reference
 * @retval None
 */
void DMA2D_CropBuffer(JPEG_Data_BufferTypeDef& job)
{
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
900021f0:	6902      	ldr	r2, [r0, #16]
{
900021f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900021f6:	4605      	mov	r5, r0
900021f8:	b08a      	sub	sp, #40	@ 0x28
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
900021fa:	2a00      	cmp	r2, #0
900021fc:	d165      	bne.n	900022ca <DMA2D_CropBuffer+0xda>
900021fe:	4b35      	ldr	r3, [pc, #212]	@ (900022d4 <DMA2D_CropBuffer+0xe4>)
90002200:	f8d3 c030 	ldr.w	ip, [r3, #48]	@ 0x30
90002204:	f1cc 0010 	rsb	r0, ip, #16
90002208:	b280      	uxth	r0, r0
    const uint32_t colRightOffset = job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job - 1 ? JPEG_ConvertorParams.lastColOffset : 0;
9000220a:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
9000220c:	3901      	subs	r1, #1
9000220e:	428a      	cmp	r2, r1
90002210:	d102      	bne.n	90002218 <DMA2D_CropBuffer+0x28>

    /* Configure BlitOp */
    touchgfx::BlitOp blitOp;
    blitOp.operation = touchgfx::BLIT_OP_COPY;
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
90002212:	6b99      	ldr	r1, [r3, #56]	@ 0x38
90002214:	1a41      	subs	r1, r0, r1
90002216:	b288      	uxth	r0, r1
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
90002218:	7e6e      	ldrb	r6, [r5, #25]
9000221a:	6b5f      	ldr	r7, [r3, #52]	@ 0x34
9000221c:	2e00      	cmp	r6, #0
9000221e:	d051      	beq.n	900022c4 <DMA2D_CropBuffer+0xd4>
90002220:	f1c7 0110 	rsb	r1, r7, #16
90002224:	46b8      	mov	r8, r7
90002226:	b289      	uxth	r1, r1
    const uint32_t rowBottomOffset = job.LastJob ? JPEG_ConvertorParams.lastRowOffset : 0;
90002228:	f895 e01a 	ldrb.w	lr, [r5, #26]
9000222c:	f1be 0f00 	cmp.w	lr, #0
90002230:	d002      	beq.n	90002238 <DMA2D_CropBuffer+0x48>
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
90002232:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
90002234:	1b09      	subs	r1, r1, r4
90002236:	b289      	uxth	r1, r1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
90002238:	f8d3 e010 	ldr.w	lr, [r3, #16]
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000223c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
9000223e:	fb08 f40e 	mul.w	r4, r8, lr
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002242:	4413      	add	r3, r2
    job.MCU_drawn++;
90002244:	3201      	adds	r2, #1
                               + colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel;
90002246:	fb0c fc0e 	mul.w	ip, ip, lr
    job.MCU_drawn++;
9000224a:	612a      	str	r2, [r5, #16]
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
9000224c:	ebc4 1204 	rsb	r2, r4, r4, lsl #4
    const uint32_t cropSrcOffset = colLeftOffset * JPEG_ConvertorParams.bytes_pr_pixel
90002250:	eb0c 1804 	add.w	r8, ip, r4, lsl #4
                               + rowTopOffset * JPEG_ConvertorParams.bytes_pr_pixel * 480
90002254:	0052      	lsls	r2, r2, #1
90002256:	fb0e 2203 	mla	r2, lr, r3, r2
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
9000225a:	eb03 0343 	add.w	r3, r3, r3, lsl #1
    const uint32_t dstOffset = JPEG_ConvertorParams.MCUStart * MCU_WIDTH_PIXELS * JPEG_ConvertorParams.bytes_pr_pixel
9000225e:	eb0c 1c02 	add.w	ip, ip, r2, lsl #4
    const uint32_t srcOffset = (JPEG_ConvertorParams.MCUStart + job.MCU_drawn) * MCU_CHROMA_420_SIZE_BYTES;
90002262:	01dc      	lsls	r4, r3, #7
    if ((JPEG_ConvertorParams.firstRowOffset == 0) || !job.FirstJob)
90002264:	b107      	cbz	r7, 90002268 <DMA2D_CropBuffer+0x78>
90002266:	b90e      	cbnz	r6, 9000226c <DMA2D_CropBuffer+0x7c>
        job.DoCropping = false;
90002268:	2300      	movs	r3, #0
9000226a:	762b      	strb	r3, [r5, #24]
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
9000226c:	4b1a      	ldr	r3, [pc, #104]	@ (900022d8 <DMA2D_CropBuffer+0xe8>)
        : color(0)
9000226e:	2600      	movs	r6, #0
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002270:	4f1a      	ldr	r7, [pc, #104]	@ (900022dc <DMA2D_CropBuffer+0xec>)
    blitOp.srcLoopStride = MCU_WIDTH_PIXELS;
90002272:	9307      	str	r3, [sp, #28]
    blitOp.dstLoopStride = 480;
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002274:	696b      	ldr	r3, [r5, #20]
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
    blitOp.dstFormat = touchgfx::Bitmap::RGB565;
    DMA2D_reference->addToQueue(blitOp);
90002276:	4a1a      	ldr	r2, [pc, #104]	@ (900022e0 <DMA2D_CropBuffer+0xf0>)
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002278:	4463      	add	r3, ip
    blitOp.nSteps = MCU_WIDTH_PIXELS - colLeftOffset - colRightOffset;
9000227a:	f8ad 0018 	strh.w	r0, [sp, #24]
    DMA2D_reference->addToQueue(blitOp);
9000227e:	6810      	ldr	r0, [r2, #0]
    blitOp.pDst = reinterpret_cast<uint16_t*>(job.OutputBuffer + dstOffset);
90002280:	9305      	str	r3, [sp, #20]
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
90002282:	eb08 0307 	add.w	r3, r8, r7
    blitOp.srcFormat = touchgfx::Bitmap::RGB565;
90002286:	f8ad 6021 	strh.w	r6, [sp, #33]	@ 0x21
    blitOp.pSrc = reinterpret_cast<uint16_t*>(MCU_Cropping_Buffer + cropSrcOffset);
9000228a:	9302      	str	r3, [sp, #8]
    blitOp.operation = touchgfx::BLIT_OP_COPY;
9000228c:	2301      	movs	r3, #1
    blitOp.nLoops = MCU_HEIGHT_PIXELS - rowTopOffset - rowBottomOffset;
9000228e:	f8ad 101a 	strh.w	r1, [sp, #26]
    DMA2D_reference->addToQueue(blitOp);
90002292:	a901      	add	r1, sp, #4
    blitOp.operation = touchgfx::BLIT_OP_COPY;
90002294:	9301      	str	r3, [sp, #4]
    DMA2D_reference->addToQueue(blitOp);
90002296:	6803      	ldr	r3, [r0, #0]
90002298:	9604      	str	r6, [sp, #16]
9000229a:	685b      	ldr	r3, [r3, #4]
9000229c:	4798      	blx	r3

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
9000229e:	4b11      	ldr	r3, [pc, #68]	@ (900022e4 <DMA2D_CropBuffer+0xf4>)
900022a0:	2102      	movs	r1, #2

    /* DMA2D FGPFCCR register configuration */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
900022a2:	686a      	ldr	r2, [r5, #4]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900022a4:	4810      	ldr	r0, [pc, #64]	@ (900022e8 <DMA2D_CropBuffer+0xf8>)
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900022a6:	6359      	str	r1, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
900022a8:	f04f 1110 	mov.w	r1, #1048592	@ 0x100010
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
900022ac:	4422      	add	r2, r4
    WRITE_REG(DMA2D->NLR, MCU_HEIGHT_PIXELS | (MCU_WIDTH_PIXELS << DMA2D_NLR_PL_Pos));
900022ae:	6459      	str	r1, [r3, #68]	@ 0x44

    /* Configure DMA2D contol register */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900022b0:	490e      	ldr	r1, [pc, #56]	@ (900022ec <DMA2D_CropBuffer+0xfc>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(MCU_Cropping_Buffer));
900022b2:	63df      	str	r7, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, 0);
900022b4:	641e      	str	r6, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->FGOR, 0);
900022b6:	611e      	str	r6, [r3, #16]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_YCBCR | (DMA2D_CSS_420 << DMA2D_FGPFCCR_CSS_Pos) | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (0xFFU << DMA2D_FGPFCCR_ALPHA_Pos));
900022b8:	61d8      	str	r0, [r3, #28]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(job.DataBuffer + srcOffset));
900022ba:	60da      	str	r2, [r3, #12]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900022bc:	6019      	str	r1, [r3, #0]
}
900022be:	b00a      	add	sp, #40	@ 0x28
900022c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900022c4:	2110      	movs	r1, #16
    const uint32_t rowTopOffset = job.FirstJob ? JPEG_ConvertorParams.firstRowOffset : 0;
900022c6:	46b0      	mov	r8, r6
900022c8:	e7ae      	b.n	90002228 <DMA2D_CropBuffer+0x38>
900022ca:	2010      	movs	r0, #16
    const uint32_t colLeftOffset = job.MCU_drawn == 0 ? JPEG_ConvertorParams.firstColOffset : 0;
900022cc:	f04f 0c00 	mov.w	ip, #0
900022d0:	4b00      	ldr	r3, [pc, #0]	@ (900022d4 <DMA2D_CropBuffer+0xe4>)
900022d2:	e79a      	b.n	9000220a <DMA2D_CropBuffer+0x1a>
900022d4:	24005dac 	.word	0x24005dac
900022d8:	01e00010 	.word	0x01e00010
900022dc:	24005dfc 	.word	0x24005dfc
900022e0:	24006008 	.word	0x24006008
900022e4:	52001000 	.word	0x52001000
900022e8:	ff09000b 	.word	0xff09000b
900022ec:	00012301 	.word	0x00012301

900022f0 <DMA2D_ExternalJobCompleted>:
 * @retval None
 */
void DMA2D_ExternalJobCompleted(JPEG_Data_BufferTypeDef& job)
{
    /* Mark job done if all MCUs are drawn */
    if (job.MCU_drawn == JPEG_ConvertorParams.MCU_pr_job)
900022f0:	4b0d      	ldr	r3, [pc, #52]	@ (90002328 <DMA2D_ExternalJobCompleted+0x38>)
900022f2:	6902      	ldr	r2, [r0, #16]
900022f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900022f6:	429a      	cmp	r2, r3
900022f8:	d000      	beq.n	900022fc <DMA2D_ExternalJobCompleted+0xc>
        }

        /* Signal decoder thread to wake up and continue decoding */
        SEM_POST(semDecodingDone);
    }
}
900022fa:	4770      	bx	lr
        job.State = JPEG_BUFFER_EMPTY;
900022fc:	2200      	movs	r2, #0
        JPEG_OUT_Read_BufferIndex++;
900022fe:	4b0b      	ldr	r3, [pc, #44]	@ (9000232c <DMA2D_ExternalJobCompleted+0x3c>)
        job.State = JPEG_BUFFER_EMPTY;
90002300:	7002      	strb	r2, [r0, #0]
        JPEG_OUT_Read_BufferIndex++;
90002302:	6819      	ldr	r1, [r3, #0]
        job.DataBufferSize = 0;
90002304:	6082      	str	r2, [r0, #8]
        JPEG_OUT_Read_BufferIndex++;
90002306:	3101      	adds	r1, #1
        job.DoCropping = false;
90002308:	8302      	strh	r2, [r0, #24]
        JPEG_OUT_Read_BufferIndex++;
9000230a:	6019      	str	r1, [r3, #0]
        if (JPEG_OUT_Read_BufferIndex >= NB_OUTPUT_DATA_BUFFERS)
9000230c:	6819      	ldr	r1, [r3, #0]
9000230e:	2901      	cmp	r1, #1
90002310:	d900      	bls.n	90002314 <DMA2D_ExternalJobCompleted+0x24>
            JPEG_OUT_Read_BufferIndex = 0;
90002312:	601a      	str	r2, [r3, #0]
        if (job.LastJob)
90002314:	7e83      	ldrb	r3, [r0, #26]
90002316:	b113      	cbz	r3, 9000231e <DMA2D_ExternalJobCompleted+0x2e>
            DMA2D_CopyBufferEnd = 1;
90002318:	4b05      	ldr	r3, [pc, #20]	@ (90002330 <DMA2D_ExternalJobCompleted+0x40>)
9000231a:	2201      	movs	r2, #1
9000231c:	601a      	str	r2, [r3, #0]
        SEM_POST(semDecodingDone);
9000231e:	4b05      	ldr	r3, [pc, #20]	@ (90002334 <DMA2D_ExternalJobCompleted+0x44>)
90002320:	6818      	ldr	r0, [r3, #0]
90002322:	f00b b853 	b.w	9000d3cc <osSemaphoreRelease>
90002326:	bf00      	nop
90002328:	24005dac 	.word	0x24005dac
9000232c:	24005df0 	.word	0x24005df0
90002330:	24005dec 	.word	0x24005dec
90002334:	24005df4 	.word	0x24005df4

90002338 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
90002338:	2101      	movs	r1, #1
9000233a:	2200      	movs	r2, #0
{
9000233c:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
9000233e:	4608      	mov	r0, r1
90002340:	f00a ffbc 	bl	9000d2bc <osSemaphoreNew>
90002344:	4b0b      	ldr	r3, [pc, #44]	@ (90002374 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
90002346:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
90002348:	b140      	cbz	r0, 9000235c <_ZN8touchgfx10OSWrappers10initializeEv+0x24>

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
9000234a:	2200      	movs	r2, #0
9000234c:	2104      	movs	r1, #4
9000234e:	2001      	movs	r0, #1
90002350:	f00b f866 	bl	9000d420 <osMessageQueueNew>
90002354:	4b08      	ldr	r3, [pc, #32]	@ (90002378 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
90002356:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002358:	b130      	cbz	r0, 90002368 <_ZN8touchgfx10OSWrappers10initializeEv+0x30>
}
9000235a:	bd08      	pop	{r3, pc}
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
9000235c:	4b07      	ldr	r3, [pc, #28]	@ (9000237c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
9000235e:	2128      	movs	r1, #40	@ 0x28
90002360:	4a07      	ldr	r2, [pc, #28]	@ (90002380 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
90002362:	4808      	ldr	r0, [pc, #32]	@ (90002384 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002364:	f027 f900 	bl	90029568 <__assert_func>
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
90002368:	4b07      	ldr	r3, [pc, #28]	@ (90002388 <_ZN8touchgfx10OSWrappers10initializeEv+0x50>)
9000236a:	212c      	movs	r1, #44	@ 0x2c
9000236c:	4a04      	ldr	r2, [pc, #16]	@ (90002380 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
9000236e:	4805      	ldr	r0, [pc, #20]	@ (90002384 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
90002370:	f027 f8fa 	bl	90029568 <__assert_func>
90002374:	2400602c 	.word	0x2400602c
90002378:	24006028 	.word	0x24006028
9000237c:	9002aa98 	.word	0x9002aa98
90002380:	9002aae4 	.word	0x9002aae4
90002384:	9002ab14 	.word	0x9002ab14
90002388:	9002ab78 	.word	0x9002ab78

9000238c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
9000238c:	4b02      	ldr	r3, [pc, #8]	@ (90002398 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
9000238e:	f04f 31ff 	mov.w	r1, #4294967295
90002392:	6818      	ldr	r0, [r3, #0]
90002394:	f00a bfe8 	b.w	9000d368 <osSemaphoreAcquire>
90002398:	2400602c 	.word	0x2400602c

9000239c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
9000239c:	4b01      	ldr	r3, [pc, #4]	@ (900023a4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
9000239e:	6818      	ldr	r0, [r3, #0]
900023a0:	f00b b814 	b.w	9000d3cc <osSemaphoreRelease>
900023a4:	2400602c 	.word	0x2400602c

900023a8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
900023a8:	4b02      	ldr	r3, [pc, #8]	@ (900023b4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
900023aa:	2100      	movs	r1, #0
900023ac:	6818      	ldr	r0, [r3, #0]
900023ae:	f00a bfdb 	b.w	9000d368 <osSemaphoreAcquire>
900023b2:	bf00      	nop
900023b4:	2400602c 	.word	0x2400602c

900023b8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 * from ISR.
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
900023b8:	4b01      	ldr	r3, [pc, #4]	@ (900023c0 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x8>)
900023ba:	6818      	ldr	r0, [r3, #0]
900023bc:	f00b b806 	b.w	9000d3cc <osSemaphoreRelease>
900023c0:	2400602c 	.word	0x2400602c

900023c4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
900023c4:	4803      	ldr	r0, [pc, #12]	@ (900023d4 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
900023c6:	2300      	movs	r3, #0
900023c8:	4903      	ldr	r1, [pc, #12]	@ (900023d8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
900023ca:	461a      	mov	r2, r3
900023cc:	6800      	ldr	r0, [r0, #0]
900023ce:	f00b b863 	b.w	9000d498 <osMessageQueuePut>
900023d2:	bf00      	nop
900023d4:	24006028 	.word	0x24006028
900023d8:	2400003c 	.word	0x2400003c

900023dc <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
900023dc:	b510      	push	{r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
900023de:	2300      	movs	r3, #0
{
900023e0:	b082      	sub	sp, #8
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
900023e2:	4c07      	ldr	r4, [pc, #28]	@ (90002400 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
900023e4:	a901      	add	r1, sp, #4
900023e6:	461a      	mov	r2, r3
900023e8:	6820      	ldr	r0, [r4, #0]
900023ea:	f00b f891 	bl	9000d510 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
900023ee:	f04f 33ff 	mov.w	r3, #4294967295
900023f2:	2200      	movs	r2, #0
900023f4:	a901      	add	r1, sp, #4
900023f6:	6820      	ldr	r0, [r4, #0]
900023f8:	f00b f88a 	bl	9000d510 <osMessageQueueGet>
}
900023fc:	b002      	add	sp, #8
900023fe:	bd10      	pop	{r4, pc}
90002400:	24006028 	.word	0x24006028

90002404 <_ZN8touchgfx13DMA_Interface5flushEv>:
        waitForFrameBufferSemaphore();
90002404:	6803      	ldr	r3, [r0, #0]
90002406:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90002408:	4718      	bx	r3
9000240a:	bf00      	nop

9000240c <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
9000240c:	2001      	movs	r0, #1
9000240e:	4770      	bx	lr

90002410 <DMA2D_XferErrorCallback>:
    }

    static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
    {
        (void)handle; // Unused argument
        while (1)
90002410:	e7fe      	b.n	90002410 <DMA2D_XferErrorCallback>
90002412:	bf00      	nop

90002414 <_ZN8STM32DMAD1Ev>:
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
{

}

STM32DMA::~STM32DMA()
90002414:	4905      	ldr	r1, [pc, #20]	@ (9000242c <_ZN8STM32DMAD1Ev+0x18>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90002416:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000241a:	4b05      	ldr	r3, [pc, #20]	@ (90002430 <_ZN8STM32DMAD1Ev+0x1c>)
9000241c:	6001      	str	r1, [r0, #0]
9000241e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
90002422:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002426:	f3bf 8f6f 	isb	sy
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}
9000242a:	4770      	bx	lr
9000242c:	9002c3d8 	.word	0x9002c3d8
90002430:	e000e100 	.word	0xe000e100

90002434 <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002434:	4b11      	ldr	r3, [pc, #68]	@ (9000247c <_ZN8STM32DMA10initializeEv+0x48>)
    __HAL_RCC_DMA2D_FORCE_RESET();
    __HAL_RCC_DMA2D_RELEASE_RESET();

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90002436:	4912      	ldr	r1, [pc, #72]	@ (90002480 <_ZN8STM32DMA10initializeEv+0x4c>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
90002438:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4

    /* Add transfer error callback function */
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
9000243c:	4811      	ldr	r0, [pc, #68]	@ (90002484 <_ZN8STM32DMA10initializeEv+0x50>)
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000243e:	f042 0210 	orr.w	r2, r2, #16
{
90002442:	b410      	push	{r4}
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
90002444:	4c10      	ldr	r4, [pc, #64]	@ (90002488 <_ZN8STM32DMA10initializeEv+0x54>)
{
90002446:	b083      	sub	sp, #12
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
90002448:	e9c1 4008 	strd	r4, r0, [r1, #32]
    __HAL_RCC_DMA2D_CLK_ENABLE();
9000244c:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90002450:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
90002454:	f002 0210 	and.w	r2, r2, #16
90002458:	9201      	str	r2, [sp, #4]
9000245a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
9000245c:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
9000245e:	f042 0210 	orr.w	r2, r2, #16
90002462:	67da      	str	r2, [r3, #124]	@ 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
90002464:	6fda      	ldr	r2, [r3, #124]	@ 0x7c
90002466:	f022 0210 	bic.w	r2, r2, #16
9000246a:	67da      	str	r2, [r3, #124]	@ 0x7c
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000246c:	4b07      	ldr	r3, [pc, #28]	@ (9000248c <_ZN8STM32DMA10initializeEv+0x58>)
9000246e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
90002472:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
90002474:	b003      	add	sp, #12
90002476:	f85d 4b04 	ldr.w	r4, [sp], #4
9000247a:	4770      	bx	lr
9000247c:	58024400 	.word	0x58024400
90002480:	24007788 	.word	0x24007788
90002484:	90002411 	.word	0x90002411
90002488:	90002859 	.word	0x90002859
9000248c:	e000e100 	.word	0xe000e100

90002490 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
90002490:	f240 30ef 	movw	r0, #1007	@ 0x3ef
90002494:	4770      	bx	lr
90002496:	bf00      	nop

90002498 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
90002498:	4909      	ldr	r1, [pc, #36]	@ (900024c0 <_ZN8STM32DMAD0Ev+0x28>)
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
9000249a:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
9000249e:	4b09      	ldr	r3, [pc, #36]	@ (900024c4 <_ZN8STM32DMAD0Ev+0x2c>)
900024a0:	b510      	push	{r4, lr}
900024a2:	6001      	str	r1, [r0, #0]
900024a4:	4604      	mov	r4, r0
900024a6:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900024aa:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900024ae:	f3bf 8f6f 	isb	sy
}
900024b2:	f640 51a4 	movw	r1, #3492	@ 0xda4
900024b6:	f026 fce1 	bl	90028e7c <_ZdlPvj>
900024ba:	4620      	mov	r0, r4
900024bc:	bd10      	pop	{r4, pc}
900024be:	bf00      	nop
900024c0:	9002c3d8 	.word	0x9002c3d8
900024c4:	e000e100 	.word	0xe000e100

900024c8 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        if (!started_by_external_job)
900024c8:	f890 3da0 	ldrb.w	r3, [r0, #3488]	@ 0xda0
    virtual void signalDMAInterrupt()
900024cc:	b510      	push	{r4, lr}
900024ce:	4604      	mov	r4, r0
        if (!started_by_external_job)
900024d0:	b963      	cbnz	r3, 900024ec <_ZN8STM32DMA18signalDMAInterruptEv+0x24>
        {
            executeCompleted();
900024d2:	6803      	ldr	r3, [r0, #0]
900024d4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900024d6:	4798      	blx	r3

            /* Start new external job if next buffer is full */
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
900024d8:	4924      	ldr	r1, [pc, #144]	@ (9000256c <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
900024da:	4a25      	ldr	r2, [pc, #148]	@ (90002570 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
900024dc:	680b      	ldr	r3, [r1, #0]
900024de:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900024e2:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
900024e6:	2b01      	cmp	r3, #1
900024e8:	d015      	beq.n	90002516 <_ZN8STM32DMA18signalDMAInterruptEv+0x4e>
            {
                started_by_external_job = false;
                execute();
            }
        }
    }
900024ea:	bd10      	pop	{r4, pc}
     *
     * @param None
     */
    void externalJobCompleted()
    {
        if (isRunning)
900024ec:	7a03      	ldrb	r3, [r0, #8]
900024ee:	2b00      	cmp	r3, #0
900024f0:	d12b      	bne.n	9000254a <_ZN8STM32DMA18signalDMAInterruptEv+0x82>
            if (!queue.isEmpty() && isAllowed)
900024f2:	6860      	ldr	r0, [r4, #4]
900024f4:	6803      	ldr	r3, [r0, #0]
900024f6:	681b      	ldr	r3, [r3, #0]
900024f8:	4798      	blx	r3
900024fa:	4603      	mov	r3, r0
900024fc:	2800      	cmp	r0, #0
900024fe:	d1f4      	bne.n	900024ea <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
90002500:	7a62      	ldrb	r2, [r4, #9]
90002502:	2a00      	cmp	r2, #0
90002504:	d0f1      	beq.n	900024ea <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
                execute();
90002506:	6822      	ldr	r2, [r4, #0]
90002508:	4620      	mov	r0, r4
                started_by_external_job = false;
9000250a:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
9000250e:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
90002510:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
                execute();
90002514:	4718      	bx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
90002516:	4817      	ldr	r0, [pc, #92]	@ (90002574 <_ZN8STM32DMA18signalDMAInterruptEv+0xac>)
90002518:	6800      	ldr	r0, [r0, #0]
9000251a:	2800      	cmp	r0, #0
9000251c:	d1e5      	bne.n	900024ea <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
9000251e:	7a20      	ldrb	r0, [r4, #8]
90002520:	2800      	cmp	r0, #0
90002522:	d1e2      	bne.n	900024ea <_ZN8STM32DMA18signalDMAInterruptEv+0x22>
     * @param None
     */
    void externalJobExecute()
    {
        isRunning = true;
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002524:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
90002526:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000252a:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
9000252e:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002530:	eb02 0080 	add.w	r0, r2, r0, lsl #2
90002534:	7e03      	ldrb	r3, [r0, #24]
        {
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002536:	6808      	ldr	r0, [r1, #0]
90002538:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
9000253c:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002540:	b17b      	cbz	r3, 90002562 <_ZN8STM32DMA18signalDMAInterruptEv+0x9a>
    }
90002542:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002546:	f7ff be53 	b.w	900021f0 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000254a:	4b08      	ldr	r3, [pc, #32]	@ (9000256c <_ZN8STM32DMA18signalDMAInterruptEv+0xa4>)
            isRunning = false;
9000254c:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000254e:	4808      	ldr	r0, [pc, #32]	@ (90002570 <_ZN8STM32DMA18signalDMAInterruptEv+0xa8>)
90002550:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
90002552:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002554:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
90002558:	eb00 0083 	add.w	r0, r0, r3, lsl #2
9000255c:	f7ff fec8 	bl	900022f0 <DMA2D_ExternalJobCompleted>
90002560:	e7c7      	b.n	900024f2 <_ZN8STM32DMA18signalDMAInterruptEv+0x2a>
    }
90002562:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        }
        else
        {
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002566:	f7ff bdfd 	b.w	90002164 <DMA2D_CopyBuffer>
9000256a:	bf00      	nop
9000256c:	24005df0 	.word	0x24005df0
90002570:	24000004 	.word	0x24000004
90002574:	24005dec 	.word	0x24005dec

90002578 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
90002578:	b570      	push	{r4, r5, r6, lr}
    switch (format)
9000257a:	7f8b      	ldrb	r3, [r1, #30]
9000257c:	2b0a      	cmp	r3, #10
9000257e:	d83d      	bhi.n	900025fc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x84>
90002580:	e8df f003 	tbb	[pc, r3]
90002584:	3c2a063a 	.word	0x3c2a063a
90002588:	063c3c3c 	.word	0x063c3c3c
9000258c:	0606      	.short	0x0606
9000258e:	06          	.byte	0x06
9000258f:	00          	.byte	0x00
90002590:	2401      	movs	r4, #1

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002592:	f8b1 c014 	ldrh.w	ip, [r1, #20]
90002596:	8ac8      	ldrh	r0, [r1, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002598:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000259a:	4b1b      	ldr	r3, [pc, #108]	@ (90002608 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x90>)
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000259c:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900025a0:	690d      	ldr	r5, [r1, #16]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
900025a2:	eba2 020c 	sub.w	r2, r2, ip
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
900025a6:	635c      	str	r4, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
900025a8:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900025aa:	63dd      	str	r5, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
900025ac:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
900025ae:	680e      	ldr	r6, [r1, #0]
        return color;
900025b0:	68c8      	ldr	r0, [r1, #12]
900025b2:	2e08      	cmp	r6, #8
900025b4:	d012      	beq.n	900025dc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x64>

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, 0);

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
900025b6:	0a02      	lsrs	r2, r0, #8
        WRITE_REG(DMA2D->FGOR, 0);
900025b8:	2500      	movs	r5, #0
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
900025ba:	0941      	lsrs	r1, r0, #5
900025bc:	f3c0 00c4 	ubfx	r0, r0, #3, #5
900025c0:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
900025c4:	61dc      	str	r4, [r3, #28]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
900025c6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
        WRITE_REG(DMA2D->FGOR, 0);
900025ca:	611d      	str	r5, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
900025cc:	430a      	orrs	r2, r1

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
900025ce:	490f      	ldr	r1, [pc, #60]	@ (9000260c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
900025d0:	4302      	orrs	r2, r0
900025d2:	639a      	str	r2, [r3, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
900025d4:	6019      	str	r1, [r3, #0]
    }
}
900025d6:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
900025d8:	2400      	movs	r4, #0
900025da:	e7da      	b.n	90002592 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
900025dc:	619a      	str	r2, [r3, #24]
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
900025de:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900025e0:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
900025e2:	4a0b      	ldr	r2, [pc, #44]	@ (90002610 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
900025e4:	7f09      	ldrb	r1, [r1, #28]
900025e6:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
900025ea:	490a      	ldr	r1, [pc, #40]	@ (90002614 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x9c>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
900025ec:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
900025ee:	6218      	str	r0, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900025f0:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900025f2:	60dd      	str	r5, [r3, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
900025f4:	6019      	str	r1, [r3, #0]
}
900025f6:	bd70      	pop	{r4, r5, r6, pc}
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
900025f8:	2402      	movs	r4, #2
900025fa:	e7ca      	b.n	90002592 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1a>
        assert(0 && "Unsupported Format!");
900025fc:	4b06      	ldr	r3, [pc, #24]	@ (90002618 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa0>)
900025fe:	2191      	movs	r1, #145	@ 0x91
90002600:	4a06      	ldr	r2, [pc, #24]	@ (9000261c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa4>)
90002602:	4807      	ldr	r0, [pc, #28]	@ (90002620 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xa8>)
90002604:	f026 ffb0 	bl	90029568 <__assert_func>
90002608:	52001000 	.word	0x52001000
9000260c:	00032301 	.word	0x00032301
90002610:	00010009 	.word	0x00010009
90002614:	00022301 	.word	0x00022301
90002618:	9002abbc 	.word	0x9002abbc
9000261c:	9002abd8 	.word	0x9002abd8
90002620:	9002ac24 	.word	0x9002ac24

90002624 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
{
90002624:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
90002626:	f891 e01d 	ldrb.w	lr, [r1, #29]
    switch (format)
9000262a:	f1be 0f0b 	cmp.w	lr, #11
9000262e:	f200 80aa 	bhi.w	90002786 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
90002632:	e8df f00e 	tbb	[pc, lr]
90002636:	585d      	.short	0x585d
90002638:	a8a8a846 	.word	0xa8a8a846
9000263c:	060606a8 	.word	0x060606a8
90002640:	0606      	.short	0x0606
        dma2dColorMode = DMA2D_INPUT_L8;
90002642:	2605      	movs	r6, #5
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
90002644:	f891 c01e 	ldrb.w	ip, [r1, #30]
    switch (format)
90002648:	f1bc 0f0b 	cmp.w	ip, #11
9000264c:	f200 809b 	bhi.w	90002786 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x162>
90002650:	e8df f00c 	tbb	[pc, ip]
90002654:	990d4b50 	.word	0x990d4b50
90002658:	06999999 	.word	0x06999999
9000265c:	06060606 	.word	0x06060606
    switch (format)
90002660:	f1bc 0f0b 	cmp.w	ip, #11
90002664:	f000 8095 	beq.w	90002792 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x16e>
90002668:	2405      	movs	r4, #5
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
9000266a:	2701      	movs	r7, #1
9000266c:	e001      	b.n	90002672 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
9000266e:	2400      	movs	r4, #0
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
90002670:	4627      	mov	r7, r4
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002672:	8a8b      	ldrh	r3, [r1, #20]
90002674:	8b4a      	ldrh	r2, [r1, #26]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002676:	8b0d      	ldrh	r5, [r1, #24]
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
90002678:	8ac8      	ldrh	r0, [r1, #22]
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
9000267a:	1ad2      	subs	r2, r2, r3
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
9000267c:	1aed      	subs	r5, r5, r3
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000267e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
90002682:	4b4a      	ldr	r3, [pc, #296]	@ (900027ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
90002684:	641a      	str	r2, [r3, #64]	@ 0x40
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
90002686:	619a      	str	r2, [r3, #24]
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
90002688:	611d      	str	r5, [r3, #16]
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
9000268a:	684a      	ldr	r2, [r1, #4]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
9000268c:	635f      	str	r7, [r3, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
9000268e:	6458      	str	r0, [r3, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
90002690:	6908      	ldr	r0, [r1, #16]
90002692:	63d8      	str	r0, [r3, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
90002694:	60da      	str	r2, [r3, #12]
    switch (blitOp.operation)
90002696:	680d      	ldr	r5, [r1, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002698:	7f0f      	ldrb	r7, [r1, #28]
    switch (blitOp.operation)
9000269a:	2d80      	cmp	r5, #128	@ 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000269c:	ea4f 6207 	mov.w	r2, r7, lsl #24
    switch (blitOp.operation)
900026a0:	d03c      	beq.n	9000271c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf8>
900026a2:	d810      	bhi.n	900026c6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
900026a4:	2d20      	cmp	r5, #32
900026a6:	d036      	beq.n	90002716 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
900026a8:	2d40      	cmp	r5, #64	@ 0x40
900026aa:	d034      	beq.n	90002716 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
900026ac:	2d04      	cmp	r5, #4
900026ae:	d124      	bne.n	900026fa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026b0:	4332      	orrs	r2, r6
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026b2:	493f      	ldr	r1, [pc, #252]	@ (900027b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026b4:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
900026b8:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900026ba:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900026bc:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026be:	6019      	str	r1, [r3, #0]
}
900026c0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
900026c2:	2600      	movs	r6, #0
900026c4:	e7be      	b.n	90002644 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
    switch (blitOp.operation)
900026c6:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
900026ca:	d022      	beq.n	90002712 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xee>
900026cc:	f5b5 7f00 	cmp.w	r5, #512	@ 0x200
900026d0:	d113      	bne.n	900026fa <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd6>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026d2:	4d38      	ldr	r5, [pc, #224]	@ (900027b4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x190>)
900026d4:	4315      	orrs	r5, r2
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026d6:	4a36      	ldr	r2, [pc, #216]	@ (900027b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026d8:	61dd      	str	r5, [r3, #28]
900026da:	68c9      	ldr	r1, [r1, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
900026dc:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900026de:	625c      	str	r4, [r3, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
900026e0:	6158      	str	r0, [r3, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
900026e2:	601a      	str	r2, [r3, #0]
}
900026e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    switch (format)
900026e6:	2601      	movs	r6, #1
900026e8:	e7ac      	b.n	90002644 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
900026ea:	2401      	movs	r4, #1
900026ec:	4627      	mov	r7, r4
900026ee:	e7c0      	b.n	90002672 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        dma2dColorMode = DMA2D_INPUT_RGB565;
900026f0:	2602      	movs	r6, #2
900026f2:	e7a7      	b.n	90002644 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>
    switch (format)
900026f4:	2402      	movs	r4, #2
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
900026f6:	4627      	mov	r7, r4
900026f8:	e7bb      	b.n	90002672 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4e>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026fa:	4316      	orrs	r6, r2
        if (blitOp.srcFormat != blitOp.dstFormat)
900026fc:	45e6      	cmp	lr, ip
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
900026fe:	4b2b      	ldr	r3, [pc, #172]	@ (900027ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
90002700:	f446 3600 	orr.w	r6, r6, #131072	@ 0x20000
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002704:	bf14      	ite	ne
90002706:	4a2c      	ldrne	r2, [pc, #176]	@ (900027b8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x194>)
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002708:	f242 3201 	movweq	r2, #8961	@ 0x2301
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000270c:	61de      	str	r6, [r3, #28]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
9000270e:	601a      	str	r2, [r3, #0]
}
90002710:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002712:	4d2a      	ldr	r5, [pc, #168]	@ (900027bc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x198>)
90002714:	e7de      	b.n	900026d4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xb0>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002716:	4332      	orrs	r2, r6
90002718:	4b24      	ldr	r3, [pc, #144]	@ (900027ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
9000271a:	e7ca      	b.n	900026b2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8e>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
9000271c:	6889      	ldr	r1, [r1, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
9000271e:	4332      	orrs	r2, r6
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
90002720:	1d0d      	adds	r5, r1, #4
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002722:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
90002726:	62dd      	str	r5, [r3, #44]	@ 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
90002728:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
9000272a:	780a      	ldrb	r2, [r1, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
9000272c:	625c      	str	r4, [r3, #36]	@ 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
9000272e:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
90002730:	b1e2      	cbz	r2, 9000276c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>
90002732:	2a01      	cmp	r2, #1
90002734:	d133      	bne.n	9000279e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17a>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90002736:	69d8      	ldr	r0, [r3, #28]
                if (blitOp.alpha == 255)
90002738:	3fff      	subs	r7, #255	@ 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
9000273a:	8849      	ldrh	r1, [r1, #2]
9000273c:	4a20      	ldr	r2, [pc, #128]	@ (900027c0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
                if (blitOp.alpha == 255)
9000273e:	bf18      	it	ne
90002740:	2701      	movne	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
90002742:	3901      	subs	r1, #1
90002744:	4002      	ands	r2, r0
90002746:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000274a:	f042 0210 	orr.w	r2, r2, #16
9000274e:	61da      	str	r2, [r3, #28]
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
90002750:	4a16      	ldr	r2, [pc, #88]	@ (900027ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
90002752:	69d3      	ldr	r3, [r2, #28]
90002754:	f043 0320 	orr.w	r3, r3, #32
90002758:	61d3      	str	r3, [r2, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
9000275a:	69d3      	ldr	r3, [r2, #28]
9000275c:	069b      	lsls	r3, r3, #26
9000275e:	d4fc      	bmi.n	9000275a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x136>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
90002760:	2310      	movs	r3, #16
90002762:	6093      	str	r3, [r2, #8]
            if (blend)
90002764:	b167      	cbz	r7, 90002780 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15c>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002766:	4b12      	ldr	r3, [pc, #72]	@ (900027b0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18c>)
90002768:	6013      	str	r3, [r2, #0]
}
9000276a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
9000276c:	69d8      	ldr	r0, [r3, #28]
            bool blend = true;
9000276e:	2701      	movs	r7, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
90002770:	8849      	ldrh	r1, [r1, #2]
90002772:	4a13      	ldr	r2, [pc, #76]	@ (900027c0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x19c>)
90002774:	3901      	subs	r1, #1
90002776:	4002      	ands	r2, r0
90002778:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9000277c:	61da      	str	r2, [r3, #28]
                break;
9000277e:	e7e7      	b.n	90002750 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12c>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
90002780:	4b0d      	ldr	r3, [pc, #52]	@ (900027b8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x194>)
90002782:	6013      	str	r3, [r2, #0]
}
90002784:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        assert(0 && "Unsupported Format!");
90002786:	4b0f      	ldr	r3, [pc, #60]	@ (900027c4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>)
90002788:	2170      	movs	r1, #112	@ 0x70
9000278a:	4a0f      	ldr	r2, [pc, #60]	@ (900027c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a4>)
9000278c:	480f      	ldr	r0, [pc, #60]	@ (900027cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
9000278e:	f026 feeb 	bl	90029568 <__assert_func>
        assert(0 && "Unsupported Format!");
90002792:	4b0c      	ldr	r3, [pc, #48]	@ (900027c4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>)
90002794:	2191      	movs	r1, #145	@ 0x91
90002796:	4a0e      	ldr	r2, [pc, #56]	@ (900027d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ac>)
90002798:	480c      	ldr	r0, [pc, #48]	@ (900027cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
9000279a:	f026 fee5 	bl	90029568 <__assert_func>
                assert(0 && "Unsupported format");
9000279e:	4b0d      	ldr	r3, [pc, #52]	@ (900027d4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b0>)
900027a0:	f240 111b 	movw	r1, #283	@ 0x11b
900027a4:	4a0c      	ldr	r2, [pc, #48]	@ (900027d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1b4>)
900027a6:	4809      	ldr	r0, [pc, #36]	@ (900027cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a8>)
900027a8:	f026 fede 	bl	90029568 <__assert_func>
900027ac:	52001000 	.word	0x52001000
900027b0:	00022301 	.word	0x00022301
900027b4:	00020009 	.word	0x00020009
900027b8:	00012301 	.word	0x00012301
900027bc:	0002000a 	.word	0x0002000a
900027c0:	ffff00ef 	.word	0xffff00ef
900027c4:	9002abbc 	.word	0x9002abbc
900027c8:	9002ac84 	.word	0x9002ac84
900027cc:	9002ac24 	.word	0x9002ac24
900027d0:	9002abd8 	.word	0x9002abd8
900027d4:	9002acd0 	.word	0x9002acd0
900027d8:	9002acec 	.word	0x9002acec

900027dc <_ZN8STM32DMA5startEv>:
    virtual void start()
900027dc:	b510      	push	{r4, lr}
900027de:	4604      	mov	r4, r0
        if (!queue.isEmpty() && isAllowed && !isRunning)
900027e0:	6840      	ldr	r0, [r0, #4]
900027e2:	6803      	ldr	r3, [r0, #0]
900027e4:	681b      	ldr	r3, [r3, #0]
900027e6:	4798      	blx	r3
900027e8:	b958      	cbnz	r0, 90002802 <_ZN8STM32DMA5startEv+0x26>
900027ea:	7a63      	ldrb	r3, [r4, #9]
900027ec:	b14b      	cbz	r3, 90002802 <_ZN8STM32DMA5startEv+0x26>
900027ee:	7a23      	ldrb	r3, [r4, #8]
900027f0:	bb3b      	cbnz	r3, 90002842 <_ZN8STM32DMA5startEv+0x66>
            execute();
900027f2:	6822      	ldr	r2, [r4, #0]
900027f4:	4620      	mov	r0, r4
            started_by_external_job = false;
900027f6:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
            execute();
900027fa:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
900027fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            execute();
90002800:	4718      	bx	r3
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
90002802:	4913      	ldr	r1, [pc, #76]	@ (90002850 <_ZN8STM32DMA5startEv+0x74>)
90002804:	4a13      	ldr	r2, [pc, #76]	@ (90002854 <_ZN8STM32DMA5startEv+0x78>)
90002806:	680b      	ldr	r3, [r1, #0]
90002808:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
9000280c:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
90002810:	2b01      	cmp	r3, #1
90002812:	d000      	beq.n	90002816 <_ZN8STM32DMA5startEv+0x3a>
    }
90002814:	bd10      	pop	{r4, pc}
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
90002816:	7a20      	ldrb	r0, [r4, #8]
90002818:	2800      	cmp	r0, #0
9000281a:	d1fb      	bne.n	90002814 <_ZN8STM32DMA5startEv+0x38>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
9000281c:	6808      	ldr	r0, [r1, #0]
            started_by_external_job = true;
9000281e:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002822:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
90002826:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002828:	eb02 0080 	add.w	r0, r2, r0, lsl #2
9000282c:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000282e:	6808      	ldr	r0, [r1, #0]
90002830:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
90002834:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
90002838:	b133      	cbz	r3, 90002848 <_ZN8STM32DMA5startEv+0x6c>
    }
9000283a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000283e:	f7ff bcd7 	b.w	900021f0 <DMA2D_CropBuffer>
        else if ((Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL) && !isRunning)
90002842:	4b03      	ldr	r3, [pc, #12]	@ (90002850 <_ZN8STM32DMA5startEv+0x74>)
90002844:	681b      	ldr	r3, [r3, #0]
    }
90002846:	bd10      	pop	{r4, pc}
90002848:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
9000284c:	f7ff bc8a 	b.w	90002164 <DMA2D_CopyBuffer>
90002850:	24005df0 	.word	0x24005df0
90002854:	24000004 	.word	0x24000004

90002858 <DMA2D_XferCpltCallback>:
        dma.signalDMAInterrupt();
90002858:	4b2c      	ldr	r3, [pc, #176]	@ (9000290c <DMA2D_XferCpltCallback+0xb4>)
9000285a:	492d      	ldr	r1, [pc, #180]	@ (90002910 <DMA2D_XferCpltCallback+0xb8>)
9000285c:	681b      	ldr	r3, [r3, #0]
    {
9000285e:	b510      	push	{r4, lr}
90002860:	685c      	ldr	r4, [r3, #4]
90002862:	6823      	ldr	r3, [r4, #0]
90002864:	695a      	ldr	r2, [r3, #20]
90002866:	428a      	cmp	r2, r1
90002868:	d122      	bne.n	900028b0 <DMA2D_XferCpltCallback+0x58>
        if (!started_by_external_job)
9000286a:	f894 2da0 	ldrb.w	r2, [r4, #3488]	@ 0xda0
9000286e:	b192      	cbz	r2, 90002896 <DMA2D_XferCpltCallback+0x3e>
        if (isRunning)
90002870:	7a23      	ldrb	r3, [r4, #8]
90002872:	2b00      	cmp	r3, #0
90002874:	d13a      	bne.n	900028ec <DMA2D_XferCpltCallback+0x94>
            if (!queue.isEmpty() && isAllowed)
90002876:	6860      	ldr	r0, [r4, #4]
90002878:	6803      	ldr	r3, [r0, #0]
9000287a:	681b      	ldr	r3, [r3, #0]
9000287c:	4798      	blx	r3
9000287e:	4603      	mov	r3, r0
90002880:	b9a8      	cbnz	r0, 900028ae <DMA2D_XferCpltCallback+0x56>
90002882:	7a62      	ldrb	r2, [r4, #9]
90002884:	b19a      	cbz	r2, 900028ae <DMA2D_XferCpltCallback+0x56>
                execute();
90002886:	6822      	ldr	r2, [r4, #0]
90002888:	4620      	mov	r0, r4
                started_by_external_job = false;
9000288a:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
                execute();
9000288e:	6a53      	ldr	r3, [r2, #36]	@ 0x24
    }
90002890:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002894:	4718      	bx	r3
            executeCompleted();
90002896:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90002898:	4620      	mov	r0, r4
9000289a:	4798      	blx	r3
            if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].State == JPEG_BUFFER_FULL && !DMA2D_CopyBufferEnd && !isRunning)
9000289c:	491d      	ldr	r1, [pc, #116]	@ (90002914 <DMA2D_XferCpltCallback+0xbc>)
9000289e:	4a1e      	ldr	r2, [pc, #120]	@ (90002918 <DMA2D_XferCpltCallback+0xc0>)
900028a0:	680b      	ldr	r3, [r1, #0]
900028a2:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900028a6:	f812 3023 	ldrb.w	r3, [r2, r3, lsl #2]
900028aa:	2b01      	cmp	r3, #1
900028ac:	d004      	beq.n	900028b8 <DMA2D_XferCpltCallback+0x60>
900028ae:	bd10      	pop	{r4, pc}
900028b0:	4620      	mov	r0, r4
900028b2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900028b6:	4710      	bx	r2
900028b8:	4818      	ldr	r0, [pc, #96]	@ (9000291c <DMA2D_XferCpltCallback+0xc4>)
900028ba:	6800      	ldr	r0, [r0, #0]
900028bc:	2800      	cmp	r0, #0
900028be:	d1f6      	bne.n	900028ae <DMA2D_XferCpltCallback+0x56>
900028c0:	7a20      	ldrb	r0, [r4, #8]
900028c2:	2800      	cmp	r0, #0
900028c4:	d1f3      	bne.n	900028ae <DMA2D_XferCpltCallback+0x56>
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900028c6:	6808      	ldr	r0, [r1, #0]
                started_by_external_job = true;
900028c8:	f884 3da0 	strb.w	r3, [r4, #3488]	@ 0xda0
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900028cc:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
        isRunning = true;
900028d0:	7223      	strb	r3, [r4, #8]
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900028d2:	eb02 0080 	add.w	r0, r2, r0, lsl #2
900028d6:	7e03      	ldrb	r3, [r0, #24]
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028d8:	6808      	ldr	r0, [r1, #0]
900028da:	ebc0 00c0 	rsb	r0, r0, r0, lsl #3
900028de:	eb02 0080 	add.w	r0, r2, r0, lsl #2
        if (Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex].DoCropping)
900028e2:	b17b      	cbz	r3, 90002904 <DMA2D_XferCpltCallback+0xac>
900028e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CropBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028e8:	f7ff bc82 	b.w	900021f0 <DMA2D_CropBuffer>
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028ec:	4b09      	ldr	r3, [pc, #36]	@ (90002914 <DMA2D_XferCpltCallback+0xbc>)
            isRunning = false;
900028ee:	2200      	movs	r2, #0
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028f0:	4809      	ldr	r0, [pc, #36]	@ (90002918 <DMA2D_XferCpltCallback+0xc0>)
900028f2:	681b      	ldr	r3, [r3, #0]
            isRunning = false;
900028f4:	7222      	strb	r2, [r4, #8]
            DMA2D_ExternalJobCompleted(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
900028f6:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
900028fa:	eb00 0083 	add.w	r0, r0, r3, lsl #2
900028fe:	f7ff fcf7 	bl	900022f0 <DMA2D_ExternalJobCompleted>
90002902:	e7b8      	b.n	90002876 <DMA2D_XferCpltCallback+0x1e>
90002904:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            DMA2D_CopyBuffer(Jpeg_OUT_BufferTab[JPEG_OUT_Read_BufferIndex]);
90002908:	f7ff bc2c 	b.w	90002164 <DMA2D_CopyBuffer>
9000290c:	2402198c 	.word	0x2402198c
90002910:	900024c9 	.word	0x900024c9
90002914:	24005df0 	.word	0x24005df0
90002918:	24000004 	.word	0x24000004
9000291c:	24005dec 	.word	0x24005dec

90002920 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
90002920:	b570      	push	{r4, r5, r6, lr}
90002922:	4606      	mov	r6, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
90002924:	4b0b      	ldr	r3, [pc, #44]	@ (90002954 <_ZN8STM32DMAC1Ev+0x34>)
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
90002926:	2500      	movs	r5, #0
90002928:	300c      	adds	r0, #12
9000292a:	4634      	mov	r4, r6
9000292c:	2260      	movs	r2, #96	@ 0x60
9000292e:	7235      	strb	r5, [r6, #8]
90002930:	7275      	strb	r5, [r6, #9]
90002932:	6070      	str	r0, [r6, #4]
90002934:	f844 3b20 	str.w	r3, [r4], #32
90002938:	4621      	mov	r1, r4
9000293a:	f00e fc85 	bl	90011248 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
9000293e:	4621      	mov	r1, r4
90002940:	f506 635a 	add.w	r3, r6, #3488	@ 0xda0
        : color(0)
90002944:	60cd      	str	r5, [r1, #12]
90002946:	3124      	adds	r1, #36	@ 0x24
90002948:	4299      	cmp	r1, r3
9000294a:	d1fb      	bne.n	90002944 <_ZN8STM32DMAC1Ev+0x24>
}
9000294c:	4630      	mov	r0, r6
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0])), started_by_external_job(false)
9000294e:	f886 5da0 	strb.w	r5, [r6, #3488]	@ 0xda0
}
90002952:	bd70      	pop	{r4, r5, r6, pc}
90002954:	9002c3d8 	.word	0x9002c3d8

90002958 <_ZN8touchgfx5paint8tearDownEv>:
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90002958:	4a03      	ldr	r2, [pc, #12]	@ (90002968 <_ZN8touchgfx5paint8tearDownEv+0x10>)
9000295a:	6813      	ldr	r3, [r2, #0]
9000295c:	07db      	lsls	r3, r3, #31
9000295e:	d4fc      	bmi.n	9000295a <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002960:	2323      	movs	r3, #35	@ 0x23
90002962:	6093      	str	r3, [r2, #8]
}
90002964:	4770      	bx	lr
90002966:	bf00      	nop
90002968:	52001000 	.word	0x52001000

9000296c <_ZN8touchgfx5paint9flushLineEPmi>:
void flushLine(uint32_t* addr, int sizebytes)
{
    // This function is used when decompressing data to flush
    // the currently decoded data in the cache to allow the DMA2D
    // to blend the pixels correctly.
    if (SCB->CCR & SCB_CCR_DC_Msk)
9000296c:	4a0b      	ldr	r2, [pc, #44]	@ (9000299c <_ZN8touchgfx5paint9flushLineEPmi+0x30>)
9000296e:	6953      	ldr	r3, [r2, #20]
  \param[in]   dsize   size of memory block (in number of bytes)
*/
__STATIC_FORCEINLINE void SCB_CleanDCache_by_Addr (uint32_t *addr, int32_t dsize)
{
  #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
    if ( dsize > 0 ) { 
90002970:	03db      	lsls	r3, r3, #15
90002972:	d501      	bpl.n	90002978 <_ZN8touchgfx5paint9flushLineEPmi+0xc>
90002974:	2900      	cmp	r1, #0
90002976:	dc00      	bgt.n	9000297a <_ZN8touchgfx5paint9flushLineEPmi+0xe>
    {
        SCB_CleanDCache_by_Addr(addr, sizebytes);
    }
}
90002978:	4770      	bx	lr
       int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
9000297a:	f000 031f 	and.w	r3, r0, #31
9000297e:	4419      	add	r1, r3
  __ASM volatile ("dsb 0xF":::"memory");
90002980:	f3bf 8f4f 	dsb	sy
90002984:	4401      	add	r1, r0
      uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
    
      __DSB();

      do {
        SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bits 31..5 are valid */
90002986:	f8c2 0268 	str.w	r0, [r2, #616]	@ 0x268
        op_addr += __SCB_DCACHE_LINE_SIZE;
9000298a:	3020      	adds	r0, #32
        op_size -= __SCB_DCACHE_LINE_SIZE;
      } while ( op_size > 0 );
9000298c:	1a0b      	subs	r3, r1, r0
9000298e:	2b00      	cmp	r3, #0
90002990:	dcf9      	bgt.n	90002986 <_ZN8touchgfx5paint9flushLineEPmi+0x1a>
90002992:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90002996:	f3bf 8f6f 	isb	sy
9000299a:	4770      	bx	lr
9000299c:	e000ed00 	.word	0xe000ed00

900029a0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
 *
 * @brief Renders Canvas Widget chunks using DMA.
 * This functions will not generate an interrupt, and will not affect the DMA queue.
 */
void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
{
900029a0:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900029a2:	4c11      	ldr	r4, [pc, #68]	@ (900029e8 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
900029a4:	6825      	ldr	r5, [r4, #0]
900029a6:	07ed      	lsls	r5, r5, #31
900029a8:	d4fc      	bmi.n	900029a4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029aa:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029ac:	0409      	lsls	r1, r1, #16

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    if (alpha < 0xFF)
900029ae:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
900029b0:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029b2:	f041 0101 	orr.w	r1, r1, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
900029b6:	f04f 0502 	mov.w	r5, #2
900029ba:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
900029bc:	6461      	str	r1, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
900029be:	63e0      	str	r0, [r4, #60]	@ 0x3c
    if (alpha < 0xFF)
900029c0:	d00b      	beq.n	900029da <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x3a>
    {
        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029c2:	490a      	ldr	r1, [pc, #40]	@ (900029ec <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
900029c4:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029c6:	ea41 6303 	orr.w	r3, r1, r3, lsl #24

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
900029ca:	4909      	ldr	r1, [pc, #36]	@ (900029f0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x50>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
900029cc:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->FGCOLR, color);
900029ce:	6222      	str	r2, [r4, #32]
        WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
900029d0:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
900029d2:	60e0      	str	r0, [r4, #12]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
900029d4:	6021      	str	r1, [r4, #0]
        WRITE_REG(DMA2D->OCOLR, color565);

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}
900029d6:	bc30      	pop	{r4, r5}
900029d8:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
900029da:	61e5      	str	r5, [r4, #28]
        WRITE_REG(DMA2D->OCOLR, color565);
900029dc:	9a02      	ldr	r2, [sp, #8]
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
900029de:	4b05      	ldr	r3, [pc, #20]	@ (900029f4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x54>)
        WRITE_REG(DMA2D->OCOLR, color565);
900029e0:	63a2      	str	r2, [r4, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
900029e2:	6023      	str	r3, [r4, #0]
}
900029e4:	bc30      	pop	{r4, r5}
900029e6:	4770      	bx	lr
900029e8:	52001000 	.word	0x52001000
900029ec:	00010009 	.word	0x00010009
900029f0:	00020001 	.word	0x00020001
900029f4:	00030001 	.word	0x00030001

900029f8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
900029f8:	b430      	push	{r4, r5}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
900029fa:	4c10      	ldr	r4, [pc, #64]	@ (90002a3c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
900029fc:	6825      	ldr	r5, [r4, #0]
900029fe:	07ed      	lsls	r5, r5, #31
90002a00:	d4fc      	bmi.n	900029fc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a02:	2523      	movs	r5, #35	@ 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a04:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
90002a06:	2bff      	cmp	r3, #255	@ 0xff
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a08:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a0a:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002a0e:	f04f 0502 	mov.w	r5, #2
90002a12:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a14:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90002a16:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
90002a18:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
90002a1a:	d009      	beq.n	90002a30 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x38>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a1c:	061b      	lsls	r3, r3, #24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a1e:	4a08      	ldr	r2, [pc, #32]	@ (90002a40 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x48>)
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a20:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
90002a24:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002a26:	6265      	str	r5, [r4, #36]	@ 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
90002a28:	6160      	str	r0, [r4, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a2a:	6022      	str	r2, [r4, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
    }
}
90002a2c:	bc30      	pop	{r4, r5}
90002a2e:	4770      	bx	lr
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a30:	4a04      	ldr	r2, [pc, #16]	@ (90002a44 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>)
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
90002a32:	2301      	movs	r3, #1
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a34:	61e2      	str	r2, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
90002a36:	6023      	str	r3, [r4, #0]
}
90002a38:	bc30      	pop	{r4, r5}
90002a3a:	4770      	bx	lr
90002a3c:	52001000 	.word	0x52001000
90002a40:	00020001 	.word	0x00020001
90002a44:	ff020002 	.word	0xff020002

90002a48 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
90002a48:	b470      	push	{r4, r5, r6}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
90002a4a:	4c0c      	ldr	r4, [pc, #48]	@ (90002a7c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
90002a4c:	6825      	ldr	r5, [r4, #0]
90002a4e:	07ed      	lsls	r5, r5, #31
90002a50:	d4fc      	bmi.n	90002a4c <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a52:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002a54:	2502      	movs	r5, #2

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a56:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a58:	2623      	movs	r6, #35	@ 0x23
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a5a:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a5e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
90002a62:	60a6      	str	r6, [r4, #8]
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
90002a64:	6365      	str	r5, [r4, #52]	@ 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
90002a66:	6462      	str	r2, [r4, #68]	@ 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
90002a68:	63e0      	str	r0, [r4, #60]	@ 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
90002a6a:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
90002a6c:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a6e:	4b04      	ldr	r3, [pc, #16]	@ (90002a80 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x38>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
90002a70:	6265      	str	r5, [r4, #36]	@ 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
90002a72:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
90002a74:	6023      	str	r3, [r4, #0]
}
90002a76:	bc70      	pop	{r4, r5, r6}
90002a78:	4770      	bx	lr
90002a7a:	bf00      	nop
90002a7c:	52001000 	.word	0x52001000
90002a80:	00020001 	.word	0x00020001

90002a84 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
90002a84:	2001      	movs	r0, #1
90002a86:	4770      	bx	lr

90002a88 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
90002a88:	200c      	movs	r0, #12
90002a8a:	4770      	bx	lr

90002a8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
90002a8c:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90002a90:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002a94:	3008      	adds	r0, #8
90002a96:	4770      	bx	lr

90002a98 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
90002a98:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90002a9c:	eb00 0081 	add.w	r0, r0, r1, lsl #2
    }
90002aa0:	3008      	adds	r0, #8
90002aa2:	4770      	bx	lr

90002aa4 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14DataScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002aa4:	2001      	movs	r0, #1
90002aa6:	4770      	bx	lr

90002aa8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14DataScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002aa8:	f44f 7021 	mov.w	r0, #644	@ 0x284
90002aac:	4770      	bx	lr
90002aae:	bf00      	nop

90002ab0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14DataScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002ab0:	f44f 7321 	mov.w	r3, #644	@ 0x284
90002ab4:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002ab8:	3008      	adds	r0, #8
90002aba:	4770      	bx	lr

90002abc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI14DataScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002abc:	f44f 7321 	mov.w	r3, #644	@ 0x284
90002ac0:	fb03 0001 	mla	r0, r3, r1, r0
    }
90002ac4:	3008      	adds	r0, #8
90002ac6:	4770      	bx	lr

90002ac8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19DataScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
90002ac8:	2001      	movs	r0, #1
90002aca:	4770      	bx	lr

90002acc <_ZN8touchgfx9PartitionINS_4meta8TypeListI19DataScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
90002acc:	2010      	movs	r0, #16
90002ace:	4770      	bx	lr

90002ad0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19DataScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002ad0:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002ad4:	3008      	adds	r0, #8
90002ad6:	4770      	bx	lr

90002ad8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI19DataScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
90002ad8:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
90002adc:	3008      	adds	r0, #8
90002ade:	4770      	bx	lr

90002ae0 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoStartScreenScreenNoTransition();
90002ae0:	4608      	mov	r0, r1
90002ae2:	f002 bb77 	b.w	900051d4 <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv>
90002ae6:	bf00      	nop

90002ae8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
90002ae8:	4b03      	ldr	r3, [pc, #12]	@ (90002af8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002aea:	b510      	push	{r4, lr}
90002aec:	4604      	mov	r4, r0
90002aee:	6003      	str	r3, [r0, #0]
90002af0:	f00d f9b9 	bl	9000fe66 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002af4:	4620      	mov	r0, r4
90002af6:	bd10      	pop	{r4, pc}
90002af8:	9002c490 	.word	0x9002c490

90002afc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002afc:	4b05      	ldr	r3, [pc, #20]	@ (90002b14 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90002afe:	b510      	push	{r4, lr}
90002b00:	4604      	mov	r4, r0
90002b02:	6003      	str	r3, [r0, #0]
90002b04:	f00d f9af 	bl	9000fe66 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b08:	2114      	movs	r1, #20
90002b0a:	4620      	mov	r0, r4
90002b0c:	f026 f9b6 	bl	90028e7c <_ZdlPvj>
90002b10:	4620      	mov	r0, r4
90002b12:	bd10      	pop	{r4, pc}
90002b14:	9002c490 	.word	0x9002c490

90002b18 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14DataScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002b18:	4b03      	ldr	r3, [pc, #12]	@ (90002b28 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14DataScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002b1a:	b510      	push	{r4, lr}
90002b1c:	4604      	mov	r4, r0
90002b1e:	6003      	str	r3, [r0, #0]
90002b20:	f00d f9a1 	bl	9000fe66 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b24:	4620      	mov	r0, r4
90002b26:	bd10      	pop	{r4, pc}
90002b28:	9002c45c 	.word	0x9002c45c

90002b2c <_ZN8touchgfx9PartitionINS_4meta8TypeListI14DataScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002b2c:	4b06      	ldr	r3, [pc, #24]	@ (90002b48 <_ZN8touchgfx9PartitionINS_4meta8TypeListI14DataScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev+0x1c>)
90002b2e:	b510      	push	{r4, lr}
90002b30:	4604      	mov	r4, r0
90002b32:	6003      	str	r3, [r0, #0]
90002b34:	f00d f997 	bl	9000fe66 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b38:	f44f 7123 	mov.w	r1, #652	@ 0x28c
90002b3c:	4620      	mov	r0, r4
90002b3e:	f026 f99d 	bl	90028e7c <_ZdlPvj>
90002b42:	4620      	mov	r0, r4
90002b44:	bd10      	pop	{r4, pc}
90002b46:	bf00      	nop
90002b48:	9002c45c 	.word	0x9002c45c

90002b4c <_ZN8touchgfx9PartitionINS_4meta8TypeListI19DataScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
90002b4c:	4b03      	ldr	r3, [pc, #12]	@ (90002b5c <_ZN8touchgfx9PartitionINS_4meta8TypeListI19DataScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
90002b4e:	b510      	push	{r4, lr}
90002b50:	4604      	mov	r4, r0
90002b52:	6003      	str	r3, [r0, #0]
90002b54:	f00d f987 	bl	9000fe66 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b58:	4620      	mov	r0, r4
90002b5a:	bd10      	pop	{r4, pc}
90002b5c:	9002c428 	.word	0x9002c428

90002b60 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19DataScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
90002b60:	4b05      	ldr	r3, [pc, #20]	@ (90002b78 <_ZN8touchgfx9PartitionINS_4meta8TypeListI19DataScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev+0x18>)
90002b62:	b510      	push	{r4, lr}
90002b64:	4604      	mov	r4, r0
90002b66:	6003      	str	r3, [r0, #0]
90002b68:	f00d f97d 	bl	9000fe66 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b6c:	2118      	movs	r1, #24
90002b6e:	4620      	mov	r0, r4
90002b70:	f026 f984 	bl	90028e7c <_ZdlPvj>
90002b74:	4620      	mov	r0, r4
90002b76:	bd10      	pop	{r4, pc}
90002b78:	9002c428 	.word	0x9002c428

90002b7c <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
90002b7c:	b510      	push	{r4, lr}
90002b7e:	4a0c      	ldr	r2, [pc, #48]	@ (90002bb0 <_ZN12FrontendHeapD1Ev+0x34>)
90002b80:	4604      	mov	r4, r0
90002b82:	4b0c      	ldr	r3, [pc, #48]	@ (90002bb4 <_ZN12FrontendHeapD1Ev+0x38>)
90002b84:	f500 702e 	add.w	r0, r0, #696	@ 0x2b8
90002b88:	6022      	str	r2, [r4, #0]
90002b8a:	f8c4 32b8 	str.w	r3, [r4, #696]	@ 0x2b8
90002b8e:	f00d f96a 	bl	9000fe66 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b92:	4b09      	ldr	r3, [pc, #36]	@ (90002bb8 <_ZN12FrontendHeapD1Ev+0x3c>)
90002b94:	4620      	mov	r0, r4
90002b96:	f840 3f2c 	str.w	r3, [r0, #44]!
90002b9a:	f00d f964 	bl	9000fe66 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002b9e:	4b07      	ldr	r3, [pc, #28]	@ (90002bbc <_ZN12FrontendHeapD1Ev+0x40>)
90002ba0:	4620      	mov	r0, r4
90002ba2:	f840 3f14 	str.w	r3, [r0, #20]!
90002ba6:	f00d f95e 	bl	9000fe66 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002baa:	4620      	mov	r0, r4
90002bac:	bd10      	pop	{r4, pc}
90002bae:	bf00      	nop
90002bb0:	9002c4c4 	.word	0x9002c4c4
90002bb4:	9002c490 	.word	0x9002c490
90002bb8:	9002c45c 	.word	0x9002c45c
90002bbc:	9002c428 	.word	0x9002c428

90002bc0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
90002bc0:	b510      	push	{r4, lr}
class FrontendHeap : public FrontendHeapBase
90002bc2:	4c0c      	ldr	r4, [pc, #48]	@ (90002bf4 <__tcf_0+0x34>)
90002bc4:	4a0c      	ldr	r2, [pc, #48]	@ (90002bf8 <__tcf_0+0x38>)
90002bc6:	4b0d      	ldr	r3, [pc, #52]	@ (90002bfc <__tcf_0+0x3c>)
90002bc8:	f504 702e 	add.w	r0, r4, #696	@ 0x2b8
90002bcc:	6022      	str	r2, [r4, #0]
90002bce:	f8c4 32b8 	str.w	r3, [r4, #696]	@ 0x2b8
90002bd2:	f00d f948 	bl	9000fe66 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bd6:	4b0a      	ldr	r3, [pc, #40]	@ (90002c00 <__tcf_0+0x40>)
90002bd8:	4620      	mov	r0, r4
90002bda:	f840 3f2c 	str.w	r3, [r0, #44]!
90002bde:	f00d f942 	bl	9000fe66 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002be2:	4620      	mov	r0, r4
90002be4:	4b07      	ldr	r3, [pc, #28]	@ (90002c04 <__tcf_0+0x44>)
        static FrontendHeap instance;
90002be6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90002bea:	f840 3f14 	str.w	r3, [r0, #20]!
90002bee:	f00d b93a 	b.w	9000fe66 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002bf2:	bf00      	nop
90002bf4:	24006f18 	.word	0x24006f18
90002bf8:	9002c4c4 	.word	0x9002c4c4
90002bfc:	9002c490 	.word	0x9002c490
90002c00:	9002c45c 	.word	0x9002c45c
90002c04:	9002c428 	.word	0x9002c428

90002c08 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
90002c08:	b510      	push	{r4, lr}
90002c0a:	4a0e      	ldr	r2, [pc, #56]	@ (90002c44 <_ZN12FrontendHeapD0Ev+0x3c>)
90002c0c:	4604      	mov	r4, r0
90002c0e:	4b0e      	ldr	r3, [pc, #56]	@ (90002c48 <_ZN12FrontendHeapD0Ev+0x40>)
90002c10:	f500 702e 	add.w	r0, r0, #696	@ 0x2b8
90002c14:	6022      	str	r2, [r4, #0]
90002c16:	f8c4 32b8 	str.w	r3, [r4, #696]	@ 0x2b8
90002c1a:	f00d f924 	bl	9000fe66 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002c1e:	4b0b      	ldr	r3, [pc, #44]	@ (90002c4c <_ZN12FrontendHeapD0Ev+0x44>)
90002c20:	4620      	mov	r0, r4
90002c22:	f840 3f2c 	str.w	r3, [r0, #44]!
90002c26:	f00d f91e 	bl	9000fe66 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002c2a:	4b09      	ldr	r3, [pc, #36]	@ (90002c50 <_ZN12FrontendHeapD0Ev+0x48>)
90002c2c:	4620      	mov	r0, r4
90002c2e:	f840 3f14 	str.w	r3, [r0, #20]!
90002c32:	f00d f918 	bl	9000fe66 <_ZN8touchgfx17AbstractPartitionD1Ev>
90002c36:	4620      	mov	r0, r4
90002c38:	f240 412c 	movw	r1, #1068	@ 0x42c
90002c3c:	f026 f91e 	bl	90028e7c <_ZdlPvj>
90002c40:	4620      	mov	r0, r4
90002c42:	bd10      	pop	{r4, pc}
90002c44:	9002c4c4 	.word	0x9002c4c4
90002c48:	9002c490 	.word	0x9002c490
90002c4c:	9002c45c 	.word	0x9002c45c
90002c50:	9002c428 	.word	0x9002c428

90002c54 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 272);

void touchgfx_init()
{
90002c54:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90002c58:	b082      	sub	sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
90002c5a:	2400      	movs	r4, #0
90002c5c:	f001 fc70 	bl	90004540 <_ZN14BitmapDatabase11getInstanceEv>
90002c60:	4605      	mov	r5, r0
90002c62:	f001 fc71 	bl	90004548 <_ZN14BitmapDatabase15getInstanceSizeEv>
90002c66:	4623      	mov	r3, r4
90002c68:	4601      	mov	r1, r0
90002c6a:	4622      	mov	r2, r4
90002c6c:	4628      	mov	r0, r5
90002c6e:	9400      	str	r4, [sp, #0]
90002c70:	f017 f842 	bl	90019cf8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
90002c74:	4b29      	ldr	r3, [pc, #164]	@ (90002d1c <touchgfx_init+0xc8>)
90002c76:	4a2a      	ldr	r2, [pc, #168]	@ (90002d20 <touchgfx_init+0xcc>)
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
90002c78:	4620      	mov	r0, r4
        static FrontendHeap instance;
90002c7a:	4c2a      	ldr	r4, [pc, #168]	@ (90002d24 <touchgfx_init+0xd0>)
90002c7c:	601a      	str	r2, [r3, #0]
90002c7e:	f002 fe55 	bl	9000592c <_ZN8touchgfx5Texts11setLanguageEt>
     *
     * @param renderer  The renderer to be used by LCD when dealing with vector fonts.
     */
    void setVectorFontRenderer(VectorFontRenderer* renderer)
    {
        vectorFontRenderer = renderer;
90002c82:	4b29      	ldr	r3, [pc, #164]	@ (90002d28 <touchgfx_init+0xd4>)
90002c84:	4a29      	ldr	r2, [pc, #164]	@ (90002d2c <touchgfx_init+0xd8>)

    display.setVectorFontRenderer(&vectorFontRenderer);

    FontManager::setFontProvider(&fontProvider);
90002c86:	482a      	ldr	r0, [pc, #168]	@ (90002d30 <touchgfx_init+0xdc>)
90002c88:	609a      	str	r2, [r3, #8]
90002c8a:	f016 ff9d 	bl	90019bc8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
90002c8e:	6823      	ldr	r3, [r4, #0]
90002c90:	f3bf 8f5b 	dmb	ish
90002c94:	07db      	lsls	r3, r3, #31
90002c96:	d505      	bpl.n	90002ca4 <touchgfx_init+0x50>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
90002c98:	4826      	ldr	r0, [pc, #152]	@ (90002d34 <touchgfx_init+0xe0>)
}
90002c9a:	b002      	add	sp, #8
90002c9c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002ca0:	f7fe b950 	b.w	90000f44 <_ZN11TouchGFXHAL10initializeEv>
90002ca4:	4620      	mov	r0, r4
90002ca6:	f026 f8eb 	bl	90028e80 <__cxa_guard_acquire>
90002caa:	2800      	cmp	r0, #0
90002cac:	d0f4      	beq.n	90002c98 <touchgfx_init+0x44>
     */
    MVPHeap(AbstractPartition& pres,
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
90002cae:	4d22      	ldr	r5, [pc, #136]	@ (90002d38 <touchgfx_init+0xe4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
90002cb0:	4b22      	ldr	r3, [pc, #136]	@ (90002d3c <touchgfx_init+0xe8>)
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
90002cb2:	f505 7634 	add.w	r6, r5, #720	@ 0x2d0
        : presenterStorage(pres),
90002cb6:	f105 0014 	add.w	r0, r5, #20
          screenStorage(scr),
90002cba:	f105 082c 	add.w	r8, r5, #44	@ 0x2c
          transitionStorage(tra),
90002cbe:	f505 772e 	add.w	r7, r5, #696	@ 0x2b8
90002cc2:	602b      	str	r3, [r5, #0]
90002cc4:	60ef      	str	r7, [r5, #12]
          frontendApplication(app)
90002cc6:	612e      	str	r6, [r5, #16]
          screenStorage(scr),
90002cc8:	e9c5 0801 	strd	r0, r8, [r5, #4]
90002ccc:	f00d f8cc 	bl	9000fe68 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002cd0:	4b1b      	ldr	r3, [pc, #108]	@ (90002d40 <touchgfx_init+0xec>)
90002cd2:	4640      	mov	r0, r8
90002cd4:	616b      	str	r3, [r5, #20]
90002cd6:	f00d f8c7 	bl	9000fe68 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002cda:	4b1a      	ldr	r3, [pc, #104]	@ (90002d44 <touchgfx_init+0xf0>)
90002cdc:	4638      	mov	r0, r7
90002cde:	62eb      	str	r3, [r5, #44]	@ 0x2c
90002ce0:	f00d f8c2 	bl	9000fe68 <_ZN8touchgfx17AbstractPartitionC1Ev>
90002ce4:	4b18      	ldr	r3, [pc, #96]	@ (90002d48 <touchgfx_init+0xf4>)
90002ce6:	f505 7033 	add.w	r0, r5, #716	@ 0x2cc
90002cea:	f8c5 32b8 	str.w	r3, [r5, #696]	@ 0x2b8
90002cee:	f002 fef9 	bl	90005ae4 <_ZN5ModelC1Ev>
90002cf2:	462a      	mov	r2, r5
90002cf4:	f505 7133 	add.w	r1, r5, #716	@ 0x2cc
90002cf8:	4630      	mov	r0, r6
90002cfa:	f002 fee9 	bl	90005ad0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
90002cfe:	4630      	mov	r0, r6
90002d00:	f002 fa68 	bl	900051d4 <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv>
        static FrontendHeap instance;
90002d04:	4811      	ldr	r0, [pc, #68]	@ (90002d4c <touchgfx_init+0xf8>)
90002d06:	f026 fc4d 	bl	900295a4 <atexit>
90002d0a:	4620      	mov	r0, r4
90002d0c:	f026 f8c4 	bl	90028e98 <__cxa_guard_release>
90002d10:	4808      	ldr	r0, [pc, #32]	@ (90002d34 <touchgfx_init+0xe0>)
}
90002d12:	b002      	add	sp, #8
90002d14:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
90002d18:	f7fe b914 	b.w	90000f44 <_ZN11TouchGFXHAL10initializeEv>
90002d1c:	240219f0 	.word	0x240219f0
90002d20:	240060c0 	.word	0x240060c0
90002d24:	24006f14 	.word	0x24006f14
90002d28:	240060e0 	.word	0x240060e0
90002d2c:	240060c4 	.word	0x240060c4
90002d30:	24000040 	.word	0x24000040
90002d34:	24006030 	.word	0x24006030
90002d38:	24006f18 	.word	0x24006f18
90002d3c:	9002c4c4 	.word	0x9002c4c4
90002d40:	9002c428 	.word	0x9002c428
90002d44:	9002c45c 	.word	0x9002c45c
90002d48:	9002c490 	.word	0x9002c490
90002d4c:	90002bc1 	.word	0x90002bc1

90002d50 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
90002d50:	4770      	bx	lr
90002d52:	bf00      	nop

90002d54 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
90002d54:	4801      	ldr	r0, [pc, #4]	@ (90002d5c <touchgfx_taskEntry+0x8>)
90002d56:	f7fe b943 	b.w	90000fe0 <_ZN11TouchGFXHAL9taskEntryEv>
90002d5a:	bf00      	nop
90002d5c:	24006030 	.word	0x24006030

90002d60 <_GLOBAL__sub_I_touchgfx_init>:
}
90002d60:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
90002d62:	4e2a      	ldr	r6, [pc, #168]	@ (90002e0c <_GLOBAL__sub_I_touchgfx_init+0xac>)
{
public:

    STM32TouchController() {}
90002d64:	4b2a      	ldr	r3, [pc, #168]	@ (90002e10 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
90002d66:	4c2b      	ldr	r4, [pc, #172]	@ (90002e14 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
90002d68:	4630      	mov	r0, r6
static LCD16bpp display;
90002d6a:	4d2b      	ldr	r5, [pc, #172]	@ (90002e18 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
90002d6c:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
90002d6e:	f7ff fdd7 	bl	90002920 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
90002d72:	4628      	mov	r0, r5
90002d74:	f01c f8d0 	bl	9001ef18 <_ZN8touchgfx8LCD16bppC1Ev>
static VectorFontRendererImpl vectorFontRenderer;
90002d78:	4828      	ldr	r0, [pc, #160]	@ (90002e1c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
90002d7a:	f014 fcc7 	bl	9001770c <_ZN8touchgfx22VectorFontRendererImplC1Ev>
        : dma(dmaInterface),
90002d7e:	4b28      	ldr	r3, [pc, #160]	@ (90002e20 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
          mcuInstrumentation(0),
90002d80:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002d82:	f44f 70f0 	mov.w	r0, #480	@ 0x1e0
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002d86:	f44f 7188 	mov.w	r1, #272	@ 0x110
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
90002d8a:	62da      	str	r2, [r3, #44]	@ 0x2c
90002d8c:	861a      	strh	r2, [r3, #48]	@ 0x30
        : x(0), y(0), width(0), height(0)
90002d8e:	655a      	str	r2, [r3, #84]	@ 0x54
          useAuxiliaryLCD(false),
90002d90:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          lastY(0),
90002d94:	665a      	str	r2, [r3, #100]	@ 0x64
          vSyncCompensationEnabled(false),
90002d96:	66da      	str	r2, [r3, #108]	@ 0x6c
          updateMCULoad(0),
90002d98:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          mcuInstrumentation(0),
90002d9c:	e9c3 4203 	strd	r4, r2, [r3, #12]
          touchSampleRate(1),
90002da0:	4c20      	ldr	r4, [pc, #128]	@ (90002e24 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
90002da2:	669c      	str	r4, [r3, #104]	@ 0x68
        instance = this;
90002da4:	4c20      	ldr	r4, [pc, #128]	@ (90002e28 <_GLOBAL__sub_I_touchgfx_init+0xc8>)
90002da6:	6023      	str	r3, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
90002da8:	4c20      	ldr	r4, [pc, #128]	@ (90002e2c <_GLOBAL__sub_I_touchgfx_init+0xcc>)
90002daa:	8020      	strh	r0, [r4, #0]
90002dac:	4c20      	ldr	r4, [pc, #128]	@ (90002e30 <_GLOBAL__sub_I_touchgfx_init+0xd0>)
90002dae:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
90002db0:	4c20      	ldr	r4, [pc, #128]	@ (90002e34 <_GLOBAL__sub_I_touchgfx_init+0xd4>)
90002db2:	4821      	ldr	r0, [pc, #132]	@ (90002e38 <_GLOBAL__sub_I_touchgfx_init+0xd8>)
90002db4:	8021      	strh	r1, [r4, #0]
90002db6:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
90002db8:	4820      	ldr	r0, [pc, #128]	@ (90002e3c <_GLOBAL__sub_I_touchgfx_init+0xdc>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
90002dba:	4921      	ldr	r1, [pc, #132]	@ (90002e40 <_GLOBAL__sub_I_touchgfx_init+0xe0>)
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002dbc:	4c21      	ldr	r4, [pc, #132]	@ (90002e44 <_GLOBAL__sub_I_touchgfx_init+0xe4>)
          lcdRef(display),
90002dbe:	e9c3 6501 	strd	r6, r5, [r3, #4]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002dc2:	f44f 7580 	mov.w	r5, #256	@ 0x100
          frameBufferAllocator(0),
90002dc6:	e9c3 2205 	strd	r2, r2, [r3, #20]
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
90002dca:	649d      	str	r5, [r3, #72]	@ 0x48
            : startX(0),
90002dcc:	e9c3 2207 	strd	r2, r2, [r3, #28]
        : drag(), listener(0), dragThresholdValue(0)
90002dd0:	e9c3 2209 	strd	r2, r2, [r3, #36]	@ 0x24
          frameBuffer0(0),
90002dd4:	e9c3 220e 	strd	r2, r2, [r3, #56]	@ 0x38
          frameBuffer2(0),
90002dd8:	e9c3 2210 	strd	r2, r2, [r3, #64]	@ 0x40
90002ddc:	e9c3 2213 	strd	r2, r2, [r3, #76]	@ 0x4c
          lastX(0),
90002de0:	e9c3 2217 	strd	r2, r2, [r3, #92]	@ 0x5c
        DISPLAY_ROTATION = rotate0;
90002de4:	7002      	strb	r2, [r0, #0]
90002de6:	6019      	str	r1, [r3, #0]
          isFrontPorchEntered(false),
90002de8:	4917      	ldr	r1, [pc, #92]	@ (90002e48 <_GLOBAL__sub_I_touchgfx_init+0xe8>)
          maxDrawingHeight(height / numberOfBlocks), // Best guess based on testing (but not ideal in all cases)
90002dea:	4818      	ldr	r0, [pc, #96]	@ (90002e4c <_GLOBAL__sub_I_touchgfx_init+0xec>)
          isFrontPorchEntered(false),
90002dec:	67d9      	str	r1, [r3, #124]	@ 0x7c
90002dee:	4918      	ldr	r1, [pc, #96]	@ (90002e50 <_GLOBAL__sub_I_touchgfx_init+0xf0>)
        : cc_consumed(0),
90002df0:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
90002df4:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          maxDrawingHeight(height / numberOfBlocks), // Best guess based on testing (but not ideal in all cases)
90002df8:	f8c3 0080 	str.w	r0, [r3, #128]	@ 0x80
          cc_in(0)
90002dfc:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
90002e00:	f8c3 1084 	str.w	r1, [r3, #132]	@ 0x84
          requestedOrientation(ORIENTATION_LANDSCAPE),
90002e04:	e9c3 241d 	strd	r2, r4, [r3, #116]	@ 0x74
}
90002e08:	bd70      	pop	{r4, r5, r6, pc}
90002e0a:	bf00      	nop
90002e0c:	2400616c 	.word	0x2400616c
90002e10:	9002a650 	.word	0x9002a650
90002e14:	24006f10 	.word	0x24006f10
90002e18:	240060e0 	.word	0x240060e0
90002e1c:	240060c4 	.word	0x240060c4
90002e20:	24006030 	.word	0x24006030
90002e24:	01000001 	.word	0x01000001
90002e28:	2402198c 	.word	0x2402198c
90002e2c:	24021980 	.word	0x24021980
90002e30:	24021986 	.word	0x24021986
90002e34:	24021982 	.word	0x24021982
90002e38:	24021988 	.word	0x24021988
90002e3c:	24021984 	.word	0x24021984
90002e40:	9002c2a8 	.word	0x9002c2a8
90002e44:	01010000 	.word	0x01010000
90002e48:	00440400 	.word	0x00440400
90002e4c:	00140016 	.word	0x00140016
90002e50:	9002a628 	.word	0x9002a628

90002e54 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
90002e54:	4801      	ldr	r0, [pc, #4]	@ (90002e5c <_GLOBAL__sub_D_touchgfx_init+0x8>)
90002e56:	f7ff badd 	b.w	90002414 <_ZN8STM32DMAD1Ev>
90002e5a:	bf00      	nop
90002e5c:	2400616c 	.word	0x2400616c

90002e60 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * drawn by the widget.
     */
    virtual void invalidateContent() const
    {
        // Consider checking if *this is in the draw chain
        if (visible)
90002e60:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002e64:	b112      	cbz	r2, 90002e6c <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
        {
            invalidate();
90002e66:	6803      	ldr	r3, [r0, #0]
90002e68:	695b      	ldr	r3, [r3, #20]
90002e6a:	4718      	bx	r3
        }
    }
90002e6c:	4770      	bx	lr
90002e6e:	bf00      	nop

90002e70 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
90002e70:	2000      	movs	r0, #0
90002e72:	4770      	bx	lr

90002e74 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
90002e74:	8081      	strh	r1, [r0, #4]
    }
90002e76:	4770      	bx	lr

90002e78 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
90002e78:	80c1      	strh	r1, [r0, #6]
    }
90002e7a:	4770      	bx	lr

90002e7c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
90002e7c:	8101      	strh	r1, [r0, #8]
    }
90002e7e:	4770      	bx	lr

90002e80 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
90002e80:	8141      	strh	r1, [r0, #10]
    }
90002e82:	4770      	bx	lr

90002e84 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
90002e84:	4770      	bx	lr
90002e86:	bf00      	nop

90002e88 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
90002e88:	4770      	bx	lr
90002e8a:	bf00      	nop

90002e8c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
90002e8c:	4770      	bx	lr
90002e8e:	bf00      	nop

90002e90 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
90002e90:	4770      	bx	lr
90002e92:	bf00      	nop

90002e94 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
90002e94:	4770      	bx	lr
90002e96:	bf00      	nop

90002e98 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
    {
        moveRelative(x - rect.x, y - rect.y);
90002e98:	f8b0 c006 	ldrh.w	ip, [r0, #6]
90002e9c:	6803      	ldr	r3, [r0, #0]
90002e9e:	eba2 020c 	sub.w	r2, r2, ip
90002ea2:	f8b0 c004 	ldrh.w	ip, [r0, #4]
90002ea6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90002ea8:	eba1 010c 	sub.w	r1, r1, ip
90002eac:	b212      	sxth	r2, r2
90002eae:	b209      	sxth	r1, r1
90002eb0:	4718      	bx	r3
90002eb2:	bf00      	nop

90002eb4 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
90002eb4:	6813      	ldr	r3, [r2, #0]
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002eb6:	f64f 7cff 	movw	ip, #65535	@ 0xffff
        cachedAbsX = UNCACHED_INDICATOR;
90002eba:	f04f 31ff 	mov.w	r1, #4294967295
        cachedVisibleRect.x = UNCACHED_INDICATOR;
90002ebe:	f8a0 c00c 	strh.w	ip, [r0, #12]
        nextDrawChainElement = *nextPreviousElement;
90002ec2:	e9c0 3107 	strd	r3, r1, [r0, #28]
        *nextPreviousElement = this;
90002ec6:	6010      	str	r0, [r2, #0]
    }
90002ec8:	4770      	bx	lr
90002eca:	bf00      	nop

90002ecc <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
90002ecc:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90002ed0:	b11a      	cbz	r2, 90002eda <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
90002ed2:	f890 2024 	ldrb.w	r2, [r0, #36]	@ 0x24
90002ed6:	b102      	cbz	r2, 90002eda <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
90002ed8:	6018      	str	r0, [r3, #0]
        }
    }
90002eda:	4770      	bx	lr

90002edc <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
90002edc:	2000      	movs	r0, #0
90002ede:	4770      	bx	lr

90002ee0 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @return True if the painter is ready to paint, false otherwise.
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
90002ee0:	4603      	mov	r3, r0
    {
        widgetWidth = widgetRect.width;
90002ee2:	888a      	ldrh	r2, [r1, #4]
        return true;
    }
90002ee4:	2001      	movs	r0, #1
        widgetWidth = widgetRect.width;
90002ee6:	809a      	strh	r2, [r3, #4]
    }
90002ee8:	4770      	bx	lr
90002eea:	bf00      	nop

90002eec <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
90002eec:	4770      	bx	lr
90002eee:	bf00      	nop

90002ef0 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
90002ef0:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
    }
90002ef4:	4770      	bx	lr
90002ef6:	bf00      	nop

90002ef8 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
90002ef8:	f890 0026 	ldrb.w	r0, [r0, #38]	@ 0x26
90002efc:	4770      	bx	lr
90002efe:	bf00      	nop

90002f00 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90002f00:	f04f 0c00 	mov.w	ip, #0
        return rect.width;
90002f04:	688a      	ldr	r2, [r1, #8]
90002f06:	f8c0 c000 	str.w	ip, [r0]
90002f0a:	6042      	str	r2, [r0, #4]
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
90002f0c:	4770      	bx	lr
90002f0e:	bf00      	nop

90002f10 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
90002f10:	2200      	movs	r2, #0
90002f12:	6002      	str	r2, [r0, #0]
90002f14:	6042      	str	r2, [r0, #4]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
90002f16:	4770      	bx	lr

90002f18 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
    }

    virtual Bitmap::BitmapFormat framebufferFormat() const
    {
        return Bitmap::RGB565;
    }
90002f18:	2000      	movs	r0, #0
90002f1a:	4770      	bx	lr

90002f1c <_ZN8touchgfx17CWRVectorRenderer7setModeENS_14VectorRenderer8DrawModeE>:
     *
     * @param mode The filling mode.
     */
    virtual void setMode(DrawMode mode)
    {
        drawMode = mode;
90002f1c:	7701      	strb	r1, [r0, #28]
    }
90002f1e:	4770      	bx	lr

90002f20 <_ZN8touchgfx17CWRVectorRenderer19setStrokeMiterLimitEf>:

    virtual void setStrokeMiterLimit(float miterLimit)
    {
        strokeMiterLimit = miterLimit;
90002f20:	ed80 0a08 	vstr	s0, [r0, #32]
    }
90002f24:	4770      	bx	lr
90002f26:	bf00      	nop

90002f28 <_ZN8touchgfx17CWRVectorRenderer17setStrokeLineJoinENS_16VGStrokeLineJoinE>:

    virtual void setStrokeLineJoin(VGStrokeLineJoin lineJoin)
    {
        strokeLineJoin = lineJoin;
90002f28:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
    }
90002f2c:	4770      	bx	lr
90002f2e:	bf00      	nop

90002f30 <_ZN8touchgfx17CWRVectorRenderer16setStrokeLineCapENS_15VGStrokeLineCapE>:

    virtual void setStrokeLineCap(VGStrokeLineCap lineCap)
    {
        strokeLineCap = lineCap;
90002f30:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
    }
90002f34:	4770      	bx	lr
90002f36:	bf00      	nop

90002f38 <_ZNK8touchgfx17CWRVectorRenderer17CanvasWidgetProxy16drawCanvasWidgetERKNS_4RectE>:
    class CanvasWidgetProxy : public CanvasWidget
    {
        virtual bool drawCanvasWidget(const Rect& invalidatedArea) const
        {
            return true;
        }
90002f38:	2001      	movs	r0, #1
90002f3a:	4770      	bx	lr

90002f3c <_ZN8touchgfx23CWRVectorRendererRGB56516getLinearPainterEv>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
{
    virtual AbstractPainterLinearGradient& getLinearPainter()
    {
        return linearPainter;
    }
90002f3c:	3098      	adds	r0, #152	@ 0x98
90002f3e:	4770      	bx	lr

90002f40 <_ZN8touchgfx23CWRVectorRendererRGB56520getColorPainterColorEv>:

    virtual AbstractPainterColor& getColorPainterColor()
    {
        return colorPainter;
    }
90002f40:	308c      	adds	r0, #140	@ 0x8c
90002f42:	4770      	bx	lr

90002f44 <_ZN8touchgfx23CWRVectorRendererRGB56515getColorPainterEv>:

    virtual AbstractPainter& getColorPainter()
    {
        return colorPainter;
    }
90002f44:	3084      	adds	r0, #132	@ 0x84
90002f46:	4770      	bx	lr

90002f48 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD1Ev>:
    class CanvasWidgetProxy : public CanvasWidget
90002f48:	4770      	bx	lr
90002f4a:	bf00      	nop

90002f4c <_ZN8touchgfx23CWRVectorRendererRGB565D1Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002f4c:	4770      	bx	lr
90002f4e:	bf00      	nop

90002f50 <__tcf_1>:

namespace touchgfx
{
VectorRenderer* VectorRenderer::getInstance()
{
    static CWRVectorRendererRGB565 renderer;
90002f50:	4770      	bx	lr
90002f52:	bf00      	nop

90002f54 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90002f54:	4b03      	ldr	r3, [pc, #12]	@ (90002f64 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
90002f56:	2290      	movs	r2, #144	@ 0x90
90002f58:	f883 235a 	strb.w	r2, [r3, #858]	@ 0x35a
90002f5c:	f883 2358 	strb.w	r2, [r3, #856]	@ 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
90002f60:	4770      	bx	lr
90002f62:	bf00      	nop
90002f64:	e000e100 	.word	0xe000e100

90002f68 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
90002f68:	4a09      	ldr	r2, [pc, #36]	@ (90002f90 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
90002f6a:	490a      	ldr	r1, [pc, #40]	@ (90002f94 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
90002f6c:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
90002f6e:	480a      	ldr	r0, [pc, #40]	@ (90002f98 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & LTDC_BPCR_AVBP_Msk) - 1;
90002f70:	f3c3 030a 	ubfx	r3, r3, #0, #11
90002f74:	3b01      	subs	r3, #1
90002f76:	b29b      	uxth	r3, r3
90002f78:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & LTDC_AWCR_AAH_Msk) - 1;
90002f7a:	6911      	ldr	r1, [r2, #16]
90002f7c:	f3c1 010a 	ubfx	r1, r1, #0, #11
90002f80:	3901      	subs	r1, #1
90002f82:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
90002f84:	6413      	str	r3, [r2, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
90002f86:	6b53      	ldr	r3, [r2, #52]	@ 0x34
90002f88:	f043 0301 	orr.w	r3, r3, #1
90002f8c:	6353      	str	r3, [r2, #52]	@ 0x34
}
90002f8e:	4770      	bx	lr
90002f90:	50001000 	.word	0x50001000
90002f94:	24007346 	.word	0x24007346
90002f98:	24007344 	.word	0x24007344

90002f9c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
90002f9c:	4b01      	ldr	r3, [pc, #4]	@ (90002fa4 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
90002f9e:	f8d3 00ac 	ldr.w	r0, [r3, #172]	@ 0xac
}
90002fa2:	4770      	bx	lr
90002fa4:	50001000 	.word	0x50001000

90002fa8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002fa8:	4b02      	ldr	r3, [pc, #8]	@ (90002fb4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002faa:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
90002fac:	f8c3 10ac 	str.w	r1, [r3, #172]	@ 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
90002fb0:	625a      	str	r2, [r3, #36]	@ 0x24
}
90002fb2:	4770      	bx	lr
90002fb4:	50001000 	.word	0x50001000

90002fb8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED1Ev>:
 * Strategy:
 * Decode directly into the framebuffer in draw.
 * Tick will decide if we are going to a new frame.
 */
template <uint32_t no_streams, touchgfx::Bitmap::BitmapFormat output_format>
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002fb8:	4770      	bx	lr
90002fba:	bf00      	nop

90002fbc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21unregisterVideoWidgetEm>:
        return handle;
    }

    virtual void unregisterVideoWidget(const Handle handle)
    {
        streams[handle].isActive = false;
90002fbc:	eb01 01c1 	add.w	r1, r1, r1, lsl #3
90002fc0:	2300      	movs	r3, #0
90002fc2:	eb00 0081 	add.w	r0, r0, r1, lsl #2
90002fc6:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
    }
90002fca:	4770      	bx	lr

90002fcc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE29setVideoFrameRateCompensationEb>:
        return stream.isPlaying;
    }

    virtual void setVideoFrameRateCompensation(const bool allow)
    {
        allowSkipFrames = allow;
90002fcc:	f880 102c 	strb.w	r1, [r0, #44]	@ 0x2c
    }
90002fd0:	4770      	bx	lr
90002fd2:	bf00      	nop

90002fd4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EED0Ev>:
class DirectFrameBufferVideoController : public touchgfx::VideoController
90002fd4:	b510      	push	{r4, lr}
90002fd6:	4604      	mov	r4, r0
90002fd8:	2130      	movs	r1, #48	@ 0x30
90002fda:	f025 ff4f 	bl	90028e7c <_ZdlPvj>
90002fde:	4620      	mov	r0, r4
90002fe0:	bd10      	pop	{r4, pc}
90002fe2:	bf00      	nop

90002fe4 <_ZN8touchgfx17CWRVectorRenderer17CanvasWidgetProxyD0Ev>:
    class CanvasWidgetProxy : public CanvasWidget
90002fe4:	b510      	push	{r4, lr}
90002fe6:	4604      	mov	r4, r0
90002fe8:	212c      	movs	r1, #44	@ 0x2c
90002fea:	f025 ff47 	bl	90028e7c <_ZdlPvj>
90002fee:	4620      	mov	r0, r4
90002ff0:	bd10      	pop	{r4, pc}
90002ff2:	bf00      	nop

90002ff4 <_ZN8touchgfx23CWRVectorRendererRGB565D0Ev>:
class CWRVectorRendererRGB565 : public CWRVectorRenderer
90002ff4:	b510      	push	{r4, lr}
90002ff6:	4604      	mov	r4, r0
90002ff8:	21bc      	movs	r1, #188	@ 0xbc
90002ffa:	f025 ff3f 	bl	90028e7c <_ZdlPvj>
90002ffe:	4620      	mov	r0, r4
90003000:	bd10      	pop	{r4, pc}
90003002:	bf00      	nop

90003004 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm>:
        assert(handle < no_streams);
90003004:	b911      	cbnz	r1, 9000300c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x8>
    }
90003006:	f890 0025 	ldrb.w	r0, [r0, #37]	@ 0x25
9000300a:	4770      	bx	lr
    virtual bool getIsPlaying(const Handle handle)
9000300c:	b508      	push	{r3, lr}
        assert(handle < no_streams);
9000300e:	4a03      	ldr	r2, [pc, #12]	@ (9000301c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x18>)
90003010:	f44f 7192 	mov.w	r1, #292	@ 0x124
90003014:	4b02      	ldr	r3, [pc, #8]	@ (90003020 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x1c>)
90003016:	4803      	ldr	r0, [pc, #12]	@ (90003024 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12getIsPlayingEm+0x20>)
90003018:	f026 faa6 	bl	90029568 <__assert_func>
9000301c:	9002ad40 	.word	0x9002ad40
90003020:	9002ad2c 	.word	0x9002ad2c
90003024:	9002ae5c 	.word	0x9002ae5c

90003028 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE>:
        assert(handle < no_streams);
90003028:	b921      	cbnz	r1, 90003034 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0xc>
        mjpegDecoders[handle]->getVideoInfo(data);
9000302a:	6840      	ldr	r0, [r0, #4]
9000302c:	4611      	mov	r1, r2
9000302e:	6803      	ldr	r3, [r0, #0]
90003030:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90003032:	4718      	bx	r3
        assert(handle < no_streams);
90003034:	4b03      	ldr	r3, [pc, #12]	@ (90003044 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x1c>)
90003036:	f44f 718f 	mov.w	r1, #286	@ 0x11e
9000303a:	4a03      	ldr	r2, [pc, #12]	@ (90003048 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x20>)
9000303c:	4803      	ldr	r0, [pc, #12]	@ (9000304c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19getVideoInformationEmPNS0_16VideoInformationE+0x24>)
    virtual void getVideoInformation(const Handle handle, touchgfx::VideoInformation* data)
9000303e:	b510      	push	{r4, lr}
        assert(handle < no_streams);
90003040:	f026 fa92 	bl	90029568 <__assert_func>
90003044:	9002ad2c 	.word	0x9002ad2c
90003048:	9002aea4 	.word	0x9002aea4
9000304c:	9002ae5c 	.word	0x9002ae5c

90003050 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm>:
        assert(handle < no_streams);
90003050:	b909      	cbnz	r1, 90003056 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x6>
    }
90003052:	68c0      	ldr	r0, [r0, #12]
90003054:	4770      	bx	lr
    virtual uint32_t getCurrentFrameNumber(const Handle handle)
90003056:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90003058:	4a03      	ldr	r2, [pc, #12]	@ (90003068 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x18>)
9000305a:	f44f 718b 	mov.w	r1, #278	@ 0x116
9000305e:	4b03      	ldr	r3, [pc, #12]	@ (9000306c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x1c>)
90003060:	4803      	ldr	r0, [pc, #12]	@ (90003070 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE21getCurrentFrameNumberEm+0x20>)
90003062:	f026 fa81 	bl	90029568 <__assert_func>
90003066:	bf00      	nop
90003068:	9002afe4 	.word	0x9002afe4
9000306c:	9002ad2c 	.word	0x9002ad2c
90003070:	9002ae5c 	.word	0x9002ae5c

90003074 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm>:
        assert(handle < no_streams);
90003074:	b921      	cbnz	r1, 90003080 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0xc>
        stream.frameCount = 0;
90003076:	6081      	str	r1, [r0, #8]
        stream.tickCount = 0;
90003078:	6101      	str	r1, [r0, #16]
        stream.frame_rate_video = video_frames;
9000307a:	e9c0 3205 	strd	r3, r2, [r0, #20]
9000307e:	4770      	bx	lr
    virtual void setFrameRate(const Handle handle, uint32_t ui_frames, uint32_t video_frames)
90003080:	b508      	push	{r3, lr}
        assert(handle < no_streams);
90003082:	4a03      	ldr	r2, [pc, #12]	@ (90003090 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x1c>)
90003084:	2141      	movs	r1, #65	@ 0x41
90003086:	4b03      	ldr	r3, [pc, #12]	@ (90003094 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x20>)
90003088:	4803      	ldr	r0, [pc, #12]	@ (90003098 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setFrameRateEmmm+0x24>)
9000308a:	f026 fa6d 	bl	90029568 <__assert_func>
9000308e:	bf00      	nop
90003090:	9002b12c 	.word	0x9002b12c
90003094:	9002ad2c 	.word	0x9002ad2c
90003098:	9002ae5c 	.word	0x9002ae5c

9000309c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE>:
    virtual Handle registerVideoWidget(touchgfx::VideoWidget& widget)
9000309c:	b508      	push	{r3, lr}
9000309e:	4603      	mov	r3, r0

    Handle getFreeHandle()
    {
        for (uint32_t i = 0; i < no_streams; i++)
        {
            if (streams[i].isActive == false)
900030a0:	f890 0024 	ldrb.w	r0, [r0, #36]	@ 0x24
900030a4:	b940      	cbnz	r0, 900030b8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x1c>
        streams[handle].isActive = true;
900030a6:	2201      	movs	r2, #1
900030a8:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
     * @param width  Width of the videoBuffer in pixels
     * @param height Height of the videoBuffer in pixels
     */
    void setVideoBufferFormat(Bitmap::BitmapFormat bufferFormat, int16_t width, int16_t height)
    {
        format = bufferFormat;
900030ac:	f881 0034 	strb.w	r0, [r1, #52]	@ 0x34
        bufferWidth = width;
900030b0:	f8c1 0036 	str.w	r0, [r1, #54]	@ 0x36
        buffer = videoBuffer;
900030b4:	6308      	str	r0, [r1, #48]	@ 0x30
    }
900030b6:	bd08      	pop	{r3, pc}
            {
                return static_cast<VideoController::Handle>(i);
            }
        }

        assert(0 && "Unable to find free video stream handle!");
900030b8:	4b03      	ldr	r3, [pc, #12]	@ (900030c8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x2c>)
900030ba:	f240 116d 	movw	r1, #365	@ 0x16d
900030be:	4a03      	ldr	r2, [pc, #12]	@ (900030cc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x30>)
900030c0:	4803      	ldr	r0, [pc, #12]	@ (900030d0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE19registerVideoWidgetERNS0_11VideoWidgetE+0x34>)
900030c2:	f026 fa51 	bl	90029568 <__assert_func>
900030c6:	bf00      	nop
900030c8:	9002b278 	.word	0x9002b278
900030cc:	9002b2a8 	.word	0x9002b2a8
900030d0:	9002ae5c 	.word	0x9002ae5c

900030d4 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
900030d4:	f00d b9ac 	b.w	90010430 <_ZN8touchgfx3HAL10beginFrameEv>

900030d8 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    HAL::endFrame();
900030d8:	f00d b9b6 	b.w	90010448 <_ZN8touchgfx3HAL8endFrameEv>

900030dc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
900030dc:	f00d b972 	b.w	900103c4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

900030e0 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
900030e0:	f00d bae1 	b.w	900106a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

900030e4 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:
    // Because DMA2D access main memory directly, the DCache must be invalidated
    // becuase it could hold a wrong image of the framebuffer. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable
    // "CPU Cache" in the "System Core" settings for "Cortex M7" in CubeMX
    // in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
900030e4:	4814      	ldr	r0, [pc, #80]	@ (90003138 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x54>)
900030e6:	6943      	ldr	r3, [r0, #20]
900030e8:	03d9      	lsls	r1, r3, #15
900030ea:	d523      	bpl.n	90003134 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x50>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
900030ec:	2300      	movs	r3, #0
{
900030ee:	b510      	push	{r4, lr}
900030f0:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
900030f4:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
900030f8:	f8d0 3080 	ldr.w	r3, [r0, #128]	@ 0x80
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
900030fc:	f643 74e0 	movw	r4, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
90003100:	f3c3 3c4e 	ubfx	ip, r3, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003104:	f3c3 0ec9 	ubfx	lr, r3, #3, #10
90003108:	ea4f 1c4c 	mov.w	ip, ip, lsl #5
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
9000310c:	ea0c 0104 	and.w	r1, ip, r4
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003110:	4673      	mov	r3, lr
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90003112:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
90003116:	3b01      	subs	r3, #1
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
90003118:	f8c0 2274 	str.w	r2, [r0, #628]	@ 0x274
      } while (ways-- != 0U);
9000311c:	1c5a      	adds	r2, r3, #1
9000311e:	d1f8      	bne.n	90003112 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x2e>
    } while(sets-- != 0U);
90003120:	f1ac 0c20 	sub.w	ip, ip, #32
90003124:	f11c 0f20 	cmn.w	ip, #32
90003128:	d1f0      	bne.n	9000310c <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x28>
9000312a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000312e:	f3bf 8f6f 	isb	sy
    {
        SCB_CleanInvalidateDCache();
    }
}
90003132:	bd10      	pop	{r4, pc}
90003134:	4770      	bx	lr
90003136:	bf00      	nop
90003138:	e000ed00 	.word	0xe000ed00

9000313c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE>:
    virtual void draw(const Handle handle, const touchgfx::Rect& invalidatedArea, const touchgfx::VideoWidget& widget)
9000313c:	b5f0      	push	{r4, r5, r6, r7, lr}
9000313e:	b083      	sub	sp, #12
        assert(handle < no_streams);
90003140:	bb59      	cbnz	r1, 9000319a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x5e>
90003142:	4604      	mov	r4, r0
        if (mjpegDecoders[handle]->hasVideo())
90003144:	6840      	ldr	r0, [r0, #4]
90003146:	461d      	mov	r5, r3
90003148:	4616      	mov	r6, r2
9000314a:	6803      	ldr	r3, [r0, #0]
9000314c:	691b      	ldr	r3, [r3, #16]
9000314e:	4798      	blx	r3
90003150:	b908      	cbnz	r0, 90003156 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x1a>
    }
90003152:	b003      	add	sp, #12
90003154:	bdf0      	pop	{r4, r5, r6, r7, pc}
        return instance;
90003156:	4f14      	ldr	r7, [pc, #80]	@ (900031a8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x6c>)
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
90003158:	2101      	movs	r1, #1
9000315a:	6838      	ldr	r0, [r7, #0]
9000315c:	f00d ff78 	bl	90011050 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
            touchgfx::Rect absolute = widget.getAbsoluteRect();
90003160:	4629      	mov	r1, r5
            uint8_t* wbuf = (uint8_t*)touchgfx::HAL::getInstance()->lockFrameBufferForRenderingMethod(touchgfx::HAL::HARDWARE);
90003162:	4605      	mov	r5, r0
            touchgfx::Rect absolute = widget.getAbsoluteRect();
90003164:	4668      	mov	r0, sp
90003166:	f014 fab7 	bl	900176d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
            DisplayTransformation::transformDisplayToFrameBuffer(absolute);
9000316a:	4668      	mov	r0, sp
9000316c:	f012 fe7c 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
90003170:	4b0e      	ldr	r3, [pc, #56]	@ (900031ac <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x70>)
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
90003172:	6860      	ldr	r0, [r4, #4]
90003174:	4631      	mov	r1, r6
                wbuf += (absolute.x + absolute.y * touchgfx::HAL::FRAME_BUFFER_WIDTH) * 2;
90003176:	f9bd 4002 	ldrsh.w	r4, [sp, #2]
9000317a:	881b      	ldrh	r3, [r3, #0]
9000317c:	f9bd 2000 	ldrsh.w	r2, [sp]
90003180:	fb03 2204 	mla	r2, r3, r4, r2
            mjpegDecoders[handle]->decodeFrame(invalidatedArea, wbuf, touchgfx::HAL::FRAME_BUFFER_WIDTH);
90003184:	6804      	ldr	r4, [r0, #0]
90003186:	eb05 0242 	add.w	r2, r5, r2, lsl #1
9000318a:	69e4      	ldr	r4, [r4, #28]
9000318c:	47a0      	blx	r4
9000318e:	6838      	ldr	r0, [r7, #0]
            touchgfx::HAL::getInstance()->unlockFrameBuffer();
90003190:	6803      	ldr	r3, [r0, #0]
90003192:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90003194:	4798      	blx	r3
    }
90003196:	b003      	add	sp, #12
90003198:	bdf0      	pop	{r4, r5, r6, r7, pc}
        assert(handle < no_streams);
9000319a:	4b05      	ldr	r3, [pc, #20]	@ (900031b0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x74>)
9000319c:	21ea      	movs	r1, #234	@ 0xea
9000319e:	4a05      	ldr	r2, [pc, #20]	@ (900031b4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x78>)
900031a0:	4805      	ldr	r0, [pc, #20]	@ (900031b8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE4drawEmRKNS0_4RectERKNS0_11VideoWidgetE+0x7c>)
900031a2:	f026 f9e1 	bl	90029568 <__assert_func>
900031a6:	bf00      	nop
900031a8:	2402198c 	.word	0x2402198c
900031ac:	24021986 	.word	0x24021986
900031b0:	9002ad2c 	.word	0x9002ad2c
900031b4:	9002b3c0 	.word	0x9002b3c0
900031b8:	9002ae5c 	.word	0x9002ae5c

900031bc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900031bc:	4b08      	ldr	r3, [pc, #32]	@ (900031e0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
900031be:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900031c2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900031c6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900031ca:	f3bf 8f6f 	isb	sy
900031ce:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
900031d2:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  __ASM volatile ("dsb 0xF":::"memory");
900031d6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
900031da:	f3bf 8f6f 	isb	sy
}
900031de:	4770      	bx	lr
900031e0:	e000e100 	.word	0xe000e100

900031e4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
900031e4:	4b03      	ldr	r3, [pc, #12]	@ (900031f4 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
900031e6:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
900031ea:	609a      	str	r2, [r3, #8]
900031ec:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
900031f0:	609a      	str	r2, [r3, #8]
}
900031f2:	4770      	bx	lr
900031f4:	e000e100 	.word	0xe000e100

900031f8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE>:
    virtual bool updateFrame(const Handle handle, touchgfx::VideoWidget& widget)
900031f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        assert(handle < no_streams);
900031fc:	2900      	cmp	r1, #0
900031fe:	f040 8096 	bne.w	9000332e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x136>
        if (stream.isPlaying || stream.isShowingOneFrame)
90003202:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
90003206:	4604      	mov	r4, r0
90003208:	b933      	cbnz	r3, 90003218 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
9000320a:	f890 3026 	ldrb.w	r3, [r0, #38]	@ 0x26
9000320e:	b91b      	cbnz	r3, 90003218 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x20>
        bool hasMoreFrames = true;
90003210:	2501      	movs	r5, #1
    }
90003212:	4628      	mov	r0, r5
90003214:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        return vSyncForFrame;
90003218:	4b48      	ldr	r3, [pc, #288]	@ (9000333c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x144>)
            stream.isShowingOneFrame = false;
9000321a:	2700      	movs	r7, #0
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
9000321c:	6921      	ldr	r1, [r4, #16]
9000321e:	681b      	ldr	r3, [r3, #0]
90003220:	f893 306b 	ldrb.w	r3, [r3, #107]	@ 0x6b
            stream.isShowingOneFrame = false;
90003224:	f884 7026 	strb.w	r7, [r4, #38]	@ 0x26
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
90003228:	440b      	add	r3, r1
            if (stream.doDecodeNextFrame)
9000322a:	f894 1028 	ldrb.w	r1, [r4, #40]	@ 0x28
            stream.tickCount += HAL::getInstance()->getLCDRefreshCount();
9000322e:	6123      	str	r3, [r4, #16]
            if (stream.doDecodeNextFrame)
90003230:	b979      	cbnz	r1, 90003252 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x5a>
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
90003232:	68a2      	ldr	r2, [r4, #8]
        bool hasMoreFrames = true;
90003234:	2501      	movs	r5, #1
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
90003236:	6961      	ldr	r1, [r4, #20]
90003238:	fb01 f303 	mul.w	r3, r1, r3
9000323c:	69a1      	ldr	r1, [r4, #24]
9000323e:	fb01 f202 	mul.w	r2, r1, r2
90003242:	4293      	cmp	r3, r2
90003244:	d824      	bhi.n	90003290 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x98>
        return false;
90003246:	2300      	movs	r3, #0
    }
90003248:	4628      	mov	r0, r5
            stream.doDecodeNextFrame = decodeForNextTick(stream);
9000324a:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
    }
9000324e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
                widget.invalidate();
90003252:	6813      	ldr	r3, [r2, #0]
90003254:	4610      	mov	r0, r2
                MJPEGDecoder* const decoder = mjpegDecoders[handle];
90003256:	6866      	ldr	r6, [r4, #4]
                widget.invalidate();
90003258:	695b      	ldr	r3, [r3, #20]
9000325a:	4798      	blx	r3
                if (stream.seek_to_frame > 0)
9000325c:	69e1      	ldr	r1, [r4, #28]
9000325e:	bb21      	cbnz	r1, 900032aa <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xb2>
                    if (stream.skip_frames > 0)
90003260:	6a23      	ldr	r3, [r4, #32]
90003262:	2b00      	cmp	r3, #0
90003264:	d142      	bne.n	900032ec <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xf4>
90003266:	4f36      	ldr	r7, [pc, #216]	@ (90003340 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                    if (stream.repeat)
90003268:	f894 5027 	ldrb.w	r5, [r4, #39]	@ 0x27
                        hasMoreFrames = decoder->gotoNextFrame();
9000326c:	6833      	ldr	r3, [r6, #0]
                    if (stream.repeat)
9000326e:	2d00      	cmp	r5, #0
90003270:	d02c      	beq.n	900032cc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xd4>
                        hasMoreFrames = decoder->gotoNextFrame();
90003272:	699b      	ldr	r3, [r3, #24]
90003274:	4630      	mov	r0, r6
90003276:	4798      	blx	r3
90003278:	4605      	mov	r5, r0
                stream.frameNumber = decoder->getCurrentFrameNumber();
9000327a:	6833      	ldr	r3, [r6, #0]
9000327c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000327e:	42bb      	cmp	r3, r7
90003280:	d145      	bne.n	9000330e <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x116>
        return frameNumber;
90003282:	6970      	ldr	r0, [r6, #20]
                stream.frameCount++;
90003284:	68a2      	ldr	r2, [r4, #8]
        if ((stream.tickCount * stream.frame_rate_video) > (stream.frame_rate_ticks * stream.frameCount))
90003286:	6923      	ldr	r3, [r4, #16]
                stream.frameCount++;
90003288:	3201      	adds	r2, #1
                stream.frameNumber = decoder->getCurrentFrameNumber();
9000328a:	60e0      	str	r0, [r4, #12]
                stream.frameCount++;
9000328c:	60a2      	str	r2, [r4, #8]
9000328e:	e7d2      	b.n	90003236 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x3e>
            if (allowSkipFrames)
90003290:	f894 002c 	ldrb.w	r0, [r4, #44]	@ 0x2c
90003294:	b138      	cbz	r0, 900032a6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xae>
                stream.skip_frames = (stream.tickCount * stream.frame_rate_video - stream.frame_rate_ticks * stream.frameCount) / stream.frame_rate_ticks;
90003296:	1a9b      	subs	r3, r3, r2
90003298:	fbb3 f2f1 	udiv	r2, r3, r1
                if (stream.skip_frames > 0)
9000329c:	4299      	cmp	r1, r3
                    stream.skip_frames--;
9000329e:	bf98      	it	ls
900032a0:	f102 32ff 	addls.w	r2, r2, #4294967295
900032a4:	6222      	str	r2, [r4, #32]
            return true;
900032a6:	2301      	movs	r3, #1
900032a8:	e7ce      	b.n	90003248 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x50>
                    decoder->gotoFrame(stream.seek_to_frame);
900032aa:	6833      	ldr	r3, [r6, #0]
900032ac:	4630      	mov	r0, r6
900032ae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900032b0:	4798      	blx	r3
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
900032b2:	6833      	ldr	r3, [r6, #0]
900032b4:	69e5      	ldr	r5, [r4, #28]
900032b6:	4630      	mov	r0, r6
900032b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900032ba:	4798      	blx	r3
900032bc:	4285      	cmp	r5, r0
                    stream.seek_to_frame = 0;
900032be:	61e7      	str	r7, [r4, #28]
                    hasMoreFrames = (stream.seek_to_frame < decoder->getNumberOfFrames());
900032c0:	bf28      	it	cs
900032c2:	2500      	movcs	r5, #0
900032c4:	4f1e      	ldr	r7, [pc, #120]	@ (90003340 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
900032c6:	bf38      	it	cc
900032c8:	2501      	movcc	r5, #1
900032ca:	e7d6      	b.n	9000327a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
900032cc:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
900032ce:	42ba      	cmp	r2, r7
900032d0:	d124      	bne.n	9000331c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x124>
900032d2:	f8d6 8014 	ldr.w	r8, [r6, #20]
900032d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900032d8:	4630      	mov	r0, r6
900032da:	4798      	blx	r3
900032dc:	4580      	cmp	r8, r0
900032de:	d219      	bcs.n	90003314 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x11c>
                            hasMoreFrames = decoder->gotoNextFrame();
900032e0:	6833      	ldr	r3, [r6, #0]
900032e2:	4630      	mov	r0, r6
900032e4:	699b      	ldr	r3, [r3, #24]
900032e6:	4798      	blx	r3
900032e8:	4605      	mov	r5, r0
900032ea:	e7c6      	b.n	9000327a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                    decoder->gotoFrame(stream.seek_to_frame);
900032ec:	6832      	ldr	r2, [r6, #0]
900032ee:	4f14      	ldr	r7, [pc, #80]	@ (90003340 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x148>)
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
900032f0:	e9d2 5209 	ldrd	r5, r2, [r2, #36]	@ 0x24
900032f4:	42ba      	cmp	r2, r7
900032f6:	d116      	bne.n	90003326 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x12e>
900032f8:	6970      	ldr	r0, [r6, #20]
900032fa:	18c1      	adds	r1, r0, r3
900032fc:	4630      	mov	r0, r6
900032fe:	47a8      	blx	r5
                        stream.frameCount += stream.skip_frames;
90003300:	6a22      	ldr	r2, [r4, #32]
90003302:	68a3      	ldr	r3, [r4, #8]
90003304:	4413      	add	r3, r2
                        stream.skip_frames = 0;
90003306:	2200      	movs	r2, #0
                        stream.frameCount += stream.skip_frames;
90003308:	60a3      	str	r3, [r4, #8]
                        stream.skip_frames = 0;
9000330a:	6222      	str	r2, [r4, #32]
9000330c:	e7ac      	b.n	90003268 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x70>
                stream.frameNumber = decoder->getCurrentFrameNumber();
9000330e:	4630      	mov	r0, r6
90003310:	4798      	blx	r3
90003312:	e7b7      	b.n	90003284 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x8c>
                            stream.isPlaying = false;
90003314:	2300      	movs	r3, #0
90003316:	f884 3025 	strb.w	r3, [r4, #37]	@ 0x25
9000331a:	e7ae      	b.n	9000327a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x82>
                        if (decoder->getCurrentFrameNumber() < decoder->getNumberOfFrames())
9000331c:	4630      	mov	r0, r6
9000331e:	4790      	blx	r2
90003320:	6833      	ldr	r3, [r6, #0]
90003322:	4680      	mov	r8, r0
90003324:	e7d7      	b.n	900032d6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0xde>
                        decoder->gotoFrame(decoder->getCurrentFrameNumber() + stream.skip_frames);
90003326:	4630      	mov	r0, r6
90003328:	4790      	blx	r2
9000332a:	6a23      	ldr	r3, [r4, #32]
9000332c:	e7e5      	b.n	900032fa <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x102>
        assert(handle < no_streams);
9000332e:	4b05      	ldr	r3, [pc, #20]	@ (90003344 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x14c>)
90003330:	21aa      	movs	r1, #170	@ 0xaa
90003332:	4a05      	ldr	r2, [pc, #20]	@ (90003348 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x150>)
90003334:	4805      	ldr	r0, [pc, #20]	@ (9000334c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE11updateFrameEmRNS0_11VideoWidgetE+0x154>)
90003336:	f026 f917 	bl	90029568 <__assert_func>
9000333a:	bf00      	nop
9000333c:	2402198c 	.word	0x2402198c
90003340:	90001065 	.word	0x90001065
90003344:	9002ad2c 	.word	0x9002ad2c
90003348:	9002b508 	.word	0x9002b508
9000334c:	9002ae5c 	.word	0x9002ae5c

90003350 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm>:
    virtual void setVideoData(const Handle handle, const uint8_t* movie, const uint32_t length)
90003350:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
90003352:	bb11      	cbnz	r1, 9000339a <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x4a>
90003354:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(movie, length);
90003356:	6840      	ldr	r0, [r0, #4]
90003358:	4611      	mov	r1, r2
9000335a:	461a      	mov	r2, r3
9000335c:	6803      	ldr	r3, [r0, #0]
9000335e:	689b      	ldr	r3, [r3, #8]
90003360:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003362:	6860      	ldr	r0, [r4, #4]
90003364:	4a10      	ldr	r2, [pc, #64]	@ (900033a8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x58>)
90003366:	6803      	ldr	r3, [r0, #0]
90003368:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000336a:	4293      	cmp	r3, r2
9000336c:	d10c      	bne.n	90003388 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x38>
9000336e:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
90003370:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
90003372:	2300      	movs	r3, #0
90003374:	4a0d      	ldr	r2, [pc, #52]	@ (900033ac <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x5c>)
        setCommand(handle, PAUSE, 0);
90003376:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003378:	60e0      	str	r0, [r4, #12]
9000337a:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
9000337c:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
90003380:	d104      	bne.n	9000338c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x3c>
            stream.isPlaying = false;
90003382:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
90003386:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
90003388:	4798      	blx	r3
9000338a:	e7f1      	b.n	90003370 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x20>
        setCommand(handle, PAUSE, 0);
9000338c:	4620      	mov	r0, r4
9000338e:	46ac      	mov	ip, r5
90003390:	2201      	movs	r2, #1
90003392:	4619      	mov	r1, r3
    }
90003394:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
90003398:	4760      	bx	ip
        assert(handle < no_streams);
9000339a:	4b05      	ldr	r3, [pc, #20]	@ (900033b0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x60>)
9000339c:	214f      	movs	r1, #79	@ 0x4f
9000339e:	4a05      	ldr	r2, [pc, #20]	@ (900033b4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x64>)
900033a0:	4805      	ldr	r0, [pc, #20]	@ (900033b8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmPKhm+0x68>)
900033a2:	f026 f8e1 	bl	90029568 <__assert_func>
900033a6:	bf00      	nop
900033a8:	90001065 	.word	0x90001065
900033ac:	90003425 	.word	0x90003425
900033b0:	9002ad2c 	.word	0x9002ad2c
900033b4:	9002b63c 	.word	0x9002b63c
900033b8:	9002ae5c 	.word	0x9002ae5c

900033bc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE>:
    virtual void setVideoData(const Handle handle, touchgfx::VideoDataReader& reader)
900033bc:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
900033be:	bb09      	cbnz	r1, 90003404 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x48>
900033c0:	4604      	mov	r4, r0
        mjpegDecoders[handle]->setVideoData(reader);
900033c2:	6840      	ldr	r0, [r0, #4]
900033c4:	4611      	mov	r1, r2
900033c6:	6803      	ldr	r3, [r0, #0]
900033c8:	68db      	ldr	r3, [r3, #12]
900033ca:	4798      	blx	r3
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900033cc:	6860      	ldr	r0, [r4, #4]
900033ce:	4a10      	ldr	r2, [pc, #64]	@ (90003410 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x54>)
900033d0:	6803      	ldr	r3, [r0, #0]
900033d2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900033d4:	4293      	cmp	r3, r2
900033d6:	d10c      	bne.n	900033f2 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x36>
900033d8:	6940      	ldr	r0, [r0, #20]
        setCommand(handle, PAUSE, 0);
900033da:	6821      	ldr	r1, [r4, #0]
        stream.doDecodeNextFrame = false;
900033dc:	2300      	movs	r3, #0
900033de:	4a0d      	ldr	r2, [pc, #52]	@ (90003414 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x58>)
        setCommand(handle, PAUSE, 0);
900033e0:	6a4d      	ldr	r5, [r1, #36]	@ 0x24
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900033e2:	60e0      	str	r0, [r4, #12]
900033e4:	4295      	cmp	r5, r2
        stream.doDecodeNextFrame = false;
900033e6:	f884 3028 	strb.w	r3, [r4, #40]	@ 0x28
900033ea:	d104      	bne.n	900033f6 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x3a>
            stream.isPlaying = false;
900033ec:	f8a4 3025 	strh.w	r3, [r4, #37]	@ 0x25
    }
900033f0:	bd70      	pop	{r4, r5, r6, pc}
        stream.frameNumber = mjpegDecoders[handle]->getCurrentFrameNumber();
900033f2:	4798      	blx	r3
900033f4:	e7f1      	b.n	900033da <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x1e>
        setCommand(handle, PAUSE, 0);
900033f6:	4620      	mov	r0, r4
900033f8:	46ac      	mov	ip, r5
900033fa:	2201      	movs	r2, #1
900033fc:	4619      	mov	r1, r3
    }
900033fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setCommand(handle, PAUSE, 0);
90003402:	4760      	bx	ip
        assert(handle < no_streams);
90003404:	4b04      	ldr	r3, [pc, #16]	@ (90003418 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x5c>)
90003406:	215f      	movs	r1, #95	@ 0x5f
90003408:	4a04      	ldr	r2, [pc, #16]	@ (9000341c <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x60>)
9000340a:	4805      	ldr	r0, [pc, #20]	@ (90003420 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE12setVideoDataEmRNS0_15VideoDataReaderE+0x64>)
9000340c:	f026 f8ac 	bl	90029568 <__assert_func>
90003410:	90001065 	.word	0x90001065
90003414:	90003425 	.word	0x90003425
90003418:	9002ad2c 	.word	0x9002ad2c
9000341c:	9002b7a8 	.word	0x9002b7a8
90003420:	9002ae5c 	.word	0x9002ae5c

90003424 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm>:
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90003424:	b570      	push	{r4, r5, r6, lr}
        assert(handle < no_streams);
90003426:	2900      	cmp	r1, #0
90003428:	d14f      	bne.n	900034ca <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xa6>
9000342a:	4604      	mov	r4, r0
        switch (cmd)
9000342c:	2a05      	cmp	r2, #5
9000342e:	d80b      	bhi.n	90003448 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
90003430:	e8df f002 	tbb	[pc, r2]
90003434:	3c373311 	.word	0x3c373311
90003438:	0b03      	.short	0x0b03
            stream.isPlaying = false;
9000343a:	2300      	movs	r3, #0
            stream.seek_to_frame = 1;
9000343c:	2201      	movs	r2, #1
            stream.isPlaying = false;
9000343e:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
            stream.seek_to_frame = 1;
90003442:	61c2      	str	r2, [r0, #28]
            stream.frameCount = 0;
90003444:	6083      	str	r3, [r0, #8]
            stream.tickCount = 0;
90003446:	6103      	str	r3, [r0, #16]
    }
90003448:	bd70      	pop	{r4, r5, r6, pc}
            stream.repeat = (param > 0);
9000344a:	3b00      	subs	r3, #0
9000344c:	bf18      	it	ne
9000344e:	2301      	movne	r3, #1
90003450:	f880 3027 	strb.w	r3, [r0, #39]	@ 0x27
    }
90003454:	bd70      	pop	{r4, r5, r6, pc}
            if (mjpegDecoders[handle]->hasVideo())
90003456:	6840      	ldr	r0, [r0, #4]
90003458:	6803      	ldr	r3, [r0, #0]
9000345a:	691b      	ldr	r3, [r3, #16]
9000345c:	4798      	blx	r3
9000345e:	2800      	cmp	r0, #0
90003460:	d0f2      	beq.n	90003448 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                stream.frameCount = 0;
90003462:	2300      	movs	r3, #0
                stream.isPlaying = true;
90003464:	2101      	movs	r1, #1
                if (!stream.repeat)
90003466:	f894 2027 	ldrb.w	r2, [r4, #39]	@ 0x27
                stream.isPlaying = true;
9000346a:	f8a4 1025 	strh.w	r1, [r4, #37]	@ 0x25
                stream.frameCount = 0;
9000346e:	60a3      	str	r3, [r4, #8]
                stream.tickCount = 0;
90003470:	6123      	str	r3, [r4, #16]
                if (!stream.repeat)
90003472:	2a00      	cmp	r2, #0
90003474:	d1e8      	bne.n	90003448 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
90003476:	6864      	ldr	r4, [r4, #4]
    virtual void setCommand(const Handle handle, Command cmd, uint32_t param)
90003478:	4917      	ldr	r1, [pc, #92]	@ (900034d8 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb4>)
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
9000347a:	6823      	ldr	r3, [r4, #0]
9000347c:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9000347e:	428a      	cmp	r2, r1
90003480:	d11e      	bne.n	900034c0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x9c>
90003482:	6965      	ldr	r5, [r4, #20]
90003484:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90003486:	4620      	mov	r0, r4
90003488:	4798      	blx	r3
9000348a:	4285      	cmp	r5, r0
9000348c:	d1dc      	bne.n	90003448 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x24>
                        decoder->gotoNextFrame();
9000348e:	6823      	ldr	r3, [r4, #0]
90003490:	4620      	mov	r0, r4
90003492:	699b      	ldr	r3, [r3, #24]
    }
90003494:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
                        decoder->gotoNextFrame();
90003498:	4718      	bx	r3
            stream.isPlaying = false;
9000349a:	2300      	movs	r3, #0
9000349c:	f8a0 3025 	strh.w	r3, [r0, #37]	@ 0x25
    }
900034a0:	bd70      	pop	{r4, r5, r6, pc}
            stream.frameCount = 0;
900034a2:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
900034a4:	61c3      	str	r3, [r0, #28]
            stream.frameCount = 0;
900034a6:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
900034a8:	6102      	str	r2, [r0, #16]
    }
900034aa:	bd70      	pop	{r4, r5, r6, pc}
            stream.isShowingOneFrame = true;
900034ac:	2101      	movs	r1, #1
            stream.frameCount = 0;
900034ae:	2200      	movs	r2, #0
            stream.seek_to_frame = param;
900034b0:	61c3      	str	r3, [r0, #28]
            stream.isShowingOneFrame = true;
900034b2:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
            stream.doDecodeNextFrame = true;
900034b6:	f880 1028 	strb.w	r1, [r0, #40]	@ 0x28
            stream.frameCount = 0;
900034ba:	6082      	str	r2, [r0, #8]
            stream.tickCount = 0;
900034bc:	6102      	str	r2, [r0, #16]
    }
900034be:	bd70      	pop	{r4, r5, r6, pc}
                    if (decoder->getCurrentFrameNumber() == decoder->getNumberOfFrames())
900034c0:	4620      	mov	r0, r4
900034c2:	4790      	blx	r2
900034c4:	6823      	ldr	r3, [r4, #0]
900034c6:	4605      	mov	r5, r0
900034c8:	e7dc      	b.n	90003484 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0x60>
        assert(handle < no_streams);
900034ca:	4b04      	ldr	r3, [pc, #16]	@ (900034dc <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xb8>)
900034cc:	216f      	movs	r1, #111	@ 0x6f
900034ce:	4a04      	ldr	r2, [pc, #16]	@ (900034e0 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xbc>)
900034d0:	4804      	ldr	r0, [pc, #16]	@ (900034e4 <_ZN32DirectFrameBufferVideoControllerILm1ELN8touchgfx6Bitmap12BitmapFormatE0EE10setCommandEmNS0_15VideoController7CommandEm+0xc0>)
900034d2:	f026 f849 	bl	90029568 <__assert_func>
900034d6:	bf00      	nop
900034d8:	90001065 	.word	0x90001065
900034dc:	9002ad2c 	.word	0x9002ad2c
900034e0:	9002b8e0 	.word	0x9002b8e0
900034e4:	9002ae5c 	.word	0x9002ae5c

900034e8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
900034e8:	b538      	push	{r3, r4, r5, lr}
900034ea:	4604      	mov	r4, r0
    HAL::initialize();
900034ec:	f00c ffb9 	bl	90010462 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
900034f0:	6823      	ldr	r3, [r4, #0]
900034f2:	6e9d      	ldr	r5, [r3, #104]	@ 0x68
900034f4:	f012 fe52 	bl	9001619c <_ZN8touchgfx11Application11getInstanceEv>
900034f8:	4601      	mov	r1, r0
900034fa:	4620      	mov	r0, r4
900034fc:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
900034fe:	6823      	ldr	r3, [r4, #0]
90003500:	4a13      	ldr	r2, [pc, #76]	@ (90003550 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x68>)
90003502:	f8d3 508c 	ldr.w	r5, [r3, #140]	@ 0x8c
90003506:	4295      	cmp	r5, r2
90003508:	d116      	bne.n	90003538 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x50>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
9000350a:	4a12      	ldr	r2, [pc, #72]	@ (90003554 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x6c>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000350c:	2501      	movs	r5, #1
        setAnimationStorage(animationStorage);
9000350e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
90003512:	f502 317f 	add.w	r1, r2, #261120	@ 0x3fc00
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
90003516:	4810      	ldr	r0, [pc, #64]	@ (90003558 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x70>)
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
90003518:	e9c4 210f 	strd	r2, r1, [r4, #60]	@ 0x3c
        setAnimationStorage(animationStorage);
9000351c:	4a0f      	ldr	r2, [pc, #60]	@ (9000355c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x74>)
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
9000351e:	7005      	strb	r5, [r0, #0]
90003520:	4293      	cmp	r3, r2
90003522:	d110      	bne.n	90003546 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5e>
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90003524:	2300      	movs	r3, #0
        USE_ANIMATION_STORAGE = animationStorage != 0;
90003526:	4a0e      	ldr	r2, [pc, #56]	@ (90003560 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x78>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
90003528:	6463      	str	r3, [r4, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
9000352a:	7013      	strb	r3, [r2, #0]
    void addDMA(touchgfx::DMA_Interface& dma)
    {
        this->dma = &dma;
9000352c:	4b0d      	ldr	r3, [pc, #52]	@ (90003564 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x7c>)
9000352e:	6861      	ldr	r1, [r4, #4]
        mjpegDecoders[index] = &decoder;
90003530:	4a0d      	ldr	r2, [pc, #52]	@ (90003568 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x80>)
90003532:	6459      	str	r1, [r3, #68]	@ 0x44
90003534:	6053      	str	r3, [r2, #4]
}
90003536:	bd38      	pop	{r3, r4, r5, pc}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
90003538:	4a0c      	ldr	r2, [pc, #48]	@ (9000356c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x84>)
9000353a:	2300      	movs	r3, #0
9000353c:	4620      	mov	r0, r4
9000353e:	f5a2 317f 	sub.w	r1, r2, #261120	@ 0x3fc00
90003542:	47a8      	blx	r5
90003544:	e7f2      	b.n	9000352c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
        setAnimationStorage(animationStorage);
90003546:	2100      	movs	r1, #0
90003548:	4620      	mov	r0, r4
9000354a:	4798      	blx	r3
9000354c:	e7ee      	b.n	9000352c <_ZN20TouchGFXGeneratedHAL10initializeEv+0x44>
9000354e:	bf00      	nop
90003550:	90000f89 	.word	0x90000f89
90003554:	d003fc00 	.word	0xd003fc00
90003558:	2402198a 	.word	0x2402198a
9000355c:	90000db9 	.word	0x90000db9
90003560:	2402198b 	.word	0x2402198b
90003564:	24007438 	.word	0x24007438
90003568:	24007408 	.word	0x24007408
9000356c:	d007f800 	.word	0xd007f800

90003570 <_ZN8touchgfx14VectorRenderer11getInstanceEv>:
    static CWRVectorRendererRGB565 renderer;
90003570:	4843      	ldr	r0, [pc, #268]	@ (90003680 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
{
90003572:	b570      	push	{r4, r5, r6, lr}
    static CWRVectorRendererRGB565 renderer;
90003574:	6804      	ldr	r4, [r0, #0]
90003576:	f3bf 8f5b 	dmb	ish
9000357a:	f014 0401 	ands.w	r4, r4, #1
9000357e:	d001      	beq.n	90003584 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x14>
}
90003580:	4840      	ldr	r0, [pc, #256]	@ (90003684 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
90003582:	bd70      	pop	{r4, r5, r6, pc}
    static CWRVectorRendererRGB565 renderer;
90003584:	f025 fc7c 	bl	90028e80 <__cxa_guard_acquire>
90003588:	2800      	cmp	r0, #0
9000358a:	d0f9      	beq.n	90003580 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x10>
class CWRVectorRenderer : public VectorRenderer
9000358c:	4d3d      	ldr	r5, [pc, #244]	@ (90003684 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
9000358e:	4b3e      	ldr	r3, [pc, #248]	@ (90003688 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x118>)
90003590:	f105 0034 	add.w	r0, r5, #52	@ 0x34
90003594:	612c      	str	r4, [r5, #16]
90003596:	f8c5 4026 	str.w	r4, [r5, #38]	@ 0x26
9000359a:	f8c5 402a 	str.w	r4, [r5, #42]	@ 0x2a
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
9000359e:	4e3b      	ldr	r6, [pc, #236]	@ (9000368c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x11c>)
900035a0:	e9c5 3400 	strd	r3, r4, [r5]
900035a4:	e9c5 4402 	strd	r4, r4, [r5, #8]
900035a8:	f014 fb95 	bl	90017cd6 <_ZN8touchgfx9Matrix3x3C1Ev>
    class CanvasWidgetProxy : public CanvasWidget
900035ac:	f105 0058 	add.w	r0, r5, #88	@ 0x58
900035b0:	f00f fb02 	bl	90012bb8 <_ZN8touchgfx12CanvasWidgetC1Ev>
class CWRVectorRendererRGB565 : public CWRVectorRenderer
900035b4:	4b36      	ldr	r3, [pc, #216]	@ (90003690 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x120>)
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
        : AbstractPainter()
900035b6:	4a37      	ldr	r2, [pc, #220]	@ (90003694 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x124>)
900035b8:	602b      	str	r3, [r5, #0]
900035ba:	6833      	ldr	r3, [r6, #0]
    class CanvasWidgetProxy : public CanvasWidget
900035bc:	4936      	ldr	r1, [pc, #216]	@ (90003698 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x128>)
900035be:	f8c5 2084 	str.w	r2, [r5, #132]	@ 0x84
900035c2:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
        : widgetWidth(0)
900035c6:	f8a5 4088 	strh.w	r4, [r5, #136]	@ 0x88
900035ca:	65a9      	str	r1, [r5, #88]	@ 0x58
900035cc:	b192      	cbz	r2, 900035f4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x84>
900035ce:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900035d0:	2800      	cmp	r0, #0
900035d2:	d040      	beq.n	90003656 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xe6>
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
900035d4:	6803      	ldr	r3, [r0, #0]
900035d6:	4c31      	ldr	r4, [pc, #196]	@ (9000369c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
900035d8:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
900035da:	42a2      	cmp	r2, r4
900035dc:	d017      	beq.n	9000360e <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
900035de:	4790      	blx	r2
        return auxiliaryLCD;
900035e0:	6833      	ldr	r3, [r6, #0]
900035e2:	fab0 f680 	clz	r6, r0
900035e6:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900035e8:	0976      	lsrs	r6, r6, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
900035ea:	2800      	cmp	r0, #0
900035ec:	d03f      	beq.n	9000366e <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xfe>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
900035ee:	6803      	ldr	r3, [r0, #0]
900035f0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900035f2:	e00a      	b.n	9000360a <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9a>
        return instance->lcdRef;
900035f4:	6898      	ldr	r0, [r3, #8]
900035f6:	4c29      	ldr	r4, [pc, #164]	@ (9000369c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
        bool compat = HAL::lcd().framebufferFormat() == format;
900035f8:	6802      	ldr	r2, [r0, #0]
900035fa:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
900035fc:	42a2      	cmp	r2, r4
900035fe:	d1ee      	bne.n	900035de <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
        return auxiliaryLCD;
90003600:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
        if (HAL::getInstance()->getAuxiliaryLCD())
90003602:	b120      	cbz	r0, 9000360e <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
        bool compat = HAL::lcd().framebufferFormat() == format;
90003604:	6803      	ldr	r3, [r0, #0]
90003606:	2601      	movs	r6, #1
90003608:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
9000360a:	42a3      	cmp	r3, r4
9000360c:	d12a      	bne.n	90003664 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0xf4>
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
9000360e:	4924      	ldr	r1, [pc, #144]	@ (900036a0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x130>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
90003610:	2200      	movs	r2, #0
{
public:
    /** Constructor. */
    AbstractPainterLinearGradient()
        : AbstractPainter(),
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
90003612:	2300      	movs	r3, #0
90003614:	f44f 04c8 	mov.w	r4, #6553600	@ 0x640000
90003618:	f101 0024 	add.w	r0, r1, #36	@ 0x24
        : AbstractPainter(),
9000361c:	f8c5 209c 	str.w	r2, [r5, #156]	@ 0x9c
90003620:	f8c5 1084 	str.w	r1, [r5, #132]	@ 0x84
          coord0(0), coord1(100), texture(0), isSolid(false), isVertical(false), isHorizontal(false), clSlope(0.0f), clOffset(0.0f), horizontalDistance(0.0f), deltaColor(0.0f)
90003624:	f8c5 30ac 	str.w	r3, [r5, #172]	@ 0xac
90003628:	f8c5 30b0 	str.w	r3, [r5, #176]	@ 0xb0
9000362c:	f8c5 30b4 	str.w	r3, [r5, #180]	@ 0xb4
90003630:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
90003634:	f8c5 40a0 	str.w	r4, [r5, #160]	@ 0xa0
90003638:	e9c5 0223 	strd	r0, r2, [r5, #140]	@ 0x8c
        : AbstractPainter(),
9000363c:	e9c5 2229 	strd	r2, r2, [r5, #164]	@ 0xa4
 * An abstract class for creating painter classes for drawing canvas widgets. All canvas widgets
 * need a painter to fill the shape drawn with a CanvasWidgetRenderer. The painter must provide
 * the color of a pixel on a given coordinate, which will the be blended into the framebuffer
 * depending on the position of the canvas widget and the transparency of the given pixel.
 */
class PainterRGB565LinearGradient : public AbstractPainterLinearGradient
90003640:	4a18      	ldr	r2, [pc, #96]	@ (900036a4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x134>)
90003642:	4819      	ldr	r0, [pc, #100]	@ (900036a8 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x138>)
90003644:	f8c5 2098 	str.w	r2, [r5, #152]	@ 0x98
90003648:	f025 ffac 	bl	900295a4 <atexit>
9000364c:	480c      	ldr	r0, [pc, #48]	@ (90003680 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x110>)
9000364e:	f025 fc23 	bl	90028e98 <__cxa_guard_release>
}
90003652:	480c      	ldr	r0, [pc, #48]	@ (90003684 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x114>)
90003654:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
90003656:	6898      	ldr	r0, [r3, #8]
90003658:	4c10      	ldr	r4, [pc, #64]	@ (9000369c <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x12c>)
        bool compat = HAL::lcd().framebufferFormat() == format;
9000365a:	6803      	ldr	r3, [r0, #0]
9000365c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000365e:	42a2      	cmp	r2, r4
90003660:	d0d5      	beq.n	9000360e <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
90003662:	e7bc      	b.n	900035de <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x6e>
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
90003664:	4798      	blx	r3
90003666:	2800      	cmp	r0, #0
90003668:	bf08      	it	eq
9000366a:	f046 0601 	orreq.w	r6, r6, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
9000366e:	2e00      	cmp	r6, #0
90003670:	d1cd      	bne.n	9000360e <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x9e>
90003672:	4b0e      	ldr	r3, [pc, #56]	@ (900036ac <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x13c>)
90003674:	212c      	movs	r1, #44	@ 0x2c
90003676:	4a0e      	ldr	r2, [pc, #56]	@ (900036b0 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x140>)
90003678:	480e      	ldr	r0, [pc, #56]	@ (900036b4 <_ZN8touchgfx14VectorRenderer11getInstanceEv+0x144>)
9000367a:	f025 ff75 	bl	90029568 <__assert_func>
9000367e:	bf00      	nop
90003680:	24007348 	.word	0x24007348
90003684:	2400734c 	.word	0x2400734c
90003688:	9002d268 	.word	0x9002d268
9000368c:	2402198c 	.word	0x2402198c
90003690:	9002c570 	.word	0x9002c570
90003694:	9002c4d8 	.word	0x9002c4d8
90003698:	9002c4f8 	.word	0x9002c4f8
9000369c:	90002f19 	.word	0x90002f19
900036a0:	9002d21c 	.word	0x9002d21c
900036a4:	9002d1fc 	.word	0x9002d1fc
900036a8:	90002f51 	.word	0x90002f51
900036ac:	9002ba44 	.word	0x9002ba44
900036b0:	9002baa4 	.word	0x9002baa4
900036b4:	9002bae0 	.word	0x9002bae0

900036b8 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
900036b8:	b538      	push	{r3, r4, r5, lr}
        return instance;
900036ba:	4c18      	ldr	r4, [pc, #96]	@ (9000371c <HAL_LTDC_LineEventCallback+0x64>)
        if (!HAL::getInstance())
900036bc:	6823      	ldr	r3, [r4, #0]
900036be:	b35b      	cbz	r3, 90003718 <HAL_LTDC_LineEventCallback+0x60>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
900036c0:	4b17      	ldr	r3, [pc, #92]	@ (90003720 <HAL_LTDC_LineEventCallback+0x68>)
900036c2:	4a18      	ldr	r2, [pc, #96]	@ (90003724 <HAL_LTDC_LineEventCallback+0x6c>)
900036c4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
900036c6:	8811      	ldrh	r1, [r2, #0]
900036c8:	428b      	cmp	r3, r1
900036ca:	d00e      	beq.n	900036ea <HAL_LTDC_LineEventCallback+0x32>
            GPIO::set(GPIO::VSYNC_FREQ);
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
900036cc:	f006 fc7e 	bl	90009fcc <HAL_LTDC_ProgramLineEvent>
900036d0:	6824      	ldr	r4, [r4, #0]
        allowDMATransfers();
900036d2:	6823      	ldr	r3, [r4, #0]
900036d4:	4620      	mov	r0, r4
900036d6:	6a1b      	ldr	r3, [r3, #32]
900036d8:	4798      	blx	r3
        isFrontPorchEntered = true;
900036da:	2301      	movs	r3, #1

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
900036dc:	2000      	movs	r0, #0
900036de:	f884 307c 	strb.w	r3, [r4, #124]	@ 0x7c
        }
    }
900036e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
900036e6:	f7fd bb09 	b.w	90000cfc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
900036ea:	4b0f      	ldr	r3, [pc, #60]	@ (90003728 <HAL_LTDC_LineEventCallback+0x70>)
        isFrontPorchEntered = false;
900036ec:	2500      	movs	r5, #0
900036ee:	8819      	ldrh	r1, [r3, #0]
900036f0:	f006 fc6c 	bl	90009fcc <HAL_LTDC_ProgramLineEvent>
        return instance;
900036f4:	6823      	ldr	r3, [r4, #0]
        vSyncCnt++;
900036f6:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
        isFrontPorchEntered = false;
900036fa:	f883 507c 	strb.w	r5, [r3, #124]	@ 0x7c
        vSyncCnt++;
900036fe:	3201      	adds	r2, #1
90003700:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
            OSWrappers::signalVSync();
90003704:	f7fe fe5e 	bl	900023c4 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            HAL::getInstance()->swapFrameBuffers();
90003708:	6820      	ldr	r0, [r4, #0]
9000370a:	f00d fc41 	bl	90010f90 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
9000370e:	4628      	mov	r0, r5
    }
90003710:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
90003714:	f7fd babe 	b.w	90000c94 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
    }
90003718:	bd38      	pop	{r3, r4, r5, pc}
9000371a:	bf00      	nop
9000371c:	2402198c 	.word	0x2402198c
90003720:	50001000 	.word	0x50001000
90003724:	24007346 	.word	0x24007346
90003728:	24007344 	.word	0x24007344

9000372c <_GLOBAL__sub_I_mjpegdecoder1>:
}
9000372c:	b510      	push	{r4, lr}
HardwareMJPEGDecoder mjpegdecoder1;
9000372e:	480b      	ldr	r0, [pc, #44]	@ (9000375c <_GLOBAL__sub_I_mjpegdecoder1+0x30>)
90003730:	f7fd fe0e 	bl	90001350 <_ZN20HardwareMJPEGDecoderC1Ev>
        : VideoController(), allowSkipFrames(true)
90003734:	4c0a      	ldr	r4, [pc, #40]	@ (90003760 <_GLOBAL__sub_I_mjpegdecoder1+0x34>)
90003736:	4b0b      	ldr	r3, [pc, #44]	@ (90003764 <_GLOBAL__sub_I_mjpegdecoder1+0x38>)
            : frameCount(0), frameNumber(0), tickCount(0),
90003738:	2200      	movs	r2, #0
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
9000373a:	f04f 7080 	mov.w	r0, #16777216	@ 0x1000000
        : VideoController(), allowSkipFrames(true)
9000373e:	2101      	movs	r1, #1
90003740:	601c      	str	r4, [r3, #0]
              isActive(false), isPlaying(false), isShowingOneFrame(false), repeat(true),
90003742:	6258      	str	r0, [r3, #36]	@ 0x24
              doDecodeNextFrame(false)
90003744:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
        : VideoController(), allowSkipFrames(true)
90003748:	f883 102c 	strb.w	r1, [r3, #44]	@ 0x2c
        memset(mjpegDecoders, 0, sizeof(mjpegDecoders));
9000374c:	605a      	str	r2, [r3, #4]
            : frameCount(0), frameNumber(0), tickCount(0),
9000374e:	e9c3 2202 	strd	r2, r2, [r3, #8]
              frame_rate_video(0), frame_rate_ticks(0),
90003752:	e9c3 2204 	strd	r2, r2, [r3, #16]
              seek_to_frame(0),
90003756:	e9c3 2206 	strd	r2, r2, [r3, #24]
}
9000375a:	bd10      	pop	{r4, pc}
9000375c:	24007438 	.word	0x24007438
90003760:	9002c5bc 	.word	0x9002c5bc
90003764:	24007408 	.word	0x24007408

90003768 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */
  
  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
90003768:	4901      	ldr	r1, [pc, #4]	@ (90003770 <vApplicationIdleHook+0x8>)
9000376a:	2000      	movs	r0, #0
9000376c:	f00b bedc 	b.w	9000f528 <vTaskSetApplicationTaskTag>
90003770:	90001045 	.word	0x90001045

90003774 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
90003774:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
90003776:	2064      	movs	r0, #100	@ 0x64
90003778:	f009 fd92 	bl	9000d2a0 <osDelay>
  for(;;)
9000377c:	e7fb      	b.n	90003776 <StartDefaultTask+0x2>
9000377e:	bf00      	nop

90003780 <InitializeEquipment>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_InitializeEquipment */
void InitializeEquipment(void *argument)
{
90003780:	b508      	push	{r3, lr}
  /* USER CODE BEGIN InitializeEquipment */
  /* Infinite loop */
  for(;;)
  {
    osDelay(1);
90003782:	2001      	movs	r0, #1
90003784:	f009 fd8c 	bl	9000d2a0 <osDelay>
  for(;;)
90003788:	e7fb      	b.n	90003782 <InitializeEquipment+0x2>
9000378a:	bf00      	nop

9000378c <CalculateData>:
* @brief Function implementing the calcData thread.
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_CalculateData */
void CalculateData(void *argument)
9000378c:	b508      	push	{r3, lr}
9000378e:	2001      	movs	r0, #1
90003790:	f009 fd86 	bl	9000d2a0 <osDelay>
90003794:	e7fb      	b.n	9000378e <CalculateData+0x2>
90003796:	bf00      	nop

90003798 <SystemClock_Config>:
{
90003798:	b570      	push	{r4, r5, r6, lr}
9000379a:	b09e      	sub	sp, #120	@ 0x78
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
9000379c:	224c      	movs	r2, #76	@ 0x4c
9000379e:	2100      	movs	r1, #0
900037a0:	a80a      	add	r0, sp, #40	@ 0x28
900037a2:	f026 f97d 	bl	90029aa0 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
900037a6:	2220      	movs	r2, #32
900037a8:	2100      	movs	r1, #0
900037aa:	a802      	add	r0, sp, #8
900037ac:	f026 f978 	bl	90029aa0 <memset>
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
900037b0:	2002      	movs	r0, #2
900037b2:	f006 fe6f 	bl	9000a494 <HAL_PWREx_ConfigSupply>
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
900037b6:	4a22      	ldr	r2, [pc, #136]	@ (90003840 <SystemClock_Config+0xa8>)
900037b8:	2100      	movs	r1, #0
900037ba:	4b22      	ldr	r3, [pc, #136]	@ (90003844 <SystemClock_Config+0xac>)
900037bc:	9101      	str	r1, [sp, #4]
900037be:	6991      	ldr	r1, [r2, #24]
900037c0:	f441 4140 	orr.w	r1, r1, #49152	@ 0xc000
900037c4:	6191      	str	r1, [r2, #24]
900037c6:	6991      	ldr	r1, [r2, #24]
900037c8:	f401 4140 	and.w	r1, r1, #49152	@ 0xc000
900037cc:	9101      	str	r1, [sp, #4]
900037ce:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
900037d0:	f041 0101 	orr.w	r1, r1, #1
900037d4:	62d9      	str	r1, [r3, #44]	@ 0x2c
900037d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900037d8:	f003 0301 	and.w	r3, r3, #1
900037dc:	9301      	str	r3, [sp, #4]
900037de:	9b01      	ldr	r3, [sp, #4]
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
900037e0:	6993      	ldr	r3, [r2, #24]
900037e2:	049b      	lsls	r3, r3, #18
900037e4:	d5fc      	bpl.n	900037e0 <SystemClock_Config+0x48>
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
900037e6:	2401      	movs	r4, #1
900037e8:	f44f 3580 	mov.w	r5, #65536	@ 0x10000
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
900037ec:	2302      	movs	r3, #2
  RCC_OscInitStruct.PLL.PLLM = 5;
900037ee:	2105      	movs	r1, #5
  RCC_OscInitStruct.PLL.PLLN = 192;
900037f0:	22c0      	movs	r2, #192	@ 0xc0
  RCC_OscInitStruct.PLL.PLLQ = 4;
900037f2:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
900037f4:	a80a      	add	r0, sp, #40	@ 0x28
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
900037f6:	e9cd 450a 	strd	r4, r5, [sp, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
900037fa:	2508      	movs	r5, #8
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
900037fc:	2400      	movs	r4, #0
  RCC_OscInitStruct.PLL.PLLN = 192;
900037fe:	e9cd 1215 	strd	r1, r2, [sp, #84]	@ 0x54
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
90003802:	e9cd 3313 	strd	r3, r3, [sp, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLQ = 4;
90003806:	e9cd 3617 	strd	r3, r6, [sp, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
9000380a:	e9cd 3519 	strd	r3, r5, [sp, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
9000380e:	e9cd 441b 	strd	r4, r4, [sp, #108]	@ 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
90003812:	f006 fed5 	bl	9000a5c0 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
90003816:	233f      	movs	r3, #63	@ 0x3f
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90003818:	2203      	movs	r2, #3
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
9000381a:	4631      	mov	r1, r6
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
9000381c:	9302      	str	r3, [sp, #8]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
9000381e:	2340      	movs	r3, #64	@ 0x40
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
90003820:	9203      	str	r2, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90003822:	f44f 6280 	mov.w	r2, #1024	@ 0x400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003826:	eb0d 0005 	add.w	r0, sp, r5
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
9000382a:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
9000382c:	9505      	str	r5, [sp, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
9000382e:	e9cd 3306 	strd	r3, r3, [sp, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
90003832:	e9cd 2308 	strd	r2, r3, [sp, #32]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
90003836:	f007 fa3f 	bl	9000acb8 <HAL_RCC_ClockConfig>
}
9000383a:	b01e      	add	sp, #120	@ 0x78
9000383c:	bd70      	pop	{r4, r5, r6, pc}
9000383e:	bf00      	nop
90003840:	58024800 	.word	0x58024800
90003844:	58000400 	.word	0x58000400

90003848 <main>:
{
90003848:	b580      	push	{r7, lr}

 /* MPU Configuration */

void MPU_Config(void)
{
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
9000384a:	2400      	movs	r4, #0
{
9000384c:	b09a      	sub	sp, #104	@ 0x68
  /* Disables the MPU */
  HAL_MPU_Disable();

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
9000384e:	2501      	movs	r5, #1

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
  MPU_InitStruct.BaseAddress = 0x90000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
90003850:	271b      	movs	r7, #27

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003852:	2603      	movs	r6, #3
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
90003854:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
90003858:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_MPU_Disable();
9000385c:	f003 fb7e 	bl	90006f5c <HAL_MPU_Disable>
  MPU_InitStruct.BaseAddress = 0x24000000;
90003860:	f04f 5210 	mov.w	r2, #603979776	@ 0x24000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
90003864:	4bd4      	ldr	r3, [pc, #848]	@ (90003bb8 <main+0x370>)
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003866:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
90003868:	f8ad 5034 	strh.w	r5, [sp, #52]	@ 0x34
  MPU_InitStruct.Size = MPU_REGION_SIZE_512KB;
9000386c:	e9cd 230e 	strd	r2, r3, [sp, #56]	@ 0x38
90003870:	4bd2      	ldr	r3, [pc, #840]	@ (90003bbc <main+0x374>)
90003872:	9310      	str	r3, [sp, #64]	@ 0x40
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003874:	f003 fb90 	bl	90006f98 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.BaseAddress = 0x90000000;
90003878:	f04f 4310 	mov.w	r3, #2415919104	@ 0x90000000
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
9000387c:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
9000387e:	f88d 403f 	strb.w	r4, [sp, #63]	@ 0x3f
  MPU_InitStruct.BaseAddress = 0x90000000;
90003882:	930e      	str	r3, [sp, #56]	@ 0x38
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
90003884:	f8ad 4042 	strh.w	r4, [sp, #66]	@ 0x42
  MPU_InitStruct.Number = MPU_REGION_NUMBER1;
90003888:	f88d 5035 	strb.w	r5, [sp, #53]	@ 0x35
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
9000388c:	f88d 703c 	strb.w	r7, [sp, #60]	@ 0x3c
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003890:	f003 fb82 	bl	90006f98 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
90003894:	2302      	movs	r3, #2
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_ENABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
90003896:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
90003898:	f8ad 603f 	strh.w	r6, [sp, #63]	@ 0x3f
  MPU_InitStruct.Number = MPU_REGION_NUMBER2;
9000389c:	f88d 3035 	strb.w	r3, [sp, #53]	@ 0x35
  MPU_InitStruct.Size = MPU_REGION_SIZE_128MB;
900038a0:	231a      	movs	r3, #26
900038a2:	f88d 303c 	strb.w	r3, [sp, #60]	@ 0x3c
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
900038a6:	f240 1301 	movw	r3, #257	@ 0x101
900038aa:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900038ae:	f003 fb73 	bl	90006f98 <HAL_MPU_ConfigRegion>
  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
  MPU_InitStruct.BaseAddress = 0xD0000000;
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
900038b2:	f44f 7380 	mov.w	r3, #256	@ 0x100
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900038b6:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
900038b8:	f8ad 4042 	strh.w	r4, [sp, #66]	@ 0x42

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
900038bc:	2404      	movs	r4, #4
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
900038be:	f8ad 303f 	strh.w	r3, [sp, #63]	@ 0x3f
  MPU_InitStruct.BaseAddress = 0xD0000000;
900038c2:	f04f 4350 	mov.w	r3, #3489660928	@ 0xd0000000
  MPU_InitStruct.Size = MPU_REGION_SIZE_256MB;
900038c6:	f88d 703c 	strb.w	r7, [sp, #60]	@ 0x3c
  MPU_InitStruct.BaseAddress = 0xD0000000;
900038ca:	930e      	str	r3, [sp, #56]	@ 0x38
  MPU_InitStruct.Number = MPU_REGION_NUMBER3;
900038cc:	f88d 6035 	strb.w	r6, [sp, #53]	@ 0x35
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900038d0:	f003 fb62 	bl	90006f98 <HAL_MPU_ConfigRegion>
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
900038d4:	2318      	movs	r3, #24
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900038d6:	a80d      	add	r0, sp, #52	@ 0x34
  MPU_InitStruct.AccessPermission = MPU_REGION_FULL_ACCESS;
900038d8:	f88d 603f 	strb.w	r6, [sp, #63]	@ 0x3f
  MPU_InitStruct.Size = MPU_REGION_SIZE_32MB;
900038dc:	f88d 303c 	strb.w	r3, [sp, #60]	@ 0x3c
  MPU_InitStruct.Number = MPU_REGION_NUMBER4;
900038e0:	f88d 4035 	strb.w	r4, [sp, #53]	@ 0x35
  MPU_InitStruct.IsCacheable = MPU_ACCESS_CACHEABLE;
900038e4:	f88d 5042 	strb.w	r5, [sp, #66]	@ 0x42
  HAL_MPU_ConfigRegion(&MPU_InitStruct);
900038e8:	f003 fb56 	bl	90006f98 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
900038ec:	4620      	mov	r0, r4
900038ee:	f003 fb43 	bl	90006f78 <HAL_MPU_Enable>
    if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
900038f2:	4ab3      	ldr	r2, [pc, #716]	@ (90003bc0 <main+0x378>)
900038f4:	6953      	ldr	r3, [r2, #20]
900038f6:	f413 3300 	ands.w	r3, r3, #131072	@ 0x20000
900038fa:	d111      	bne.n	90003920 <main+0xd8>
  __ASM volatile ("dsb 0xF":::"memory");
900038fc:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003900:	f3bf 8f6f 	isb	sy
    SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
90003904:	f8c2 3250 	str.w	r3, [r2, #592]	@ 0x250
  __ASM volatile ("dsb 0xF":::"memory");
90003908:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000390c:	f3bf 8f6f 	isb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
90003910:	6953      	ldr	r3, [r2, #20]
90003912:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
90003916:	6153      	str	r3, [r2, #20]
  __ASM volatile ("dsb 0xF":::"memory");
90003918:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
9000391c:	f3bf 8f6f 	isb	sy
    if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
90003920:	48a7      	ldr	r0, [pc, #668]	@ (90003bc0 <main+0x378>)
90003922:	6943      	ldr	r3, [r0, #20]
90003924:	f413 3380 	ands.w	r3, r3, #65536	@ 0x10000
90003928:	d124      	bne.n	90003974 <main+0x12c>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
9000392a:	f8c0 3084 	str.w	r3, [r0, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
9000392e:	f3bf 8f4f 	dsb	sy
    ccsidr = SCB->CCSIDR;
90003932:	f8d0 5080 	ldr.w	r5, [r0, #128]	@ 0x80
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003936:	f643 76e0 	movw	r6, #16352	@ 0x3fe0
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
9000393a:	f3c5 344e 	ubfx	r4, r5, #13, #15
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
9000393e:	f3c5 05c9 	ubfx	r5, r5, #3, #10
90003942:	0164      	lsls	r4, r4, #5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003944:	ea04 0106 	and.w	r1, r4, r6
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
90003948:	462b      	mov	r3, r5
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
9000394a:	ea41 7283 	orr.w	r2, r1, r3, lsl #30
      } while (ways-- != 0U);
9000394e:	3b01      	subs	r3, #1
90003950:	1c5f      	adds	r7, r3, #1
        SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
90003952:	f8c0 2260 	str.w	r2, [r0, #608]	@ 0x260
      } while (ways-- != 0U);
90003956:	d1f8      	bne.n	9000394a <main+0x102>
    } while(sets-- != 0U);
90003958:	3c20      	subs	r4, #32
9000395a:	f114 0f20 	cmn.w	r4, #32
9000395e:	d1f1      	bne.n	90003944 <main+0xfc>
90003960:	f3bf 8f4f 	dsb	sy
    SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
90003964:	6943      	ldr	r3, [r0, #20]
90003966:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000396a:	6143      	str	r3, [r0, #20]
9000396c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90003970:	f3bf 8f6f 	isb	sy
  HAL_Init();
90003974:	f003 fa3c 	bl	90006df0 <HAL_Init>
  SystemClock_Config();
90003978:	f7ff ff0e 	bl	90003798 <SystemClock_Config>
  __ASM volatile ("cpsie i" : : : "memory");
9000397c:	b662      	cpsie	i
  GPIO_InitTypeDef GPIO_InitStruct = {0};
9000397e:	2400      	movs	r4, #0
  __HAL_RCC_GPIOK_CLK_ENABLE();
90003980:	4d90      	ldr	r5, [pc, #576]	@ (90003bc4 <main+0x37c>)
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003982:	21c0      	movs	r1, #192	@ 0xc0
90003984:	4890      	ldr	r0, [pc, #576]	@ (90003bc8 <main+0x380>)
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003986:	9411      	str	r4, [sp, #68]	@ 0x44
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003988:	4622      	mov	r2, r4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
9000398a:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
9000398c:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90003990:	2708      	movs	r7, #8
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003992:	f04f 0905 	mov.w	r9, #5
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003996:	e9cd 440d 	strd	r4, r4, [sp, #52]	@ 0x34
9000399a:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  __HAL_RCC_GPIOK_CLK_ENABLE();
9000399e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039a2:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
900039a6:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900039aa:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039ae:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
900039b2:	9302      	str	r3, [sp, #8]
900039b4:	9b02      	ldr	r3, [sp, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
900039b6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039ba:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
900039be:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900039c2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039c6:	f003 0340 	and.w	r3, r3, #64	@ 0x40
900039ca:	9303      	str	r3, [sp, #12]
900039cc:	9b03      	ldr	r3, [sp, #12]
  __HAL_RCC_GPIOC_CLK_ENABLE();
900039ce:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039d2:	f043 0304 	orr.w	r3, r3, #4
900039d6:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900039da:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039de:	f003 0304 	and.w	r3, r3, #4
900039e2:	9304      	str	r3, [sp, #16]
900039e4:	9b04      	ldr	r3, [sp, #16]
  __HAL_RCC_GPIOI_CLK_ENABLE();
900039e6:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039ea:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
900039ee:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
900039f2:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
900039f6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900039fa:	9305      	str	r3, [sp, #20]
900039fc:	9b05      	ldr	r3, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
900039fe:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a02:	f043 0310 	orr.w	r3, r3, #16
90003a06:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a0a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a0e:	f003 0310 	and.w	r3, r3, #16
90003a12:	9306      	str	r3, [sp, #24]
90003a14:	9b06      	ldr	r3, [sp, #24]
  __HAL_RCC_GPIOB_CLK_ENABLE();
90003a16:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a1a:	f043 0302 	orr.w	r3, r3, #2
90003a1e:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a22:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a26:	f003 0302 	and.w	r3, r3, #2
90003a2a:	9307      	str	r3, [sp, #28]
90003a2c:	9b07      	ldr	r3, [sp, #28]
  __HAL_RCC_GPIOJ_CLK_ENABLE();
90003a2e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a32:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
90003a36:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a3a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a3e:	f403 7300 	and.w	r3, r3, #512	@ 0x200
90003a42:	9308      	str	r3, [sp, #32]
90003a44:	9b08      	ldr	r3, [sp, #32]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90003a46:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a4a:	f043 0308 	orr.w	r3, r3, #8
90003a4e:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a52:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a56:	f003 0308 	and.w	r3, r3, #8
90003a5a:	9309      	str	r3, [sp, #36]	@ 0x24
90003a5c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOF_CLK_ENABLE();
90003a5e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a62:	f043 0320 	orr.w	r3, r3, #32
90003a66:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a6a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a6e:	f003 0320 	and.w	r3, r3, #32
90003a72:	930a      	str	r3, [sp, #40]	@ 0x28
90003a74:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  __HAL_RCC_GPIOH_CLK_ENABLE();
90003a76:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a7a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90003a7e:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a82:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a86:	f003 0380 	and.w	r3, r3, #128	@ 0x80
90003a8a:	930b      	str	r3, [sp, #44]	@ 0x2c
90003a8c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
  __HAL_RCC_GPIOA_CLK_ENABLE();
90003a8e:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a92:	f043 0301 	orr.w	r3, r3, #1
90003a96:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90003a9a:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90003a9e:	f003 0301 	and.w	r3, r3, #1
90003aa2:	930c      	str	r3, [sp, #48]	@ 0x30
90003aa4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  HAL_GPIO_WritePin(GPIOB, FRAME_RATE_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
90003aa6:	f003 ff99 	bl	900079dc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_DE_GPIO_Port, LCD_DE_Pin, GPIO_PIN_RESET);
90003aaa:	4622      	mov	r2, r4
90003aac:	2180      	movs	r1, #128	@ 0x80
90003aae:	4847      	ldr	r0, [pc, #284]	@ (90003bcc <main+0x384>)
90003ab0:	f003 ff94 	bl	900079dc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
90003ab4:	4622      	mov	r2, r4
90003ab6:	2108      	movs	r1, #8
90003ab8:	4845      	ldr	r0, [pc, #276]	@ (90003bd0 <main+0x388>)
90003aba:	f003 ff8f 	bl	900079dc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_BL_CTRL_GPIO_Port, LCD_BL_CTRL_Pin, GPIO_PIN_SET);
90003abe:	2201      	movs	r2, #1
90003ac0:	4844      	ldr	r0, [pc, #272]	@ (90003bd4 <main+0x38c>)
90003ac2:	4611      	mov	r1, r2
90003ac4:	f003 ff8a 	bl	900079dc <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
90003ac8:	4622      	mov	r2, r4
90003aca:	2140      	movs	r1, #64	@ 0x40
90003acc:	4842      	ldr	r0, [pc, #264]	@ (90003bd8 <main+0x390>)
90003ace:	f003 ff85 	bl	900079dc <HAL_GPIO_WritePin>
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|RENDER_TIME_Pin;
90003ad2:	23c0      	movs	r3, #192	@ 0xc0
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90003ad4:	a90d      	add	r1, sp, #52	@ 0x34
90003ad6:	483c      	ldr	r0, [pc, #240]	@ (90003bc8 <main+0x380>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003ad8:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003adc:	940f      	str	r4, [sp, #60]	@ 0x3c
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003ade:	e9cd 360d 	strd	r3, r6, [sp, #52]	@ 0x34
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
90003ae2:	f003 fc3f 	bl	90007364 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003ae6:	2380      	movs	r3, #128	@ 0x80
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003ae8:	a90d      	add	r1, sp, #52	@ 0x34
90003aea:	4838      	ldr	r0, [pc, #224]	@ (90003bcc <main+0x384>)
  GPIO_InitStruct.Pin = LCD_DE_Pin;
90003aec:	930d      	str	r3, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003aee:	9410      	str	r4, [sp, #64]	@ 0x40
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003af0:	e9cd 640e 	strd	r6, r4, [sp, #56]	@ 0x38
  HAL_GPIO_Init(LCD_DE_GPIO_Port, &GPIO_InitStruct);
90003af4:	f003 fc36 	bl	90007364 <HAL_GPIO_Init>
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003af8:	a90d      	add	r1, sp, #52	@ 0x34
90003afa:	4835      	ldr	r0, [pc, #212]	@ (90003bd0 <main+0x388>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003afc:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
90003b00:	970d      	str	r7, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003b02:	e9cd 640e 	strd	r6, r4, [sp, #56]	@ 0x38
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
90003b06:	f003 fc2d 	bl	90007364 <HAL_GPIO_Init>
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003b0a:	a90d      	add	r1, sp, #52	@ 0x34
90003b0c:	4831      	ldr	r0, [pc, #196]	@ (90003bd4 <main+0x38c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
90003b0e:	e9cd 660d 	strd	r6, r6, [sp, #52]	@ 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
90003b12:	e9cd 440f 	strd	r4, r4, [sp, #60]	@ 0x3c
  HAL_GPIO_Init(LCD_BL_CTRL_GPIO_Port, &GPIO_InitStruct);
90003b16:	f003 fc25 	bl	90007364 <HAL_GPIO_Init>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
90003b1a:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90003b1e:	f04f 0840 	mov.w	r8, #64	@ 0x40
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90003b22:	a90d      	add	r1, sp, #52	@ 0x34
90003b24:	482c      	ldr	r0, [pc, #176]	@ (90003bd8 <main+0x390>)
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
90003b26:	f8cd 8034 	str.w	r8, [sp, #52]	@ 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
90003b2a:	e9cd 640e 	strd	r6, r4, [sp, #56]	@ 0x38
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
90003b2e:	f003 fc19 	bl	90007364 <HAL_GPIO_Init>
  __HAL_RCC_MDMA_CLK_ENABLE();
90003b32:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003b36:	4622      	mov	r2, r4
90003b38:	2105      	movs	r1, #5
  __HAL_RCC_MDMA_CLK_ENABLE();
90003b3a:	4333      	orrs	r3, r6
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003b3c:	207a      	movs	r0, #122	@ 0x7a
  __HAL_RCC_MDMA_CLK_ENABLE();
90003b3e:	f8c5 30d4 	str.w	r3, [r5, #212]	@ 0xd4
90003b42:	f8d5 30d4 	ldr.w	r3, [r5, #212]	@ 0xd4
  hltdc.Instance = LTDC;
90003b46:	4d25      	ldr	r5, [pc, #148]	@ (90003bdc <main+0x394>)
  __HAL_RCC_MDMA_CLK_ENABLE();
90003b48:	4033      	ands	r3, r6
90003b4a:	9301      	str	r3, [sp, #4]
90003b4c:	9b01      	ldr	r3, [sp, #4]
  HAL_NVIC_SetPriority(MDMA_IRQn, 5, 0);
90003b4e:	f003 f9a9 	bl	90006ea4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(MDMA_IRQn);
90003b52:	207a      	movs	r0, #122	@ 0x7a
90003b54:	f003 f9e2 	bl	90006f1c <HAL_NVIC_EnableIRQ>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
90003b58:	2234      	movs	r2, #52	@ 0x34
90003b5a:	4621      	mov	r1, r4
90003b5c:	eb0d 0002 	add.w	r0, sp, r2
90003b60:	f025 ff9e 	bl	90029aa0 <memset>
  hltdc.Instance = LTDC;
90003b64:	4b1e      	ldr	r3, [pc, #120]	@ (90003be0 <main+0x398>)
  hltdc.Init.AccumulatedVBP = 11;
90003b66:	202a      	movs	r0, #42	@ 0x2a
  hltdc.Init.VerticalSync = 8;
90003b68:	61af      	str	r7, [r5, #24]
  hltdc.Instance = LTDC;
90003b6a:	602b      	str	r3, [r5, #0]
  hltdc.Init.HorizontalSync = 39;
90003b6c:	2327      	movs	r3, #39	@ 0x27
  hltdc.Init.AccumulatedActiveH = 283;
90003b6e:	f240 270a 	movw	r7, #522	@ 0x20a
  hltdc.Init.TotalHeigh = 285;
90003b72:	f44f 7c04 	mov.w	ip, #528	@ 0x210
  hltdc.Init.HorizontalSync = 39;
90003b76:	616b      	str	r3, [r5, #20]
  hltdc.Init.AccumulatedVBP = 11;
90003b78:	230b      	movs	r3, #11
  hltdc.Init.Backcolor.Blue = 0;
90003b7a:	86ac      	strh	r4, [r5, #52]	@ 0x34
  hltdc.Init.Backcolor.Red = 0;
90003b7c:	f885 4036 	strb.w	r4, [r5, #54]	@ 0x36
  hltdc.Init.AccumulatedVBP = 11;
90003b80:	e9c5 0307 	strd	r0, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 283;
90003b84:	f240 131b 	movw	r3, #283	@ 0x11b
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003b88:	4628      	mov	r0, r5
  hltdc.Init.AccumulatedActiveH = 283;
90003b8a:	e9c5 7309 	strd	r7, r3, [r5, #36]	@ 0x24
  hltdc.Init.TotalHeigh = 285;
90003b8e:	f240 131d 	movw	r3, #285	@ 0x11d
  pLayerCfg.Alpha = 255;
90003b92:	2702      	movs	r7, #2
  hltdc.Init.TotalHeigh = 285;
90003b94:	e9c5 c30b 	strd	ip, r3, [r5, #44]	@ 0x2c
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
90003b98:	e9c5 4401 	strd	r4, r4, [r5, #4]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
90003b9c:	e9c5 4403 	strd	r4, r4, [r5, #12]
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
90003ba0:	f006 f894 	bl	90009ccc <HAL_LTDC_Init>
  pLayerCfg.WindowX1 = 480;
90003ba4:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003ba8:	4622      	mov	r2, r4
90003baa:	a90d      	add	r1, sp, #52	@ 0x34
  pLayerCfg.WindowX1 = 480;
90003bac:	930e      	str	r3, [sp, #56]	@ 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003bae:	4628      	mov	r0, r5
  pLayerCfg.ImageWidth = 480;
90003bb0:	9317      	str	r3, [sp, #92]	@ 0x5c
  pLayerCfg.WindowY1 = 272;
90003bb2:	f44f 7388 	mov.w	r3, #272	@ 0x110
90003bb6:	e015      	b.n	90003be4 <main+0x39c>
90003bb8:	03000012 	.word	0x03000012
90003bbc:	01010001 	.word	0x01010001
90003bc0:	e000ed00 	.word	0xe000ed00
90003bc4:	58024400 	.word	0x58024400
90003bc8:	58020400 	.word	0x58020400
90003bcc:	58020c00 	.word	0x58020c00
90003bd0:	58021800 	.word	0x58021800
90003bd4:	58022800 	.word	0x58022800
90003bd8:	58020000 	.word	0x58020000
90003bdc:	240075b0 	.word	0x240075b0
90003be0:	50001000 	.word	0x50001000
  hdma2d.Instance = DMA2D;
90003be4:	4d66      	ldr	r5, [pc, #408]	@ (90003d80 <main+0x538>)
  pLayerCfg.WindowY1 = 272;
90003be6:	9310      	str	r3, [sp, #64]	@ 0x40
  pLayerCfg.ImageHeight = 272;
90003be8:	9318      	str	r3, [sp, #96]	@ 0x60
  pLayerCfg.Alpha = 255;
90003bea:	23ff      	movs	r3, #255	@ 0xff
  pLayerCfg.WindowX0 = 0;
90003bec:	940d      	str	r4, [sp, #52]	@ 0x34
  pLayerCfg.WindowY0 = 0;
90003bee:	940f      	str	r4, [sp, #60]	@ 0x3c
  pLayerCfg.Alpha0 = 0;
90003bf0:	9413      	str	r4, [sp, #76]	@ 0x4c
  pLayerCfg.FBStartAdress = 0;
90003bf2:	9416      	str	r4, [sp, #88]	@ 0x58
  pLayerCfg.Backcolor.Blue = 0;
90003bf4:	f8ad 4064 	strh.w	r4, [sp, #100]	@ 0x64
  pLayerCfg.Backcolor.Red = 0;
90003bf8:	f88d 4066 	strb.w	r4, [sp, #102]	@ 0x66
  pLayerCfg.Alpha = 255;
90003bfc:	e9cd 7311 	strd	r7, r3, [sp, #68]	@ 0x44
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
90003c00:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90003c04:	e9cd 3914 	strd	r3, r9, [sp, #80]	@ 0x50
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
90003c08:	f006 f91e 	bl	90009e48 <HAL_LTDC_ConfigLayer>
  hdma2d.Instance = DMA2D;
90003c0c:	4b5d      	ldr	r3, [pc, #372]	@ (90003d84 <main+0x53c>)
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003c0e:	4628      	mov	r0, r5
  hdma2d.Init.OutputOffset = 0;
90003c10:	60ec      	str	r4, [r5, #12]
  hdma2d.Instance = DMA2D;
90003c12:	602b      	str	r3, [r5, #0]
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
90003c14:	65ec      	str	r4, [r5, #92]	@ 0x5c
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
90003c16:	e9c5 4701 	strd	r4, r7, [r5, #4]
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
90003c1a:	e9c5 4711 	strd	r4, r7, [r5, #68]	@ 0x44
  hdma2d.LayerCfg[1].InputAlpha = 0;
90003c1e:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
90003c22:	e9c5 4415 	strd	r4, r4, [r5, #84]	@ 0x54
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
90003c26:	f003 fa5d 	bl	900070e4 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90003c2a:	4631      	mov	r1, r6
90003c2c:	4628      	mov	r0, r5
  huart3.Instance = USART3;
90003c2e:	4d56      	ldr	r5, [pc, #344]	@ (90003d88 <main+0x540>)
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
90003c30:	f003 fb2e 	bl	90007290 <HAL_DMA2D_ConfigLayer>
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003c34:	4855      	ldr	r0, [pc, #340]	@ (90003d8c <main+0x544>)
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90003c36:	2304      	movs	r3, #4
  SdramTiming.WriteRecoveryTime = 5;
90003c38:	f8cd 9044 	str.w	r9, [sp, #68]	@ 0x44
  hsdram2.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
90003c3c:	f8c0 8014 	str.w	r8, [r0, #20]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003c40:	f44f 6900 	mov.w	r9, #2048	@ 0x800
  hsdram2.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
90003c44:	60c3      	str	r3, [r0, #12]
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003c46:	f04f 0810 	mov.w	r8, #16
  SdramTiming.SelfRefreshTime = 4;
90003c4a:	930f      	str	r3, [sp, #60]	@ 0x3c
  SdramTiming.ExitSelfRefreshDelay = 7;
90003c4c:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003c4e:	a90d      	add	r1, sp, #52	@ 0x34
  SdramTiming.LoadToActiveDelay = 2;
90003c50:	970d      	str	r7, [sp, #52]	@ 0x34
  SdramTiming.ExitSelfRefreshDelay = 7;
90003c52:	930e      	str	r3, [sp, #56]	@ 0x38
  SdramTiming.RowCycleDelay = 7;
90003c54:	9310      	str	r3, [sp, #64]	@ 0x40
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003c56:	4b4e      	ldr	r3, [pc, #312]	@ (90003d90 <main+0x548>)
  hsdram2.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
90003c58:	61c4      	str	r4, [r0, #28]
  hsdram2.Instance = FMC_SDRAM_DEVICE;
90003c5a:	6003      	str	r3, [r0, #0]
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003c5c:	f44f 73c0 	mov.w	r3, #384	@ 0x180
  hsdram2.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
90003c60:	6284      	str	r4, [r0, #40]	@ 0x28
  hsdram2.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
90003c62:	6183      	str	r3, [r0, #24]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003c64:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
  hsdram2.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
90003c68:	f8c0 8010 	str.w	r8, [r0, #16]
  hsdram2.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
90003c6c:	e9c0 9308 	strd	r9, r3, [r0, #32]
  SdramTiming.RCDDelay = 2;
90003c70:	e9cd 7712 	strd	r7, r7, [sp, #72]	@ 0x48
  hsdram2.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
90003c74:	e9c0 6401 	strd	r6, r4, [r0, #4]
  if (HAL_SDRAM_Init(&hsdram2, &SdramTiming) != HAL_OK)
90003c78:	f008 fbae 	bl	9000c3d8 <HAL_SDRAM_Init>
  FMC_Bank1_R->BTCR[0] &= ~FMC_BCRx_MBKEN;
90003c7c:	4a45      	ldr	r2, [pc, #276]	@ (90003d94 <main+0x54c>)
  BSP_SDRAM_DeInit(0);
90003c7e:	4620      	mov	r0, r4
  FMC_Bank1_R->BTCR[0] &= ~FMC_BCRx_MBKEN;
90003c80:	6813      	ldr	r3, [r2, #0]
90003c82:	f023 0301 	bic.w	r3, r3, #1
90003c86:	6013      	str	r3, [r2, #0]
  BSP_SDRAM_DeInit(0);
90003c88:	f002 fe50 	bl	9000692c <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init(0) != BSP_ERROR_NONE)
90003c8c:	4620      	mov	r0, r4
90003c8e:	f002 fe97 	bl	900069c0 <BSP_SDRAM_Init>
  MX_LIBJPEG_Init();
90003c92:	f7fc ff41 	bl	90000b18 <MX_LIBJPEG_Init>
  hjpeg.Instance = JPEG;
90003c96:	4b40      	ldr	r3, [pc, #256]	@ (90003d98 <main+0x550>)
90003c98:	4840      	ldr	r0, [pc, #256]	@ (90003d9c <main+0x554>)
90003c9a:	6003      	str	r3, [r0, #0]
  if (HAL_JPEG_Init(&hjpeg) != HAL_OK)
90003c9c:	f004 ff66 	bl	90008b6c <HAL_JPEG_Init>
  hcrc.Instance = CRC;
90003ca0:	483f      	ldr	r0, [pc, #252]	@ (90003da0 <main+0x558>)
90003ca2:	4b40      	ldr	r3, [pc, #256]	@ (90003da4 <main+0x55c>)
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
90003ca4:	8084      	strh	r4, [r0, #4]
  hcrc.Instance = CRC;
90003ca6:	6003      	str	r3, [r0, #0]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
90003ca8:	6206      	str	r6, [r0, #32]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
90003caa:	e9c0 4405 	strd	r4, r4, [r0, #20]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
90003cae:	f003 f9a3 	bl	90006ff8 <HAL_CRC_Init>
  huart3.Init.BaudRate = 115200;
90003cb2:	4a3d      	ldr	r2, [pc, #244]	@ (90003da8 <main+0x560>)
90003cb4:	f44f 33e1 	mov.w	r3, #115200	@ 0x1c200
  if (HAL_UART_Init(&huart3) != HAL_OK)
90003cb8:	4628      	mov	r0, r5
  huart3.Init.Parity = UART_PARITY_NONE;
90003cba:	612c      	str	r4, [r5, #16]
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
90003cbc:	62ac      	str	r4, [r5, #40]	@ 0x28
  huart3.Init.BaudRate = 115200;
90003cbe:	e9c5 2300 	strd	r2, r3, [r5]
  huart3.Init.Mode = UART_MODE_TX_RX;
90003cc2:	230c      	movs	r3, #12
  huart3.Init.StopBits = UART_STOPBITS_1;
90003cc4:	e9c5 4402 	strd	r4, r4, [r5, #8]
  huart3.Init.Mode = UART_MODE_TX_RX;
90003cc8:	616b      	str	r3, [r5, #20]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
90003cca:	e9c5 4406 	strd	r4, r4, [r5, #24]
  huart3.Init.ClockPrescaler = UART_PRESCALER_DIV1;
90003cce:	e9c5 4408 	strd	r4, r4, [r5, #32]
  if (HAL_UART_Init(&huart3) != HAL_OK)
90003cd2:	f009 f8e5 	bl	9000cea0 <HAL_UART_Init>
  if (HAL_UARTEx_SetTxFifoThreshold(&huart3, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
90003cd6:	4621      	mov	r1, r4
90003cd8:	4628      	mov	r0, r5
90003cda:	f009 f933 	bl	9000cf44 <HAL_UARTEx_SetTxFifoThreshold>
  if (HAL_UARTEx_SetRxFifoThreshold(&huart3, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
90003cde:	4621      	mov	r1, r4
90003ce0:	4628      	mov	r0, r5
90003ce2:	f009 f971 	bl	9000cfc8 <HAL_UARTEx_SetRxFifoThreshold>
  if (HAL_UARTEx_DisableFifoMode(&huart3) != HAL_OK)
90003ce6:	4628      	mov	r0, r5
90003ce8:	f009 f90e 	bl	9000cf08 <HAL_UARTEx_DisableFifoMode>
  hi2c4.Instance = I2C4;
90003cec:	4d2f      	ldr	r5, [pc, #188]	@ (90003dac <main+0x564>)
90003cee:	4b30      	ldr	r3, [pc, #192]	@ (90003db0 <main+0x568>)
  if (HAL_I2C_Init(&hi2c4) != HAL_OK)
90003cf0:	4628      	mov	r0, r5
  hi2c4.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
90003cf2:	60ee      	str	r6, [r5, #12]
  hi2c4.Instance = I2C4;
90003cf4:	602b      	str	r3, [r5, #0]
  hi2c4.Init.Timing = 0x10707DBC;
90003cf6:	f1a3 438f 	sub.w	r3, r3, #1199570944	@ 0x47800000
  hi2c4.Init.OwnAddress1 = 0;
90003cfa:	60ac      	str	r4, [r5, #8]
  hi2c4.Init.Timing = 0x10707DBC;
90003cfc:	f5a3 2379 	sub.w	r3, r3, #1019904	@ 0xf9000
  hi2c4.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
90003d00:	622c      	str	r4, [r5, #32]
  hi2c4.Init.Timing = 0x10707DBC;
90003d02:	f6a3 6344 	subw	r3, r3, #3652	@ 0xe44
  hi2c4.Init.OwnAddress2 = 0;
90003d06:	e9c5 4404 	strd	r4, r4, [r5, #16]
  hi2c4.Init.Timing = 0x10707DBC;
90003d0a:	606b      	str	r3, [r5, #4]
  hi2c4.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
90003d0c:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c4) != HAL_OK)
90003d10:	f004 f94c 	bl	90007fac <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c4, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
90003d14:	4621      	mov	r1, r4
90003d16:	4628      	mov	r0, r5
90003d18:	f004 fbc2 	bl	900084a0 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c4, 0) != HAL_OK)
90003d1c:	4621      	mov	r1, r4
90003d1e:	4628      	mov	r0, r5
90003d20:	f004 fbe8 	bl	900084f4 <HAL_I2CEx_ConfigDigitalFilter>
  MX_TouchGFX_Init();
90003d24:	f7fc fefc 	bl	90000b20 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
90003d28:	f7fc fef8 	bl	90000b1c <MX_TouchGFX_PreOSInit>
  osKernelInitialize();
90003d2c:	f009 fa48 	bl	9000d1c0 <osKernelInitialize>
  dataQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &dataQueue_attributes);
90003d30:	4a20      	ldr	r2, [pc, #128]	@ (90003db4 <main+0x56c>)
90003d32:	4639      	mov	r1, r7
90003d34:	4640      	mov	r0, r8
90003d36:	f009 fb73 	bl	9000d420 <osMessageQueueNew>
90003d3a:	4b1f      	ldr	r3, [pc, #124]	@ (90003db8 <main+0x570>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003d3c:	4a1f      	ldr	r2, [pc, #124]	@ (90003dbc <main+0x574>)
90003d3e:	4621      	mov	r1, r4
  dataQueueHandle = osMessageQueueNew (16, sizeof(uint16_t), &dataQueue_attributes);
90003d40:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003d42:	481f      	ldr	r0, [pc, #124]	@ (90003dc0 <main+0x578>)
90003d44:	f009 fa68 	bl	9000d218 <osThreadNew>
90003d48:	4b1e      	ldr	r3, [pc, #120]	@ (90003dc4 <main+0x57c>)
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003d4a:	4a1f      	ldr	r2, [pc, #124]	@ (90003dc8 <main+0x580>)
90003d4c:	4621      	mov	r1, r4
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
90003d4e:	6018      	str	r0, [r3, #0]
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003d50:	481e      	ldr	r0, [pc, #120]	@ (90003dcc <main+0x584>)
90003d52:	f009 fa61 	bl	9000d218 <osThreadNew>
90003d56:	4b1e      	ldr	r3, [pc, #120]	@ (90003dd0 <main+0x588>)
  initTaskHandle = osThreadNew(InitializeEquipment, NULL, &initTask_attributes);
90003d58:	4a1e      	ldr	r2, [pc, #120]	@ (90003dd4 <main+0x58c>)
90003d5a:	4621      	mov	r1, r4
  GUITaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUITask_attributes);
90003d5c:	6018      	str	r0, [r3, #0]
  initTaskHandle = osThreadNew(InitializeEquipment, NULL, &initTask_attributes);
90003d5e:	481e      	ldr	r0, [pc, #120]	@ (90003dd8 <main+0x590>)
90003d60:	f009 fa5a 	bl	9000d218 <osThreadNew>
90003d64:	4b1d      	ldr	r3, [pc, #116]	@ (90003ddc <main+0x594>)
90003d66:	4605      	mov	r5, r0
  calcDataHandle = osThreadNew(CalculateData, NULL, &calcData_attributes);
90003d68:	4a1d      	ldr	r2, [pc, #116]	@ (90003de0 <main+0x598>)
90003d6a:	4621      	mov	r1, r4
90003d6c:	481d      	ldr	r0, [pc, #116]	@ (90003de4 <main+0x59c>)
  initTaskHandle = osThreadNew(InitializeEquipment, NULL, &initTask_attributes);
90003d6e:	601d      	str	r5, [r3, #0]
  calcDataHandle = osThreadNew(CalculateData, NULL, &calcData_attributes);
90003d70:	f009 fa52 	bl	9000d218 <osThreadNew>
90003d74:	4b1c      	ldr	r3, [pc, #112]	@ (90003de8 <main+0x5a0>)
90003d76:	6018      	str	r0, [r3, #0]
  osKernelStart();
90003d78:	f009 fa34 	bl	9000d1e4 <osKernelStart>
  while (1)
90003d7c:	e7fe      	b.n	90003d7c <main+0x534>
90003d7e:	bf00      	nop
90003d80:	24007788 	.word	0x24007788
90003d84:	52001000 	.word	0x52001000
90003d88:	2400751c 	.word	0x2400751c
90003d8c:	240074e8 	.word	0x240074e8
90003d90:	52004140 	.word	0x52004140
90003d94:	52004000 	.word	0x52004000
90003d98:	52003000 	.word	0x52003000
90003d9c:	24007730 	.word	0x24007730
90003da0:	240077f0 	.word	0x240077f0
90003da4:	58024c00 	.word	0x58024c00
90003da8:	40004800 	.word	0x40004800
90003dac:	24007494 	.word	0x24007494
90003db0:	58001c00 	.word	0x58001c00
90003db4:	9002c5f4 	.word	0x9002c5f4
90003db8:	24007480 	.word	0x24007480
90003dbc:	9002c678 	.word	0x9002c678
90003dc0:	90003775 	.word	0x90003775
90003dc4:	24007490 	.word	0x24007490
90003dc8:	9002c654 	.word	0x9002c654
90003dcc:	90000b31 	.word	0x90000b31
90003dd0:	2400748c 	.word	0x2400748c
90003dd4:	9002c630 	.word	0x9002c630
90003dd8:	90003781 	.word	0x90003781
90003ddc:	24007488 	.word	0x24007488
90003de0:	9002c60c 	.word	0x9002c60c
90003de4:	9000378d 	.word	0x9000378d
90003de8:	24007484 	.word	0x24007484

90003dec <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6)
90003dec:	4b03      	ldr	r3, [pc, #12]	@ (90003dfc <HAL_TIM_PeriodElapsedCallback+0x10>)
90003dee:	6802      	ldr	r2, [r0, #0]
90003df0:	429a      	cmp	r2, r3
90003df2:	d000      	beq.n	90003df6 <HAL_TIM_PeriodElapsedCallback+0xa>
    HAL_IncTick();
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
90003df4:	4770      	bx	lr
    HAL_IncTick();
90003df6:	f003 b82b 	b.w	90006e50 <HAL_IncTick>
90003dfa:	bf00      	nop
90003dfc:	40001000 	.word	0x40001000

90003e00 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
90003e00:	4770      	bx	lr
90003e02:	bf00      	nop

90003e04 <HAL_MspInit>:

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003e04:	4b0b      	ldr	r3, [pc, #44]	@ (90003e34 <HAL_MspInit+0x30>)

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90003e06:	2200      	movs	r2, #0
90003e08:	210f      	movs	r1, #15
90003e0a:	f06f 0001 	mvn.w	r0, #1
{
90003e0e:	b410      	push	{r4}
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003e10:	f8d3 40f4 	ldr.w	r4, [r3, #244]	@ 0xf4
{
90003e14:	b083      	sub	sp, #12
  __HAL_RCC_SYSCFG_CLK_ENABLE();
90003e16:	f044 0402 	orr.w	r4, r4, #2
90003e1a:	f8c3 40f4 	str.w	r4, [r3, #244]	@ 0xf4
90003e1e:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
90003e22:	f003 0302 	and.w	r3, r3, #2
90003e26:	9301      	str	r3, [sp, #4]
90003e28:	9b01      	ldr	r3, [sp, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
90003e2a:	b003      	add	sp, #12
90003e2c:	f85d 4b04 	ldr.w	r4, [sp], #4
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
90003e30:	f003 b838 	b.w	90006ea4 <HAL_NVIC_SetPriority>
90003e34:	58024400 	.word	0x58024400

90003e38 <HAL_CRC_MspInit>:
  * @param hcrc: CRC handle pointer
  * @retval None
  */
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
90003e38:	4b0a      	ldr	r3, [pc, #40]	@ (90003e64 <HAL_CRC_MspInit+0x2c>)
90003e3a:	6802      	ldr	r2, [r0, #0]
90003e3c:	429a      	cmp	r2, r3
90003e3e:	d000      	beq.n	90003e42 <HAL_CRC_MspInit+0xa>
90003e40:	4770      	bx	lr
  {
    /* USER CODE BEGIN CRC_MspInit 0 */

    /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
90003e42:	f5a3 6300 	sub.w	r3, r3, #2048	@ 0x800
{
90003e46:	b082      	sub	sp, #8
    __HAL_RCC_CRC_CLK_ENABLE();
90003e48:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90003e4c:	f442 2200 	orr.w	r2, r2, #524288	@ 0x80000
90003e50:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90003e54:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
90003e58:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
90003e5c:	9301      	str	r3, [sp, #4]
90003e5e:	9b01      	ldr	r3, [sp, #4]

    /* USER CODE END CRC_MspInit 1 */

  }

}
90003e60:	b002      	add	sp, #8
90003e62:	4770      	bx	lr
90003e64:	58024c00 	.word	0x58024c00

90003e68 <HAL_DMA2D_MspInit>:
  * @param hdma2d: DMA2D handle pointer
  * @retval None
  */
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
  if(hdma2d->Instance==DMA2D)
90003e68:	4b0f      	ldr	r3, [pc, #60]	@ (90003ea8 <HAL_DMA2D_MspInit+0x40>)
90003e6a:	6802      	ldr	r2, [r0, #0]
90003e6c:	429a      	cmp	r2, r3
90003e6e:	d000      	beq.n	90003e72 <HAL_DMA2D_MspInit+0xa>
90003e70:	4770      	bx	lr
  {
    /* USER CODE BEGIN DMA2D_MspInit 0 */

    /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003e72:	4b0e      	ldr	r3, [pc, #56]	@ (90003eac <HAL_DMA2D_MspInit+0x44>)
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90003e74:	2200      	movs	r2, #0
90003e76:	2105      	movs	r1, #5
90003e78:	205a      	movs	r0, #90	@ 0x5a
{
90003e7a:	b510      	push	{r4, lr}
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003e7c:	f8d3 40d4 	ldr.w	r4, [r3, #212]	@ 0xd4
{
90003e80:	b082      	sub	sp, #8
    __HAL_RCC_DMA2D_CLK_ENABLE();
90003e82:	f044 0410 	orr.w	r4, r4, #16
90003e86:	f8c3 40d4 	str.w	r4, [r3, #212]	@ 0xd4
90003e8a:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
90003e8e:	f003 0310 	and.w	r3, r3, #16
90003e92:	9301      	str	r3, [sp, #4]
90003e94:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
90003e96:	f003 f805 	bl	90006ea4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90003e9a:	205a      	movs	r0, #90	@ 0x5a

    /* USER CODE END DMA2D_MspInit 1 */

  }

}
90003e9c:	b002      	add	sp, #8
90003e9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
90003ea2:	f003 b83b 	b.w	90006f1c <HAL_NVIC_EnableIRQ>
90003ea6:	bf00      	nop
90003ea8:	52001000 	.word	0x52001000
90003eac:	58024400 	.word	0x58024400

90003eb0 <HAL_JPEG_MspInit>:
  * @param hjpeg: JPEG handle pointer
  * @retval None
  */
void HAL_JPEG_MspInit(JPEG_HandleTypeDef* hjpeg)
{
  if(hjpeg->Instance==JPEG)
90003eb0:	4b3f      	ldr	r3, [pc, #252]	@ (90003fb0 <HAL_JPEG_MspInit+0x100>)
90003eb2:	6802      	ldr	r2, [r0, #0]
90003eb4:	429a      	cmp	r2, r3
90003eb6:	d000      	beq.n	90003eba <HAL_JPEG_MspInit+0xa>
90003eb8:	4770      	bx	lr
{
90003eba:	b570      	push	{r4, r5, r6, lr}
    /* USER CODE BEGIN JPEG_MspInit 0 */
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
    /* USER CODE END JPEG_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_JPEG_CLK_ENABLE();
90003ebc:	4b3d      	ldr	r3, [pc, #244]	@ (90003fb4 <HAL_JPEG_MspInit+0x104>)
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90003ebe:	2211      	movs	r2, #17
90003ec0:	4e3d      	ldr	r6, [pc, #244]	@ (90003fb8 <HAL_JPEG_MspInit+0x108>)
{
90003ec2:	b082      	sub	sp, #8
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003ec4:	4d3d      	ldr	r5, [pc, #244]	@ (90003fbc <HAL_JPEG_MspInit+0x10c>)
90003ec6:	4604      	mov	r4, r0
	 hmdma_jpeg_infifo_th.Init.Request = MDMA_REQUEST_JPEG_INFIFO_TH;
90003ec8:	6072      	str	r2, [r6, #4]
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
    hmdma_jpeg_infifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
    hmdma_jpeg_infifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90003eca:	4630      	mov	r0, r6
    __HAL_RCC_JPEG_CLK_ENABLE();
90003ecc:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90003ed0:	493b      	ldr	r1, [pc, #236]	@ (90003fc0 <HAL_JPEG_MspInit+0x110>)
    __HAL_RCC_JPEG_CLK_ENABLE();
90003ed2:	f042 0220 	orr.w	r2, r2, #32
90003ed6:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90003eda:	2280      	movs	r2, #128	@ 0x80
    __HAL_RCC_JPEG_CLK_ENABLE();
90003edc:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
    hmdma_jpeg_infifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90003ee0:	6232      	str	r2, [r6, #32]
    __HAL_RCC_JPEG_CLK_ENABLE();
90003ee2:	f003 0320 	and.w	r3, r3, #32
    hmdma_jpeg_infifo_th.Instance = MDMA_Channel7;
90003ee6:	6031      	str	r1, [r6, #0]
    __HAL_RCC_JPEG_CLK_ENABLE();
90003ee8:	9301      	str	r3, [sp, #4]
    hmdma_jpeg_infifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003eea:	2300      	movs	r3, #0
    __HAL_RCC_JPEG_CLK_ENABLE();
90003eec:	9901      	ldr	r1, [sp, #4]
    hmdma_jpeg_infifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
90003eee:	6133      	str	r3, [r6, #16]
    hmdma_jpeg_infifo_th.Init.Priority = MDMA_PRIORITY_HIGH;
90003ef0:	e9c6 3202 	strd	r3, r2, [r6, #8]
    hmdma_jpeg_infifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90003ef4:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
90003ef8:	6272      	str	r2, [r6, #36]	@ 0x24
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90003efa:	2220      	movs	r2, #32
    hmdma_jpeg_infifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_BYTE;
90003efc:	e9c6 3306 	strd	r3, r3, [r6, #24]
    hmdma_jpeg_infifo_th.Init.SourceBlockAddressOffset = 0;
90003f00:	e9c6 330d 	strd	r3, r3, [r6, #52]	@ 0x34
    hmdma_jpeg_infifo_th.Init.BufferTransferLength = 32;
90003f04:	62b2      	str	r2, [r6, #40]	@ 0x28
    hmdma_jpeg_infifo_th.Init.DestBurst = MDMA_DEST_BURST_16BEATS;
90003f06:	f44f 3300 	mov.w	r3, #131072	@ 0x20000
90003f0a:	f44f 42a0 	mov.w	r2, #20480	@ 0x5000
90003f0e:	e9c6 230b 	strd	r2, r3, [r6, #44]	@ 0x2c
	 hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003f12:	2313      	movs	r3, #19
90003f14:	606b      	str	r3, [r5, #4]
    hmdma_jpeg_infifo_th.Init.SourceInc = MDMA_SRC_INC_BYTE;
90003f16:	2302      	movs	r3, #2
90003f18:	6173      	str	r3, [r6, #20]
    if (HAL_MDMA_Init(&hmdma_jpeg_infifo_th) != HAL_OK)
90003f1a:	f006 f879 	bl	9000a010 <HAL_MDMA_Init>
90003f1e:	2800      	cmp	r0, #0
90003f20:	d13a      	bne.n	90003f98 <HAL_JPEG_MspInit+0xe8>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_infifo_th, 0, 0) != HAL_OK)
90003f22:	2200      	movs	r2, #0
90003f24:	4824      	ldr	r0, [pc, #144]	@ (90003fb8 <HAL_JPEG_MspInit+0x108>)
90003f26:	4611      	mov	r1, r2
90003f28:	f006 f910 	bl	9000a14c <HAL_MDMA_ConfigPostRequestMask>
90003f2c:	2800      	cmp	r0, #0
90003f2e:	d13c      	bne.n	90003faa <HAL_JPEG_MspInit+0xfa>
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
    hmdma_jpeg_outfifo_th.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90003f30:	2220      	movs	r2, #32
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003f32:	2300      	movs	r3, #0
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90003f34:	6326      	str	r6, [r4, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.Request = MDMA_REQUEST_JPEG_OUTFIFO_TH;
90003f36:	2013      	movs	r0, #19
    hmdma_jpeg_outfifo_th.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90003f38:	61ea      	str	r2, [r5, #28]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
    hmdma_jpeg_outfifo_th.Init.BufferTransferLength = 32;
90003f3a:	62aa      	str	r2, [r5, #40]	@ 0x28
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003f3c:	f44f 3220 	mov.w	r2, #163840	@ 0x28000
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90003f40:	4920      	ldr	r1, [pc, #128]	@ (90003fc4 <HAL_JPEG_MspInit+0x114>)
    hmdma_jpeg_outfifo_th.Init.TransferTriggerMode = MDMA_BUFFER_TRANSFER;
90003f42:	60ab      	str	r3, [r5, #8]
    hmdma_jpeg_outfifo_th.Init.DestDataSize = MDMA_DEST_DATASIZE_BYTE;
90003f44:	622b      	str	r3, [r5, #32]
    hmdma_jpeg_outfifo_th.Init.SourceBlockAddressOffset = 0;
90003f46:	63ab      	str	r3, [r5, #56]	@ 0x38
    __HAL_LINKDMA(hjpeg,hdmain,hmdma_jpeg_infifo_th);
90003f48:	6434      	str	r4, [r6, #64]	@ 0x40
    hmdma_jpeg_outfifo_th.Init.DestBurst = MDMA_DEST_BURST_32BEATS;
90003f4a:	e9c5 230c 	strd	r2, r3, [r5, #48]	@ 0x30
    hmdma_jpeg_outfifo_th.Init.SourceInc = MDMA_SRC_INC_DISABLE;
90003f4e:	e9c5 3304 	strd	r3, r3, [r5, #16]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
90003f52:	2308      	movs	r3, #8
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90003f54:	22c0      	movs	r2, #192	@ 0xc0
    hmdma_jpeg_outfifo_th.Instance = MDMA_Channel6;
90003f56:	e9c5 1000 	strd	r1, r0, [r5]
    hmdma_jpeg_outfifo_th.Init.DestinationInc = MDMA_DEST_INC_BYTE;
90003f5a:	61ab      	str	r3, [r5, #24]
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90003f5c:	f44f 41a0 	mov.w	r1, #20480	@ 0x5000
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90003f60:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
    hmdma_jpeg_outfifo_th.Init.DestBlockAddressOffset = 0;
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90003f64:	4815      	ldr	r0, [pc, #84]	@ (90003fbc <HAL_JPEG_MspInit+0x10c>)
    hmdma_jpeg_outfifo_th.Init.SourceBurst = MDMA_SOURCE_BURST_32BEATS;
90003f66:	62e9      	str	r1, [r5, #44]	@ 0x2c
    hmdma_jpeg_outfifo_th.Init.Priority = MDMA_PRIORITY_VERY_HIGH;
90003f68:	60ea      	str	r2, [r5, #12]
    hmdma_jpeg_outfifo_th.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90003f6a:	626b      	str	r3, [r5, #36]	@ 0x24
    if (HAL_MDMA_Init(&hmdma_jpeg_outfifo_th) != HAL_OK)
90003f6c:	f006 f850 	bl	9000a010 <HAL_MDMA_Init>
90003f70:	b9c0      	cbnz	r0, 90003fa4 <HAL_JPEG_MspInit+0xf4>
    {
      Error_Handler();
    }

    if (HAL_MDMA_ConfigPostRequestMask(&hmdma_jpeg_outfifo_th, 0, 0) != HAL_OK)
90003f72:	2200      	movs	r2, #0
90003f74:	4811      	ldr	r0, [pc, #68]	@ (90003fbc <HAL_JPEG_MspInit+0x10c>)
90003f76:	4611      	mov	r1, r2
90003f78:	f006 f8e8 	bl	9000a14c <HAL_MDMA_ConfigPostRequestMask>
90003f7c:	b978      	cbnz	r0, 90003f9e <HAL_JPEG_MspInit+0xee>
    {
      Error_Handler();
    }

    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
90003f7e:	6365      	str	r5, [r4, #52]	@ 0x34

    /* JPEG interrupt Init */
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90003f80:	2200      	movs	r2, #0
90003f82:	2105      	movs	r1, #5
90003f84:	2079      	movs	r0, #121	@ 0x79
    __HAL_LINKDMA(hjpeg,hdmaout,hmdma_jpeg_outfifo_th);
90003f86:	642c      	str	r4, [r5, #64]	@ 0x40
    HAL_NVIC_SetPriority(JPEG_IRQn, 5, 0);
90003f88:	f002 ff8c 	bl	90006ea4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90003f8c:	2079      	movs	r0, #121	@ 0x79

    /* USER CODE END JPEG_MspInit 1 */

  }

}
90003f8e:	b002      	add	sp, #8
90003f90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_NVIC_EnableIRQ(JPEG_IRQn);
90003f94:	f002 bfc2 	b.w	90006f1c <HAL_NVIC_EnableIRQ>
      Error_Handler();
90003f98:	f7ff ff32 	bl	90003e00 <Error_Handler>
90003f9c:	e7c1      	b.n	90003f22 <HAL_JPEG_MspInit+0x72>
      Error_Handler();
90003f9e:	f7ff ff2f 	bl	90003e00 <Error_Handler>
90003fa2:	e7ec      	b.n	90003f7e <HAL_JPEG_MspInit+0xce>
      Error_Handler();
90003fa4:	f7ff ff2c 	bl	90003e00 <Error_Handler>
90003fa8:	e7e3      	b.n	90003f72 <HAL_JPEG_MspInit+0xc2>
      Error_Handler();
90003faa:	f7ff ff29 	bl	90003e00 <Error_Handler>
90003fae:	e7bf      	b.n	90003f30 <HAL_JPEG_MspInit+0x80>
90003fb0:	52003000 	.word	0x52003000
90003fb4:	58024400 	.word	0x58024400
90003fb8:	240076c4 	.word	0x240076c4
90003fbc:	24007658 	.word	0x24007658
90003fc0:	52000200 	.word	0x52000200
90003fc4:	520001c0 	.word	0x520001c0

90003fc8 <HAL_LTDC_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hltdc: LTDC handle pointer
  * @retval None
  */
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
90003fc8:	b570      	push	{r4, r5, r6, lr}
90003fca:	b0ba      	sub	sp, #232	@ 0xe8
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003fcc:	2100      	movs	r1, #0
{
90003fce:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003fd0:	22c0      	movs	r2, #192	@ 0xc0
90003fd2:	a80a      	add	r0, sp, #40	@ 0x28
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90003fd4:	9109      	str	r1, [sp, #36]	@ 0x24
90003fd6:	e9cd 1105 	strd	r1, r1, [sp, #20]
90003fda:	e9cd 1107 	strd	r1, r1, [sp, #28]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90003fde:	f025 fd5f 	bl	90029aa0 <memset>
  if(hltdc->Instance==LTDC)
90003fe2:	4b4a      	ldr	r3, [pc, #296]	@ (9000410c <HAL_LTDC_MspInit+0x144>)
90003fe4:	6822      	ldr	r2, [r4, #0]
90003fe6:	429a      	cmp	r2, r3
90003fe8:	d001      	beq.n	90003fee <HAL_LTDC_MspInit+0x26>

    /* USER CODE END LTDC_MspInit 1 */

  }

}
90003fea:	b03a      	add	sp, #232	@ 0xe8
90003fec:	bd70      	pop	{r4, r5, r6, pc}
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90003fee:	2302      	movs	r3, #2
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90003ff0:	2205      	movs	r2, #5
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
90003ff2:	f04f 5400 	mov.w	r4, #536870912	@ 0x20000000
90003ff6:	2500      	movs	r5, #0
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90003ff8:	21a0      	movs	r1, #160	@ 0xa0
    PeriphClkInitStruct.PLL3.PLL3P = 2;
90003ffa:	9316      	str	r3, [sp, #88]	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3M = 5;
90003ffc:	9214      	str	r2, [sp, #80]	@ 0x50
    PeriphClkInitStruct.PLL3.PLL3R = 88;
90003ffe:	2258      	movs	r2, #88	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
90004000:	9317      	str	r3, [sp, #92]	@ 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 88;
90004002:	f44f 6300 	mov.w	r3, #2048	@ 0x800
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004006:	a80a      	add	r0, sp, #40	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3N = 160;
90004008:	9115      	str	r1, [sp, #84]	@ 0x54
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
9000400a:	e9cd 450a 	strd	r4, r5, [sp, #40]	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3R = 88;
9000400e:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004012:	f007 f957 	bl	9000b2c4 <HAL_RCCEx_PeriphCLKConfig>
90004016:	2800      	cmp	r0, #0
90004018:	d174      	bne.n	90004104 <HAL_LTDC_MspInit+0x13c>
    __HAL_RCC_LTDC_CLK_ENABLE();
9000401a:	4b3d      	ldr	r3, [pc, #244]	@ (90004110 <HAL_LTDC_MspInit+0x148>)
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
9000401c:	21fc      	movs	r1, #252	@ 0xfc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
9000401e:	2402      	movs	r4, #2
    GPIO_InitStruct.Pull = GPIO_NOPULL;
90004020:	2500      	movs	r5, #0
    __HAL_RCC_LTDC_CLK_ENABLE();
90004022:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
90004026:	260e      	movs	r6, #14
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90004028:	483a      	ldr	r0, [pc, #232]	@ (90004114 <HAL_LTDC_MspInit+0x14c>)
    __HAL_RCC_LTDC_CLK_ENABLE();
9000402a:	f042 0208 	orr.w	r2, r2, #8
9000402e:	f8c3 20e4 	str.w	r2, [r3, #228]	@ 0xe4
90004032:	f8d3 20e4 	ldr.w	r2, [r3, #228]	@ 0xe4
90004036:	f002 0208 	and.w	r2, r2, #8
9000403a:	9200      	str	r2, [sp, #0]
9000403c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOK_CLK_ENABLE();
9000403e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004042:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
90004046:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000404a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000404e:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
90004052:	9201      	str	r2, [sp, #4]
90004054:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOI_CLK_ENABLE();
90004056:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000405a:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
9000405e:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004062:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004066:	f402 7280 	and.w	r2, r2, #256	@ 0x100
9000406a:	9202      	str	r2, [sp, #8]
9000406c:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
9000406e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004072:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
90004076:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000407a:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000407e:	f402 7200 	and.w	r2, r2, #512	@ 0x200
90004082:	9203      	str	r2, [sp, #12]
90004084:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOH_CLK_ENABLE();
90004086:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
9000408a:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
9000408e:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90004092:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_3
90004096:	9105      	str	r1, [sp, #20]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
90004098:	a905      	add	r1, sp, #20
    __HAL_RCC_GPIOH_CLK_ENABLE();
9000409a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
9000409e:	9406      	str	r4, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900040a0:	9609      	str	r6, [sp, #36]	@ 0x24
    __HAL_RCC_GPIOH_CLK_ENABLE();
900040a2:	9304      	str	r3, [sp, #16]
900040a4:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900040a6:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
900040aa:	f003 f95b 	bl	90007364 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
900040ae:	f24d 2303 	movw	r3, #53763	@ 0xd203
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
900040b2:	a905      	add	r1, sp, #20
900040b4:	4818      	ldr	r0, [pc, #96]	@ (90004118 <HAL_LTDC_MspInit+0x150>)
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_9|GPIO_PIN_12
900040b6:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900040b8:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900040bc:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
900040c0:	f003 f950 	bl	90007364 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
900040c4:	f64f 73fb 	movw	r3, #65531	@ 0xfffb
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
900040c8:	a905      	add	r1, sp, #20
900040ca:	4814      	ldr	r0, [pc, #80]	@ (9000411c <HAL_LTDC_MspInit+0x154>)
    GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_14|GPIO_PIN_12|GPIO_PIN_13
900040cc:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
900040ce:	e9cd 4506 	strd	r4, r5, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900040d2:	e9cd 4608 	strd	r4, r6, [sp, #32]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
900040d6:	f003 f945 	bl	90007364 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_9;
900040da:	f44f 7300 	mov.w	r3, #512	@ 0x200
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900040de:	a905      	add	r1, sp, #20
900040e0:	480f      	ldr	r0, [pc, #60]	@ (90004120 <HAL_LTDC_MspInit+0x158>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
900040e2:	9609      	str	r6, [sp, #36]	@ 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_9;
900040e4:	e9cd 3405 	strd	r3, r4, [sp, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
900040e8:	e9cd 5407 	strd	r5, r4, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900040ec:	f003 f93a 	bl	90007364 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
900040f0:	462a      	mov	r2, r5
900040f2:	2105      	movs	r1, #5
900040f4:	2058      	movs	r0, #88	@ 0x58
900040f6:	f002 fed5 	bl	90006ea4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
900040fa:	2058      	movs	r0, #88	@ 0x58
900040fc:	f002 ff0e 	bl	90006f1c <HAL_NVIC_EnableIRQ>
}
90004100:	b03a      	add	sp, #232	@ 0xe8
90004102:	bd70      	pop	{r4, r5, r6, pc}
      Error_Handler();
90004104:	f7ff fe7c 	bl	90003e00 <Error_Handler>
90004108:	e787      	b.n	9000401a <HAL_LTDC_MspInit+0x52>
9000410a:	bf00      	nop
9000410c:	50001000 	.word	0x50001000
90004110:	58024400 	.word	0x58024400
90004114:	58022800 	.word	0x58022800
90004118:	58022000 	.word	0x58022000
9000411c:	58022400 	.word	0x58022400
90004120:	58021c00 	.word	0x58021c00
90004124:	00000000 	.word	0x00000000

90004128 <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
90004128:	b510      	push	{r4, lr}
9000412a:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
9000412c:	2100      	movs	r1, #0
{
9000412e:	4604      	mov	r4, r0
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
90004130:	22c0      	movs	r2, #192	@ 0xc0
90004132:	a808      	add	r0, sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
90004134:	9106      	str	r1, [sp, #24]
90004136:	e9cd 1102 	strd	r1, r1, [sp, #8]
9000413a:	e9cd 1104 	strd	r1, r1, [sp, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
9000413e:	f025 fcaf 	bl	90029aa0 <memset>
  if(huart->Instance==USART3)
90004142:	4b21      	ldr	r3, [pc, #132]	@ (900041c8 <HAL_UART_MspInit+0xa0>)
90004144:	6822      	ldr	r2, [r4, #0]
90004146:	429a      	cmp	r2, r3
90004148:	d001      	beq.n	9000414e <HAL_UART_MspInit+0x26>

    /* USER CODE END USART3_MspInit 1 */

  }

}
9000414a:	b038      	add	sp, #224	@ 0xe0
9000414c:	bd10      	pop	{r4, pc}
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3;
9000414e:	2202      	movs	r2, #2
90004150:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004152:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3;
90004154:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004158:	f007 f8b4 	bl	9000b2c4 <HAL_RCCEx_PeriphCLKConfig>
9000415c:	bb40      	cbnz	r0, 900041b0 <HAL_UART_MspInit+0x88>
    __HAL_RCC_USART3_CLK_ENABLE();
9000415e:	4b1b      	ldr	r3, [pc, #108]	@ (900041cc <HAL_UART_MspInit+0xa4>)
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
90004160:	2407      	movs	r4, #7
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
90004162:	a902      	add	r1, sp, #8
90004164:	481a      	ldr	r0, [pc, #104]	@ (900041d0 <HAL_UART_MspInit+0xa8>)
    __HAL_RCC_USART3_CLK_ENABLE();
90004166:	f8d3 20e8 	ldr.w	r2, [r3, #232]	@ 0xe8
9000416a:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
9000416e:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
90004172:	f8d3 20e8 	ldr.w	r2, [r3, #232]	@ 0xe8
90004176:	f402 2280 	and.w	r2, r2, #262144	@ 0x40000
9000417a:	9200      	str	r2, [sp, #0]
9000417c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOC_CLK_ENABLE();
9000417e:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90004182:	f042 0204 	orr.w	r2, r2, #4
90004186:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
9000418a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
9000418e:	9406      	str	r4, [sp, #24]
    __HAL_RCC_GPIOC_CLK_ENABLE();
90004190:	f003 0304 	and.w	r3, r3, #4
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
90004194:	ed9f 7b08 	vldr	d7, [pc, #32]	@ 900041b8 <HAL_UART_MspInit+0x90>
    __HAL_RCC_GPIOC_CLK_ENABLE();
90004198:	9301      	str	r3, [sp, #4]
9000419a:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
9000419c:	ed8d 7b02 	vstr	d7, [sp, #8]
900041a0:	ed9f 7b07 	vldr	d7, [pc, #28]	@ 900041c0 <HAL_UART_MspInit+0x98>
900041a4:	ed8d 7b04 	vstr	d7, [sp, #16]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
900041a8:	f003 f8dc 	bl	90007364 <HAL_GPIO_Init>
}
900041ac:	b038      	add	sp, #224	@ 0xe0
900041ae:	bd10      	pop	{r4, pc}
      Error_Handler();
900041b0:	f7ff fe26 	bl	90003e00 <Error_Handler>
900041b4:	e7d3      	b.n	9000415e <HAL_UART_MspInit+0x36>
900041b6:	bf00      	nop
900041b8:	00000c00 	.word	0x00000c00
900041bc:	00000002 	.word	0x00000002
	...
900041c8:	40004800 	.word	0x40004800
900041cc:	58024400 	.word	0x58024400
900041d0:	58020800 	.word	0x58020800

900041d4 <HAL_SDRAM_MspInit>:
static void HAL_FMC_MspInit(void){
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct ={0};
  if (FMC_Initialized) {
900041d4:	4836      	ldr	r0, [pc, #216]	@ (900042b0 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitTypeDef GPIO_InitStruct ={0};
900041d6:	2300      	movs	r3, #0
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
900041d8:	b5d0      	push	{r4, r6, r7, lr}
  if (FMC_Initialized) {
900041da:	6801      	ldr	r1, [r0, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
900041dc:	b0b8      	sub	sp, #224	@ 0xe0
  GPIO_InitTypeDef GPIO_InitStruct ={0};
900041de:	e9cd 3302 	strd	r3, r3, [sp, #8]
900041e2:	e9cd 3304 	strd	r3, r3, [sp, #16]
900041e6:	9306      	str	r3, [sp, #24]
  if (FMC_Initialized) {
900041e8:	b109      	cbz	r1, 900041ee <HAL_SDRAM_MspInit+0x1a>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
900041ea:	b038      	add	sp, #224	@ 0xe0
900041ec:	bdd0      	pop	{r4, r6, r7, pc}
  FMC_Initialized = 1;
900041ee:	2301      	movs	r3, #1
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900041f0:	22b8      	movs	r2, #184	@ 0xb8
  FMC_Initialized = 1;
900041f2:	6003      	str	r3, [r0, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
900041f4:	a80a      	add	r0, sp, #40	@ 0x28
900041f6:	f025 fc53 	bl	90029aa0 <memset>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
900041fa:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
900041fe:	2300      	movs	r3, #0
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004200:	a808      	add	r0, sp, #32
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
90004202:	e9cd 2308 	strd	r2, r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
90004206:	f007 f85d 	bl	9000b2c4 <HAL_RCCEx_PeriphCLKConfig>
9000420a:	2800      	cmp	r0, #0
9000420c:	d14c      	bne.n	900042a8 <HAL_SDRAM_MspInit+0xd4>
  __HAL_RCC_FMC_CLK_ENABLE();
9000420e:	4b29      	ldr	r3, [pc, #164]	@ (900042b4 <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004210:	f64f 7083 	movw	r0, #65411	@ 0xff83
90004214:	2102      	movs	r1, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004216:	240c      	movs	r4, #12
  __HAL_RCC_FMC_CLK_ENABLE();
90004218:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000421c:	2600      	movs	r6, #0
9000421e:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
90004220:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
90004224:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
90004228:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
9000422c:	9406      	str	r4, [sp, #24]
  __HAL_RCC_FMC_CLK_ENABLE();
9000422e:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
90004232:	e9cd 0102 	strd	r0, r1, [sp, #8]
  __HAL_RCC_FMC_CLK_ENABLE();
90004236:	9301      	str	r3, [sp, #4]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90004238:	a902      	add	r1, sp, #8
9000423a:	481f      	ldr	r0, [pc, #124]	@ (900042b8 <HAL_SDRAM_MspInit+0xe4>)
  __HAL_RCC_FMC_CLK_ENABLE();
9000423c:	9b01      	ldr	r3, [sp, #4]
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
9000423e:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
90004242:	f003 f88f 	bl	90007364 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90004246:	f248 1233 	movw	r2, #33075	@ 0x8133
9000424a:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
9000424c:	a902      	add	r1, sp, #8
9000424e:	481b      	ldr	r0, [pc, #108]	@ (900042bc <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004250:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
90004252:	e9cd 2302 	strd	r2, r3, [sp, #8]
90004256:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
9000425a:	f003 f883 	bl	90007364 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000425e:	f24c 7203 	movw	r2, #50947	@ 0xc703
90004262:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90004264:	a902      	add	r1, sp, #8
90004266:	4816      	ldr	r0, [pc, #88]	@ (900042c0 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004268:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
9000426a:	e9cd 2302 	strd	r2, r3, [sp, #8]
9000426e:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
90004272:	f003 f877 	bl	90007364 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90004276:	f64f 023f 	movw	r2, #63551	@ 0xf83f
9000427a:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
9000427c:	a902      	add	r1, sp, #8
9000427e:	4811      	ldr	r0, [pc, #68]	@ (900042c4 <HAL_SDRAM_MspInit+0xf0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004280:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90004282:	e9cd 2302 	strd	r2, r3, [sp, #8]
90004286:	e9cd 6704 	strd	r6, r7, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
9000428a:	f003 f86b 	bl	90007364 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
9000428e:	22e0      	movs	r2, #224	@ 0xe0
90004290:	2302      	movs	r3, #2
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
90004292:	a902      	add	r1, sp, #8
90004294:	480c      	ldr	r0, [pc, #48]	@ (900042c8 <HAL_SDRAM_MspInit+0xf4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
90004296:	9406      	str	r4, [sp, #24]
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7;
90004298:	e9cd 6704 	strd	r6, r7, [sp, #16]
9000429c:	e9cd 2302 	strd	r2, r3, [sp, #8]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
900042a0:	f003 f860 	bl	90007364 <HAL_GPIO_Init>
}
900042a4:	b038      	add	sp, #224	@ 0xe0
900042a6:	bdd0      	pop	{r4, r6, r7, pc}
      Error_Handler();
900042a8:	f7ff fdaa 	bl	90003e00 <Error_Handler>
900042ac:	e7af      	b.n	9000420e <HAL_SDRAM_MspInit+0x3a>
900042ae:	bf00      	nop
900042b0:	24007818 	.word	0x24007818
900042b4:	58024400 	.word	0x58024400
900042b8:	58021000 	.word	0x58021000
900042bc:	58021800 	.word	0x58021800
900042c0:	58020c00 	.word	0x58020c00
900042c4:	58021400 	.word	0x58021400
900042c8:	58021c00 	.word	0x58021c00

900042cc <HAL_SDRAM_MspDeInit>:

static void HAL_FMC_MspDeInit(void){
  /* USER CODE BEGIN FMC_MspDeInit 0 */

  /* USER CODE END FMC_MspDeInit 0 */
  if (FMC_DeInitialized) {
900042cc:	4b13      	ldr	r3, [pc, #76]	@ (9000431c <HAL_SDRAM_MspDeInit+0x50>)
900042ce:	681a      	ldr	r2, [r3, #0]
900042d0:	b102      	cbz	r2, 900042d4 <HAL_SDRAM_MspDeInit+0x8>
900042d2:	4770      	bx	lr
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
900042d4:	b510      	push	{r4, lr}
  __HAL_RCC_FMC_CLK_DISABLE();
900042d6:	4a12      	ldr	r2, [pc, #72]	@ (90004320 <HAL_SDRAM_MspDeInit+0x54>)
  FMC_DeInitialized = 1;
900042d8:	2401      	movs	r4, #1
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900042da:	f64f 7183 	movw	r1, #65411	@ 0xff83
900042de:	4811      	ldr	r0, [pc, #68]	@ (90004324 <HAL_SDRAM_MspDeInit+0x58>)
  FMC_DeInitialized = 1;
900042e0:	601c      	str	r4, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
900042e2:	f8d2 30d4 	ldr.w	r3, [r2, #212]	@ 0xd4
900042e6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
900042ea:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_10|GPIO_PIN_9
900042ee:	f003 fa3f 	bl	90007770 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_5|GPIO_PIN_4
900042f2:	f248 1133 	movw	r1, #33075	@ 0x8133
900042f6:	480c      	ldr	r0, [pc, #48]	@ (90004328 <HAL_SDRAM_MspDeInit+0x5c>)
900042f8:	f003 fa3a 	bl	90007770 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_14
900042fc:	f24c 7103 	movw	r1, #50947	@ 0xc703
90004300:	480a      	ldr	r0, [pc, #40]	@ (9000432c <HAL_SDRAM_MspDeInit+0x60>)
90004302:	f003 fa35 	bl	90007770 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_2|GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_3
90004306:	f64f 013f 	movw	r1, #63551	@ 0xf83f
9000430a:	4809      	ldr	r0, [pc, #36]	@ (90004330 <HAL_SDRAM_MspDeInit+0x64>)
9000430c:	f003 fa30 	bl	90007770 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
90004310:	21e0      	movs	r1, #224	@ 0xe0
90004312:	4808      	ldr	r0, [pc, #32]	@ (90004334 <HAL_SDRAM_MspDeInit+0x68>)
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
90004314:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
90004318:	f003 ba2a 	b.w	90007770 <HAL_GPIO_DeInit>
9000431c:	24007814 	.word	0x24007814
90004320:	58024400 	.word	0x58024400
90004324:	58021000 	.word	0x58021000
90004328:	58021800 	.word	0x58021800
9000432c:	58020c00 	.word	0x58020c00
90004330:	58021400 	.word	0x58021400
90004334:	58021c00 	.word	0x58021c00

90004338 <HAL_InitTick>:
  uint32_t              uwTimclock, uwAPB1Prescaler;
  uint32_t              uwPrescalerValue;
  uint32_t              pFLatency;

  /*Configure the TIM6 IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
90004338:	280f      	cmp	r0, #15
9000433a:	d901      	bls.n	90004340 <HAL_InitTick+0x8>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
     uwTickPrio = TickPriority;
    }
  else
  {
    return HAL_ERROR;
9000433c:	2001      	movs	r0, #1
    return HAL_TIM_Base_Start_IT(&htim6);
  }

  /* Return function status */
  return HAL_ERROR;
}
9000433e:	4770      	bx	lr
{
90004340:	b530      	push	{r4, r5, lr}
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
90004342:	4601      	mov	r1, r0
{
90004344:	b08b      	sub	sp, #44	@ 0x2c
     HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
90004346:	2200      	movs	r2, #0
90004348:	4604      	mov	r4, r0
9000434a:	2036      	movs	r0, #54	@ 0x36
9000434c:	f002 fdaa 	bl	90006ea4 <HAL_NVIC_SetPriority>
     HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
90004350:	2036      	movs	r0, #54	@ 0x36
90004352:	f002 fde3 	bl	90006f1c <HAL_NVIC_EnableIRQ>
  __HAL_RCC_TIM6_CLK_ENABLE();
90004356:	4b1b      	ldr	r3, [pc, #108]	@ (900043c4 <HAL_InitTick+0x8c>)
     uwTickPrio = TickPriority;
90004358:	4a1b      	ldr	r2, [pc, #108]	@ (900043c8 <HAL_InitTick+0x90>)
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
9000435a:	4669      	mov	r1, sp
9000435c:	a802      	add	r0, sp, #8
     uwTickPrio = TickPriority;
9000435e:	6014      	str	r4, [r2, #0]
  __HAL_RCC_TIM6_CLK_ENABLE();
90004360:	f8d3 20e8 	ldr.w	r2, [r3, #232]	@ 0xe8
90004364:	f042 0210 	orr.w	r2, r2, #16
90004368:	f8c3 20e8 	str.w	r2, [r3, #232]	@ 0xe8
9000436c:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
90004370:	f003 0310 	and.w	r3, r3, #16
90004374:	9301      	str	r3, [sp, #4]
90004376:	9b01      	ldr	r3, [sp, #4]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
90004378:	f006 fe98 	bl	9000b0ac <HAL_RCC_GetClockConfig>
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
9000437c:	9b07      	ldr	r3, [sp, #28]
9000437e:	b9c3      	cbnz	r3, 900043b2 <HAL_InitTick+0x7a>
    uwTimclock = HAL_RCC_GetPCLK1Freq();
90004380:	f006 fe04 	bl	9000af8c <HAL_RCC_GetPCLK1Freq>
90004384:	4603      	mov	r3, r0
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004386:	4911      	ldr	r1, [pc, #68]	@ (900043cc <HAL_InitTick+0x94>)
  htim6.Init.ClockDivision = 0;
90004388:	2200      	movs	r2, #0
  htim6.Instance = TIM6;
9000438a:	4c11      	ldr	r4, [pc, #68]	@ (900043d0 <HAL_InitTick+0x98>)
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000438c:	fba1 1303 	umull	r1, r3, r1, r3
  htim6.Instance = TIM6;
90004390:	4d10      	ldr	r5, [pc, #64]	@ (900043d4 <HAL_InitTick+0x9c>)
  htim6.Init.Period = (1000000U / 1000U) - 1U;
90004392:	f240 31e7 	movw	r1, #999	@ 0x3e7
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
90004396:	4620      	mov	r0, r4
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
90004398:	0c9b      	lsrs	r3, r3, #18
  htim6.Instance = TIM6;
9000439a:	6025      	str	r5, [r4, #0]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
9000439c:	60a2      	str	r2, [r4, #8]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
9000439e:	3b01      	subs	r3, #1
  htim6.Init.Period = (1000000U / 1000U) - 1U;
900043a0:	e9c4 1203 	strd	r1, r2, [r4, #12]
  htim6.Init.Prescaler = uwPrescalerValue;
900043a4:	6063      	str	r3, [r4, #4]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
900043a6:	f008 f889 	bl	9000c4bc <HAL_TIM_Base_Init>
900043aa:	b130      	cbz	r0, 900043ba <HAL_InitTick+0x82>
    return HAL_ERROR;
900043ac:	2001      	movs	r0, #1
}
900043ae:	b00b      	add	sp, #44	@ 0x2c
900043b0:	bd30      	pop	{r4, r5, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
900043b2:	f006 fdeb 	bl	9000af8c <HAL_RCC_GetPCLK1Freq>
900043b6:	0043      	lsls	r3, r0, #1
900043b8:	e7e5      	b.n	90004386 <HAL_InitTick+0x4e>
    return HAL_TIM_Base_Start_IT(&htim6);
900043ba:	4620      	mov	r0, r4
900043bc:	f008 f924 	bl	9000c608 <HAL_TIM_Base_Start_IT>
900043c0:	e7f5      	b.n	900043ae <HAL_InitTick+0x76>
900043c2:	bf00      	nop
900043c4:	58024400 	.word	0x58024400
900043c8:	24000080 	.word	0x24000080
900043cc:	431bde83 	.word	0x431bde83
900043d0:	2400781c 	.word	0x2400781c
900043d4:	40001000 	.word	0x40001000

900043d8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
900043d8:	4770      	bx	lr
900043da:	bf00      	nop

900043dc <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
900043dc:	e7fe      	b.n	900043dc <HardFault_Handler>
900043de:	bf00      	nop

900043e0 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
900043e0:	e7fe      	b.n	900043e0 <MemManage_Handler>
900043e2:	bf00      	nop

900043e4 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
900043e4:	e7fe      	b.n	900043e4 <BusFault_Handler>
900043e6:	bf00      	nop

900043e8 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
900043e8:	e7fe      	b.n	900043e8 <UsageFault_Handler>
900043ea:	bf00      	nop

900043ec <DebugMon_Handler>:
}

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
900043ec:	4770      	bx	lr
900043ee:	bf00      	nop

900043f0 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
900043f0:	4801      	ldr	r0, [pc, #4]	@ (900043f8 <TIM6_DAC_IRQHandler+0x8>)
900043f2:	f008 b963 	b.w	9000c6bc <HAL_TIM_IRQHandler>
900043f6:	bf00      	nop
900043f8:	2400781c 	.word	0x2400781c

900043fc <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
900043fc:	4801      	ldr	r0, [pc, #4]	@ (90004404 <LTDC_IRQHandler+0x8>)
900043fe:	f005 bcc1 	b.w	90009d84 <HAL_LTDC_IRQHandler>
90004402:	bf00      	nop
90004404:	240075b0 	.word	0x240075b0

90004408 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
90004408:	4801      	ldr	r0, [pc, #4]	@ (90004410 <DMA2D_IRQHandler+0x8>)
9000440a:	f002 bead 	b.w	90007168 <HAL_DMA2D_IRQHandler>
9000440e:	bf00      	nop
90004410:	24007788 	.word	0x24007788

90004414 <JPEG_IRQHandler>:
void JPEG_IRQHandler(void)
{
  /* USER CODE BEGIN JPEG_IRQn 0 */

  /* USER CODE END JPEG_IRQn 0 */
  HAL_JPEG_IRQHandler(&hjpeg);
90004414:	4801      	ldr	r0, [pc, #4]	@ (9000441c <JPEG_IRQHandler+0x8>)
90004416:	f005 bbb9 	b.w	90009b8c <HAL_JPEG_IRQHandler>
9000441a:	bf00      	nop
9000441c:	24007730 	.word	0x24007730

90004420 <MDMA_IRQHandler>:
void MDMA_IRQHandler(void)
{
  /* USER CODE BEGIN MDMA_IRQn 0 */

  /* USER CODE END MDMA_IRQn 0 */
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90004420:	4804      	ldr	r0, [pc, #16]	@ (90004434 <MDMA_IRQHandler+0x14>)
{
90004422:	b508      	push	{r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_outfifo_th);
90004424:	f005 ff78 	bl	9000a318 <HAL_MDMA_IRQHandler>
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
90004428:	4803      	ldr	r0, [pc, #12]	@ (90004438 <MDMA_IRQHandler+0x18>)
  /* USER CODE BEGIN MDMA_IRQn 1 */

  /* USER CODE END MDMA_IRQn 1 */
}
9000442a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_MDMA_IRQHandler(&hmdma_jpeg_infifo_th);
9000442e:	f005 bf73 	b.w	9000a318 <HAL_MDMA_IRQHandler>
90004432:	bf00      	nop
90004434:	24007658 	.word	0x24007658
90004438:	240076c4 	.word	0x240076c4

9000443c <_getpid>:
}

int _getpid(void)
{
	return 1;
}
9000443c:	2001      	movs	r0, #1
9000443e:	4770      	bx	lr

90004440 <_kill>:

int _kill(int pid, int sig)
{
90004440:	b508      	push	{r3, lr}
	errno = EINVAL;
90004442:	f025 fbe1 	bl	90029c08 <__errno>
90004446:	2216      	movs	r2, #22
90004448:	4603      	mov	r3, r0
	return -1;
}
9000444a:	f04f 30ff 	mov.w	r0, #4294967295
	errno = EINVAL;
9000444e:	601a      	str	r2, [r3, #0]
}
90004450:	bd08      	pop	{r3, pc}
90004452:	bf00      	nop

90004454 <_exit>:

void _exit (int status)
{
90004454:	b508      	push	{r3, lr}
	errno = EINVAL;
90004456:	f025 fbd7 	bl	90029c08 <__errno>
9000445a:	2316      	movs	r3, #22
9000445c:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
9000445e:	e7fe      	b.n	9000445e <_exit+0xa>

90004460 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
90004460:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
90004462:	1e16      	subs	r6, r2, #0
90004464:	dd07      	ble.n	90004476 <_read+0x16>
90004466:	460c      	mov	r4, r1
90004468:	198d      	adds	r5, r1, r6
	{
		*ptr++ = __io_getchar();
9000446a:	f3af 8000 	nop.w
9000446e:	f804 0b01 	strb.w	r0, [r4], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
90004472:	42a5      	cmp	r5, r4
90004474:	d1f9      	bne.n	9000446a <_read+0xa>
	}

return len;
}
90004476:	4630      	mov	r0, r6
90004478:	bd70      	pop	{r4, r5, r6, pc}
9000447a:	bf00      	nop

9000447c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
9000447c:	b570      	push	{r4, r5, r6, lr}
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000447e:	1e16      	subs	r6, r2, #0
90004480:	dd07      	ble.n	90004492 <_write+0x16>
90004482:	460c      	mov	r4, r1
90004484:	198d      	adds	r5, r1, r6
	{
		__io_putchar(*ptr++);
90004486:	f814 0b01 	ldrb.w	r0, [r4], #1
9000448a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
9000448e:	42a5      	cmp	r5, r4
90004490:	d1f9      	bne.n	90004486 <_write+0xa>
	}
	return len;
}
90004492:	4630      	mov	r0, r6
90004494:	bd70      	pop	{r4, r5, r6, pc}
90004496:	bf00      	nop

90004498 <_close>:

int _close(int file)
{
	return -1;
}
90004498:	f04f 30ff 	mov.w	r0, #4294967295
9000449c:	4770      	bx	lr
9000449e:	bf00      	nop

900044a0 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
900044a0:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
	return 0;
}
900044a4:	2000      	movs	r0, #0
	st->st_mode = S_IFCHR;
900044a6:	604b      	str	r3, [r1, #4]
}
900044a8:	4770      	bx	lr
900044aa:	bf00      	nop

900044ac <_isatty>:

int _isatty(int file)
{
	return 1;
}
900044ac:	2001      	movs	r0, #1
900044ae:	4770      	bx	lr

900044b0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
900044b0:	2000      	movs	r0, #0
900044b2:	4770      	bx	lr

900044b4 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
900044b4:	4a0c      	ldr	r2, [pc, #48]	@ (900044e8 <_sbrk+0x34>)
{
900044b6:	b508      	push	{r3, lr}
900044b8:	4603      	mov	r3, r0
	if (heap_end == 0)
900044ba:	6810      	ldr	r0, [r2, #0]
900044bc:	b128      	cbz	r0, 900044ca <_sbrk+0x16>
		heap_end = &end;

	prev_heap_end = heap_end;
	if (heap_end + incr > stack_ptr)
900044be:	4403      	add	r3, r0
900044c0:	4669      	mov	r1, sp
900044c2:	428b      	cmp	r3, r1
900044c4:	d808      	bhi.n	900044d8 <_sbrk+0x24>
	{
		errno = ENOMEM;
		return (caddr_t) -1;
	}

	heap_end += incr;
900044c6:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
}
900044c8:	bd08      	pop	{r3, pc}
		heap_end = &end;
900044ca:	4908      	ldr	r1, [pc, #32]	@ (900044ec <_sbrk+0x38>)
900044cc:	4608      	mov	r0, r1
900044ce:	6011      	str	r1, [r2, #0]
	if (heap_end + incr > stack_ptr)
900044d0:	4669      	mov	r1, sp
900044d2:	4403      	add	r3, r0
900044d4:	428b      	cmp	r3, r1
900044d6:	d9f6      	bls.n	900044c6 <_sbrk+0x12>
		errno = ENOMEM;
900044d8:	f025 fb96 	bl	90029c08 <__errno>
900044dc:	220c      	movs	r2, #12
900044de:	4603      	mov	r3, r0
		return (caddr_t) -1;
900044e0:	f04f 30ff 	mov.w	r0, #4294967295
		errno = ENOMEM;
900044e4:	601a      	str	r2, [r3, #0]
}
900044e6:	bd08      	pop	{r3, pc}
900044e8:	24007868 	.word	0x24007868
900044ec:	240226d0 	.word	0x240226d0

900044f0 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId TYPOGRAPHY_00 = 3; // verdana_20_4bpp
    static const touchgfx::FontId TEXTAREAS = 4;     // Siemens_TIA_Portal_basic_bold_25_4bpp
    static const uint16_t NUMBER_OF_FONTS = 5;
};

class ApplicationFontProvider : public touchgfx::FontProvider
900044f0:	4770      	bx	lr
900044f2:	bf00      	nop

900044f4 <_ZN23ApplicationFontProviderD0Ev>:
900044f4:	b510      	push	{r4, lr}
900044f6:	4604      	mov	r4, r0
900044f8:	2104      	movs	r1, #4
900044fa:	f024 fcbf 	bl	90028e7c <_ZdlPvj>
900044fe:	4620      	mov	r0, r4
90004500:	bd10      	pop	{r4, pc}
90004502:	bf00      	nop

90004504 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
90004504:	b508      	push	{r3, lr}
    switch (typography)
90004506:	2904      	cmp	r1, #4
90004508:	d818      	bhi.n	9000453c <_ZN23ApplicationFontProvider7getFontEt+0x38>
9000450a:	e8df f001 	tbb	[pc, r1]
9000450e:	1307      	.short	0x1307
90004510:	0f0b      	.short	0x0f0b
90004512:	03          	.byte	0x03
90004513:	00          	.byte	0x00
    case Typography::TYPOGRAPHY_00:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
    case Typography::TEXTAREAS:
        // Siemens_TIA_Portal_basic_bold_25_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[4]);
90004514:	f001 fa58 	bl	900059c8 <_ZN17TypedTextDatabase8getFontsEv>
90004518:	6900      	ldr	r0, [r0, #16]
    default:
        return 0;
    }
}
9000451a:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
9000451c:	f001 fa54 	bl	900059c8 <_ZN17TypedTextDatabase8getFontsEv>
90004520:	6800      	ldr	r0, [r0, #0]
}
90004522:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
90004524:	f001 fa50 	bl	900059c8 <_ZN17TypedTextDatabase8getFontsEv>
90004528:	6880      	ldr	r0, [r0, #8]
}
9000452a:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
9000452c:	f001 fa4c 	bl	900059c8 <_ZN17TypedTextDatabase8getFontsEv>
90004530:	68c0      	ldr	r0, [r0, #12]
}
90004532:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
90004534:	f001 fa48 	bl	900059c8 <_ZN17TypedTextDatabase8getFontsEv>
90004538:	6840      	ldr	r0, [r0, #4]
}
9000453a:	bd08      	pop	{r3, pc}
    switch (typography)
9000453c:	2000      	movs	r0, #0
}
9000453e:	bd08      	pop	{r3, pc}

90004540 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
90004540:	4800      	ldr	r0, [pc, #0]	@ (90004544 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
90004542:	4770      	bx	lr
90004544:	9002c6b0 	.word	0x9002c6b0

90004548 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
90004548:	2004      	movs	r0, #4
9000454a:	4770      	bx	lr

9000454c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
    {
        if (unicode == 0)
9000454c:	b169      	cbz	r1, 9000456a <_ZNK8touchgfx4Font8getGlyphEt+0x1e>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
9000454e:	6802      	ldr	r2, [r0, #0]
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
90004550:	b530      	push	{r4, r5, lr}
90004552:	b083      	sub	sp, #12
        const uint8_t* dummyPixelDataPointer = 0;
90004554:	2400      	movs	r4, #0
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90004556:	6895      	ldr	r5, [r2, #8]
90004558:	f10d 0303 	add.w	r3, sp, #3
9000455c:	aa01      	add	r2, sp, #4
        const uint8_t* dummyPixelDataPointer = 0;
9000455e:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
90004560:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
90004564:	47a8      	blx	r5
        return glyph;
    }
90004566:	b003      	add	sp, #12
90004568:	bd30      	pop	{r4, r5, pc}
            return 0;
9000456a:	4608      	mov	r0, r1
    }
9000456c:	4770      	bx	lr
9000456e:	bf00      	nop

90004570 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
90004570:	89c0      	ldrh	r0, [r0, #14]
90004572:	4770      	bx	lr

90004574 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
90004574:	8a00      	ldrh	r0, [r0, #16]
90004576:	4770      	bx	lr

90004578 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
90004578:	88c0      	ldrh	r0, [r0, #6]
9000457a:	4770      	bx	lr

9000457c <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
9000457c:	8880      	ldrh	r0, [r0, #4]
9000457e:	4770      	bx	lr

90004580 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
90004580:	7a80      	ldrb	r0, [r0, #10]
    }
90004582:	f000 007f 	and.w	r0, r0, #127	@ 0x7f
90004586:	4770      	bx	lr

90004588 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
90004588:	7a80      	ldrb	r0, [r0, #10]
    }
9000458a:	09c0      	lsrs	r0, r0, #7
9000458c:	4770      	bx	lr
9000458e:	bf00      	nop

90004590 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
    {
        return false;
    }
90004590:	2000      	movs	r0, #0
90004592:	4770      	bx	lr

90004594 <_ZNK8touchgfx4Font14getScaleFactorEv>:
     * @return The scale factor
     */
    virtual float getScaleFactor() const
    {
        return 0;
    }
90004594:	ed9f 0a01 	vldr	s0, [pc, #4]	@ 9000459c <_ZNK8touchgfx4Font14getScaleFactorEv+0x8>
90004598:	4770      	bx	lr
9000459a:	bf00      	nop
9000459c:	00000000 	.word	0x00000000

900045a0 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
900045a0:	4770      	bx	lr
900045a2:	bf00      	nop

900045a4 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
900045a4:	4770      	bx	lr
900045a6:	bf00      	nop

900045a8 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
900045a8:	4770      	bx	lr
900045aa:	bf00      	nop

900045ac <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
900045ac:	4770      	bx	lr
900045ae:	bf00      	nop

900045b0 <_ZN8touchgfx9TypedTextD1Ev>:
    }
900045b0:	4770      	bx	lr
900045b2:	bf00      	nop

900045b4 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
900045b4:	b530      	push	{r4, r5, lr}
900045b6:	b085      	sub	sp, #20
900045b8:	460a      	mov	r2, r1
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
900045ba:	6803      	ldr	r3, [r0, #0]
    virtual void setWidth(int16_t width)
900045bc:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
900045be:	466d      	mov	r5, sp
900045c0:	4601      	mov	r1, r0
        rect.width = width;
900045c2:	8102      	strh	r2, [r0, #8]
900045c4:	343c      	adds	r4, #60	@ 0x3c
900045c6:	4628      	mov	r0, r5
900045c8:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
900045cc:	4798      	blx	r3
900045ce:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900045d2:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
900045d6:	b005      	add	sp, #20
900045d8:	bd30      	pop	{r4, r5, pc}
900045da:	bf00      	nop

900045dc <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
900045dc:	b530      	push	{r4, r5, lr}
900045de:	b085      	sub	sp, #20
900045e0:	460a      	mov	r2, r1
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
900045e2:	6803      	ldr	r3, [r0, #0]
    virtual void setHeight(int16_t height)
900045e4:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
900045e6:	466d      	mov	r5, sp
900045e8:	4601      	mov	r1, r0
        rect.height = height;
900045ea:	8142      	strh	r2, [r0, #10]
900045ec:	343c      	adds	r4, #60	@ 0x3c
900045ee:	4628      	mov	r0, r5
900045f0:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
900045f4:	4798      	blx	r3
900045f6:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
900045fa:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
900045fe:	b005      	add	sp, #20
90004600:	bd30      	pop	{r4, r5, pc}
90004602:	bf00      	nop

90004604 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
90004604:	2200      	movs	r2, #0
90004606:	6002      	str	r2, [r0, #0]
90004608:	6042      	str	r2, [r0, #4]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
9000460a:	4770      	bx	lr

9000460c <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
9000460c:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
    }
90004610:	4770      	bx	lr
90004612:	bf00      	nop

90004614 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
90004614:	2000      	movs	r0, #0
90004616:	4770      	bx	lr

90004618 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
        if (visible)
90004618:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
9000461c:	b112      	cbz	r2, 90004624 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xc>
            invalidate();
9000461e:	6803      	ldr	r3, [r0, #0]
90004620:	695b      	ldr	r3, [r3, #20]
90004622:	4718      	bx	r3
    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
    {
        Widget::invalidateContent();
    }
90004624:	4770      	bx	lr
90004626:	bf00      	nop

90004628 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004628:	2200      	movs	r2, #0
9000462a:	f04f 31ff 	mov.w	r1, #4294967295
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
9000462e:	6082      	str	r2, [r0, #8]
90004630:	e9c0 2100 	strd	r2, r1, [r0]

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
    {
        return TextArea::BoundingArea();
    }
90004634:	4770      	bx	lr
90004636:	bf00      	nop

90004638 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
90004638:	6c80      	ldr	r0, [r0, #72]	@ 0x48
9000463a:	4770      	bx	lr

9000463c <_ZN18DataScreenViewBase9Update_HREv>:
     * Custom Actions
     */
    virtual void Update_HR()
    {
        // Override and implement this function in Screen1
    }
9000463c:	4770      	bx	lr
9000463e:	bf00      	nop

90004640 <_ZN18DataScreenViewBase11Update_SpO2Ev>:
    
    virtual void Update_SpO2()
    {
        // Override and implement this function in Screen1
    }
90004640:	4770      	bx	lr
90004642:	bf00      	nop

90004644 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
90004644:	4770      	bx	lr
90004646:	bf00      	nop

90004648 <_ZN18DataScreenViewBaseD1Ev>:
}

DataScreenViewBase::~DataScreenViewBase()
{

}
90004648:	4770      	bx	lr
9000464a:	bf00      	nop

9000464c <_ZN18DataScreenViewBase11setupScreenEv>:

void DataScreenViewBase::setupScreen()
{

}
9000464c:	4770      	bx	lr
9000464e:	bf00      	nop

90004650 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
90004650:	b510      	push	{r4, lr}
90004652:	4604      	mov	r4, r0
    }
90004654:	2108      	movs	r1, #8
90004656:	f024 fc11 	bl	90028e7c <_ZdlPvj>
9000465a:	4620      	mov	r0, r4
9000465c:	bd10      	pop	{r4, pc}
9000465e:	bf00      	nop

90004660 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
90004660:	b510      	push	{r4, lr}
90004662:	4604      	mov	r4, r0
90004664:	214c      	movs	r1, #76	@ 0x4c
90004666:	f024 fc09 	bl	90028e7c <_ZdlPvj>
9000466a:	4620      	mov	r0, r4
9000466c:	bd10      	pop	{r4, pc}
9000466e:	bf00      	nop

90004670 <_ZN18DataScreenViewBaseD0Ev>:
DataScreenViewBase::~DataScreenViewBase()
90004670:	b510      	push	{r4, lr}
90004672:	4604      	mov	r4, r0
}
90004674:	f44f 7121 	mov.w	r1, #644	@ 0x284
90004678:	f024 fc00 	bl	90028e7c <_ZdlPvj>
9000467c:	4620      	mov	r0, r4
9000467e:	bd10      	pop	{r4, pc}

90004680 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004680:	4b1b      	ldr	r3, [pc, #108]	@ (900046f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x70>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004682:	6802      	ldr	r2, [r0, #0]
90004684:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
90004686:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004688:	6b55      	ldr	r5, [r2, #52]	@ 0x34
9000468a:	b323      	cbz	r3, 900046d6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x56>
9000468c:	b28e      	uxth	r6, r1
        return typedTextId < numberOfTypedTexts;
9000468e:	4919      	ldr	r1, [pc, #100]	@ (900046f4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x74>)
90004690:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90004692:	4604      	mov	r4, r0
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004694:	8809      	ldrh	r1, [r1, #0]
90004696:	4291      	cmp	r1, r2
90004698:	d923      	bls.n	900046e2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x62>
        return fonts[typedTexts[typedTextId].fontIdx];
9000469a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
9000469e:	4b16      	ldr	r3, [pc, #88]	@ (900046f8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x78>)
900046a0:	681b      	ldr	r3, [r3, #0]
900046a2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
900046a6:	4a15      	ldr	r2, [pc, #84]	@ (900046fc <_ZN8touchgfx8TextArea12setBaselineYEs+0x7c>)
900046a8:	6803      	ldr	r3, [r0, #0]
900046aa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900046ac:	4293      	cmp	r3, r2
900046ae:	d107      	bne.n	900046c0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x40>
        return baselineHeight;
900046b0:	88c0      	ldrh	r0, [r0, #6]
900046b2:	4b13      	ldr	r3, [pc, #76]	@ (90004700 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
900046b4:	1a31      	subs	r1, r6, r0
900046b6:	429d      	cmp	r5, r3
900046b8:	b209      	sxth	r1, r1
900046ba:	d107      	bne.n	900046cc <_ZN8touchgfx8TextArea12setBaselineYEs+0x4c>
        rect.y = y;
900046bc:	80e1      	strh	r1, [r4, #6]
    }
900046be:	bd70      	pop	{r4, r5, r6, pc}
        setY(baselineY - getTypedText().getFont()->getBaseline());
900046c0:	4798      	blx	r3
900046c2:	4b0f      	ldr	r3, [pc, #60]	@ (90004700 <_ZN8touchgfx8TextArea12setBaselineYEs+0x80>)
900046c4:	1a31      	subs	r1, r6, r0
900046c6:	429d      	cmp	r5, r3
900046c8:	b209      	sxth	r1, r1
900046ca:	d0f7      	beq.n	900046bc <_ZN8touchgfx8TextArea12setBaselineYEs+0x3c>
900046cc:	4620      	mov	r0, r4
900046ce:	462b      	mov	r3, r5
    }
900046d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
900046d4:	4718      	bx	r3
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900046d6:	4b0b      	ldr	r3, [pc, #44]	@ (90004704 <_ZN8touchgfx8TextArea12setBaselineYEs+0x84>)
900046d8:	216c      	movs	r1, #108	@ 0x6c
900046da:	4a0b      	ldr	r2, [pc, #44]	@ (90004708 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
900046dc:	480b      	ldr	r0, [pc, #44]	@ (9000470c <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
900046de:	f024 ff43 	bl	90029568 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
900046e2:	4b0b      	ldr	r3, [pc, #44]	@ (90004710 <_ZN8touchgfx8TextArea12setBaselineYEs+0x90>)
900046e4:	216d      	movs	r1, #109	@ 0x6d
900046e6:	4a08      	ldr	r2, [pc, #32]	@ (90004708 <_ZN8touchgfx8TextArea12setBaselineYEs+0x88>)
900046e8:	4808      	ldr	r0, [pc, #32]	@ (9000470c <_ZN8touchgfx8TextArea12setBaselineYEs+0x8c>)
900046ea:	f024 ff3d 	bl	90029568 <__assert_func>
900046ee:	bf00      	nop
900046f0:	240219e4 	.word	0x240219e4
900046f4:	240219e8 	.word	0x240219e8
900046f8:	240219ec 	.word	0x240219ec
900046fc:	90004579 	.word	0x90004579
90004700:	90002e79 	.word	0x90002e79
90004704:	9002bb7c 	.word	0x9002bb7c
90004708:	9002bbc0 	.word	0x9002bbc0
9000470c:	9002bbfc 	.word	0x9002bbfc
90004710:	9002bc44 	.word	0x9002bc44

90004714 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
        setX(x);
90004714:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
90004716:	b570      	push	{r4, r5, r6, lr}
90004718:	4614      	mov	r4, r2
9000471a:	4e23      	ldr	r6, [pc, #140]	@ (900047a8 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x94>)
        setX(x);
9000471c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
9000471e:	4605      	mov	r5, r0
90004720:	42b2      	cmp	r2, r6
90004722:	d122      	bne.n	9000476a <_ZN8touchgfx8TextArea13setXBaselineYEss+0x56>
        setBaselineY(baselineY);
90004724:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
        rect.x = x;
90004726:	80a9      	strh	r1, [r5, #4]
90004728:	4920      	ldr	r1, [pc, #128]	@ (900047ac <_ZN8touchgfx8TextArea13setXBaselineYEss+0x98>)
9000472a:	428a      	cmp	r2, r1
9000472c:	d123      	bne.n	90004776 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x62>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000472e:	4a20      	ldr	r2, [pc, #128]	@ (900047b0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x9c>)
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004730:	b2a4      	uxth	r4, r4
90004732:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
90004734:	6813      	ldr	r3, [r2, #0]
90004736:	2b00      	cmp	r3, #0
90004738:	d02f      	beq.n	9000479a <_ZN8touchgfx8TextArea13setXBaselineYEss+0x86>
        return typedTextId < numberOfTypedTexts;
9000473a:	491e      	ldr	r1, [pc, #120]	@ (900047b4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa0>)
9000473c:	8daa      	ldrh	r2, [r5, #44]	@ 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000473e:	8809      	ldrh	r1, [r1, #0]
90004740:	4291      	cmp	r1, r2
90004742:	d924      	bls.n	9000478e <_ZN8touchgfx8TextArea13setXBaselineYEss+0x7a>
        return fonts[typedTexts[typedTextId].fontIdx];
90004744:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
90004748:	4b1b      	ldr	r3, [pc, #108]	@ (900047b8 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa4>)
9000474a:	681b      	ldr	r3, [r3, #0]
9000474c:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90004750:	4a1a      	ldr	r2, [pc, #104]	@ (900047bc <_ZN8touchgfx8TextArea13setXBaselineYEss+0xa8>)
90004752:	6803      	ldr	r3, [r0, #0]
90004754:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90004756:	4293      	cmp	r3, r2
90004758:	d117      	bne.n	9000478a <_ZN8touchgfx8TextArea13setXBaselineYEss+0x76>
9000475a:	88c0      	ldrh	r0, [r0, #6]
9000475c:	4b18      	ldr	r3, [pc, #96]	@ (900047c0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xac>)
9000475e:	1a24      	subs	r4, r4, r0
90004760:	429e      	cmp	r6, r3
90004762:	b221      	sxth	r1, r4
90004764:	d10c      	bne.n	90004780 <_ZN8touchgfx8TextArea13setXBaselineYEss+0x6c>
        rect.y = y;
90004766:	80e9      	strh	r1, [r5, #6]
    }
90004768:	bd70      	pop	{r4, r5, r6, pc}
        setX(x);
9000476a:	4790      	blx	r2
        setBaselineY(baselineY);
9000476c:	682b      	ldr	r3, [r5, #0]
9000476e:	490f      	ldr	r1, [pc, #60]	@ (900047ac <_ZN8touchgfx8TextArea13setXBaselineYEss+0x98>)
90004770:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
90004772:	428a      	cmp	r2, r1
90004774:	d0db      	beq.n	9000472e <_ZN8touchgfx8TextArea13setXBaselineYEss+0x1a>
90004776:	4621      	mov	r1, r4
90004778:	4628      	mov	r0, r5
    }
9000477a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
9000477e:	4710      	bx	r2
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004780:	4628      	mov	r0, r5
90004782:	4633      	mov	r3, r6
    }
90004784:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
90004788:	4718      	bx	r3
9000478a:	4798      	blx	r3
9000478c:	e7e6      	b.n	9000475c <_ZN8touchgfx8TextArea13setXBaselineYEss+0x48>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
9000478e:	4b0d      	ldr	r3, [pc, #52]	@ (900047c4 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb0>)
90004790:	216d      	movs	r1, #109	@ 0x6d
90004792:	4a0d      	ldr	r2, [pc, #52]	@ (900047c8 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
90004794:	480d      	ldr	r0, [pc, #52]	@ (900047cc <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
90004796:	f024 fee7 	bl	90029568 <__assert_func>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
9000479a:	4b0d      	ldr	r3, [pc, #52]	@ (900047d0 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xbc>)
9000479c:	216c      	movs	r1, #108	@ 0x6c
9000479e:	4a0a      	ldr	r2, [pc, #40]	@ (900047c8 <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb4>)
900047a0:	480a      	ldr	r0, [pc, #40]	@ (900047cc <_ZN8touchgfx8TextArea13setXBaselineYEss+0xb8>)
900047a2:	f024 fee1 	bl	90029568 <__assert_func>
900047a6:	bf00      	nop
900047a8:	90002e75 	.word	0x90002e75
900047ac:	90004681 	.word	0x90004681
900047b0:	240219e4 	.word	0x240219e4
900047b4:	240219e8 	.word	0x240219e8
900047b8:	240219ec 	.word	0x240219ec
900047bc:	90004579 	.word	0x90004579
900047c0:	90002e79 	.word	0x90002e79
900047c4:	9002bc44 	.word	0x9002bc44
900047c8:	9002bbc0 	.word	0x9002bbc0
900047cc:	9002bbfc 	.word	0x9002bbfc
900047d0:	9002bb7c 	.word	0x9002bb7c

900047d4 <_ZN18DataScreenViewBaseC1Ev>:
DataScreenViewBase::DataScreenViewBase()
900047d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900047d8:	b089      	sub	sp, #36	@ 0x24
900047da:	4604      	mov	r4, r0
template <class T>
class View : public Screen
{
public:
    View()
        : presenter(0)
900047dc:	f013 fd34 	bl	90018248 <_ZN8touchgfx6ScreenC1Ev>
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
900047e0:	4be7      	ldr	r3, [pc, #924]	@ (90004b80 <_ZN18DataScreenViewBaseC1Ev+0x3ac>)
900047e2:	4ae8      	ldr	r2, [pc, #928]	@ (90004b84 <_ZN18DataScreenViewBaseC1Ev+0x3b0>)
900047e4:	2500      	movs	r5, #0
900047e6:	f04f 37ff 	mov.w	r7, #4294967295
          touchable(false),
900047ea:	f44f 7980 	mov.w	r9, #256	@ 0x100
        : typedTextId(id)
900047ee:	f64f 76ff 	movw	r6, #65535	@ 0xffff
900047f2:	f04f 0bff 	mov.w	fp, #255	@ 0xff
900047f6:	f8df 83cc 	ldr.w	r8, [pc, #972]	@ 90004bc4 <_ZN18DataScreenViewBaseC1Ev+0x3f0>
          endId(BITMAP_INVALID),
          updateTicksInterval(updateInterval),
          ticksSinceUpdate(0),
          reverse(false),
          loopAnimation(false),
          running(false)
900047fa:	f104 0ae0 	add.w	sl, r4, #224	@ 0xe0
900047fe:	6022      	str	r2, [r4, #0]
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
    {
        Image::setBitmap(bmp);
90004800:	a906      	add	r1, sp, #24
        : Widget(), bitmap(bmp), alpha(255)
90004802:	4ae1      	ldr	r2, [pc, #900]	@ (90004b88 <_ZN18DataScreenViewBaseC1Ev+0x3b4>)
        Image::setBitmap(bmp);
90004804:	4650      	mov	r0, sl
90004806:	6423      	str	r3, [r4, #64]	@ 0x40
90004808:	66e3      	str	r3, [r4, #108]	@ 0x6c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
9000480a:	4be0      	ldr	r3, [pc, #896]	@ (90004b8c <_ZN18DataScreenViewBaseC1Ev+0x3b8>)
9000480c:	f8a4 9064 	strh.w	r9, [r4, #100]	@ 0x64
90004810:	f884 b066 	strb.w	fp, [r4, #102]	@ 0x66
90004814:	f8a4 9090 	strh.w	r9, [r4, #144]	@ 0x90
90004818:	f884 b092 	strb.w	fp, [r4, #146]	@ 0x92
9000481c:	63e5      	str	r5, [r4, #60]	@ 0x3c
        : color(col)
9000481e:	66a5      	str	r5, [r4, #104]	@ 0x68
90004820:	f8c4 5094 	str.w	r5, [r4, #148]	@ 0x94
        : x(0), y(0), width(0), height(0)
90004824:	e9c4 5511 	strd	r5, r5, [r4, #68]	@ 0x44
90004828:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
          nextSibling(0),
9000482c:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
          cachedAbsX(0),
90004830:	e9c4 5517 	strd	r5, r5, [r4, #92]	@ 0x5c
90004834:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
90004838:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
9000483c:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
90004840:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
90004844:	e9c4 5527 	strd	r5, r5, [r4, #156]	@ 0x9c
90004848:	e9c4 5529 	strd	r5, r5, [r4, #164]	@ 0xa4
          nextSibling(0),
9000484c:	e9c4 552b 	strd	r5, r5, [r4, #172]	@ 0xac
          cachedAbsX(0),
90004850:	e9c4 552d 	strd	r5, r5, [r4, #180]	@ 0xb4
          touchable(false),
90004854:	f8a4 90bc 	strh.w	r9, [r4, #188]	@ 0xbc
90004858:	f8c4 3098 	str.w	r3, [r4, #152]	@ 0x98
9000485c:	f8c4 b0ce 	str.w	fp, [r4, #206]	@ 0xce
90004860:	f8a4 9104 	strh.w	r9, [r4, #260]	@ 0x104
90004864:	f8a4 60c4 	strh.w	r6, [r4, #196]	@ 0xc4
        : Widget(), bitmap(bmp), alpha(255)
90004868:	f8a4 6106 	strh.w	r6, [r4, #262]	@ 0x106
9000486c:	f884 6108 	strb.w	r6, [r4, #264]	@ 0x108
90004870:	f8c4 20e0 	str.w	r2, [r4, #224]	@ 0xe0
        : color(col)
90004874:	f8c4 50c8 	str.w	r5, [r4, #200]	@ 0xc8
90004878:	f8a4 50cc 	strh.w	r5, [r4, #204]	@ 0xcc
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000487c:	f8c4 50d4 	str.w	r5, [r4, #212]	@ 0xd4
              text(0)
90004880:	f8c4 50dc 	str.w	r5, [r4, #220]	@ 0xdc
90004884:	f8c4 70d8 	str.w	r7, [r4, #216]	@ 0xd8
90004888:	f8c4 80c0 	str.w	r8, [r4, #192]	@ 0xc0
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
9000488c:	f8ad 7018 	strh.w	r7, [sp, #24]
        : x(0), y(0), width(0), height(0)
90004890:	e9c4 5539 	strd	r5, r5, [r4, #228]	@ 0xe4
90004894:	e9c4 553b 	strd	r5, r5, [r4, #236]	@ 0xec
          nextSibling(0),
90004898:	e9c4 553d 	strd	r5, r5, [r4, #244]	@ 0xf4
          cachedAbsX(0),
9000489c:	e9c4 553f 	strd	r5, r5, [r4, #252]	@ 0xfc
        Image::setBitmap(bmp);
900048a0:	f00e ffa9 	bl	900137f6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : Widget(), bitmap(bmp), alpha(255)
900048a4:	4ab8      	ldr	r2, [pc, #736]	@ (90004b88 <_ZN18DataScreenViewBaseC1Ev+0x3b4>)
          updateTicksInterval(updateInterval),
900048a6:	2301      	movs	r3, #1
        Image::setBitmap(bmp);
900048a8:	a906      	add	r1, sp, #24
        : Widget(), bitmap(bmp), alpha(255)
900048aa:	f8c4 211c 	str.w	r2, [r4, #284]	@ 0x11c
900048ae:	f8c4 3114 	str.w	r3, [r4, #276]	@ 0x114
900048b2:	f504 738e 	add.w	r3, r4, #284	@ 0x11c
          running(false)
900048b6:	4ab6      	ldr	r2, [pc, #728]	@ (90004b90 <_ZN18DataScreenViewBaseC1Ev+0x3bc>)
        Image::setBitmap(bmp);
900048b8:	4618      	mov	r0, r3
          touchable(false),
900048ba:	f8a4 9140 	strh.w	r9, [r4, #320]	@ 0x140
900048be:	f8c4 20e0 	str.w	r2, [r4, #224]	@ 0xe0
        : Widget(), bitmap(bmp), alpha(255)
900048c2:	f8a4 6142 	strh.w	r6, [r4, #322]	@ 0x142
900048c6:	f884 5118 	strb.w	r5, [r4, #280]	@ 0x118
900048ca:	f884 7144 	strb.w	r7, [r4, #324]	@ 0x144
900048ce:	f8ad 6018 	strh.w	r6, [sp, #24]
        Image::setBitmap(bmp);
900048d2:	9301      	str	r3, [sp, #4]
          startId(BITMAP_INVALID),
900048d4:	e9c4 5743 	strd	r5, r7, [r4, #268]	@ 0x10c
900048d8:	e9c4 5548 	strd	r5, r5, [r4, #288]	@ 0x120
900048dc:	e9c4 554a 	strd	r5, r5, [r4, #296]	@ 0x128
          nextSibling(0),
900048e0:	e9c4 554c 	strd	r5, r5, [r4, #304]	@ 0x130
          cachedAbsX(0),
900048e4:	e9c4 554e 	strd	r5, r5, [r4, #312]	@ 0x138
900048e8:	f00e ff85 	bl	900137f6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900048ec:	4ba7      	ldr	r3, [pc, #668]	@ (90004b8c <_ZN18DataScreenViewBaseC1Ev+0x3b8>)
          touchable(false),
900048ee:	f8a4 916c 	strh.w	r9, [r4, #364]	@ 0x16c
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
900048f2:	f104 0140 	add.w	r1, r4, #64	@ 0x40
900048f6:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
900048fa:	f8c4 3190 	str.w	r3, [r4, #400]	@ 0x190
        : TextAreaWithWildcardBase(), wc1(0)
900048fe:	4ba5      	ldr	r3, [pc, #660]	@ (90004b94 <_ZN18DataScreenViewBaseC1Ev+0x3c0>)
90004900:	f8a4 6174 	strh.w	r6, [r4, #372]	@ 0x174
90004904:	f8c4 b17e 	str.w	fp, [r4, #382]	@ 0x17e
90004908:	f8a4 91b4 	strh.w	r9, [r4, #436]	@ 0x1b4
9000490c:	f8a4 61bc 	strh.w	r6, [r4, #444]	@ 0x1bc
90004910:	f8c4 8170 	str.w	r8, [r4, #368]	@ 0x170
        : color(col)
90004914:	f8c4 5178 	str.w	r5, [r4, #376]	@ 0x178
90004918:	f8a4 517c 	strh.w	r5, [r4, #380]	@ 0x17c
              text(0)
9000491c:	f8c4 518c 	str.w	r5, [r4, #396]	@ 0x18c
90004920:	f8c4 81b8 	str.w	r8, [r4, #440]	@ 0x1b8
90004924:	f8c4 51c0 	str.w	r5, [r4, #448]	@ 0x1c0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
90004928:	f8a4 51c4 	strh.w	r5, [r4, #452]	@ 0x1c4
        : x(0), y(0), width(0), height(0)
9000492c:	e9c4 5553 	strd	r5, r5, [r4, #332]	@ 0x14c
90004930:	e9c4 5555 	strd	r5, r5, [r4, #340]	@ 0x154
          nextSibling(0),
90004934:	e9c4 5557 	strd	r5, r5, [r4, #348]	@ 0x15c
          cachedAbsX(0),
90004938:	e9c4 5559 	strd	r5, r5, [r4, #356]	@ 0x164
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000493c:	e9c4 5761 	strd	r5, r7, [r4, #388]	@ 0x184
        : x(0), y(0), width(0), height(0)
90004940:	e9c4 5565 	strd	r5, r5, [r4, #404]	@ 0x194
90004944:	e9c4 5567 	strd	r5, r5, [r4, #412]	@ 0x19c
          nextSibling(0),
90004948:	e9c4 5569 	strd	r5, r5, [r4, #420]	@ 0x1a4
          cachedAbsX(0),
9000494c:	e9c4 556b 	strd	r5, r5, [r4, #428]	@ 0x1ac
90004950:	f8c4 b1c6 	str.w	fp, [r4, #454]	@ 0x1c6
          touchable(false),
90004954:	f8a4 91fc 	strh.w	r9, [r4, #508]	@ 0x1fc
90004958:	f8a4 9248 	strh.w	r9, [r4, #584]	@ 0x248
9000495c:	f104 0904 	add.w	r9, r4, #4
90004960:	f8a4 6204 	strh.w	r6, [r4, #516]	@ 0x204
90004964:	f8c4 b20e 	str.w	fp, [r4, #526]	@ 0x20e
90004968:	4648      	mov	r0, r9
9000496a:	f8c4 31d8 	str.w	r3, [r4, #472]	@ 0x1d8
              text(0)
9000496e:	f8c4 51d4 	str.w	r5, [r4, #468]	@ 0x1d4
90004972:	f8c4 8200 	str.w	r8, [r4, #512]	@ 0x200
        : color(col)
90004976:	f8c4 5208 	str.w	r5, [r4, #520]	@ 0x208
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
9000497a:	f8a4 520c 	strh.w	r5, [r4, #524]	@ 0x20c
9000497e:	f8c4 824c 	str.w	r8, [r4, #588]	@ 0x24c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004982:	e9c4 5773 	strd	r5, r7, [r4, #460]	@ 0x1cc
        : x(0), y(0), width(0), height(0)
90004986:	e9c4 5577 	strd	r5, r5, [r4, #476]	@ 0x1dc
9000498a:	e9c4 5579 	strd	r5, r5, [r4, #484]	@ 0x1e4
          nextSibling(0),
9000498e:	e9c4 557b 	strd	r5, r5, [r4, #492]	@ 0x1ec
          cachedAbsX(0),
90004992:	e9c4 557d 	strd	r5, r5, [r4, #500]	@ 0x1f4
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
90004996:	e9c4 5785 	strd	r5, r7, [r4, #532]	@ 0x214
9000499a:	e9c4 5587 	strd	r5, r5, [r4, #540]	@ 0x21c
        : x(0), y(0), width(0), height(0)
9000499e:	e9c4 558a 	strd	r5, r5, [r4, #552]	@ 0x228
900049a2:	e9c4 558c 	strd	r5, r5, [r4, #560]	@ 0x230
          nextSibling(0),
900049a6:	e9c4 558e 	strd	r5, r5, [r4, #568]	@ 0x238
          cachedAbsX(0),
900049aa:	e9c4 5590 	strd	r5, r5, [r4, #576]	@ 0x240
900049ae:	f8a4 6250 	strh.w	r6, [r4, #592]	@ 0x250
        rect.x = x;
900049b2:	4e79      	ldr	r6, [pc, #484]	@ (90004b98 <_ZN18DataScreenViewBaseC1Ev+0x3c4>)
900049b4:	f8c4 3224 	str.w	r3, [r4, #548]	@ 0x224
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
900049b8:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
900049bc:	f8c4 b25a 	str.w	fp, [r4, #602]	@ 0x25a
    textArea1.setXY(99, 27);
900049c0:	f104 0b98 	add.w	fp, r4, #152	@ 0x98
900049c4:	64a6      	str	r6, [r4, #72]	@ 0x48
900049c6:	66a3      	str	r3, [r4, #104]	@ 0x68
        : color(col)
900049c8:	f8c4 5254 	str.w	r5, [r4, #596]	@ 0x254
900049cc:	f8a4 5258 	strh.w	r5, [r4, #600]	@ 0x258
900049d0:	6465      	str	r5, [r4, #68]	@ 0x44
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
900049d2:	e9c4 5798 	strd	r5, r7, [r4, #608]	@ 0x260
900049d6:	e9c4 559a 	strd	r5, r5, [r4, #616]	@ 0x268
900049da:	f00b fa59 	bl	9000fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
900049de:	4b6f      	ldr	r3, [pc, #444]	@ (90004b9c <_ZN18DataScreenViewBaseC1Ev+0x3c8>)
900049e0:	f104 016c 	add.w	r1, r4, #108	@ 0x6c
900049e4:	4648      	mov	r0, r9
900049e6:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
900049ea:	e9c4 561c 	strd	r5, r6, [r4, #112]	@ 0x70
900049ee:	f00b fa4f 	bl	9000fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        boundingArea = calculateBoundingArea();
900049f2:	ae02      	add	r6, sp, #8
900049f4:	4b6a      	ldr	r3, [pc, #424]	@ (90004ba0 <_ZN18DataScreenViewBaseC1Ev+0x3cc>)
900049f6:	4659      	mov	r1, fp
900049f8:	4630      	mov	r0, r6
        color = newColor;
900049fa:	f8c4 70c8 	str.w	r7, [r4, #200]	@ 0xc8
900049fe:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
        linespace = space;
90004a02:	f8a4 50cc 	strh.w	r5, [r4, #204]	@ 0xcc
        boundingArea = calculateBoundingArea();
90004a06:	f00e fabf 	bl	90012f88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90004a0a:	2206      	movs	r2, #6
90004a0c:	f104 03d4 	add.w	r3, r4, #212	@ 0xd4
90004a10:	f8cd 8018 	str.w	r8, [sp, #24]
90004a14:	f8ad 201c 	strh.w	r2, [sp, #28]
90004a18:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90004a1c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NOMS));
90004a20:	4658      	mov	r0, fp
90004a22:	a906      	add	r1, sp, #24
90004a24:	f00e fd58 	bl	900134d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90004a28:	4659      	mov	r1, fp
90004a2a:	4648      	mov	r0, r9
90004a2c:	f8df b198 	ldr.w	fp, [pc, #408]	@ 90004bc8 <_ZN18DataScreenViewBaseC1Ev+0x3f4>
90004a30:	f00b fa2e 	bl	9000fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004a34:	f04f 1356 	mov.w	r3, #5636182	@ 0x560056
    animatedImage1.setBitmaps(BITMAP_HEARTLOGO100X100_ID, BITMAP_HEARTLOGO110X110_ID);
90004a38:	2202      	movs	r2, #2
90004a3a:	4650      	mov	r0, sl
90004a3c:	f8c4 30e4 	str.w	r3, [r4, #228]	@ 0xe4
90004a40:	2101      	movs	r1, #1
90004a42:	f00e f9a5 	bl	90012d90 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    animatedImage1.setUpdateTicksInterval(18);
90004a46:	4650      	mov	r0, sl
90004a48:	2112      	movs	r1, #18
90004a4a:	f00e f9b4 	bl	90012db6 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    animatedImage1.startAnimation(false, true, true);
90004a4e:	2301      	movs	r3, #1
90004a50:	4650      	mov	r0, sl
90004a52:	4629      	mov	r1, r5
90004a54:	461a      	mov	r2, r3
90004a56:	f00e f8f3 	bl	90012c40 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
90004a5a:	4651      	mov	r1, sl
90004a5c:	4648      	mov	r0, r9
90004a5e:	f00b fa17 	bl	9000fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004a62:	4b50      	ldr	r3, [pc, #320]	@ (90004ba4 <_ZN18DataScreenViewBaseC1Ev+0x3d0>)
    image1.setBitmap(touchgfx::Bitmap(BITMAP_SP02_ID));
90004a64:	f8dd a004 	ldr.w	sl, [sp, #4]
90004a68:	a906      	add	r1, sp, #24
90004a6a:	f8c4 3120 	str.w	r3, [r4, #288]	@ 0x120
90004a6e:	2303      	movs	r3, #3
90004a70:	4650      	mov	r0, sl
90004a72:	f8ad 3018 	strh.w	r3, [sp, #24]
90004a76:	f00e febe 	bl	900137f6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90004a7a:	4651      	mov	r1, sl
90004a7c:	4648      	mov	r0, r9
90004a7e:	f00b fa07 	bl	9000fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea2.setXY(79, 174);
90004a82:	f504 7aa4 	add.w	sl, r4, #328	@ 0x148
90004a86:	4b48      	ldr	r3, [pc, #288]	@ (90004ba8 <_ZN18DataScreenViewBaseC1Ev+0x3d4>)
90004a88:	4630      	mov	r0, r6
90004a8a:	4651      	mov	r1, sl
        color = newColor;
90004a8c:	f8c4 7178 	str.w	r7, [r4, #376]	@ 0x178
90004a90:	f8c4 314c 	str.w	r3, [r4, #332]	@ 0x14c
        linespace = space;
90004a94:	f8a4 517c 	strh.w	r5, [r4, #380]	@ 0x17c
        boundingArea = calculateBoundingArea();
90004a98:	f00e fa76 	bl	90012f88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90004a9c:	2205      	movs	r2, #5
90004a9e:	f504 73c2 	add.w	r3, r4, #388	@ 0x184
90004aa2:	f8cd 8018 	str.w	r8, [sp, #24]
90004aa6:	f8ad 201c 	strh.w	r2, [sp, #28]
90004aaa:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90004aae:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FE3G));
90004ab2:	4650      	mov	r0, sl
90004ab4:	a906      	add	r1, sp, #24
90004ab6:	f00e fd0f 	bl	900134d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90004aba:	4651      	mov	r1, sl
90004abc:	4648      	mov	r0, r9
    textArea3.setXY(260, 174);
90004abe:	f504 7ac8 	add.w	sl, r4, #400	@ 0x190
90004ac2:	f00b f9e5 	bl	9000fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90004ac6:	4b39      	ldr	r3, [pc, #228]	@ (90004bac <_ZN18DataScreenViewBaseC1Ev+0x3d8>)
90004ac8:	4651      	mov	r1, sl
90004aca:	4630      	mov	r0, r6
90004acc:	f8c4 3194 	str.w	r3, [r4, #404]	@ 0x194
        color = newColor;
90004ad0:	f8c4 71c0 	str.w	r7, [r4, #448]	@ 0x1c0
        linespace = space;
90004ad4:	f8a4 51c4 	strh.w	r5, [r4, #452]	@ 0x1c4
        boundingArea = calculateBoundingArea();
90004ad8:	f00e fa56 	bl	90012f88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
90004adc:	2204      	movs	r2, #4
90004ade:	f504 73e6 	add.w	r3, r4, #460	@ 0x1cc
90004ae2:	f8cd 8018 	str.w	r8, [sp, #24]
90004ae6:	f8ad 201c 	strh.w	r2, [sp, #28]
90004aea:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90004aee:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4PEZ));
90004af2:	4650      	mov	r0, sl
90004af4:	a906      	add	r1, sp, #24
90004af6:	f00e fcef 	bl	900134d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90004afa:	4651      	mov	r1, sl
90004afc:	4648      	mov	r0, r9
    textArea4.setXY(107, 204);
90004afe:	f504 7aec 	add.w	sl, r4, #472	@ 0x1d8
90004b02:	f00b f9c5 	bl	9000fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setX(x);
90004b06:	f8d4 31d8 	ldr.w	r3, [r4, #472]	@ 0x1d8
        rect.x = x;
90004b0a:	4a29      	ldr	r2, [pc, #164]	@ (90004bb0 <_ZN18DataScreenViewBaseC1Ev+0x3dc>)
90004b0c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
        color = newColor;
90004b10:	f8c4 7208 	str.w	r7, [r4, #520]	@ 0x208
90004b14:	455b      	cmp	r3, fp
        linespace = space;
90004b16:	f8a4 520c 	strh.w	r5, [r4, #524]	@ 0x20c
90004b1a:	f8c4 21dc 	str.w	r2, [r4, #476]	@ 0x1dc
90004b1e:	f040 8097 	bne.w	90004c50 <_ZN18DataScreenViewBaseC1Ev+0x47c>
        boundingArea = calculateBoundingArea();
90004b22:	f8c4 521c 	str.w	r5, [r4, #540]	@ 0x21c
90004b26:	e9c4 5785 	strd	r5, r7, [r4, #532]	@ 0x214
    Unicode::snprintf(textArea4Buffer, TEXTAREA4_SIZE, "%s", touchgfx::TypedText(T_HR_DATA).getText());
90004b2a:	f504 731c 	add.w	r3, r4, #624	@ 0x270
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004b2e:	4d21      	ldr	r5, [pc, #132]	@ (90004bb4 <_ZN18DataScreenViewBaseC1Ev+0x3e0>)
90004b30:	9301      	str	r3, [sp, #4]
90004b32:	682b      	ldr	r3, [r5, #0]
90004b34:	2b00      	cmp	r3, #0
90004b36:	f000 809f 	beq.w	90004c78 <_ZN18DataScreenViewBaseC1Ev+0x4a4>
        return typedTextId < numberOfTypedTexts;
90004b3a:	4f1f      	ldr	r7, [pc, #124]	@ (90004bb8 <_ZN18DataScreenViewBaseC1Ev+0x3e4>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004b3c:	883b      	ldrh	r3, [r7, #0]
90004b3e:	2b02      	cmp	r3, #2
90004b40:	f240 80a0 	bls.w	90004c84 <_ZN18DataScreenViewBaseC1Ev+0x4b0>
        return texts->getText(typedTextId);
90004b44:	4b1d      	ldr	r3, [pc, #116]	@ (90004bbc <_ZN18DataScreenViewBaseC1Ev+0x3e8>)
90004b46:	2102      	movs	r1, #2
90004b48:	6818      	ldr	r0, [r3, #0]
90004b4a:	f000 ff2d 	bl	900059a8 <_ZNK8touchgfx5Texts7getTextEt>
90004b4e:	4a1c      	ldr	r2, [pc, #112]	@ (90004bc0 <_ZN18DataScreenViewBaseC1Ev+0x3ec>)
90004b50:	4603      	mov	r3, r0
90004b52:	2105      	movs	r1, #5
90004b54:	9801      	ldr	r0, [sp, #4]
90004b56:	f015 f829 	bl	90019bac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        wc1 = value;
90004b5a:	9b01      	ldr	r3, [sp, #4]
    textArea4.resizeToCurrentText();
90004b5c:	4650      	mov	r0, sl
90004b5e:	f8c4 3220 	str.w	r3, [r4, #544]	@ 0x220
90004b62:	f00e fc99 	bl	90013498 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
90004b66:	2303      	movs	r3, #3
    textArea4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MADA));
90004b68:	4650      	mov	r0, sl
90004b6a:	a906      	add	r1, sp, #24
90004b6c:	f8ad 301c 	strh.w	r3, [sp, #28]
90004b70:	f8cd 8018 	str.w	r8, [sp, #24]
90004b74:	f00e fcb0 	bl	900134d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90004b78:	4651      	mov	r1, sl
90004b7a:	4648      	mov	r0, r9
90004b7c:	e026      	b.n	90004bcc <_ZN18DataScreenViewBaseC1Ev+0x3f8>
90004b7e:	bf00      	nop
90004b80:	9002d438 	.word	0x9002d438
90004b84:	9002c7a8 	.word	0x9002c7a8
90004b88:	9002d4a0 	.word	0x9002d4a0
90004b8c:	9002d3a8 	.word	0x9002d3a8
90004b90:	9002d32c 	.word	0x9002d32c
90004b94:	9002c718 	.word	0x9002c718
90004b98:	011001e0 	.word	0x011001e0
90004b9c:	ff7fa6eb 	.word	0xff7fa6eb
90004ba0:	001b0063 	.word	0x001b0063
90004ba4:	0056011a 	.word	0x0056011a
90004ba8:	00ae004f 	.word	0x00ae004f
90004bac:	00ae0104 	.word	0x00ae0104
90004bb0:	00cc006b 	.word	0x00cc006b
90004bb4:	240219e4 	.word	0x240219e4
90004bb8:	240219e8 	.word	0x240219e8
90004bbc:	240219f0 	.word	0x240219f0
90004bc0:	9002bcd0 	.word	0x9002bcd0
90004bc4:	9002c708 	.word	0x9002c708
90004bc8:	90004629 	.word	0x90004629
90004bcc:	f00b f960 	bl	9000fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
        setX(x);
90004bd0:	f8d4 3224 	ldr.w	r3, [r4, #548]	@ 0x224
        color = newColor;
90004bd4:	f04f 31ff 	mov.w	r1, #4294967295
    textArea5.setXY(320, 204);
90004bd8:	f504 7a09 	add.w	sl, r4, #548	@ 0x224
        boundingArea = calculateBoundingArea();
90004bdc:	f8d3 2084 	ldr.w	r2, [r3, #132]	@ 0x84
        rect.x = x;
90004be0:	4b2b      	ldr	r3, [pc, #172]	@ (90004c90 <_ZN18DataScreenViewBaseC1Ev+0x4bc>)
90004be2:	455a      	cmp	r2, fp
        color = newColor;
90004be4:	f8c4 1254 	str.w	r1, [r4, #596]	@ 0x254
90004be8:	f8c4 3228 	str.w	r3, [r4, #552]	@ 0x228
        linespace = space;
90004bec:	f04f 0300 	mov.w	r3, #0
90004bf0:	f8a4 3258 	strh.w	r3, [r4, #600]	@ 0x258
90004bf4:	d136      	bne.n	90004c64 <_ZN18DataScreenViewBaseC1Ev+0x490>
        boundingArea = calculateBoundingArea();
90004bf6:	f8c4 3268 	str.w	r3, [r4, #616]	@ 0x268
90004bfa:	e9c4 3198 	strd	r3, r1, [r4, #608]	@ 0x260
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004bfe:	682b      	ldr	r3, [r5, #0]
    Unicode::snprintf(textArea5Buffer, TEXTAREA5_SIZE, "%s", touchgfx::TypedText(T_SPO2_DATA).getText());
90004c00:	f204 257a 	addw	r5, r4, #634	@ 0x27a
90004c04:	2b00      	cmp	r3, #0
90004c06:	d037      	beq.n	90004c78 <_ZN18DataScreenViewBaseC1Ev+0x4a4>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004c08:	883b      	ldrh	r3, [r7, #0]
90004c0a:	2b00      	cmp	r3, #0
90004c0c:	d03a      	beq.n	90004c84 <_ZN18DataScreenViewBaseC1Ev+0x4b0>
        return texts->getText(typedTextId);
90004c0e:	4b21      	ldr	r3, [pc, #132]	@ (90004c94 <_ZN18DataScreenViewBaseC1Ev+0x4c0>)
90004c10:	2100      	movs	r1, #0
90004c12:	6818      	ldr	r0, [r3, #0]
90004c14:	f000 fec8 	bl	900059a8 <_ZNK8touchgfx5Texts7getTextEt>
90004c18:	4a1f      	ldr	r2, [pc, #124]	@ (90004c98 <_ZN18DataScreenViewBaseC1Ev+0x4c4>)
90004c1a:	4603      	mov	r3, r0
90004c1c:	2105      	movs	r1, #5
90004c1e:	4628      	mov	r0, r5
90004c20:	f014 ffc4 	bl	90019bac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textArea5.resizeToCurrentText();
90004c24:	4650      	mov	r0, sl
90004c26:	f8c4 526c 	str.w	r5, [r4, #620]	@ 0x26c
90004c2a:	f00e fc35 	bl	90013498 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
90004c2e:	2301      	movs	r3, #1
    textArea5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ED91));
90004c30:	a906      	add	r1, sp, #24
90004c32:	4650      	mov	r0, sl
90004c34:	f8ad 301c 	strh.w	r3, [sp, #28]
90004c38:	f8cd 8018 	str.w	r8, [sp, #24]
90004c3c:	f00e fc4c 	bl	900134d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
90004c40:	4648      	mov	r0, r9
90004c42:	4651      	mov	r1, sl
90004c44:	f00b f924 	bl	9000fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90004c48:	4620      	mov	r0, r4
90004c4a:	b009      	add	sp, #36	@ 0x24
90004c4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90004c50:	4651      	mov	r1, sl
90004c52:	4630      	mov	r0, r6
90004c54:	4798      	blx	r3
90004c56:	f504 7305 	add.w	r3, r4, #532	@ 0x214
90004c5a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90004c5e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90004c62:	e762      	b.n	90004b2a <_ZN18DataScreenViewBaseC1Ev+0x356>
90004c64:	4651      	mov	r1, sl
90004c66:	4630      	mov	r0, r6
90004c68:	4790      	blx	r2
90004c6a:	f504 7318 	add.w	r3, r4, #608	@ 0x260
90004c6e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
90004c72:	e883 0007 	stmia.w	r3, {r0, r1, r2}
90004c76:	e7c2      	b.n	90004bfe <_ZN18DataScreenViewBaseC1Ev+0x42a>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90004c78:	4b08      	ldr	r3, [pc, #32]	@ (90004c9c <_ZN18DataScreenViewBaseC1Ev+0x4c8>)
90004c7a:	2160      	movs	r1, #96	@ 0x60
90004c7c:	4a08      	ldr	r2, [pc, #32]	@ (90004ca0 <_ZN18DataScreenViewBaseC1Ev+0x4cc>)
90004c7e:	4809      	ldr	r0, [pc, #36]	@ (90004ca4 <_ZN18DataScreenViewBaseC1Ev+0x4d0>)
90004c80:	f024 fc72 	bl	90029568 <__assert_func>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
90004c84:	4b08      	ldr	r3, [pc, #32]	@ (90004ca8 <_ZN18DataScreenViewBaseC1Ev+0x4d4>)
90004c86:	2161      	movs	r1, #97	@ 0x61
90004c88:	4a05      	ldr	r2, [pc, #20]	@ (90004ca0 <_ZN18DataScreenViewBaseC1Ev+0x4cc>)
90004c8a:	4806      	ldr	r0, [pc, #24]	@ (90004ca4 <_ZN18DataScreenViewBaseC1Ev+0x4d0>)
90004c8c:	f024 fc6c 	bl	90029568 <__assert_func>
90004c90:	00cc0140 	.word	0x00cc0140
90004c94:	240219f0 	.word	0x240219f0
90004c98:	9002bcd0 	.word	0x9002bcd0
90004c9c:	9002bb7c 	.word	0x9002bb7c
90004ca0:	9002bc84 	.word	0x9002bc84
90004ca4:	9002bbfc 	.word	0x9002bbfc
90004ca8:	9002bc44 	.word	0x9002bc44

90004cac <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
90004cac:	4770      	bx	lr
90004cae:	bf00      	nop

90004cb0 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
90004cb0:	f500 7398 	add.w	r3, r0, #304	@ 0x130
90004cb4:	6808      	ldr	r0, [r1, #0]
90004cb6:	6849      	ldr	r1, [r1, #4]
90004cb8:	c303      	stmia	r3!, {r0, r1}
    }
90004cba:	4770      	bx	lr

90004cbc <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
90004cbc:	4770      	bx	lr
90004cbe:	bf00      	nop

90004cc0 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
90004cc0:	4770      	bx	lr
90004cc2:	bf00      	nop

90004cc4 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
90004cc4:	6041      	str	r1, [r0, #4]
    }
90004cc6:	4770      	bx	lr

90004cc8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004cc8:	4770      	bx	lr
90004cca:	bf00      	nop

90004ccc <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
90004ccc:	4770      	bx	lr
90004cce:	bf00      	nop

90004cd0 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
90004cd0:	4905      	ldr	r1, [pc, #20]	@ (90004ce8 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x18>)
90004cd2:	2200      	movs	r2, #0
// StartScreen

void FrontendApplicationBase::gotoStartScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoStartScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
90004cd4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
90004cd8:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
90004cdc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90004ce0:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148

    virtual void changeToStartScreen()
    {
        gotoStartScreenScreenNoTransition();
    }
90004ce4:	4770      	bx	lr
90004ce6:	bf00      	nop
90004ce8:	90004f11 	.word	0x90004f11

90004cec <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
90004cec:	2301      	movs	r3, #1
90004cee:	7203      	strb	r3, [r0, #8]
    }
90004cf0:	4770      	bx	lr
90004cf2:	bf00      	nop

90004cf4 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
90004cf4:	4770      	bx	lr
90004cf6:	bf00      	nop

90004cf8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
    {
        (pobject->*pmemfun)();
90004cf8:	1d01      	adds	r1, r0, #4
90004cfa:	c90e      	ldmia	r1, {r1, r2, r3}
90004cfc:	ea4f 0c63 	mov.w	ip, r3, asr #1
90004d00:	eb01 0063 	add.w	r0, r1, r3, asr #1
90004d04:	07db      	lsls	r3, r3, #31
90004d06:	d502      	bpl.n	90004d0e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x16>
90004d08:	f851 300c 	ldr.w	r3, [r1, ip]
90004d0c:	589a      	ldr	r2, [r3, r2]
90004d0e:	4710      	bx	r2

90004d10 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
90004d10:	6843      	ldr	r3, [r0, #4]
90004d12:	b13b      	cbz	r3, 90004d24 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
90004d14:	6883      	ldr	r3, [r0, #8]
90004d16:	b10b      	cbz	r3, 90004d1c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0xc>
90004d18:	2001      	movs	r0, #1
    }
90004d1a:	4770      	bx	lr
90004d1c:	68c0      	ldr	r0, [r0, #12]
90004d1e:	f000 0001 	and.w	r0, r0, #1
90004d22:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
90004d24:	4618      	mov	r0, r3
90004d26:	4770      	bx	lr

90004d28 <_ZN8touchgfx12NoTransitionD0Ev>:
90004d28:	b510      	push	{r4, lr}
90004d2a:	4604      	mov	r4, r0
90004d2c:	210c      	movs	r1, #12
90004d2e:	f024 f8a5 	bl	90028e7c <_ZdlPvj>
90004d32:	4620      	mov	r0, r4
90004d34:	bd10      	pop	{r4, pc}
90004d36:	bf00      	nop

90004d38 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
90004d38:	b510      	push	{r4, lr}
90004d3a:	4604      	mov	r4, r0
90004d3c:	2110      	movs	r1, #16
90004d3e:	f024 f89d 	bl	90028e7c <_ZdlPvj>
90004d42:	4620      	mov	r0, r4
90004d44:	bd10      	pop	{r4, pc}
90004d46:	bf00      	nop

90004d48 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
90004d48:	b510      	push	{r4, lr}
90004d4a:	4604      	mov	r4, r0
90004d4c:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
90004d50:	f024 f894 	bl	90028e7c <_ZdlPvj>
90004d54:	4620      	mov	r0, r4
90004d56:	bd10      	pop	{r4, pc}

90004d58 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
90004d58:	b510      	push	{r4, lr}
        Application::getInstance()->invalidate();
90004d5a:	f011 fa1f 	bl	9001619c <_ZN8touchgfx11Application11getInstanceEv>
90004d5e:	6803      	ldr	r3, [r0, #0]
    }
90004d60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->invalidate();
90004d64:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90004d66:	4718      	bx	r3

90004d68 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoDataScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoDataScreenScreenNoTransitionImpl()
{
90004d68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<DataScreenView, DataScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004d6c:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90004d70:	4607      	mov	r7, r0
90004d72:	b081      	sub	sp, #4
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004d74:	68b0      	ldr	r0, [r6, #8]
90004d76:	6803      	ldr	r3, [r0, #0]
90004d78:	6a1b      	ldr	r3, [r3, #32]
90004d7a:	4798      	blx	r3
90004d7c:	f5b0 7f21 	cmp.w	r0, #644	@ 0x284
90004d80:	f0c0 809d 	bcc.w	90004ebe <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x156>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004d84:	6870      	ldr	r0, [r6, #4]
90004d86:	6803      	ldr	r3, [r0, #0]
90004d88:	6a1b      	ldr	r3, [r3, #32]
90004d8a:	4798      	blx	r3
90004d8c:	280f      	cmp	r0, #15
90004d8e:	f240 80a2 	bls.w	90004ed6 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x16e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004d92:	68f0      	ldr	r0, [r6, #12]
90004d94:	6803      	ldr	r3, [r0, #0]
90004d96:	6a1b      	ldr	r3, [r3, #32]
90004d98:	4798      	blx	r3
90004d9a:	280b      	cmp	r0, #11
90004d9c:	f240 8095 	bls.w	90004eca <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x162>
    if (*currentTrans)
90004da0:	f8df 9164 	ldr.w	r9, [pc, #356]	@ 90004f08 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x1a0>
    Application::getInstance()->clearAllTimerWidgets();
90004da4:	f011 f9fa 	bl	9001619c <_ZN8touchgfx11Application11getInstanceEv>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
90004da8:	3004      	adds	r0, #4
90004daa:	f011 fa35 	bl	90016218 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90004dae:	f8d9 0000 	ldr.w	r0, [r9]
90004db2:	b130      	cbz	r0, 90004dc2 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->tearDown();
90004db4:	6803      	ldr	r3, [r0, #0]
90004db6:	494b      	ldr	r1, [pc, #300]	@ (90004ee4 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x17c>)
90004db8:	68da      	ldr	r2, [r3, #12]
90004dba:	428a      	cmp	r2, r1
90004dbc:	d178      	bne.n	90004eb0 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x148>
        (*currentTrans)->~Transition();
90004dbe:	681b      	ldr	r3, [r3, #0]
90004dc0:	4798      	blx	r3
    if (*currentScreen)
90004dc2:	f8df 8148 	ldr.w	r8, [pc, #328]	@ 90004f0c <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x1a4>
90004dc6:	f8d8 0000 	ldr.w	r0, [r8]
90004dca:	2800      	cmp	r0, #0
90004dcc:	d062      	beq.n	90004e94 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x12c>
        (*currentScreen)->tearDownScreen();
90004dce:	6803      	ldr	r3, [r0, #0]
90004dd0:	695b      	ldr	r3, [r3, #20]
90004dd2:	4798      	blx	r3
    if (*currentPresenter)
90004dd4:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004dd8:	2800      	cmp	r0, #0
90004dda:	d056      	beq.n	90004e8a <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x122>
        (*currentPresenter)->deactivate();
90004ddc:	6803      	ldr	r3, [r0, #0]
90004dde:	685b      	ldr	r3, [r3, #4]
90004de0:	4798      	blx	r3
    if (*currentScreen)
90004de2:	f8d8 0000 	ldr.w	r0, [r8]
90004de6:	b110      	cbz	r0, 90004dee <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x86>
        (*currentScreen)->~Screen();
90004de8:	6803      	ldr	r3, [r0, #0]
90004dea:	681b      	ldr	r3, [r3, #0]
90004dec:	4798      	blx	r3
    if (*currentPresenter)
90004dee:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004df2:	b110      	cbz	r0, 90004dfa <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x92>
        (*currentPresenter)->~Presenter();
90004df4:	6803      	ldr	r3, [r0, #0]
90004df6:	689b      	ldr	r3, [r3, #8]
90004df8:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90004dfa:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
90004dfc:	2100      	movs	r1, #0
        : screenContainer(0), done(false)
90004dfe:	f04f 0b00 	mov.w	fp, #0
90004e02:	6803      	ldr	r3, [r0, #0]
90004e04:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004e06:	4798      	blx	r3
90004e08:	4b37      	ldr	r3, [pc, #220]	@ (90004ee8 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x180>)
90004e0a:	4604      	mov	r4, r0
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90004e0c:	68b0      	ldr	r0, [r6, #8]
90004e0e:	4659      	mov	r1, fp
90004e10:	6023      	str	r3, [r4, #0]
90004e12:	6803      	ldr	r3, [r0, #0]
90004e14:	f8c4 b004 	str.w	fp, [r4, #4]
90004e18:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004e1a:	f884 b008 	strb.w	fp, [r4, #8]
90004e1e:	4798      	blx	r3
90004e20:	4605      	mov	r5, r0
90004e22:	f000 fe33 	bl	90005a8c <_ZN14DataScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90004e26:	6870      	ldr	r0, [r6, #4]
90004e28:	4659      	mov	r1, fp
90004e2a:	6803      	ldr	r3, [r0, #0]
90004e2c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004e2e:	4798      	blx	r3
90004e30:	4606      	mov	r6, r0
90004e32:	4629      	mov	r1, r5
90004e34:	f000 fe00 	bl	90005a38 <_ZN19DataScreenPresenterC1ER14DataScreenView>
    *currentTrans = newTransition;
    *currentPresenter = newPresenter;
    *currentScreen = newScreen;
    model->bind(newPresenter);
90004e38:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
90004e3a:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
90004e3e:	4628      	mov	r0, r5
    *currentTrans = newTransition;
90004e40:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90004e44:	f8c8 5000 	str.w	r5, [r8]
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
90004e48:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90004e4c:	682b      	ldr	r3, [r5, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
90004e4e:	f8c6 a008 	str.w	sl, [r6, #8]
90004e52:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
90004e54:	63ee      	str	r6, [r5, #60]	@ 0x3c
90004e56:	4798      	blx	r3
    newPresenter->activate();
90004e58:	6833      	ldr	r3, [r6, #0]
90004e5a:	4630      	mov	r0, r6
90004e5c:	681b      	ldr	r3, [r3, #0]
90004e5e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90004e60:	4621      	mov	r1, r4
90004e62:	4628      	mov	r0, r5
90004e64:	f013 fb9c 	bl	900185a0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90004e68:	6823      	ldr	r3, [r4, #0]
90004e6a:	4920      	ldr	r1, [pc, #128]	@ (90004eec <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x184>)
90004e6c:	691a      	ldr	r2, [r3, #16]
90004e6e:	428a      	cmp	r2, r1
90004e70:	d11a      	bne.n	90004ea8 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
90004e72:	695b      	ldr	r3, [r3, #20]
90004e74:	4a1e      	ldr	r2, [pc, #120]	@ (90004ef0 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x188>)
90004e76:	4293      	cmp	r3, r2
90004e78:	d111      	bne.n	90004e9e <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x136>
        Application::getInstance()->invalidate();
90004e7a:	f011 f98f 	bl	9001619c <_ZN8touchgfx11Application11getInstanceEv>
90004e7e:	6803      	ldr	r3, [r0, #0]
90004e80:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
90004e82:	b001      	add	sp, #4
90004e84:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004e88:	4718      	bx	r3
    if (*currentScreen)
90004e8a:	f8d8 0000 	ldr.w	r0, [r8]
90004e8e:	2800      	cmp	r0, #0
90004e90:	d1aa      	bne.n	90004de8 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x80>
90004e92:	e7b2      	b.n	90004dfa <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x92>
    if (*currentPresenter)
90004e94:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004e98:	2800      	cmp	r0, #0
90004e9a:	d19f      	bne.n	90004ddc <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x74>
90004e9c:	e7ad      	b.n	90004dfa <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x92>
    newTransition->invalidate();
90004e9e:	4620      	mov	r0, r4
90004ea0:	b001      	add	sp, #4
90004ea2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90004ea6:	4718      	bx	r3
    newTransition->init();
90004ea8:	4620      	mov	r0, r4
90004eaa:	4790      	blx	r2
    newTransition->invalidate();
90004eac:	6823      	ldr	r3, [r4, #0]
90004eae:	e7e0      	b.n	90004e72 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x10a>
        (*currentTrans)->tearDown();
90004eb0:	4790      	blx	r2
    if (*currentTrans)
90004eb2:	f8d9 0000 	ldr.w	r0, [r9]
90004eb6:	2800      	cmp	r0, #0
90004eb8:	d083      	beq.n	90004dc2 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->~Transition();
90004eba:	6803      	ldr	r3, [r0, #0]
90004ebc:	e77f      	b.n	90004dbe <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x56>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004ebe:	4b0d      	ldr	r3, [pc, #52]	@ (90004ef4 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x18c>)
90004ec0:	21a3      	movs	r1, #163	@ 0xa3
90004ec2:	4a0d      	ldr	r2, [pc, #52]	@ (90004ef8 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x190>)
90004ec4:	480d      	ldr	r0, [pc, #52]	@ (90004efc <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x194>)
90004ec6:	f024 fb4f 	bl	90029568 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004eca:	4b0d      	ldr	r3, [pc, #52]	@ (90004f00 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x198>)
90004ecc:	21a5      	movs	r1, #165	@ 0xa5
90004ece:	4a0a      	ldr	r2, [pc, #40]	@ (90004ef8 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x190>)
90004ed0:	480a      	ldr	r0, [pc, #40]	@ (90004efc <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x194>)
90004ed2:	f024 fb49 	bl	90029568 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004ed6:	4b0b      	ldr	r3, [pc, #44]	@ (90004f04 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x19c>)
90004ed8:	21a4      	movs	r1, #164	@ 0xa4
90004eda:	4a07      	ldr	r2, [pc, #28]	@ (90004ef8 <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x190>)
90004edc:	4807      	ldr	r0, [pc, #28]	@ (90004efc <_ZN23FrontendApplicationBase36gotoDataScreenScreenNoTransitionImplEv+0x194>)
90004ede:	f024 fb43 	bl	90029568 <__assert_func>
90004ee2:	bf00      	nop
90004ee4:	90004cbd 	.word	0x90004cbd
90004ee8:	9002c850 	.word	0x9002c850
90004eec:	90004cc1 	.word	0x90004cc1
90004ef0:	90004d59 	.word	0x90004d59
90004ef4:	9002bcd4 	.word	0x9002bcd4
90004ef8:	9002bd64 	.word	0x9002bd64
90004efc:	9002be3c 	.word	0x9002be3c
90004f00:	9002bf28 	.word	0x9002bf28
90004f04:	9002be84 	.word	0x9002be84
90004f08:	240219d4 	.word	0x240219d4
90004f0c:	240219d0 	.word	0x240219d0

90004f10 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv>:
{
90004f10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<StartScreenView, StartScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
90004f14:	e9d0 6a55 	ldrd	r6, sl, [r0, #340]	@ 0x154
{
90004f18:	4607      	mov	r7, r0
90004f1a:	b081      	sub	sp, #4
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90004f1c:	68b0      	ldr	r0, [r6, #8]
90004f1e:	6803      	ldr	r3, [r0, #0]
90004f20:	6a1b      	ldr	r3, [r3, #32]
90004f22:	4798      	blx	r3
90004f24:	f5b0 7f9c 	cmp.w	r0, #312	@ 0x138
90004f28:	f0c0 809d 	bcc.w	90005066 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x156>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
90004f2c:	6870      	ldr	r0, [r6, #4]
90004f2e:	6803      	ldr	r3, [r0, #0]
90004f30:	6a1b      	ldr	r3, [r3, #32]
90004f32:	4798      	blx	r3
90004f34:	280f      	cmp	r0, #15
90004f36:	f240 80a2 	bls.w	9000507e <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x16e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90004f3a:	68f0      	ldr	r0, [r6, #12]
90004f3c:	6803      	ldr	r3, [r0, #0]
90004f3e:	6a1b      	ldr	r3, [r3, #32]
90004f40:	4798      	blx	r3
90004f42:	280b      	cmp	r0, #11
90004f44:	f240 8095 	bls.w	90005072 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x162>
    if (*currentTrans)
90004f48:	f8df 9164 	ldr.w	r9, [pc, #356]	@ 900050b0 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x1a0>
    Application::getInstance()->clearAllTimerWidgets();
90004f4c:	f011 f926 	bl	9001619c <_ZN8touchgfx11Application11getInstanceEv>
90004f50:	3004      	adds	r0, #4
90004f52:	f011 f961 	bl	90016218 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    if (*currentTrans)
90004f56:	f8d9 0000 	ldr.w	r0, [r9]
90004f5a:	b130      	cbz	r0, 90004f6a <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->tearDown();
90004f5c:	6803      	ldr	r3, [r0, #0]
90004f5e:	494b      	ldr	r1, [pc, #300]	@ (9000508c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x17c>)
90004f60:	68da      	ldr	r2, [r3, #12]
90004f62:	428a      	cmp	r2, r1
90004f64:	d178      	bne.n	90005058 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x148>
        (*currentTrans)->~Transition();
90004f66:	681b      	ldr	r3, [r3, #0]
90004f68:	4798      	blx	r3
    if (*currentScreen)
90004f6a:	f8df 8148 	ldr.w	r8, [pc, #328]	@ 900050b4 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x1a4>
90004f6e:	f8d8 0000 	ldr.w	r0, [r8]
90004f72:	2800      	cmp	r0, #0
90004f74:	d062      	beq.n	9000503c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x12c>
        (*currentScreen)->tearDownScreen();
90004f76:	6803      	ldr	r3, [r0, #0]
90004f78:	695b      	ldr	r3, [r3, #20]
90004f7a:	4798      	blx	r3
    if (*currentPresenter)
90004f7c:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004f80:	2800      	cmp	r0, #0
90004f82:	d056      	beq.n	90005032 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x122>
        (*currentPresenter)->deactivate();
90004f84:	6803      	ldr	r3, [r0, #0]
90004f86:	685b      	ldr	r3, [r3, #4]
90004f88:	4798      	blx	r3
    if (*currentScreen)
90004f8a:	f8d8 0000 	ldr.w	r0, [r8]
90004f8e:	b110      	cbz	r0, 90004f96 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x86>
        (*currentScreen)->~Screen();
90004f90:	6803      	ldr	r3, [r0, #0]
90004f92:	681b      	ldr	r3, [r3, #0]
90004f94:	4798      	blx	r3
    if (*currentPresenter)
90004f96:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90004f9a:	b110      	cbz	r0, 90004fa2 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x92>
        (*currentPresenter)->~Presenter();
90004f9c:	6803      	ldr	r3, [r0, #0]
90004f9e:	689b      	ldr	r3, [r3, #8]
90004fa0:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
90004fa2:	68f0      	ldr	r0, [r6, #12]
90004fa4:	2100      	movs	r1, #0
        : screenContainer(0), done(false)
90004fa6:	f04f 0b00 	mov.w	fp, #0
90004faa:	6803      	ldr	r3, [r0, #0]
90004fac:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004fae:	4798      	blx	r3
90004fb0:	4b37      	ldr	r3, [pc, #220]	@ (90005090 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x180>)
90004fb2:	4604      	mov	r4, r0
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
90004fb4:	68b0      	ldr	r0, [r6, #8]
90004fb6:	4659      	mov	r1, fp
90004fb8:	6023      	str	r3, [r4, #0]
90004fba:	6803      	ldr	r3, [r0, #0]
90004fbc:	f8c4 b004 	str.w	fp, [r4, #4]
90004fc0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004fc2:	f884 b008 	strb.w	fp, [r4, #8]
90004fc6:	4798      	blx	r3
90004fc8:	4605      	mov	r5, r0
90004fca:	f000 fdd1 	bl	90005b70 <_ZN15StartScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
90004fce:	6870      	ldr	r0, [r6, #4]
90004fd0:	4659      	mov	r1, fp
90004fd2:	6803      	ldr	r3, [r0, #0]
90004fd4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90004fd6:	4798      	blx	r3
90004fd8:	4606      	mov	r6, r0
90004fda:	4629      	mov	r1, r5
90004fdc:	f000 fd9e 	bl	90005b1c <_ZN20StartScreenPresenterC1ER15StartScreenView>
    model->bind(newPresenter);
90004fe0:	1d33      	adds	r3, r6, #4
    *currentPresenter = newPresenter;
90004fe2:	f8c7 613c 	str.w	r6, [r7, #316]	@ 0x13c
    newScreen->setupScreen();
90004fe6:	4628      	mov	r0, r5
    *currentTrans = newTransition;
90004fe8:	f8c9 4000 	str.w	r4, [r9]
    *currentScreen = newScreen;
90004fec:	f8c8 5000 	str.w	r5, [r8]
90004ff0:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
90004ff4:	682b      	ldr	r3, [r5, #0]
90004ff6:	f8c6 a008 	str.w	sl, [r6, #8]
90004ffa:	68db      	ldr	r3, [r3, #12]
90004ffc:	63ee      	str	r6, [r5, #60]	@ 0x3c
90004ffe:	4798      	blx	r3
    newPresenter->activate();
90005000:	6833      	ldr	r3, [r6, #0]
90005002:	4630      	mov	r0, r6
90005004:	681b      	ldr	r3, [r3, #0]
90005006:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
90005008:	4621      	mov	r1, r4
9000500a:	4628      	mov	r0, r5
9000500c:	f013 fac8 	bl	900185a0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
90005010:	6823      	ldr	r3, [r4, #0]
90005012:	4920      	ldr	r1, [pc, #128]	@ (90005094 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x184>)
90005014:	691a      	ldr	r2, [r3, #16]
90005016:	428a      	cmp	r2, r1
90005018:	d11a      	bne.n	90005050 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x140>
    newTransition->invalidate();
9000501a:	695b      	ldr	r3, [r3, #20]
9000501c:	4a1e      	ldr	r2, [pc, #120]	@ (90005098 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x188>)
9000501e:	4293      	cmp	r3, r2
90005020:	d111      	bne.n	90005046 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x136>
        Application::getInstance()->invalidate();
90005022:	f011 f8bb 	bl	9001619c <_ZN8touchgfx11Application11getInstanceEv>
90005026:	6803      	ldr	r3, [r0, #0]
90005028:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
}
9000502a:	b001      	add	sp, #4
9000502c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90005030:	4718      	bx	r3
    if (*currentScreen)
90005032:	f8d8 0000 	ldr.w	r0, [r8]
90005036:	2800      	cmp	r0, #0
90005038:	d1aa      	bne.n	90004f90 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x80>
9000503a:	e7b2      	b.n	90004fa2 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x92>
    if (*currentPresenter)
9000503c:	f8d7 013c 	ldr.w	r0, [r7, #316]	@ 0x13c
90005040:	2800      	cmp	r0, #0
90005042:	d19f      	bne.n	90004f84 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x74>
90005044:	e7ad      	b.n	90004fa2 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x92>
    newTransition->invalidate();
90005046:	4620      	mov	r0, r4
90005048:	b001      	add	sp, #4
9000504a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000504e:	4718      	bx	r3
    newTransition->init();
90005050:	4620      	mov	r0, r4
90005052:	4790      	blx	r2
    newTransition->invalidate();
90005054:	6823      	ldr	r3, [r4, #0]
90005056:	e7e0      	b.n	9000501a <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x10a>
        (*currentTrans)->tearDown();
90005058:	4790      	blx	r2
    if (*currentTrans)
9000505a:	f8d9 0000 	ldr.w	r0, [r9]
9000505e:	2800      	cmp	r0, #0
90005060:	d083      	beq.n	90004f6a <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x5a>
        (*currentTrans)->~Transition();
90005062:	6803      	ldr	r3, [r0, #0]
90005064:	e77f      	b.n	90004f66 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x56>
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
90005066:	4b0d      	ldr	r3, [pc, #52]	@ (9000509c <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x18c>)
90005068:	21a3      	movs	r1, #163	@ 0xa3
9000506a:	4a0d      	ldr	r2, [pc, #52]	@ (900050a0 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x190>)
9000506c:	480d      	ldr	r0, [pc, #52]	@ (900050a4 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x194>)
9000506e:	f024 fa7b 	bl	90029568 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
90005072:	4b0d      	ldr	r3, [pc, #52]	@ (900050a8 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x198>)
90005074:	21a5      	movs	r1, #165	@ 0xa5
90005076:	4a0a      	ldr	r2, [pc, #40]	@ (900050a0 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x190>)
90005078:	480a      	ldr	r0, [pc, #40]	@ (900050a4 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x194>)
9000507a:	f024 fa75 	bl	90029568 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
9000507e:	4b0b      	ldr	r3, [pc, #44]	@ (900050ac <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x19c>)
90005080:	21a4      	movs	r1, #164	@ 0xa4
90005082:	4a07      	ldr	r2, [pc, #28]	@ (900050a0 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x190>)
90005084:	4807      	ldr	r0, [pc, #28]	@ (900050a4 <_ZN23FrontendApplicationBase37gotoStartScreenScreenNoTransitionImplEv+0x194>)
90005086:	f024 fa6f 	bl	90029568 <__assert_func>
9000508a:	bf00      	nop
9000508c:	90004cbd 	.word	0x90004cbd
90005090:	9002c850 	.word	0x9002c850
90005094:	90004cc1 	.word	0x90004cc1
90005098:	90004d59 	.word	0x90004d59
9000509c:	9002bcd4 	.word	0x9002bcd4
900050a0:	9002bfcc 	.word	0x9002bfcc
900050a4:	9002be3c 	.word	0x9002be3c
900050a8:	9002bf28 	.word	0x9002bf28
900050ac:	9002be84 	.word	0x9002be84
900050b0:	240219d4 	.word	0x240219d4
900050b4:	240219d0 	.word	0x240219d0

900050b8 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    virtual void handlePendingScreenTransition()
900050b8:	b570      	push	{r4, r5, r6, lr}
900050ba:	4604      	mov	r4, r0
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
900050bc:	f8d0 0140 	ldr.w	r0, [r0, #320]	@ 0x140
900050c0:	b1b8      	cbz	r0, 900050f2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
900050c2:	6802      	ldr	r2, [r0, #0]
900050c4:	4916      	ldr	r1, [pc, #88]	@ (90005120 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x68>)
900050c6:	68d3      	ldr	r3, [r2, #12]
900050c8:	428b      	cmp	r3, r1
900050ca:	d11f      	bne.n	9000510c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x54>
        return (pobject != 0) && (pmemfun != 0);
900050cc:	6843      	ldr	r3, [r0, #4]
900050ce:	b183      	cbz	r3, 900050f2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
900050d0:	6881      	ldr	r1, [r0, #8]
900050d2:	b179      	cbz	r1, 900050f4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3c>
            pendingScreenTransitionCallback->execute();
900050d4:	6892      	ldr	r2, [r2, #8]
900050d6:	4b13      	ldr	r3, [pc, #76]	@ (90005124 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
900050d8:	429a      	cmp	r2, r3
900050da:	d11e      	bne.n	9000511a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
900050dc:	68c2      	ldr	r2, [r0, #12]
900050de:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
900050e2:	eb03 0062 	add.w	r0, r3, r2, asr #1
900050e6:	07d3      	lsls	r3, r2, #31
900050e8:	d40d      	bmi.n	90005106 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x4e>
900050ea:	4788      	blx	r1
            pendingScreenTransitionCallback = 0;
900050ec:	2300      	movs	r3, #0
900050ee:	f8c4 3140 	str.w	r3, [r4, #320]	@ 0x140
    }
900050f2:	bd70      	pop	{r4, r5, r6, pc}
        return (pobject != 0) && (pmemfun != 0);
900050f4:	68c5      	ldr	r5, [r0, #12]
900050f6:	07ee      	lsls	r6, r5, #31
900050f8:	d5fb      	bpl.n	900050f2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
900050fa:	6892      	ldr	r2, [r2, #8]
900050fc:	4e09      	ldr	r6, [pc, #36]	@ (90005124 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x6c>)
900050fe:	42b2      	cmp	r2, r6
90005100:	d10b      	bne.n	9000511a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x62>
        (pobject->*pmemfun)();
90005102:	eb03 0065 	add.w	r0, r3, r5, asr #1
90005106:	6803      	ldr	r3, [r0, #0]
90005108:	5859      	ldr	r1, [r3, r1]
9000510a:	e7ee      	b.n	900050ea <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x32>
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
9000510c:	4798      	blx	r3
9000510e:	2800      	cmp	r0, #0
90005110:	d0ef      	beq.n	900050f2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x3a>
            pendingScreenTransitionCallback->execute();
90005112:	f8d4 0140 	ldr.w	r0, [r4, #320]	@ 0x140
90005116:	6802      	ldr	r2, [r0, #0]
90005118:	e7dc      	b.n	900050d4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x1c>
9000511a:	4790      	blx	r2
9000511c:	e7e6      	b.n	900050ec <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x34>
9000511e:	bf00      	nop
90005120:	90004d11 	.word	0x90004d11
90005124:	90004cf9 	.word	0x90004cf9

90005128 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
90005128:	b570      	push	{r4, r5, r6, lr}
9000512a:	4604      	mov	r4, r0
9000512c:	4615      	mov	r5, r2
9000512e:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
90005130:	f011 f944 	bl	900163bc <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
90005134:	4a22      	ldr	r2, [pc, #136]	@ (900051c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x98>)
        : currentPresenter(0),
90005136:	2300      	movs	r3, #0
      frontendHeap(heap),
90005138:	f8c4 5154 	str.w	r5, [r4, #340]	@ 0x154
        instance = this;
9000513c:	6014      	str	r4, [r2, #0]
        return instance;
9000513e:	4d21      	ldr	r5, [pc, #132]	@ (900051c4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x9c>)
      model(m)
90005140:	4a21      	ldr	r2, [pc, #132]	@ (900051c8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa0>)
90005142:	6828      	ldr	r0, [r5, #0]
90005144:	6022      	str	r2, [r4, #0]
        : pobject(0), pmemfun(0)
90005146:	4a21      	ldr	r2, [pc, #132]	@ (900051cc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa4>)
90005148:	4921      	ldr	r1, [pc, #132]	@ (900051d0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0xa8>)
9000514a:	f8c4 2144 	str.w	r2, [r4, #324]	@ 0x144
9000514e:	f8c4 3148 	str.w	r3, [r4, #328]	@ 0x148
90005152:	f8c4 6158 	str.w	r6, [r4, #344]	@ 0x158
        : currentPresenter(0),
90005156:	e9c4 334f 	strd	r3, r3, [r4, #316]	@ 0x13c
9000515a:	e9c4 3353 	strd	r3, r3, [r4, #332]	@ 0x14c
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
9000515e:	6802      	ldr	r2, [r0, #0]
90005160:	6892      	ldr	r2, [r2, #8]
90005162:	428a      	cmp	r2, r1
90005164:	d129      	bne.n	900051ba <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x92>
        requestedOrientation = orientation;
90005166:	f44f 7380 	mov.w	r3, #256	@ 0x100
9000516a:	f8a0 3078 	strh.w	r3, [r0, #120]	@ 0x78
    touchgfx::Texts::setLanguage(GB);
9000516e:	2000      	movs	r0, #0
90005170:	f000 fbdc 	bl	9000592c <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
90005174:	682b      	ldr	r3, [r5, #0]
90005176:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
9000517a:	b1e2      	cbz	r2, 900051b6 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
9000517c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9000517e:	b1d0      	cbz	r0, 900051b6 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8e>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
90005180:	f01b fd75 	bl	90020c6e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
90005184:	682b      	ldr	r3, [r5, #0]
90005186:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
9000518a:	b192      	cbz	r2, 900051b2 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
9000518c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9000518e:	b180      	cbz	r0, 900051b2 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x8a>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
90005190:	f01b fde8 	bl	90020d64 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
90005194:	682b      	ldr	r3, [r5, #0]
90005196:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
9000519a:	b12a      	cbz	r2, 900051a8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
9000519c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9000519e:	b118      	cbz	r0, 900051a8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x80>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
900051a0:	f01b fdec 	bl	90020d7c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
900051a4:	4620      	mov	r0, r4
900051a6:	bd70      	pop	{r4, r5, r6, pc}
        return instance->lcdRef;
900051a8:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
900051aa:	f01b fde7 	bl	90020d7c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
900051ae:	4620      	mov	r0, r4
900051b0:	bd70      	pop	{r4, r5, r6, pc}
900051b2:	6898      	ldr	r0, [r3, #8]
900051b4:	e7ec      	b.n	90005190 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x68>
900051b6:	6898      	ldr	r0, [r3, #8]
900051b8:	e7e2      	b.n	90005180 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
900051ba:	4619      	mov	r1, r3
900051bc:	4790      	blx	r2
900051be:	e7d6      	b.n	9000516e <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
900051c0:	240219e0 	.word	0x240219e0
900051c4:	2402198c 	.word	0x2402198c
900051c8:	9002c7fc 	.word	0x9002c7fc
900051cc:	9002c7e4 	.word	0x9002c7e4
900051d0:	90000da5 	.word	0x90000da5

900051d4 <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
900051d4:	4905      	ldr	r1, [pc, #20]	@ (900051ec <_ZN23FrontendApplicationBase33gotoStartScreenScreenNoTransitionEv+0x18>)
900051d6:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
900051d8:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
900051dc:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
900051e0:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
900051e4:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
900051e8:	4770      	bx	lr
900051ea:	bf00      	nop
900051ec:	90004f11 	.word	0x90004f11

900051f0 <_ZN23FrontendApplicationBase32gotoDataScreenScreenNoTransitionEv>:
900051f0:	4905      	ldr	r1, [pc, #20]	@ (90005208 <_ZN23FrontendApplicationBase32gotoDataScreenScreenNoTransitionEv+0x18>)
900051f2:	2200      	movs	r2, #0
    pendingScreenTransitionCallback = &transitionCallback;
900051f4:	f500 73a2 	add.w	r3, r0, #324	@ 0x144
900051f8:	f8c0 2150 	str.w	r2, [r0, #336]	@ 0x150
900051fc:	f8c0 3140 	str.w	r3, [r0, #320]	@ 0x140
90005200:	e9c0 0152 	strd	r0, r1, [r0, #328]	@ 0x148
}
90005204:	4770      	bx	lr
90005206:	bf00      	nop
90005208:	90004d69 	.word	0x90004d69

9000520c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
9000520c:	6a40      	ldr	r0, [r0, #36]	@ 0x24
9000520e:	4770      	bx	lr

90005210 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
90005210:	6a80      	ldr	r0, [r0, #40]	@ 0x28
90005212:	4770      	bx	lr

90005214 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
90005214:	4770      	bx	lr
90005216:	bf00      	nop

90005218 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    // Read dataOffset as 16bit, as it may be unaligned
    volatile const uint16_t* dataOffset = (const uint16_t*)((const uint8_t*)glyph + offsetof(GlyphNode, dataOffset));
    uint32_t offset = dataOffset[0];
90005218:	880b      	ldrh	r3, [r1, #0]
    offset |= dataOffset[1] << 16;

    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    const uint8_t* pixels = table[glyph->unicode / 2048];
9000521a:	888a      	ldrh	r2, [r1, #4]
9000521c:	69c0      	ldr	r0, [r0, #28]
    uint32_t offset = dataOffset[0];
9000521e:	b29b      	uxth	r3, r3
    offset |= dataOffset[1] << 16;
90005220:	8849      	ldrh	r1, [r1, #2]
    const uint8_t* pixels = table[glyph->unicode / 2048];
90005222:	0ad2      	lsrs	r2, r2, #11
    offset |= dataOffset[1] << 16;
90005224:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
    return pixels + offset;
90005228:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
}
9000522c:	4418      	add	r0, r3
9000522e:	4770      	bx	lr

90005230 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
    if (!glyph || glyph->kerningTableSize == 0)
90005230:	b1fa      	cbz	r2, 90005272 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x42>
{
90005232:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
90005234:	7b14      	ldrb	r4, [r2, #12]
90005236:	b1d4      	cbz	r4, 9000526e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
90005238:	f892 c00d 	ldrb.w	ip, [r2, #13]
9000523c:	f892 e00b 	ldrb.w	lr, [r2, #11]
90005240:	ea4f 220c 	mov.w	r2, ip, lsl #8
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
90005244:	6a03      	ldr	r3, [r0, #32]
90005246:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000524a:	ea4e 0202 	orr.w	r2, lr, r2
9000524e:	eb03 0382 	add.w	r3, r3, r2, lsl #2
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
90005252:	eb03 0084 	add.w	r0, r3, r4, lsl #2
90005256:	e004      	b.n	90005262 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x32>
90005258:	f103 0304 	add.w	r3, r3, #4
    {
        if (prevChar == kerndata->unicodePrevChar)
        {
            return kerndata->distance;
        }
        if (prevChar < kerndata->unicodePrevChar)
9000525c:	d807      	bhi.n	9000526e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
9000525e:	4283      	cmp	r3, r0
90005260:	d005      	beq.n	9000526e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x3e>
        if (prevChar == kerndata->unicodePrevChar)
90005262:	881a      	ldrh	r2, [r3, #0]
90005264:	428a      	cmp	r2, r1
90005266:	d1f7      	bne.n	90005258 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
            return kerndata->distance;
90005268:	f993 0002 	ldrsb.w	r0, [r3, #2]
        {
            break;
        }
    }
    return 0;
}
9000526c:	bd10      	pop	{r4, pc}
        return 0;
9000526e:	2000      	movs	r0, #0
}
90005270:	bd10      	pop	{r4, pc}
        return 0;
90005272:	4610      	mov	r0, r2
}
90005274:	4770      	bx	lr
90005276:	bf00      	nop

90005278 <_ZN8touchgfx13GeneratedFontD0Ev>:
90005278:	b510      	push	{r4, lr}
9000527a:	4604      	mov	r4, r0
9000527c:	212c      	movs	r1, #44	@ 0x2c
9000527e:	f023 fdfd 	bl	90028e7c <_ZdlPvj>
90005282:	4620      	mov	r0, r4
90005284:	bd10      	pop	{r4, pc}
90005286:	bf00      	nop

90005288 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90005288:	b530      	push	{r4, r5, lr}
9000528a:	b08b      	sub	sp, #44	@ 0x2c
9000528c:	4604      	mov	r4, r0
9000528e:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
      arabicTable(formsTable)
90005292:	9500      	str	r5, [sp, #0]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
90005294:	f89d 503c 	ldrb.w	r5, [sp, #60]	@ 0x3c
      arabicTable(formsTable)
90005298:	9501      	str	r5, [sp, #4]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
9000529a:	f89d 5040 	ldrb.w	r5, [sp, #64]	@ 0x40
      arabicTable(formsTable)
9000529e:	9502      	str	r5, [sp, #8]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900052a0:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
      arabicTable(formsTable)
900052a4:	9503      	str	r5, [sp, #12]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900052a6:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
      arabicTable(formsTable)
900052aa:	9504      	str	r5, [sp, #16]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900052ac:	f89d 504c 	ldrb.w	r5, [sp, #76]	@ 0x4c
      arabicTable(formsTable)
900052b0:	9505      	str	r5, [sp, #20]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900052b2:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
      arabicTable(formsTable)
900052b6:	9506      	str	r5, [sp, #24]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900052b8:	f8bd 505c 	ldrh.w	r5, [sp, #92]	@ 0x5c
      arabicTable(formsTable)
900052bc:	9507      	str	r5, [sp, #28]
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
900052be:	f8bd 5060 	ldrh.w	r5, [sp, #96]	@ 0x60
      arabicTable(formsTable)
900052c2:	9508      	str	r5, [sp, #32]
900052c4:	f012 fdc4 	bl	90017e50 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
      glyphData(glyphDataInternalFlash),
900052c8:	9b15      	ldr	r3, [sp, #84]	@ 0x54
}
900052ca:	4620      	mov	r0, r4
      glyphData(glyphDataInternalFlash),
900052cc:	61e3      	str	r3, [r4, #28]
      kerningData(kerningList),
900052ce:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900052d0:	6223      	str	r3, [r4, #32]
      gsubTable(gsubData),
900052d2:	9b19      	ldr	r3, [sp, #100]	@ 0x64
900052d4:	6263      	str	r3, [r4, #36]	@ 0x24
      arabicTable(formsTable)
900052d6:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
900052d8:	62a3      	str	r3, [r4, #40]	@ 0x28
900052da:	4b02      	ldr	r3, [pc, #8]	@ (900052e4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
900052dc:	6023      	str	r3, [r4, #0]
}
900052de:	b00b      	add	sp, #44	@ 0x2c
900052e0:	bd30      	pop	{r4, r5, pc}
900052e2:	bf00      	nop
900052e4:	9002c874 	.word	0x9002c874

900052e8 <_ZN8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
900052e8:	4770      	bx	lr
900052ea:	bf00      	nop

900052ec <_ZN19StartScreenViewBaseD1Ev>:
}

StartScreenViewBase::~StartScreenViewBase()
{

}
900052ec:	4770      	bx	lr
900052ee:	bf00      	nop

900052f0 <_ZN19StartScreenViewBase11setupScreenEv>:

void StartScreenViewBase::setupScreen()
{

}
900052f0:	4770      	bx	lr
900052f2:	bf00      	nop

900052f4 <_ZN8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
900052f4:	b410      	push	{r4}
        (pobject->*pmemfun)(t1);
900052f6:	68c3      	ldr	r3, [r0, #12]
900052f8:	e9d0 4201 	ldrd	r4, r2, [r0, #4]
900052fc:	f013 0f01 	tst.w	r3, #1
90005300:	eb04 0063 	add.w	r0, r4, r3, asr #1
90005304:	d004      	beq.n	90005310 <_ZN8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x1c>
90005306:	ea4f 0c63 	mov.w	ip, r3, asr #1
9000530a:	f854 300c 	ldr.w	r3, [r4, ip]
9000530e:	589a      	ldr	r2, [r3, r2]
    }
90005310:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)(t1);
90005314:	4710      	bx	r2
90005316:	bf00      	nop

90005318 <_ZNK8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
90005318:	6843      	ldr	r3, [r0, #4]
9000531a:	b13b      	cbz	r3, 9000532c <_ZNK8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
9000531c:	6883      	ldr	r3, [r0, #8]
9000531e:	b10b      	cbz	r3, 90005324 <_ZNK8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0xc>
90005320:	2001      	movs	r0, #1
    }
90005322:	4770      	bx	lr
90005324:	68c0      	ldr	r0, [r0, #12]
90005326:	f000 0001 	and.w	r0, r0, #1
9000532a:	4770      	bx	lr
        return (pobject != 0) && (pmemfun != 0);
9000532c:	4618      	mov	r0, r3
9000532e:	4770      	bx	lr

90005330 <_ZN8touchgfx8CallbackI19StartScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
90005330:	b510      	push	{r4, lr}
90005332:	4604      	mov	r4, r0
90005334:	2110      	movs	r1, #16
90005336:	f023 fda1 	bl	90028e7c <_ZdlPvj>
9000533a:	4620      	mov	r0, r4
9000533c:	bd10      	pop	{r4, pc}
9000533e:	bf00      	nop

90005340 <_ZN19StartScreenViewBaseD0Ev>:
StartScreenViewBase::~StartScreenViewBase()
90005340:	b510      	push	{r4, lr}
90005342:	4604      	mov	r4, r0
}
90005344:	f44f 719c 	mov.w	r1, #312	@ 0x138
90005348:	f023 fd98 	bl	90028e7c <_ZdlPvj>
9000534c:	4620      	mov	r0, r4
9000534e:	bd10      	pop	{r4, pc}

90005350 <_ZN19StartScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void StartScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel1)
90005350:	30e0      	adds	r0, #224	@ 0xe0
90005352:	4288      	cmp	r0, r1
90005354:	d000      	beq.n	90005358 <_ZN19StartScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x8>
90005356:	4770      	bx	lr
{
90005358:	b508      	push	{r3, lr}
    virtual ~StartScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
9000535a:	f010 ff1f 	bl	9001619c <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction1
        //When buttonWithLabel1 clicked change screen to DataScreen
        //Go to DataScreen with no screen transition
        application().gotoDataScreenScreenNoTransition();
    }
}
9000535e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        application().gotoDataScreenScreenNoTransition();
90005362:	f7ff bf45 	b.w	900051f0 <_ZN23FrontendApplicationBase32gotoDataScreenScreenNoTransitionEv>
90005366:	bf00      	nop

90005368 <_ZN19StartScreenViewBaseC1Ev>:
StartScreenViewBase::StartScreenViewBase() :
90005368:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000536c:	b088      	sub	sp, #32
9000536e:	4604      	mov	r4, r0
        : presenter(0)
90005370:	2500      	movs	r5, #0
90005372:	f012 ff69 	bl	90018248 <_ZN8touchgfx6ScreenC1Ev>
        : Widget(), alpha(255), color(0)
90005376:	22ff      	movs	r2, #255	@ 0xff
          touchable(false),
90005378:	f44f 7380 	mov.w	r3, #256	@ 0x100
9000537c:	4970      	ldr	r1, [pc, #448]	@ (90005540 <_ZN19StartScreenViewBaseC1Ev+0x1d8>)
9000537e:	f04f 38ff 	mov.w	r8, #4294967295
    buttonCallback(this, &StartScreenViewBase::buttonCallbackHandler)
90005382:	4870      	ldr	r0, [pc, #448]	@ (90005544 <_ZN19StartScreenViewBaseC1Ev+0x1dc>)
90005384:	f104 07e0 	add.w	r7, r4, #224	@ 0xe0
90005388:	f884 2066 	strb.w	r2, [r4, #102]	@ 0x66
9000538c:	1d26      	adds	r6, r4, #4
9000538e:	f884 2092 	strb.w	r2, [r4, #146]	@ 0x92
        : typedTextId(id)
90005392:	f8df a1ec 	ldr.w	sl, [pc, #492]	@ 90005580 <_ZN19StartScreenViewBaseC1Ev+0x218>
90005396:	6020      	str	r0, [r4, #0]
90005398:	4638      	mov	r0, r7
9000539a:	f8a4 3064 	strh.w	r3, [r4, #100]	@ 0x64
9000539e:	6421      	str	r1, [r4, #64]	@ 0x40
900053a0:	f8a4 3090 	strh.w	r3, [r4, #144]	@ 0x90
900053a4:	66e1      	str	r1, [r4, #108]	@ 0x6c
900053a6:	63e5      	str	r5, [r4, #60]	@ 0x3c
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
900053a8:	4967      	ldr	r1, [pc, #412]	@ (90005548 <_ZN19StartScreenViewBaseC1Ev+0x1e0>)
        : color(col)
900053aa:	66a5      	str	r5, [r4, #104]	@ 0x68
900053ac:	f8c4 5094 	str.w	r5, [r4, #148]	@ 0x94
        rect.x = x;
900053b0:	f8df 91d0 	ldr.w	r9, [pc, #464]	@ 90005584 <_ZN19StartScreenViewBaseC1Ev+0x21c>
        : x(0), y(0), width(0), height(0)
900053b4:	e9c4 5511 	strd	r5, r5, [r4, #68]	@ 0x44
900053b8:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
          nextSibling(0),
900053bc:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
          cachedAbsX(0),
900053c0:	e9c4 5517 	strd	r5, r5, [r4, #92]	@ 0x5c
900053c4:	e9c4 551c 	strd	r5, r5, [r4, #112]	@ 0x70
900053c8:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
          nextSibling(0),
900053cc:	e9c4 5520 	strd	r5, r5, [r4, #128]	@ 0x80
          cachedAbsX(0),
900053d0:	e9c4 5522 	strd	r5, r5, [r4, #136]	@ 0x88
900053d4:	e9c4 5527 	strd	r5, r5, [r4, #156]	@ 0x9c
900053d8:	e9c4 5529 	strd	r5, r5, [r4, #164]	@ 0xa4
          nextSibling(0),
900053dc:	e9c4 552b 	strd	r5, r5, [r4, #172]	@ 0xac
          nextDrawChainElement(0),
900053e0:	f8c4 50b4 	str.w	r5, [r4, #180]	@ 0xb4
          touchable(false),
900053e4:	f8a4 30bc 	strh.w	r3, [r4, #188]	@ 0xbc
900053e8:	f64f 73ff 	movw	r3, #65535	@ 0xffff
900053ec:	f8c4 20ce 	str.w	r2, [r4, #206]	@ 0xce
900053f0:	f8c4 1098 	str.w	r1, [r4, #152]	@ 0x98
900053f4:	f8a4 30c4 	strh.w	r3, [r4, #196]	@ 0xc4
          cachedAbsX(0),
900053f8:	f8c4 50b8 	str.w	r5, [r4, #184]	@ 0xb8
        : color(col)
900053fc:	f8c4 50c8 	str.w	r5, [r4, #200]	@ 0xc8
90005400:	f8c4 a0c0 	str.w	sl, [r4, #192]	@ 0xc0
90005404:	f8a4 50cc 	strh.w	r5, [r4, #204]	@ 0xcc
              text(0)
90005408:	f8c4 50dc 	str.w	r5, [r4, #220]	@ 0xdc
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
9000540c:	e9c4 5835 	strd	r5, r8, [r4, #212]	@ 0xd4
90005410:	f00e fb28 	bl	90013a64 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
90005414:	4b4d      	ldr	r3, [pc, #308]	@ (9000554c <_ZN19StartScreenViewBaseC1Ev+0x1e4>)
90005416:	f104 0140 	add.w	r1, r4, #64	@ 0x40
9000541a:	4630      	mov	r0, r6
9000541c:	f8c4 3128 	str.w	r3, [r4, #296]	@ 0x128
90005420:	4b4b      	ldr	r3, [pc, #300]	@ (90005550 <_ZN19StartScreenViewBaseC1Ev+0x1e8>)
        rect.x = x;
90005422:	f8c4 9048 	str.w	r9, [r4, #72]	@ 0x48
90005426:	f8c4 3130 	str.w	r3, [r4, #304]	@ 0x130
        color = newColor;
9000542a:	f04f 437f 	mov.w	r3, #4278190080	@ 0xff000000
9000542e:	f8c4 412c 	str.w	r4, [r4, #300]	@ 0x12c
90005432:	66a3      	str	r3, [r4, #104]	@ 0x68
90005434:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
90005438:	6465      	str	r5, [r4, #68]	@ 0x44
9000543a:	f00a fd29 	bl	9000fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
9000543e:	4b45      	ldr	r3, [pc, #276]	@ (90005554 <_ZN19StartScreenViewBaseC1Ev+0x1ec>)
90005440:	f104 016c 	add.w	r1, r4, #108	@ 0x6c
90005444:	4630      	mov	r0, r6
90005446:	f8c4 3094 	str.w	r3, [r4, #148]	@ 0x94
9000544a:	e9c4 591c 	strd	r5, r9, [r4, #112]	@ 0x70
9000544e:	f00a fd1f 	bl	9000fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(99, 27);
90005452:	f104 0998 	add.w	r9, r4, #152	@ 0x98
90005456:	4b40      	ldr	r3, [pc, #256]	@ (90005558 <_ZN19StartScreenViewBaseC1Ev+0x1f0>)
        color = newColor;
90005458:	f8c4 80c8 	str.w	r8, [r4, #200]	@ 0xc8
        boundingArea = calculateBoundingArea();
9000545c:	46e8      	mov	r8, sp
9000545e:	4649      	mov	r1, r9
90005460:	f8c4 309c 	str.w	r3, [r4, #156]	@ 0x9c
90005464:	4640      	mov	r0, r8
        linespace = space;
90005466:	f8a4 50cc 	strh.w	r5, [r4, #204]	@ 0xcc
        boundingArea = calculateBoundingArea();
9000546a:	f00d fd8d 	bl	90012f88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
9000546e:	2208      	movs	r2, #8
90005470:	f104 03d4 	add.w	r3, r4, #212	@ 0xd4
90005474:	f8cd a018 	str.w	sl, [sp, #24]
90005478:	f8ad 201c 	strh.w	r2, [sp, #28]
9000547c:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
90005480:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9XXE));
90005484:	a906      	add	r1, sp, #24
90005486:	4648      	mov	r0, r9
90005488:	f00e f826 	bl	900134d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
9000548c:	4649      	mov	r1, r9
9000548e:	4630      	mov	r0, r6
90005490:	f00a fcfe 	bl	9000fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
90005494:	4b31      	ldr	r3, [pc, #196]	@ (9000555c <_ZN19StartScreenViewBaseC1Ev+0x1f4>)
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_SMALL_ROUND_ACTION_ID));
90005496:	a905      	add	r1, sp, #20
90005498:	aa06      	add	r2, sp, #24
9000549a:	f8c4 30e4 	str.w	r3, [r4, #228]	@ 0xe4
9000549e:	4638      	mov	r0, r7
900054a0:	f8ad 5014 	strh.w	r5, [sp, #20]
900054a4:	f8ad 5018 	strh.w	r5, [sp, #24]
900054a8:	f00e f873 	bl	90013592 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        return typedTextId < numberOfTypedTexts;
900054ac:	4b2c      	ldr	r3, [pc, #176]	@ (90005560 <_ZN19StartScreenViewBaseC1Ev+0x1f8>)
class TypedText
900054ae:	2107      	movs	r1, #7
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
    {
        if (typedText.hasValidId())
900054b0:	881b      	ldrh	r3, [r3, #0]
900054b2:	f8a4 1118 	strh.w	r1, [r4, #280]	@ 0x118
900054b6:	428b      	cmp	r3, r1
900054b8:	d924      	bls.n	90005504 <_ZN19StartScreenViewBaseC1Ev+0x19c>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
900054ba:	4b2a      	ldr	r3, [pc, #168]	@ (90005564 <_ZN19StartScreenViewBaseC1Ev+0x1fc>)
900054bc:	681b      	ldr	r3, [r3, #0]
900054be:	2b00      	cmp	r3, #0
900054c0:	d038      	beq.n	90005534 <_ZN19StartScreenViewBaseC1Ev+0x1cc>
        return fonts[typedTexts[typedTextId].fontIdx];
900054c2:	7b9a      	ldrb	r2, [r3, #14]
900054c4:	4b28      	ldr	r3, [pc, #160]	@ (90005568 <_ZN19StartScreenViewBaseC1Ev+0x200>)
900054c6:	681b      	ldr	r3, [r3, #0]
900054c8:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
900054cc:	4b27      	ldr	r3, [pc, #156]	@ (9000556c <_ZN19StartScreenViewBaseC1Ev+0x204>)
900054ce:	6818      	ldr	r0, [r3, #0]
900054d0:	f000 fa6a 	bl	900059a8 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
900054d4:	f8d8 3000 	ldr.w	r3, [r8]
900054d8:	4925      	ldr	r1, [pc, #148]	@ (90005570 <_ZN19StartScreenViewBaseC1Ev+0x208>)
900054da:	4681      	mov	r9, r0
900054dc:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
900054de:	428a      	cmp	r2, r1
900054e0:	d122      	bne.n	90005528 <_ZN19StartScreenViewBaseC1Ev+0x1c0>
        return fontHeight;
900054e2:	f8b8 5004 	ldrh.w	r5, [r8, #4]
900054e6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900054e8:	4649      	mov	r1, r9
900054ea:	4640      	mov	r0, r8
900054ec:	4798      	blx	r3
900054ee:	fb15 f500 	smulbb	r5, r5, r0
900054f2:	f8d8 3000 	ldr.w	r3, [r8]
900054f6:	4649      	mov	r1, r9
900054f8:	b2ad      	uxth	r5, r5
900054fa:	4640      	mov	r0, r8
900054fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
900054fe:	4798      	blx	r3
90005500:	4405      	add	r5, r0
90005502:	b22d      	sxth	r5, r5
        color = col;
90005504:	f04f 33ff 	mov.w	r3, #4294967295
90005508:	4630      	mov	r0, r6
9000550a:	4639      	mov	r1, r7
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
9000550c:	f8a4 5126 	strh.w	r5, [r4, #294]	@ 0x126
        colorPressed = col;
90005510:	e9c4 3347 	strd	r3, r3, [r4, #284]	@ 0x11c
    buttonWithLabel1.setAction(buttonCallback);
90005514:	f504 7394 	add.w	r3, r4, #296	@ 0x128
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
90005518:	f8c4 3108 	str.w	r3, [r4, #264]	@ 0x108
9000551c:	f00a fcb8 	bl	9000fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
90005520:	4620      	mov	r0, r4
90005522:	b008      	add	sp, #32
90005524:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
90005528:	4640      	mov	r0, r8
9000552a:	4790      	blx	r2
9000552c:	f8d8 3000 	ldr.w	r3, [r8]
90005530:	4605      	mov	r5, r0
90005532:	e7d8      	b.n	900054e6 <_ZN19StartScreenViewBaseC1Ev+0x17e>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
90005534:	4b0f      	ldr	r3, [pc, #60]	@ (90005574 <_ZN19StartScreenViewBaseC1Ev+0x20c>)
90005536:	216c      	movs	r1, #108	@ 0x6c
90005538:	4a0f      	ldr	r2, [pc, #60]	@ (90005578 <_ZN19StartScreenViewBaseC1Ev+0x210>)
9000553a:	4810      	ldr	r0, [pc, #64]	@ (9000557c <_ZN19StartScreenViewBaseC1Ev+0x214>)
9000553c:	f024 f814 	bl	90029568 <__assert_func>
90005540:	9002d438 	.word	0x9002d438
90005544:	9002c8f4 	.word	0x9002c8f4
90005548:	9002d3a8 	.word	0x9002d3a8
9000554c:	9002c8dc 	.word	0x9002c8dc
90005550:	90005351 	.word	0x90005351
90005554:	ff7fa6eb 	.word	0xff7fa6eb
90005558:	001b0063 	.word	0x001b0063
9000555c:	00790099 	.word	0x00790099
90005560:	240219e8 	.word	0x240219e8
90005564:	240219e4 	.word	0x240219e4
90005568:	240219ec 	.word	0x240219ec
9000556c:	240219f0 	.word	0x240219f0
90005570:	9000457d 	.word	0x9000457d
90005574:	9002bb7c 	.word	0x9002bb7c
90005578:	9002bbc0 	.word	0x9002bbc0
9000557c:	9002bbfc 	.word	0x9002bbfc
90005580:	9002c708 	.word	0x9002c708
90005584:	011001e0 	.word	0x011001e0

90005588 <__tcf_0>:

touchgfx::GeneratedFont& getFont_Siemens_TIA_Portal_basic_bold_25_4bpp();

touchgfx::GeneratedFont& getFont_Siemens_TIA_Portal_basic_bold_25_4bpp()
{
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_25_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_25_4bpp, 17, 30, 25, 0, 0, 4, 1, 0, 0, unicodes_Siemens_TIA_Portal_basic_bold_25_4bpp, kerning_Siemens_TIA_Portal_basic_bold_25_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
90005588:	4770      	bx	lr
9000558a:	bf00      	nop

9000558c <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv>:
{
9000558c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_25_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_25_4bpp, 17, 30, 25, 0, 0, 4, 1, 0, 0, unicodes_Siemens_TIA_Portal_basic_bold_25_4bpp, kerning_Siemens_TIA_Portal_basic_bold_25_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
9000558e:	4d19      	ldr	r5, [pc, #100]	@ (900055f4 <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x68>)
{
90005590:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_25_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_25_4bpp, 17, 30, 25, 0, 0, 4, 1, 0, 0, unicodes_Siemens_TIA_Portal_basic_bold_25_4bpp, kerning_Siemens_TIA_Portal_basic_bold_25_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
90005592:	682c      	ldr	r4, [r5, #0]
90005594:	f3bf 8f5b 	dmb	ish
90005598:	f014 0401 	ands.w	r4, r4, #1
9000559c:	d002      	beq.n	900055a4 <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x18>
    return Siemens_TIA_Portal_basic_bold_25_4bpp;
}
9000559e:	4816      	ldr	r0, [pc, #88]	@ (900055f8 <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x6c>)
900055a0:	b00f      	add	sp, #60	@ 0x3c
900055a2:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_25_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_25_4bpp, 17, 30, 25, 0, 0, 4, 1, 0, 0, unicodes_Siemens_TIA_Portal_basic_bold_25_4bpp, kerning_Siemens_TIA_Portal_basic_bold_25_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
900055a4:	4628      	mov	r0, r5
900055a6:	f023 fc6b 	bl	90028e80 <__cxa_guard_acquire>
900055aa:	2800      	cmp	r0, #0
900055ac:	d0f7      	beq.n	9000559e <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x12>
900055ae:	233f      	movs	r3, #63	@ 0x3f
900055b0:	4a12      	ldr	r2, [pc, #72]	@ (900055fc <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x70>)
900055b2:	4913      	ldr	r1, [pc, #76]	@ (90005600 <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x74>)
900055b4:	4810      	ldr	r0, [pc, #64]	@ (900055f8 <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x6c>)
900055b6:	e9cd 3409 	strd	r3, r4, [sp, #36]	@ 0x24
900055ba:	4b12      	ldr	r3, [pc, #72]	@ (90005604 <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x78>)
900055bc:	e9cd 420b 	strd	r4, r2, [sp, #44]	@ 0x2c
900055c0:	e9cd 3107 	strd	r3, r1, [sp, #28]
900055c4:	2201      	movs	r2, #1
900055c6:	2304      	movs	r3, #4
900055c8:	2119      	movs	r1, #25
900055ca:	e9cd 3203 	strd	r3, r2, [sp, #12]
900055ce:	9100      	str	r1, [sp, #0]
900055d0:	231e      	movs	r3, #30
900055d2:	2211      	movs	r2, #17
900055d4:	490c      	ldr	r1, [pc, #48]	@ (90005608 <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x7c>)
900055d6:	e9cd 4405 	strd	r4, r4, [sp, #20]
900055da:	e9cd 4401 	strd	r4, r4, [sp, #4]
900055de:	f7ff fe53 	bl	90005288 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900055e2:	480a      	ldr	r0, [pc, #40]	@ (9000560c <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x80>)
900055e4:	f023 ffde 	bl	900295a4 <atexit>
900055e8:	4628      	mov	r0, r5
900055ea:	f023 fc55 	bl	90028e98 <__cxa_guard_release>
}
900055ee:	4802      	ldr	r0, [pc, #8]	@ (900055f8 <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv+0x6c>)
900055f0:	b00f      	add	sp, #60	@ 0x3c
900055f2:	bd30      	pop	{r4, r5, pc}
900055f4:	2400786c 	.word	0x2400786c
900055f8:	24007870 	.word	0x24007870
900055fc:	9002c920 	.word	0x9002c920
90005600:	9002dbbc 	.word	0x9002dbbc
90005604:	9002dbd0 	.word	0x9002dbd0
90005608:	90201344 	.word	0x90201344
9000560c:	90005589 	.word	0x90005589

90005610 <__tcf_0>:
extern const touchgfx::FontContextualFormsTable Siemens_TIA_Portal_basic_bold_contextualFormsTable;
touchgfx::GeneratedFont& getFont_Siemens_TIA_Portal_basic_bold_30_4bpp();

touchgfx::GeneratedFont& getFont_Siemens_TIA_Portal_basic_bold_30_4bpp()
{
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_30_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_30_4bpp, 5, 30, 30, 0, 0, 4, 1, 0, 1, unicodes_Siemens_TIA_Portal_basic_bold_30_4bpp, kerning_Siemens_TIA_Portal_basic_bold_30_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
90005610:	4770      	bx	lr
90005612:	bf00      	nop

90005614 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv>:
{
90005614:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_30_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_30_4bpp, 5, 30, 30, 0, 0, 4, 1, 0, 1, unicodes_Siemens_TIA_Portal_basic_bold_30_4bpp, kerning_Siemens_TIA_Portal_basic_bold_30_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
90005616:	4d19      	ldr	r5, [pc, #100]	@ (9000567c <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x68>)
{
90005618:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_30_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_30_4bpp, 5, 30, 30, 0, 0, 4, 1, 0, 1, unicodes_Siemens_TIA_Portal_basic_bold_30_4bpp, kerning_Siemens_TIA_Portal_basic_bold_30_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
9000561a:	682c      	ldr	r4, [r5, #0]
9000561c:	f3bf 8f5b 	dmb	ish
90005620:	f014 0401 	ands.w	r4, r4, #1
90005624:	d002      	beq.n	9000562c <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x18>
    return Siemens_TIA_Portal_basic_bold_30_4bpp;
}
90005626:	4816      	ldr	r0, [pc, #88]	@ (90005680 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x6c>)
90005628:	b00f      	add	sp, #60	@ 0x3c
9000562a:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_30_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_30_4bpp, 5, 30, 30, 0, 0, 4, 1, 0, 1, unicodes_Siemens_TIA_Portal_basic_bold_30_4bpp, kerning_Siemens_TIA_Portal_basic_bold_30_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
9000562c:	4628      	mov	r0, r5
9000562e:	f023 fc27 	bl	90028e80 <__cxa_guard_acquire>
90005632:	2800      	cmp	r0, #0
90005634:	d0f7      	beq.n	90005626 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x12>
90005636:	2201      	movs	r2, #1
90005638:	4912      	ldr	r1, [pc, #72]	@ (90005684 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x70>)
9000563a:	203f      	movs	r0, #63	@ 0x3f
9000563c:	231e      	movs	r3, #30
9000563e:	9206      	str	r2, [sp, #24]
90005640:	910c      	str	r1, [sp, #48]	@ 0x30
90005642:	2104      	movs	r1, #4
90005644:	9009      	str	r0, [sp, #36]	@ 0x24
90005646:	4810      	ldr	r0, [pc, #64]	@ (90005688 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x74>)
90005648:	e9cd 2404 	strd	r2, r4, [sp, #16]
9000564c:	4a0f      	ldr	r2, [pc, #60]	@ (9000568c <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x78>)
9000564e:	9007      	str	r0, [sp, #28]
90005650:	9208      	str	r2, [sp, #32]
90005652:	2205      	movs	r2, #5
90005654:	480a      	ldr	r0, [pc, #40]	@ (90005680 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x6c>)
90005656:	e9cd 3400 	strd	r3, r4, [sp]
9000565a:	e9cd 4102 	strd	r4, r1, [sp, #8]
9000565e:	e9cd 440a 	strd	r4, r4, [sp, #40]	@ 0x28
90005662:	490b      	ldr	r1, [pc, #44]	@ (90005690 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x7c>)
90005664:	f7ff fe10 	bl	90005288 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90005668:	480a      	ldr	r0, [pc, #40]	@ (90005694 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x80>)
9000566a:	f023 ff9b 	bl	900295a4 <atexit>
9000566e:	4628      	mov	r0, r5
90005670:	f023 fc12 	bl	90028e98 <__cxa_guard_release>
}
90005674:	4802      	ldr	r0, [pc, #8]	@ (90005680 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv+0x6c>)
90005676:	b00f      	add	sp, #60	@ 0x3c
90005678:	bd30      	pop	{r4, r5, pc}
9000567a:	bf00      	nop
9000567c:	2400789c 	.word	0x2400789c
90005680:	240078a0 	.word	0x240078a0
90005684:	9002c920 	.word	0x9002c920
90005688:	9002dbd4 	.word	0x9002dbd4
9000568c:	9002dbc0 	.word	0x9002dbc0
90005690:	90201434 	.word	0x90201434
90005694:	90005611 	.word	0x90005611

90005698 <__tcf_0>:
extern const touchgfx::FontContextualFormsTable Siemens_TIA_Portal_basic_bold_contextualFormsTable;
touchgfx::GeneratedFont& getFont_Siemens_TIA_Portal_basic_bold_40_4bpp();

touchgfx::GeneratedFont& getFont_Siemens_TIA_Portal_basic_bold_40_4bpp()
{
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_40_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_40_4bpp, 13, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_Siemens_TIA_Portal_basic_bold_40_4bpp, kerning_Siemens_TIA_Portal_basic_bold_40_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
90005698:	4770      	bx	lr
9000569a:	bf00      	nop

9000569c <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv>:
{
9000569c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_40_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_40_4bpp, 13, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_Siemens_TIA_Portal_basic_bold_40_4bpp, kerning_Siemens_TIA_Portal_basic_bold_40_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
9000569e:	4d19      	ldr	r5, [pc, #100]	@ (90005704 <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x68>)
{
900056a0:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_40_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_40_4bpp, 13, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_Siemens_TIA_Portal_basic_bold_40_4bpp, kerning_Siemens_TIA_Portal_basic_bold_40_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
900056a2:	682c      	ldr	r4, [r5, #0]
900056a4:	f3bf 8f5b 	dmb	ish
900056a8:	f014 0401 	ands.w	r4, r4, #1
900056ac:	d002      	beq.n	900056b4 <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x18>
    return Siemens_TIA_Portal_basic_bold_40_4bpp;
}
900056ae:	4816      	ldr	r0, [pc, #88]	@ (90005708 <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x6c>)
900056b0:	b00f      	add	sp, #60	@ 0x3c
900056b2:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont Siemens_TIA_Portal_basic_bold_40_4bpp(glyphs_Siemens_TIA_Portal_basic_bold_40_4bpp, 13, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_Siemens_TIA_Portal_basic_bold_40_4bpp, kerning_Siemens_TIA_Portal_basic_bold_40_4bpp, 63, 0, 0, &Siemens_TIA_Portal_basic_bold_contextualFormsTable);
900056b4:	4628      	mov	r0, r5
900056b6:	f023 fbe3 	bl	90028e80 <__cxa_guard_acquire>
900056ba:	2800      	cmp	r0, #0
900056bc:	d0f7      	beq.n	900056ae <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x12>
900056be:	4913      	ldr	r1, [pc, #76]	@ (9000570c <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x70>)
900056c0:	223f      	movs	r2, #63	@ 0x3f
900056c2:	2328      	movs	r3, #40	@ 0x28
900056c4:	9406      	str	r4, [sp, #24]
900056c6:	9405      	str	r4, [sp, #20]
900056c8:	9300      	str	r3, [sp, #0]
900056ca:	9402      	str	r4, [sp, #8]
900056cc:	9401      	str	r4, [sp, #4]
900056ce:	480e      	ldr	r0, [pc, #56]	@ (90005708 <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x6c>)
900056d0:	e9cd 410b 	strd	r4, r1, [sp, #44]	@ 0x2c
900056d4:	e9cd 2409 	strd	r2, r4, [sp, #36]	@ 0x24
900056d8:	490d      	ldr	r1, [pc, #52]	@ (90005710 <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x74>)
900056da:	4a0e      	ldr	r2, [pc, #56]	@ (90005714 <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x78>)
900056dc:	9108      	str	r1, [sp, #32]
900056de:	2104      	movs	r1, #4
900056e0:	9207      	str	r2, [sp, #28]
900056e2:	2201      	movs	r2, #1
900056e4:	9103      	str	r1, [sp, #12]
900056e6:	9204      	str	r2, [sp, #16]
900056e8:	220d      	movs	r2, #13
900056ea:	490b      	ldr	r1, [pc, #44]	@ (90005718 <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x7c>)
900056ec:	f7ff fdcc 	bl	90005288 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900056f0:	480a      	ldr	r0, [pc, #40]	@ (9000571c <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x80>)
900056f2:	f023 ff57 	bl	900295a4 <atexit>
900056f6:	4628      	mov	r0, r5
900056f8:	f023 fbce 	bl	90028e98 <__cxa_guard_release>
}
900056fc:	4802      	ldr	r0, [pc, #8]	@ (90005708 <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv+0x6c>)
900056fe:	b00f      	add	sp, #60	@ 0x3c
90005700:	bd30      	pop	{r4, r5, pc}
90005702:	bf00      	nop
90005704:	240078cc 	.word	0x240078cc
90005708:	240078d0 	.word	0x240078d0
9000570c:	9002c920 	.word	0x9002c920
90005710:	9002dbc4 	.word	0x9002dbc4
90005714:	9002dbd8 	.word	0x9002dbd8
90005718:	9020147c 	.word	0x9020147c
9000571c:	90005699 	.word	0x90005699

90005720 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90005720:	4770      	bx	lr
90005722:	bf00      	nop

90005724 <_Z23getFont_verdana_10_4bppv>:
{
90005724:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
90005726:	4d18      	ldr	r5, [pc, #96]	@ (90005788 <_Z23getFont_verdana_10_4bppv+0x64>)
{
90005728:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
9000572a:	682c      	ldr	r4, [r5, #0]
9000572c:	f3bf 8f5b 	dmb	ish
90005730:	f014 0401 	ands.w	r4, r4, #1
90005734:	d002      	beq.n	9000573c <_Z23getFont_verdana_10_4bppv+0x18>
    return verdana_10_4bpp;
}
90005736:	4815      	ldr	r0, [pc, #84]	@ (9000578c <_Z23getFont_verdana_10_4bppv+0x68>)
90005738:	b00f      	add	sp, #60	@ 0x3c
9000573a:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
9000573c:	4628      	mov	r0, r5
9000573e:	f023 fb9f 	bl	90028e80 <__cxa_guard_acquire>
90005742:	2800      	cmp	r0, #0
90005744:	d0f7      	beq.n	90005736 <_Z23getFont_verdana_10_4bppv+0x12>
90005746:	213f      	movs	r1, #63	@ 0x3f
90005748:	2201      	movs	r2, #1
9000574a:	230a      	movs	r3, #10
9000574c:	2004      	movs	r0, #4
9000574e:	9204      	str	r2, [sp, #16]
90005750:	9300      	str	r3, [sp, #0]
90005752:	9003      	str	r0, [sp, #12]
90005754:	480d      	ldr	r0, [pc, #52]	@ (9000578c <_Z23getFont_verdana_10_4bppv+0x68>)
90005756:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
9000575a:	490d      	ldr	r1, [pc, #52]	@ (90005790 <_Z23getFont_verdana_10_4bppv+0x6c>)
9000575c:	9108      	str	r1, [sp, #32]
9000575e:	490d      	ldr	r1, [pc, #52]	@ (90005794 <_Z23getFont_verdana_10_4bppv+0x70>)
90005760:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
90005764:	9107      	str	r1, [sp, #28]
90005766:	490c      	ldr	r1, [pc, #48]	@ (90005798 <_Z23getFont_verdana_10_4bppv+0x74>)
90005768:	e9cd 4405 	strd	r4, r4, [sp, #20]
9000576c:	e9cd 4401 	strd	r4, r4, [sp, #4]
90005770:	f7ff fd8a 	bl	90005288 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
90005774:	4809      	ldr	r0, [pc, #36]	@ (9000579c <_Z23getFont_verdana_10_4bppv+0x78>)
90005776:	f023 ff15 	bl	900295a4 <atexit>
9000577a:	4628      	mov	r0, r5
9000577c:	f023 fb8c 	bl	90028e98 <__cxa_guard_release>
}
90005780:	4802      	ldr	r0, [pc, #8]	@ (9000578c <_Z23getFont_verdana_10_4bppv+0x68>)
90005782:	b00f      	add	sp, #60	@ 0x3c
90005784:	bd30      	pop	{r4, r5, pc}
90005786:	bf00      	nop
90005788:	240078fc 	.word	0x240078fc
9000578c:	24007900 	.word	0x24007900
90005790:	9002dbc8 	.word	0x9002dbc8
90005794:	9002dbdc 	.word	0x9002dbdc
90005798:	90201534 	.word	0x90201534
9000579c:	90005721 	.word	0x90005721

900057a0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900057a0:	4770      	bx	lr
900057a2:	bf00      	nop

900057a4 <_Z23getFont_verdana_20_4bppv>:
{
900057a4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900057a6:	4d18      	ldr	r5, [pc, #96]	@ (90005808 <_Z23getFont_verdana_20_4bppv+0x64>)
{
900057a8:	b08f      	sub	sp, #60	@ 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900057aa:	682c      	ldr	r4, [r5, #0]
900057ac:	f3bf 8f5b 	dmb	ish
900057b0:	f014 0401 	ands.w	r4, r4, #1
900057b4:	d002      	beq.n	900057bc <_Z23getFont_verdana_20_4bppv+0x18>
    return verdana_20_4bpp;
}
900057b6:	4815      	ldr	r0, [pc, #84]	@ (9000580c <_Z23getFont_verdana_20_4bppv+0x68>)
900057b8:	b00f      	add	sp, #60	@ 0x3c
900057ba:	bd30      	pop	{r4, r5, pc}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
900057bc:	4628      	mov	r0, r5
900057be:	f023 fb5f 	bl	90028e80 <__cxa_guard_acquire>
900057c2:	2800      	cmp	r0, #0
900057c4:	d0f7      	beq.n	900057b6 <_Z23getFont_verdana_20_4bppv+0x12>
900057c6:	213f      	movs	r1, #63	@ 0x3f
900057c8:	2201      	movs	r2, #1
900057ca:	2314      	movs	r3, #20
900057cc:	2004      	movs	r0, #4
900057ce:	9204      	str	r2, [sp, #16]
900057d0:	9300      	str	r3, [sp, #0]
900057d2:	9003      	str	r0, [sp, #12]
900057d4:	480d      	ldr	r0, [pc, #52]	@ (9000580c <_Z23getFont_verdana_20_4bppv+0x68>)
900057d6:	e9cd 1409 	strd	r1, r4, [sp, #36]	@ 0x24
900057da:	490d      	ldr	r1, [pc, #52]	@ (90005810 <_Z23getFont_verdana_20_4bppv+0x6c>)
900057dc:	9108      	str	r1, [sp, #32]
900057de:	490d      	ldr	r1, [pc, #52]	@ (90005814 <_Z23getFont_verdana_20_4bppv+0x70>)
900057e0:	e9cd 440b 	strd	r4, r4, [sp, #44]	@ 0x2c
900057e4:	9107      	str	r1, [sp, #28]
900057e6:	490c      	ldr	r1, [pc, #48]	@ (90005818 <_Z23getFont_verdana_20_4bppv+0x74>)
900057e8:	e9cd 4405 	strd	r4, r4, [sp, #20]
900057ec:	e9cd 4401 	strd	r4, r4, [sp, #4]
900057f0:	f7ff fd4a 	bl	90005288 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
900057f4:	4809      	ldr	r0, [pc, #36]	@ (9000581c <_Z23getFont_verdana_20_4bppv+0x78>)
900057f6:	f023 fed5 	bl	900295a4 <atexit>
900057fa:	4628      	mov	r0, r5
900057fc:	f023 fb4c 	bl	90028e98 <__cxa_guard_release>
}
90005800:	4802      	ldr	r0, [pc, #8]	@ (9000580c <_Z23getFont_verdana_20_4bppv+0x68>)
90005802:	b00f      	add	sp, #60	@ 0x3c
90005804:	bd30      	pop	{r4, r5, pc}
90005806:	bf00      	nop
90005808:	2400792c 	.word	0x2400792c
9000580c:	24007930 	.word	0x24007930
90005810:	9002dbcc 	.word	0x9002dbcc
90005814:	9002dbe0 	.word	0x9002dbe0
90005818:	90201544 	.word	0x90201544
9000581c:	900057a1 	.word	0x900057a1

90005820 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    }
90005820:	2000      	movs	r0, #0
90005822:	4770      	bx	lr

90005824 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    }
90005824:	2000      	movs	r0, #0
90005826:	4770      	bx	lr

90005828 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90005828:	b40e      	push	{r1, r2, r3}
9000582a:	b500      	push	{lr}
9000582c:	b082      	sub	sp, #8
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
9000582e:	2100      	movs	r1, #0
{
90005830:	ab03      	add	r3, sp, #12
90005832:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
90005836:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
90005838:	f011 fd88 	bl	9001734c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
9000583c:	b002      	add	sp, #8
9000583e:	f85d eb04 	ldr.w	lr, [sp], #4
90005842:	b003      	add	sp, #12
90005844:	4770      	bx	lr
90005846:	bf00      	nop

90005848 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
90005848:	b40c      	push	{r2, r3}
9000584a:	b500      	push	{lr}
9000584c:	b083      	sub	sp, #12
9000584e:	ab04      	add	r3, sp, #16
90005850:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
90005854:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
90005856:	f011 fd79 	bl	9001734c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
9000585a:	b003      	add	sp, #12
9000585c:	f85d eb04 	ldr.w	lr, [sp], #4
90005860:	b002      	add	sp, #8
90005862:	4770      	bx	lr

90005864 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
90005864:	6c43      	ldr	r3, [r0, #68]	@ 0x44
{
90005866:	b510      	push	{r4, lr}
90005868:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
9000586a:	b133      	cbz	r3, 9000587a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
9000586c:	8f03      	ldrh	r3, [r0, #56]	@ 0x38
9000586e:	b39b      	cbz	r3, 900058d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>
            return buffer[pos];
90005870:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90005872:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90005876:	8c5b      	ldrh	r3, [r3, #34]	@ 0x22
90005878:	b923      	cbnz	r3, 90005884 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
9000587a:	4620      	mov	r0, r4
}
9000587c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
90005880:	f013 baee 	b.w	90018e60 <_ZN8touchgfx12TextProvider11getNextCharEv>
        substituteGlyphs();
90005884:	f013 fbea 	bl	9001905c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
90005888:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
9000588a:	2b01      	cmp	r3, #1
9000588c:	d92a      	bls.n	900058e4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>
            const uint16_t index = pos + offset;
9000588e:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90005890:	1c53      	adds	r3, r2, #1
90005892:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
90005894:	2b09      	cmp	r3, #9
90005896:	d812      	bhi.n	900058be <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x5a>
90005898:	eb04 0143 	add.w	r1, r4, r3, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
9000589c:	f640 103f 	movw	r0, #2367	@ 0x93f
900058a0:	8c49      	ldrh	r1, [r1, #34]	@ 0x22
900058a2:	4281      	cmp	r1, r0
900058a4:	d1e9      	bne.n	9000587a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
900058a6:	eb04 0142 	add.w	r1, r4, r2, lsl #1
900058aa:	0052      	lsls	r2, r2, #1
900058ac:	8c48      	ldrh	r0, [r1, #34]	@ 0x22

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
900058ae:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            buffer[pos] = newChar;
900058b2:	4422      	add	r2, r4
900058b4:	f640 113f 	movw	r1, #2367	@ 0x93f
            buffer[index < size ? index : 0] = newChar;
900058b8:	8458      	strh	r0, [r3, #34]	@ 0x22
            buffer[pos] = newChar;
900058ba:	8451      	strh	r1, [r2, #34]	@ 0x22
        }
900058bc:	e7dd      	b.n	9000587a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[index < size ? index : index - size];
900058be:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900058c2:	f640 113f 	movw	r1, #2367	@ 0x93f
900058c6:	89db      	ldrh	r3, [r3, #14]
900058c8:	428b      	cmp	r3, r1
900058ca:	d1d6      	bne.n	9000587a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x16>
            return buffer[pos];
900058cc:	eb04 0142 	add.w	r1, r4, r2, lsl #1
900058d0:	2300      	movs	r3, #0
900058d2:	0052      	lsls	r2, r2, #1
900058d4:	8c48      	ldrh	r0, [r1, #34]	@ 0x22
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
900058d6:	e7ea      	b.n	900058ae <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x4a>
            assert(used > 0);
900058d8:	4b05      	ldr	r3, [pc, #20]	@ (900058f0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x8c>)
900058da:	21c5      	movs	r1, #197	@ 0xc5
900058dc:	4a05      	ldr	r2, [pc, #20]	@ (900058f4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x90>)
900058de:	4806      	ldr	r0, [pc, #24]	@ (900058f8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
900058e0:	f023 fe42 	bl	90029568 <__assert_func>
            assert(offset < used);
900058e4:	4b05      	ldr	r3, [pc, #20]	@ (900058fc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x98>)
900058e6:	21cb      	movs	r1, #203	@ 0xcb
900058e8:	4a05      	ldr	r2, [pc, #20]	@ (90005900 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x9c>)
900058ea:	4803      	ldr	r0, [pc, #12]	@ (900058f8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x94>)
900058ec:	f023 fe3c 	bl	90029568 <__assert_func>
900058f0:	9002c0a8 	.word	0x9002c0a8
900058f4:	9002c0b4 	.word	0x9002c0b4
900058f8:	9002c160 	.word	0x9002c160
900058fc:	9002c1ac 	.word	0x9002c1ac
90005900:	9002c1bc 	.word	0x9002c1bc

90005904 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
90005904:	f013 ba75 	b.w	90018df2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90005908 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
90005908:	b510      	push	{r4, lr}
9000590a:	b086      	sub	sp, #24
9000590c:	f10d 0c08 	add.w	ip, sp, #8
    va_list pArg;
    va_start(pArg, format);
90005910:	ac0a      	add	r4, sp, #40	@ 0x28
{
90005912:	e88c 0006 	stmia.w	ip, {r1, r2}
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90005916:	461a      	mov	r2, r3
90005918:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9000591a:	4661      	mov	r1, ip
9000591c:	9401      	str	r4, [sp, #4]
9000591e:	9300      	str	r3, [sp, #0]
90005920:	9b08      	ldr	r3, [sp, #32]
    va_start(pArg, format);
90005922:	9405      	str	r4, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
90005924:	f00f ffd6 	bl	900158d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
90005928:	b006      	add	sp, #24
9000592a:	bd10      	pop	{r4, pc}

9000592c <_ZN8touchgfx5Texts11setLanguageEt>:
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
9000592c:	b9e0      	cbnz	r0, 90005968 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
{
9000592e:	b538      	push	{r3, r4, r5, lr}
    {
        if (languagesArray[id] != 0)
90005930:	4b13      	ldr	r3, [pc, #76]	@ (90005980 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
90005932:	681b      	ldr	r3, [r3, #0]
90005934:	b1cb      	cbz	r3, 9000596a <_ZN8touchgfx5Texts11setLanguageEt+0x3e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90005936:	4c13      	ldr	r4, [pc, #76]	@ (90005984 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90005938:	4813      	ldr	r0, [pc, #76]	@ (90005988 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
9000593a:	e9d3 1200 	ldrd	r1, r2, [r3]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
9000593e:	4419      	add	r1, r3
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90005940:	441a      	add	r2, r3
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
90005942:	6021      	str	r1, [r4, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90005944:	6899      	ldr	r1, [r3, #8]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
90005946:	6002      	str	r2, [r0, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
90005948:	185c      	adds	r4, r3, r1
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
9000594a:	4b10      	ldr	r3, [pc, #64]	@ (9000598c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
9000594c:	2200      	movs	r2, #0
9000594e:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
90005950:	f000 f83a 	bl	900059c8 <_ZN17TypedTextDatabase8getFontsEv>
90005954:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
90005956:	f000 f835 	bl	900059c4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
9000595a:	4b0d      	ldr	r3, [pc, #52]	@ (90005990 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
        fonts = f;
9000595c:	4a0d      	ldr	r2, [pc, #52]	@ (90005994 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
        typedTexts = data;
9000595e:	601c      	str	r4, [r3, #0]
        numberOfTypedTexts = n;
90005960:	4b0d      	ldr	r3, [pc, #52]	@ (90005998 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
        fonts = f;
90005962:	6015      	str	r5, [r2, #0]
        numberOfTypedTexts = n;
90005964:	8018      	strh	r0, [r3, #0]
    }
}
90005966:	bd38      	pop	{r3, r4, r5, pc}
90005968:	4770      	bx	lr
            currentLanguageTypedText = typedTextDatabaseArray[id];
9000596a:	4c0c      	ldr	r4, [pc, #48]	@ (9000599c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
            currentLanguagePtr = texts_all_languages;
9000596c:	4905      	ldr	r1, [pc, #20]	@ (90005984 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
9000596e:	6824      	ldr	r4, [r4, #0]
            currentLanguagePtr = texts_all_languages;
90005970:	480b      	ldr	r0, [pc, #44]	@ (900059a0 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
            currentLanguageIndices = staticLanguageIndices[id];
90005972:	4b05      	ldr	r3, [pc, #20]	@ (90005988 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
90005974:	4a0b      	ldr	r2, [pc, #44]	@ (900059a4 <_ZN8touchgfx5Texts11setLanguageEt+0x78>)
            currentLanguagePtr = texts_all_languages;
90005976:	6008      	str	r0, [r1, #0]
            currentLanguageIndices = staticLanguageIndices[id];
90005978:	601a      	str	r2, [r3, #0]
    if (currentLanguageTypedText)
9000597a:	2c00      	cmp	r4, #0
9000597c:	d1e5      	bne.n	9000594a <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
9000597e:	bd38      	pop	{r3, r4, r5, pc}
90005980:	24007968 	.word	0x24007968
90005984:	24007960 	.word	0x24007960
90005988:	2400795c 	.word	0x2400795c
9000598c:	24007964 	.word	0x24007964
90005990:	240219e4 	.word	0x240219e4
90005994:	240219ec 	.word	0x240219ec
90005998:	240219e8 	.word	0x240219e8
9000599c:	902015e4 	.word	0x902015e4
900059a0:	90201578 	.word	0x90201578
900059a4:	90201554 	.word	0x90201554

900059a8 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
900059a8:	4a04      	ldr	r2, [pc, #16]	@ (900059bc <_ZNK8touchgfx5Texts7getTextEt+0x14>)
900059aa:	4b05      	ldr	r3, [pc, #20]	@ (900059c0 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
900059ac:	6812      	ldr	r2, [r2, #0]
900059ae:	681b      	ldr	r3, [r3, #0]
900059b0:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
}
900059b4:	eb03 0040 	add.w	r0, r3, r0, lsl #1
900059b8:	4770      	bx	lr
900059ba:	bf00      	nop
900059bc:	2400795c 	.word	0x2400795c
900059c0:	24007960 	.word	0x24007960

900059c4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
900059c4:	2009      	movs	r0, #9
900059c6:	4770      	bx	lr

900059c8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
900059c8:	4800      	ldr	r0, [pc, #0]	@ (900059cc <_ZN17TypedTextDatabase8getFontsEv+0x4>)
900059ca:	4770      	bx	lr
900059cc:	2400796c 	.word	0x2400796c

900059d0 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 4:
        touchgfx_fonts[4] = &(getFont_Siemens_TIA_Portal_basic_bold_25_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
900059d0:	b510      	push	{r4, lr}
};
900059d2:	4c08      	ldr	r4, [pc, #32]	@ (900059f4 <_GLOBAL__sub_I_touchgfx_fonts+0x24>)
    &(getFont_Siemens_TIA_Portal_basic_bold_30_4bpp()),
900059d4:	f7ff fe1e 	bl	90005614 <_Z45getFont_Siemens_TIA_Portal_basic_bold_30_4bppv>
};
900059d8:	6020      	str	r0, [r4, #0]
    &(getFont_Siemens_TIA_Portal_basic_bold_40_4bpp()),
900059da:	f7ff fe5f 	bl	9000569c <_Z45getFont_Siemens_TIA_Portal_basic_bold_40_4bppv>
};
900059de:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp()),
900059e0:	f7ff fea0 	bl	90005724 <_Z23getFont_verdana_10_4bppv>
};
900059e4:	60a0      	str	r0, [r4, #8]
    &(getFont_verdana_20_4bpp()),
900059e6:	f7ff fedd 	bl	900057a4 <_Z23getFont_verdana_20_4bppv>
};
900059ea:	60e0      	str	r0, [r4, #12]
    &(getFont_Siemens_TIA_Portal_basic_bold_25_4bpp())
900059ec:	f7ff fdce 	bl	9000558c <_Z45getFont_Siemens_TIA_Portal_basic_bold_25_4bppv>
};
900059f0:	6120      	str	r0, [r4, #16]
} // namespace TypedTextDatabase
900059f2:	bd10      	pop	{r4, pc}
900059f4:	2400796c 	.word	0x2400796c

900059f8 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>:
/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */
#include <touchgfx/VectorFontRendererImpl.hpp>

void touchgfx::VectorFontRendererImpl::getVectorFontBuffers(float*& pointArray, int& pointArraySize, uint8_t*& commandArray, int& commandArraySize)
{
900059f8:	b410      	push	{r4}
    pointArray = 0;
900059fa:	2400      	movs	r4, #0
900059fc:	6004      	str	r4, [r0, #0]
    pointArraySize = 0;
900059fe:	600c      	str	r4, [r1, #0]
    commandArray = 0;
90005a00:	6014      	str	r4, [r2, #0]
    commandArraySize = 0;
90005a02:	601c      	str	r4, [r3, #0]
}
90005a04:	f85d 4b04 	ldr.w	r4, [sp], #4
90005a08:	4770      	bx	lr
90005a0a:	bf00      	nop

90005a0c <_ZN19DataScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~DataScreenPresenter() {}
90005a0c:	4770      	bx	lr
90005a0e:	bf00      	nop

90005a10 <_ZThn4_N19DataScreenPresenterD1Ev>:
90005a10:	3804      	subs	r0, #4
90005a12:	4770      	bx	lr

90005a14 <_ZN19DataScreenPresenter10deactivateEv>:
}

void DataScreenPresenter::activate()
{

}
90005a14:	4770      	bx	lr
90005a16:	bf00      	nop

90005a18 <_ZN19DataScreenPresenterD0Ev>:
90005a18:	b510      	push	{r4, lr}
90005a1a:	4604      	mov	r4, r0
90005a1c:	2110      	movs	r1, #16
90005a1e:	f023 fa2d 	bl	90028e7c <_ZdlPvj>
90005a22:	4620      	mov	r0, r4
90005a24:	bd10      	pop	{r4, pc}
90005a26:	bf00      	nop

90005a28 <_ZThn4_N19DataScreenPresenterD0Ev>:
90005a28:	b510      	push	{r4, lr}
90005a2a:	1f04      	subs	r4, r0, #4
90005a2c:	2110      	movs	r1, #16
90005a2e:	4620      	mov	r0, r4
90005a30:	f023 fa24 	bl	90028e7c <_ZdlPvj>
90005a34:	4620      	mov	r0, r4
90005a36:	bd10      	pop	{r4, pc}

90005a38 <_ZN19DataScreenPresenterC1ER14DataScreenView>:
DataScreenPresenter::DataScreenPresenter(DataScreenView& v)
90005a38:	b410      	push	{r4}
    : view(v)
90005a3a:	4a05      	ldr	r2, [pc, #20]	@ (90005a50 <_ZN19DataScreenPresenterC1ER14DataScreenView+0x18>)
    ModelListener() : model(0) {}
90005a3c:	2400      	movs	r4, #0
90005a3e:	60c1      	str	r1, [r0, #12]
90005a40:	6084      	str	r4, [r0, #8]
90005a42:	f102 0418 	add.w	r4, r2, #24
90005a46:	6002      	str	r2, [r0, #0]
90005a48:	6044      	str	r4, [r0, #4]
}
90005a4a:	f85d 4b04 	ldr.w	r4, [sp], #4
90005a4e:	4770      	bx	lr
90005a50:	9002cd3c 	.word	0x9002cd3c

90005a54 <_ZN14DataScreenView14tearDownScreenEv>:
}

void DataScreenView::tearDownScreen()
{
    DataScreenViewBase::tearDownScreen();
}
90005a54:	4770      	bx	lr
90005a56:	bf00      	nop

90005a58 <_ZN14DataScreenViewD1Ev>:

class DataScreenView : public DataScreenViewBase
{
public:
    DataScreenView();
    virtual ~DataScreenView() {}
90005a58:	4b03      	ldr	r3, [pc, #12]	@ (90005a68 <_ZN14DataScreenViewD1Ev+0x10>)
90005a5a:	b510      	push	{r4, lr}
90005a5c:	4604      	mov	r4, r0
90005a5e:	6003      	str	r3, [r0, #0]
90005a60:	f7fe fdf2 	bl	90004648 <_ZN18DataScreenViewBaseD1Ev>
90005a64:	4620      	mov	r0, r4
90005a66:	bd10      	pop	{r4, pc}
90005a68:	9002cd64 	.word	0x9002cd64

90005a6c <_ZN14DataScreenViewD0Ev>:
90005a6c:	4b06      	ldr	r3, [pc, #24]	@ (90005a88 <_ZN14DataScreenViewD0Ev+0x1c>)
90005a6e:	b510      	push	{r4, lr}
90005a70:	4604      	mov	r4, r0
90005a72:	6003      	str	r3, [r0, #0]
90005a74:	f7fe fde8 	bl	90004648 <_ZN18DataScreenViewBaseD1Ev>
90005a78:	f44f 7121 	mov.w	r1, #644	@ 0x284
90005a7c:	4620      	mov	r0, r4
90005a7e:	f023 f9fd 	bl	90028e7c <_ZdlPvj>
90005a82:	4620      	mov	r0, r4
90005a84:	bd10      	pop	{r4, pc}
90005a86:	bf00      	nop
90005a88:	9002cd64 	.word	0x9002cd64

90005a8c <_ZN14DataScreenViewC1Ev>:
DataScreenView::DataScreenView()
90005a8c:	b510      	push	{r4, lr}
90005a8e:	4604      	mov	r4, r0
90005a90:	f7fe fea0 	bl	900047d4 <_ZN18DataScreenViewBaseC1Ev>
90005a94:	4b01      	ldr	r3, [pc, #4]	@ (90005a9c <_ZN14DataScreenViewC1Ev+0x10>)
}
90005a96:	4620      	mov	r0, r4
DataScreenView::DataScreenView()
90005a98:	6023      	str	r3, [r4, #0]
}
90005a9a:	bd10      	pop	{r4, pc}
90005a9c:	9002cd64 	.word	0x9002cd64

90005aa0 <_ZN14DataScreenView11setupScreenEv>:
    DataScreenViewBase::setupScreen();
90005aa0:	f7fe bdd4 	b.w	9000464c <_ZN18DataScreenViewBase11setupScreenEv>

90005aa4 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
90005aa4:	4770      	bx	lr
90005aa6:	bf00      	nop

90005aa8 <_ZN19FrontendApplicationD0Ev>:
90005aa8:	b510      	push	{r4, lr}
90005aaa:	4604      	mov	r4, r0
90005aac:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
90005ab0:	f023 f9e4 	bl	90028e7c <_ZdlPvj>
90005ab4:	4620      	mov	r0, r4
90005ab6:	bd10      	pop	{r4, pc}

90005ab8 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
90005ab8:	b510      	push	{r4, lr}
90005aba:	4604      	mov	r4, r0
    {
        model.tick();
90005abc:	f8d0 0158 	ldr.w	r0, [r0, #344]	@ 0x158
90005ac0:	f000 f814 	bl	90005aec <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
90005ac4:	4620      	mov	r0, r4
    }
90005ac6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
90005aca:	f010 bc03 	b.w	900162d4 <_ZN8touchgfx11Application15handleTickEventEv>
90005ace:	bf00      	nop

90005ad0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
90005ad0:	b510      	push	{r4, lr}
90005ad2:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
90005ad4:	f7ff fb28 	bl	90005128 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
90005ad8:	4b01      	ldr	r3, [pc, #4]	@ (90005ae0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
{

}
90005ada:	4620      	mov	r0, r4
    : FrontendApplicationBase(m, heap)
90005adc:	6023      	str	r3, [r4, #0]
}
90005ade:	bd10      	pop	{r4, pc}
90005ae0:	9002cda0 	.word	0x9002cda0

90005ae4 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
90005ae4:	2200      	movs	r2, #0
90005ae6:	6002      	str	r2, [r0, #0]
{

}
90005ae8:	4770      	bx	lr
90005aea:	bf00      	nop

90005aec <_ZN5Model4tickEv>:

void Model::tick()
{

}
90005aec:	4770      	bx	lr
90005aee:	bf00      	nop

90005af0 <_ZN20StartScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~StartScreenPresenter() {}
90005af0:	4770      	bx	lr
90005af2:	bf00      	nop

90005af4 <_ZThn4_N20StartScreenPresenterD1Ev>:
90005af4:	3804      	subs	r0, #4
90005af6:	4770      	bx	lr

90005af8 <_ZN20StartScreenPresenter10deactivateEv>:
}

void StartScreenPresenter::activate()
{

}
90005af8:	4770      	bx	lr
90005afa:	bf00      	nop

90005afc <_ZN20StartScreenPresenterD0Ev>:
90005afc:	b510      	push	{r4, lr}
90005afe:	4604      	mov	r4, r0
90005b00:	2110      	movs	r1, #16
90005b02:	f023 f9bb 	bl	90028e7c <_ZdlPvj>
90005b06:	4620      	mov	r0, r4
90005b08:	bd10      	pop	{r4, pc}
90005b0a:	bf00      	nop

90005b0c <_ZThn4_N20StartScreenPresenterD0Ev>:
90005b0c:	b510      	push	{r4, lr}
90005b0e:	1f04      	subs	r4, r0, #4
90005b10:	2110      	movs	r1, #16
90005b12:	4620      	mov	r0, r4
90005b14:	f023 f9b2 	bl	90028e7c <_ZdlPvj>
90005b18:	4620      	mov	r0, r4
90005b1a:	bd10      	pop	{r4, pc}

90005b1c <_ZN20StartScreenPresenterC1ER15StartScreenView>:
StartScreenPresenter::StartScreenPresenter(StartScreenView& v)
90005b1c:	b410      	push	{r4}
    : view(v)
90005b1e:	4a05      	ldr	r2, [pc, #20]	@ (90005b34 <_ZN20StartScreenPresenterC1ER15StartScreenView+0x18>)
90005b20:	2400      	movs	r4, #0
90005b22:	60c1      	str	r1, [r0, #12]
90005b24:	6084      	str	r4, [r0, #8]
90005b26:	f102 0418 	add.w	r4, r2, #24
90005b2a:	6002      	str	r2, [r0, #0]
90005b2c:	6044      	str	r4, [r0, #4]
}
90005b2e:	f85d 4b04 	ldr.w	r4, [sp], #4
90005b32:	4770      	bx	lr
90005b34:	9002cdf4 	.word	0x9002cdf4

90005b38 <_ZN15StartScreenView14tearDownScreenEv>:
}

void StartScreenView::tearDownScreen()
{
    StartScreenViewBase::tearDownScreen();
}
90005b38:	4770      	bx	lr
90005b3a:	bf00      	nop

90005b3c <_ZN15StartScreenViewD1Ev>:

class StartScreenView : public StartScreenViewBase
{
public:
    StartScreenView();
    virtual ~StartScreenView() {}
90005b3c:	4b03      	ldr	r3, [pc, #12]	@ (90005b4c <_ZN15StartScreenViewD1Ev+0x10>)
90005b3e:	b510      	push	{r4, lr}
90005b40:	4604      	mov	r4, r0
90005b42:	6003      	str	r3, [r0, #0]
90005b44:	f7ff fbd2 	bl	900052ec <_ZN19StartScreenViewBaseD1Ev>
90005b48:	4620      	mov	r0, r4
90005b4a:	bd10      	pop	{r4, pc}
90005b4c:	9002ce1c 	.word	0x9002ce1c

90005b50 <_ZN15StartScreenViewD0Ev>:
90005b50:	4b06      	ldr	r3, [pc, #24]	@ (90005b6c <_ZN15StartScreenViewD0Ev+0x1c>)
90005b52:	b510      	push	{r4, lr}
90005b54:	4604      	mov	r4, r0
90005b56:	6003      	str	r3, [r0, #0]
90005b58:	f7ff fbc8 	bl	900052ec <_ZN19StartScreenViewBaseD1Ev>
90005b5c:	f44f 719c 	mov.w	r1, #312	@ 0x138
90005b60:	4620      	mov	r0, r4
90005b62:	f023 f98b 	bl	90028e7c <_ZdlPvj>
90005b66:	4620      	mov	r0, r4
90005b68:	bd10      	pop	{r4, pc}
90005b6a:	bf00      	nop
90005b6c:	9002ce1c 	.word	0x9002ce1c

90005b70 <_ZN15StartScreenViewC1Ev>:
StartScreenView::StartScreenView()
90005b70:	b510      	push	{r4, lr}
90005b72:	4604      	mov	r4, r0
90005b74:	f7ff fbf8 	bl	90005368 <_ZN19StartScreenViewBaseC1Ev>
90005b78:	4b01      	ldr	r3, [pc, #4]	@ (90005b80 <_ZN15StartScreenViewC1Ev+0x10>)
}
90005b7a:	4620      	mov	r0, r4
StartScreenView::StartScreenView()
90005b7c:	6023      	str	r3, [r4, #0]
}
90005b7e:	bd10      	pop	{r4, pc}
90005b80:	9002ce1c 	.word	0x9002ce1c

90005b84 <_ZN15StartScreenView11setupScreenEv>:
    StartScreenViewBase::setupScreen();
90005b84:	f7ff bbb4 	b.w	900052f0 <_ZN19StartScreenViewBase11setupScreenEv>

90005b88 <FT5336_GetCapabilities>:
{
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Store component's capabilities */
  Capabilities->MultiTouch = 1;
90005b88:	f240 1c01 	movw	ip, #257	@ 0x101
  Capabilities->Gesture    = 1;
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90005b8c:	2005      	movs	r0, #5
  Capabilities->MaxXl      = FT5336_MAX_X_LENGTH;
90005b8e:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90005b92:	f44f 7388 	mov.w	r3, #272	@ 0x110
  Capabilities->MaxTouch   = FT5336_MAX_NB_TOUCH;
90005b96:	7088      	strb	r0, [r1, #2]

  return FT5336_OK;
}
90005b98:	2000      	movs	r0, #0
  Capabilities->MultiTouch = 1;
90005b9a:	f8a1 c000 	strh.w	ip, [r1]
  Capabilities->MaxYl      = FT5336_MAX_Y_LENGTH;
90005b9e:	e9c1 2301 	strd	r2, r3, [r1, #4]
}
90005ba2:	4770      	bx	lr

90005ba4 <FT5336_DeInit>:
  */
int32_t FT5336_DeInit(FT5336_Object_t *pObj)
{
  int32_t ret = FT5336_OK;

  if(pObj->IsInitialized == 1U)
90005ba4:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
90005ba8:	2b01      	cmp	r3, #1
90005baa:	d102      	bne.n	90005bb2 <FT5336_DeInit+0xe>
  {
    pObj->IsInitialized = 0;
90005bac:	2300      	movs	r3, #0
90005bae:	f880 3024 	strb.w	r3, [r0, #36]	@ 0x24
  }

  return ret;
}
90005bb2:	2000      	movs	r0, #0
90005bb4:	4770      	bx	lr
90005bb6:	bf00      	nop

90005bb8 <FT5336_ITStatus>:
  /* Prevent unused argument(s) compilation warning */
  (void)(pObj);

  /* Always return FT5336_OK as feature not applicable to FT5336 */
  return FT5336_OK;
}
90005bb8:	2000      	movs	r0, #0
90005bba:	4770      	bx	lr

90005bbc <ReadRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t ReadRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90005bbc:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90005bbe:	6904      	ldr	r4, [r0, #16]
90005bc0:	8900      	ldrh	r0, [r0, #8]
90005bc2:	46a4      	mov	ip, r4
}
90005bc4:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.ReadReg(pObj->IO.Address, Reg, pData, Length);
90005bc8:	4760      	bx	ip
90005bca:	bf00      	nop

90005bcc <WriteRegWrap>:
  * @param  pData: The target register value to be written
  * @param  Length: buffer size to be written
  * @retval error status
  */
static int32_t WriteRegWrap(void *handle, uint8_t Reg, uint8_t* pData, uint16_t Length)
{
90005bcc:	b410      	push	{r4}
  FT5336_Object_t *pObj = (FT5336_Object_t *)handle;

  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90005bce:	68c4      	ldr	r4, [r0, #12]
90005bd0:	8900      	ldrh	r0, [r0, #8]
90005bd2:	46a4      	mov	ip, r4
}
90005bd4:	f85d 4b04 	ldr.w	r4, [sp], #4
  return pObj->IO.WriteReg(pObj->IO.Address, Reg, pData, Length);
90005bd8:	4760      	bx	ip
90005bda:	bf00      	nop

90005bdc <FT5336_GestureConfig>:
{
90005bdc:	b570      	push	{r4, r5, r6, lr}
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90005bde:	f100 0518 	add.w	r5, r0, #24
{
90005be2:	460e      	mov	r6, r1
  ret = ft5336_radian_value(&pObj->Ctx, (uint8_t)GestureInit->Radian);
90005be4:	7809      	ldrb	r1, [r1, #0]
90005be6:	4628      	mov	r0, r5
90005be8:	f000 f96c 	bl	90005ec4 <ft5336_radian_value>
90005bec:	4604      	mov	r4, r0
  ret += ft5336_offset_left_right(&pObj->Ctx, (uint8_t)GestureInit->OffsetLeftRight);
90005bee:	7931      	ldrb	r1, [r6, #4]
90005bf0:	4628      	mov	r0, r5
90005bf2:	f000 f975 	bl	90005ee0 <ft5336_offset_left_right>
90005bf6:	4404      	add	r4, r0
  ret += ft5336_offset_up_down(&pObj->Ctx, (uint8_t)GestureInit->OffsetUpDown);
90005bf8:	7a31      	ldrb	r1, [r6, #8]
90005bfa:	4628      	mov	r0, r5
90005bfc:	f000 f97e 	bl	90005efc <ft5336_offset_up_down>
90005c00:	4404      	add	r4, r0
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90005c02:	7b31      	ldrb	r1, [r6, #12]
90005c04:	4628      	mov	r0, r5
90005c06:	f000 f987 	bl	90005f18 <ft5336_disatnce_left_right>
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90005c0a:	7c31      	ldrb	r1, [r6, #16]
  ret += ft5336_disatnce_left_right(&pObj->Ctx, (uint8_t)GestureInit->DistanceLeftRight);
90005c0c:	4404      	add	r4, r0
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90005c0e:	4628      	mov	r0, r5
90005c10:	f000 f990 	bl	90005f34 <ft5336_distance_up_down>
90005c14:	4603      	mov	r3, r0
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90005c16:	7d31      	ldrb	r1, [r6, #20]
90005c18:	4628      	mov	r0, r5
  ret += ft5336_distance_up_down(&pObj->Ctx, (uint8_t)GestureInit->DistanceUpDown);
90005c1a:	441c      	add	r4, r3
  ret += ft5336_distance_zoom(&pObj->Ctx, (uint8_t)GestureInit->DistanceZoom);
90005c1c:	f000 f998 	bl	90005f50 <ft5336_distance_zoom>
  if(ret != FT5336_OK)
90005c20:	42c4      	cmn	r4, r0
}
90005c22:	bf14      	ite	ne
90005c24:	f04f 30ff 	movne.w	r0, #4294967295
90005c28:	2000      	moveq	r0, #0
90005c2a:	bd70      	pop	{r4, r5, r6, pc}

90005c2c <FT5336_ReadID>:
  return ft5336_chip_id(&pObj->Ctx, (uint8_t *)Id);
90005c2c:	3018      	adds	r0, #24
90005c2e:	f000 b9ab 	b.w	90005f88 <ft5336_chip_id>
90005c32:	bf00      	nop

90005c34 <FT5336_GetState>:
{
90005c34:	b530      	push	{r4, r5, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90005c36:	f100 0518 	add.w	r5, r0, #24
{
90005c3a:	b083      	sub	sp, #12
90005c3c:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90005c3e:	4628      	mov	r0, r5
90005c40:	a901      	add	r1, sp, #4
90005c42:	f000 f931 	bl	90005ea8 <ft5336_td_status>
90005c46:	bb10      	cbnz	r0, 90005c8e <FT5336_GetState+0x5a>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90005c48:	f89d 3004 	ldrb.w	r3, [sp, #4]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90005c4c:	2b05      	cmp	r3, #5
90005c4e:	bf94      	ite	ls
90005c50:	4619      	movls	r1, r3
90005c52:	2100      	movhi	r1, #0
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90005c54:	2304      	movs	r3, #4
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90005c56:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90005c58:	4628      	mov	r0, r5
90005c5a:	2103      	movs	r1, #3
90005c5c:	eb0d 0203 	add.w	r2, sp, r3
90005c60:	f000 f910 	bl	90005e84 <ft5336_read_reg>
90005c64:	b9b0      	cbnz	r0, 90005c94 <FT5336_GetState+0x60>
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90005c66:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90005c6a:	f89d 3006 	ldrb.w	r3, [sp, #6]
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90005c6e:	0212      	lsls	r2, r2, #8
90005c70:	f89d 1005 	ldrb.w	r1, [sp, #5]
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90005c74:	021b      	lsls	r3, r3, #8
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90005c76:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90005c7a:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX = (((uint32_t)data[0] & FT5336_P1_XH_TP_BIT_MASK) << 8) | ((uint32_t)data[1] & FT5336_P1_XL_TP_BIT_MASK);
90005c7e:	430a      	orrs	r2, r1
    State->TouchY = (((uint32_t)data[2] & FT5336_P1_YH_TP_BIT_MASK) << 8) | ((uint32_t)data[3] & FT5336_P1_YL_TP_BIT_MASK);
90005c80:	f89d 1007 	ldrb.w	r1, [sp, #7]
90005c84:	430b      	orrs	r3, r1
90005c86:	e9c4 2301 	strd	r2, r3, [r4, #4]
}
90005c8a:	b003      	add	sp, #12
90005c8c:	bd30      	pop	{r4, r5, pc}
90005c8e:	f04f 31ff 	mov.w	r1, #4294967295
90005c92:	e7df      	b.n	90005c54 <FT5336_GetState+0x20>
    ret = FT5336_ERROR;
90005c94:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90005c98:	e7f7      	b.n	90005c8a <FT5336_GetState+0x56>
90005c9a:	bf00      	nop

90005c9c <FT5336_GetMultiTouchState>:
{
90005c9c:	b570      	push	{r4, r5, r6, lr}
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90005c9e:	f100 0518 	add.w	r5, r0, #24
{
90005ca2:	b088      	sub	sp, #32
90005ca4:	460c      	mov	r4, r1
  if(ft5336_td_status(&pObj->Ctx, &nb_touch) != FT5336_OK)
90005ca6:	4628      	mov	r0, r5
90005ca8:	4669      	mov	r1, sp
90005caa:	f000 f8fd 	bl	90005ea8 <ft5336_td_status>
90005cae:	2800      	cmp	r0, #0
90005cb0:	f040 809a 	bne.w	90005de8 <FT5336_GetMultiTouchState+0x14c>
    if(nb_touch > FT5336_MAX_NB_TOUCH)
90005cb4:	f89d 3000 	ldrb.w	r3, [sp]
  State->TouchDetected = (uint32_t)FT5336_DetectTouch(pObj);
90005cb8:	2b05      	cmp	r3, #5
90005cba:	bf94      	ite	ls
90005cbc:	4619      	movls	r1, r3
90005cbe:	2100      	movhi	r1, #0
90005cc0:	6021      	str	r1, [r4, #0]
  if(ft5336_read_reg(&pObj->Ctx, FT5336_P1_XH_REG, data, (uint16_t)sizeof(data)) != FT5336_OK)
90005cc2:	231e      	movs	r3, #30
90005cc4:	466a      	mov	r2, sp
90005cc6:	4628      	mov	r0, r5
90005cc8:	2103      	movs	r1, #3
90005cca:	f000 f8db 	bl	90005e84 <ft5336_read_reg>
90005cce:	2800      	cmp	r0, #0
90005cd0:	f040 808d 	bne.w	90005dee <FT5336_GetMultiTouchState+0x152>
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005cd4:	f89d 1000 	ldrb.w	r1, [sp]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005cd8:	f89d 3002 	ldrb.w	r3, [sp, #2]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005cdc:	020a      	lsls	r2, r1, #8
90005cde:	f89d 5001 	ldrb.w	r5, [sp, #1]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005ce2:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005ce4:	f89d c007 	ldrb.w	ip, [sp, #7]
90005ce8:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005cec:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005cee:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005cf2:	f89d 6011 	ldrb.w	r6, [sp, #17]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005cf6:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005cf8:	f89d 5003 	ldrb.w	r5, [sp, #3]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005cfc:	6421      	str	r1, [r4, #64]	@ 0x40
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005cfe:	0936      	lsrs	r6, r6, #4
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005d00:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005d02:	6062      	str	r2, [r4, #4]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005d04:	f89d 2004 	ldrb.w	r2, [sp, #4]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005d08:	61a3      	str	r3, [r4, #24]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005d0a:	f89d 3005 	ldrb.w	r3, [sp, #5]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005d0e:	f89d 1006 	ldrb.w	r1, [sp, #6]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005d12:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005d14:	62e2      	str	r2, [r4, #44]	@ 0x2c
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005d16:	f89d 200b 	ldrb.w	r2, [sp, #11]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005d1a:	020d      	lsls	r5, r1, #8
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005d1c:	6563      	str	r3, [r4, #84]	@ 0x54
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005d1e:	0989      	lsrs	r1, r1, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005d20:	f89d 300c 	ldrb.w	r3, [sp, #12]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005d24:	0912      	lsrs	r2, r2, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005d26:	6461      	str	r1, [r4, #68]	@ 0x44
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005d28:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005d2c:	f89d 100a 	ldrb.w	r1, [sp, #10]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005d30:	65a2      	str	r2, [r4, #88]	@ 0x58
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005d32:	021a      	lsls	r2, r3, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005d34:	6321      	str	r1, [r4, #48]	@ 0x30
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005d36:	ea45 050c 	orr.w	r5, r5, ip
90005d3a:	f402 6170 	and.w	r1, r2, #3840	@ 0xf00
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005d3e:	f89d 2008 	ldrb.w	r2, [sp, #8]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005d42:	099b      	lsrs	r3, r3, #6
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005d44:	60a5      	str	r5, [r4, #8]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005d46:	0212      	lsls	r2, r2, #8
90005d48:	f89d 5009 	ldrb.w	r5, [sp, #9]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005d4c:	64a3      	str	r3, [r4, #72]	@ 0x48
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005d4e:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005d52:	f89d 3010 	ldrb.w	r3, [sp, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005d56:	432a      	orrs	r2, r5
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005d58:	6363      	str	r3, [r4, #52]	@ 0x34
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005d5a:	f89d 300e 	ldrb.w	r3, [sp, #14]
90005d5e:	61e2      	str	r2, [r4, #28]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005d60:	f89d 200d 	ldrb.w	r2, [sp, #13]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005d64:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005d66:	430a      	orrs	r2, r1
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005d68:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005d6c:	60e2      	str	r2, [r4, #12]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005d6e:	f89d 200f 	ldrb.w	r2, [sp, #15]
90005d72:	4313      	orrs	r3, r2
90005d74:	6223      	str	r3, [r4, #32]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005d76:	65e6      	str	r6, [r4, #92]	@ 0x5c
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005d78:	f89d 1012 	ldrb.w	r1, [sp, #18]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005d7c:	f89d 3014 	ldrb.w	r3, [sp, #20]
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005d80:	020a      	lsls	r2, r1, #8
90005d82:	f89d 5013 	ldrb.w	r5, [sp, #19]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005d86:	021b      	lsls	r3, r3, #8
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005d88:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005d8c:	0989      	lsrs	r1, r1, #6
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005d8e:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005d92:	432a      	orrs	r2, r5
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005d94:	f89d 5015 	ldrb.w	r5, [sp, #21]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005d98:	64e1      	str	r1, [r4, #76]	@ 0x4c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005d9a:	432b      	orrs	r3, r5
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005d9c:	f89d 1018 	ldrb.w	r1, [sp, #24]
90005da0:	6122      	str	r2, [r4, #16]
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005da2:	6263      	str	r3, [r4, #36]	@ 0x24
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005da4:	020b      	lsls	r3, r1, #8
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005da6:	f89d 2016 	ldrb.w	r2, [sp, #22]
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005daa:	0989      	lsrs	r1, r1, #6
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005dac:	f89d 5017 	ldrb.w	r5, [sp, #23]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005db0:	63a2      	str	r2, [r4, #56]	@ 0x38
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005db2:	f403 6270 	and.w	r2, r3, #3840	@ 0xf00
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005db6:	f89d 301d 	ldrb.w	r3, [sp, #29]
90005dba:	092d      	lsrs	r5, r5, #4
    State->TouchEvent[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_EF_BIT_MASK) >> FT5336_P1_XH_EF_BIT_POSITION);
90005dbc:	6521      	str	r1, [r4, #80]	@ 0x50
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005dbe:	091b      	lsrs	r3, r3, #4
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005dc0:	f89d 101c 	ldrb.w	r1, [sp, #28]
    State->TouchArea[i] = ((uint32_t)data[(i*6U) + 5U] & FT5336_P1_MISC_BIT_MASK) >> FT5336_P1_MISC_BIT_POSITION;
90005dc4:	6625      	str	r5, [r4, #96]	@ 0x60
90005dc6:	6663      	str	r3, [r4, #100]	@ 0x64
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005dc8:	f89d 301a 	ldrb.w	r3, [sp, #26]
    State->TouchWeight[i] = ((uint32_t)data[(i*6U) + 4U] & FT5336_P1_WEIGHT_BIT_MASK);
90005dcc:	63e1      	str	r1, [r4, #60]	@ 0x3c
    State->TouchY[i] = (((uint32_t)data[(i*6U) + 2U] & FT5336_P1_YH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 3U] & FT5336_P1_YL_TP_BIT_MASK);
90005dce:	021b      	lsls	r3, r3, #8
90005dd0:	f89d 101b 	ldrb.w	r1, [sp, #27]
90005dd4:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
90005dd8:	430b      	orrs	r3, r1
90005dda:	62a3      	str	r3, [r4, #40]	@ 0x28
    State->TouchX[i] = (((uint32_t)data[i*6U] & FT5336_P1_XH_TP_BIT_MASK) << 8U) | ((uint32_t)data[(i*6U) + 1U] & FT5336_P1_XL_TP_BIT_MASK);
90005ddc:	f89d 3019 	ldrb.w	r3, [sp, #25]
90005de0:	4313      	orrs	r3, r2
90005de2:	6163      	str	r3, [r4, #20]
}
90005de4:	b008      	add	sp, #32
90005de6:	bd70      	pop	{r4, r5, r6, pc}
90005de8:	f04f 31ff 	mov.w	r1, #4294967295
90005dec:	e768      	b.n	90005cc0 <FT5336_GetMultiTouchState+0x24>
    ret = FT5336_ERROR;
90005dee:	f04f 30ff 	mov.w	r0, #4294967295
  return ret;
90005df2:	e7f7      	b.n	90005de4 <FT5336_GetMultiTouchState+0x148>

90005df4 <FT5336_GetGesture>:
  return ft5336_gest_id(&pObj->Ctx, GestureId);
90005df4:	3018      	adds	r0, #24
90005df6:	f000 b84d 	b.w	90005e94 <ft5336_gest_id>
90005dfa:	bf00      	nop

90005dfc <FT5336_EnableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_TRIGGER);
90005dfc:	2101      	movs	r1, #1
90005dfe:	3018      	adds	r0, #24
90005e00:	f000 b8b4 	b.w	90005f6c <ft5336_g_mode>

90005e04 <FT5336_DisableIT>:
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90005e04:	2100      	movs	r1, #0
90005e06:	3018      	adds	r0, #24
90005e08:	f000 b8b0 	b.w	90005f6c <ft5336_g_mode>

90005e0c <FT5336_Init>:
{
90005e0c:	b570      	push	{r4, r5, r6, lr}
  if(pObj->IsInitialized == 0U)
90005e0e:	f890 5024 	ldrb.w	r5, [r0, #36]	@ 0x24
90005e12:	b98d      	cbnz	r5, 90005e38 <FT5336_Init+0x2c>
    pObj->IO.Init();
90005e14:	4606      	mov	r6, r0
90005e16:	4604      	mov	r4, r0
90005e18:	f856 3b18 	ldr.w	r3, [r6], #24
90005e1c:	4798      	blx	r3
  return ft5336_g_mode(&pObj->Ctx, FT5336_G_MODE_INTERRUPT_POLLING);
90005e1e:	4629      	mov	r1, r5
90005e20:	4630      	mov	r0, r6
90005e22:	f000 f8a3 	bl	90005f6c <ft5336_g_mode>
  if(ret != FT5336_OK)
90005e26:	3800      	subs	r0, #0
    pObj->IsInitialized = 1;
90005e28:	f04f 0301 	mov.w	r3, #1
  if(ret != FT5336_OK)
90005e2c:	bf18      	it	ne
90005e2e:	2001      	movne	r0, #1
    pObj->IsInitialized = 1;
90005e30:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
  if(ret != FT5336_OK)
90005e34:	4240      	negs	r0, r0
}
90005e36:	bd70      	pop	{r4, r5, r6, pc}
90005e38:	2000      	movs	r0, #0
90005e3a:	bd70      	pop	{r4, r5, r6, pc}

90005e3c <FT5336_ClearIT>:
int32_t FT5336_ClearIT(FT5336_Object_t *pObj)
90005e3c:	2000      	movs	r0, #0
90005e3e:	4770      	bx	lr

90005e40 <FT5336_RegisterBusIO>:
  if (pObj == NULL)
90005e40:	b1c0      	cbz	r0, 90005e74 <FT5336_RegisterBusIO+0x34>
    pObj->IO.Address   = pIO->Address;
90005e42:	890a      	ldrh	r2, [r1, #8]
{
90005e44:	b430      	push	{r4, r5}
    pObj->IO.DeInit    = pIO->DeInit;
90005e46:	e9d1 3400 	ldrd	r3, r4, [r1]
    pObj->IO.Address   = pIO->Address;
90005e4a:	8102      	strh	r2, [r0, #8]
    pObj->IO.DeInit    = pIO->DeInit;
90005e4c:	e9c0 3400 	strd	r3, r4, [r0]
    pObj->IO.WriteReg  = pIO->WriteReg;
90005e50:	694a      	ldr	r2, [r1, #20]
90005e52:	e9d1 5403 	ldrd	r5, r4, [r1, #12]
    pObj->Ctx.ReadReg  = ReadRegWrap;
90005e56:	4909      	ldr	r1, [pc, #36]	@ (90005e7c <FT5336_RegisterBusIO+0x3c>)
    pObj->IO.WriteReg  = pIO->WriteReg;
90005e58:	60c5      	str	r5, [r0, #12]
90005e5a:	e9c0 4204 	strd	r4, r2, [r0, #16]
    pObj->Ctx.WriteReg = WriteRegWrap;
90005e5e:	4a08      	ldr	r2, [pc, #32]	@ (90005e80 <FT5336_RegisterBusIO+0x40>)
    pObj->Ctx.handle   = pObj;
90005e60:	e9c0 1007 	strd	r1, r0, [r0, #28]
    pObj->Ctx.WriteReg = WriteRegWrap;
90005e64:	6182      	str	r2, [r0, #24]
    if(pObj->IO.Init != NULL)
90005e66:	b10b      	cbz	r3, 90005e6c <FT5336_RegisterBusIO+0x2c>
}
90005e68:	bc30      	pop	{r4, r5}
      ret = pObj->IO.Init();
90005e6a:	4718      	bx	r3
}
90005e6c:	f04f 30ff 	mov.w	r0, #4294967295
90005e70:	bc30      	pop	{r4, r5}
90005e72:	4770      	bx	lr
90005e74:	f04f 30ff 	mov.w	r0, #4294967295
90005e78:	4770      	bx	lr
90005e7a:	bf00      	nop
90005e7c:	90005bbd 	.word	0x90005bbd
90005e80:	90005bcd 	.word	0x90005bcd

90005e84 <ft5336_read_reg>:
  * @param  pdata pointer to data to be read
  * @param  length Length of data to read   
  * @retval Component status
  */
int32_t ft5336_read_reg(ft5336_ctx_t *ctx, uint8_t reg, uint8_t* pdata, uint16_t length)
{
90005e84:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90005e86:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90005e8a:	46a4      	mov	ip, r4
}
90005e8c:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90005e90:	4760      	bx	ip
90005e92:	bf00      	nop

90005e94 <ft5336_gest_id>:
  * @param  ctx Component context 
  * @param  value pointer to the value of FT5336_GEST_ID_REG register
  * @retval Component status
  */
int32_t  ft5336_gest_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90005e94:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90005e96:	2301      	movs	r3, #1
{
90005e98:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90005e9a:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
90005e9e:	4619      	mov	r1, r3
90005ea0:	46a4      	mov	ip, r4
  return ft5336_read_reg(ctx, FT5336_GEST_ID_REG, (uint8_t *)value, 1);
}
90005ea2:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90005ea6:	4760      	bx	ip

90005ea8 <ft5336_td_status>:
  * @param  ctx Component context 
  * @param  value pointer to the value of Touch Data Status register
  * @retval Component status
  */
int32_t  ft5336_td_status(ft5336_ctx_t *ctx, uint8_t *value)
{
90005ea8:	b538      	push	{r3, r4, r5, lr}
90005eaa:	460c      	mov	r4, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90005eac:	2301      	movs	r3, #1
90005eae:	2102      	movs	r1, #2
90005eb0:	4622      	mov	r2, r4
90005eb2:	e9d0 5001 	ldrd	r5, r0, [r0, #4]
90005eb6:	47a8      	blx	r5
  int32_t ret;
  
  ret = ft5336_read_reg(ctx, FT5336_TD_STAT_REG, (uint8_t *)value, 1);
  
  if(ret == 0)
90005eb8:	b918      	cbnz	r0, 90005ec2 <ft5336_td_status+0x1a>
  {
    *value &= FT5336_TD_STATUS_BIT_MASK; 
90005eba:	7823      	ldrb	r3, [r4, #0]
90005ebc:	f003 030f 	and.w	r3, r3, #15
90005ec0:	7023      	strb	r3, [r4, #0]
    *value = *value >> FT5336_TD_STATUS_BIT_POSITION; 
  }
  
  return ret;
}
90005ec2:	bd38      	pop	{r3, r4, r5, pc}

90005ec4 <ft5336_radian_value>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_RADIAN_VALUE_REG register
  * @retval Component status
  */
int32_t  ft5336_radian_value(ft5336_ctx_t *ctx, uint8_t value)
{
90005ec4:	b510      	push	{r4, lr}
90005ec6:	460c      	mov	r4, r1
90005ec8:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005eca:	2301      	movs	r3, #1
90005ecc:	2191      	movs	r1, #145	@ 0x91
{
90005ece:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005ed2:	f10d 0207 	add.w	r2, sp, #7
90005ed6:	6804      	ldr	r4, [r0, #0]
90005ed8:	6880      	ldr	r0, [r0, #8]
90005eda:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_RADIAN_VALUE_REG, &value, 1);
}
90005edc:	b002      	add	sp, #8
90005ede:	bd10      	pop	{r4, pc}

90005ee0 <ft5336_offset_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90005ee0:	b510      	push	{r4, lr}
90005ee2:	460c      	mov	r4, r1
90005ee4:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005ee6:	2301      	movs	r3, #1
90005ee8:	2192      	movs	r1, #146	@ 0x92
{
90005eea:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005eee:	f10d 0207 	add.w	r2, sp, #7
90005ef2:	6804      	ldr	r4, [r0, #0]
90005ef4:	6880      	ldr	r0, [r0, #8]
90005ef6:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_LR_REG, &value, 1);
}
90005ef8:	b002      	add	sp, #8
90005efa:	bd10      	pop	{r4, pc}

90005efc <ft5336_offset_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_OFFSET_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_offset_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90005efc:	b510      	push	{r4, lr}
90005efe:	460c      	mov	r4, r1
90005f00:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005f02:	2301      	movs	r3, #1
90005f04:	2193      	movs	r1, #147	@ 0x93
{
90005f06:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005f0a:	f10d 0207 	add.w	r2, sp, #7
90005f0e:	6804      	ldr	r4, [r0, #0]
90005f10:	6880      	ldr	r0, [r0, #8]
90005f12:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_OFFSET_UD_REG, &value, 1);
}
90005f14:	b002      	add	sp, #8
90005f16:	bd10      	pop	{r4, pc}

90005f18 <ft5336_disatnce_left_right>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_LR_REG register
  * @retval Component status
  */
int32_t  ft5336_disatnce_left_right(ft5336_ctx_t *ctx, uint8_t value)
{
90005f18:	b510      	push	{r4, lr}
90005f1a:	460c      	mov	r4, r1
90005f1c:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005f1e:	2301      	movs	r3, #1
90005f20:	2194      	movs	r1, #148	@ 0x94
{
90005f22:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005f26:	f10d 0207 	add.w	r2, sp, #7
90005f2a:	6804      	ldr	r4, [r0, #0]
90005f2c:	6880      	ldr	r0, [r0, #8]
90005f2e:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_LR_REG, &value, 1);
}
90005f30:	b002      	add	sp, #8
90005f32:	bd10      	pop	{r4, pc}

90005f34 <ft5336_distance_up_down>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_UD_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_up_down(ft5336_ctx_t *ctx, uint8_t value)
{
90005f34:	b510      	push	{r4, lr}
90005f36:	460c      	mov	r4, r1
90005f38:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005f3a:	2301      	movs	r3, #1
90005f3c:	2195      	movs	r1, #149	@ 0x95
{
90005f3e:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005f42:	f10d 0207 	add.w	r2, sp, #7
90005f46:	6804      	ldr	r4, [r0, #0]
90005f48:	6880      	ldr	r0, [r0, #8]
90005f4a:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_UD_REG, &value, 1);
}
90005f4c:	b002      	add	sp, #8
90005f4e:	bd10      	pop	{r4, pc}

90005f50 <ft5336_distance_zoom>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_DISTANCE_ZOOM_REG register
  * @retval Component status
  */
int32_t  ft5336_distance_zoom(ft5336_ctx_t *ctx, uint8_t value)
{
90005f50:	b510      	push	{r4, lr}
90005f52:	460c      	mov	r4, r1
90005f54:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005f56:	2301      	movs	r3, #1
90005f58:	2196      	movs	r1, #150	@ 0x96
{
90005f5a:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005f5e:	f10d 0207 	add.w	r2, sp, #7
90005f62:	6804      	ldr	r4, [r0, #0]
90005f64:	6880      	ldr	r0, [r0, #8]
90005f66:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_DISTANCE_ZOOM_REG, &value, 1);
}
90005f68:	b002      	add	sp, #8
90005f6a:	bd10      	pop	{r4, pc}

90005f6c <ft5336_g_mode>:
  * @param  ctx Component context 
  * @param  value Value to write to FT5336_GMODE_REG register
  * @retval Component status
  */
int32_t  ft5336_g_mode(ft5336_ctx_t *ctx, uint8_t value)
{
90005f6c:	b510      	push	{r4, lr}
90005f6e:	460c      	mov	r4, r1
90005f70:	b082      	sub	sp, #8
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005f72:	2301      	movs	r3, #1
90005f74:	21a4      	movs	r1, #164	@ 0xa4
{
90005f76:	f88d 4007 	strb.w	r4, [sp, #7]
  return ctx->WriteReg(ctx->handle, reg, pdata, length);
90005f7a:	f10d 0207 	add.w	r2, sp, #7
90005f7e:	6804      	ldr	r4, [r0, #0]
90005f80:	6880      	ldr	r0, [r0, #8]
90005f82:	47a0      	blx	r4
  return ft5336_write_reg(ctx, FT5336_GMODE_REG, &value, 1);
}
90005f84:	b002      	add	sp, #8
90005f86:	bd10      	pop	{r4, pc}

90005f88 <ft5336_chip_id>:
  * @param  ctx Component context 
  * @param  value Pointer to FT5336_CHIP_ID_REG register value
  * @retval Component status
  */
int32_t  ft5336_chip_id(ft5336_ctx_t *ctx, uint8_t *value)
{
90005f88:	b410      	push	{r4}
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90005f8a:	e9d0 4001 	ldrd	r4, r0, [r0, #4]
{
90005f8e:	460a      	mov	r2, r1
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90005f90:	2301      	movs	r3, #1
90005f92:	46a4      	mov	ip, r4
90005f94:	21a8      	movs	r1, #168	@ 0xa8
    *value &= FT5336_CHIP_ID_BIT_MASK; 
    *value = *value >> FT5336_CHIP_ID_BIT_POSITION; 
  }
  
  return ret;
}
90005f96:	f85d 4b04 	ldr.w	r4, [sp], #4
  return ctx->ReadReg(ctx->handle, reg, pdata, length);
90005f9a:	4760      	bx	ip

90005f9c <MT48LC4M32B2_Init>:
  * @param  Ctx : Component object pointer
  * @param  pRegMode : Pointer to Register Mode stucture
  * @retval error status
  */
int32_t MT48LC4M32B2_Init(SDRAM_HandleTypeDef *Ctx, MT48LC4M32B2_Context_t *pRegMode) 
{
90005f9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90005f9e:	460d      	mov	r5, r1
  * @param  Interface : Could be FMC_SDRAM_CMD_TARGET_BANK1 or FMC_SDRAM_CMD_TARGET_BANK2
  * @retval error status
  */
int32_t MT48LC4M32B2_ClockEnable(SDRAM_HandleTypeDef *Ctx, uint32_t Interface) 
{
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90005fa0:	4c2a      	ldr	r4, [pc, #168]	@ (9000604c <MT48LC4M32B2_Init+0xb0>)
90005fa2:	2301      	movs	r3, #1
  Command.CommandTarget          = Interface;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;
90005fa4:	2100      	movs	r1, #0
  if(MT48LC4M32B2_ClockEnable(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90005fa6:	682a      	ldr	r2, [r5, #0]
{
90005fa8:	4607      	mov	r7, r0
  Command.ModeRegisterDefinition = 0;
90005faa:	60e1      	str	r1, [r4, #12]

  /* Send the command */
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005fac:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 1;
90005fae:	60a3      	str	r3, [r4, #8]
  Command.CommandMode            = MT48LC4M32B2_CLK_ENABLE_CMD;
90005fb0:	e9c4 3200 	strd	r3, r2, [r4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005fb4:	f64f 72ff 	movw	r2, #65535	@ 0xffff
90005fb8:	f006 fa46 	bl	9000c448 <HAL_SDRAM_SendCommand>
90005fbc:	2800      	cmp	r0, #0
90005fbe:	d142      	bne.n	90006046 <MT48LC4M32B2_Init+0xaa>
  * @retval MT48LC4M32B2_OK
  */
static int32_t MT48LC4M32B2_Delay(uint32_t Delay)
{  
  uint32_t tickstart;
  tickstart = HAL_GetTick();
90005fc0:	f000 ff52 	bl	90006e68 <HAL_GetTick>
90005fc4:	4606      	mov	r6, r0
  while((HAL_GetTick() - tickstart) < Delay)
90005fc6:	f000 ff4f 	bl	90006e68 <HAL_GetTick>
90005fca:	4286      	cmp	r6, r0
90005fcc:	d0fb      	beq.n	90005fc6 <MT48LC4M32B2_Init+0x2a>
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90005fce:	2302      	movs	r3, #2
    if(MT48LC4M32B2_Precharge(Ctx, pRegMode->TargetBank) == MT48LC4M32B2_OK)
90005fd0:	682a      	ldr	r2, [r5, #0]
  Command.AutoRefreshNumber      = 1;
90005fd2:	2601      	movs	r6, #1
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005fd4:	491d      	ldr	r1, [pc, #116]	@ (9000604c <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = MT48LC4M32B2_PALL_CMD;
90005fd6:	6023      	str	r3, [r4, #0]
  Command.ModeRegisterDefinition = 0;
90005fd8:	2300      	movs	r3, #0
  Command.CommandTarget          = Interface;
90005fda:	6062      	str	r2, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005fdc:	4638      	mov	r0, r7
90005fde:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 1;
90005fe2:	60a6      	str	r6, [r4, #8]
  Command.ModeRegisterDefinition = 0;
90005fe4:	60e3      	str	r3, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005fe6:	f006 fa2f 	bl	9000c448 <HAL_SDRAM_SendCommand>
90005fea:	bb60      	cbnz	r0, 90006046 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005fec:	4917      	ldr	r1, [pc, #92]	@ (9000604c <MT48LC4M32B2_Init+0xb0>)
  Command.CommandMode            = RefreshMode;
90005fee:	e9d5 3200 	ldrd	r3, r2, [r5]
  Command.ModeRegisterDefinition = 0;
90005ff2:	60e0      	str	r0, [r4, #12]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005ff4:	4638      	mov	r0, r7
  Command.CommandMode            = RefreshMode;
90005ff6:	e9c4 2300 	strd	r2, r3, [r4]
  Command.AutoRefreshNumber      = 8;
90005ffa:	2308      	movs	r3, #8
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90005ffc:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.AutoRefreshNumber      = 8;
90006000:	60a3      	str	r3, [r4, #8]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006002:	f006 fa21 	bl	9000c448 <HAL_SDRAM_SendCommand>
90006006:	b9f0      	cbnz	r0, 90006046 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006008:	4910      	ldr	r1, [pc, #64]	@ (9000604c <MT48LC4M32B2_Init+0xb0>)
9000600a:	4638      	mov	r0, r7
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
9000600c:	e9d5 3203 	ldrd	r3, r2, [r5, #12]
90006010:	4313      	orrs	r3, r2
                     pRegMode->BurstType     |\
90006012:	696a      	ldr	r2, [r5, #20]
90006014:	4313      	orrs	r3, r2
                     pRegMode->CASLatency    |\
90006016:	69aa      	ldr	r2, [r5, #24]
90006018:	4313      	orrs	r3, r2
  tmpmrd = (uint32_t)pRegMode->BurstLength   |\
9000601a:	69ea      	ldr	r2, [r5, #28]
9000601c:	4313      	orrs	r3, r2
  Command.CommandTarget          = pRegMode->TargetBank;
9000601e:	682a      	ldr	r2, [r5, #0]
  Command.ModeRegisterDefinition = tmpmrd;
90006020:	60e3      	str	r3, [r4, #12]
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
90006022:	2304      	movs	r3, #4
  Command.CommandTarget          = pRegMode->TargetBank;
90006024:	e9c4 2601 	strd	r2, r6, [r4, #4]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
90006028:	f64f 72ff 	movw	r2, #65535	@ 0xffff
  Command.CommandMode            = MT48LC4M32B2_LOAD_MODE_CMD;
9000602c:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_SendCommand(Ctx, &Command, MT48LC4M32B2_TIMEOUT) != HAL_OK)
9000602e:	f006 fa0b 	bl	9000c448 <HAL_SDRAM_SendCommand>
90006032:	b940      	cbnz	r0, 90006046 <MT48LC4M32B2_Init+0xaa>
  if(HAL_SDRAM_ProgramRefreshRate(Ctx, RefreshCount) != HAL_OK)
90006034:	68a9      	ldr	r1, [r5, #8]
90006036:	4638      	mov	r0, r7
90006038:	f006 fa26 	bl	9000c488 <HAL_SDRAM_ProgramRefreshRate>
9000603c:	3800      	subs	r0, #0
9000603e:	bf18      	it	ne
90006040:	2001      	movne	r0, #1
90006042:	4240      	negs	r0, r0
}
90006044:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  int32_t ret = MT48LC4M32B2_ERROR;
90006046:	f04f 30ff 	mov.w	r0, #4294967295
}
9000604a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000604c:	24007980 	.word	0x24007980

90006050 <BSP_I2C4_DeInit>:
  */
int32_t BSP_I2C4_DeInit(void)
{
  int32_t ret  = BSP_ERROR_NONE;

  I2c4InitCounter--;
90006050:	4a10      	ldr	r2, [pc, #64]	@ (90006094 <BSP_I2C4_DeInit+0x44>)
{
90006052:	b508      	push	{r3, lr}
  I2c4InitCounter--;
90006054:	6813      	ldr	r3, [r2, #0]
90006056:	3b01      	subs	r3, #1
90006058:	6013      	str	r3, [r2, #0]

  if (I2c4InitCounter == 0U)
9000605a:	b10b      	cbz	r3, 90006060 <BSP_I2C4_DeInit+0x10>
  int32_t ret  = BSP_ERROR_NONE;
9000605c:	2000      	movs	r0, #0
      ret = BSP_ERROR_BUS_FAILURE;
    }
  }

  return ret;
}
9000605e:	bd08      	pop	{r3, pc}
  /* Prevent unused argument(s) compilation warning */
  UNUSED(phi2c);

  /* Configure I2C Tx, Rx as alternate function */
  gpio_init_structure.Pin = BUS_I2C4_SCL_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SCL_GPIO_PORT, gpio_init_structure.Pin );
90006060:	f44f 5180 	mov.w	r1, #4096	@ 0x1000
90006064:	480c      	ldr	r0, [pc, #48]	@ (90006098 <BSP_I2C4_DeInit+0x48>)
90006066:	f001 fb83 	bl	90007770 <HAL_GPIO_DeInit>
  gpio_init_structure.Pin = BUS_I2C4_SDA_PIN;
  HAL_GPIO_DeInit(BUS_I2C4_SDA_GPIO_PORT, gpio_init_structure.Pin);
9000606a:	480b      	ldr	r0, [pc, #44]	@ (90006098 <BSP_I2C4_DeInit+0x48>)
9000606c:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
90006070:	f001 fb7e 	bl	90007770 <HAL_GPIO_DeInit>

  /* Disable I2C clock */
  BUS_I2C4_CLK_DISABLE();
90006074:	4a09      	ldr	r2, [pc, #36]	@ (9000609c <BSP_I2C4_DeInit+0x4c>)
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90006076:	480a      	ldr	r0, [pc, #40]	@ (900060a0 <BSP_I2C4_DeInit+0x50>)
  BUS_I2C4_CLK_DISABLE();
90006078:	f8d2 30f4 	ldr.w	r3, [r2, #244]	@ 0xf4
9000607c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
90006080:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
    if (HAL_I2C_DeInit(&hbus_i2c4) != HAL_OK)
90006084:	f001 ffee 	bl	90008064 <HAL_I2C_DeInit>
90006088:	2800      	cmp	r0, #0
9000608a:	d0e7      	beq.n	9000605c <BSP_I2C4_DeInit+0xc>
      ret = BSP_ERROR_BUS_FAILURE;
9000608c:	f06f 0007 	mvn.w	r0, #7
}
90006090:	bd08      	pop	{r3, pc}
90006092:	bf00      	nop
90006094:	240083e8 	.word	0x240083e8
90006098:	58020c00 	.word	0x58020c00
9000609c:	58024400 	.word	0x58024400
900060a0:	24007990 	.word	0x24007990

900060a4 <MX_I2C4_Init>:
  hI2c->Init.OwnAddress1      = 0;
900060a4:	2300      	movs	r3, #0
  hI2c->Init.AddressingMode   = I2C_ADDRESSINGMODE_7BIT;
900060a6:	2201      	movs	r2, #1
{
900060a8:	b510      	push	{r4, lr}
  hI2c->Init.OwnAddress1      = 0;
900060aa:	e9c0 1301 	strd	r1, r3, [r0, #4]
  hI2c->Init.DualAddressMode  = I2C_DUALADDRESS_DISABLE;
900060ae:	e9c0 2303 	strd	r2, r3, [r0, #12]
  hI2c->Init.OwnAddress2Masks = I2C_OA2_NOMASK;
900060b2:	e9c0 3305 	strd	r3, r3, [r0, #20]
  hI2c->Init.NoStretchMode    = I2C_NOSTRETCH_DISABLE;
900060b6:	e9c0 3307 	strd	r3, r3, [r0, #28]
{
900060ba:	4604      	mov	r4, r0
  if (HAL_I2C_Init(hI2c) != HAL_OK)
900060bc:	f001 ff76 	bl	90007fac <HAL_I2C_Init>
900060c0:	b108      	cbz	r0, 900060c6 <MX_I2C4_Init+0x22>
    status = HAL_ERROR;
900060c2:	2001      	movs	r0, #1
}
900060c4:	bd10      	pop	{r4, pc}
    if (HAL_I2CEx_ConfigAnalogFilter(hI2c, analog_filter) != HAL_OK)
900060c6:	4601      	mov	r1, r0
900060c8:	4620      	mov	r0, r4
900060ca:	f002 f9e9 	bl	900084a0 <HAL_I2CEx_ConfigAnalogFilter>
900060ce:	2800      	cmp	r0, #0
900060d0:	d1f7      	bne.n	900060c2 <MX_I2C4_Init+0x1e>
      if (HAL_I2CEx_ConfigDigitalFilter(hI2c, I2C_DIGITAL_FILTER_COEF) != HAL_OK)
900060d2:	4601      	mov	r1, r0
900060d4:	4620      	mov	r0, r4
900060d6:	f002 fa0d 	bl	900084f4 <HAL_I2CEx_ConfigDigitalFilter>
900060da:	3800      	subs	r0, #0
900060dc:	bf18      	it	ne
900060de:	2001      	movne	r0, #1
}
900060e0:	bd10      	pop	{r4, pc}
900060e2:	bf00      	nop

900060e4 <BSP_I2C4_Init>:
  if (I2c4InitCounter == 0U)
900060e4:	4b9b      	ldr	r3, [pc, #620]	@ (90006354 <BSP_I2C4_Init+0x270>)
  hbus_i2c4.Instance = BUS_I2C4;
900060e6:	489c      	ldr	r0, [pc, #624]	@ (90006358 <BSP_I2C4_Init+0x274>)
900060e8:	4a9c      	ldr	r2, [pc, #624]	@ (9000635c <BSP_I2C4_Init+0x278>)
{
900060ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  if (I2c4InitCounter == 0U)
900060ee:	681c      	ldr	r4, [r3, #0]
{
900060f0:	b09f      	sub	sp, #124	@ 0x7c
  hbus_i2c4.Instance = BUS_I2C4;
900060f2:	6002      	str	r2, [r0, #0]
  if (I2c4InitCounter == 0U)
900060f4:	b11c      	cbz	r4, 900060fe <BSP_I2C4_Init+0x1a>
  int32_t ret = BSP_ERROR_NONE;
900060f6:	2000      	movs	r0, #0
}
900060f8:	b01f      	add	sp, #124	@ 0x7c
900060fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    I2c4InitCounter++;
900060fe:	2201      	movs	r2, #1
90006100:	601a      	str	r2, [r3, #0]
    if (HAL_I2C_GetState(&hbus_i2c4) == HAL_I2C_STATE_RESET)
90006102:	f002 f9c7 	bl	90008494 <HAL_I2C_GetState>
90006106:	2800      	cmp	r0, #0
90006108:	d1f5      	bne.n	900060f6 <BSP_I2C4_Init+0x12>
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
9000610a:	4d95      	ldr	r5, [pc, #596]	@ (90006360 <BSP_I2C4_Init+0x27c>)
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
9000610c:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
90006110:	2112      	movs	r1, #18
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90006112:	2604      	movs	r6, #4
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006114:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006118:	f04f 0800 	mov.w	r8, #0
9000611c:	f04f 0902 	mov.w	r9, #2
  BUS_I2C4_SCL_GPIO_CLK_ENABLE();
90006120:	f043 0308 	orr.w	r3, r3, #8
90006124:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90006128:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
9000612c:	f003 0308 	and.w	r3, r3, #8
90006130:	9315      	str	r3, [sp, #84]	@ 0x54
90006132:	9b15      	ldr	r3, [sp, #84]	@ 0x54
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006134:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
90006138:	f043 0308 	orr.w	r3, r3, #8
9000613c:	f8c5 30e0 	str.w	r3, [r5, #224]	@ 0xe0
90006140:	f8d5 30e0 	ldr.w	r3, [r5, #224]	@ 0xe0
  gpio_init_structure.Alternate = BUS_I2C4_SCL_AF;
90006144:	961c      	str	r6, [sp, #112]	@ 0x70
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006146:	f003 0308 	and.w	r3, r3, #8
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
9000614a:	e9cd 0118 	strd	r0, r1, [sp, #96]	@ 0x60
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
9000614e:	9316      	str	r3, [sp, #88]	@ 0x58
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
90006150:	a918      	add	r1, sp, #96	@ 0x60
90006152:	4884      	ldr	r0, [pc, #528]	@ (90006364 <BSP_I2C4_Init+0x280>)
  BUS_I2C4_SDA_GPIO_CLK_ENABLE();
90006154:	9b16      	ldr	r3, [sp, #88]	@ 0x58
  gpio_init_structure.Pin       = BUS_I2C4_SCL_PIN;
90006156:	e9cd 891a 	strd	r8, r9, [sp, #104]	@ 0x68
  HAL_GPIO_Init(BUS_I2C4_SCL_GPIO_PORT, &gpio_init_structure);
9000615a:	f001 f903 	bl	90007364 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
9000615e:	2312      	movs	r3, #18
90006160:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90006164:	a918      	add	r1, sp, #96	@ 0x60
90006166:	487f      	ldr	r0, [pc, #508]	@ (90006364 <BSP_I2C4_Init+0x280>)
  gpio_init_structure.Alternate = BUS_I2C4_SDA_AF;
90006168:	961c      	str	r6, [sp, #112]	@ 0x70
  gpio_init_structure.Pin       = BUS_I2C4_SDA_PIN;
9000616a:	e9cd 2318 	strd	r2, r3, [sp, #96]	@ 0x60
9000616e:	e9cd 891a 	strd	r8, r9, [sp, #104]	@ 0x68
  HAL_GPIO_Init(BUS_I2C4_SDA_GPIO_PORT, &gpio_init_structure);
90006172:	f001 f8f7 	bl	90007364 <HAL_GPIO_Init>
  BUS_I2C4_CLK_ENABLE();
90006176:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
9000617a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000617e:	f8c5 30f4 	str.w	r3, [r5, #244]	@ 0xf4
90006182:	f8d5 30f4 	ldr.w	r3, [r5, #244]	@ 0xf4
90006186:	f003 0380 	and.w	r3, r3, #128	@ 0x80
9000618a:	9317      	str	r3, [sp, #92]	@ 0x5c
9000618c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
  BUS_I2C4_FORCE_RESET();
9000618e:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
90006192:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
90006196:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
  BUS_I2C4_RELEASE_RESET();
9000619a:	f8d5 309c 	ldr.w	r3, [r5, #156]	@ 0x9c
9000619e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
900061a2:	f8c5 309c 	str.w	r3, [r5, #156]	@ 0x9c
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
900061a6:	f004 ff39 	bl	9000b01c <HAL_RCC_GetPCLK2Freq>
  if((clock_src_freq != 0U) && (i2c_freq != 0U))
900061aa:	2800      	cmp	r0, #0
900061ac:	f000 8196 	beq.w	900064dc <BSP_I2C4_Init+0x3f8>
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900061b0:	4b6d      	ldr	r3, [pc, #436]	@ (90006368 <BSP_I2C4_Init+0x284>)
  if (tsdadel_max <= 0)
900061b2:	4627      	mov	r7, r4
  uint32_t prev_presc = I2C_PRESC_MAX;
900061b4:	f04f 0a10 	mov.w	sl, #16
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900061b8:	4e6c      	ldr	r6, [pc, #432]	@ (9000636c <BSP_I2C4_Init+0x288>)
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900061ba:	eb03 0350 	add.w	r3, r3, r0, lsr #1
900061be:	9402      	str	r4, [sp, #8]
900061c0:	fbb3 f0f0 	udiv	r0, r3, r0
    (int32_t)tafdel_max - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 4) * (int32_t)ti2cclk);
900061c4:	0083      	lsls	r3, r0, #2
  if (tsdadel_max <= 0)
900061c6:	4684      	mov	ip, r0
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
900061c8:	eb00 0240 	add.w	r2, r0, r0, lsl #1
  ti2cclk   = (SEC2NSEC + (clock_src_freq / 2U))/ clock_src_freq;
900061cc:	9001      	str	r0, [sp, #4]
  tsdadel_max = (int32_t)I2C_Charac[I2C_speed].vddat_max - (int32_t)I2C_Charac[I2C_speed].trise -
900061ce:	f5c3 7ec3 	rsb	lr, r3, #390	@ 0x186
900061d2:	4b67      	ldr	r3, [pc, #412]	@ (90006370 <BSP_I2C4_Init+0x28c>)
  tsdadel_min = (int32_t)I2C_Charac[I2C_speed].tfall + (int32_t)I2C_Charac[I2C_speed].hddat_min -
900061d4:	f1c2 0832 	rsb	r8, r2, #50	@ 0x32
    (int32_t)tafdel_min - (int32_t)(((int32_t)I2C_Charac[I2C_speed].dnf + 3) * (int32_t)ti2cclk);
900061d8:	0041      	lsls	r1, r0, #1
900061da:	681d      	ldr	r5, [r3, #0]
  if (tsdadel_max <= 0)
900061dc:	ea2e 7eee 	bic.w	lr, lr, lr, asr #31
  if (tsdadel_min <= 0)
900061e0:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
900061e4:	4623      	mov	r3, r4
  if (tsdadel_max <= 0)
900061e6:	46a9      	mov	r9, r5
900061e8:	9513      	str	r5, [sp, #76]	@ 0x4c
900061ea:	9103      	str	r1, [sp, #12]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900061ec:	ebbe 0f4c 	cmp.w	lr, ip, lsl #1
900061f0:	eb0c 024c 	add.w	r2, ip, ip, lsl #1
900061f4:	bf2c      	ite	cs
900061f6:	2001      	movcs	r0, #1
900061f8:	2000      	movcc	r0, #0
900061fa:	ebb8 0f4c 	cmp.w	r8, ip, lsl #1
900061fe:	f000 0001 	and.w	r0, r0, #1
90006202:	eb0c 018c 	add.w	r1, ip, ip, lsl #2
90006206:	bf88      	it	hi
90006208:	2000      	movhi	r0, #0
9000620a:	4590      	cmp	r8, r2
9000620c:	ebcc 0bcc 	rsb	fp, ip, ip, lsl #3
90006210:	9004      	str	r0, [sp, #16]
90006212:	bf8c      	ite	hi
90006214:	2000      	movhi	r0, #0
90006216:	2001      	movls	r0, #1
90006218:	4596      	cmp	lr, r2
9000621a:	eb0c 0482 	add.w	r4, ip, r2, lsl #2
9000621e:	bf38      	it	cc
90006220:	2000      	movcc	r0, #0
90006222:	ebb8 0f8c 	cmp.w	r8, ip, lsl #2
90006226:	9411      	str	r4, [sp, #68]	@ 0x44
90006228:	465c      	mov	r4, fp
9000622a:	9006      	str	r0, [sp, #24]
9000622c:	eb0c 0041 	add.w	r0, ip, r1, lsl #1
90006230:	9007      	str	r0, [sp, #28]
90006232:	bf94      	ite	ls
90006234:	2001      	movls	r0, #1
90006236:	2000      	movhi	r0, #0
90006238:	ebbe 0f8c 	cmp.w	lr, ip, lsl #2
9000623c:	f000 0501 	and.w	r5, r0, #1
90006240:	bf38      	it	cc
90006242:	2500      	movcc	r5, #0
90006244:	4588      	cmp	r8, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90006246:	f04f 0000 	mov.w	r0, #0
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
9000624a:	9508      	str	r5, [sp, #32]
9000624c:	bf8c      	ite	hi
9000624e:	2500      	movhi	r5, #0
90006250:	2501      	movls	r5, #1
90006252:	458e      	cmp	lr, r1
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90006254:	9005      	str	r0, [sp, #20]
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
90006256:	bf38      	it	cc
90006258:	2500      	movcc	r5, #0
9000625a:	ebb8 0f42 	cmp.w	r8, r2, lsl #1
9000625e:	bf98      	it	ls
90006260:	2001      	movls	r0, #1
90006262:	ebbe 0f42 	cmp.w	lr, r2, lsl #1
90006266:	9509      	str	r5, [sp, #36]	@ 0x24
90006268:	4665      	mov	r5, ip
9000626a:	f000 0001 	and.w	r0, r0, #1
9000626e:	bf38      	it	cc
90006270:	2000      	movcc	r0, #0
90006272:	45d8      	cmp	r8, fp
90006274:	900a      	str	r0, [sp, #40]	@ 0x28
90006276:	4658      	mov	r0, fp
90006278:	bf8c      	ite	hi
9000627a:	2000      	movhi	r0, #0
9000627c:	2001      	movls	r0, #1
9000627e:	45de      	cmp	lr, fp
90006280:	bf38      	it	cc
90006282:	2000      	movcc	r0, #0
90006284:	ebb8 0fcc 	cmp.w	r8, ip, lsl #3
90006288:	4683      	mov	fp, r0
9000628a:	bf94      	ite	ls
9000628c:	f04f 0b01 	movls.w	fp, #1
90006290:	f04f 0b00 	movhi.w	fp, #0
90006294:	ebbe 0fcc 	cmp.w	lr, ip, lsl #3
90006298:	900b      	str	r0, [sp, #44]	@ 0x2c
9000629a:	f00b 0b01 	and.w	fp, fp, #1
9000629e:	bf38      	it	cc
900062a0:	f04f 0b00 	movcc.w	fp, #0
900062a4:	4658      	mov	r0, fp
900062a6:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
900062aa:	eb0c 0bcc 	add.w	fp, ip, ip, lsl #3
900062ae:	45d8      	cmp	r8, fp
900062b0:	bf8c      	ite	hi
900062b2:	2000      	movhi	r0, #0
900062b4:	2001      	movls	r0, #1
900062b6:	45de      	cmp	lr, fp
900062b8:	bf38      	it	cc
900062ba:	2000      	movcc	r0, #0
900062bc:	ebb8 0f41 	cmp.w	r8, r1, lsl #1
900062c0:	900d      	str	r0, [sp, #52]	@ 0x34
900062c2:	bf98      	it	ls
900062c4:	f04f 0b01 	movls.w	fp, #1
900062c8:	9807      	ldr	r0, [sp, #28]
900062ca:	bf88      	it	hi
900062cc:	f04f 0b00 	movhi.w	fp, #0
900062d0:	ebbe 0f41 	cmp.w	lr, r1, lsl #1
900062d4:	f00b 0101 	and.w	r1, fp, #1
900062d8:	bf38      	it	cc
900062da:	2100      	movcc	r1, #0
900062dc:	4580      	cmp	r8, r0
900062de:	910e      	str	r1, [sp, #56]	@ 0x38
900062e0:	4601      	mov	r1, r0
900062e2:	bf8c      	ite	hi
900062e4:	2100      	movhi	r1, #0
900062e6:	2101      	movls	r1, #1
900062e8:	4586      	cmp	lr, r0
900062ea:	4620      	mov	r0, r4
900062ec:	bf38      	it	cc
900062ee:	2100      	movcc	r1, #0
900062f0:	ebb8 0f82 	cmp.w	r8, r2, lsl #2
900062f4:	910f      	str	r1, [sp, #60]	@ 0x3c
900062f6:	bf94      	ite	ls
900062f8:	2101      	movls	r1, #1
900062fa:	2100      	movhi	r1, #0
900062fc:	ebbe 0f82 	cmp.w	lr, r2, lsl #2
90006300:	f001 0101 	and.w	r1, r1, #1
90006304:	bf38      	it	cc
90006306:	2100      	movcc	r1, #0
90006308:	9110      	str	r1, [sp, #64]	@ 0x40
9000630a:	9911      	ldr	r1, [sp, #68]	@ 0x44
9000630c:	4588      	cmp	r8, r1
9000630e:	460a      	mov	r2, r1
90006310:	bf8c      	ite	hi
90006312:	2200      	movhi	r2, #0
90006314:	2201      	movls	r2, #1
90006316:	458e      	cmp	lr, r1
90006318:	bf38      	it	cc
9000631a:	2200      	movcc	r2, #0
9000631c:	ebb8 0f44 	cmp.w	r8, r4, lsl #1
90006320:	9211      	str	r2, [sp, #68]	@ 0x44
90006322:	bf94      	ite	ls
90006324:	2201      	movls	r2, #1
90006326:	2200      	movhi	r2, #0
90006328:	ebbe 0f44 	cmp.w	lr, r4, lsl #1
9000632c:	f04f 0400 	mov.w	r4, #0
90006330:	f002 0201 	and.w	r2, r2, #1
90006334:	bf38      	it	cc
90006336:	2200      	movcc	r2, #0
90006338:	9212      	str	r2, [sp, #72]	@ 0x48
9000633a:	ebcc 120c 	rsb	r2, ip, ip, lsl #4
9000633e:	4590      	cmp	r8, r2
90006340:	bf8c      	ite	hi
90006342:	2100      	movhi	r1, #0
90006344:	2101      	movls	r1, #1
90006346:	4596      	cmp	lr, r2
90006348:	bf38      	it	cc
9000634a:	2100      	movcc	r1, #0
9000634c:	460a      	mov	r2, r1
9000634e:	9107      	str	r1, [sp, #28]
90006350:	e014      	b.n	9000637c <BSP_I2C4_Init+0x298>
90006352:	bf00      	nop
90006354:	240083e8 	.word	0x240083e8
90006358:	24007990 	.word	0x24007990
9000635c:	58001c00 	.word	0x58001c00
90006360:	58024400 	.word	0x58024400
90006364:	58020c00 	.word	0x58020c00
90006368:	3b9aca00 	.word	0x3b9aca00
9000636c:	240079e8 	.word	0x240079e8
90006370:	240079e4 	.word	0x240079e4
    for (scldel = 0; scldel < I2C_SCLDEL_MAX; scldel++)
90006374:	2c10      	cmp	r4, #16
90006376:	4465      	add	r5, ip
90006378:	f000 827d 	beq.w	90006876 <BSP_I2C4_Init+0x792>
      if (tscldel >= (uint32_t)tscldel_min)
9000637c:	f5b5 7faf 	cmp.w	r5, #350	@ 0x15e
90006380:	4621      	mov	r1, r4
      uint32_t tscldel = (scldel + 1U) * (presc + 1U) * ti2cclk;
90006382:	f104 0401 	add.w	r4, r4, #1
      if (tscldel >= (uint32_t)tscldel_min)
90006386:	d3f5      	bcc.n	90006374 <BSP_I2C4_Init+0x290>
            if(presc != prev_presc)
90006388:	fab8 fb88 	clz	fp, r8
9000638c:	4557      	cmp	r7, sl
9000638e:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90006392:	bf08      	it	eq
90006394:	f04f 0b00 	moveq.w	fp, #0
90006398:	f1bb 0f00 	cmp.w	fp, #0
9000639c:	f040 8200 	bne.w	900067a0 <BSP_I2C4_Init+0x6bc>
          if ((tsdadel >= (uint32_t)tsdadel_min) && (tsdadel <= (uint32_t)tsdadel_max))
900063a0:	45f4      	cmp	ip, lr
900063a2:	bf8c      	ite	hi
900063a4:	2200      	movhi	r2, #0
900063a6:	2201      	movls	r2, #1
900063a8:	45c4      	cmp	ip, r8
900063aa:	bf38      	it	cc
900063ac:	2200      	movcc	r2, #0
            if(presc != prev_presc)
900063ae:	4557      	cmp	r7, sl
900063b0:	bf0c      	ite	eq
900063b2:	2200      	moveq	r2, #0
900063b4:	f002 0201 	andne.w	r2, r2, #1
900063b8:	2a00      	cmp	r2, #0
900063ba:	f000 8099 	beq.w	900064f0 <BSP_I2C4_Init+0x40c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900063be:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900063c2:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900063c6:	2001      	movs	r0, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900063c8:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900063cc:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900063d0:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900063d4:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900063d6:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900063d8:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900063da:	f200 80f2 	bhi.w	900065c2 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
900063de:	46ba      	mov	sl, r7
            if(presc != prev_presc)
900063e0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900063e2:	4557      	cmp	r7, sl
900063e4:	bf0c      	ite	eq
900063e6:	2300      	moveq	r3, #0
900063e8:	f003 0301 	andne.w	r3, r3, #1
900063ec:	469b      	mov	fp, r3
900063ee:	2b00      	cmp	r3, #0
900063f0:	f000 8097 	beq.w	90006522 <BSP_I2C4_Init+0x43e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900063f4:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900063f8:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900063fc:	2205      	movs	r2, #5
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900063fe:	4630      	mov	r0, r6
90006400:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006404:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006408:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000640c:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000640e:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006410:	f200 80d7 	bhi.w	900065c2 <BSP_I2C4_Init+0x4de>
90006414:	465a      	mov	r2, fp
              prev_presc = presc;
90006416:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006418:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9000641a:	4557      	cmp	r7, sl
9000641c:	bf0c      	ite	eq
9000641e:	2300      	moveq	r3, #0
90006420:	f003 0301 	andne.w	r3, r3, #1
90006424:	469b      	mov	fp, r3
90006426:	2b00      	cmp	r3, #0
90006428:	f000 8096 	beq.w	90006558 <BSP_I2C4_Init+0x474>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000642c:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006430:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006434:	2209      	movs	r2, #9
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006436:	4630      	mov	r0, r6
90006438:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000643c:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006440:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006444:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006446:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006448:	f200 80bb 	bhi.w	900065c2 <BSP_I2C4_Init+0x4de>
9000644c:	465a      	mov	r2, fp
              prev_presc = presc;
9000644e:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006450:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90006452:	4557      	cmp	r7, sl
90006454:	bf0c      	ite	eq
90006456:	2300      	moveq	r3, #0
90006458:	f003 0301 	andne.w	r3, r3, #1
9000645c:	2b00      	cmp	r3, #0
9000645e:	f000 8096 	beq.w	9000658e <BSP_I2C4_Init+0x4aa>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006462:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006466:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000646a:	4630      	mov	r0, r6
9000646c:	f846 7022 	str.w	r7, [r6, r2, lsl #2]
90006470:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006474:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006478:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000647a:	f04f 010d 	mov.w	r1, #13
9000647e:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006480:	f200 809f 	bhi.w	900065c2 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90006484:	46ba      	mov	sl, r7
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90006486:	e775      	b.n	90006374 <BSP_I2C4_Init+0x290>
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90006488:	9a06      	ldr	r2, [sp, #24]
9000648a:	4661      	mov	r1, ip
9000648c:	f109 0914 	add.w	r9, r9, #20
90006490:	3201      	adds	r2, #1
90006492:	e9dd e40a 	ldrd	lr, r4, [sp, #40]	@ 0x28
90006496:	e9dd c30c 	ldrd	ip, r3, [sp, #48]	@ 0x30
9000649a:	4572      	cmp	r2, lr
9000649c:	9206      	str	r2, [sp, #24]
9000649e:	f040 80b4 	bne.w	9000660a <BSP_I2C4_Init+0x526>
        if (idx < I2C_VALID_TIMING_NBR)
900064a2:	9b01      	ldr	r3, [sp, #4]
900064a4:	2b7f      	cmp	r3, #127	@ 0x7f
900064a6:	e9dd 4008 	ldrd	r4, r0, [sp, #32]
900064aa:	d817      	bhi.n	900064dc <BSP_I2C4_Init+0x3f8>
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900064ac:	eb03 0383 	add.w	r3, r3, r3, lsl #2
900064b0:	eb00 0283 	add.w	r2, r0, r3, lsl #2
900064b4:	f850 4023 	ldr.w	r4, [r0, r3, lsl #2]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900064b8:	6850      	ldr	r0, [r2, #4]
                ((I2c_valid_timing[idx].scll & 0xFFU) << 0);
900064ba:	7c13      	ldrb	r3, [r2, #16]
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900064bc:	0500      	lsls	r0, r0, #20
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900064be:	ea43 7304 	orr.w	r3, r3, r4, lsl #28
                ((I2c_valid_timing[idx].tscldel & 0x0FU) << 20) |\
900064c2:	f400 0070 	and.w	r0, r0, #15728640	@ 0xf00000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900064c6:	e9d2 1202 	ldrd	r1, r2, [r2, #8]
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900064ca:	4303      	orrs	r3, r0
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
900064cc:	0409      	lsls	r1, r1, #16
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900064ce:	0212      	lsls	r2, r2, #8
                ((I2c_valid_timing[idx].tsdadel & 0x0FU) << 16) |\
900064d0:	f401 2170 	and.w	r1, r1, #983040	@ 0xf0000
                ((I2c_valid_timing[idx].sclh & 0xFFU) << 8) |\
900064d4:	b292      	uxth	r2, r2
          ret = ((I2c_valid_timing[idx].presc  & 0x0FU) << 28) |\
900064d6:	430b      	orrs	r3, r1
900064d8:	ea43 0402 	orr.w	r4, r3, r2
        if (MX_I2C4_Init(&hbus_i2c4, I2C_GetTiming(HAL_RCC_GetPCLK2Freq(), BUS_I2C4_FREQUENCY)) != HAL_OK)
900064dc:	4621      	mov	r1, r4
900064de:	48ad      	ldr	r0, [pc, #692]	@ (90006794 <BSP_I2C4_Init+0x6b0>)
900064e0:	f7ff fde0 	bl	900060a4 <MX_I2C4_Init>
900064e4:	2800      	cmp	r0, #0
900064e6:	f43f ae06 	beq.w	900060f6 <BSP_I2C4_Init+0x12>
          ret = BSP_ERROR_BUS_FAILURE;
900064ea:	f06f 0007 	mvn.w	r0, #7
  return ret;
900064ee:	e603      	b.n	900060f8 <BSP_I2C4_Init+0x14>
            if(presc != prev_presc)
900064f0:	9a04      	ldr	r2, [sp, #16]
900064f2:	4557      	cmp	r7, sl
900064f4:	bf0c      	ite	eq
900064f6:	2200      	moveq	r2, #0
900064f8:	f002 0201 	andne.w	r2, r2, #1
900064fc:	2a00      	cmp	r2, #0
900064fe:	f000 81cf 	beq.w	900068a0 <BSP_I2C4_Init+0x7bc>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006502:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006506:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000650a:	2002      	movs	r0, #2
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000650c:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006510:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006514:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006518:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000651a:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000651c:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000651e:	d850      	bhi.n	900065c2 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90006520:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006522:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90006524:	4557      	cmp	r7, sl
90006526:	bf0c      	ite	eq
90006528:	2300      	moveq	r3, #0
9000652a:	f003 0301 	andne.w	r3, r3, #1
9000652e:	469b      	mov	fp, r3
90006530:	2b00      	cmp	r3, #0
90006532:	f000 80da 	beq.w	900066ea <BSP_I2C4_Init+0x606>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006536:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000653a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000653e:	2206      	movs	r2, #6
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006540:	4630      	mov	r0, r6
90006542:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006546:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000654a:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000654e:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006550:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006552:	d836      	bhi.n	900065c2 <BSP_I2C4_Init+0x4de>
90006554:	465a      	mov	r2, fp
              prev_presc = presc;
90006556:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006558:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9000655a:	4557      	cmp	r7, sl
9000655c:	bf0c      	ite	eq
9000655e:	2300      	moveq	r3, #0
90006560:	f003 0301 	andne.w	r3, r3, #1
90006564:	469b      	mov	fp, r3
90006566:	2b00      	cmp	r3, #0
90006568:	f000 80db 	beq.w	90006722 <BSP_I2C4_Init+0x63e>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000656c:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006570:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006574:	220a      	movs	r2, #10
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006576:	4630      	mov	r0, r6
90006578:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000657c:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006580:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006584:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006586:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006588:	d81b      	bhi.n	900065c2 <BSP_I2C4_Init+0x4de>
9000658a:	465a      	mov	r2, fp
              prev_presc = presc;
9000658c:	46ba      	mov	sl, r7
            if(presc != prev_presc)
9000658e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90006590:	4557      	cmp	r7, sl
90006592:	bf0c      	ite	eq
90006594:	2300      	moveq	r3, #0
90006596:	f003 0301 	andne.w	r3, r3, #1
9000659a:	2b00      	cmp	r3, #0
9000659c:	f000 80dd 	beq.w	9000675a <BSP_I2C4_Init+0x676>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900065a0:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900065a4:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900065a8:	4630      	mov	r0, r6
900065aa:	f846 7022 	str.w	r7, [r6, r2, lsl #2]
900065ae:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900065b2:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900065b6:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900065b8:	f04f 010e 	mov.w	r1, #14
900065bc:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900065be:	f67f af61 	bls.w	90006484 <BSP_I2C4_Init+0x3a0>
900065c2:	4b75      	ldr	r3, [pc, #468]	@ (90006798 <BSP_I2C4_Init+0x6b4>)
  uint32_t prev_presc = I2C_PRESC_MAX;
900065c4:	464d      	mov	r5, r9
900065c6:	e9dd 4102 	ldrd	r4, r1, [sp, #8]
900065ca:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
900065ce:	f640 0234 	movw	r2, #2100	@ 0x834
900065d2:	f101 0332 	add.w	r3, r1, #50	@ 0x32
900065d6:	f240 2657 	movw	r6, #599	@ 0x257
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900065da:	2700      	movs	r7, #0
900065dc:	1a52      	subs	r2, r2, r1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900065de:	9408      	str	r4, [sp, #32]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900065e0:	9706      	str	r7, [sp, #24]
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900065e2:	461c      	mov	r4, r3
900065e4:	eba2 0c03 	sub.w	ip, r2, r3
900065e8:	9a01      	ldr	r2, [sp, #4]
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900065ea:	f04f 37ff 	mov.w	r7, #4294967295
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900065ee:	460b      	mov	r3, r1
900065f0:	4296      	cmp	r6, r2
900065f2:	f8df 91a8 	ldr.w	r9, [pc, #424]	@ 9000679c <BSP_I2C4_Init+0x6b8>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
900065f6:	f640 1bc4 	movw	fp, #2500	@ 0x9c4
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
900065fa:	f240 4a12 	movw	sl, #1042	@ 0x412
900065fe:	bf38      	it	cc
90006600:	4616      	movcc	r6, r2
90006602:	46ae      	mov	lr, r5
90006604:	4611      	mov	r1, r2
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90006606:	9701      	str	r7, [sp, #4]
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006608:	9009      	str	r0, [sp, #36]	@ 0x24
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
9000660a:	f8d9 0000 	ldr.w	r0, [r9]
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
9000660e:	2500      	movs	r5, #0
90006610:	f8cd c030 	str.w	ip, [sp, #48]	@ 0x30
    uint32_t tpresc = (I2c_valid_timing[count].presc + 1U) * ti2cclk;
90006614:	fb00 1001 	mla	r0, r0, r1, r1
    for (scll = 0; scll < I2C_SCLL_MAX; scll++)
90006618:	930d      	str	r3, [sp, #52]	@ 0x34
9000661a:	18c2      	adds	r2, r0, r3
9000661c:	ebac 0840 	sub.w	r8, ip, r0, lsl #1
90006620:	1907      	adds	r7, r0, r4
90006622:	468c      	mov	ip, r1
90006624:	f6a2 0234 	subw	r2, r2, #2100	@ 0x834
90006628:	e9cd e40a 	strd	lr, r4, [sp, #40]	@ 0x28
9000662c:	9207      	str	r2, [sp, #28]
9000662e:	e006      	b.n	9000663e <BSP_I2C4_Init+0x55a>
90006630:	f5b5 7f80 	cmp.w	r5, #256	@ 0x100
90006634:	4407      	add	r7, r0
90006636:	eba8 0800 	sub.w	r8, r8, r0
9000663a:	f43f af25 	beq.w	90006488 <BSP_I2C4_Init+0x3a4>
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
9000663e:	f240 5314 	movw	r3, #1300	@ 0x514
90006642:	4629      	mov	r1, r5
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
90006644:	3501      	adds	r5, #1
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
90006646:	429f      	cmp	r7, r3
90006648:	d9f2      	bls.n	90006630 <BSP_I2C4_Init+0x54c>
      uint32_t tscl_l = tafdel_min + dnf_delay + (2U * ti2cclk) + ((scll + 1U) * tpresc);
9000664a:	f1a7 0332 	sub.w	r3, r7, #50	@ 0x32
      if ((tscl_l > I2C_Charac[I2C_speed].lscl_min) && (ti2cclk < ((tscl_l - tafdel_min - dnf_delay) / 4U)))
9000664e:	ebbc 0f93 	cmp.w	ip, r3, lsr #2
90006652:	d2ed      	bcs.n	90006630 <BSP_I2C4_Init+0x54c>
90006654:	f640 0e34 	movw	lr, #2100	@ 0x834
90006658:	4644      	mov	r4, r8
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
9000665a:	f8cd 8010 	str.w	r8, [sp, #16]
9000665e:	2200      	movs	r2, #0
90006660:	ebae 0e03 	sub.w	lr, lr, r3
90006664:	9b07      	ldr	r3, [sp, #28]
90006666:	9705      	str	r7, [sp, #20]
90006668:	443b      	add	r3, r7
9000666a:	f8dd 8018 	ldr.w	r8, [sp, #24]
9000666e:	460f      	mov	r7, r1
90006670:	e9cd 5c02 	strd	r5, ip, [sp, #8]
90006674:	46b4      	mov	ip, r6
90006676:	e005      	b.n	90006684 <BSP_I2C4_Init+0x5a0>
90006678:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
9000667c:	4403      	add	r3, r0
9000667e:	eba4 0400 	sub.w	r4, r4, r0
90006682:	d01a      	beq.n	900066ba <BSP_I2C4_Init+0x5d6>
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006684:	eb0e 0103 	add.w	r1, lr, r3
90006688:	4616      	mov	r6, r2
9000668a:	f203 15a1 	addw	r5, r3, #417	@ 0x1a1
          uint32_t tscl_h = tafdel_min + dnf_delay + (2U * ti2cclk) + ((sclh + 1U) * tpresc);
9000668e:	3201      	adds	r2, #1
          if ((tscl >= clk_min) && (tscl <= clk_max) && (tscl_h >= I2C_Charac[I2C_speed].hscl_min) && (ti2cclk < tscl_h))
90006690:	4561      	cmp	r1, ip
90006692:	d9f1      	bls.n	90006678 <BSP_I2C4_Init+0x594>
90006694:	4555      	cmp	r5, sl
90006696:	d8ef      	bhi.n	90006678 <BSP_I2C4_Init+0x594>
            if (error < 0)
90006698:	ea33 0123 	bics.w	r1, r3, r3, asr #32
9000669c:	bf28      	it	cs
9000669e:	4621      	movcs	r1, r4
            if ((uint32_t)error < prev_error)
900066a0:	458b      	cmp	fp, r1
900066a2:	d9e9      	bls.n	90006678 <BSP_I2C4_Init+0x594>
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
900066a4:	f5b2 7f80 	cmp.w	r2, #256	@ 0x100
              prev_error = (uint32_t)error;
900066a8:	468b      	mov	fp, r1
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
900066aa:	4403      	add	r3, r0
900066ac:	eba4 0400 	sub.w	r4, r4, r0
              ret = count;
900066b0:	f8cd 8004 	str.w	r8, [sp, #4]
              I2c_valid_timing[count].sclh = sclh;
900066b4:	e9c9 6703 	strd	r6, r7, [r9, #12]
        for (sclh = 0; sclh < I2C_SCLH_MAX; sclh++)
900066b8:	d1e4      	bne.n	90006684 <BSP_I2C4_Init+0x5a0>
900066ba:	4666      	mov	r6, ip
900066bc:	9d02      	ldr	r5, [sp, #8]
900066be:	f8dd c00c 	ldr.w	ip, [sp, #12]
900066c2:	e9dd 8704 	ldrd	r8, r7, [sp, #16]
900066c6:	e7b3      	b.n	90006630 <BSP_I2C4_Init+0x54c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900066c8:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900066cc:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900066d0:	2003      	movs	r0, #3
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900066d2:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900066d6:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900066da:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900066de:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900066e0:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900066e2:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900066e4:	f63f af6d 	bhi.w	900065c2 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
900066e8:	46ba      	mov	sl, r7
            if(presc != prev_presc)
900066ea:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900066ec:	4557      	cmp	r7, sl
900066ee:	bf0c      	ite	eq
900066f0:	2300      	moveq	r3, #0
900066f2:	f003 0301 	andne.w	r3, r3, #1
900066f6:	469b      	mov	fp, r3
900066f8:	2b00      	cmp	r3, #0
900066fa:	f000 8084 	beq.w	90006806 <BSP_I2C4_Init+0x722>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900066fe:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006702:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006706:	2207      	movs	r2, #7
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006708:	4630      	mov	r0, r6
9000670a:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000670e:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006712:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006716:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006718:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000671a:	f63f af52 	bhi.w	900065c2 <BSP_I2C4_Init+0x4de>
9000671e:	465a      	mov	r2, fp
              prev_presc = presc;
90006720:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006722:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90006724:	4557      	cmp	r7, sl
90006726:	bf0c      	ite	eq
90006728:	2300      	moveq	r3, #0
9000672a:	f003 0301 	andne.w	r3, r3, #1
9000672e:	469b      	mov	fp, r3
90006730:	2b00      	cmp	r3, #0
90006732:	f000 8084 	beq.w	9000683e <BSP_I2C4_Init+0x75a>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006736:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000673a:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
9000673e:	220b      	movs	r2, #11
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006740:	4630      	mov	r0, r6
90006742:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006746:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000674a:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
9000674e:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006750:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006752:	f63f af36 	bhi.w	900065c2 <BSP_I2C4_Init+0x4de>
90006756:	465a      	mov	r2, fp
              prev_presc = presc;
90006758:	46ba      	mov	sl, r7
            if(presc != prev_presc)
9000675a:	9b07      	ldr	r3, [sp, #28]
9000675c:	4557      	cmp	r7, sl
9000675e:	bf0c      	ite	eq
90006760:	2300      	moveq	r3, #0
90006762:	f003 0301 	andne.w	r3, r3, #1
90006766:	2b00      	cmp	r3, #0
90006768:	f000 8098 	beq.w	9000689c <BSP_I2C4_Init+0x7b8>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000676c:	eb09 0289 	add.w	r2, r9, r9, lsl #2
90006770:	480a      	ldr	r0, [pc, #40]	@ (9000679c <BSP_I2C4_Init+0x6b8>)
              I2c_valid_timing_nbr ++;
90006772:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006776:	f840 7022 	str.w	r7, [r0, r2, lsl #2]
9000677a:	eb00 0282 	add.w	r2, r0, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000677e:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006782:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006784:	f04f 010f 	mov.w	r1, #15
90006788:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000678a:	f63f af1a 	bhi.w	900065c2 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
9000678e:	46ba      	mov	sl, r7
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90006790:	e5f0      	b.n	90006374 <BSP_I2C4_Init+0x290>
90006792:	bf00      	nop
90006794:	24007990 	.word	0x24007990
90006798:	240079e4 	.word	0x240079e4
9000679c:	240079e8 	.word	0x240079e8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900067a0:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900067a4:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900067a8:	2200      	movs	r2, #0
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900067aa:	4630      	mov	r0, r6
900067ac:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900067b0:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900067b4:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900067b8:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900067ba:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900067bc:	f63f af01 	bhi.w	900065c2 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
900067c0:	46ba      	mov	sl, r7
            if(presc != prev_presc)
900067c2:	9a06      	ldr	r2, [sp, #24]
900067c4:	45ba      	cmp	sl, r7
900067c6:	bf0c      	ite	eq
900067c8:	2200      	moveq	r2, #0
900067ca:	f002 0201 	andne.w	r2, r2, #1
900067ce:	2a00      	cmp	r2, #0
900067d0:	f47f af7a 	bne.w	900066c8 <BSP_I2C4_Init+0x5e4>
900067d4:	9a08      	ldr	r2, [sp, #32]
900067d6:	45ba      	cmp	sl, r7
900067d8:	bf0c      	ite	eq
900067da:	2200      	moveq	r2, #0
900067dc:	f002 0201 	andne.w	r2, r2, #1
900067e0:	2a00      	cmp	r2, #0
900067e2:	d05f      	beq.n	900068a4 <BSP_I2C4_Init+0x7c0>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900067e4:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
900067e8:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900067ec:	2004      	movs	r0, #4
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900067ee:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
900067f2:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900067f6:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
900067fa:	6098      	str	r0, [r3, #8]
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
900067fc:	4630      	mov	r0, r6
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
900067fe:	6059      	str	r1, [r3, #4]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006800:	f63f aedf 	bhi.w	900065c2 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90006804:	46ba      	mov	sl, r7
            if(presc != prev_presc)
90006806:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90006808:	4557      	cmp	r7, sl
9000680a:	bf0c      	ite	eq
9000680c:	2300      	moveq	r3, #0
9000680e:	f003 0301 	andne.w	r3, r3, #1
90006812:	469b      	mov	fp, r3
90006814:	2b00      	cmp	r3, #0
90006816:	f43f adff 	beq.w	90006418 <BSP_I2C4_Init+0x334>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000681a:	eb09 0389 	add.w	r3, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
9000681e:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006822:	2208      	movs	r2, #8
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006824:	4630      	mov	r0, r6
90006826:	f846 7023 	str.w	r7, [r6, r3, lsl #2]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000682a:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
9000682e:	eb06 0383 	add.w	r3, r6, r3, lsl #2
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006832:	6059      	str	r1, [r3, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006834:	609a      	str	r2, [r3, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006836:	f63f aec4 	bhi.w	900065c2 <BSP_I2C4_Init+0x4de>
9000683a:	465a      	mov	r2, fp
              prev_presc = presc;
9000683c:	46ba      	mov	sl, r7
            if(presc != prev_presc)
9000683e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90006840:	4557      	cmp	r7, sl
90006842:	bf0c      	ite	eq
90006844:	2300      	moveq	r3, #0
90006846:	f003 0301 	andne.w	r3, r3, #1
9000684a:	2b00      	cmp	r3, #0
9000684c:	f43f ae00 	beq.w	90006450 <BSP_I2C4_Init+0x36c>
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006850:	eb09 0289 	add.w	r2, r9, r9, lsl #2
              I2c_valid_timing_nbr ++;
90006854:	f109 0901 	add.w	r9, r9, #1
              I2c_valid_timing[I2c_valid_timing_nbr].presc = presc;
90006858:	4630      	mov	r0, r6
9000685a:	f846 7022 	str.w	r7, [r6, r2, lsl #2]
9000685e:	eb06 0282 	add.w	r2, r6, r2, lsl #2
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
90006862:	f1b9 0f7f 	cmp.w	r9, #127	@ 0x7f
              I2c_valid_timing[I2c_valid_timing_nbr].tscldel = scldel;
90006866:	6051      	str	r1, [r2, #4]
              I2c_valid_timing[I2c_valid_timing_nbr].tsdadel = sdadel;
90006868:	f04f 010c 	mov.w	r1, #12
9000686c:	6091      	str	r1, [r2, #8]
              if(I2c_valid_timing_nbr >= I2C_VALID_TIMING_NBR)
9000686e:	f63f aea8 	bhi.w	900065c2 <BSP_I2C4_Init+0x4de>
              prev_presc = presc;
90006872:	46ba      	mov	sl, r7
        for (sdadel = 0; sdadel < I2C_SDADEL_MAX; sdadel++)
90006874:	e57e      	b.n	90006374 <BSP_I2C4_Init+0x290>
  for (presc = 0; presc < I2C_PRESC_MAX; presc++)
90006876:	3701      	adds	r7, #1
90006878:	9a01      	ldr	r2, [sp, #4]
9000687a:	2f10      	cmp	r7, #16
9000687c:	4494      	add	ip, r2
9000687e:	f47f acb5 	bne.w	900061ec <BSP_I2C4_Init+0x108>
90006882:	9c02      	ldr	r4, [sp, #8]
90006884:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90006886:	9903      	ldr	r1, [sp, #12]
90006888:	b11b      	cbz	r3, 90006892 <BSP_I2C4_Init+0x7ae>
9000688a:	4b07      	ldr	r3, [pc, #28]	@ (900068a8 <BSP_I2C4_Init+0x7c4>)
9000688c:	464d      	mov	r5, r9
9000688e:	f8c3 9000 	str.w	r9, [r3]
  for (uint32_t count = 0; count < I2c_valid_timing_nbr; count++)
90006892:	2d00      	cmp	r5, #0
90006894:	f43f ae22 	beq.w	900064dc <BSP_I2C4_Init+0x3f8>
90006898:	4804      	ldr	r0, [pc, #16]	@ (900068ac <BSP_I2C4_Init+0x7c8>)
9000689a:	e698      	b.n	900065ce <BSP_I2C4_Init+0x4ea>
9000689c:	4613      	mov	r3, r2
9000689e:	e569      	b.n	90006374 <BSP_I2C4_Init+0x290>
            if(presc != prev_presc)
900068a0:	469b      	mov	fp, r3
900068a2:	e78e      	b.n	900067c2 <BSP_I2C4_Init+0x6de>
900068a4:	465a      	mov	r2, fp
900068a6:	e59b      	b.n	900063e0 <BSP_I2C4_Init+0x2fc>
900068a8:	240079e4 	.word	0x240079e4
900068ac:	240079e8 	.word	0x240079e8

900068b0 <BSP_I2C4_WriteReg>:
{
900068b0:	b530      	push	{r4, r5, lr}
900068b2:	4614      	mov	r4, r2
900068b4:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_WriteReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if(HAL_I2C_Mem_Write(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
900068b6:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
900068ba:	460a      	mov	r2, r1
900068bc:	9301      	str	r3, [sp, #4]
900068be:	4601      	mov	r1, r0
900068c0:	2301      	movs	r3, #1
900068c2:	4809      	ldr	r0, [pc, #36]	@ (900068e8 <BSP_I2C4_WriteReg+0x38>)
900068c4:	9502      	str	r5, [sp, #8]
900068c6:	9400      	str	r4, [sp, #0]
900068c8:	f001 fbe6 	bl	90008098 <HAL_I2C_Mem_Write>
900068cc:	b908      	cbnz	r0, 900068d2 <BSP_I2C4_WriteReg+0x22>
}
900068ce:	b005      	add	sp, #20
900068d0:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
900068d2:	4805      	ldr	r0, [pc, #20]	@ (900068e8 <BSP_I2C4_WriteReg+0x38>)
900068d4:	f001 fde2 	bl	9000849c <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
900068d8:	2804      	cmp	r0, #4
900068da:	bf14      	ite	ne
900068dc:	f06f 0003 	mvnne.w	r0, #3
900068e0:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
900068e4:	e7f3      	b.n	900068ce <BSP_I2C4_WriteReg+0x1e>
900068e6:	bf00      	nop
900068e8:	24007990 	.word	0x24007990

900068ec <BSP_I2C4_ReadReg>:
{
900068ec:	b530      	push	{r4, r5, lr}
900068ee:	4614      	mov	r4, r2
900068f0:	b085      	sub	sp, #20
  * @param  Length     data length in bytes
  * @retval BSP status
  */
static int32_t I2C4_ReadReg(uint16_t DevAddr, uint16_t Reg, uint16_t MemAddSize, uint8_t *pData, uint16_t Length)
{
  if (HAL_I2C_Mem_Read(&hbus_i2c4, DevAddr, Reg, MemAddSize, pData, Length, 1000) == HAL_OK)
900068f2:	f44f 757a 	mov.w	r5, #1000	@ 0x3e8
900068f6:	460a      	mov	r2, r1
900068f8:	9301      	str	r3, [sp, #4]
900068fa:	4601      	mov	r1, r0
900068fc:	2301      	movs	r3, #1
900068fe:	4809      	ldr	r0, [pc, #36]	@ (90006924 <BSP_I2C4_ReadReg+0x38>)
90006900:	9502      	str	r5, [sp, #8]
90006902:	9400      	str	r4, [sp, #0]
90006904:	f001 fcc6 	bl	90008294 <HAL_I2C_Mem_Read>
90006908:	b908      	cbnz	r0, 9000690e <BSP_I2C4_ReadReg+0x22>
}
9000690a:	b005      	add	sp, #20
9000690c:	bd30      	pop	{r4, r5, pc}
    if( HAL_I2C_GetError(&hbus_i2c4) == HAL_I2C_ERROR_AF)
9000690e:	4805      	ldr	r0, [pc, #20]	@ (90006924 <BSP_I2C4_ReadReg+0x38>)
90006910:	f001 fdc4 	bl	9000849c <HAL_I2C_GetError>
      ret = BSP_ERROR_BUS_ACKNOWLEDGE_FAILURE;
90006914:	2804      	cmp	r0, #4
90006916:	bf14      	ite	ne
90006918:	f06f 0003 	mvnne.w	r0, #3
9000691c:	f06f 0065 	mvneq.w	r0, #101	@ 0x65
90006920:	e7f3      	b.n	9000690a <BSP_I2C4_ReadReg+0x1e>
90006922:	bf00      	nop
90006924:	24007990 	.word	0x24007990

90006928 <BSP_GetTick>:
  return (int32_t)HAL_GetTick();
90006928:	f000 ba9e 	b.w	90006e68 <HAL_GetTick>

9000692c <BSP_SDRAM_DeInit>:
  */
int32_t BSP_SDRAM_DeInit(uint32_t Instance)
{
  int32_t ret = BSP_ERROR_NONE;

  if(Instance >= SDRAM_INSTANCES_NBR)
9000692c:	b970      	cbnz	r0, 9000694c <BSP_SDRAM_DeInit+0x20>
{
9000692e:	b510      	push	{r4, lr}
90006930:	4604      	mov	r4, r0
  {
    ret =  BSP_ERROR_WRONG_PARAM;
  }
  else
  {
    (void)HAL_SDRAM_DeInit(&hsdram[Instance]);
90006932:	4808      	ldr	r0, [pc, #32]	@ (90006954 <BSP_SDRAM_DeInit+0x28>)
90006934:	f005 fd7a 	bl	9000c42c <HAL_SDRAM_DeInit>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(hSdram);

  /* Disable NVIC configuration for DMA interrupt */
  HAL_NVIC_DisableIRQ(SDRAM_MDMAx_IRQn);
90006938:	207a      	movs	r0, #122	@ 0x7a
9000693a:	f000 fafd 	bl	90006f38 <HAL_NVIC_DisableIRQ>

  /* Deinitialize the stream for new transfer */
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
9000693e:	4b06      	ldr	r3, [pc, #24]	@ (90006958 <BSP_SDRAM_DeInit+0x2c>)
90006940:	4806      	ldr	r0, [pc, #24]	@ (9000695c <BSP_SDRAM_DeInit+0x30>)
90006942:	6003      	str	r3, [r0, #0]
  (void)HAL_MDMA_DeInit(&mdma_handle);
90006944:	f003 fbde 	bl	9000a104 <HAL_MDMA_DeInit>
  int32_t ret = BSP_ERROR_NONE;
90006948:	4620      	mov	r0, r4
}
9000694a:	bd10      	pop	{r4, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
9000694c:	f06f 0001 	mvn.w	r0, #1
}
90006950:	4770      	bx	lr
90006952:	bf00      	nop
90006954:	240084e4 	.word	0x240084e4
90006958:	52000040 	.word	0x52000040
9000695c:	240083ec 	.word	0x240083ec

90006960 <MX_SDRAM_BANK2_Init>:
{
90006960:	b530      	push	{r4, r5, lr}
90006962:	b089      	sub	sp, #36	@ 0x24
  hSdram->Init.MemoryDataWidth    = MemoryDataWidth;
90006964:	6102      	str	r2, [r0, #16]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90006966:	2200      	movs	r2, #0
  hsdram->Instance = FMC_SDRAM_DEVICE;
90006968:	4c13      	ldr	r4, [pc, #76]	@ (900069b8 <MX_SDRAM_BANK2_Init+0x58>)
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
9000696a:	2540      	movs	r5, #64	@ 0x40
  hSdram->Init.RowBitsNumber      = RowBitsNumber;
9000696c:	60c1      	str	r1, [r0, #12]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
9000696e:	6082      	str	r2, [r0, #8]
  sdram_timing.ExitSelfRefreshDelay = 7;
90006970:	2307      	movs	r3, #7
  hSdram->Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
90006972:	61c2      	str	r2, [r0, #28]
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90006974:	f44f 71c0 	mov.w	r1, #384	@ 0x180
  hSdram->Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
90006978:	6282      	str	r2, [r0, #40]	@ 0x28
  sdram_timing.LoadToActiveDelay    = 2;
9000697a:	2202      	movs	r2, #2
  sdram_timing.ExitSelfRefreshDelay = 7;
9000697c:	9301      	str	r3, [sp, #4]
  sdram_timing.LoadToActiveDelay    = 2;
9000697e:	9200      	str	r2, [sp, #0]
  sdram_timing.RCDDelay             = 2;
90006980:	9206      	str	r2, [sp, #24]
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90006982:	2201      	movs	r2, #1
  hSdram->Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
90006984:	6181      	str	r1, [r0, #24]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
90006986:	4669      	mov	r1, sp
  hSdram->Init.SDBank             = FMC_SDRAM_BANK2;
90006988:	6042      	str	r2, [r0, #4]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
9000698a:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
  hsdram->Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
9000698e:	6165      	str	r5, [r4, #20]
  hSdram->Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
90006990:	f44f 6500 	mov.w	r5, #2048	@ 0x800
90006994:	e9c0 5208 	strd	r5, r2, [r0, #32]
  sdram_timing.SelfRefreshTime      = 4;
90006998:	2204      	movs	r2, #4
9000699a:	e9cd 2302 	strd	r2, r3, [sp, #8]
  sdram_timing.WriteRecoveryTime    = 2;
9000699e:	2202      	movs	r2, #2
900069a0:	2302      	movs	r3, #2
900069a2:	e9cd 2304 	strd	r2, r3, [sp, #16]
  hsdram->Instance = FMC_SDRAM_DEVICE;
900069a6:	4b05      	ldr	r3, [pc, #20]	@ (900069bc <MX_SDRAM_BANK2_Init+0x5c>)
900069a8:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_Init(hSdram, &sdram_timing) != HAL_OK)
900069aa:	f005 fd15 	bl	9000c3d8 <HAL_SDRAM_Init>
}
900069ae:	3800      	subs	r0, #0
900069b0:	bf18      	it	ne
900069b2:	2001      	movne	r0, #1
900069b4:	b009      	add	sp, #36	@ 0x24
900069b6:	bd30      	pop	{r4, r5, pc}
900069b8:	240084e4 	.word	0x240084e4
900069bc:	52004140 	.word	0x52004140

900069c0 <BSP_SDRAM_Init>:
  if(Instance >=SDRAM_INSTANCES_NBR)
900069c0:	2800      	cmp	r0, #0
900069c2:	f040 80cd 	bne.w	90006b60 <BSP_SDRAM_Init+0x1a0>
  __HAL_RCC_FMC_CLK_ENABLE();
900069c6:	4b69      	ldr	r3, [pc, #420]	@ (90006b6c <BSP_SDRAM_Init+0x1ac>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
900069c8:	2101      	movs	r1, #1
  __HAL_RCC_FMC_CLK_ENABLE();
900069ca:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
900069ce:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
{
900069d2:	b5f0      	push	{r4, r5, r6, r7, lr}
900069d4:	b08d      	sub	sp, #52	@ 0x34
  __HAL_RCC_FMC_CLK_ENABLE();
900069d6:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
900069da:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
900069de:	4605      	mov	r5, r0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
900069e0:	2002      	movs	r0, #2
  gpio_init_structure.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
900069e2:	2703      	movs	r7, #3
  __HAL_RCC_FMC_CLK_ENABLE();
900069e4:	f402 5280 	and.w	r2, r2, #4096	@ 0x1000
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
900069e8:	4c61      	ldr	r4, [pc, #388]	@ (90006b70 <BSP_SDRAM_Init+0x1b0>)
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
900069ea:	4e62      	ldr	r6, [pc, #392]	@ (90006b74 <BSP_SDRAM_Init+0x1b4>)
  __HAL_RCC_FMC_CLK_ENABLE();
900069ec:	9200      	str	r2, [sp, #0]
900069ee:	9a00      	ldr	r2, [sp, #0]
  SDRAM_MDMAx_CLK_ENABLE();
900069f0:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
900069f4:	430a      	orrs	r2, r1
900069f6:	f8c3 20d4 	str.w	r2, [r3, #212]	@ 0xd4
900069fa:	f8d3 20d4 	ldr.w	r2, [r3, #212]	@ 0xd4
900069fe:	400a      	ands	r2, r1
90006a00:	9201      	str	r2, [sp, #4]
90006a02:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
90006a04:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006a08:	f042 0208 	orr.w	r2, r2, #8
90006a0c:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90006a10:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006a14:	f002 0208 	and.w	r2, r2, #8
90006a18:	9202      	str	r2, [sp, #8]
90006a1a:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOE_CLK_ENABLE();
90006a1c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006a20:	f042 0210 	orr.w	r2, r2, #16
90006a24:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90006a28:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006a2c:	f002 0210 	and.w	r2, r2, #16
90006a30:	9203      	str	r2, [sp, #12]
90006a32:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOF_CLK_ENABLE();
90006a34:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006a38:	f042 0220 	orr.w	r2, r2, #32
90006a3c:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90006a40:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006a44:	f002 0220 	and.w	r2, r2, #32
90006a48:	9204      	str	r2, [sp, #16]
90006a4a:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
90006a4c:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006a50:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
90006a54:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
90006a58:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006a5c:	f002 0240 	and.w	r2, r2, #64	@ 0x40
90006a60:	9205      	str	r2, [sp, #20]
90006a62:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90006a64:	f8d3 20e0 	ldr.w	r2, [r3, #224]	@ 0xe0
90006a68:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
90006a6c:	f8c3 20e0 	str.w	r2, [r3, #224]	@ 0xe0
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90006a70:	220c      	movs	r2, #12
  __HAL_RCC_GPIOH_CLK_ENABLE();
90006a72:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
90006a76:	9008      	str	r0, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
90006a78:	f003 0380 	and.w	r3, r3, #128	@ 0x80
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90006a7c:	483e      	ldr	r0, [pc, #248]	@ (90006b78 <BSP_SDRAM_Init+0x1b8>)
  gpio_init_structure.Pull      = GPIO_PULLUP;
90006a7e:	9109      	str	r1, [sp, #36]	@ 0x24
  __HAL_RCC_GPIOH_CLK_ENABLE();
90006a80:	9306      	str	r3, [sp, #24]
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90006a82:	f24c 7303 	movw	r3, #50947	@ 0xc703
  __HAL_RCC_GPIOH_CLK_ENABLE();
90006a86:	9906      	ldr	r1, [sp, #24]
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90006a88:	a907      	add	r1, sp, #28
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
90006a8a:	9307      	str	r3, [sp, #28]
  gpio_init_structure.Alternate = GPIO_AF12_FMC;
90006a8c:	e9cd 720a 	strd	r7, r2, [sp, #40]	@ 0x28
  HAL_GPIO_Init(GPIOD, &gpio_init_structure);
90006a90:	f000 fc68 	bl	90007364 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90006a94:	f64f 7383 	movw	r3, #65411	@ 0xff83
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90006a98:	a907      	add	r1, sp, #28
90006a9a:	4838      	ldr	r0, [pc, #224]	@ (90006b7c <BSP_SDRAM_Init+0x1bc>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
90006a9c:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOE, &gpio_init_structure);
90006a9e:	f000 fc61 	bl	90007364 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90006aa2:	f64f 033f 	movw	r3, #63551	@ 0xf83f
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90006aa6:	a907      	add	r1, sp, #28
90006aa8:	4835      	ldr	r0, [pc, #212]	@ (90006b80 <BSP_SDRAM_Init+0x1c0>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
90006aaa:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOF, &gpio_init_structure);
90006aac:	f000 fc5a 	bl	90007364 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90006ab0:	f248 1333 	movw	r3, #33075	@ 0x8133
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90006ab4:	a907      	add	r1, sp, #28
90006ab6:	4833      	ldr	r0, [pc, #204]	@ (90006b84 <BSP_SDRAM_Init+0x1c4>)
  gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_8 | GPIO_PIN_15;
90006ab8:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOG, &gpio_init_structure);
90006aba:	f000 fc53 	bl	90007364 <HAL_GPIO_Init>
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90006abe:	23e0      	movs	r3, #224	@ 0xe0
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90006ac0:	a907      	add	r1, sp, #28
90006ac2:	4831      	ldr	r0, [pc, #196]	@ (90006b88 <BSP_SDRAM_Init+0x1c8>)
  gpio_init_structure.Pin   = GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 ;
90006ac4:	9307      	str	r3, [sp, #28]
  HAL_GPIO_Init(GPIOH, &gpio_init_structure);
90006ac6:	f000 fc4d 	bl	90007364 <HAL_GPIO_Init>
  mdma_handle.Init.Priority = MDMA_PRIORITY_HIGH;
90006aca:	2380      	movs	r3, #128	@ 0x80
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90006acc:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90006ad0:	f240 2102 	movw	r1, #514	@ 0x202
  HAL_MDMA_DeInit(&mdma_handle);
90006ad4:	4620      	mov	r0, r4
  mdma_handle.Init.DestDataSize = MDMA_DEST_DATASIZE_WORD;
90006ad6:	6223      	str	r3, [r4, #32]
  mdma_handle.Init.BufferTransferLength = 128;
90006ad8:	62a3      	str	r3, [r4, #40]	@ 0x28
  mdma_handle.Init.Request = MDMA_REQUEST_SW;
90006ada:	6062      	str	r2, [r4, #4]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90006adc:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
  mdma_handle.Init.SourceInc = MDMA_SRC_INC_WORD;
90006ae0:	6161      	str	r1, [r4, #20]
  mdma_handle.Init.TransferTriggerMode = MDMA_BLOCK_TRANSFER;
90006ae2:	60a2      	str	r2, [r4, #8]
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90006ae4:	4a29      	ldr	r2, [pc, #164]	@ (90006b8c <BSP_SDRAM_Init+0x1cc>)
  mdma_handle.Init.SourceBurst = MDMA_SOURCE_BURST_SINGLE;
90006ae6:	62e5      	str	r5, [r4, #44]	@ 0x2c
  mdma_handle.Instance = SDRAM_MDMAx_CHANNEL;
90006ae8:	6022      	str	r2, [r4, #0]
  mdma_handle.Init.DestBurst = MDMA_DEST_BURST_SINGLE;
90006aea:	6325      	str	r5, [r4, #48]	@ 0x30
  __HAL_LINKDMA(hsdram, hmdma, mdma_handle);
90006aec:	6334      	str	r4, [r6, #48]	@ 0x30
90006aee:	6426      	str	r6, [r4, #64]	@ 0x40
  mdma_handle.Init.Endianness = MDMA_LITTLE_ENDIANNESS_PRESERVE;
90006af0:	e9c4 3503 	strd	r3, r5, [r4, #12]
  mdma_handle.Init.DestinationInc = MDMA_DEST_INC_WORD;
90006af4:	f640 0308 	movw	r3, #2056	@ 0x808
90006af8:	61a3      	str	r3, [r4, #24]
  mdma_handle.Init.SourceDataSize = MDMA_SRC_DATASIZE_WORD;
90006afa:	2320      	movs	r3, #32
90006afc:	61e3      	str	r3, [r4, #28]
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90006afe:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
  mdma_handle.Init.SourceBlockAddressOffset = 0;
90006b02:	e9c4 550d 	strd	r5, r5, [r4, #52]	@ 0x34
  mdma_handle.Init.DataAlignment = MDMA_DATAALIGN_PACKENABLE;
90006b06:	6263      	str	r3, [r4, #36]	@ 0x24
  HAL_MDMA_DeInit(&mdma_handle);
90006b08:	f003 fafc 	bl	9000a104 <HAL_MDMA_DeInit>
  HAL_MDMA_Init(&mdma_handle);
90006b0c:	4620      	mov	r0, r4
90006b0e:	f003 fa7f 	bl	9000a010 <HAL_MDMA_Init>
  HAL_NVIC_SetPriority(SDRAM_MDMAx_IRQn, 0x0F, 0);
90006b12:	462a      	mov	r2, r5
90006b14:	210f      	movs	r1, #15
90006b16:	207a      	movs	r0, #122	@ 0x7a
90006b18:	f000 f9c4 	bl	90006ea4 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(SDRAM_MDMAx_IRQn);
90006b1c:	207a      	movs	r0, #122	@ 0x7a
90006b1e:	f000 f9fd 	bl	90006f1c <HAL_NVIC_EnableIRQ>
    if(MX_SDRAM_BANK2_Init(&hsdram[Instance],FMC_SDRAM_ROW_BITS_NUM_12, FMC_SDRAM_MEM_BUS_WIDTH_16) != HAL_OK)
90006b22:	2210      	movs	r2, #16
90006b24:	2104      	movs	r1, #4
90006b26:	4630      	mov	r0, r6
90006b28:	f7ff ff1a 	bl	90006960 <MX_SDRAM_BANK2_Init>
90006b2c:	4603      	mov	r3, r0
90006b2e:	b9d0      	cbnz	r0, 90006b66 <BSP_SDRAM_Init+0x1a6>
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90006b30:	4917      	ldr	r1, [pc, #92]	@ (90006b90 <BSP_SDRAM_Init+0x1d0>)
90006b32:	2208      	movs	r2, #8
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90006b34:	2430      	movs	r4, #48	@ 0x30
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90006b36:	4630      	mov	r0, r6
      pRegMode.TargetBank      = FMC_SDRAM_CMD_TARGET_BANK2;
90006b38:	600a      	str	r2, [r1, #0]
      pRegMode.RefreshRate     = REFRESH_COUNT;
90006b3a:	f240 6203 	movw	r2, #1539	@ 0x603
      pRegMode.RefreshMode     = MT48LC4M32B2_AUTOREFRESH_MODE_CMD;
90006b3e:	604f      	str	r7, [r1, #4]
      pRegMode.RefreshRate     = REFRESH_COUNT;
90006b40:	e9c1 2302 	strd	r2, r3, [r1, #8]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90006b44:	f44f 7200 	mov.w	r2, #512	@ 0x200
      pRegMode.CASLatency      = MT48LC4M32B2_CAS_LATENCY_3;
90006b48:	e9c1 3404 	strd	r3, r4, [r1, #16]
      pRegMode.WriteBurstMode  = MT48LC4M32B2_WRITEBURST_MODE_SINGLE;
90006b4c:	e9c1 3206 	strd	r3, r2, [r1, #24]
      if(MT48LC4M32B2_Init(&hsdram[Instance], &pRegMode) != MT48LC4M32B2_OK)
90006b50:	f7ff fa24 	bl	90005f9c <MT48LC4M32B2_Init>
        ret =  BSP_ERROR_COMPONENT_FAILURE;
90006b54:	2800      	cmp	r0, #0
90006b56:	bf18      	it	ne
90006b58:	f06f 0004 	mvnne.w	r0, #4
}
90006b5c:	b00d      	add	sp, #52	@ 0x34
90006b5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
    ret =  BSP_ERROR_WRONG_PARAM;
90006b60:	f06f 0001 	mvn.w	r0, #1
}
90006b64:	4770      	bx	lr
      ret = BSP_ERROR_NO_INIT;
90006b66:	f04f 30ff 	mov.w	r0, #4294967295
90006b6a:	e7f7      	b.n	90006b5c <BSP_SDRAM_Init+0x19c>
90006b6c:	58024400 	.word	0x58024400
90006b70:	24008458 	.word	0x24008458
90006b74:	240084e4 	.word	0x240084e4
90006b78:	58020c00 	.word	0x58020c00
90006b7c:	58021000 	.word	0x58021000
90006b80:	58021400 	.word	0x58021400
90006b84:	58021800 	.word	0x58021800
90006b88:	58021c00 	.word	0x58021c00
90006b8c:	52000040 	.word	0x52000040
90006b90:	240084c4 	.word	0x240084c4

90006b94 <BSP_TS_Init>:
  * @param  Instance TS instance. Could be only 0.
  * @param  TS_Init  TS Init structure
  * @retval BSP status
  */
int32_t BSP_TS_Init(uint32_t Instance, TS_Init_t *TS_Init)
{
90006b94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90006b98:	b088      	sub	sp, #32
  int32_t ret = BSP_ERROR_NONE;

  if((Instance >=TS_INSTANCES_NBR) || (TS_Init->Width == 0U) ||( TS_Init->Width > TS_MAX_WIDTH) ||\
90006b9a:	2800      	cmp	r0, #0
90006b9c:	d16b      	bne.n	90006c76 <BSP_TS_Init+0xe2>
90006b9e:	680b      	ldr	r3, [r1, #0]
90006ba0:	460d      	mov	r5, r1
90006ba2:	1e5a      	subs	r2, r3, #1
90006ba4:	f5b2 7ff0 	cmp.w	r2, #480	@ 0x1e0
90006ba8:	d265      	bcs.n	90006c76 <BSP_TS_Init+0xe2>
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90006baa:	684a      	ldr	r2, [r1, #4]
90006bac:	1e51      	subs	r1, r2, #1
90006bae:	f5b1 7f88 	cmp.w	r1, #272	@ 0x110
90006bb2:	d260      	bcs.n	90006c76 <BSP_TS_Init+0xe2>
                         (TS_Init->Accuracy > TS_MIN((TS_Init->Width), (TS_Init->Height))))
90006bb4:	4293      	cmp	r3, r2
90006bb6:	bf28      	it	cs
90006bb8:	4613      	movcs	r3, r2
                         (TS_Init->Height == 0U) ||( TS_Init->Height > TS_MAX_HEIGHT) ||\
90006bba:	68ea      	ldr	r2, [r5, #12]
90006bbc:	429a      	cmp	r2, r3
90006bbe:	d85a      	bhi.n	90006c76 <BSP_TS_Init+0xe2>
  FT5336_IO_t              IOCtx;
  static FT5336_Object_t   FT5336Obj;
  uint32_t ft5336_id       = 0;

  /* Configure the touch screen driver */
  IOCtx.Address     = TS_I2C_ADDRESS;
90006bc0:	2270      	movs	r2, #112	@ 0x70
  IOCtx.Init        = BSP_I2C4_Init;
90006bc2:	4b31      	ldr	r3, [pc, #196]	@ (90006c88 <BSP_TS_Init+0xf4>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
  IOCtx.GetTick     = BSP_GetTick;

  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90006bc4:	4c31      	ldr	r4, [pc, #196]	@ (90006c8c <BSP_TS_Init+0xf8>)
90006bc6:	a902      	add	r1, sp, #8
  IOCtx.Address     = TS_I2C_ADDRESS;
90006bc8:	f8ad 2010 	strh.w	r2, [sp, #16]
  IOCtx.Init        = BSP_I2C4_Init;
90006bcc:	9302      	str	r3, [sp, #8]
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90006bce:	4a30      	ldr	r2, [pc, #192]	@ (90006c90 <BSP_TS_Init+0xfc>)
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90006bd0:	4b30      	ldr	r3, [pc, #192]	@ (90006c94 <BSP_TS_Init+0x100>)
  IOCtx.DeInit      = BSP_I2C4_DeInit;
90006bd2:	9203      	str	r2, [sp, #12]
  IOCtx.ReadReg     = BSP_I2C4_ReadReg;
90006bd4:	9306      	str	r3, [sp, #24]
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90006bd6:	4a30      	ldr	r2, [pc, #192]	@ (90006c98 <BSP_TS_Init+0x104>)
  IOCtx.GetTick     = BSP_GetTick;
90006bd8:	4b30      	ldr	r3, [pc, #192]	@ (90006c9c <BSP_TS_Init+0x108>)
  uint32_t ft5336_id       = 0;
90006bda:	9001      	str	r0, [sp, #4]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90006bdc:	4620      	mov	r0, r4
  IOCtx.WriteReg    = BSP_I2C4_WriteReg;
90006bde:	9205      	str	r2, [sp, #20]
  IOCtx.GetTick     = BSP_GetTick;
90006be0:	9307      	str	r3, [sp, #28]
  if(FT5336_RegisterBusIO (&FT5336Obj, &IOCtx) != FT5336_OK)
90006be2:	f7ff f92d 	bl	90005e40 <FT5336_RegisterBusIO>
90006be6:	2800      	cmp	r0, #0
90006be8:	d14b      	bne.n	90006c82 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_BUS_FAILURE;
  }
  else if(FT5336_ReadID(&FT5336Obj, &ft5336_id) != FT5336_OK)
90006bea:	a901      	add	r1, sp, #4
90006bec:	4620      	mov	r0, r4
90006bee:	f7ff f81d 	bl	90005c2c <FT5336_ReadID>
90006bf2:	2800      	cmp	r0, #0
90006bf4:	d145      	bne.n	90006c82 <BSP_TS_Init+0xee>
  {
    ret = BSP_ERROR_COMPONENT_FAILURE;
  }
  else if(ft5336_id != FT5336_ID)
90006bf6:	9b01      	ldr	r3, [sp, #4]
90006bf8:	2b51      	cmp	r3, #81	@ 0x51
90006bfa:	d142      	bne.n	90006c82 <BSP_TS_Init+0xee>
    ret = BSP_ERROR_UNKNOWN_COMPONENT;
  }
  else
  {
    Ts_CompObj[Instance] = &FT5336Obj;
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90006bfc:	4b28      	ldr	r3, [pc, #160]	@ (90006ca0 <BSP_TS_Init+0x10c>)

    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90006bfe:	4620      	mov	r0, r4
    Ts_CompObj[Instance] = &FT5336Obj;
90006c00:	4f28      	ldr	r7, [pc, #160]	@ (90006ca4 <BSP_TS_Init+0x110>)
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90006c02:	f8df 80a8 	ldr.w	r8, [pc, #168]	@ 90006cac <BSP_TS_Init+0x118>
    Ts_CompObj[Instance] = &FT5336Obj;
90006c06:	603c      	str	r4, [r7, #0]
    Ts_Drv = (TS_Drv_t *) &FT5336_TS_Driver;
90006c08:	f8c8 3000 	str.w	r3, [r8]
    if(Ts_Drv->Init(Ts_CompObj[Instance]) != FT5336_OK)
90006c0c:	681b      	ldr	r3, [r3, #0]
90006c0e:	4798      	blx	r3
90006c10:	4606      	mov	r6, r0
90006c12:	2800      	cmp	r0, #0
90006c14:	d135      	bne.n	90006c82 <BSP_TS_Init+0xee>
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90006c16:	682a      	ldr	r2, [r5, #0]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90006c18:	a902      	add	r1, sp, #8
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90006c1a:	4c23      	ldr	r4, [pc, #140]	@ (90006ca8 <BSP_TS_Init+0x114>)
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90006c1c:	f8d8 3000 	ldr.w	r3, [r8]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90006c20:	6022      	str	r2, [r4, #0]
90006c22:	686a      	ldr	r2, [r5, #4]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90006c24:	6838      	ldr	r0, [r7, #0]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90006c26:	6062      	str	r2, [r4, #4]
90006c28:	68aa      	ldr	r2, [r5, #8]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90006c2a:	69db      	ldr	r3, [r3, #28]
      Ts_Ctx[Instance].Width             = TS_Init->Width;
90006c2c:	60a2      	str	r2, [r4, #8]
90006c2e:	68ea      	ldr	r2, [r5, #12]
90006c30:	60e2      	str	r2, [r4, #12]
        if (Ts_Drv->GetCapabilities(Ts_CompObj[Instance], &Capabilities) < 0)
90006c32:	4798      	blx	r3
90006c34:	2800      	cmp	r0, #0
90006c36:	db18      	blt.n	90006c6a <BSP_TS_Init+0xd6>
        Ts_Ctx[Instance].MaxX = Capabilities.MaxXl;
90006c38:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
90006c3c:	e9c4 3204 	strd	r3, r2, [r4, #16]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006c40:	68eb      	ldr	r3, [r5, #12]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006c42:	e9d5 2100 	ldrd	r2, r1, [r5]
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006c46:	441a      	add	r2, r3
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006c48:	440b      	add	r3, r1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006c4a:	3201      	adds	r2, #1
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006c4c:	3301      	adds	r3, #1
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006c4e:	e9c4 2206 	strd	r2, r2, [r4, #24]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006c52:	e9c4 330b 	strd	r3, r3, [r4, #44]	@ 0x2c
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006c56:	e9c4 2208 	strd	r2, r2, [r4, #32]
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006c5a:	e9c4 330d 	strd	r3, r3, [r4, #52]	@ 0x34
          Ts_Ctx[Instance].PreviousX[i] = TS_Init->Width + TS_Init->Accuracy + 1U;
90006c5e:	62a2      	str	r2, [r4, #40]	@ 0x28
          Ts_Ctx[Instance].PreviousY[i] = TS_Init->Height + TS_Init->Accuracy + 1U;
90006c60:	63e3      	str	r3, [r4, #60]	@ 0x3c
}
90006c62:	4630      	mov	r0, r6
90006c64:	b008      	add	sp, #32
90006c66:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        ret = BSP_ERROR_COMPONENT_FAILURE;
90006c6a:	f06f 0604 	mvn.w	r6, #4
}
90006c6e:	4630      	mov	r0, r6
90006c70:	b008      	add	sp, #32
90006c72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ret = BSP_ERROR_WRONG_PARAM;
90006c76:	f06f 0601 	mvn.w	r6, #1
}
90006c7a:	4630      	mov	r0, r6
90006c7c:	b008      	add	sp, #32
90006c7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      ret = BSP_ERROR_NO_INIT;
90006c82:	f04f 36ff 	mov.w	r6, #4294967295
90006c86:	e7ec      	b.n	90006c62 <BSP_TS_Init+0xce>
90006c88:	900060e5 	.word	0x900060e5
90006c8c:	24008518 	.word	0x24008518
90006c90:	90006051 	.word	0x90006051
90006c94:	900068ed 	.word	0x900068ed
90006c98:	900068b1 	.word	0x900068b1
90006c9c:	90006929 	.word	0x90006929
90006ca0:	24000044 	.word	0x24000044
90006ca4:	24008580 	.word	0x24008580
90006ca8:	24008540 	.word	0x24008540
90006cac:	24008584 	.word	0x24008584

90006cb0 <BSP_TS_GetState>:
  if(Instance >= TS_INSTANCES_NBR)
90006cb0:	2800      	cmp	r0, #0
90006cb2:	d154      	bne.n	90006d5e <BSP_TS_GetState+0xae>
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90006cb4:	4b2b      	ldr	r3, [pc, #172]	@ (90006d64 <BSP_TS_GetState+0xb4>)
90006cb6:	4a2c      	ldr	r2, [pc, #176]	@ (90006d68 <BSP_TS_GetState+0xb8>)
90006cb8:	681b      	ldr	r3, [r3, #0]
90006cba:	6810      	ldr	r0, [r2, #0]
90006cbc:	691b      	ldr	r3, [r3, #16]
{
90006cbe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90006cc2:	b084      	sub	sp, #16
90006cc4:	460c      	mov	r4, r1
    if(Ts_Drv->GetState(Ts_CompObj[Instance], &state) < 0)
90006cc6:	a901      	add	r1, sp, #4
90006cc8:	4798      	blx	r3
90006cca:	2800      	cmp	r0, #0
90006ccc:	db3f      	blt.n	90006d4e <BSP_TS_GetState+0x9e>
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90006cce:	4b27      	ldr	r3, [pc, #156]	@ (90006d6c <BSP_TS_GetState+0xbc>)
    else if(state.TouchDetected != 0U)
90006cd0:	9801      	ldr	r0, [sp, #4]
      x_diff = (TS_State->TouchX > Ts_Ctx[Instance].PreviousX[0])?
90006cd2:	699e      	ldr	r6, [r3, #24]
        y_diff = (TS_State->TouchY > Ts_Ctx[Instance].PreviousY[0])?
90006cd4:	6add      	ldr	r5, [r3, #44]	@ 0x2c
    else if(state.TouchDetected != 0U)
90006cd6:	b930      	cbnz	r0, 90006ce6 <BSP_TS_GetState+0x36>
      TS_State->TouchDetected = 0U;
90006cd8:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = Ts_Ctx[Instance].PreviousY[0];
90006cda:	e9c4 6501 	strd	r6, r5, [r4, #4]
  int32_t ret = BSP_ERROR_NONE;
90006cde:	2000      	movs	r0, #0
}
90006ce0:	b004      	add	sp, #16
90006ce2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90006ce6:	689f      	ldr	r7, [r3, #8]
90006ce8:	073a      	lsls	r2, r7, #28
      y_oriented = state.TouchY;
90006cea:	e9dd c802 	ldrd	ip, r8, [sp, #8]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_XY) == TS_SWAP_XY)
90006cee:	d433      	bmi.n	90006d58 <BSP_TS_GetState+0xa8>
      y_oriented = state.TouchY;
90006cf0:	4641      	mov	r1, r8
      x_oriented = state.TouchX;
90006cf2:	4662      	mov	r2, ip
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90006cf4:	f017 0f02 	tst.w	r7, #2
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90006cf8:	f8d3 e010 	ldr.w	lr, [r3, #16]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_X) == TS_SWAP_X)
90006cfc:	d003      	beq.n	90006d06 <BSP_TS_GetState+0x56>
        x_oriented = Ts_Ctx[Instance].MaxX - state.TouchX - 1UL;
90006cfe:	f10e 32ff 	add.w	r2, lr, #4294967295
90006d02:	eba2 020c 	sub.w	r2, r2, ip
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90006d06:	f8d3 c014 	ldr.w	ip, [r3, #20]
      if((Ts_Ctx[Instance].Orientation & TS_SWAP_Y) == TS_SWAP_Y)
90006d0a:	077f      	lsls	r7, r7, #29
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90006d0c:	681f      	ldr	r7, [r3, #0]
        y_oriented = Ts_Ctx[Instance].MaxY - state.TouchY;
90006d0e:	bf48      	it	mi
90006d10:	ebac 0108 	submi.w	r1, ip, r8
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90006d14:	fb07 f202 	mul.w	r2, r7, r2
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90006d18:	685f      	ldr	r7, [r3, #4]
      TS_State->TouchDetected = state.TouchDetected;
90006d1a:	6020      	str	r0, [r4, #0]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90006d1c:	fb07 f101 	mul.w	r1, r7, r1
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90006d20:	fbb2 f2fe 	udiv	r2, r2, lr
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90006d24:	fbb1 f1fc 	udiv	r1, r1, ip
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90006d28:	42b2      	cmp	r2, r6
      TS_State->TouchX = (x_oriented * Ts_Ctx[Instance].Width) / Ts_Ctx[Instance].MaxX;
90006d2a:	6062      	str	r2, [r4, #4]
      TS_State->TouchY = (y_oriented * Ts_Ctx[Instance].Height) / Ts_Ctx[Instance].MaxY;
90006d2c:	60a1      	str	r1, [r4, #8]
        (TS_State->TouchX - Ts_Ctx[Instance].PreviousX[0]):
90006d2e:	bf8c      	ite	hi
90006d30:	1b90      	subhi	r0, r2, r6
90006d32:	1ab0      	subls	r0, r6, r2
          (TS_State->TouchY - Ts_Ctx[Instance].PreviousY[0]):
90006d34:	42a9      	cmp	r1, r5
90006d36:	bf8c      	ite	hi
90006d38:	1b4f      	subhi	r7, r1, r5
90006d3a:	1a6f      	subls	r7, r5, r1
          if ((x_diff > Ts_Ctx[Instance].Accuracy) || (y_diff > Ts_Ctx[Instance].Accuracy))
90006d3c:	42b8      	cmp	r0, r7
90006d3e:	bf38      	it	cc
90006d40:	4638      	movcc	r0, r7
90006d42:	68df      	ldr	r7, [r3, #12]
90006d44:	4287      	cmp	r7, r0
90006d46:	d2c8      	bcs.n	90006cda <BSP_TS_GetState+0x2a>
            Ts_Ctx[Instance].PreviousX[0] = TS_State->TouchX;
90006d48:	619a      	str	r2, [r3, #24]
            Ts_Ctx[Instance].PreviousY[0] = TS_State->TouchY;
90006d4a:	62d9      	str	r1, [r3, #44]	@ 0x2c
90006d4c:	e7c7      	b.n	90006cde <BSP_TS_GetState+0x2e>
      ret = BSP_ERROR_COMPONENT_FAILURE;
90006d4e:	f06f 0004 	mvn.w	r0, #4
}
90006d52:	b004      	add	sp, #16
90006d54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        y_oriented = state.TouchX;
90006d58:	4661      	mov	r1, ip
        x_oriented = state.TouchY;
90006d5a:	4642      	mov	r2, r8
90006d5c:	e7ca      	b.n	90006cf4 <BSP_TS_GetState+0x44>
    ret = BSP_ERROR_WRONG_PARAM;
90006d5e:	f06f 0001 	mvn.w	r0, #1
}
90006d62:	4770      	bx	lr
90006d64:	24008584 	.word	0x24008584
90006d68:	24008580 	.word	0x24008580
90006d6c:	24008540 	.word	0x24008540

90006d70 <SystemInit>:
#endif

extern unsigned int VECTOR_TABLE_LOCATION;

void SystemInit (void)
{
90006d70:	b410      	push	{r4}
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90006d72:	4c19      	ldr	r4, [pc, #100]	@ (90006dd8 <SystemInit+0x68>)
  /* Reset the RCC clock configuration to the default reset state ------------*/
  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
90006d74:	2200      	movs	r2, #0
  RCC->CR |= RCC_CR_HSION;
90006d76:	4b19      	ldr	r3, [pc, #100]	@ (90006ddc <SystemInit+0x6c>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90006d78:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88

  /* Reset HSEON, CSSON , CSION,RC48ON, CSIKERON PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
90006d7c:	4918      	ldr	r1, [pc, #96]	@ (90006de0 <SystemInit+0x70>)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
90006d7e:	f440 0070 	orr.w	r0, r0, #15728640	@ 0xf00000
90006d82:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
  RCC->CR |= RCC_CR_HSION;
90006d86:	6818      	ldr	r0, [r3, #0]
  SCB->VTOR = FLASH_BANK2_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif /* VECT_TAB_SRAM */

#else
  /* dual core CM7 or single core line */
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90006d88:	4c16      	ldr	r4, [pc, #88]	@ (90006de4 <SystemInit+0x74>)
  RCC->CR |= RCC_CR_HSION;
90006d8a:	f040 0001 	orr.w	r0, r0, #1
90006d8e:	6018      	str	r0, [r3, #0]
  RCC->CFGR = 0x00000000;
90006d90:	611a      	str	r2, [r3, #16]
  RCC->CR &= 0xEAF6ED7FU;
90006d92:	6818      	ldr	r0, [r3, #0]
90006d94:	4001      	ands	r1, r0
90006d96:	6019      	str	r1, [r3, #0]
  RCC->D1CFGR = 0x00000000;
90006d98:	619a      	str	r2, [r3, #24]
  RCC->D2CFGR = 0x00000000;
90006d9a:	61da      	str	r2, [r3, #28]
  RCC->D3CFGR = 0x00000000;
90006d9c:	621a      	str	r2, [r3, #32]
  RCC->PLLCKSELR = 0x00000000;
90006d9e:	629a      	str	r2, [r3, #40]	@ 0x28
  RCC->PLLCFGR = 0x00000000;
90006da0:	62da      	str	r2, [r3, #44]	@ 0x2c
  RCC->PLL1DIVR = 0x00000000;
90006da2:	631a      	str	r2, [r3, #48]	@ 0x30
  RCC->PLL1FRACR = 0x00000000;
90006da4:	635a      	str	r2, [r3, #52]	@ 0x34
  RCC->PLL2DIVR = 0x00000000;
90006da6:	639a      	str	r2, [r3, #56]	@ 0x38
  RCC->PLL2FRACR = 0x00000000;
90006da8:	63da      	str	r2, [r3, #60]	@ 0x3c
  RCC->PLL3DIVR = 0x00000000;
90006daa:	641a      	str	r2, [r3, #64]	@ 0x40
  RCC->PLL3FRACR = 0x00000000;
90006dac:	645a      	str	r2, [r3, #68]	@ 0x44
  RCC->CR &= 0xFFFBFFFFU;
90006dae:	6819      	ldr	r1, [r3, #0]
90006db0:	f421 2180 	bic.w	r1, r1, #262144	@ 0x40000
90006db4:	6019      	str	r1, [r3, #0]
  RCC->CIER = 0x00000000;
90006db6:	661a      	str	r2, [r3, #96]	@ 0x60
  if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
90006db8:	6823      	ldr	r3, [r4, #0]
90006dba:	f36f 030f 	bfc	r3, #0, #16
90006dbe:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
90006dc2:	d203      	bcs.n	90006dcc <SystemInit+0x5c>
  {
    /* if stm32h7 revY*/
    /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
    *((__IO uint32_t*)0x51008108) = 0x000000001U;
90006dc4:	4b08      	ldr	r3, [pc, #32]	@ (90006de8 <SystemInit+0x78>)
90006dc6:	2201      	movs	r2, #1
90006dc8:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108

  /* Configure the Vector Table location add offset address for cortex-M7 ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = D1_AXISRAM_BASE  | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM */
#elif defined(VECT_TAB_QSPI)
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90006dcc:	4a07      	ldr	r2, [pc, #28]	@ (90006dec <SystemInit+0x7c>)
90006dce:	4b02      	ldr	r3, [pc, #8]	@ (90006dd8 <SystemInit+0x68>)
  SCB->VTOR = FLASH_BANK1_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
#endif

#endif /*DUAL_CORE && CORE_CM4*/

}
90006dd0:	f85d 4b04 	ldr.w	r4, [sp], #4
  SCB->VTOR = (unsigned int)&VECTOR_TABLE_LOCATION; /* Vector Table Relocation in External FLASH */
90006dd4:	609a      	str	r2, [r3, #8]
}
90006dd6:	4770      	bx	lr
90006dd8:	e000ed00 	.word	0xe000ed00
90006ddc:	58024400 	.word	0x58024400
90006de0:	eaf6ed7f 	.word	0xeaf6ed7f
90006de4:	5c001000 	.word	0x5c001000
90006de8:	51008000 	.word	0x51008000
90006dec:	90000000 	.word	0x90000000

90006df0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
90006df0:	b510      	push	{r4, lr}
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90006df2:	2003      	movs	r0, #3
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90006df4:	4c12      	ldr	r4, [pc, #72]	@ (90006e40 <HAL_Init+0x50>)
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
90006df6:	f000 f843 	bl	90006e80 <HAL_NVIC_SetPriorityGrouping>
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90006dfa:	f003 fecf 	bl	9000ab9c <HAL_RCC_GetSysClockFreq>
90006dfe:	4b11      	ldr	r3, [pc, #68]	@ (90006e44 <HAL_Init+0x54>)
90006e00:	4911      	ldr	r1, [pc, #68]	@ (90006e48 <HAL_Init+0x58>)
90006e02:	699a      	ldr	r2, [r3, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90006e04:	699b      	ldr	r3, [r3, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90006e06:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90006e0a:	f003 030f 	and.w	r3, r3, #15
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90006e0e:	5c8a      	ldrb	r2, [r1, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90006e10:	5ccb      	ldrb	r3, [r1, r3]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90006e12:	f002 021f 	and.w	r2, r2, #31
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
90006e16:	490d      	ldr	r1, [pc, #52]	@ (90006e4c <HAL_Init+0x5c>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90006e18:	f003 031f 	and.w	r3, r3, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
90006e1c:	40d0      	lsrs	r0, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90006e1e:	fa20 f303 	lsr.w	r3, r0, r3
  SystemCoreClock = common_system_clock;
90006e22:	6008      	str	r0, [r1, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90006e24:	2000      	movs	r0, #0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
90006e26:	6023      	str	r3, [r4, #0]
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
90006e28:	f7fd fa86 	bl	90004338 <HAL_InitTick>
90006e2c:	b110      	cbz	r0, 90006e34 <HAL_Init+0x44>
  {
    return HAL_ERROR;
90006e2e:	2401      	movs	r4, #1
  /* Init the low level hardware */
  HAL_MspInit();

  /* Return function status */
  return HAL_OK;
}
90006e30:	4620      	mov	r0, r4
90006e32:	bd10      	pop	{r4, pc}
90006e34:	4604      	mov	r4, r0
  HAL_MspInit();
90006e36:	f7fc ffe5 	bl	90003e04 <HAL_MspInit>
}
90006e3a:	4620      	mov	r0, r4
90006e3c:	bd10      	pop	{r4, pc}
90006e3e:	bf00      	nop
90006e40:	24000074 	.word	0x24000074
90006e44:	58024400 	.word	0x58024400
90006e48:	9002ce48 	.word	0x9002ce48
90006e4c:	24000078 	.word	0x24000078

90006e50 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += (uint32_t)uwTickFreq;
90006e50:	4a03      	ldr	r2, [pc, #12]	@ (90006e60 <HAL_IncTick+0x10>)
90006e52:	4b04      	ldr	r3, [pc, #16]	@ (90006e64 <HAL_IncTick+0x14>)
90006e54:	6811      	ldr	r1, [r2, #0]
90006e56:	781b      	ldrb	r3, [r3, #0]
90006e58:	440b      	add	r3, r1
90006e5a:	6013      	str	r3, [r2, #0]
}
90006e5c:	4770      	bx	lr
90006e5e:	bf00      	nop
90006e60:	24008588 	.word	0x24008588
90006e64:	2400007c 	.word	0x2400007c

90006e68 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
90006e68:	4b01      	ldr	r3, [pc, #4]	@ (90006e70 <HAL_GetTick+0x8>)
90006e6a:	6818      	ldr	r0, [r3, #0]
}
90006e6c:	4770      	bx	lr
90006e6e:	bf00      	nop
90006e70:	24008588 	.word	0x24008588

90006e74 <HAL_GetREVID>:
  * @brief  Returns the device revision identifier.
  * @retval Device revision identifier
  */
uint32_t HAL_GetREVID(void)
{
   return((DBGMCU->IDCODE) >> 16);
90006e74:	4b01      	ldr	r3, [pc, #4]	@ (90006e7c <HAL_GetREVID+0x8>)
90006e76:	6818      	ldr	r0, [r3, #0]
}
90006e78:	0c00      	lsrs	r0, r0, #16
90006e7a:	4770      	bx	lr
90006e7c:	5c001000 	.word	0x5c001000

90006e80 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90006e80:	4906      	ldr	r1, [pc, #24]	@ (90006e9c <HAL_NVIC_SetPriorityGrouping+0x1c>)
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90006e82:	f64f 0cff 	movw	ip, #63743	@ 0xf8ff
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90006e86:	0200      	lsls	r0, r0, #8
  reg_value  =  (reg_value                                   |
90006e88:	4b05      	ldr	r3, [pc, #20]	@ (90006ea0 <HAL_NVIC_SetPriorityGrouping+0x20>)
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
90006e8a:	68ca      	ldr	r2, [r1, #12]
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
90006e8c:	f400 60e0 	and.w	r0, r0, #1792	@ 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
90006e90:	ea02 020c 	and.w	r2, r2, ip
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
90006e94:	4310      	orrs	r0, r2
  reg_value  =  (reg_value                                   |
90006e96:	4303      	orrs	r3, r0
  SCB->AIRCR =  reg_value;
90006e98:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
90006e9a:	4770      	bx	lr
90006e9c:	e000ed00 	.word	0xe000ed00
90006ea0:	05fa0000 	.word	0x05fa0000

90006ea4 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
90006ea4:	4b1a      	ldr	r3, [pc, #104]	@ (90006f10 <HAL_NVIC_SetPriority+0x6c>)
90006ea6:	68db      	ldr	r3, [r3, #12]
90006ea8:	f3c3 2302 	ubfx	r3, r3, #8, #3
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
90006eac:	b500      	push	{lr}
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90006eae:	f1c3 0e07 	rsb	lr, r3, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90006eb2:	f103 0c04 	add.w	ip, r3, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
90006eb6:	f1be 0f04 	cmp.w	lr, #4
90006eba:	bf28      	it	cs
90006ebc:	f04f 0e04 	movcs.w	lr, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90006ec0:	f1bc 0f06 	cmp.w	ip, #6
90006ec4:	d91a      	bls.n	90006efc <HAL_NVIC_SetPriority+0x58>
90006ec6:	f1a3 0c03 	sub.w	ip, r3, #3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
90006eca:	f04f 33ff 	mov.w	r3, #4294967295
90006ece:	fa03 f30c 	lsl.w	r3, r3, ip
90006ed2:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90006ed6:	f04f 33ff 	mov.w	r3, #4294967295
  if ((int32_t)(IRQn) >= 0)
90006eda:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
90006edc:	fa03 f30e 	lsl.w	r3, r3, lr
90006ee0:	ea21 0303 	bic.w	r3, r1, r3
90006ee4:	fa03 f30c 	lsl.w	r3, r3, ip
90006ee8:	ea43 0302 	orr.w	r3, r3, r2
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90006eec:	ea4f 1303 	mov.w	r3, r3, lsl #4
90006ef0:	b2db      	uxtb	r3, r3
  if ((int32_t)(IRQn) >= 0)
90006ef2:	db06      	blt.n	90006f02 <HAL_NVIC_SetPriority+0x5e>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90006ef4:	4a07      	ldr	r2, [pc, #28]	@ (90006f14 <HAL_NVIC_SetPriority+0x70>)
90006ef6:	5413      	strb	r3, [r2, r0]
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
90006ef8:	f85d fb04 	ldr.w	pc, [sp], #4
90006efc:	2200      	movs	r2, #0
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
90006efe:	4694      	mov	ip, r2
90006f00:	e7e9      	b.n	90006ed6 <HAL_NVIC_SetPriority+0x32>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
90006f02:	f000 000f 	and.w	r0, r0, #15
90006f06:	4a04      	ldr	r2, [pc, #16]	@ (90006f18 <HAL_NVIC_SetPriority+0x74>)
90006f08:	5413      	strb	r3, [r2, r0]
90006f0a:	f85d fb04 	ldr.w	pc, [sp], #4
90006f0e:	bf00      	nop
90006f10:	e000ed00 	.word	0xe000ed00
90006f14:	e000e400 	.word	0xe000e400
90006f18:	e000ed14 	.word	0xe000ed14

90006f1c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90006f1c:	2800      	cmp	r0, #0
90006f1e:	db07      	blt.n	90006f30 <HAL_NVIC_EnableIRQ+0x14>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90006f20:	2301      	movs	r3, #1
90006f22:	f000 011f 	and.w	r1, r0, #31
90006f26:	4a03      	ldr	r2, [pc, #12]	@ (90006f34 <HAL_NVIC_EnableIRQ+0x18>)
90006f28:	0940      	lsrs	r0, r0, #5
90006f2a:	408b      	lsls	r3, r1
90006f2c:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
90006f30:	4770      	bx	lr
90006f32:	bf00      	nop
90006f34:	e000e100 	.word	0xe000e100

90006f38 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
90006f38:	2800      	cmp	r0, #0
90006f3a:	db0c      	blt.n	90006f56 <HAL_NVIC_DisableIRQ+0x1e>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
90006f3c:	0943      	lsrs	r3, r0, #5
90006f3e:	2201      	movs	r2, #1
90006f40:	f000 001f 	and.w	r0, r0, #31
90006f44:	4904      	ldr	r1, [pc, #16]	@ (90006f58 <HAL_NVIC_DisableIRQ+0x20>)
90006f46:	3320      	adds	r3, #32
90006f48:	4082      	lsls	r2, r0
90006f4a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
90006f4e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90006f52:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
90006f56:	4770      	bx	lr
90006f58:	e000e100 	.word	0xe000e100

90006f5c <HAL_MPU_Disable>:
  \details Ensures the apparent order of the explicit memory operations before
           and after the instruction, without ensuring their completion.
 */
__STATIC_FORCEINLINE void __DMB(void)
{
  __ASM volatile ("dmb 0xF":::"memory");
90006f5c:	f3bf 8f5f 	dmb	sy
{
  /* Make sure outstanding transfers are done */
  __DMB();

  /* Disable fault exceptions */
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90006f60:	4b04      	ldr	r3, [pc, #16]	@ (90006f74 <HAL_MPU_Disable+0x18>)

  /* Disable the MPU and clear the control register*/
  MPU->CTRL = 0;
90006f62:	2100      	movs	r1, #0
  SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
90006f64:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90006f66:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
90006f6a:	625a      	str	r2, [r3, #36]	@ 0x24
  MPU->CTRL = 0;
90006f6c:	f8c3 1094 	str.w	r1, [r3, #148]	@ 0x94
}
90006f70:	4770      	bx	lr
90006f72:	bf00      	nop
90006f74:	e000ed00 	.word	0xe000ed00

90006f78 <HAL_MPU_Enable>:
  * @retval None
  */
void HAL_MPU_Enable(uint32_t MPU_Control)
{
  /* Enable the MPU */
  MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
90006f78:	4b06      	ldr	r3, [pc, #24]	@ (90006f94 <HAL_MPU_Enable+0x1c>)
90006f7a:	f040 0001 	orr.w	r0, r0, #1
90006f7e:	f8c3 0094 	str.w	r0, [r3, #148]	@ 0x94

  /* Enable fault exceptions */
  SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
90006f82:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
90006f84:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
90006f88:	625a      	str	r2, [r3, #36]	@ 0x24
  __ASM volatile ("dsb 0xF":::"memory");
90006f8a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
90006f8e:	f3bf 8f6f 	isb	sy

  /* Ensure MPU setting take effects */
  __DSB();
  __ISB();
}
90006f92:	4770      	bx	lr
90006f94:	e000ed00 	.word	0xe000ed00

90006f98 <HAL_MPU_ConfigRegion>:
  assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
  assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
  assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));

  /* Set the Region number */
  MPU->RNR = MPU_Init->Number;
90006f98:	4a16      	ldr	r2, [pc, #88]	@ (90006ff4 <HAL_MPU_ConfigRegion+0x5c>)
90006f9a:	7843      	ldrb	r3, [r0, #1]
90006f9c:	f8c2 3098 	str.w	r3, [r2, #152]	@ 0x98

  /* Disable the Region */
  CLEAR_BIT(MPU->RASR, MPU_RASR_ENABLE_Msk);
90006fa0:	f8d2 30a0 	ldr.w	r3, [r2, #160]	@ 0xa0
90006fa4:	f023 0301 	bic.w	r3, r3, #1
90006fa8:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0

  /* Apply configuration */
  MPU->RBAR = MPU_Init->BaseAddress;
90006fac:	6843      	ldr	r3, [r0, #4]
90006fae:	f8c2 309c 	str.w	r3, [r2, #156]	@ 0x9c
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90006fb2:	7ac3      	ldrb	r3, [r0, #11]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90006fb4:	f890 c00c 	ldrb.w	ip, [r0, #12]
              ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
90006fb8:	061b      	lsls	r3, r3, #24
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
              ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
90006fba:	7801      	ldrb	r1, [r0, #0]
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90006fbc:	ea43 730c 	orr.w	r3, r3, ip, lsl #28
              ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
90006fc0:	f890 c00a 	ldrb.w	ip, [r0, #10]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90006fc4:	430b      	orrs	r3, r1
              ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
90006fc6:	7b41      	ldrb	r1, [r0, #13]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90006fc8:	ea43 43cc 	orr.w	r3, r3, ip, lsl #19
              ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
90006fcc:	f890 c00e 	ldrb.w	ip, [r0, #14]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90006fd0:	ea43 4381 	orr.w	r3, r3, r1, lsl #18
              ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
90006fd4:	7bc1      	ldrb	r1, [r0, #15]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90006fd6:	ea43 434c 	orr.w	r3, r3, ip, lsl #17
              ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
90006fda:	f890 c009 	ldrb.w	ip, [r0, #9]
              ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
90006fde:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
90006fe2:	7a01      	ldrb	r1, [r0, #8]
90006fe4:	ea43 230c 	orr.w	r3, r3, ip, lsl #8
90006fe8:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
  MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
90006fec:	f8c2 30a0 	str.w	r3, [r2, #160]	@ 0xa0
}
90006ff0:	4770      	bx	lr
90006ff2:	bf00      	nop
90006ff4:	e000ed00 	.word	0xe000ed00

90006ff8 <HAL_CRC_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
90006ff8:	2800      	cmp	r0, #0
90006ffa:	d036      	beq.n	9000706a <HAL_CRC_Init+0x72>
{
90006ffc:	b510      	push	{r4, lr}
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
90006ffe:	7f43      	ldrb	r3, [r0, #29]
90007000:	4604      	mov	r4, r0
90007002:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90007006:	b363      	cbz	r3, 90007062 <HAL_CRC_Init+0x6a>
    hcrc->Lock = HAL_UNLOCKED;
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
90007008:	2202      	movs	r2, #2

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
9000700a:	7923      	ldrb	r3, [r4, #4]
  hcrc->State = HAL_CRC_STATE_BUSY;
9000700c:	7762      	strb	r2, [r4, #29]
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
9000700e:	b9f3      	cbnz	r3, 9000704e <HAL_CRC_Init+0x56>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
90007010:	6823      	ldr	r3, [r4, #0]
90007012:	4a17      	ldr	r2, [pc, #92]	@ (90007070 <HAL_CRC_Init+0x78>)
90007014:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
90007016:	689a      	ldr	r2, [r3, #8]
90007018:	f022 0218 	bic.w	r2, r2, #24
9000701c:	609a      	str	r2, [r3, #8]
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
9000701e:	7962      	ldrb	r2, [r4, #5]
90007020:	b18a      	cbz	r2, 90007046 <HAL_CRC_Init+0x4e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
90007022:	6922      	ldr	r2, [r4, #16]
90007024:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90007026:	689a      	ldr	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007028:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
9000702c:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90007030:	4302      	orrs	r2, r0

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;

  /* Return function status */
  return HAL_OK;
90007032:	2000      	movs	r0, #0
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
90007034:	609a      	str	r2, [r3, #8]
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007036:	689a      	ldr	r2, [r3, #8]
90007038:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000703c:	430a      	orrs	r2, r1
  hcrc->State = HAL_CRC_STATE_READY;
9000703e:	2101      	movs	r1, #1
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
90007040:	609a      	str	r2, [r3, #8]
  hcrc->State = HAL_CRC_STATE_READY;
90007042:	7761      	strb	r1, [r4, #29]
}
90007044:	bd10      	pop	{r4, pc}
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
90007046:	f04f 32ff 	mov.w	r2, #4294967295
9000704a:	611a      	str	r2, [r3, #16]
9000704c:	e7eb      	b.n	90007026 <HAL_CRC_Init+0x2e>
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
9000704e:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
90007052:	4620      	mov	r0, r4
90007054:	f000 f80e 	bl	90007074 <HAL_CRCEx_Polynomial_Set>
90007058:	b908      	cbnz	r0, 9000705e <HAL_CRC_Init+0x66>
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
9000705a:	6823      	ldr	r3, [r4, #0]
9000705c:	e7df      	b.n	9000701e <HAL_CRC_Init+0x26>
    return HAL_ERROR;
9000705e:	2001      	movs	r0, #1
}
90007060:	bd10      	pop	{r4, pc}
    hcrc->Lock = HAL_UNLOCKED;
90007062:	7702      	strb	r2, [r0, #28]
    HAL_CRC_MspInit(hcrc);
90007064:	f7fc fee8 	bl	90003e38 <HAL_CRC_MspInit>
90007068:	e7ce      	b.n	90007008 <HAL_CRC_Init+0x10>
    return HAL_ERROR;
9000706a:	2001      	movs	r0, #1
}
9000706c:	4770      	bx	lr
9000706e:	bf00      	nop
90007070:	04c11db7 	.word	0x04c11db7

90007074 <HAL_CRCEx_Polynomial_Set>:

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
90007074:	07cb      	lsls	r3, r1, #31
90007076:	d51a      	bpl.n	900070ae <HAL_CRCEx_Polynomial_Set+0x3a>
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
90007078:	231f      	movs	r3, #31
{
9000707a:	b410      	push	{r4}
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
9000707c:	3b01      	subs	r3, #1
9000707e:	1c5c      	adds	r4, r3, #1
90007080:	fa21 fc03 	lsr.w	ip, r1, r3
90007084:	d015      	beq.n	900070b2 <HAL_CRCEx_Polynomial_Set+0x3e>
90007086:	f01c 0f01 	tst.w	ip, #1
9000708a:	d0f7      	beq.n	9000707c <HAL_CRCEx_Polynomial_Set+0x8>
    {
    }

    switch (PolyLength)
9000708c:	2a18      	cmp	r2, #24
9000708e:	d811      	bhi.n	900070b4 <HAL_CRCEx_Polynomial_Set+0x40>
90007090:	e8df f002 	tbb	[pc, r2]
90007094:	10101016 	.word	0x10101016
90007098:	10101010 	.word	0x10101010
9000709c:	10101024 	.word	0x10101024
900070a0:	10101010 	.word	0x10101010
900070a4:	10101021 	.word	0x10101021
900070a8:	10101010 	.word	0x10101010
900070ac:	14          	.byte	0x14
900070ad:	00          	.byte	0x00
    {

      case CRC_POLYLENGTH_7B:
        if (msb >= HAL_CRC_LENGTH_7B)
        {
          status =   HAL_ERROR;
900070ae:	2001      	movs	r0, #1
    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
  }
  /* Return function status */
  return status;
}
900070b0:	4770      	bx	lr
    switch (PolyLength)
900070b2:	b12a      	cbz	r2, 900070c0 <HAL_CRCEx_Polynomial_Set+0x4c>
          status =   HAL_ERROR;
900070b4:	2001      	movs	r0, #1
}
900070b6:	f85d 4b04 	ldr.w	r4, [sp], #4
900070ba:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_7B)
900070bc:	2b06      	cmp	r3, #6
900070be:	d8f9      	bhi.n	900070b4 <HAL_CRCEx_Polynomial_Set+0x40>
    WRITE_REG(hcrc->Instance->POL, Pol);
900070c0:	6804      	ldr	r4, [r0, #0]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
900070c2:	2000      	movs	r0, #0
    WRITE_REG(hcrc->Instance->POL, Pol);
900070c4:	6161      	str	r1, [r4, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
900070c6:	68a3      	ldr	r3, [r4, #8]
900070c8:	f023 0318 	bic.w	r3, r3, #24
900070cc:	4313      	orrs	r3, r2
900070ce:	60a3      	str	r3, [r4, #8]
}
900070d0:	f85d 4b04 	ldr.w	r4, [sp], #4
900070d4:	4770      	bx	lr
        if (msb >= HAL_CRC_LENGTH_8B)
900070d6:	2b07      	cmp	r3, #7
900070d8:	d9f2      	bls.n	900070c0 <HAL_CRCEx_Polynomial_Set+0x4c>
900070da:	e7eb      	b.n	900070b4 <HAL_CRCEx_Polynomial_Set+0x40>
        if (msb >= HAL_CRC_LENGTH_16B)
900070dc:	2b0f      	cmp	r3, #15
900070de:	d9ef      	bls.n	900070c0 <HAL_CRCEx_Polynomial_Set+0x4c>
900070e0:	e7e8      	b.n	900070b4 <HAL_CRCEx_Polynomial_Set+0x40>
900070e2:	bf00      	nop

900070e4 <HAL_DMA2D_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
900070e4:	2800      	cmp	r0, #0
900070e6:	d035      	beq.n	90007154 <HAL_DMA2D_Init+0x70>
{
900070e8:	b538      	push	{r3, r4, r5, lr}

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
900070ea:	f890 3061 	ldrb.w	r3, [r0, #97]	@ 0x61
900070ee:	4604      	mov	r4, r0
900070f0:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
900070f4:	b34b      	cbz	r3, 9000714a <HAL_DMA2D_Init+0x66>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900070f6:	6823      	ldr	r3, [r4, #0]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900070f8:	2002      	movs	r0, #2
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
900070fa:	6862      	ldr	r2, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900070fc:	f884 0061 	strb.w	r0, [r4, #97]	@ 0x61
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
90007100:	69e1      	ldr	r1, [r4, #28]
90007102:	681d      	ldr	r5, [r3, #0]
90007104:	4814      	ldr	r0, [pc, #80]	@ (90007158 <HAL_DMA2D_Init+0x74>)
90007106:	4311      	orrs	r1, r2

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007108:	68a2      	ldr	r2, [r4, #8]
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
9000710a:	4028      	ands	r0, r5
9000710c:	4301      	orrs	r1, r0
9000710e:	6019      	str	r1, [r3, #0]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
90007110:	69a1      	ldr	r1, [r4, #24]
90007112:	6b58      	ldr	r0, [r3, #52]	@ 0x34
90007114:	430a      	orrs	r2, r1
90007116:	4911      	ldr	r1, [pc, #68]	@ (9000715c <HAL_DMA2D_Init+0x78>)
90007118:	4001      	ands	r1, r0
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000711a:	68e0      	ldr	r0, [r4, #12]
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
9000711c:	430a      	orrs	r2, r1
9000711e:	635a      	str	r2, [r3, #52]	@ 0x34
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
90007120:	6c19      	ldr	r1, [r3, #64]	@ 0x40
90007122:	f36f 010f 	bfc	r1, #0, #16
90007126:	4301      	orrs	r1, r0
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
90007128:	e9d4 0204 	ldrd	r0, r2, [r4, #16]
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
9000712c:	6419      	str	r1, [r3, #64]	@ 0x40
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000712e:	0552      	lsls	r2, r2, #21
90007130:	6b59      	ldr	r1, [r3, #52]	@ 0x34
90007132:	ea42 5200 	orr.w	r2, r2, r0, lsl #20
90007136:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
9000713a:	2000      	movs	r0, #0
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
9000713c:	430a      	orrs	r2, r1
9000713e:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90007140:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
90007142:	6660      	str	r0, [r4, #100]	@ 0x64
  hdma2d->State  = HAL_DMA2D_STATE_READY;
90007144:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61

  return HAL_OK;
}
90007148:	bd38      	pop	{r3, r4, r5, pc}
    hdma2d->Lock = HAL_UNLOCKED;
9000714a:	f880 2060 	strb.w	r2, [r0, #96]	@ 0x60
    HAL_DMA2D_MspInit(hdma2d);
9000714e:	f7fc fe8b 	bl	90003e68 <HAL_DMA2D_MspInit>
90007152:	e7d0      	b.n	900070f6 <HAL_DMA2D_Init+0x12>
    return HAL_ERROR;
90007154:	2001      	movs	r0, #1
}
90007156:	4770      	bx	lr
90007158:	fff8ffbf 	.word	0xfff8ffbf
9000715c:	fffffef8 	.word	0xfffffef8

90007160 <HAL_DMA2D_LineEventCallback>:
  * @brief  Transfer watermark callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
90007160:	4770      	bx	lr
90007162:	bf00      	nop

90007164 <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @brief  CLUT Transfer Complete callback.
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
90007164:	4770      	bx	lr
90007166:	bf00      	nop

90007168 <HAL_DMA2D_IRQHandler>:
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
90007168:	6803      	ldr	r3, [r0, #0]
{
9000716a:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
9000716c:	685d      	ldr	r5, [r3, #4]
{
9000716e:	4604      	mov	r4, r0
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
90007170:	681e      	ldr	r6, [r3, #0]
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
90007172:	07ea      	lsls	r2, r5, #31
90007174:	d501      	bpl.n	9000717a <HAL_DMA2D_IRQHandler+0x12>
    if ((crflags & DMA2D_IT_TE) != 0U)
90007176:	05f1      	lsls	r1, r6, #23
90007178:	d456      	bmi.n	90007228 <HAL_DMA2D_IRQHandler+0xc0>
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
9000717a:	06aa      	lsls	r2, r5, #26
9000717c:	d501      	bpl.n	90007182 <HAL_DMA2D_IRQHandler+0x1a>
    if ((crflags & DMA2D_IT_CE) != 0U)
9000717e:	04b3      	lsls	r3, r6, #18
90007180:	d43b      	bmi.n	900071fa <HAL_DMA2D_IRQHandler+0x92>
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
90007182:	0728      	lsls	r0, r5, #28
90007184:	d501      	bpl.n	9000718a <HAL_DMA2D_IRQHandler+0x22>
    if ((crflags & DMA2D_IT_CAE) != 0U)
90007186:	0531      	lsls	r1, r6, #20
90007188:	d421      	bmi.n	900071ce <HAL_DMA2D_IRQHandler+0x66>
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
9000718a:	076a      	lsls	r2, r5, #29
9000718c:	d501      	bpl.n	90007192 <HAL_DMA2D_IRQHandler+0x2a>
    if ((crflags & DMA2D_IT_TW) != 0U)
9000718e:	0573      	lsls	r3, r6, #21
90007190:	d472      	bmi.n	90007278 <HAL_DMA2D_IRQHandler+0x110>
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
90007192:	07a8      	lsls	r0, r5, #30
90007194:	d501      	bpl.n	9000719a <HAL_DMA2D_IRQHandler+0x32>
    if ((crflags & DMA2D_IT_TC) != 0U)
90007196:	05b1      	lsls	r1, r6, #22
90007198:	d404      	bmi.n	900071a4 <HAL_DMA2D_IRQHandler+0x3c>
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
9000719a:	06ea      	lsls	r2, r5, #27
9000719c:	d501      	bpl.n	900071a2 <HAL_DMA2D_IRQHandler+0x3a>
    if ((crflags & DMA2D_IT_CTC) != 0U)
9000719e:	04f3      	lsls	r3, r6, #19
900071a0:	d457      	bmi.n	90007252 <HAL_DMA2D_IRQHandler+0xea>
}
900071a2:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
900071a4:	6823      	ldr	r3, [r4, #0]
900071a6:	681a      	ldr	r2, [r3, #0]
900071a8:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
900071ac:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
900071ae:	2202      	movs	r2, #2
900071b0:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_READY;
900071b2:	2201      	movs	r2, #1
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
900071b4:	6e63      	ldr	r3, [r4, #100]	@ 0x64
900071b6:	6663      	str	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
900071b8:	2300      	movs	r3, #0
      hdma2d->State = HAL_DMA2D_STATE_READY;
900071ba:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
900071be:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
      if (hdma2d->XferCpltCallback != NULL)
900071c2:	6a23      	ldr	r3, [r4, #32]
900071c4:	2b00      	cmp	r3, #0
900071c6:	d0e8      	beq.n	9000719a <HAL_DMA2D_IRQHandler+0x32>
        hdma2d->XferCpltCallback(hdma2d);
900071c8:	4620      	mov	r0, r4
900071ca:	4798      	blx	r3
900071cc:	e7e5      	b.n	9000719a <HAL_DMA2D_IRQHandler+0x32>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
900071ce:	6823      	ldr	r3, [r4, #0]
900071d0:	681a      	ldr	r2, [r3, #0]
900071d2:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
900071d6:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
900071d8:	2208      	movs	r2, #8
900071da:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900071dc:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
900071de:	6e63      	ldr	r3, [r4, #100]	@ 0x64
900071e0:	4313      	orrs	r3, r2
900071e2:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
900071e4:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
900071e8:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
900071ea:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
900071ec:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
900071f0:	2b00      	cmp	r3, #0
900071f2:	d0ca      	beq.n	9000718a <HAL_DMA2D_IRQHandler+0x22>
        hdma2d->XferErrorCallback(hdma2d);
900071f4:	4620      	mov	r0, r4
900071f6:	4798      	blx	r3
900071f8:	e7c7      	b.n	9000718a <HAL_DMA2D_IRQHandler+0x22>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
900071fa:	6823      	ldr	r3, [r4, #0]
900071fc:	681a      	ldr	r2, [r3, #0]
900071fe:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
90007202:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
90007204:	2220      	movs	r2, #32
90007206:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007208:	2204      	movs	r2, #4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
9000720a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9000720c:	f043 0302 	orr.w	r3, r3, #2
90007210:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
90007212:	f884 2061 	strb.w	r2, [r4, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90007216:	2200      	movs	r2, #0
      if (hdma2d->XferErrorCallback != NULL)
90007218:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      __HAL_UNLOCK(hdma2d);
9000721a:	f884 2060 	strb.w	r2, [r4, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
9000721e:	2b00      	cmp	r3, #0
90007220:	d0af      	beq.n	90007182 <HAL_DMA2D_IRQHandler+0x1a>
        hdma2d->XferErrorCallback(hdma2d);
90007222:	4620      	mov	r0, r4
90007224:	4798      	blx	r3
90007226:	e7ac      	b.n	90007182 <HAL_DMA2D_IRQHandler+0x1a>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
90007228:	681a      	ldr	r2, [r3, #0]
9000722a:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
9000722e:	601a      	str	r2, [r3, #0]
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
90007230:	6e42      	ldr	r2, [r0, #100]	@ 0x64
90007232:	f042 0201 	orr.w	r2, r2, #1
90007236:	6642      	str	r2, [r0, #100]	@ 0x64
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
90007238:	2201      	movs	r2, #1
9000723a:	609a      	str	r2, [r3, #8]
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
9000723c:	2304      	movs	r3, #4
9000723e:	f880 3061 	strb.w	r3, [r0, #97]	@ 0x61
      __HAL_UNLOCK(hdma2d);
90007242:	2300      	movs	r3, #0
90007244:	f880 3060 	strb.w	r3, [r0, #96]	@ 0x60
      if (hdma2d->XferErrorCallback != NULL)
90007248:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9000724a:	2b00      	cmp	r3, #0
9000724c:	d095      	beq.n	9000717a <HAL_DMA2D_IRQHandler+0x12>
        hdma2d->XferErrorCallback(hdma2d);
9000724e:	4798      	blx	r3
90007250:	e793      	b.n	9000717a <HAL_DMA2D_IRQHandler+0x12>
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
90007252:	6823      	ldr	r3, [r4, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90007254:	2010      	movs	r0, #16
      hdma2d->State = HAL_DMA2D_STATE_READY;
90007256:	2101      	movs	r1, #1
      __HAL_UNLOCK(hdma2d);
90007258:	2500      	movs	r5, #0
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
9000725a:	681a      	ldr	r2, [r3, #0]
9000725c:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
90007260:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
90007262:	6098      	str	r0, [r3, #8]
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90007264:	4620      	mov	r0, r4
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
90007266:	6e63      	ldr	r3, [r4, #100]	@ 0x64
      __HAL_UNLOCK(hdma2d);
90007268:	f884 5060 	strb.w	r5, [r4, #96]	@ 0x60
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
9000726c:	6663      	str	r3, [r4, #100]	@ 0x64
      hdma2d->State = HAL_DMA2D_STATE_READY;
9000726e:	f884 1061 	strb.w	r1, [r4, #97]	@ 0x61
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
90007272:	f7ff ff77 	bl	90007164 <HAL_DMA2D_CLUTLoadingCpltCallback>
}
90007276:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
90007278:	6823      	ldr	r3, [r4, #0]
      HAL_DMA2D_LineEventCallback(hdma2d);
9000727a:	4620      	mov	r0, r4
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
9000727c:	681a      	ldr	r2, [r3, #0]
9000727e:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
90007282:	601a      	str	r2, [r3, #0]
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
90007284:	2204      	movs	r2, #4
90007286:	609a      	str	r2, [r3, #8]
      HAL_DMA2D_LineEventCallback(hdma2d);
90007288:	f7ff ff6a 	bl	90007160 <HAL_DMA2D_LineEventCallback>
9000728c:	e781      	b.n	90007192 <HAL_DMA2D_IRQHandler+0x2a>
9000728e:	bf00      	nop

90007290 <HAL_DMA2D_ConfigLayer>:
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
90007290:	f890 2060 	ldrb.w	r2, [r0, #96]	@ 0x60
90007294:	2a01      	cmp	r2, #1
90007296:	d05f      	beq.n	90007358 <HAL_DMA2D_ConfigLayer+0xc8>
90007298:	4603      	mov	r3, r0
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
9000729a:	ebc1 00c1 	rsb	r0, r1, r1, lsl #3
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
9000729e:	2202      	movs	r2, #2
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900072a0:	ea4f 0cc1 	mov.w	ip, r1, lsl #3
900072a4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
{
900072a8:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(hdma2d);
900072aa:	2401      	movs	r4, #1
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
900072ac:	f883 2061 	strb.w	r2, [r3, #97]	@ 0x61
  __HAL_LOCK(hdma2d);
900072b0:	f883 4060 	strb.w	r4, [r3, #96]	@ 0x60
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
900072b4:	6b82      	ldr	r2, [r0, #56]	@ 0x38
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900072b6:	6b04      	ldr	r4, [r0, #48]	@ 0x30
900072b8:	6ac5      	ldr	r5, [r0, #44]	@ 0x2c
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
900072ba:	0512      	lsls	r2, r2, #20
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
900072bc:	6b46      	ldr	r6, [r0, #52]	@ 0x34
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900072be:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900072c2:	f1a5 0e09 	sub.w	lr, r5, #9
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
900072c6:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900072c8:	432a      	orrs	r2, r5
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900072ca:	f1be 0f01 	cmp.w	lr, #1
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
900072ce:	ea42 5244 	orr.w	r2, r2, r4, lsl #21

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900072d2:	681c      	ldr	r4, [r3, #0]
  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
900072d4:	d923      	bls.n	9000731e <HAL_DMA2D_ConfigLayer+0x8e>
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
900072d6:	ea42 6206 	orr.w	r2, r2, r6, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
900072da:	b971      	cbnz	r1, 900072fa <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900072dc:	6a60      	ldr	r0, [r4, #36]	@ 0x24
900072de:	491f      	ldr	r1, [pc, #124]	@ (9000735c <HAL_DMA2D_ConfigLayer+0xcc>)
900072e0:	4001      	ands	r1, r0

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
900072e2:	6a98      	ldr	r0, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
900072e4:	4311      	orrs	r1, r2
900072e6:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
900072e8:	61a0      	str	r0, [r4, #24]
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
900072ea:	2200      	movs	r2, #0
  hdma2d->State = HAL_DMA2D_STATE_READY;
900072ec:	2101      	movs	r1, #1

  return HAL_OK;
900072ee:	4610      	mov	r0, r2
  hdma2d->State = HAL_DMA2D_STATE_READY;
900072f0:	f883 1061 	strb.w	r1, [r3, #97]	@ 0x61
  __HAL_UNLOCK(hdma2d);
900072f4:	f883 2060 	strb.w	r2, [r3, #96]	@ 0x60
}
900072f8:	bd70      	pop	{r4, r5, r6, pc}
    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
900072fa:	2d0b      	cmp	r5, #11
900072fc:	d12a      	bne.n	90007354 <HAL_DMA2D_ConfigLayer+0xc4>
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
900072fe:	6c00      	ldr	r0, [r0, #64]	@ 0x40
90007300:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
90007304:	4816      	ldr	r0, [pc, #88]	@ (90007360 <HAL_DMA2D_ConfigLayer+0xd0>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007306:	ebac 0c01 	sub.w	ip, ip, r1
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000730a:	69e1      	ldr	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000730c:	eb03 0c8c 	add.w	ip, r3, ip, lsl #2
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007310:	4001      	ands	r1, r0
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007312:	f8dc 5028 	ldr.w	r5, [ip, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007316:	430a      	orrs	r2, r1
90007318:	61e2      	str	r2, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000731a:	6125      	str	r5, [r4, #16]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
9000731c:	e7e5      	b.n	900072ea <HAL_DMA2D_ConfigLayer+0x5a>
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
9000731e:	f006 457f 	and.w	r5, r6, #4278190080	@ 0xff000000
90007322:	432a      	orrs	r2, r5
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
90007324:	b959      	cbnz	r1, 9000733e <HAL_DMA2D_ConfigLayer+0xae>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007326:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90007328:	490c      	ldr	r1, [pc, #48]	@ (9000735c <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
9000732a:	6a9d      	ldr	r5, [r3, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
9000732c:	4001      	ands	r1, r0
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000732e:	6b58      	ldr	r0, [r3, #52]	@ 0x34
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007330:	4311      	orrs	r1, r2
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
90007332:	f020 407f 	bic.w	r0, r0, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
90007336:	6261      	str	r1, [r4, #36]	@ 0x24
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
90007338:	61a5      	str	r5, [r4, #24]
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
9000733a:	62a0      	str	r0, [r4, #40]	@ 0x28
9000733c:	e7d5      	b.n	900072ea <HAL_DMA2D_ConfigLayer+0x5a>
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
9000733e:	69e5      	ldr	r5, [r4, #28]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90007340:	f026 467f 	bic.w	r6, r6, #4278190080	@ 0xff000000
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007344:	4905      	ldr	r1, [pc, #20]	@ (9000735c <HAL_DMA2D_ConfigLayer+0xcc>)
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
90007346:	6a80      	ldr	r0, [r0, #40]	@ 0x28
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
90007348:	4029      	ands	r1, r5
9000734a:	4311      	orrs	r1, r2
9000734c:	61e1      	str	r1, [r4, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
9000734e:	6120      	str	r0, [r4, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
90007350:	6226      	str	r6, [r4, #32]
90007352:	e7ca      	b.n	900072ea <HAL_DMA2D_ConfigLayer+0x5a>
90007354:	4801      	ldr	r0, [pc, #4]	@ (9000735c <HAL_DMA2D_ConfigLayer+0xcc>)
90007356:	e7d6      	b.n	90007306 <HAL_DMA2D_ConfigLayer+0x76>
  __HAL_LOCK(hdma2d);
90007358:	2002      	movs	r0, #2
}
9000735a:	4770      	bx	lr
9000735c:	00ccfff0 	.word	0x00ccfff0
90007360:	00c0fff0 	.word	0x00c0fff0

90007364 <HAL_GPIO_Init>:
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90007364:	680b      	ldr	r3, [r1, #0]
90007366:	2b00      	cmp	r3, #0
90007368:	f000 81dc 	beq.w	90007724 <HAL_GPIO_Init+0x3c0>
9000736c:	4ab4      	ldr	r2, [pc, #720]	@ (90007640 <HAL_GPIO_Init+0x2dc>)
9000736e:	4290      	cmp	r0, r2
  uint32_t position = 0x00U;
90007370:	f04f 0200 	mov.w	r2, #0
{
90007374:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90007378:	f04f 0b01 	mov.w	fp, #1
{
9000737c:	b085      	sub	sp, #20
9000737e:	f000 8105 	beq.w	9000758c <HAL_GPIO_Init+0x228>
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
90007382:	f04f 4eb0 	mov.w	lr, #1476395008	@ 0x58000000
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90007386:	9300      	str	r3, [sp, #0]
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
90007388:	fa0b fc02 	lsl.w	ip, fp, r2
    if (iocurrent != 0x00U)
9000738c:	9b00      	ldr	r3, [sp, #0]
9000738e:	ea1c 0a03 	ands.w	sl, ip, r3
90007392:	f000 814b 	beq.w	9000762c <HAL_GPIO_Init+0x2c8>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007396:	684d      	ldr	r5, [r1, #4]
90007398:	0054      	lsls	r4, r2, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000739a:	2303      	movs	r3, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000739c:	f005 0703 	and.w	r7, r5, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900073a0:	fa03 f604 	lsl.w	r6, r3, r4
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
900073a4:	f107 38ff 	add.w	r8, r7, #4294967295
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900073a8:	43f6      	mvns	r6, r6
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
900073aa:	f1b8 0f01 	cmp.w	r8, #1
900073ae:	f240 815d 	bls.w	9000766c <HAL_GPIO_Init+0x308>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
900073b2:	2f03      	cmp	r7, #3
900073b4:	f040 81cf 	bne.w	90007756 <HAL_GPIO_Init+0x3f2>
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
900073b8:	fa07 f404 	lsl.w	r4, r7, r4
      temp = GPIOx->MODER;
900073bc:	6807      	ldr	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
900073be:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
900073c2:	ea06 0607 	and.w	r6, r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
900073c6:	ea44 0406 	orr.w	r4, r4, r6
      GPIOx->MODER = temp;
900073ca:	6004      	str	r4, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
900073cc:	f000 812e 	beq.w	9000762c <HAL_GPIO_Init+0x2c8>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900073d0:	4e9c      	ldr	r6, [pc, #624]	@ (90007644 <HAL_GPIO_Init+0x2e0>)
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900073d2:	f002 0703 	and.w	r7, r2, #3
900073d6:	230f      	movs	r3, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900073d8:	f8d6 40f4 	ldr.w	r4, [r6, #244]	@ 0xf4
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900073dc:	00bf      	lsls	r7, r7, #2
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900073de:	f044 0402 	orr.w	r4, r4, #2
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900073e2:	fa03 fc07 	lsl.w	ip, r3, r7
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900073e6:	4b98      	ldr	r3, [pc, #608]	@ (90007648 <HAL_GPIO_Init+0x2e4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900073e8:	f8c6 40f4 	str.w	r4, [r6, #244]	@ 0xf4
900073ec:	f8d6 40f4 	ldr.w	r4, [r6, #244]	@ 0xf4
900073f0:	f022 0603 	bic.w	r6, r2, #3
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900073f4:	4298      	cmp	r0, r3
900073f6:	f106 46b0 	add.w	r6, r6, #1476395008	@ 0x58000000
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900073fa:	f004 0402 	and.w	r4, r4, #2
900073fe:	f506 6680 	add.w	r6, r6, #1024	@ 0x400
90007402:	9403      	str	r4, [sp, #12]
90007404:	9c03      	ldr	r4, [sp, #12]
        temp = SYSCFG->EXTICR[position >> 2U];
90007406:	68b4      	ldr	r4, [r6, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007408:	ea24 040c 	bic.w	r4, r4, ip
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
9000740c:	f000 8178 	beq.w	90007700 <HAL_GPIO_Init+0x39c>
90007410:	4b8e      	ldr	r3, [pc, #568]	@ (9000764c <HAL_GPIO_Init+0x2e8>)
90007412:	4298      	cmp	r0, r3
90007414:	f000 80de 	beq.w	900075d4 <HAL_GPIO_Init+0x270>
90007418:	f8df c234 	ldr.w	ip, [pc, #564]	@ 90007650 <HAL_GPIO_Init+0x2ec>
9000741c:	4560      	cmp	r0, ip
9000741e:	f000 817b 	beq.w	90007718 <HAL_GPIO_Init+0x3b4>
90007422:	f8df c230 	ldr.w	ip, [pc, #560]	@ 90007654 <HAL_GPIO_Init+0x2f0>
90007426:	4560      	cmp	r0, ip
90007428:	f000 817d 	beq.w	90007726 <HAL_GPIO_Init+0x3c2>
9000742c:	f8df c228 	ldr.w	ip, [pc, #552]	@ 90007658 <HAL_GPIO_Init+0x2f4>
90007430:	4560      	cmp	r0, ip
90007432:	f000 816b 	beq.w	9000770c <HAL_GPIO_Init+0x3a8>
90007436:	f8df c224 	ldr.w	ip, [pc, #548]	@ 9000765c <HAL_GPIO_Init+0x2f8>
9000743a:	4560      	cmp	r0, ip
9000743c:	f000 8179 	beq.w	90007732 <HAL_GPIO_Init+0x3ce>
90007440:	f8df c21c 	ldr.w	ip, [pc, #540]	@ 90007660 <HAL_GPIO_Init+0x2fc>
90007444:	4560      	cmp	r0, ip
90007446:	f000 817a 	beq.w	9000773e <HAL_GPIO_Init+0x3da>
9000744a:	f8df c218 	ldr.w	ip, [pc, #536]	@ 90007664 <HAL_GPIO_Init+0x300>
9000744e:	4560      	cmp	r0, ip
90007450:	f000 817b 	beq.w	9000774a <HAL_GPIO_Init+0x3e6>
90007454:	f8df c210 	ldr.w	ip, [pc, #528]	@ 90007668 <HAL_GPIO_Init+0x304>
90007458:	4560      	cmp	r0, ip
9000745a:	bf0c      	ite	eq
9000745c:	f04f 0c09 	moveq.w	ip, #9
90007460:	f04f 0c0a 	movne.w	ip, #10
90007464:	fa0c f707 	lsl.w	r7, ip, r7
90007468:	433c      	orrs	r4, r7
9000746a:	e0b8      	b.n	900075de <HAL_GPIO_Init+0x27a>
        temp = GPIOx->OSPEEDR;
9000746c:	f8d0 9008 	ldr.w	r9, [r0, #8]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90007470:	2c02      	cmp	r4, #2
        temp |= (GPIO_Init->Speed << (position * 2U));
90007472:	68ce      	ldr	r6, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007474:	ea0a 0909 	and.w	r9, sl, r9
        temp |= (GPIO_Init->Speed << (position * 2U));
90007478:	fa06 f807 	lsl.w	r8, r6, r7
9000747c:	ea48 0809 	orr.w	r8, r8, r9
        GPIOx->OSPEEDR = temp;
90007480:	f8c0 8008 	str.w	r8, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90007484:	f3c5 1800 	ubfx	r8, r5, #4, #1
        temp = GPIOx->OTYPER;
90007488:	f8d0 9004 	ldr.w	r9, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000748c:	fa08 f802 	lsl.w	r8, r8, r2
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
90007490:	ea29 0e0e 	bic.w	lr, r9, lr
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90007494:	ea48 0e0e 	orr.w	lr, r8, lr
        GPIOx->OTYPER = temp;
90007498:	f8c0 e004 	str.w	lr, [r0, #4]
      temp = GPIOx->PUPDR;
9000749c:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900074a0:	688e      	ldr	r6, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900074a2:	ea0a 0808 	and.w	r8, sl, r8
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900074a6:	fa06 fe07 	lsl.w	lr, r6, r7
900074aa:	ea4e 0e08 	orr.w	lr, lr, r8
      GPIOx->PUPDR = temp;
900074ae:	f8c0 e00c 	str.w	lr, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900074b2:	d117      	bne.n	900074e4 <HAL_GPIO_Init+0x180>
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900074b4:	f002 0e07 	and.w	lr, r2, #7
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900074b8:	690e      	ldr	r6, [r1, #16]
        temp = GPIOx->AFR[position >> 3U];
900074ba:	ea4f 08d2 	mov.w	r8, r2, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900074be:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
900074c2:	eb00 0888 	add.w	r8, r0, r8, lsl #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900074c6:	fa06 f60e 	lsl.w	r6, r6, lr
        temp = GPIOx->AFR[position >> 3U];
900074ca:	f8d8 9020 	ldr.w	r9, [r8, #32]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900074ce:	9600      	str	r6, [sp, #0]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900074d0:	260f      	movs	r6, #15
900074d2:	fa06 fe0e 	lsl.w	lr, r6, lr
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900074d6:	9e00      	ldr	r6, [sp, #0]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900074d8:	ea29 090e 	bic.w	r9, r9, lr
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900074dc:	ea46 0e09 	orr.w	lr, r6, r9
        GPIOx->AFR[position >> 3U] = temp;
900074e0:	f8c8 e020 	str.w	lr, [r8, #32]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
900074e4:	40bc      	lsls	r4, r7
      temp = GPIOx->MODER;
900074e6:	6807      	ldr	r7, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
900074e8:	f415 3f40 	tst.w	r5, #196608	@ 0x30000
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
900074ec:	ea07 070a 	and.w	r7, r7, sl
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
900074f0:	ea44 0407 	orr.w	r4, r4, r7
      GPIOx->MODER = temp;
900074f4:	6004      	str	r4, [r0, #0]
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
900074f6:	d045      	beq.n	90007584 <HAL_GPIO_Init+0x220>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900074f8:	4f52      	ldr	r7, [pc, #328]	@ (90007644 <HAL_GPIO_Init+0x2e0>)
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
900074fa:	260f      	movs	r6, #15
        __HAL_RCC_SYSCFG_CLK_ENABLE();
900074fc:	f8d7 40f4 	ldr.w	r4, [r7, #244]	@ 0xf4
90007500:	f044 0402 	orr.w	r4, r4, #2
90007504:	f8c7 40f4 	str.w	r4, [r7, #244]	@ 0xf4
90007508:	f8d7 40f4 	ldr.w	r4, [r7, #244]	@ 0xf4
9000750c:	f022 0703 	bic.w	r7, r2, #3
90007510:	f004 0402 	and.w	r4, r4, #2
90007514:	f107 47b0 	add.w	r7, r7, #1476395008	@ 0x58000000
90007518:	9403      	str	r4, [sp, #12]
9000751a:	f507 6780 	add.w	r7, r7, #1024	@ 0x400
9000751e:	9c03      	ldr	r4, [sp, #12]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007520:	f002 0403 	and.w	r4, r2, #3
        temp = SYSCFG->EXTICR[position >> 2U];
90007524:	f8d7 e008 	ldr.w	lr, [r7, #8]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007528:	00a4      	lsls	r4, r4, #2
9000752a:	fa06 f404 	lsl.w	r4, r6, r4
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
9000752e:	02ee      	lsls	r6, r5, #11
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
90007530:	ea2e 0404 	bic.w	r4, lr, r4
        SYSCFG->EXTICR[position >> 2U] = temp;
90007534:	60bc      	str	r4, [r7, #8]
        temp = EXTI->RTSR1;
90007536:	f04f 44b0 	mov.w	r4, #1476395008	@ 0x58000000
        temp &= ~(iocurrent);
9000753a:	ea6f 070c 	mvn.w	r7, ip
        temp = EXTI->RTSR1;
9000753e:	6824      	ldr	r4, [r4, #0]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
90007540:	f100 80d2 	bmi.w	900076e8 <HAL_GPIO_Init+0x384>
        temp &= ~(iocurrent);
90007544:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI->RTSR1 = temp;
90007546:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
9000754a:	6034      	str	r4, [r6, #0]

        temp = EXTI->FTSR1;
9000754c:	6874      	ldr	r4, [r6, #4]
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
9000754e:	02ae      	lsls	r6, r5, #10
90007550:	f100 80d3 	bmi.w	900076fa <HAL_GPIO_Init+0x396>
        temp &= ~(iocurrent);
90007554:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI->FTSR1 = temp;
90007556:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
9000755a:	6074      	str	r4, [r6, #4]

        temp = EXTI_CurrentCPU->EMR1;
9000755c:	f8d6 4084 	ldr.w	r4, [r6, #132]	@ 0x84
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
90007560:	03ae      	lsls	r6, r5, #14
90007562:	f100 80c7 	bmi.w	900076f4 <HAL_GPIO_Init+0x390>
        temp &= ~(iocurrent);
90007566:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->EMR1 = temp;
90007568:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
        temp &= ~(iocurrent);
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
9000756c:	03ed      	lsls	r5, r5, #15
        EXTI_CurrentCPU->EMR1 = temp;
9000756e:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
        temp = EXTI_CurrentCPU->IMR1;
90007572:	f8d6 4080 	ldr.w	r4, [r6, #128]	@ 0x80
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
90007576:	f100 80ba 	bmi.w	900076ee <HAL_GPIO_Init+0x38a>
        temp &= ~(iocurrent);
9000757a:	403c      	ands	r4, r7
        {
          temp |= iocurrent;
        }
        EXTI_CurrentCPU->IMR1 = temp;
9000757c:	f04f 45b0 	mov.w	r5, #1476395008	@ 0x58000000
90007580:	f8c5 4080 	str.w	r4, [r5, #128]	@ 0x80
      }
    }

    position++;
90007584:	3201      	adds	r2, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
90007586:	fa33 f402 	lsrs.w	r4, r3, r2
9000758a:	d055      	beq.n	90007638 <HAL_GPIO_Init+0x2d4>
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
9000758c:	fa0b fe02 	lsl.w	lr, fp, r2
    if (iocurrent != 0x00U)
90007590:	ea13 0c0e 	ands.w	ip, r3, lr
90007594:	d0f6      	beq.n	90007584 <HAL_GPIO_Init+0x220>
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
90007596:	684d      	ldr	r5, [r1, #4]
90007598:	0057      	lsls	r7, r2, #1
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
9000759a:	2603      	movs	r6, #3
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
9000759c:	f005 0403 	and.w	r4, r5, #3
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
900075a0:	fa06 f807 	lsl.w	r8, r6, r7
900075a4:	ea6f 0a08 	mvn.w	sl, r8
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
900075a8:	f104 38ff 	add.w	r8, r4, #4294967295
900075ac:	f1b8 0f01 	cmp.w	r8, #1
900075b0:	f67f af5c 	bls.w	9000746c <HAL_GPIO_Init+0x108>
      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
900075b4:	2c03      	cmp	r4, #3
900075b6:	d095      	beq.n	900074e4 <HAL_GPIO_Init+0x180>
      temp = GPIOx->PUPDR;
900075b8:	f8df 8084 	ldr.w	r8, [pc, #132]	@ 90007640 <HAL_GPIO_Init+0x2dc>
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900075bc:	688e      	ldr	r6, [r1, #8]
      temp = GPIOx->PUPDR;
900075be:	f8d8 900c 	ldr.w	r9, [r8, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900075c2:	fa06 fe07 	lsl.w	lr, r6, r7
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900075c6:	ea0a 0909 	and.w	r9, sl, r9
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900075ca:	ea4e 0e09 	orr.w	lr, lr, r9
      GPIOx->PUPDR = temp;
900075ce:	f8c8 e00c 	str.w	lr, [r8, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900075d2:	e787      	b.n	900074e4 <HAL_GPIO_Init+0x180>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
900075d4:	f04f 0c02 	mov.w	ip, #2
900075d8:	fa0c f707 	lsl.w	r7, ip, r7
900075dc:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
900075de:	60b4      	str	r4, [r6, #8]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
900075e0:	02ef      	lsls	r7, r5, #11
        temp = EXTI->RTSR1;
900075e2:	f8de 4000 	ldr.w	r4, [lr]
        temp &= ~(iocurrent);
900075e6:	ea6f 060a 	mvn.w	r6, sl
          temp |= iocurrent;
900075ea:	bf4c      	ite	mi
900075ec:	ea4a 0404 	orrmi.w	r4, sl, r4
        temp &= ~(iocurrent);
900075f0:	4034      	andpl	r4, r6
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
900075f2:	02ab      	lsls	r3, r5, #10
        EXTI->RTSR1 = temp;
900075f4:	f8ce 4000 	str.w	r4, [lr]
        temp = EXTI->FTSR1;
900075f8:	f8de 4004 	ldr.w	r4, [lr, #4]
        temp &= ~(iocurrent);
900075fc:	bf54      	ite	pl
900075fe:	4034      	andpl	r4, r6
          temp |= iocurrent;
90007600:	ea4a 0404 	orrmi.w	r4, sl, r4
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
90007604:	03af      	lsls	r7, r5, #14
        EXTI->FTSR1 = temp;
90007606:	f8ce 4004 	str.w	r4, [lr, #4]
        temp = EXTI_CurrentCPU->EMR1;
9000760a:	f8de 4084 	ldr.w	r4, [lr, #132]	@ 0x84
        temp &= ~(iocurrent);
9000760e:	bf54      	ite	pl
90007610:	4034      	andpl	r4, r6
          temp |= iocurrent;
90007612:	ea4a 0404 	orrmi.w	r4, sl, r4
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
90007616:	03eb      	lsls	r3, r5, #15
        EXTI_CurrentCPU->EMR1 = temp;
90007618:	f8ce 4084 	str.w	r4, [lr, #132]	@ 0x84
        temp = EXTI_CurrentCPU->IMR1;
9000761c:	f8de 4080 	ldr.w	r4, [lr, #128]	@ 0x80
        temp &= ~(iocurrent);
90007620:	bf54      	ite	pl
90007622:	4034      	andpl	r4, r6
          temp |= iocurrent;
90007624:	ea4a 0404 	orrmi.w	r4, sl, r4
        EXTI_CurrentCPU->IMR1 = temp;
90007628:	f8ce 4080 	str.w	r4, [lr, #128]	@ 0x80
    position++;
9000762c:	3201      	adds	r2, #1
  while (((GPIO_Init->Pin) >> position) != 0x00U)
9000762e:	9b00      	ldr	r3, [sp, #0]
90007630:	fa33 f402 	lsrs.w	r4, r3, r2
90007634:	f47f aea8 	bne.w	90007388 <HAL_GPIO_Init+0x24>
  }
}
90007638:	b005      	add	sp, #20
9000763a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9000763e:	bf00      	nop
90007640:	58020000 	.word	0x58020000
90007644:	58024400 	.word	0x58024400
90007648:	58020400 	.word	0x58020400
9000764c:	58020800 	.word	0x58020800
90007650:	58020c00 	.word	0x58020c00
90007654:	58021000 	.word	0x58021000
90007658:	58021400 	.word	0x58021400
9000765c:	58021800 	.word	0x58021800
90007660:	58021c00 	.word	0x58021c00
90007664:	58022000 	.word	0x58022000
90007668:	58022400 	.word	0x58022400
        temp = GPIOx->OSPEEDR;
9000766c:	f8d0 9008 	ldr.w	r9, [r0, #8]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
90007670:	2f02      	cmp	r7, #2
        temp |= (GPIO_Init->Speed << (position * 2U));
90007672:	68cb      	ldr	r3, [r1, #12]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007674:	ea09 0906 	and.w	r9, r9, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
90007678:	fa03 f804 	lsl.w	r8, r3, r4
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000767c:	688b      	ldr	r3, [r1, #8]
        temp |= (GPIO_Init->Speed << (position * 2U));
9000767e:	ea48 0809 	orr.w	r8, r8, r9
        GPIOx->OSPEEDR = temp;
90007682:	f8c0 8008 	str.w	r8, [r0, #8]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90007686:	f3c5 1800 	ubfx	r8, r5, #4, #1
        temp = GPIOx->OTYPER;
9000768a:	f8d0 9004 	ldr.w	r9, [r0, #4]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
9000768e:	fa08 f802 	lsl.w	r8, r8, r2
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
90007692:	ea29 0c0c 	bic.w	ip, r9, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
90007696:	ea48 0c0c 	orr.w	ip, r8, ip
        GPIOx->OTYPER = temp;
9000769a:	f8c0 c004 	str.w	ip, [r0, #4]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000769e:	fa03 fc04 	lsl.w	ip, r3, r4
      temp = GPIOx->PUPDR;
900076a2:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
900076a6:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
900076aa:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
900076ae:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
900076b2:	f47f ae81 	bne.w	900073b8 <HAL_GPIO_Init+0x54>
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900076b6:	f002 0c07 	and.w	ip, r2, #7
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900076ba:	690b      	ldr	r3, [r1, #16]
        temp = GPIOx->AFR[position >> 3U];
900076bc:	ea4f 08d2 	mov.w	r8, r2, lsr #3
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900076c0:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
900076c4:	eb00 0888 	add.w	r8, r0, r8, lsl #2
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900076c8:	fa03 f30c 	lsl.w	r3, r3, ip
        temp = GPIOx->AFR[position >> 3U];
900076cc:	f8d8 9020 	ldr.w	r9, [r8, #32]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900076d0:	9301      	str	r3, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900076d2:	230f      	movs	r3, #15
900076d4:	fa03 fc0c 	lsl.w	ip, r3, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900076d8:	9b01      	ldr	r3, [sp, #4]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
900076da:	ea29 090c 	bic.w	r9, r9, ip
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
900076de:	ea43 0c09 	orr.w	ip, r3, r9
        GPIOx->AFR[position >> 3U] = temp;
900076e2:	f8c8 c020 	str.w	ip, [r8, #32]
900076e6:	e667      	b.n	900073b8 <HAL_GPIO_Init+0x54>
          temp |= iocurrent;
900076e8:	ea44 040c 	orr.w	r4, r4, ip
900076ec:	e72b      	b.n	90007546 <HAL_GPIO_Init+0x1e2>
          temp |= iocurrent;
900076ee:	ea44 040c 	orr.w	r4, r4, ip
900076f2:	e743      	b.n	9000757c <HAL_GPIO_Init+0x218>
          temp |= iocurrent;
900076f4:	ea4c 0404 	orr.w	r4, ip, r4
900076f8:	e736      	b.n	90007568 <HAL_GPIO_Init+0x204>
          temp |= iocurrent;
900076fa:	ea44 040c 	orr.w	r4, r4, ip
900076fe:	e72a      	b.n	90007556 <HAL_GPIO_Init+0x1f2>
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
90007700:	f04f 0c01 	mov.w	ip, #1
90007704:	fa0c f707 	lsl.w	r7, ip, r7
90007708:	433c      	orrs	r4, r7
9000770a:	e768      	b.n	900075de <HAL_GPIO_Init+0x27a>
9000770c:	f04f 0c05 	mov.w	ip, #5
90007710:	fa0c f707 	lsl.w	r7, ip, r7
90007714:	433c      	orrs	r4, r7
90007716:	e762      	b.n	900075de <HAL_GPIO_Init+0x27a>
90007718:	f04f 0c03 	mov.w	ip, #3
9000771c:	fa0c f707 	lsl.w	r7, ip, r7
90007720:	433c      	orrs	r4, r7
90007722:	e75c      	b.n	900075de <HAL_GPIO_Init+0x27a>
90007724:	4770      	bx	lr
90007726:	f04f 0c04 	mov.w	ip, #4
9000772a:	fa0c f707 	lsl.w	r7, ip, r7
9000772e:	433c      	orrs	r4, r7
90007730:	e755      	b.n	900075de <HAL_GPIO_Init+0x27a>
90007732:	f04f 0c06 	mov.w	ip, #6
90007736:	fa0c f707 	lsl.w	r7, ip, r7
9000773a:	433c      	orrs	r4, r7
9000773c:	e74f      	b.n	900075de <HAL_GPIO_Init+0x27a>
9000773e:	f04f 0c07 	mov.w	ip, #7
90007742:	fa0c f707 	lsl.w	r7, ip, r7
90007746:	433c      	orrs	r4, r7
90007748:	e749      	b.n	900075de <HAL_GPIO_Init+0x27a>
9000774a:	f04f 0c08 	mov.w	ip, #8
9000774e:	fa0c f707 	lsl.w	r7, ip, r7
90007752:	433c      	orrs	r4, r7
90007754:	e743      	b.n	900075de <HAL_GPIO_Init+0x27a>
      temp = GPIOx->PUPDR;
90007756:	f8d0 800c 	ldr.w	r8, [r0, #12]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
9000775a:	688b      	ldr	r3, [r1, #8]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
9000775c:	ea08 0806 	and.w	r8, r8, r6
      temp |= ((GPIO_Init->Pull) << (position * 2U));
90007760:	fa03 fc04 	lsl.w	ip, r3, r4
90007764:	ea4c 0c08 	orr.w	ip, ip, r8
      GPIOx->PUPDR = temp;
90007768:	f8c0 c00c 	str.w	ip, [r0, #12]
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
9000776c:	e624      	b.n	900073b8 <HAL_GPIO_Init+0x54>
9000776e:	bf00      	nop

90007770 <HAL_GPIO_DeInit>:
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
90007770:	2900      	cmp	r1, #0
90007772:	f000 810c 	beq.w	9000798e <HAL_GPIO_DeInit+0x21e>
90007776:	4b8b      	ldr	r3, [pc, #556]	@ (900079a4 <HAL_GPIO_DeInit+0x234>)
90007778:	4298      	cmp	r0, r3
{
9000777a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000777e:	f000 809a 	beq.w	900078b6 <HAL_GPIO_DeInit+0x146>
  uint32_t position = 0x00U;
90007782:	2300      	movs	r3, #0
    if (iocurrent != 0x00U)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
90007784:	f04f 090f 	mov.w	r9, #15
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007788:	f04f 0a03 	mov.w	sl, #3
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
9000778c:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
    iocurrent = GPIO_Pin & (1UL << position) ;
90007790:	2201      	movs	r2, #1
90007792:	409a      	lsls	r2, r3
    if (iocurrent != 0x00U)
90007794:	ea12 0e01 	ands.w	lr, r2, r1
90007798:	d077      	beq.n	9000788a <HAL_GPIO_DeInit+0x11a>
      tmp = SYSCFG->EXTICR[position >> 2U];
9000779a:	f023 0503 	bic.w	r5, r3, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
9000779e:	f003 0403 	and.w	r4, r3, #3
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900077a2:	4f81      	ldr	r7, [pc, #516]	@ (900079a8 <HAL_GPIO_DeInit+0x238>)
900077a4:	f105 45b0 	add.w	r5, r5, #1476395008	@ 0x58000000
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900077a8:	00a4      	lsls	r4, r4, #2
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900077aa:	42b8      	cmp	r0, r7
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900077ac:	fa09 f804 	lsl.w	r8, r9, r4
      tmp = SYSCFG->EXTICR[position >> 2U];
900077b0:	f8d5 c408 	ldr.w	ip, [r5, #1032]	@ 0x408
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900077b4:	f505 6580 	add.w	r5, r5, #1024	@ 0x400
900077b8:	ea08 0c0c 	and.w	ip, r8, ip
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900077bc:	d027      	beq.n	9000780e <HAL_GPIO_DeInit+0x9e>
900077be:	4f7b      	ldr	r7, [pc, #492]	@ (900079ac <HAL_GPIO_DeInit+0x23c>)
900077c0:	42b8      	cmp	r0, r7
900077c2:	d06e      	beq.n	900078a2 <HAL_GPIO_DeInit+0x132>
900077c4:	4f7a      	ldr	r7, [pc, #488]	@ (900079b0 <HAL_GPIO_DeInit+0x240>)
900077c6:	42b8      	cmp	r0, r7
900077c8:	d070      	beq.n	900078ac <HAL_GPIO_DeInit+0x13c>
900077ca:	4f7a      	ldr	r7, [pc, #488]	@ (900079b4 <HAL_GPIO_DeInit+0x244>)
900077cc:	42b8      	cmp	r0, r7
900077ce:	d063      	beq.n	90007898 <HAL_GPIO_DeInit+0x128>
900077d0:	f8df b1e8 	ldr.w	fp, [pc, #488]	@ 900079bc <HAL_GPIO_DeInit+0x24c>
900077d4:	4558      	cmp	r0, fp
900077d6:	f000 80d5 	beq.w	90007984 <HAL_GPIO_DeInit+0x214>
900077da:	f8df b1e4 	ldr.w	fp, [pc, #484]	@ 900079c0 <HAL_GPIO_DeInit+0x250>
900077de:	4558      	cmp	r0, fp
900077e0:	f000 80d6 	beq.w	90007990 <HAL_GPIO_DeInit+0x220>
900077e4:	f8df b1dc 	ldr.w	fp, [pc, #476]	@ 900079c4 <HAL_GPIO_DeInit+0x254>
900077e8:	4558      	cmp	r0, fp
900077ea:	f000 80c6 	beq.w	9000797a <HAL_GPIO_DeInit+0x20a>
900077ee:	f8df b1d8 	ldr.w	fp, [pc, #472]	@ 900079c8 <HAL_GPIO_DeInit+0x258>
900077f2:	4558      	cmp	r0, fp
900077f4:	f000 80d1 	beq.w	9000799a <HAL_GPIO_DeInit+0x22a>
900077f8:	f8df b1d0 	ldr.w	fp, [pc, #464]	@ 900079cc <HAL_GPIO_DeInit+0x25c>
900077fc:	4558      	cmp	r0, fp
900077fe:	bf0c      	ite	eq
90007800:	f04f 0b09 	moveq.w	fp, #9
90007804:	f04f 0b0a 	movne.w	fp, #10
90007808:	fa0b f404 	lsl.w	r4, fp, r4
9000780c:	e002      	b.n	90007814 <HAL_GPIO_DeInit+0xa4>
9000780e:	2701      	movs	r7, #1
90007810:	fa07 f404 	lsl.w	r4, r7, r4
90007814:	45a4      	cmp	ip, r4
90007816:	d117      	bne.n	90007848 <HAL_GPIO_DeInit+0xd8>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
90007818:	f8d6 4080 	ldr.w	r4, [r6, #128]	@ 0x80
9000781c:	ea24 040e 	bic.w	r4, r4, lr
90007820:	f8c6 4080 	str.w	r4, [r6, #128]	@ 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
90007824:	f8d6 4084 	ldr.w	r4, [r6, #132]	@ 0x84
90007828:	ea24 040e 	bic.w	r4, r4, lr
9000782c:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
        EXTI->FTSR1 &= ~(iocurrent);
90007830:	6874      	ldr	r4, [r6, #4]
90007832:	ea24 040e 	bic.w	r4, r4, lr
90007836:	6074      	str	r4, [r6, #4]
        EXTI->RTSR1 &= ~(iocurrent);
90007838:	6834      	ldr	r4, [r6, #0]
9000783a:	ea24 040e 	bic.w	r4, r4, lr
9000783e:	6034      	str	r4, [r6, #0]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
90007840:	68ac      	ldr	r4, [r5, #8]
90007842:	ea24 0408 	bic.w	r4, r4, r8
90007846:	60ac      	str	r4, [r5, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007848:	005d      	lsls	r5, r3, #1
9000784a:	6804      	ldr	r4, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000784c:	ea4f 0cd3 	mov.w	ip, r3, lsr #3
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007850:	fa0a f505 	lsl.w	r5, sl, r5
90007854:	eb00 0c8c 	add.w	ip, r0, ip, lsl #2
90007858:	432c      	orrs	r4, r5
9000785a:	6004      	str	r4, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000785c:	f003 0407 	and.w	r4, r3, #7
90007860:	f8dc e020 	ldr.w	lr, [ip, #32]
90007864:	00a4      	lsls	r4, r4, #2
90007866:	fa09 f404 	lsl.w	r4, r9, r4
9000786a:	ea2e 0404 	bic.w	r4, lr, r4
9000786e:	f8cc 4020 	str.w	r4, [ip, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90007872:	68c4      	ldr	r4, [r0, #12]
90007874:	ea24 0405 	bic.w	r4, r4, r5
90007878:	60c4      	str	r4, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
9000787a:	6844      	ldr	r4, [r0, #4]
9000787c:	ea24 0202 	bic.w	r2, r4, r2
90007880:	6042      	str	r2, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007882:	6882      	ldr	r2, [r0, #8]
90007884:	ea22 0205 	bic.w	r2, r2, r5
90007888:	6082      	str	r2, [r0, #8]
    }

    position++;
9000788a:	3301      	adds	r3, #1
  while ((GPIO_Pin >> position) != 0x00U)
9000788c:	fa31 f203 	lsrs.w	r2, r1, r3
90007890:	f47f af7e 	bne.w	90007790 <HAL_GPIO_DeInit+0x20>
  }
}
90007894:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
90007898:	f04f 0b04 	mov.w	fp, #4
9000789c:	fa0b f404 	lsl.w	r4, fp, r4
900078a0:	e7b8      	b.n	90007814 <HAL_GPIO_DeInit+0xa4>
900078a2:	f04f 0b02 	mov.w	fp, #2
900078a6:	fa0b f404 	lsl.w	r4, fp, r4
900078aa:	e7b3      	b.n	90007814 <HAL_GPIO_DeInit+0xa4>
900078ac:	f04f 0b03 	mov.w	fp, #3
900078b0:	fa0b f404 	lsl.w	r4, fp, r4
900078b4:	e7ae      	b.n	90007814 <HAL_GPIO_DeInit+0xa4>
  uint32_t position = 0x00U;
900078b6:	2200      	movs	r2, #0
    iocurrent = GPIO_Pin & (1UL << position) ;
900078b8:	f04f 0c01 	mov.w	ip, #1
900078bc:	4f3e      	ldr	r7, [pc, #248]	@ (900079b8 <HAL_GPIO_DeInit+0x248>)
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900078be:	250f      	movs	r5, #15
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
900078c0:	f04f 46b0 	mov.w	r6, #1476395008	@ 0x58000000
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
900078c4:	f04f 0e03 	mov.w	lr, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900078c8:	f002 0303 	and.w	r3, r2, #3
    iocurrent = GPIO_Pin & (1UL << position) ;
900078cc:	fa0c f402 	lsl.w	r4, ip, r2
    if (iocurrent != 0x00U)
900078d0:	f022 0803 	bic.w	r8, r2, #3
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900078d4:	009b      	lsls	r3, r3, #2
    if (iocurrent != 0x00U)
900078d6:	ea11 0904 	ands.w	r9, r1, r4
900078da:	44b8      	add	r8, r7
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
900078dc:	fa05 f303 	lsl.w	r3, r5, r3
    if (iocurrent != 0x00U)
900078e0:	d045      	beq.n	9000796e <HAL_GPIO_DeInit+0x1fe>
      tmp = SYSCFG->EXTICR[position >> 2U];
900078e2:	f8d8 a008 	ldr.w	sl, [r8, #8]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
900078e6:	ea13 0f0a 	tst.w	r3, sl
900078ea:	d11d      	bne.n	90007928 <HAL_GPIO_DeInit+0x1b8>
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
900078ec:	f8d6 a080 	ldr.w	sl, [r6, #128]	@ 0x80
900078f0:	ea2a 0a09 	bic.w	sl, sl, r9
900078f4:	f8c6 a080 	str.w	sl, [r6, #128]	@ 0x80
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
900078f8:	f8d6 a084 	ldr.w	sl, [r6, #132]	@ 0x84
900078fc:	ea2a 0a09 	bic.w	sl, sl, r9
90007900:	f8c6 a084 	str.w	sl, [r6, #132]	@ 0x84
        EXTI->FTSR1 &= ~(iocurrent);
90007904:	f8d6 a004 	ldr.w	sl, [r6, #4]
90007908:	ea2a 0a09 	bic.w	sl, sl, r9
9000790c:	f8c6 a004 	str.w	sl, [r6, #4]
        EXTI->RTSR1 &= ~(iocurrent);
90007910:	f8d6 a000 	ldr.w	sl, [r6]
90007914:	ea2a 0909 	bic.w	r9, sl, r9
90007918:	f8c6 9000 	str.w	r9, [r6]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
9000791c:	f8d8 9008 	ldr.w	r9, [r8, #8]
90007920:	ea29 0303 	bic.w	r3, r9, r3
90007924:	f8c8 3008 	str.w	r3, [r8, #8]
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007928:	ea4f 0842 	mov.w	r8, r2, lsl #1
9000792c:	6803      	ldr	r3, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
9000792e:	ea4f 09d2 	mov.w	r9, r2, lsr #3
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
90007932:	fa0e f808 	lsl.w	r8, lr, r8
90007936:	eb00 0989 	add.w	r9, r0, r9, lsl #2
9000793a:	ea43 0308 	orr.w	r3, r3, r8
9000793e:	6003      	str	r3, [r0, #0]
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
90007940:	f002 0307 	and.w	r3, r2, #7
90007944:	f8d9 a020 	ldr.w	sl, [r9, #32]
90007948:	009b      	lsls	r3, r3, #2
9000794a:	fa05 f303 	lsl.w	r3, r5, r3
9000794e:	ea2a 0303 	bic.w	r3, sl, r3
90007952:	f8c9 3020 	str.w	r3, [r9, #32]
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
90007956:	68c3      	ldr	r3, [r0, #12]
90007958:	ea23 0308 	bic.w	r3, r3, r8
9000795c:	60c3      	str	r3, [r0, #12]
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
9000795e:	6843      	ldr	r3, [r0, #4]
90007960:	ea23 0304 	bic.w	r3, r3, r4
90007964:	6043      	str	r3, [r0, #4]
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
90007966:	6883      	ldr	r3, [r0, #8]
90007968:	ea23 0308 	bic.w	r3, r3, r8
9000796c:	6083      	str	r3, [r0, #8]
    position++;
9000796e:	3201      	adds	r2, #1
  while ((GPIO_Pin >> position) != 0x00U)
90007970:	fa31 f302 	lsrs.w	r3, r1, r2
90007974:	d1a8      	bne.n	900078c8 <HAL_GPIO_DeInit+0x158>
}
90007976:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
9000797a:	f04f 0b07 	mov.w	fp, #7
9000797e:	fa0b f404 	lsl.w	r4, fp, r4
90007982:	e747      	b.n	90007814 <HAL_GPIO_DeInit+0xa4>
90007984:	f04f 0b05 	mov.w	fp, #5
90007988:	fa0b f404 	lsl.w	r4, fp, r4
9000798c:	e742      	b.n	90007814 <HAL_GPIO_DeInit+0xa4>
9000798e:	4770      	bx	lr
90007990:	f04f 0b06 	mov.w	fp, #6
90007994:	fa0b f404 	lsl.w	r4, fp, r4
90007998:	e73c      	b.n	90007814 <HAL_GPIO_DeInit+0xa4>
9000799a:	f04f 0b08 	mov.w	fp, #8
9000799e:	fa0b f404 	lsl.w	r4, fp, r4
900079a2:	e737      	b.n	90007814 <HAL_GPIO_DeInit+0xa4>
900079a4:	58020000 	.word	0x58020000
900079a8:	58020400 	.word	0x58020400
900079ac:	58020800 	.word	0x58020800
900079b0:	58020c00 	.word	0x58020c00
900079b4:	58021000 	.word	0x58021000
900079b8:	58000400 	.word	0x58000400
900079bc:	58021400 	.word	0x58021400
900079c0:	58021800 	.word	0x58021800
900079c4:	58021c00 	.word	0x58021c00
900079c8:	58022000 	.word	0x58022000
900079cc:	58022400 	.word	0x58022400

900079d0 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
900079d0:	6903      	ldr	r3, [r0, #16]
900079d2:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
900079d4:	bf14      	ite	ne
900079d6:	2001      	movne	r0, #1
900079d8:	2000      	moveq	r0, #0
900079da:	4770      	bx	lr

900079dc <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
900079dc:	b902      	cbnz	r2, 900079e0 <HAL_GPIO_WritePin+0x4>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
900079de:	0409      	lsls	r1, r1, #16
900079e0:	6181      	str	r1, [r0, #24]
  }
}
900079e2:	4770      	bx	lr

900079e4 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
900079e4:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
900079e6:	ea01 0203 	and.w	r2, r1, r3
900079ea:	ea21 0103 	bic.w	r1, r1, r3
900079ee:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
900079f2:	6181      	str	r1, [r0, #24]
}
900079f4:	4770      	bx	lr
900079f6:	bf00      	nop

900079f8 <I2C_WaitOnFlagUntilTimeout.constprop.0>:
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
                                                    uint32_t Timeout, uint32_t Tickstart)
{
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
900079f8:	6803      	ldr	r3, [r0, #0]
900079fa:	699a      	ldr	r2, [r3, #24]
900079fc:	0412      	lsls	r2, r2, #16
900079fe:	f140 8097 	bpl.w	90007b30 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x138>
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
90007a02:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90007a06:	4604      	mov	r4, r0
90007a08:	460e      	mov	r6, r1
  HAL_I2C_ModeTypeDef tmp2;

  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007a0a:	2710      	movs	r7, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90007a0c:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90007a0e:	f012 0810 	ands.w	r8, r2, #16
90007a12:	d07f      	beq.n	90007b14 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x11c>
  uint32_t tickstart = Tickstart;
90007a14:	4635      	mov	r5, r6
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007a16:	61df      	str	r7, [r3, #28]

    /* Wait until STOP Flag is set or timeout occurred */
    /* AutoEnd should be initiate after AF */
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007a18:	699a      	ldr	r2, [r3, #24]
90007a1a:	f012 0820 	ands.w	r8, r2, #32
90007a1e:	d17b      	bne.n	90007b18 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x120>
    {
      /* Check for the Timeout */
      if (Timeout != HAL_MAX_DELAY)
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007a20:	f7ff fa22 	bl	90006e68 <HAL_GetTick>
90007a24:	1b40      	subs	r0, r0, r5
        {
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007a26:	6823      	ldr	r3, [r4, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007a28:	2819      	cmp	r0, #25
90007a2a:	d83d      	bhi.n	90007aa8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xb0>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007a2c:	699a      	ldr	r2, [r3, #24]
90007a2e:	0690      	lsls	r0, r2, #26
90007a30:	d5f6      	bpl.n	90007a20 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x28>

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90007a32:	2220      	movs	r2, #32
90007a34:	61da      	str	r2, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
90007a36:	f048 0804 	orr.w	r8, r8, #4

    status = HAL_ERROR;
90007a3a:	2501      	movs	r5, #1
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
90007a3c:	699a      	ldr	r2, [r3, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90007a3e:	05d1      	lsls	r1, r2, #23
90007a40:	d552      	bpl.n	90007ae8 <I2C_WaitOnFlagUntilTimeout.constprop.0+0xf0>
  {
    error_code |= HAL_I2C_ERROR_BERR;

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007a42:	f44f 7180 	mov.w	r1, #256	@ 0x100

    status = HAL_ERROR;
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007a46:	0555      	lsls	r5, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90007a48:	f048 0801 	orr.w	r8, r8, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007a4c:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007a4e:	d504      	bpl.n	90007a5a <I2C_WaitOnFlagUntilTimeout.constprop.0+0x62>
  {
    error_code |= HAL_I2C_ERROR_OVR;

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007a50:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90007a54:	f048 0808 	orr.w	r8, r8, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007a58:	61d9      	str	r1, [r3, #28]

    status = HAL_ERROR;
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007a5a:	0591      	lsls	r1, r2, #22
90007a5c:	d504      	bpl.n	90007a68 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x70>
  {
    error_code |= HAL_I2C_ERROR_ARLO;

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007a5e:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90007a62:	f048 0802 	orr.w	r8, r8, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007a66:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90007a68:	699a      	ldr	r2, [r3, #24]
90007a6a:	0795      	lsls	r5, r2, #30
90007a6c:	d501      	bpl.n	90007a72 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x7a>
    hi2c->Instance->TXDR = 0x00U;
90007a6e:	2200      	movs	r2, #0
90007a70:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90007a72:	699a      	ldr	r2, [r3, #24]
90007a74:	07d0      	lsls	r0, r2, #31
90007a76:	d403      	bmi.n	90007a80 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x88>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90007a78:	699a      	ldr	r2, [r3, #24]
90007a7a:	f042 0201 	orr.w	r2, r2, #1
90007a7e:	619a      	str	r2, [r3, #24]
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
90007a80:	685a      	ldr	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
    hi2c->State = HAL_I2C_STATE_READY;
90007a82:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90007a84:	4d2b      	ldr	r5, [pc, #172]	@ (90007b34 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x13c>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007a86:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90007a88:	402a      	ands	r2, r5
90007a8a:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90007a8c:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90007a8e:	ea43 0308 	orr.w	r3, r3, r8
90007a92:	6463      	str	r3, [r4, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90007a94:	f884 0041 	strb.w	r0, [r4, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007a98:	f884 1042 	strb.w	r1, [r4, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90007a9c:	2300      	movs	r3, #0
      return HAL_ERROR;
90007a9e:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90007aa0:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
}
90007aa4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007aa8:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90007aaa:	f894 2042 	ldrb.w	r2, [r4, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007aae:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90007ab0:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007ab2:	0409      	lsls	r1, r1, #16
90007ab4:	d50b      	bpl.n	90007ace <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
              (tmp1 != I2C_CR2_STOP) && \
90007ab6:	0441      	lsls	r1, r0, #17
90007ab8:	d409      	bmi.n	90007ace <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
90007aba:	2a20      	cmp	r2, #32
90007abc:	d007      	beq.n	90007ace <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90007abe:	685a      	ldr	r2, [r3, #4]
90007ac0:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90007ac4:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90007ac6:	f7ff f9cf 	bl	90006e68 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007aca:	6823      	ldr	r3, [r4, #0]
            tickstart = HAL_GetTick();
90007acc:	4605      	mov	r5, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007ace:	699a      	ldr	r2, [r3, #24]
90007ad0:	0690      	lsls	r0, r2, #26
90007ad2:	d4a1      	bmi.n	90007a18 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x20>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007ad4:	f7ff f9c8 	bl	90006e68 <HAL_GetTick>
90007ad8:	1b40      	subs	r0, r0, r5
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007ada:	6823      	ldr	r3, [r4, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007adc:	2819      	cmp	r0, #25
90007ade:	d9f6      	bls.n	90007ace <I2C_WaitOnFlagUntilTimeout.constprop.0+0xd6>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007ae0:	f04f 0820 	mov.w	r8, #32
90007ae4:	699a      	ldr	r2, [r3, #24]
90007ae6:	e7a6      	b.n	90007a36 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x3e>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007ae8:	0550      	lsls	r0, r2, #21
90007aea:	d4b1      	bmi.n	90007a50 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x58>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007aec:	0592      	lsls	r2, r2, #22
90007aee:	d4b6      	bmi.n	90007a5e <I2C_WaitOnFlagUntilTimeout.constprop.0+0x66>
  if (status != HAL_OK)
90007af0:	2d00      	cmp	r5, #0
90007af2:	d1b9      	bne.n	90007a68 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x70>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007af4:	f7ff f9b8 	bl	90006e68 <HAL_GetTick>
90007af8:	1b80      	subs	r0, r0, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90007afa:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007afc:	2819      	cmp	r0, #25
90007afe:	d902      	bls.n	90007b06 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x10e>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90007b00:	699a      	ldr	r2, [r3, #24]
90007b02:	0411      	lsls	r1, r2, #16
90007b04:	d40b      	bmi.n	90007b1e <I2C_WaitOnFlagUntilTimeout.constprop.0+0x126>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90007b06:	699a      	ldr	r2, [r3, #24]
90007b08:	0412      	lsls	r2, r2, #16
90007b0a:	f53f af7f 	bmi.w	90007a0c <I2C_WaitOnFlagUntilTimeout.constprop.0+0x14>
  return HAL_OK;
90007b0e:	2000      	movs	r0, #0
}
90007b10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  HAL_StatusTypeDef status = HAL_OK;
90007b14:	4645      	mov	r5, r8
90007b16:	e791      	b.n	90007a3c <I2C_WaitOnFlagUntilTimeout.constprop.0+0x44>
90007b18:	f04f 0800 	mov.w	r8, #0
90007b1c:	e789      	b.n	90007a32 <I2C_WaitOnFlagUntilTimeout.constprop.0+0x3a>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007b1e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007b20:	2220      	movs	r2, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007b22:	4313      	orrs	r3, r2
90007b24:	6463      	str	r3, [r4, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007b26:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90007b2a:	f884 5042 	strb.w	r5, [r4, #66]	@ 0x42
          return HAL_ERROR;
90007b2e:	e7b5      	b.n	90007a9c <I2C_WaitOnFlagUntilTimeout.constprop.0+0xa4>
  return HAL_OK;
90007b30:	2000      	movs	r0, #0
}
90007b32:	4770      	bx	lr
90007b34:	fe00e800 	.word	0xfe00e800

90007b38 <I2C_WaitOnTXISFlagUntilTimeout>:
{
90007b38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90007b3c:	6803      	ldr	r3, [r0, #0]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007b3e:	2710      	movs	r7, #16
{
90007b40:	4605      	mov	r5, r0
90007b42:	460e      	mov	r6, r1
90007b44:	4690      	mov	r8, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
90007b46:	699a      	ldr	r2, [r3, #24]
90007b48:	f012 0202 	ands.w	r2, r2, #2
90007b4c:	d168      	bne.n	90007c20 <I2C_WaitOnTXISFlagUntilTimeout+0xe8>
  uint32_t itflag   = hi2c->Instance->ISR;
90007b4e:	6999      	ldr	r1, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90007b50:	f011 0c10 	ands.w	ip, r1, #16
90007b54:	d062      	beq.n	90007c1c <I2C_WaitOnTXISFlagUntilTimeout+0xe4>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007b56:	1c74      	adds	r4, r6, #1
90007b58:	61df      	str	r7, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007b5a:	d166      	bne.n	90007c2a <I2C_WaitOnTXISFlagUntilTimeout+0xf2>
90007b5c:	699c      	ldr	r4, [r3, #24]
90007b5e:	f014 0420 	ands.w	r4, r4, #32
90007b62:	d160      	bne.n	90007c26 <I2C_WaitOnTXISFlagUntilTimeout+0xee>
90007b64:	699a      	ldr	r2, [r3, #24]
90007b66:	0691      	lsls	r1, r2, #26
90007b68:	d5fc      	bpl.n	90007b64 <I2C_WaitOnTXISFlagUntilTimeout+0x2c>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90007b6a:	2220      	movs	r2, #32
90007b6c:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90007b6e:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90007b72:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
90007b74:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90007b76:	05d0      	lsls	r0, r2, #23
90007b78:	d532      	bpl.n	90007be0 <I2C_WaitOnTXISFlagUntilTimeout+0xa8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007b7a:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007b7e:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90007b80:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007b84:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007b86:	d504      	bpl.n	90007b92 <I2C_WaitOnTXISFlagUntilTimeout+0x5a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007b88:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90007b8c:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007b90:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007b92:	0596      	lsls	r6, r2, #22
90007b94:	d504      	bpl.n	90007ba0 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007b96:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90007b9a:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007b9e:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90007ba0:	699a      	ldr	r2, [r3, #24]
90007ba2:	0790      	lsls	r0, r2, #30
90007ba4:	d501      	bpl.n	90007baa <I2C_WaitOnTXISFlagUntilTimeout+0x72>
    hi2c->Instance->TXDR = 0x00U;
90007ba6:	2200      	movs	r2, #0
90007ba8:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90007baa:	699a      	ldr	r2, [r3, #24]
90007bac:	07d1      	lsls	r1, r2, #31
90007bae:	d403      	bmi.n	90007bb8 <I2C_WaitOnTXISFlagUntilTimeout+0x80>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90007bb0:	699a      	ldr	r2, [r3, #24]
90007bb2:	f042 0201 	orr.w	r2, r2, #1
90007bb6:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90007bb8:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90007bba:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90007bbc:	4c38      	ldr	r4, [pc, #224]	@ (90007ca0 <I2C_WaitOnTXISFlagUntilTimeout+0x168>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007bbe:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90007bc0:	4022      	ands	r2, r4
90007bc2:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90007bc4:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
90007bc6:	ea43 030c 	orr.w	r3, r3, ip
90007bca:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90007bcc:	f885 0041 	strb.w	r0, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007bd0:	f885 1042 	strb.w	r1, [r5, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90007bd4:	2300      	movs	r3, #0
      return HAL_ERROR;
90007bd6:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90007bd8:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90007bdc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007be0:	0550      	lsls	r0, r2, #21
90007be2:	d4d1      	bmi.n	90007b88 <I2C_WaitOnTXISFlagUntilTimeout+0x50>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007be4:	0594      	lsls	r4, r2, #22
90007be6:	d4d6      	bmi.n	90007b96 <I2C_WaitOnTXISFlagUntilTimeout+0x5e>
  if (status != HAL_OK)
90007be8:	2900      	cmp	r1, #0
90007bea:	d1d9      	bne.n	90007ba0 <I2C_WaitOnTXISFlagUntilTimeout+0x68>
    if (Timeout != HAL_MAX_DELAY)
90007bec:	1c72      	adds	r2, r6, #1
90007bee:	d0aa      	beq.n	90007b46 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007bf0:	f7ff f93a 	bl	90006e68 <HAL_GetTick>
90007bf4:	eba0 0308 	sub.w	r3, r0, r8
90007bf8:	42b3      	cmp	r3, r6
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90007bfa:	682b      	ldr	r3, [r5, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007bfc:	d801      	bhi.n	90007c02 <I2C_WaitOnTXISFlagUntilTimeout+0xca>
90007bfe:	2e00      	cmp	r6, #0
90007c00:	d1a1      	bne.n	90007b46 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
90007c02:	699a      	ldr	r2, [r3, #24]
90007c04:	f012 0202 	ands.w	r2, r2, #2
90007c08:	d19d      	bne.n	90007b46 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007c0a:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007c0c:	2120      	movs	r1, #32
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007c0e:	430b      	orrs	r3, r1
90007c10:	646b      	str	r3, [r5, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007c12:	f885 1041 	strb.w	r1, [r5, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90007c16:	f885 2042 	strb.w	r2, [r5, #66]	@ 0x42
          return HAL_ERROR;
90007c1a:	e7db      	b.n	90007bd4 <I2C_WaitOnTXISFlagUntilTimeout+0x9c>
  HAL_StatusTypeDef status = HAL_OK;
90007c1c:	4661      	mov	r1, ip
90007c1e:	e7a9      	b.n	90007b74 <I2C_WaitOnTXISFlagUntilTimeout+0x3c>
  return HAL_OK;
90007c20:	2000      	movs	r0, #0
}
90007c22:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007c26:	4614      	mov	r4, r2
90007c28:	e79f      	b.n	90007b6a <I2C_WaitOnTXISFlagUntilTimeout+0x32>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007c2a:	4614      	mov	r4, r2
90007c2c:	46c1      	mov	r9, r8
90007c2e:	4692      	mov	sl, r2
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007c30:	699a      	ldr	r2, [r3, #24]
90007c32:	0692      	lsls	r2, r2, #26
90007c34:	d40e      	bmi.n	90007c54 <I2C_WaitOnTXISFlagUntilTimeout+0x11c>
90007c36:	f1ba 0f00 	cmp.w	sl, #0
90007c3a:	d198      	bne.n	90007b6e <I2C_WaitOnTXISFlagUntilTimeout+0x36>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007c3c:	f7ff f914 	bl	90006e68 <HAL_GetTick>
90007c40:	eba0 0309 	sub.w	r3, r0, r9
90007c44:	429e      	cmp	r6, r3
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007c46:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007c48:	d308      	bcc.n	90007c5c <I2C_WaitOnTXISFlagUntilTimeout+0x124>
90007c4a:	b13e      	cbz	r6, 90007c5c <I2C_WaitOnTXISFlagUntilTimeout+0x124>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007c4c:	699a      	ldr	r2, [r3, #24]
90007c4e:	0690      	lsls	r0, r2, #26
90007c50:	d5f4      	bpl.n	90007c3c <I2C_WaitOnTXISFlagUntilTimeout+0x104>
90007c52:	e78a      	b.n	90007b6a <I2C_WaitOnTXISFlagUntilTimeout+0x32>
    if (status == HAL_OK)
90007c54:	f1ba 0f00 	cmp.w	sl, #0
90007c58:	d189      	bne.n	90007b6e <I2C_WaitOnTXISFlagUntilTimeout+0x36>
90007c5a:	e786      	b.n	90007b6a <I2C_WaitOnTXISFlagUntilTimeout+0x32>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007c5c:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90007c5e:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007c62:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90007c64:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007c66:	0409      	lsls	r1, r1, #16
90007c68:	d50b      	bpl.n	90007c82 <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
              (tmp1 != I2C_CR2_STOP) && \
90007c6a:	0441      	lsls	r1, r0, #17
90007c6c:	d409      	bmi.n	90007c82 <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
90007c6e:	2a20      	cmp	r2, #32
90007c70:	d007      	beq.n	90007c82 <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90007c72:	685a      	ldr	r2, [r3, #4]
90007c74:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90007c78:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90007c7a:	f7ff f8f5 	bl	90006e68 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007c7e:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
90007c80:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007c82:	699a      	ldr	r2, [r3, #24]
90007c84:	0690      	lsls	r0, r2, #26
90007c86:	d4d3      	bmi.n	90007c30 <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007c88:	f7ff f8ee 	bl	90006e68 <HAL_GetTick>
90007c8c:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007c90:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007c92:	2819      	cmp	r0, #25
90007c94:	d9f5      	bls.n	90007c82 <I2C_WaitOnTXISFlagUntilTimeout+0x14a>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90007c96:	2420      	movs	r4, #32
              status = HAL_ERROR;
90007c98:	f04f 0a01 	mov.w	sl, #1
90007c9c:	e7c8      	b.n	90007c30 <I2C_WaitOnTXISFlagUntilTimeout+0xf8>
90007c9e:	bf00      	nop
90007ca0:	fe00e800 	.word	0xfe00e800

90007ca4 <I2C_WaitOnFlagUntilTimeout>:
{
90007ca4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90007ca8:	461d      	mov	r5, r3
90007caa:	4683      	mov	fp, r0
90007cac:	460f      	mov	r7, r1
90007cae:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90007cb0:	6803      	ldr	r3, [r0, #0]
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007cb2:	f04f 0810 	mov.w	r8, #16
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
90007cb6:	699a      	ldr	r2, [r3, #24]
90007cb8:	ea37 0202 	bics.w	r2, r7, r2
90007cbc:	bf0c      	ite	eq
90007cbe:	2201      	moveq	r2, #1
90007cc0:	2200      	movne	r2, #0
90007cc2:	42b2      	cmp	r2, r6
90007cc4:	d173      	bne.n	90007dae <I2C_WaitOnFlagUntilTimeout+0x10a>
  uint32_t itflag   = hi2c->Instance->ISR;
90007cc6:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90007cc8:	f012 0c10 	ands.w	ip, r2, #16
90007ccc:	d06d      	beq.n	90007daa <I2C_WaitOnFlagUntilTimeout+0x106>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007cce:	1c6c      	adds	r4, r5, #1
90007cd0:	f8c3 801c 	str.w	r8, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007cd4:	d170      	bne.n	90007db8 <I2C_WaitOnFlagUntilTimeout+0x114>
90007cd6:	699c      	ldr	r4, [r3, #24]
90007cd8:	f014 0420 	ands.w	r4, r4, #32
90007cdc:	d16a      	bne.n	90007db4 <I2C_WaitOnFlagUntilTimeout+0x110>
90007cde:	699a      	ldr	r2, [r3, #24]
90007ce0:	0691      	lsls	r1, r2, #26
90007ce2:	d5fc      	bpl.n	90007cde <I2C_WaitOnFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90007ce4:	2220      	movs	r2, #32
90007ce6:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90007ce8:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90007cec:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
90007cee:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90007cf0:	05d0      	lsls	r0, r2, #23
90007cf2:	d534      	bpl.n	90007d5e <I2C_WaitOnFlagUntilTimeout+0xba>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007cf4:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007cf8:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90007cfa:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007cfe:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007d00:	d504      	bpl.n	90007d0c <I2C_WaitOnFlagUntilTimeout+0x68>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007d02:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90007d06:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007d0a:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007d0c:	0595      	lsls	r5, r2, #22
90007d0e:	d504      	bpl.n	90007d1a <I2C_WaitOnFlagUntilTimeout+0x76>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007d10:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90007d14:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007d18:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90007d1a:	699a      	ldr	r2, [r3, #24]
90007d1c:	0790      	lsls	r0, r2, #30
90007d1e:	d501      	bpl.n	90007d24 <I2C_WaitOnFlagUntilTimeout+0x80>
    hi2c->Instance->TXDR = 0x00U;
90007d20:	2200      	movs	r2, #0
90007d22:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90007d24:	699a      	ldr	r2, [r3, #24]
90007d26:	07d1      	lsls	r1, r2, #31
90007d28:	d403      	bmi.n	90007d32 <I2C_WaitOnFlagUntilTimeout+0x8e>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90007d2a:	699a      	ldr	r2, [r3, #24]
90007d2c:	f042 0201 	orr.w	r2, r2, #1
90007d30:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90007d32:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90007d34:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90007d36:	4c40      	ldr	r4, [pc, #256]	@ (90007e38 <I2C_WaitOnFlagUntilTimeout+0x194>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007d38:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90007d3a:	4022      	ands	r2, r4
90007d3c:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90007d3e:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
90007d42:	ea43 030c 	orr.w	r3, r3, ip
90007d46:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90007d4a:	f88b 0041 	strb.w	r0, [fp, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007d4e:	f88b 1042 	strb.w	r1, [fp, #66]	@ 0x42
          __HAL_UNLOCK(hi2c);
90007d52:	2300      	movs	r3, #0
      return HAL_ERROR;
90007d54:	2001      	movs	r0, #1
          __HAL_UNLOCK(hi2c);
90007d56:	f88b 3040 	strb.w	r3, [fp, #64]	@ 0x40
}
90007d5a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007d5e:	0550      	lsls	r0, r2, #21
90007d60:	d4cf      	bmi.n	90007d02 <I2C_WaitOnFlagUntilTimeout+0x5e>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007d62:	0594      	lsls	r4, r2, #22
90007d64:	d4d4      	bmi.n	90007d10 <I2C_WaitOnFlagUntilTimeout+0x6c>
  if (status != HAL_OK)
90007d66:	2900      	cmp	r1, #0
90007d68:	d1d7      	bne.n	90007d1a <I2C_WaitOnFlagUntilTimeout+0x76>
    if (Timeout != HAL_MAX_DELAY)
90007d6a:	1c6a      	adds	r2, r5, #1
90007d6c:	d0a3      	beq.n	90007cb6 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007d6e:	f7ff f87b 	bl	90006e68 <HAL_GetTick>
90007d72:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90007d74:	1ac3      	subs	r3, r0, r3
90007d76:	42ab      	cmp	r3, r5
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90007d78:	f8db 3000 	ldr.w	r3, [fp]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007d7c:	d801      	bhi.n	90007d82 <I2C_WaitOnFlagUntilTimeout+0xde>
90007d7e:	2d00      	cmp	r5, #0
90007d80:	d199      	bne.n	90007cb6 <I2C_WaitOnFlagUntilTimeout+0x12>
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
90007d82:	699a      	ldr	r2, [r3, #24]
90007d84:	ea37 0202 	bics.w	r2, r7, r2
90007d88:	bf0c      	ite	eq
90007d8a:	2201      	moveq	r2, #1
90007d8c:	2200      	movne	r2, #0
90007d8e:	42b2      	cmp	r2, r6
90007d90:	d191      	bne.n	90007cb6 <I2C_WaitOnFlagUntilTimeout+0x12>
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007d92:	f8db 3044 	ldr.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007d96:	2120      	movs	r1, #32
          hi2c->Mode = HAL_I2C_MODE_NONE;
90007d98:	2200      	movs	r2, #0
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007d9a:	430b      	orrs	r3, r1
90007d9c:	f8cb 3044 	str.w	r3, [fp, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
90007da0:	f88b 1041 	strb.w	r1, [fp, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
90007da4:	f88b 2042 	strb.w	r2, [fp, #66]	@ 0x42
          return HAL_ERROR;
90007da8:	e7d3      	b.n	90007d52 <I2C_WaitOnFlagUntilTimeout+0xae>
  HAL_StatusTypeDef status = HAL_OK;
90007daa:	4661      	mov	r1, ip
90007dac:	e79f      	b.n	90007cee <I2C_WaitOnFlagUntilTimeout+0x4a>
  return HAL_OK;
90007dae:	2000      	movs	r0, #0
}
90007db0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007db4:	2400      	movs	r4, #0
90007db6:	e795      	b.n	90007ce4 <I2C_WaitOnFlagUntilTimeout+0x40>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007db8:	2400      	movs	r4, #0
90007dba:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90007dbe:	46a2      	mov	sl, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007dc0:	699a      	ldr	r2, [r3, #24]
90007dc2:	0692      	lsls	r2, r2, #26
90007dc4:	d40f      	bmi.n	90007de6 <I2C_WaitOnFlagUntilTimeout+0x142>
90007dc6:	f1ba 0f00 	cmp.w	sl, #0
90007dca:	d18d      	bne.n	90007ce8 <I2C_WaitOnFlagUntilTimeout+0x44>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007dcc:	f7ff f84c 	bl	90006e68 <HAL_GetTick>
90007dd0:	eba0 0309 	sub.w	r3, r0, r9
90007dd4:	429d      	cmp	r5, r3
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007dd6:	f8db 3000 	ldr.w	r3, [fp]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007dda:	d309      	bcc.n	90007df0 <I2C_WaitOnFlagUntilTimeout+0x14c>
90007ddc:	b145      	cbz	r5, 90007df0 <I2C_WaitOnFlagUntilTimeout+0x14c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007dde:	699a      	ldr	r2, [r3, #24]
90007de0:	0690      	lsls	r0, r2, #26
90007de2:	d5f3      	bpl.n	90007dcc <I2C_WaitOnFlagUntilTimeout+0x128>
90007de4:	e77e      	b.n	90007ce4 <I2C_WaitOnFlagUntilTimeout+0x40>
    if (status == HAL_OK)
90007de6:	f1ba 0f00 	cmp.w	sl, #0
90007dea:	f47f af7d 	bne.w	90007ce8 <I2C_WaitOnFlagUntilTimeout+0x44>
90007dee:	e779      	b.n	90007ce4 <I2C_WaitOnFlagUntilTimeout+0x40>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007df0:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90007df2:	f89b 2042 	ldrb.w	r2, [fp, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007df6:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90007df8:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007dfa:	0409      	lsls	r1, r1, #16
90007dfc:	d50c      	bpl.n	90007e18 <I2C_WaitOnFlagUntilTimeout+0x174>
              (tmp1 != I2C_CR2_STOP) && \
90007dfe:	0441      	lsls	r1, r0, #17
90007e00:	d40a      	bmi.n	90007e18 <I2C_WaitOnFlagUntilTimeout+0x174>
90007e02:	2a20      	cmp	r2, #32
90007e04:	d008      	beq.n	90007e18 <I2C_WaitOnFlagUntilTimeout+0x174>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90007e06:	685a      	ldr	r2, [r3, #4]
90007e08:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90007e0c:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90007e0e:	f7ff f82b 	bl	90006e68 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007e12:	f8db 3000 	ldr.w	r3, [fp]
            tickstart = HAL_GetTick();
90007e16:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007e18:	699a      	ldr	r2, [r3, #24]
90007e1a:	0690      	lsls	r0, r2, #26
90007e1c:	d4d0      	bmi.n	90007dc0 <I2C_WaitOnFlagUntilTimeout+0x11c>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007e1e:	f7ff f823 	bl	90006e68 <HAL_GetTick>
90007e22:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007e26:	f8db 3000 	ldr.w	r3, [fp]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007e2a:	2819      	cmp	r0, #25
90007e2c:	d9f4      	bls.n	90007e18 <I2C_WaitOnFlagUntilTimeout+0x174>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90007e2e:	2420      	movs	r4, #32
              status = HAL_ERROR;
90007e30:	f04f 0a01 	mov.w	sl, #1
90007e34:	e7c4      	b.n	90007dc0 <I2C_WaitOnFlagUntilTimeout+0x11c>
90007e36:	bf00      	nop
90007e38:	fe00e800 	.word	0xfe00e800

90007e3c <I2C_WaitOnSTOPFlagUntilTimeout>:
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007e3c:	6803      	ldr	r3, [r0, #0]
{
90007e3e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90007e42:	4617      	mov	r7, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007e44:	699a      	ldr	r2, [r3, #24]
90007e46:	0695      	lsls	r5, r2, #26
90007e48:	d461      	bmi.n	90007f0e <I2C_WaitOnSTOPFlagUntilTimeout+0xd2>
90007e4a:	4605      	mov	r5, r0
90007e4c:	460e      	mov	r6, r1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007e4e:	f04f 0810 	mov.w	r8, #16
  uint32_t itflag   = hi2c->Instance->ISR;
90007e52:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
90007e54:	f012 0c10 	ands.w	ip, r2, #16
90007e58:	d05c      	beq.n	90007f14 <I2C_WaitOnSTOPFlagUntilTimeout+0xd8>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007e5a:	1c74      	adds	r4, r6, #1
90007e5c:	f8c3 801c 	str.w	r8, [r3, #28]
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007e60:	d165      	bne.n	90007f2e <I2C_WaitOnSTOPFlagUntilTimeout+0xf2>
90007e62:	699c      	ldr	r4, [r3, #24]
90007e64:	f014 0420 	ands.w	r4, r4, #32
90007e68:	d15f      	bne.n	90007f2a <I2C_WaitOnSTOPFlagUntilTimeout+0xee>
90007e6a:	699a      	ldr	r2, [r3, #24]
90007e6c:	0691      	lsls	r1, r2, #26
90007e6e:	d5fc      	bpl.n	90007e6a <I2C_WaitOnSTOPFlagUntilTimeout+0x2e>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90007e70:	2220      	movs	r2, #32
90007e72:	61da      	str	r2, [r3, #28]
    error_code |= HAL_I2C_ERROR_AF;
90007e74:	f044 0c04 	orr.w	ip, r4, #4
    status = HAL_ERROR;
90007e78:	2101      	movs	r1, #1
  itflag = hi2c->Instance->ISR;
90007e7a:	699a      	ldr	r2, [r3, #24]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
90007e7c:	05d0      	lsls	r0, r2, #23
90007e7e:	d532      	bpl.n	90007ee6 <I2C_WaitOnSTOPFlagUntilTimeout+0xaa>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007e80:	f44f 7180 	mov.w	r1, #256	@ 0x100
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007e84:	0554      	lsls	r4, r2, #21
    error_code |= HAL_I2C_ERROR_BERR;
90007e86:	f04c 0c01 	orr.w	ip, ip, #1
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
90007e8a:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007e8c:	d504      	bpl.n	90007e98 <I2C_WaitOnSTOPFlagUntilTimeout+0x5c>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007e8e:	f44f 6180 	mov.w	r1, #1024	@ 0x400
    error_code |= HAL_I2C_ERROR_OVR;
90007e92:	f04c 0c08 	orr.w	ip, ip, #8
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
90007e96:	61d9      	str	r1, [r3, #28]
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007e98:	0596      	lsls	r6, r2, #22
90007e9a:	d504      	bpl.n	90007ea6 <I2C_WaitOnSTOPFlagUntilTimeout+0x6a>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007e9c:	f44f 7200 	mov.w	r2, #512	@ 0x200
    error_code |= HAL_I2C_ERROR_ARLO;
90007ea0:	f04c 0c02 	orr.w	ip, ip, #2
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
90007ea4:	61da      	str	r2, [r3, #28]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
90007ea6:	699a      	ldr	r2, [r3, #24]
90007ea8:	0790      	lsls	r0, r2, #30
90007eaa:	d501      	bpl.n	90007eb0 <I2C_WaitOnSTOPFlagUntilTimeout+0x74>
    hi2c->Instance->TXDR = 0x00U;
90007eac:	2200      	movs	r2, #0
90007eae:	629a      	str	r2, [r3, #40]	@ 0x28
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
90007eb0:	699a      	ldr	r2, [r3, #24]
90007eb2:	07d1      	lsls	r1, r2, #31
90007eb4:	d403      	bmi.n	90007ebe <I2C_WaitOnSTOPFlagUntilTimeout+0x82>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
90007eb6:	699a      	ldr	r2, [r3, #24]
90007eb8:	f042 0201 	orr.w	r2, r2, #1
90007ebc:	619a      	str	r2, [r3, #24]
    I2C_RESET_CR2(hi2c);
90007ebe:	685a      	ldr	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90007ec0:	2020      	movs	r0, #32
    I2C_RESET_CR2(hi2c);
90007ec2:	4c38      	ldr	r4, [pc, #224]	@ (90007fa4 <I2C_WaitOnSTOPFlagUntilTimeout+0x168>)
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007ec4:	2100      	movs	r1, #0
    I2C_RESET_CR2(hi2c);
90007ec6:	4022      	ands	r2, r4
90007ec8:	605a      	str	r2, [r3, #4]
    hi2c->ErrorCode |= error_code;
90007eca:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
90007ecc:	ea43 030c 	orr.w	r3, r3, ip
90007ed0:	646b      	str	r3, [r5, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
90007ed2:	f885 0041 	strb.w	r0, [r5, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
90007ed6:	f885 1042 	strb.w	r1, [r5, #66]	@ 0x42
        __HAL_UNLOCK(hi2c);
90007eda:	2300      	movs	r3, #0
      return HAL_ERROR;
90007edc:	2001      	movs	r0, #1
        __HAL_UNLOCK(hi2c);
90007ede:	f885 3040 	strb.w	r3, [r5, #64]	@ 0x40
}
90007ee2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
90007ee6:	0550      	lsls	r0, r2, #21
90007ee8:	d4d1      	bmi.n	90007e8e <I2C_WaitOnSTOPFlagUntilTimeout+0x52>
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
90007eea:	0594      	lsls	r4, r2, #22
90007eec:	d4d6      	bmi.n	90007e9c <I2C_WaitOnSTOPFlagUntilTimeout+0x60>
  if (status != HAL_OK)
90007eee:	2900      	cmp	r1, #0
90007ef0:	d1d9      	bne.n	90007ea6 <I2C_WaitOnSTOPFlagUntilTimeout+0x6a>
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007ef2:	f7fe ffb9 	bl	90006e68 <HAL_GetTick>
90007ef6:	1bc0      	subs	r0, r0, r7
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90007ef8:	682b      	ldr	r3, [r5, #0]
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
90007efa:	42b0      	cmp	r0, r6
90007efc:	d800      	bhi.n	90007f00 <I2C_WaitOnSTOPFlagUntilTimeout+0xc4>
90007efe:	b91e      	cbnz	r6, 90007f08 <I2C_WaitOnSTOPFlagUntilTimeout+0xcc>
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
90007f00:	699a      	ldr	r2, [r3, #24]
90007f02:	f012 0220 	ands.w	r2, r2, #32
90007f06:	d007      	beq.n	90007f18 <I2C_WaitOnSTOPFlagUntilTimeout+0xdc>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007f08:	699a      	ldr	r2, [r3, #24]
90007f0a:	0692      	lsls	r2, r2, #26
90007f0c:	d5a1      	bpl.n	90007e52 <I2C_WaitOnSTOPFlagUntilTimeout+0x16>
  return HAL_OK;
90007f0e:	2000      	movs	r0, #0
}
90007f10:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  HAL_StatusTypeDef status = HAL_OK;
90007f14:	4661      	mov	r1, ip
90007f16:	e7b0      	b.n	90007e7a <I2C_WaitOnSTOPFlagUntilTimeout+0x3e>
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007f18:	6c6b      	ldr	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90007f1a:	2120      	movs	r1, #32
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
90007f1c:	430b      	orrs	r3, r1
90007f1e:	646b      	str	r3, [r5, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
90007f20:	f885 1041 	strb.w	r1, [r5, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
90007f24:	f885 2042 	strb.w	r2, [r5, #66]	@ 0x42
        return HAL_ERROR;
90007f28:	e7d7      	b.n	90007eda <I2C_WaitOnSTOPFlagUntilTimeout+0x9e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007f2a:	2400      	movs	r4, #0
90007f2c:	e7a0      	b.n	90007e70 <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
90007f2e:	2400      	movs	r4, #0
90007f30:	46b9      	mov	r9, r7
90007f32:	46a2      	mov	sl, r4
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007f34:	699a      	ldr	r2, [r3, #24]
90007f36:	0692      	lsls	r2, r2, #26
90007f38:	d42f      	bmi.n	90007f9a <I2C_WaitOnSTOPFlagUntilTimeout+0x15e>
90007f3a:	f1ba 0f00 	cmp.w	sl, #0
90007f3e:	d199      	bne.n	90007e74 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007f40:	f7fe ff92 	bl	90006e68 <HAL_GetTick>
90007f44:	eba0 0309 	sub.w	r3, r0, r9
90007f48:	429e      	cmp	r6, r3
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007f4a:	682b      	ldr	r3, [r5, #0]
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
90007f4c:	d304      	bcc.n	90007f58 <I2C_WaitOnSTOPFlagUntilTimeout+0x11c>
90007f4e:	b11e      	cbz	r6, 90007f58 <I2C_WaitOnSTOPFlagUntilTimeout+0x11c>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007f50:	699a      	ldr	r2, [r3, #24]
90007f52:	0690      	lsls	r0, r2, #26
90007f54:	d5f4      	bpl.n	90007f40 <I2C_WaitOnSTOPFlagUntilTimeout+0x104>
90007f56:	e78b      	b.n	90007e70 <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
90007f58:	6858      	ldr	r0, [r3, #4]
          tmp2 = hi2c->Mode;
90007f5a:	f895 2042 	ldrb.w	r2, [r5, #66]	@ 0x42
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007f5e:	6999      	ldr	r1, [r3, #24]
          tmp2 = hi2c->Mode;
90007f60:	b2d2      	uxtb	r2, r2
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
90007f62:	0409      	lsls	r1, r1, #16
90007f64:	d50b      	bpl.n	90007f7e <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
              (tmp1 != I2C_CR2_STOP) && \
90007f66:	0441      	lsls	r1, r0, #17
90007f68:	d409      	bmi.n	90007f7e <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
90007f6a:	2a20      	cmp	r2, #32
90007f6c:	d007      	beq.n	90007f7e <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
90007f6e:	685a      	ldr	r2, [r3, #4]
90007f70:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90007f74:	605a      	str	r2, [r3, #4]
            tickstart = HAL_GetTick();
90007f76:	f7fe ff77 	bl	90006e68 <HAL_GetTick>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007f7a:	682b      	ldr	r3, [r5, #0]
            tickstart = HAL_GetTick();
90007f7c:	4681      	mov	r9, r0
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
90007f7e:	699a      	ldr	r2, [r3, #24]
90007f80:	0690      	lsls	r0, r2, #26
90007f82:	d4d7      	bmi.n	90007f34 <I2C_WaitOnSTOPFlagUntilTimeout+0xf8>
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007f84:	f7fe ff70 	bl	90006e68 <HAL_GetTick>
90007f88:	eba0 0009 	sub.w	r0, r0, r9
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
90007f8c:	682b      	ldr	r3, [r5, #0]
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
90007f8e:	2819      	cmp	r0, #25
90007f90:	d9f5      	bls.n	90007f7e <I2C_WaitOnSTOPFlagUntilTimeout+0x142>
              error_code |= HAL_I2C_ERROR_TIMEOUT;
90007f92:	2420      	movs	r4, #32
              status = HAL_ERROR;
90007f94:	f04f 0a01 	mov.w	sl, #1
90007f98:	e7cc      	b.n	90007f34 <I2C_WaitOnSTOPFlagUntilTimeout+0xf8>
    if (status == HAL_OK)
90007f9a:	f1ba 0f00 	cmp.w	sl, #0
90007f9e:	f47f af69 	bne.w	90007e74 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
90007fa2:	e765      	b.n	90007e70 <I2C_WaitOnSTOPFlagUntilTimeout+0x34>
90007fa4:	fe00e800 	.word	0xfe00e800

90007fa8 <HAL_I2C_MspInit>:
}
90007fa8:	4770      	bx	lr
90007faa:	bf00      	nop

90007fac <HAL_I2C_Init>:
  if (hi2c == NULL)
90007fac:	2800      	cmp	r0, #0
90007fae:	d053      	beq.n	90008058 <HAL_I2C_Init+0xac>
{
90007fb0:	b510      	push	{r4, lr}
  if (hi2c->State == HAL_I2C_STATE_RESET)
90007fb2:	f890 3041 	ldrb.w	r3, [r0, #65]	@ 0x41
90007fb6:	4604      	mov	r4, r0
90007fb8:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90007fbc:	2b00      	cmp	r3, #0
90007fbe:	d046      	beq.n	9000804e <HAL_I2C_Init+0xa2>
  __HAL_I2C_DISABLE(hi2c);
90007fc0:	6823      	ldr	r3, [r4, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90007fc2:	2124      	movs	r1, #36	@ 0x24
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90007fc4:	6862      	ldr	r2, [r4, #4]
  hi2c->State = HAL_I2C_STATE_BUSY;
90007fc6:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
  __HAL_I2C_DISABLE(hi2c);
90007fca:	6819      	ldr	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90007fcc:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90007fd0:	68e0      	ldr	r0, [r4, #12]
  __HAL_I2C_DISABLE(hi2c);
90007fd2:	f021 0101 	bic.w	r1, r1, #1
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90007fd6:	2801      	cmp	r0, #1
  __HAL_I2C_DISABLE(hi2c);
90007fd8:	6019      	str	r1, [r3, #0]
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
90007fda:	611a      	str	r2, [r3, #16]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90007fdc:	689a      	ldr	r2, [r3, #8]
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90007fde:	68a1      	ldr	r1, [r4, #8]
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
90007fe0:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
90007fe4:	609a      	str	r2, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
90007fe6:	d009      	beq.n	90007ffc <HAL_I2C_Init+0x50>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90007fe8:	f441 4104 	orr.w	r1, r1, #33792	@ 0x8400
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90007fec:	2802      	cmp	r0, #2
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
90007fee:	6099      	str	r1, [r3, #8]
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
90007ff0:	d107      	bne.n	90008002 <HAL_I2C_Init+0x56>
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
90007ff2:	685a      	ldr	r2, [r3, #4]
90007ff4:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
90007ff8:	605a      	str	r2, [r3, #4]
90007ffa:	e006      	b.n	9000800a <HAL_I2C_Init+0x5e>
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
90007ffc:	f441 4100 	orr.w	r1, r1, #32768	@ 0x8000
90008000:	6099      	str	r1, [r3, #8]
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
90008002:	685a      	ldr	r2, [r3, #4]
90008004:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
90008008:	605a      	str	r2, [r3, #4]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
9000800a:	6858      	ldr	r0, [r3, #4]
  hi2c->State = HAL_I2C_STATE_READY;
9000800c:	f04f 0c20 	mov.w	ip, #32
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008010:	4912      	ldr	r1, [pc, #72]	@ (9000805c <HAL_I2C_Init+0xb0>)
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008012:	6922      	ldr	r2, [r4, #16]
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
90008014:	4301      	orrs	r1, r0
90008016:	6059      	str	r1, [r3, #4]
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
90008018:	68d9      	ldr	r1, [r3, #12]
9000801a:	f421 4100 	bic.w	r1, r1, #32768	@ 0x8000
9000801e:	60d9      	str	r1, [r3, #12]
                          (hi2c->Init.OwnAddress2Masks << 8));
90008020:	e9d4 0105 	ldrd	r0, r1, [r4, #20]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
90008024:	4302      	orrs	r2, r0
90008026:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
9000802a:	e9d4 1007 	ldrd	r1, r0, [r4, #28]
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
9000802e:	60da      	str	r2, [r3, #12]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008030:	2200      	movs	r2, #0
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008032:	4301      	orrs	r1, r0
  return HAL_OK;
90008034:	4610      	mov	r0, r2
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
90008036:	6019      	str	r1, [r3, #0]
  __HAL_I2C_ENABLE(hi2c);
90008038:	6819      	ldr	r1, [r3, #0]
9000803a:	f041 0101 	orr.w	r1, r1, #1
9000803e:	6019      	str	r1, [r3, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
90008040:	6462      	str	r2, [r4, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
90008042:	f884 c041 	strb.w	ip, [r4, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
90008046:	6322      	str	r2, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
90008048:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
}
9000804c:	bd10      	pop	{r4, pc}
    hi2c->Lock = HAL_UNLOCKED;
9000804e:	f880 2040 	strb.w	r2, [r0, #64]	@ 0x40
    HAL_I2C_MspInit(hi2c);
90008052:	f7ff ffa9 	bl	90007fa8 <HAL_I2C_MspInit>
90008056:	e7b3      	b.n	90007fc0 <HAL_I2C_Init+0x14>
    return HAL_ERROR;
90008058:	2001      	movs	r0, #1
}
9000805a:	4770      	bx	lr
9000805c:	02008000 	.word	0x02008000

90008060 <HAL_I2C_MspDeInit>:
__weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
90008060:	4770      	bx	lr
90008062:	bf00      	nop

90008064 <HAL_I2C_DeInit>:
  if (hi2c == NULL)
90008064:	b1b0      	cbz	r0, 90008094 <HAL_I2C_DeInit+0x30>
  __HAL_I2C_DISABLE(hi2c);
90008066:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
90008068:	2324      	movs	r3, #36	@ 0x24
{
9000806a:	b510      	push	{r4, lr}
  hi2c->State = HAL_I2C_STATE_BUSY;
9000806c:	f880 3041 	strb.w	r3, [r0, #65]	@ 0x41
90008070:	4604      	mov	r4, r0
  __HAL_I2C_DISABLE(hi2c);
90008072:	6813      	ldr	r3, [r2, #0]
90008074:	f023 0301 	bic.w	r3, r3, #1
90008078:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
9000807a:	f7ff fff1 	bl	90008060 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000807e:	2300      	movs	r3, #0
90008080:	6463      	str	r3, [r4, #68]	@ 0x44
  return HAL_OK;
90008082:	4618      	mov	r0, r3
  hi2c->State = HAL_I2C_STATE_RESET;
90008084:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
  __HAL_UNLOCK(hi2c);
90008088:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
  hi2c->PreviousState = I2C_STATE_NONE;
9000808c:	6323      	str	r3, [r4, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
9000808e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
}
90008092:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
90008094:	2001      	movs	r0, #1
}
90008096:	4770      	bx	lr

90008098 <HAL_I2C_Mem_Write>:
{
90008098:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000809c:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
9000809e:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
900080a2:	b083      	sub	sp, #12
  if (hi2c->State == HAL_I2C_STATE_READY)
900080a4:	2820      	cmp	r0, #32
{
900080a6:	f8bd a034 	ldrh.w	sl, [sp, #52]	@ 0x34
900080aa:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
  if (hi2c->State == HAL_I2C_STATE_READY)
900080ac:	d11e      	bne.n	900080ec <HAL_I2C_Mem_Write+0x54>
    if ((pData == NULL) || (Size == 0U))
900080ae:	4698      	mov	r8, r3
900080b0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900080b2:	b1bb      	cbz	r3, 900080e4 <HAL_I2C_Mem_Write+0x4c>
900080b4:	f1ba 0f00 	cmp.w	sl, #0
900080b8:	d014      	beq.n	900080e4 <HAL_I2C_Mem_Write+0x4c>
    __HAL_LOCK(hi2c);
900080ba:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
900080be:	2b01      	cmp	r3, #1
900080c0:	d014      	beq.n	900080ec <HAL_I2C_Mem_Write+0x54>
900080c2:	2301      	movs	r3, #1
900080c4:	460d      	mov	r5, r1
900080c6:	4691      	mov	r9, r2
900080c8:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
900080cc:	f7fe fecc 	bl	90006e68 <HAL_GetTick>
900080d0:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
900080d2:	4620      	mov	r0, r4
900080d4:	4631      	mov	r1, r6
900080d6:	f7ff fc8f 	bl	900079f8 <I2C_WaitOnFlagUntilTimeout.constprop.0>
900080da:	b158      	cbz	r0, 900080f4 <HAL_I2C_Mem_Write+0x5c>
      return  HAL_ERROR;
900080dc:	2001      	movs	r0, #1
}
900080de:	b003      	add	sp, #12
900080e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
900080e4:	f44f 7300 	mov.w	r3, #512	@ 0x200
900080e8:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
900080ea:	e7f7      	b.n	900080dc <HAL_I2C_Mem_Write+0x44>
    __HAL_LOCK(hi2c);
900080ec:	2002      	movs	r0, #2
}
900080ee:	b003      	add	sp, #12
900080f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    hi2c->pBuffPtr  = pData;
900080f4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
900080f6:	f3c5 0b09 	ubfx	fp, r5, #0, #10
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
                    (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
900080fa:	6821      	ldr	r1, [r4, #0]
    hi2c->pBuffPtr  = pData;
900080fc:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
900080fe:	2321      	movs	r3, #33	@ 0x21
  MODIFY_REG(hi2c->Instance->CR2, \
90008100:	4a5f      	ldr	r2, [pc, #380]	@ (90008280 <HAL_I2C_Mem_Write+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
90008102:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008106:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
90008108:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
9000810a:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000810e:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008110:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
90008112:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008116:	684b      	ldr	r3, [r1, #4]
90008118:	4013      	ands	r3, r2
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
9000811a:	fa5f f288 	uxtb.w	r2, r8
  MODIFY_REG(hi2c->Instance->CR2, \
9000811e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
90008122:	4a58      	ldr	r2, [pc, #352]	@ (90008284 <HAL_I2C_Mem_Write+0x1ec>)
90008124:	ea43 030b 	orr.w	r3, r3, fp
90008128:	431a      	orrs	r2, r3
9000812a:	604a      	str	r2, [r1, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000812c:	4632      	mov	r2, r6
9000812e:	4639      	mov	r1, r7
90008130:	f7ff fd02 	bl	90007b38 <I2C_WaitOnTXISFlagUntilTimeout>
90008134:	2800      	cmp	r0, #0
90008136:	d176      	bne.n	90008226 <HAL_I2C_Mem_Write+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90008138:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000813c:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
9000813e:	d169      	bne.n	90008214 <HAL_I2C_Mem_Write+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008140:	fa5f f289 	uxtb.w	r2, r9
90008144:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
90008146:	463b      	mov	r3, r7
90008148:	2200      	movs	r2, #0
9000814a:	2180      	movs	r1, #128	@ 0x80
9000814c:	4620      	mov	r0, r4
9000814e:	9600      	str	r6, [sp, #0]
90008150:	f7ff fda8 	bl	90007ca4 <I2C_WaitOnFlagUntilTimeout>
90008154:	2800      	cmp	r0, #0
90008156:	d166      	bne.n	90008226 <HAL_I2C_Mem_Write+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008158:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000815a:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
9000815c:	b29b      	uxth	r3, r3
9000815e:	2bff      	cmp	r3, #255	@ 0xff
90008160:	d965      	bls.n	9000822e <HAL_I2C_Mem_Write+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
90008162:	6853      	ldr	r3, [r2, #4]
90008164:	4948      	ldr	r1, [pc, #288]	@ (90008288 <HAL_I2C_Mem_Write+0x1f0>)
90008166:	400b      	ands	r3, r1
90008168:	4948      	ldr	r1, [pc, #288]	@ (9000828c <HAL_I2C_Mem_Write+0x1f4>)
9000816a:	ea43 030b 	orr.w	r3, r3, fp
9000816e:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90008170:	23ff      	movs	r3, #255	@ 0xff
90008172:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
90008174:	6051      	str	r1, [r2, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
90008176:	e003      	b.n	90008180 <HAL_I2C_Mem_Write+0xe8>
    } while (hi2c->XferCount > 0U);
90008178:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
9000817a:	b29b      	uxth	r3, r3
9000817c:	2b00      	cmp	r3, #0
9000817e:	d069      	beq.n	90008254 <HAL_I2C_Mem_Write+0x1bc>
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90008180:	4632      	mov	r2, r6
90008182:	4639      	mov	r1, r7
90008184:	4620      	mov	r0, r4
90008186:	f7ff fcd7 	bl	90007b38 <I2C_WaitOnTXISFlagUntilTimeout>
9000818a:	4602      	mov	r2, r0
9000818c:	2800      	cmp	r0, #0
9000818e:	d1a5      	bne.n	900080dc <HAL_I2C_Mem_Write+0x44>
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
90008190:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90008192:	6825      	ldr	r5, [r4, #0]
90008194:	f810 1b01 	ldrb.w	r1, [r0], #1
      hi2c->XferSize--;
90008198:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
9000819a:	62a9      	str	r1, [r5, #40]	@ 0x28
      hi2c->XferCount--;
9000819c:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
900081a0:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
900081a2:	6260      	str	r0, [r4, #36]	@ 0x24
      hi2c->XferCount--;
900081a4:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
900081a8:	b29b      	uxth	r3, r3
      hi2c->XferCount--;
900081aa:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
900081ae:	8523      	strh	r3, [r4, #40]	@ 0x28
      hi2c->XferCount--;
900081b0:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
900081b4:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
900081b6:	b289      	uxth	r1, r1
900081b8:	2900      	cmp	r1, #0
900081ba:	d0dd      	beq.n	90008178 <HAL_I2C_Mem_Write+0xe0>
900081bc:	2b00      	cmp	r3, #0
900081be:	d1db      	bne.n	90008178 <HAL_I2C_Mem_Write+0xe0>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
900081c0:	463b      	mov	r3, r7
900081c2:	2180      	movs	r1, #128	@ 0x80
900081c4:	4620      	mov	r0, r4
900081c6:	9600      	str	r6, [sp, #0]
900081c8:	f7ff fd6c 	bl	90007ca4 <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
900081cc:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
900081d0:	2800      	cmp	r0, #0
900081d2:	d183      	bne.n	900080dc <HAL_I2C_Mem_Write+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900081d4:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900081d6:	f8df e0b0 	ldr.w	lr, [pc, #176]	@ 90008288 <HAL_I2C_Mem_Write+0x1f0>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900081da:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900081dc:	492b      	ldr	r1, [pc, #172]	@ (9000828c <HAL_I2C_Mem_Write+0x1f4>)
900081de:	4670      	mov	r0, lr
900081e0:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900081e2:	4563      	cmp	r3, ip
900081e4:	d909      	bls.n	900081fa <HAL_I2C_Mem_Write+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
900081e6:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
900081e8:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900081ec:	ea03 030e 	and.w	r3, r3, lr
900081f0:	ea43 030b 	orr.w	r3, r3, fp
900081f4:	4319      	orrs	r1, r3
900081f6:	6051      	str	r1, [r2, #4]
}
900081f8:	e7be      	b.n	90008178 <HAL_I2C_Mem_Write+0xe0>
          hi2c->XferSize = hi2c->XferCount;
900081fa:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900081fc:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
900081fe:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008200:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
90008202:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008204:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008206:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
9000820a:	430b      	orrs	r3, r1
9000820c:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90008210:	6053      	str	r3, [r2, #4]
}
90008212:	e7b1      	b.n	90008178 <HAL_I2C_Mem_Write+0xe0>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008214:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008218:	4639      	mov	r1, r7
9000821a:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
9000821c:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000821e:	4632      	mov	r2, r6
90008220:	f7ff fc8a 	bl	90007b38 <I2C_WaitOnTXISFlagUntilTimeout>
90008224:	b188      	cbz	r0, 9000824a <HAL_I2C_Mem_Write+0x1b2>
      __HAL_UNLOCK(hi2c);
90008226:	2300      	movs	r3, #0
90008228:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
9000822c:	e756      	b.n	900080dc <HAL_I2C_Mem_Write+0x44>
      hi2c->XferSize = hi2c->XferCount;
9000822e:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008230:	4815      	ldr	r0, [pc, #84]	@ (90008288 <HAL_I2C_Mem_Write+0x1f0>)
      hi2c->XferSize = hi2c->XferCount;
90008232:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008234:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
90008236:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008238:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
9000823a:	4001      	ands	r1, r0
9000823c:	ea4b 4303 	orr.w	r3, fp, r3, lsl #16
90008240:	430b      	orrs	r3, r1
90008242:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
90008246:	6053      	str	r3, [r2, #4]
}
90008248:	e79a      	b.n	90008180 <HAL_I2C_Mem_Write+0xe8>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000824a:	fa5f f289 	uxtb.w	r2, r9
9000824e:	6823      	ldr	r3, [r4, #0]
90008250:	629a      	str	r2, [r3, #40]	@ 0x28
90008252:	e778      	b.n	90008146 <HAL_I2C_Mem_Write+0xae>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90008254:	4632      	mov	r2, r6
90008256:	4639      	mov	r1, r7
90008258:	4620      	mov	r0, r4
9000825a:	f7ff fdef 	bl	90007e3c <I2C_WaitOnSTOPFlagUntilTimeout>
9000825e:	2800      	cmp	r0, #0
90008260:	f47f af3c 	bne.w	900080dc <HAL_I2C_Mem_Write+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008264:	6823      	ldr	r3, [r4, #0]
90008266:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90008268:	4d09      	ldr	r5, [pc, #36]	@ (90008290 <HAL_I2C_Mem_Write+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
9000826a:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
9000826c:	685a      	ldr	r2, [r3, #4]
9000826e:	402a      	ands	r2, r5
90008270:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
90008272:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90008276:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
9000827a:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
9000827e:	e72e      	b.n	900080de <HAL_I2C_Mem_Write+0x46>
90008280:	fc009800 	.word	0xfc009800
90008284:	01002000 	.word	0x01002000
90008288:	fc009c00 	.word	0xfc009c00
9000828c:	01ff0000 	.word	0x01ff0000
90008290:	fe00e800 	.word	0xfe00e800

90008294 <HAL_I2C_Mem_Read>:
{
90008294:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90008298:	4604      	mov	r4, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
9000829a:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
{
9000829e:	b082      	sub	sp, #8
  if (hi2c->State == HAL_I2C_STATE_READY)
900082a0:	2820      	cmp	r0, #32
{
900082a2:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
900082a6:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
  if (hi2c->State == HAL_I2C_STATE_READY)
900082a8:	d11e      	bne.n	900082e8 <HAL_I2C_Mem_Read+0x54>
    if ((pData == NULL) || (Size == 0U))
900082aa:	4698      	mov	r8, r3
900082ac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900082ae:	b1bb      	cbz	r3, 900082e0 <HAL_I2C_Mem_Read+0x4c>
900082b0:	f1ba 0f00 	cmp.w	sl, #0
900082b4:	d014      	beq.n	900082e0 <HAL_I2C_Mem_Read+0x4c>
    __HAL_LOCK(hi2c);
900082b6:	f894 3040 	ldrb.w	r3, [r4, #64]	@ 0x40
900082ba:	2b01      	cmp	r3, #1
900082bc:	d014      	beq.n	900082e8 <HAL_I2C_Mem_Read+0x54>
900082be:	2301      	movs	r3, #1
900082c0:	460d      	mov	r5, r1
900082c2:	4691      	mov	r9, r2
900082c4:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
    tickstart = HAL_GetTick();
900082c8:	f7fe fdce 	bl	90006e68 <HAL_GetTick>
900082cc:	4606      	mov	r6, r0
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
900082ce:	4620      	mov	r0, r4
900082d0:	4631      	mov	r1, r6
900082d2:	f7ff fb91 	bl	900079f8 <I2C_WaitOnFlagUntilTimeout.constprop.0>
900082d6:	b158      	cbz	r0, 900082f0 <HAL_I2C_Mem_Read+0x5c>
      return  HAL_ERROR;
900082d8:	2001      	movs	r0, #1
}
900082da:	b002      	add	sp, #8
900082dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
900082e0:	f44f 7300 	mov.w	r3, #512	@ 0x200
900082e4:	6463      	str	r3, [r4, #68]	@ 0x44
      return  HAL_ERROR;
900082e6:	e7f7      	b.n	900082d8 <HAL_I2C_Mem_Read+0x44>
    __HAL_LOCK(hi2c);
900082e8:	2002      	movs	r0, #2
}
900082ea:	b002      	add	sp, #8
900082ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    hi2c->pBuffPtr  = pData;
900082f0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
  tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
900082f2:	f3c5 0509 	ubfx	r5, r5, #0, #10
  MODIFY_REG(hi2c->Instance->CR2, \
900082f6:	6822      	ldr	r2, [r4, #0]
    hi2c->pBuffPtr  = pData;
900082f8:	6263      	str	r3, [r4, #36]	@ 0x24
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
900082fa:	2322      	movs	r3, #34	@ 0x22
  MODIFY_REG(hi2c->Instance->CR2, \
900082fc:	495f      	ldr	r1, [pc, #380]	@ (9000847c <HAL_I2C_Mem_Read+0x1e8>)
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
900082fe:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008302:	2340      	movs	r3, #64	@ 0x40
    hi2c->XferISR   = NULL;
90008304:	6360      	str	r0, [r4, #52]	@ 0x34
    hi2c->Mode      = HAL_I2C_MODE_MEM;
90008306:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
9000830a:	6460      	str	r0, [r4, #68]	@ 0x44
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000830c:	4620      	mov	r0, r4
    hi2c->XferCount = Size;
9000830e:	f8a4 a02a 	strh.w	sl, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008312:	6853      	ldr	r3, [r2, #4]
90008314:	400b      	ands	r3, r1
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008316:	fa5f f188 	uxtb.w	r1, r8
  MODIFY_REG(hi2c->Instance->CR2, \
9000831a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000831e:	4639      	mov	r1, r7
  MODIFY_REG(hi2c->Instance->CR2, \
90008320:	432b      	orrs	r3, r5
90008322:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
90008326:	6053      	str	r3, [r2, #4]
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008328:	4632      	mov	r2, r6
9000832a:	f7ff fc05 	bl	90007b38 <I2C_WaitOnTXISFlagUntilTimeout>
9000832e:	2800      	cmp	r0, #0
90008330:	d177      	bne.n	90008422 <HAL_I2C_Mem_Read+0x18e>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90008332:	f1b8 0f01 	cmp.w	r8, #1
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008336:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
90008338:	d16a      	bne.n	90008410 <HAL_I2C_Mem_Read+0x17c>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
9000833a:	fa5f f289 	uxtb.w	r2, r9
9000833e:	629a      	str	r2, [r3, #40]	@ 0x28
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
90008340:	463b      	mov	r3, r7
90008342:	2200      	movs	r2, #0
90008344:	2140      	movs	r1, #64	@ 0x40
90008346:	4620      	mov	r0, r4
90008348:	9600      	str	r6, [sp, #0]
9000834a:	f7ff fcab 	bl	90007ca4 <I2C_WaitOnFlagUntilTimeout>
9000834e:	2800      	cmp	r0, #0
90008350:	d167      	bne.n	90008422 <HAL_I2C_Mem_Read+0x18e>
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008352:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
90008354:	6822      	ldr	r2, [r4, #0]
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
90008356:	b29b      	uxth	r3, r3
90008358:	2bff      	cmp	r3, #255	@ 0xff
9000835a:	d966      	bls.n	9000842a <HAL_I2C_Mem_Read+0x196>
  MODIFY_REG(hi2c->Instance->CR2, \
9000835c:	6853      	ldr	r3, [r2, #4]
9000835e:	4947      	ldr	r1, [pc, #284]	@ (9000847c <HAL_I2C_Mem_Read+0x1e8>)
90008360:	400b      	ands	r3, r1
90008362:	4947      	ldr	r1, [pc, #284]	@ (90008480 <HAL_I2C_Mem_Read+0x1ec>)
90008364:	432b      	orrs	r3, r5
90008366:	4319      	orrs	r1, r3
      hi2c->XferSize = MAX_NBYTE_SIZE;
90008368:	23ff      	movs	r3, #255	@ 0xff
9000836a:	8523      	strh	r3, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
9000836c:	6051      	str	r1, [r2, #4]
}
9000836e:	e003      	b.n	90008378 <HAL_I2C_Mem_Read+0xe4>
    } while (hi2c->XferCount > 0U);
90008370:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
90008372:	b29b      	uxth	r3, r3
90008374:	2b00      	cmp	r3, #0
90008376:	d06b      	beq.n	90008450 <HAL_I2C_Mem_Read+0x1bc>
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
90008378:	463b      	mov	r3, r7
9000837a:	2200      	movs	r2, #0
9000837c:	2104      	movs	r1, #4
9000837e:	4620      	mov	r0, r4
90008380:	9600      	str	r6, [sp, #0]
90008382:	f7ff fc8f 	bl	90007ca4 <I2C_WaitOnFlagUntilTimeout>
90008386:	2800      	cmp	r0, #0
90008388:	d1a6      	bne.n	900082d8 <HAL_I2C_Mem_Read+0x44>
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
9000838a:	6821      	ldr	r1, [r4, #0]
9000838c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000838e:	6a49      	ldr	r1, [r1, #36]	@ 0x24
90008390:	7019      	strb	r1, [r3, #0]
      hi2c->XferCount--;
90008392:	f8b4 c02a 	ldrh.w	ip, [r4, #42]	@ 0x2a
      hi2c->pBuffPtr++;
90008396:	6a61      	ldr	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
90008398:	f10c 3cff 	add.w	ip, ip, #4294967295
      hi2c->XferSize--;
9000839c:	8d23      	ldrh	r3, [r4, #40]	@ 0x28
      hi2c->pBuffPtr++;
9000839e:	3101      	adds	r1, #1
      hi2c->XferCount--;
900083a0:	fa1f fc8c 	uxth.w	ip, ip
      hi2c->XferSize--;
900083a4:	3b01      	subs	r3, #1
      hi2c->pBuffPtr++;
900083a6:	6261      	str	r1, [r4, #36]	@ 0x24
      hi2c->XferCount--;
900083a8:	f8a4 c02a 	strh.w	ip, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
900083ac:	b29b      	uxth	r3, r3
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
900083ae:	8d61      	ldrh	r1, [r4, #42]	@ 0x2a
      hi2c->XferSize--;
900083b0:	8523      	strh	r3, [r4, #40]	@ 0x28
      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
900083b2:	b289      	uxth	r1, r1
900083b4:	2900      	cmp	r1, #0
900083b6:	d0db      	beq.n	90008370 <HAL_I2C_Mem_Read+0xdc>
900083b8:	2b00      	cmp	r3, #0
900083ba:	d1d9      	bne.n	90008370 <HAL_I2C_Mem_Read+0xdc>
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
900083bc:	4602      	mov	r2, r0
900083be:	463b      	mov	r3, r7
900083c0:	2180      	movs	r1, #128	@ 0x80
900083c2:	4620      	mov	r0, r4
900083c4:	9600      	str	r6, [sp, #0]
900083c6:	f7ff fc6d 	bl	90007ca4 <I2C_WaitOnFlagUntilTimeout>
          hi2c->XferSize = MAX_NBYTE_SIZE;
900083ca:	f04f 0cff 	mov.w	ip, #255	@ 0xff
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
900083ce:	2800      	cmp	r0, #0
900083d0:	d182      	bne.n	900082d8 <HAL_I2C_Mem_Read+0x44>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900083d2:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900083d4:	f8df e0b8 	ldr.w	lr, [pc, #184]	@ 90008490 <HAL_I2C_Mem_Read+0x1fc>
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900083d8:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900083da:	492a      	ldr	r1, [pc, #168]	@ (90008484 <HAL_I2C_Mem_Read+0x1f0>)
900083dc:	4670      	mov	r0, lr
900083de:	6822      	ldr	r2, [r4, #0]
        if (hi2c->XferCount > MAX_NBYTE_SIZE)
900083e0:	4563      	cmp	r3, ip
900083e2:	d908      	bls.n	900083f6 <HAL_I2C_Mem_Read+0x162>
  MODIFY_REG(hi2c->Instance->CR2, \
900083e4:	6853      	ldr	r3, [r2, #4]
          hi2c->XferSize = MAX_NBYTE_SIZE;
900083e6:	f8a4 c028 	strh.w	ip, [r4, #40]	@ 0x28
  MODIFY_REG(hi2c->Instance->CR2, \
900083ea:	ea03 030e 	and.w	r3, r3, lr
900083ee:	432b      	orrs	r3, r5
900083f0:	4319      	orrs	r1, r3
900083f2:	6051      	str	r1, [r2, #4]
}
900083f4:	e7bc      	b.n	90008370 <HAL_I2C_Mem_Read+0xdc>
          hi2c->XferSize = hi2c->XferCount;
900083f6:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
900083f8:	6851      	ldr	r1, [r2, #4]
          hi2c->XferSize = hi2c->XferCount;
900083fa:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
900083fc:	4001      	ands	r1, r0
          hi2c->XferSize = hi2c->XferCount;
900083fe:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008400:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008402:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
90008406:	430b      	orrs	r3, r1
90008408:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
9000840c:	6053      	str	r3, [r2, #4]
}
9000840e:	e7af      	b.n	90008370 <HAL_I2C_Mem_Read+0xdc>
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008410:	ea4f 2219 	mov.w	r2, r9, lsr #8
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
90008414:	4639      	mov	r1, r7
90008416:	4620      	mov	r0, r4
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
90008418:	629a      	str	r2, [r3, #40]	@ 0x28
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
9000841a:	4632      	mov	r2, r6
9000841c:	f7ff fb8c 	bl	90007b38 <I2C_WaitOnTXISFlagUntilTimeout>
90008420:	b188      	cbz	r0, 90008446 <HAL_I2C_Mem_Read+0x1b2>
      __HAL_UNLOCK(hi2c);
90008422:	2300      	movs	r3, #0
90008424:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
      return HAL_ERROR;
90008428:	e756      	b.n	900082d8 <HAL_I2C_Mem_Read+0x44>
      hi2c->XferSize = hi2c->XferCount;
9000842a:	8d63      	ldrh	r3, [r4, #42]	@ 0x2a
  MODIFY_REG(hi2c->Instance->CR2, \
9000842c:	4813      	ldr	r0, [pc, #76]	@ (9000847c <HAL_I2C_Mem_Read+0x1e8>)
      hi2c->XferSize = hi2c->XferCount;
9000842e:	b29b      	uxth	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008430:	6851      	ldr	r1, [r2, #4]
      hi2c->XferSize = hi2c->XferCount;
90008432:	8523      	strh	r3, [r4, #40]	@ 0x28
                    (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
90008434:	b2db      	uxtb	r3, r3
  MODIFY_REG(hi2c->Instance->CR2, \
90008436:	4001      	ands	r1, r0
90008438:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
9000843c:	430b      	orrs	r3, r1
9000843e:	4912      	ldr	r1, [pc, #72]	@ (90008488 <HAL_I2C_Mem_Read+0x1f4>)
90008440:	4319      	orrs	r1, r3
90008442:	6051      	str	r1, [r2, #4]
}
90008444:	e798      	b.n	90008378 <HAL_I2C_Mem_Read+0xe4>
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
90008446:	fa5f f289 	uxtb.w	r2, r9
9000844a:	6823      	ldr	r3, [r4, #0]
9000844c:	629a      	str	r2, [r3, #40]	@ 0x28
9000844e:	e777      	b.n	90008340 <HAL_I2C_Mem_Read+0xac>
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
90008450:	4632      	mov	r2, r6
90008452:	4639      	mov	r1, r7
90008454:	4620      	mov	r0, r4
90008456:	f7ff fcf1 	bl	90007e3c <I2C_WaitOnSTOPFlagUntilTimeout>
9000845a:	2800      	cmp	r0, #0
9000845c:	f47f af3c 	bne.w	900082d8 <HAL_I2C_Mem_Read+0x44>
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008460:	6823      	ldr	r3, [r4, #0]
90008462:	2120      	movs	r1, #32
    I2C_RESET_CR2(hi2c);
90008464:	4d09      	ldr	r5, [pc, #36]	@ (9000848c <HAL_I2C_Mem_Read+0x1f8>)
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
90008466:	61d9      	str	r1, [r3, #28]
    I2C_RESET_CR2(hi2c);
90008468:	685a      	ldr	r2, [r3, #4]
9000846a:	402a      	ands	r2, r5
9000846c:	605a      	str	r2, [r3, #4]
    hi2c->State = HAL_I2C_STATE_READY;
9000846e:	f884 1041 	strb.w	r1, [r4, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
90008472:	f884 0040 	strb.w	r0, [r4, #64]	@ 0x40
    hi2c->Mode  = HAL_I2C_MODE_NONE;
90008476:	f884 0042 	strb.w	r0, [r4, #66]	@ 0x42
    return HAL_OK;
9000847a:	e72e      	b.n	900082da <HAL_I2C_Mem_Read+0x46>
9000847c:	fc009800 	.word	0xfc009800
90008480:	01ff2400 	.word	0x01ff2400
90008484:	01ff0000 	.word	0x01ff0000
90008488:	02002400 	.word	0x02002400
9000848c:	fe00e800 	.word	0xfe00e800
90008490:	fc009c00 	.word	0xfc009c00

90008494 <HAL_I2C_GetState>:
  return hi2c->State;
90008494:	f890 0041 	ldrb.w	r0, [r0, #65]	@ 0x41
}
90008498:	4770      	bx	lr
9000849a:	bf00      	nop

9000849c <HAL_I2C_GetError>:
  return hi2c->ErrorCode;
9000849c:	6c40      	ldr	r0, [r0, #68]	@ 0x44
}
9000849e:	4770      	bx	lr

900084a0 <HAL_I2CEx_ConfigAnalogFilter>:
{
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
900084a0:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
900084a4:	2a20      	cmp	r2, #32
900084a6:	d123      	bne.n	900084f0 <HAL_I2CEx_ConfigAnalogFilter+0x50>
900084a8:	fa5f fc82 	uxtb.w	ip, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
900084ac:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
900084b0:	4603      	mov	r3, r0
900084b2:	2a01      	cmp	r2, #1
900084b4:	d01c      	beq.n	900084f0 <HAL_I2CEx_ConfigAnalogFilter+0x50>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
900084b6:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
900084b8:	2024      	movs	r0, #36	@ 0x24
{
900084ba:	b500      	push	{lr}
    hi2c->State = HAL_I2C_STATE_BUSY;
900084bc:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
900084c0:	f04f 0e00 	mov.w	lr, #0
    __HAL_I2C_DISABLE(hi2c);
900084c4:	6810      	ldr	r0, [r2, #0]
900084c6:	f020 0001 	bic.w	r0, r0, #1
900084ca:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
900084cc:	6810      	ldr	r0, [r2, #0]
900084ce:	f420 5080 	bic.w	r0, r0, #4096	@ 0x1000
900084d2:	6010      	str	r0, [r2, #0]
    hi2c->Instance->CR1 |= AnalogFilter;
900084d4:	6810      	ldr	r0, [r2, #0]
900084d6:	4301      	orrs	r1, r0

    return HAL_OK;
900084d8:	4670      	mov	r0, lr
    hi2c->Instance->CR1 |= AnalogFilter;
900084da:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
900084dc:	6811      	ldr	r1, [r2, #0]
900084de:	f041 0101 	orr.w	r1, r1, #1
900084e2:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
900084e4:	f883 c041 	strb.w	ip, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
900084e8:	f883 e040 	strb.w	lr, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
900084ec:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
900084f0:	2002      	movs	r0, #2
}
900084f2:	4770      	bx	lr

900084f4 <HAL_I2CEx_ConfigDigitalFilter>:

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
900084f4:	f890 2041 	ldrb.w	r2, [r0, #65]	@ 0x41
900084f8:	2a20      	cmp	r2, #32
900084fa:	d122      	bne.n	90008542 <HAL_I2CEx_ConfigDigitalFilter+0x4e>
900084fc:	4603      	mov	r3, r0
{
900084fe:	b500      	push	{lr}
90008500:	fa5f fe82 	uxtb.w	lr, r2
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
90008504:	f890 2040 	ldrb.w	r2, [r0, #64]	@ 0x40
90008508:	2a01      	cmp	r2, #1
9000850a:	d01c      	beq.n	90008546 <HAL_I2CEx_ConfigDigitalFilter+0x52>

    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
9000850c:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
9000850e:	2024      	movs	r0, #36	@ 0x24
    __HAL_I2C_ENABLE(hi2c);

    hi2c->State = HAL_I2C_STATE_READY;

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
90008510:	f04f 0c00 	mov.w	ip, #0
    hi2c->State = HAL_I2C_STATE_BUSY;
90008514:	f883 0041 	strb.w	r0, [r3, #65]	@ 0x41
    __HAL_I2C_DISABLE(hi2c);
90008518:	6810      	ldr	r0, [r2, #0]
9000851a:	f020 0001 	bic.w	r0, r0, #1
9000851e:	6010      	str	r0, [r2, #0]
    tmpreg = hi2c->Instance->CR1;
90008520:	6810      	ldr	r0, [r2, #0]
    tmpreg &= ~(I2C_CR1_DNF);
90008522:	f420 6070 	bic.w	r0, r0, #3840	@ 0xf00
    tmpreg |= DigitalFilter << 8U;
90008526:	ea40 2101 	orr.w	r1, r0, r1, lsl #8

    return HAL_OK;
9000852a:	4660      	mov	r0, ip
    hi2c->Instance->CR1 = tmpreg;
9000852c:	6011      	str	r1, [r2, #0]
    __HAL_I2C_ENABLE(hi2c);
9000852e:	6811      	ldr	r1, [r2, #0]
90008530:	f041 0101 	orr.w	r1, r1, #1
90008534:	6011      	str	r1, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
90008536:	f883 e041 	strb.w	lr, [r3, #65]	@ 0x41
    __HAL_UNLOCK(hi2c);
9000853a:	f883 c040 	strb.w	ip, [r3, #64]	@ 0x40
  }
  else
  {
    return HAL_BUSY;
  }
}
9000853e:	f85d fb04 	ldr.w	pc, [sp], #4
    __HAL_LOCK(hi2c);
90008542:	2002      	movs	r0, #2
}
90008544:	4770      	bx	lr
    __HAL_LOCK(hi2c);
90008546:	2002      	movs	r0, #2
}
90008548:	f85d fb04 	ldr.w	pc, [sp], #4

9000854c <JPEG_Bits_To_SizeCodes>:
  * @param  Huffcode pointer to codes table
  * @param  LastK pointer to last Coeff (table dimension)
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Bits_To_SizeCodes(uint8_t *Bits, uint8_t *Huffsize, uint32_t *Huffcode, uint32_t *LastK)
{
9000854c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90008550:	4681      	mov	r9, r0
90008552:	460d      	mov	r5, r1
90008554:	4614      	mov	r4, r2
90008556:	469a      	mov	sl, r3

  /* Figure C.1: Generation of table of Huffman code sizes */
  p = 0;
  for (l = 0; l < 16UL; l++)
  {
    i = (uint32_t)Bits[l];
90008558:	7806      	ldrb	r6, [r0, #0]
9000855a:	2701      	movs	r7, #1
  p = 0;
9000855c:	f04f 0800 	mov.w	r8, #0
90008560:	e006      	b.n	90008570 <JPEG_Bits_To_SizeCodes+0x24>
    i = (uint32_t)Bits[l];
90008562:	f819 6f01 	ldrb.w	r6, [r9, #1]!
    if ((p + i) > 256UL)
90008566:	eb06 0308 	add.w	r3, r6, r8
9000856a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9000856e:	d83c      	bhi.n	900085ea <JPEG_Bits_To_SizeCodes+0x9e>
      /* check for table overflow */
      return HAL_ERROR;
    }
    while (i != 0UL)
    {
      Huffsize[p] = (uint8_t) l + 1U;
90008570:	4632      	mov	r2, r6
90008572:	4639      	mov	r1, r7
90008574:	eb05 0008 	add.w	r0, r5, r8
    while (i != 0UL)
90008578:	b116      	cbz	r6, 90008580 <JPEG_Bits_To_SizeCodes+0x34>
9000857a:	44b0      	add	r8, r6
      Huffsize[p] = (uint8_t) l + 1U;
9000857c:	f021 fa90 	bl	90029aa0 <memset>
  for (l = 0; l < 16UL; l++)
90008580:	2f10      	cmp	r7, #16
    if ((p + i) > 256UL)
90008582:	f107 0701 	add.w	r7, r7, #1
  for (l = 0; l < 16UL; l++)
90008586:	d1ec      	bne.n	90008562 <JPEG_Bits_To_SizeCodes+0x16>
      p++;
      i--;
    }
  }
  Huffsize[p] = 0;
90008588:	f04f 0900 	mov.w	r9, #0
9000858c:	f805 9008 	strb.w	r9, [r5, r8]
  *LastK = p;
90008590:	f8ca 8000 	str.w	r8, [sl]

  /* Figure C.2: Generation of table of Huffman codes */
  code = 0;
  si = Huffsize[0];
90008594:	7829      	ldrb	r1, [r5, #0]
90008596:	460a      	mov	r2, r1
  p = 0;
  while (Huffsize[p] != 0U)
90008598:	b321      	cbz	r1, 900085e4 <JPEG_Bits_To_SizeCodes+0x98>
9000859a:	f06f 4840 	mvn.w	r8, #3221225472	@ 0xc0000000
    /* code must fit in "size" bits (si), no code is allowed to be all ones*/
    if(si > 31UL)
    {
      return HAL_ERROR;
    }
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
9000859e:	2701      	movs	r7, #1
  p = 0;
900085a0:	464e      	mov	r6, r9
    while (((uint32_t) Huffsize[p]) == si)
900085a2:	4291      	cmp	r1, r2
900085a4:	d124      	bne.n	900085f0 <JPEG_Bits_To_SizeCodes+0xa4>
900085a6:	eb06 0008 	add.w	r0, r6, r8
900085aa:	eb05 0c06 	add.w	ip, r5, r6
900085ae:	464b      	mov	r3, r9
900085b0:	eb04 0080 	add.w	r0, r4, r0, lsl #2
      Huffcode[p] = code;
900085b4:	f840 3f04 	str.w	r3, [r0, #4]!
      code++;
900085b8:	4619      	mov	r1, r3
    while (((uint32_t) Huffsize[p]) == si)
900085ba:	f81c ef01 	ldrb.w	lr, [ip, #1]!
      code++;
900085be:	3301      	adds	r3, #1
    while (((uint32_t) Huffsize[p]) == si)
900085c0:	4596      	cmp	lr, r2
900085c2:	d0f7      	beq.n	900085b4 <JPEG_Bits_To_SizeCodes+0x68>
900085c4:	3601      	adds	r6, #1
900085c6:	eba6 0609 	sub.w	r6, r6, r9
      p++;
900085ca:	440e      	add	r6, r1
    if(si > 31UL)
900085cc:	2a1f      	cmp	r2, #31
900085ce:	d80c      	bhi.n	900085ea <JPEG_Bits_To_SizeCodes+0x9e>
    if (((uint32_t) code) >= (((uint32_t) 1) << si))
900085d0:	fa07 f102 	lsl.w	r1, r7, r2
900085d4:	4299      	cmp	r1, r3
900085d6:	d908      	bls.n	900085ea <JPEG_Bits_To_SizeCodes+0x9e>
  while (Huffsize[p] != 0U)
900085d8:	5da9      	ldrb	r1, [r5, r6]
    {
      return HAL_ERROR;
    }
    code <<= 1;
900085da:	ea4f 0943 	mov.w	r9, r3, lsl #1
    si++;
900085de:	3201      	adds	r2, #1
  while (Huffsize[p] != 0U)
900085e0:	2900      	cmp	r1, #0
900085e2:	d1de      	bne.n	900085a2 <JPEG_Bits_To_SizeCodes+0x56>
  }
  /* Return function status */
  return HAL_OK;
900085e4:	2000      	movs	r0, #0
}
900085e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      return HAL_ERROR;
900085ea:	2001      	movs	r0, #1
}
900085ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    while (((uint32_t) Huffsize[p]) == si)
900085f0:	464b      	mov	r3, r9
900085f2:	e7eb      	b.n	900085cc <JPEG_Bits_To_SizeCodes+0x80>

900085f4 <JPEG_DCHuff_BitsVals_To_SizeCodes>:
  * @param  DC_SizeCodesTable pointer to DC huffman Sizes/Codes table
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_DCHuff_BitsVals_To_SizeCodes(JPEG_DCHuffTableTypeDef *DC_BitsValsTable,
                                                           JPEG_DC_HuffCodeTableTypeDef *DC_SizeCodesTable)
{
900085f4:	b5f0      	push	{r4, r5, r6, r7, lr}
900085f6:	f2ad 5d14 	subw	sp, sp, #1300	@ 0x514
900085fa:	460d      	mov	r5, r1
900085fc:	4604      	mov	r4, r0
  uint32_t k;
  uint32_t l;
  uint32_t lastK;
  uint8_t huffsize[257];
  uint32_t huffcode[257];
  error = JPEG_Bits_To_SizeCodes(DC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
900085fe:	ab01      	add	r3, sp, #4
90008600:	aa43      	add	r2, sp, #268	@ 0x10c
90008602:	a902      	add	r1, sp, #8
90008604:	f7ff ffa2 	bl	9000854c <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
90008608:	b9d0      	cbnz	r0, 90008640 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    return  error;
  }
  /* Figure C.3: ordering procedure for encoding procedure code tables */
  k = 0;

  while (k < lastK)
9000860a:	9f01      	ldr	r7, [sp, #4]
9000860c:	b1c7      	cbz	r7, 90008640 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
9000860e:	370f      	adds	r7, #15
90008610:	f50d 7e86 	add.w	lr, sp, #268	@ 0x10c
90008614:	a902      	add	r1, sp, #8
90008616:	f104 0c0f 	add.w	ip, r4, #15
9000861a:	4427      	add	r7, r4
9000861c:	e009      	b.n	90008632 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x3e>
      return HAL_ERROR; /* Huffman Table overflow error*/
    }
    else
    {
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000861e:	f811 2b01 	ldrb.w	r2, [r1], #1
  while (k < lastK)
90008622:	45bc      	cmp	ip, r7
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008624:	f85e 6b04 	ldr.w	r6, [lr], #4
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008628:	f102 32ff 	add.w	r2, r2, #4294967295
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000862c:	60e6      	str	r6, [r4, #12]
      DC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
9000862e:	54ea      	strb	r2, [r5, r3]
  while (k < lastK)
90008630:	d006      	beq.n	90008640 <JPEG_DCHuff_BitsVals_To_SizeCodes+0x4c>
    l = DC_BitsValsTable->HuffVal[k];
90008632:	f81c 3f01 	ldrb.w	r3, [ip, #1]!
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
90008636:	2b0b      	cmp	r3, #11
      DC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
90008638:	eb05 0483 	add.w	r4, r5, r3, lsl #2
    if (l >= JPEG_DC_HUFF_TABLE_SIZE)
9000863c:	d9ef      	bls.n	9000861e <JPEG_DCHuff_BitsVals_To_SizeCodes+0x2a>
      return HAL_ERROR; /* Huffman Table overflow error*/
9000863e:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90008640:	f20d 5d14 	addw	sp, sp, #1300	@ 0x514
90008644:	bdf0      	pop	{r4, r5, r6, r7, pc}
90008646:	bf00      	nop

90008648 <JPEG_Set_HuffDC_Mem>:
  * @param  DCTableAddress Encoder DC huffman table address it could be HUFFENC_DC0 or HUFFENC_DC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffDC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_DCHuffTableTypeDef *HuffTableDC,
                                             const __IO uint32_t *DCTableAddress)
{
90008648:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t i;
  uint32_t lsb;
  uint32_t msb;
  __IO uint32_t *address, *addressDef;

  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
9000864c:	6804      	ldr	r4, [r0, #0]
{
9000864e:	b093      	sub	sp, #76	@ 0x4c
90008650:	4608      	mov	r0, r1
  if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC0))
90008652:	f504 63f8 	add.w	r3, r4, #1984	@ 0x7c0
90008656:	429a      	cmp	r2, r3
90008658:	f000 809d 	beq.w	90008796 <JPEG_Set_HuffDC_Mem+0x14e>
  {
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (DCTableAddress == (hjpeg->Instance->HUFFENC_DC1))
9000865c:	f504 63fc 	add.w	r3, r4, #2016	@ 0x7e0
90008660:	429a      	cmp	r2, r3
90008662:	d003      	beq.n	9000866c <JPEG_Set_HuffDC_Mem+0x24>
  {
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
90008664:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
90008666:	b013      	add	sp, #76	@ 0x4c
90008668:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC1 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
9000866c:	f504 64ff 	add.w	r4, r4, #2040	@ 0x7f8
    error = JPEG_DCHuff_BitsVals_To_SizeCodes(HuffTableDC, &dcSizeCodesTable);
90008670:	a903      	add	r1, sp, #12
90008672:	f7ff ffbf 	bl	900085f4 <JPEG_DCHuff_BitsVals_To_SizeCodes>
    if (error != HAL_OK)
90008676:	2800      	cmp	r0, #0
90008678:	d1f5      	bne.n	90008666 <JPEG_Set_HuffDC_Mem+0x1e>
    *addressDef = 0x0FFF0FFF;
9000867a:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000867e:	f89d a017 	ldrb.w	sl, [sp, #23]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008682:	f89d e016 	ldrb.w	lr, [sp, #22]
    *addressDef = 0x0FFF0FFF;
90008686:	6023      	str	r3, [r4, #0]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008688:	ea4f 2a0a 	mov.w	sl, sl, lsl #8
    *addressDef = 0x0FFF0FFF;
9000868c:	6063      	str	r3, [r4, #4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000868e:	ea4f 2e0e 	mov.w	lr, lr, lsl #8
90008692:	f89d 300e 	ldrb.w	r3, [sp, #14]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008696:	f40a 6a70 	and.w	sl, sl, #3840	@ 0xf00
9000869a:	f89d 2044 	ldrb.w	r2, [sp, #68]	@ 0x44
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000869e:	f40e 6e70 	and.w	lr, lr, #3840	@ 0xf00
900086a2:	021b      	lsls	r3, r3, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086a4:	f89d 9015 	ldrb.w	r9, [sp, #21]
900086a8:	ea4a 0a02 	orr.w	sl, sl, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086ac:	f89d c014 	ldrb.w	ip, [sp, #20]
900086b0:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086b4:	ea4f 2909 	mov.w	r9, r9, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086b8:	ea4f 2c0c 	mov.w	ip, ip, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086bc:	f89d 8013 	ldrb.w	r8, [sp, #19]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086c0:	9301      	str	r3, [sp, #4]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086c2:	f409 6970 	and.w	r9, r9, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086c6:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
900086ca:	f40c 6c70 	and.w	ip, ip, #3840	@ 0xf00
900086ce:	f89d 1012 	ldrb.w	r1, [sp, #18]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086d2:	ea4f 2808 	mov.w	r8, r8, lsl #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086d6:	ea4e 0e03 	orr.w	lr, lr, r3
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086da:	f89d 7011 	ldrb.w	r7, [sp, #17]
900086de:	f408 6870 	and.w	r8, r8, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086e2:	0209      	lsls	r1, r1, #8
      *address = lsb | (msb << 16);
900086e4:	ea4e 4e0a 	orr.w	lr, lr, sl, lsl #16
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086e8:	f89d 2010 	ldrb.w	r2, [sp, #16]
900086ec:	f401 6170 	and.w	r1, r1, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086f0:	023f      	lsls	r7, r7, #8
      *address = lsb | (msb << 16);
900086f2:	f844 ec04 	str.w	lr, [r4, #-4]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086f6:	0212      	lsls	r2, r2, #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
900086f8:	f89d e03c 	ldrb.w	lr, [sp, #60]	@ 0x3c
900086fc:	f407 6770 	and.w	r7, r7, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008700:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008704:	f89d 600f 	ldrb.w	r6, [sp, #15]
90008708:	ea49 090e 	orr.w	r9, r9, lr
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000870c:	f89d e038 	ldrb.w	lr, [sp, #56]	@ 0x38
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008710:	0236      	lsls	r6, r6, #8
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008712:	9b01      	ldr	r3, [sp, #4]
90008714:	ea4c 0c0e 	orr.w	ip, ip, lr
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008718:	f89d 500d 	ldrb.w	r5, [sp, #13]
9000871c:	f406 6670 	and.w	r6, r6, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008720:	f89d b00c 	ldrb.w	fp, [sp, #12]
      *address = lsb | (msb << 16);
90008724:	ea4c 4c09 	orr.w	ip, ip, r9, lsl #16
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008728:	022d      	lsls	r5, r5, #8
      *address = lsb | (msb << 16);
9000872a:	f844 cc08 	str.w	ip, [r4, #-8]
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000872e:	ea4f 2b0b 	mov.w	fp, fp, lsl #8
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008732:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
90008736:	f405 6570 	and.w	r5, r5, #3840	@ 0xf00
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000873a:	f40b 6b70 	and.w	fp, fp, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000873e:	ea48 080c 	orr.w	r8, r8, ip
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008742:	f89d c030 	ldrb.w	ip, [sp, #48]	@ 0x30
90008746:	ea41 010c 	orr.w	r1, r1, ip
      *address = lsb | (msb << 16);
9000874a:	ea41 4108 	orr.w	r1, r1, r8, lsl #16
9000874e:	f844 1c0c 	str.w	r1, [r4, #-12]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008752:	f89d 102c 	ldrb.w	r1, [sp, #44]	@ 0x2c
90008756:	430f      	orrs	r7, r1
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008758:	f89d 1028 	ldrb.w	r1, [sp, #40]	@ 0x28
9000875c:	430a      	orrs	r2, r1
      *address = lsb | (msb << 16);
9000875e:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
90008762:	f844 2c10 	str.w	r2, [r4, #-16]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008766:	f89d 2024 	ldrb.w	r2, [sp, #36]	@ 0x24
9000876a:	4316      	orrs	r6, r2
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000876c:	f89d 2020 	ldrb.w	r2, [sp, #32]
90008770:	4313      	orrs	r3, r2
      *address = lsb | (msb << 16);
90008772:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
90008776:	f844 3c14 	str.w	r3, [r4, #-20]
      msb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
9000877a:	f89d 301c 	ldrb.w	r3, [sp, #28]
9000877e:	431d      	orrs	r5, r3
      lsb = ((uint32_t)(((uint32_t)dcSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)dcSizeCodesTable.HuffmanCode[i] &
90008780:	f89d 3018 	ldrb.w	r3, [sp, #24]
90008784:	ea4b 0303 	orr.w	r3, fp, r3
      *address = lsb | (msb << 16);
90008788:	ea43 4305 	orr.w	r3, r3, r5, lsl #16
9000878c:	f844 3c18 	str.w	r3, [r4, #-24]
}
90008790:	b013      	add	sp, #76	@ 0x4c
90008792:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    address = (hjpeg->Instance->HUFFENC_DC0 + (JPEG_DC_HUFF_TABLE_SIZE / 2UL));
90008796:	f504 64fb 	add.w	r4, r4, #2008	@ 0x7d8
  if (HuffTableDC != NULL)
9000879a:	e769      	b.n	90008670 <JPEG_Set_HuffDC_Mem+0x28>

9000879c <JPEG_Set_HuffAC_Mem>:
  * @param  ACTableAddress Encoder AC huffman table address it could be HUFFENC_AC0 or HUFFENC_AC1.
  * @retval HAL status
  */
static HAL_StatusTypeDef JPEG_Set_HuffAC_Mem(JPEG_HandleTypeDef *hjpeg, JPEG_ACHuffTableTypeDef *HuffTableAC,
                                             const __IO uint32_t *ACTableAddress)
{
9000879c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_StatusTypeDef error;
  JPEG_AC_HuffCodeTableTypeDef acSizeCodesTable;
  uint32_t i, lsb, msb;
  __IO uint32_t *address, *addressDef;

  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
900087a0:	6804      	ldr	r4, [r0, #0]
{
900087a2:	f6ad 0d3c 	subw	sp, sp, #2108	@ 0x83c
900087a6:	460d      	mov	r5, r1
  if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC0))
900087a8:	f504 63a0 	add.w	r3, r4, #1280	@ 0x500
900087ac:	429a      	cmp	r2, r3
900087ae:	d041      	beq.n	90008834 <JPEG_Set_HuffAC_Mem+0x98>
  {
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else if (ACTableAddress == (hjpeg->Instance->HUFFENC_AC1))
900087b0:	f504 63cc 	add.w	r3, r4, #1632	@ 0x660
900087b4:	429a      	cmp	r2, r3
900087b6:	d004      	beq.n	900087c2 <JPEG_Set_HuffAC_Mem+0x26>
  {
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
  }
  else
  {
    return HAL_ERROR;
900087b8:	2001      	movs	r0, #1
    }
  }

  /* Return function status */
  return HAL_OK;
}
900087ba:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
900087be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    address = (hjpeg->Instance->HUFFENC_AC1 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
900087c2:	f204 74a4 	addw	r4, r4, #1956	@ 0x7a4
  error = JPEG_Bits_To_SizeCodes(AC_BitsValsTable->Bits, huffsize, huffcode, &lastK);
900087c6:	4628      	mov	r0, r5
900087c8:	466b      	mov	r3, sp
900087ca:	f20d 4234 	addw	r2, sp, #1076	@ 0x434
900087ce:	a901      	add	r1, sp, #4
900087d0:	f7ff febc 	bl	9000854c <JPEG_Bits_To_SizeCodes>
  if (error != HAL_OK)
900087d4:	2800      	cmp	r0, #0
900087d6:	d1f0      	bne.n	900087ba <JPEG_Set_HuffAC_Mem+0x1e>
  while (k < lastK)
900087d8:	9b00      	ldr	r3, [sp, #0]
900087da:	b373      	cbz	r3, 9000883a <JPEG_Set_HuffAC_Mem+0x9e>
900087dc:	330f      	adds	r3, #15
900087de:	f20d 4c34 	addw	ip, sp, #1076	@ 0x434
900087e2:	af01      	add	r7, sp, #4
900087e4:	f105 020f 	add.w	r2, r5, #15
900087e8:	eb05 0e03 	add.w	lr, r5, r3
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
900087ec:	ae42      	add	r6, sp, #264	@ 0x108
900087ee:	e011      	b.n	90008814 <JPEG_Set_HuffAC_Mem+0x78>
      l = (msb * 10UL) + lsb - 1UL;
900087f0:	eb03 0345 	add.w	r3, r3, r5, lsl #1
    if (l >= JPEG_AC_HUFF_TABLE_SIZE)
900087f4:	2ba1      	cmp	r3, #161	@ 0xa1
900087f6:	d8df      	bhi.n	900087b8 <JPEG_Set_HuffAC_Mem+0x1c>
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
900087f8:	f817 5b01 	ldrb.w	r5, [r7], #1
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
900087fc:	eb06 0883 	add.w	r8, r6, r3, lsl #2
90008800:	f85c 1b04 	ldr.w	r1, [ip], #4
  while (k < lastK)
90008804:	4572      	cmp	r2, lr
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008806:	f105 35ff 	add.w	r5, r5, #4294967295
      AC_SizeCodesTable->HuffmanCode[l] = huffcode[k];
9000880a:	46b1      	mov	r9, r6
9000880c:	f8c8 10a4 	str.w	r1, [r8, #164]	@ 0xa4
      AC_SizeCodesTable->CodeLength[l] = huffsize[k] - 1U;
90008810:	54f5      	strb	r5, [r6, r3]
  while (k < lastK)
90008812:	d014      	beq.n	9000883e <JPEG_Set_HuffAC_Mem+0xa2>
    l = AC_BitsValsTable->HuffVal[k];
90008814:	f812 1f01 	ldrb.w	r1, [r2, #1]!
      l = 160; /*l = 0x00 EOB code*/
90008818:	23a0      	movs	r3, #160	@ 0xa0
    if (l == 0UL)
9000881a:	2900      	cmp	r1, #0
9000881c:	d0ec      	beq.n	900087f8 <JPEG_Set_HuffAC_Mem+0x5c>
      msb = (l & 0xF0UL) >> 4;
9000881e:	090d      	lsrs	r5, r1, #4
      lsb = (l & 0x0FUL);
90008820:	f001 030f 	and.w	r3, r1, #15
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
90008824:	29f0      	cmp	r1, #240	@ 0xf0
      l = (msb * 10UL) + lsb - 1UL;
90008826:	eb05 0585 	add.w	r5, r5, r5, lsl #2
9000882a:	f103 33ff 	add.w	r3, r3, #4294967295
    else if (l == 0xF0UL) /* l = 0xF0 ZRL code*/
9000882e:	d1df      	bne.n	900087f0 <JPEG_Set_HuffAC_Mem+0x54>
      l = 161;
90008830:	23a1      	movs	r3, #161	@ 0xa1
90008832:	e7e1      	b.n	900087f8 <JPEG_Set_HuffAC_Mem+0x5c>
    address = (hjpeg->Instance->HUFFENC_AC0 + (JPEG_AC_HUFF_TABLE_SIZE / 2UL));
90008834:	f204 6444 	addw	r4, r4, #1604	@ 0x644
  if (HuffTableAC != NULL)
90008838:	e7c5      	b.n	900087c6 <JPEG_Set_HuffAC_Mem+0x2a>
9000883a:	f50d 7984 	add.w	r9, sp, #264	@ 0x108
      *addressDef = 0x0FFF0FFF;
9000883e:	f06f 23f0 	mvn.w	r3, #4026593280	@ 0xf000f000
    *addressDef = 0x0FD10FD0;
90008842:	4a1a      	ldr	r2, [pc, #104]	@ (900088ac <JPEG_Set_HuffAC_Mem+0x110>)
90008844:	eba9 0c89 	sub.w	ip, r9, r9, lsl #2
90008848:	4649      	mov	r1, r9
      *addressDef = 0x0FFF0FFF;
9000884a:	6023      	str	r3, [r4, #0]
9000884c:	f10d 0566 	add.w	r5, sp, #102	@ 0x66
90008850:	6063      	str	r3, [r4, #4]
90008852:	f50c 7e4a 	add.w	lr, ip, #808	@ 0x328
90008856:	60a3      	str	r3, [r4, #8]
    *addressDef = 0x0FD30FD2;
90008858:	f103 33d3 	add.w	r3, r3, #3553874899	@ 0xd3d3d3d3
    *addressDef = 0x0FD10FD0;
9000885c:	60e2      	str	r2, [r4, #12]
    *addressDef = 0x0FD30FD2;
9000885e:	f50c 7c49 	add.w	ip, ip, #804	@ 0x324
90008862:	f103 232c 	add.w	r3, r3, #738208768	@ 0x2c002c00
90008866:	6123      	str	r3, [r4, #16]
    *addressDef = 0x0FD50FD4;
90008868:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
9000886c:	6163      	str	r3, [r4, #20]
    *addressDef = 0x0FD70FD6;
9000886e:	f103 1302 	add.w	r3, r3, #131074	@ 0x20002
90008872:	61a3      	str	r3, [r4, #24]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008874:	f891 20a1 	ldrb.w	r2, [r1, #161]	@ 0xa1
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008878:	f891 30a0 	ldrb.w	r3, [r1, #160]	@ 0xa0
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000887c:	0212      	lsls	r2, r2, #8
9000887e:	f81e 7021 	ldrb.w	r7, [lr, r1, lsl #2]
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008882:	021b      	lsls	r3, r3, #8
90008884:	f81c 6021 	ldrb.w	r6, [ip, r1, lsl #2]
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008888:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
    while (i > 1UL)
9000888c:	3902      	subs	r1, #2
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
9000888e:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
      msb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008892:	433a      	orrs	r2, r7
    while (i > 1UL)
90008894:	42a9      	cmp	r1, r5
      lsb = ((uint32_t)(((uint32_t)acSizeCodesTable.CodeLength[i] & 0xFU) << 8)) | ((uint32_t)acSizeCodesTable.HuffmanCode[i] &
90008896:	ea43 0306 	orr.w	r3, r3, r6
      *address = lsb | (msb << 16);
9000889a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9000889e:	f844 3d04 	str.w	r3, [r4, #-4]!
    while (i > 1UL)
900088a2:	d1e7      	bne.n	90008874 <JPEG_Set_HuffAC_Mem+0xd8>
}
900088a4:	f60d 0d3c 	addw	sp, sp, #2108	@ 0x83c
900088a8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900088ac:	0fd10fd0 	.word	0x0fd10fd0

900088b0 <JPEG_Init_Process>:
  * @retval None
  */
static void JPEG_Init_Process(JPEG_HandleTypeDef *hjpeg)
{
  /*Reset pause*/
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
900088b0:	6d42      	ldr	r2, [r0, #84]	@ 0x54

  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
  {
    /*Set JPEG Codec to Decoding mode */
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
900088b2:	6803      	ldr	r3, [r0, #0]
  hjpeg->Context &= (~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT));
900088b4:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
900088b8:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900088ba:	6d42      	ldr	r2, [r0, #84]	@ 0x54
900088bc:	f002 0203 	and.w	r2, r2, #3
900088c0:	2a02      	cmp	r2, #2
    hjpeg->Instance->CONFR1 |= JPEG_CONFR1_DE;
900088c2:	685a      	ldr	r2, [r3, #4]
900088c4:	bf0c      	ite	eq
900088c6:	f042 0208 	orreq.w	r2, r2, #8
  }
  else /* JPEG_CONTEXT_ENCODE */
  {
    /*Set JPEG Codec to Encoding mode */
    hjpeg->Instance->CONFR1 &= ~JPEG_CONFR1_DE;
900088ca:	f022 0208 	bicne.w	r2, r2, #8
900088ce:	605a      	str	r2, [r3, #4]
  }

  /*Stop JPEG processing */
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900088d0:	681a      	ldr	r2, [r3, #0]
900088d2:	f022 0201 	bic.w	r2, r2, #1
900088d6:	601a      	str	r2, [r3, #0]

  /* Disable All Interrupts */
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
900088d8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900088da:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
900088de:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Flush input and output FIFOs*/
  hjpeg->Instance->CR |= JPEG_CR_IFF;
900088e0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900088e2:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
900088e6:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
900088e8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900088ea:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
900088ee:	631a      	str	r2, [r3, #48]	@ 0x30

  /* Clear all flags */
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
900088f0:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
900088f2:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
900088f6:	639a      	str	r2, [r3, #56]	@ 0x38

  /*Start Encoding/Decoding*/
  hjpeg->Instance->CONFR0 |=  JPEG_CONFR0_START;
900088f8:	681a      	ldr	r2, [r3, #0]
900088fa:	f042 0201 	orr.w	r2, r2, #1
900088fe:	601a      	str	r2, [r3, #0]

  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90008900:	6d42      	ldr	r2, [r0, #84]	@ 0x54
90008902:	f002 020c 	and.w	r2, r2, #12
90008906:	2a08      	cmp	r2, #8
90008908:	d00a      	beq.n	90008920 <JPEG_Init_Process+0x70>
  {
    /*Enable IN/OUT, end of Conversation, and end of header parsing interruptions*/
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
  }
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
9000890a:	6d42      	ldr	r2, [r0, #84]	@ 0x54
9000890c:	f002 020c 	and.w	r2, r2, #12
90008910:	2a0c      	cmp	r2, #12
90008912:	d000      	beq.n	90008916 <JPEG_Init_Process+0x66>
  }
  else
  {
    /* Nothing to do */
  }
}
90008914:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90008916:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008918:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
9000891c:	631a      	str	r2, [r3, #48]	@ 0x30
}
9000891e:	4770      	bx	lr
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_IFT | JPEG_IT_IFNF | JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC | JPEG_IT_HPD);
90008920:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008922:	f042 026e 	orr.w	r2, r2, #110	@ 0x6e
90008926:	631a      	str	r2, [r3, #48]	@ 0x30
90008928:	4770      	bx	lr
9000892a:	bf00      	nop

9000892c <JPEG_DMA_StartProcess>:
  /*if the MDMA In is triggred with JPEG In FIFO Threshold flag
      then MDMA In buffer size is 32 bytes
    else (MDMA In is triggred with JPEG In FIFO not full flag)
      then MDMA In buffer size is 4 bytes
    */
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000892c:	6b01      	ldr	r1, [r0, #48]	@ 0x30
    else (MDMA Out is triggred with JPEG Out FIFO not empty flag)
      then MDMA buffer size is 4 bytes
    */
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;

  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000892e:	6a82      	ldr	r2, [r0, #40]	@ 0x28
{
90008930:	b5f0      	push	{r4, r5, r6, r7, lr}
  inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90008932:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
{
90008934:	b083      	sub	sp, #12
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90008936:	42aa      	cmp	r2, r5
90008938:	d32a      	bcc.n	90008990 <JPEG_DMA_StartProcess+0x64>
9000893a:	4604      	mov	r4, r0
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
9000893c:	6b40      	ldr	r0, [r0, #52]	@ 0x34
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
9000893e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
  outXfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90008940:	6a86      	ldr	r6, [r0, #40]	@ 0x28
  if ((hjpeg->InDataLength < inXfrSize) || (hjpeg->OutDataLength < outXfrSize))
90008942:	42b3      	cmp	r3, r6
90008944:	d324      	bcc.n	90008990 <JPEG_DMA_StartProcess+0x64>
    return HAL_ERROR;
  }
  /* Set the JPEG MDMA In transfer complete callback */
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
  /* Set the MDMA In error callback */
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
90008946:	4f19      	ldr	r7, [pc, #100]	@ (900089ac <JPEG_DMA_StartProcess+0x80>)
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
90008948:	f8df c06c 	ldr.w	ip, [pc, #108]	@ 900089b8 <JPEG_DMA_StartProcess+0x8c>
  hjpeg->hdmain->XferErrorCallback = JPEG_MDMAErrorCallback;
9000894c:	654f      	str	r7, [r1, #84]	@ 0x54
  hjpeg->hdmain->XferCpltCallback = JPEG_MDMAInCpltCallback;
9000894e:	f8c1 c044 	str.w	ip, [r1, #68]	@ 0x44

  /* Set the JPEG MDMA Out transfer complete callback */
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
90008952:	4917      	ldr	r1, [pc, #92]	@ (900089b0 <JPEG_DMA_StartProcess+0x84>)
  /* Set the MDMA In error callback */
  hjpeg->hdmaout->XferErrorCallback = JPEG_MDMAErrorCallback;
90008954:	6547      	str	r7, [r0, #84]	@ 0x54
  hjpeg->hdmaout->XferCpltCallback = JPEG_MDMAOutCpltCallback;
90008956:	6441      	str	r1, [r0, #68]	@ 0x44
  /* Set the MDMA Out Abort callback */
  hjpeg->hdmaout->XferAbortCallback = JPEG_MDMAOutAbortCallback;
90008958:	4916      	ldr	r1, [pc, #88]	@ (900089b4 <JPEG_DMA_StartProcess+0x88>)
9000895a:	6581      	str	r1, [r0, #88]	@ 0x58

  if ((inXfrSize == 0UL) || (outXfrSize == 0UL))
9000895c:	b1a5      	cbz	r5, 90008988 <JPEG_DMA_StartProcess+0x5c>
9000895e:	b19e      	cbz	r6, 90008988 <JPEG_DMA_StartProcess+0x5c>
  {
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90008960:	fbb2 f1f5 	udiv	r1, r2, r5
90008964:	fb05 2111 	mls	r1, r5, r1, r2
  /*MDMA transfer size (BNDTR) must be a multiple of MDMA buffer size (TLEN)*/
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);


  /* Start MDMA FIFO Out transfer */
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90008968:	2501      	movs	r5, #1
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000896a:	1a52      	subs	r2, r2, r1
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000896c:	6821      	ldr	r1, [r4, #0]
  hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
9000896e:	62a2      	str	r2, [r4, #40]	@ 0x28
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90008970:	3144      	adds	r1, #68	@ 0x44
  hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % outXfrSize);
90008972:	fbb3 f2f6 	udiv	r2, r3, r6
90008976:	fb06 3212 	mls	r2, r6, r2, r3
9000897a:	1a9b      	subs	r3, r3, r2
9000897c:	62e3      	str	r3, [r4, #44]	@ 0x2c
  if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
9000897e:	9500      	str	r5, [sp, #0]
90008980:	69e2      	ldr	r2, [r4, #28]
90008982:	f001 fc0f 	bl	9000a1a4 <HAL_MDMA_Start_IT>
90008986:	b130      	cbz	r0, 90008996 <JPEG_DMA_StartProcess+0x6a>
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90008988:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9000898a:	f043 0304 	orr.w	r3, r3, #4
9000898e:	6523      	str	r3, [r4, #80]	@ 0x50
    return HAL_ERROR;
90008990:	2001      	movs	r0, #1
    hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
    return HAL_ERROR;
  }

  return HAL_OK;
}
90008992:	b003      	add	sp, #12
90008994:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90008996:	6822      	ldr	r2, [r4, #0]
90008998:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000899a:	69a1      	ldr	r1, [r4, #24]
9000899c:	3240      	adds	r2, #64	@ 0x40
9000899e:	9500      	str	r5, [sp, #0]
900089a0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
900089a2:	f001 fbff 	bl	9000a1a4 <HAL_MDMA_Start_IT>
900089a6:	2800      	cmp	r0, #0
900089a8:	d0f3      	beq.n	90008992 <JPEG_DMA_StartProcess+0x66>
900089aa:	e7ed      	b.n	90008988 <JPEG_DMA_StartProcess+0x5c>
900089ac:	90008fa9 	.word	0x90008fa9
900089b0:	9000921d 	.word	0x9000921d
900089b4:	9000929d 	.word	0x9000929d
900089b8:	90008fd5 	.word	0x90008fd5

900089bc <HAL_JPEG_GetInfo.part.0>:
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
900089bc:	6803      	ldr	r3, [r0, #0]
900089be:	685a      	ldr	r2, [r3, #4]
900089c0:	f002 0203 	and.w	r2, r2, #3
900089c4:	2a02      	cmp	r2, #2
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
900089c6:	685a      	ldr	r2, [r3, #4]
HAL_StatusTypeDef HAL_JPEG_GetInfo(JPEG_HandleTypeDef *hjpeg, JPEG_ConfTypeDef *pInfo)
900089c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900089cc:	4689      	mov	r9, r1
  if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF_1)
900089ce:	f000 80a0 	beq.w	90008b12 <HAL_JPEG_GetInfo.part.0+0x156>
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == 0UL)
900089d2:	f012 0203 	ands.w	r2, r2, #3
900089d6:	d177      	bne.n	90008ac8 <HAL_JPEG_GetInfo.part.0+0x10c>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
900089d8:	6859      	ldr	r1, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
900089da:	f8c9 2000 	str.w	r2, [r9]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
900089de:	68da      	ldr	r2, [r3, #12]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
900089e0:	0c09      	lsrs	r1, r1, #16
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
900089e2:	0c12      	lsrs	r2, r2, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
900089e4:	f8c9 1008 	str.w	r1, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
900089e8:	f8c9 200c 	str.w	r2, [r9, #12]
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
900089ec:	2100      	movs	r1, #0
900089ee:	4a5e      	ldr	r2, [pc, #376]	@ (90008b68 <HAL_JPEG_GetInfo.part.0+0x1ac>)
  */
static uint32_t JPEG_GetQuality(JPEG_HandleTypeDef *hjpeg)
{
  uint32_t quality = 0;
  uint32_t quantRow, quantVal, scale, i, j;
  __IO uint32_t *tableAddress = hjpeg->Instance->QMEM0;
900089f0:	f103 0c50 	add.w	ip, r3, #80	@ 0x50
      pInfo->ChromaSubsampling = JPEG_422_SUBSAMPLING; /*16x8 block*/
900089f4:	f8c9 1004 	str.w	r1, [r9, #4]
  uint32_t quality = 0;
900089f8:	2600      	movs	r6, #0
900089fa:	f102 0440 	add.w	r4, r2, #64	@ 0x40
        quality += 100UL;
      }
      else
      {
        /* Note that the quantization coefficients must be specified in the table in zigzag order */
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
900089fe:	f04f 0e64 	mov.w	lr, #100	@ 0x64
        {
          quality += (200UL - scale) / 2UL;
        }
        else
        {
          quality += 5000UL / scale;
90008a02:	f241 3188 	movw	r1, #5000	@ 0x1388
90008a06:	e033      	b.n	90008a70 <HAL_JPEG_GetInfo.part.0+0xb4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008a08:	f892 8001 	ldrb.w	r8, [r2, #1]
90008a0c:	fb0e f707 	mul.w	r7, lr, r7
90008a10:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90008a12:	f815 8008 	ldrb.w	r8, [r5, r8]
90008a16:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90008a1a:	2f64      	cmp	r7, #100	@ 0x64
90008a1c:	d96a      	bls.n	90008af4 <HAL_JPEG_GetInfo.part.0+0x138>
          quality += 5000UL / scale;
90008a1e:	fbb1 f7f7 	udiv	r7, r1, r7
90008a22:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008a24:	f3c3 4707 	ubfx	r7, r3, #16, #8
      if (quantVal == 1UL)
90008a28:	2f01      	cmp	r7, #1
90008a2a:	d03d      	beq.n	90008aa8 <HAL_JPEG_GetInfo.part.0+0xec>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008a2c:	f892 8002 	ldrb.w	r8, [r2, #2]
90008a30:	fb0e f707 	mul.w	r7, lr, r7
90008a34:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90008a36:	f815 8008 	ldrb.w	r8, [r5, r8]
90008a3a:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90008a3e:	2f64      	cmp	r7, #100	@ 0x64
90008a40:	d953      	bls.n	90008aea <HAL_JPEG_GetInfo.part.0+0x12e>
          quality += 5000UL / scale;
90008a42:	fbb1 f7f7 	udiv	r7, r1, r7
90008a46:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008a48:	0e1b      	lsrs	r3, r3, #24
      if (quantVal == 1UL)
90008a4a:	2b01      	cmp	r3, #1
90008a4c:	d030      	beq.n	90008ab0 <HAL_JPEG_GetInfo.part.0+0xf4>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008a4e:	78d7      	ldrb	r7, [r2, #3]
90008a50:	fb0e f303 	mul.w	r3, lr, r3
90008a54:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90008a56:	5def      	ldrb	r7, [r5, r7]
90008a58:	fbb3 f3f7 	udiv	r3, r3, r7
        if (scale <= 100UL)
90008a5c:	2b64      	cmp	r3, #100	@ 0x64
90008a5e:	d953      	bls.n	90008b08 <HAL_JPEG_GetInfo.part.0+0x14c>
          quality += 5000UL / scale;
90008a60:	fbb1 f3f3 	udiv	r3, r1, r3
90008a64:	441e      	add	r6, r3
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90008a66:	3204      	adds	r2, #4
        }
      }
    }

    i += 4UL;
    tableAddress ++;
90008a68:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90008a6c:	42a2      	cmp	r2, r4
90008a6e:	d025      	beq.n	90008abc <HAL_JPEG_GetInfo.part.0+0x100>
    quantRow = *tableAddress;
90008a70:	f8dc 3000 	ldr.w	r3, [ip]
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008a74:	b2df      	uxtb	r7, r3
      if (quantVal == 1UL)
90008a76:	2f01      	cmp	r7, #1
90008a78:	d035      	beq.n	90008ae6 <HAL_JPEG_GetInfo.part.0+0x12a>
        scale = (quantVal * 100UL) / ((uint32_t) hjpeg->QuantTable0[JPEG_ZIGZAG_ORDER[i + j]]);
90008a7a:	f892 8000 	ldrb.w	r8, [r2]
90008a7e:	fb0e f707 	mul.w	r7, lr, r7
90008a82:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90008a84:	f815 8008 	ldrb.w	r8, [r5, r8]
90008a88:	fbb7 f7f8 	udiv	r7, r7, r8
        if (scale <= 100UL)
90008a8c:	2f64      	cmp	r7, #100	@ 0x64
90008a8e:	d936      	bls.n	90008afe <HAL_JPEG_GetInfo.part.0+0x142>
          quality += 5000UL / scale;
90008a90:	fbb1 f7f7 	udiv	r7, r1, r7
90008a94:	443e      	add	r6, r7
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008a96:	f3c3 2707 	ubfx	r7, r3, #8, #8
      if (quantVal == 1UL)
90008a9a:	2f01      	cmp	r7, #1
90008a9c:	d1b4      	bne.n	90008a08 <HAL_JPEG_GetInfo.part.0+0x4c>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008a9e:	f3c3 4707 	ubfx	r7, r3, #16, #8
        quality += 100UL;
90008aa2:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
90008aa4:	2f01      	cmp	r7, #1
90008aa6:	d1c1      	bne.n	90008a2c <HAL_JPEG_GetInfo.part.0+0x70>
      quantVal = (quantRow >> (8UL * j)) & 0xFFUL;
90008aa8:	0e1b      	lsrs	r3, r3, #24
        quality += 100UL;
90008aaa:	3664      	adds	r6, #100	@ 0x64
      if (quantVal == 1UL)
90008aac:	2b01      	cmp	r3, #1
90008aae:	d1ce      	bne.n	90008a4e <HAL_JPEG_GetInfo.part.0+0x92>
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90008ab0:	3204      	adds	r2, #4
        quality += 100UL;
90008ab2:	3664      	adds	r6, #100	@ 0x64
    tableAddress ++;
90008ab4:	f10c 0c04 	add.w	ip, ip, #4
  while (i < (JPEG_QUANT_TABLE_SIZE - 3UL))
90008ab8:	42a2      	cmp	r2, r4
90008aba:	d1d9      	bne.n	90008a70 <HAL_JPEG_GetInfo.part.0+0xb4>
  }

  return (quality / 64UL);
90008abc:	09b6      	lsrs	r6, r6, #6
  return HAL_OK;
90008abe:	2000      	movs	r0, #0
  pInfo->ImageQuality = JPEG_GetQuality(hjpeg);
90008ac0:	f8c9 6010 	str.w	r6, [r9, #16]
}
90008ac4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  else if ((hjpeg->Instance->CONFR1 & JPEG_CONFR1_NF) == JPEG_CONFR1_NF)
90008ac8:	685a      	ldr	r2, [r3, #4]
90008aca:	f002 0203 	and.w	r2, r2, #3
90008ace:	2a03      	cmp	r2, #3
90008ad0:	d147      	bne.n	90008b62 <HAL_JPEG_GetInfo.part.0+0x1a6>
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008ad2:	685a      	ldr	r2, [r3, #4]
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90008ad4:	2130      	movs	r1, #48	@ 0x30
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008ad6:	0c12      	lsrs	r2, r2, #16
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90008ad8:	f8c9 1000 	str.w	r1, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008adc:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008ae0:	68da      	ldr	r2, [r3, #12]
90008ae2:	0c12      	lsrs	r2, r2, #16
  if ((pInfo->ColorSpace == JPEG_YCBCR_COLORSPACE) || (pInfo->ColorSpace == JPEG_CMYK_COLORSPACE))
90008ae4:	e01d      	b.n	90008b22 <HAL_JPEG_GetInfo.part.0+0x166>
        quality += 100UL;
90008ae6:	3664      	adds	r6, #100	@ 0x64
90008ae8:	e7d5      	b.n	90008a96 <HAL_JPEG_GetInfo.part.0+0xda>
          quality += (200UL - scale) / 2UL;
90008aea:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90008aee:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90008af2:	e7a9      	b.n	90008a48 <HAL_JPEG_GetInfo.part.0+0x8c>
90008af4:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90008af8:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90008afc:	e792      	b.n	90008a24 <HAL_JPEG_GetInfo.part.0+0x68>
90008afe:	f1c7 07c8 	rsb	r7, r7, #200	@ 0xc8
90008b02:	eb06 0657 	add.w	r6, r6, r7, lsr #1
90008b06:	e7c6      	b.n	90008a96 <HAL_JPEG_GetInfo.part.0+0xda>
90008b08:	f1c3 03c8 	rsb	r3, r3, #200	@ 0xc8
90008b0c:	eb06 0653 	add.w	r6, r6, r3, lsr #1
90008b10:	e7a9      	b.n	90008a66 <HAL_JPEG_GetInfo.part.0+0xaa>
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90008b12:	2110      	movs	r1, #16
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008b14:	40ca      	lsrs	r2, r1
    pInfo->ColorSpace = JPEG_YCBCR_COLORSPACE;
90008b16:	f8c9 1000 	str.w	r1, [r9]
  pInfo->ImageHeight = (hjpeg->Instance->CONFR1 & 0xFFFF0000UL) >> 16;
90008b1a:	f8c9 2008 	str.w	r2, [r9, #8]
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008b1e:	68da      	ldr	r2, [r3, #12]
90008b20:	40ca      	lsrs	r2, r1
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90008b22:	6919      	ldr	r1, [r3, #16]
    cBblockNb = (hjpeg->Instance->CONFR5 & JPEG_CONFR5_NB) >> 4;
90008b24:	695c      	ldr	r4, [r3, #20]
    yblockNb  = (hjpeg->Instance->CONFR4 & JPEG_CONFR4_NB) >> 4;
90008b26:	f3c1 1603 	ubfx	r6, r1, #4, #4
  pInfo->ImageWidth  = (hjpeg->Instance->CONFR3 & 0xFFFF0000UL) >> 16;
90008b2a:	f8c9 200c 	str.w	r2, [r9, #12]
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
90008b2e:	699a      	ldr	r2, [r3, #24]
90008b30:	f004 07f0 	and.w	r7, r4, #240	@ 0xf0
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90008b34:	2e01      	cmp	r6, #1
    cRblockNb = (hjpeg->Instance->CONFR6 & JPEG_CONFR6_NB) >> 4;
90008b36:	f3c2 1203 	ubfx	r2, r2, #4, #4
    if ((yblockNb == 1UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90008b3a:	d105      	bne.n	90008b48 <HAL_JPEG_GetInfo.part.0+0x18c>
90008b3c:	b927      	cbnz	r7, 90008b48 <HAL_JPEG_GetInfo.part.0+0x18c>
90008b3e:	2a00      	cmp	r2, #0
90008b40:	f47f af54 	bne.w	900089ec <HAL_JPEG_GetInfo.part.0+0x30>
90008b44:	2102      	movs	r1, #2
90008b46:	e752      	b.n	900089ee <HAL_JPEG_GetInfo.part.0+0x32>
    else if ((yblockNb == 0UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90008b48:	4321      	orrs	r1, r4
90008b4a:	f011 0ff0 	tst.w	r1, #240	@ 0xf0
90008b4e:	f43f af4d 	beq.w	900089ec <HAL_JPEG_GetInfo.part.0+0x30>
    else if ((yblockNb == 3UL) && (cBblockNb == 0UL) && (cRblockNb == 0UL))
90008b52:	433a      	orrs	r2, r7
90008b54:	f47f af4a 	bne.w	900089ec <HAL_JPEG_GetInfo.part.0+0x30>
90008b58:	2e03      	cmp	r6, #3
90008b5a:	f47f af47 	bne.w	900089ec <HAL_JPEG_GetInfo.part.0+0x30>
90008b5e:	2101      	movs	r1, #1
90008b60:	e745      	b.n	900089ee <HAL_JPEG_GetInfo.part.0+0x32>
    return HAL_ERROR;
90008b62:	2001      	movs	r0, #1
}
90008b64:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90008b68:	9002ced8 	.word	0x9002ced8

90008b6c <HAL_JPEG_Init>:
  if (hjpeg == NULL)
90008b6c:	2800      	cmp	r0, #0
90008b6e:	f000 8108 	beq.w	90008d82 <HAL_JPEG_Init+0x216>
{
90008b72:	b570      	push	{r4, r5, r6, lr}
  if (hjpeg->State == HAL_JPEG_STATE_RESET)
90008b74:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
90008b78:	4605      	mov	r5, r0
90008b7a:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90008b7e:	2b00      	cmp	r3, #0
90008b80:	f000 80fa 	beq.w	90008d78 <HAL_JPEG_Init+0x20c>
  __HAL_JPEG_ENABLE(hjpeg);
90008b84:	682c      	ldr	r4, [r5, #0]
  hjpeg->State = HAL_JPEG_STATE_BUSY;
90008b86:	2202      	movs	r2, #2
  hjpeg->QuantTable2 = NULL;
90008b88:	2300      	movs	r3, #0
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
90008b8a:	497f      	ldr	r1, [pc, #508]	@ (90008d88 <HAL_JPEG_Init+0x21c>)
  hjpeg->State = HAL_JPEG_STATE_BUSY;
90008b8c:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  __HAL_JPEG_ENABLE(hjpeg);
90008b90:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90008b92:	f042 0201 	orr.w	r2, r2, #1
90008b96:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90008b98:	6822      	ldr	r2, [r4, #0]
90008b9a:	f022 0201 	bic.w	r2, r2, #1
90008b9e:	6022      	str	r2, [r4, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008ba0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90008ba2:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90008ba6:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90008ba8:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90008baa:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90008bae:	6322      	str	r2, [r4, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90008bb0:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90008bb2:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008bb6:	6322      	str	r2, [r4, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90008bb8:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
90008bba:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90008bbe:	63a2      	str	r2, [r4, #56]	@ 0x38
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90008bc0:	4a72      	ldr	r2, [pc, #456]	@ (90008d8c <HAL_JPEG_Init+0x220>)
  hjpeg->QuantTable0 = (uint8_t *)((uint32_t)JPEG_LUM_QuantTable);
90008bc2:	63e9      	str	r1, [r5, #60]	@ 0x3c
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008bc4:	2101      	movs	r1, #1
  hjpeg->QuantTable2 = NULL;
90008bc6:	64ab      	str	r3, [r5, #72]	@ 0x48
  hjpeg->QuantTable1 = (uint8_t *)((uint32_t)JPEG_CHROM_QuantTable);
90008bc8:	e9c5 2310 	strd	r2, r3, [r5, #64]	@ 0x40
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008bcc:	f8c4 336c 	str.w	r3, [r4, #876]	@ 0x36c
90008bd0:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
90008bd4:	4b6e      	ldr	r3, [pc, #440]	@ (90008d90 <HAL_JPEG_Init+0x224>)
90008bd6:	f8c4 1368 	str.w	r1, [r4, #872]	@ 0x368
90008bda:	f8c4 2364 	str.w	r2, [r4, #868]	@ 0x364
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008bde:	496d      	ldr	r1, [pc, #436]	@ (90008d94 <HAL_JPEG_Init+0x228>)
    *address = (((uint32_t)HuffTableDC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008be0:	f8c4 3360 	str.w	r3, [r4, #864]	@ 0x360
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008be4:	4b6c      	ldr	r3, [pc, #432]	@ (90008d98 <HAL_JPEG_Init+0x22c>)
90008be6:	f8c4 1378 	str.w	r1, [r4, #888]	@ 0x378
90008bea:	4a6c      	ldr	r2, [pc, #432]	@ (90008d9c <HAL_JPEG_Init+0x230>)
90008bec:	f8c4 3374 	str.w	r3, [r4, #884]	@ 0x374
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008bf0:	4b6b      	ldr	r3, [pc, #428]	@ (90008da0 <HAL_JPEG_Init+0x234>)
    *address = (((uint32_t)HuffTableDC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008bf2:	f8c4 2370 	str.w	r2, [r4, #880]	@ 0x370
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008bf6:	f5a2 427f 	sub.w	r2, r2, #65280	@ 0xff00
90008bfa:	f8c4 3388 	str.w	r3, [r4, #904]	@ 0x388
90008bfe:	4969      	ldr	r1, [pc, #420]	@ (90008da4 <HAL_JPEG_Init+0x238>)
90008c00:	4b69      	ldr	r3, [pc, #420]	@ (90008da8 <HAL_JPEG_Init+0x23c>)
90008c02:	f8c4 1384 	str.w	r1, [r4, #900]	@ 0x384
  address--; /* address = hjpeg->Instance->DHTMEM + 50*/
90008c06:	f504 6185 	add.w	r1, r4, #1064	@ 0x428
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008c0a:	f8c4 3380 	str.w	r3, [r4, #896]	@ 0x380
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90008c0e:	f64f 23f9 	movw	r3, #64249	@ 0xfaf9
    *address = (((uint32_t)HuffTableAC0->Bits[index - 1UL] & 0xFFUL) << 24) |
90008c12:	f8c4 237c 	str.w	r2, [r4, #892]	@ 0x37c
  value = *address & 0xFFFF0000U;
90008c16:	f8d4 042c 	ldr.w	r0, [r4, #1068]	@ 0x42c
90008c1a:	4a64      	ldr	r2, [pc, #400]	@ (90008dac <HAL_JPEG_Init+0x240>)
90008c1c:	f36f 000f 	bfc	r0, #0, #16
  value = value | (((uint32_t)HuffTableAC0->HuffVal[161] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC0->HuffVal[160] & 0xFFUL);
90008c20:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
90008c24:	4303      	orrs	r3, r0
  *address = value;
90008c26:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
90008c2a:	f892 30ae 	ldrb.w	r3, [r2, #174]	@ 0xae
  while (index > 3UL)
90008c2e:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008c30:	f892 e0b3 	ldrb.w	lr, [r2, #179]	@ 0xb3
               (((uint32_t)HuffTableAC0->HuffVal[index - 2UL] & 0xFFUL) << 16) |
90008c34:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC0->HuffVal[index - 4UL] & 0xFFUL);
90008c36:	f892 c0b0 	ldrb.w	ip, [r2, #176]	@ 0xb0
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
90008c3a:	f892 00b1 	ldrb.w	r0, [r2, #177]	@ 0xb1
  while (index > 3UL)
90008c3e:	4296      	cmp	r6, r2
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008c40:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
               (((uint32_t)HuffTableAC0->HuffVal[index - 3UL] & 0xFFUL) << 8) |
90008c44:	ea43 030c 	orr.w	r3, r3, ip
90008c48:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC0->HuffVal[index - 1UL] & 0xFFUL) << 24) |
90008c4c:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
90008c50:	d1eb      	bne.n	90008c2a <HAL_JPEG_Init+0xbe>
  value = *address & 0x0000FFFFU;
90008c52:	f8d4 342c 	ldr.w	r3, [r4, #1068]	@ 0x42c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008c56:	f04f 3201 	mov.w	r2, #16843009	@ 0x1010101
  value = *address & 0xFFFF0000U;
90008c5a:	4955      	ldr	r1, [pc, #340]	@ (90008db0 <HAL_JPEG_Init+0x244>)
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008c5c:	2001      	movs	r0, #1
  value = *address & 0x0000FFFFU;
90008c5e:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->Bits[0] & 0xFFUL) << 16);
90008c60:	f043 7340 	orr.w	r3, r3, #50331648	@ 0x3000000
  *address = value;
90008c64:	f8c4 342c 	str.w	r3, [r4, #1068]	@ 0x42c
  value = *address & 0xFFFF0000U;
90008c68:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
90008c6c:	400b      	ands	r3, r1
  *address = value;
90008c6e:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
    *address = (((uint32_t)HuffTableDC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008c72:	f8c4 0438 	str.w	r0, [r4, #1080]	@ 0x438
90008c76:	f8c4 2434 	str.w	r2, [r4, #1076]	@ 0x434
90008c7a:	f8c4 2430 	str.w	r2, [r4, #1072]	@ 0x430
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
90008c7e:	f640 320a 	movw	r2, #2826	@ 0xb0a
  value = *address & 0x0000FFFFUL;
90008c82:	f8d4 343c 	ldr.w	r3, [r4, #1084]	@ 0x43c
90008c86:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableDC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableDC1->HuffVal[0] & 0xFFUL) <<
90008c88:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
90008c8c:	f8c4 343c 	str.w	r3, [r4, #1084]	@ 0x43c
  value = *address & 0xFFFF0000UL;
90008c90:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
90008c94:	400b      	ands	r3, r1
  value = value | (((uint32_t)HuffTableDC1->HuffVal[11] & 0xFFUL) << 8) | ((uint32_t)HuffTableDC1->HuffVal[10] & 0xFFUL);
90008c96:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90008c98:	4b46      	ldr	r3, [pc, #280]	@ (90008db4 <HAL_JPEG_Init+0x248>)
  *address = value;
90008c9a:	f8c4 2448 	str.w	r2, [r4, #1096]	@ 0x448
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
90008c9e:	f247 7202 	movw	r2, #30466	@ 0x7702
    *address = (((uint32_t)HuffTableDC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90008ca2:	f8c4 3444 	str.w	r3, [r4, #1092]	@ 0x444
90008ca6:	f1a3 3304 	sub.w	r3, r3, #67372036	@ 0x4040404
90008caa:	f8c4 3440 	str.w	r3, [r4, #1088]	@ 0x440
  value = *address & 0x0000FFFFU;
90008cae:	f8d4 3448 	ldr.w	r3, [r4, #1096]	@ 0x448
90008cb2:	b29b      	uxth	r3, r3
  value = value | (((uint32_t)HuffTableAC1->Bits[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->Bits[0] & 0xFFUL) << 16);
90008cb4:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
  *address = value;
90008cb8:	f8c4 3448 	str.w	r3, [r4, #1096]	@ 0x448
  value = *address & 0xFFFF0000U;
90008cbc:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
90008cc0:	400b      	ands	r3, r1
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008cc2:	493d      	ldr	r1, [pc, #244]	@ (90008db8 <HAL_JPEG_Init+0x24c>)
  value = value | (((uint32_t)HuffTableAC1->Bits[15] & 0xFFUL) << 8) | ((uint32_t)HuffTableAC1->Bits[14] & 0xFFUL);
90008cc4:	431a      	orrs	r2, r3
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008cc6:	4b3d      	ldr	r3, [pc, #244]	@ (90008dbc <HAL_JPEG_Init+0x250>)
  *address = value;
90008cc8:	f8c4 2458 	str.w	r2, [r4, #1112]	@ 0x458
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008ccc:	4a3c      	ldr	r2, [pc, #240]	@ (90008dc0 <HAL_JPEG_Init+0x254>)
90008cce:	f8c4 1454 	str.w	r1, [r4, #1108]	@ 0x454
  address = (hjpeg->Instance->DHTMEM + 102);
90008cd2:	f504 619f 	add.w	r1, r4, #1272	@ 0x4f8
    *address = (((uint32_t)HuffTableAC1->Bits[index + 1UL] & 0xFFUL) << 24) |
90008cd6:	f8c4 2450 	str.w	r2, [r4, #1104]	@ 0x450
90008cda:	f8c4 344c 	str.w	r3, [r4, #1100]	@ 0x44c
  value = *address & 0x0000FFFFUL;
90008cde:	f8d4 3458 	ldr.w	r3, [r4, #1112]	@ 0x458
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90008ce2:	4a38      	ldr	r2, [pc, #224]	@ (90008dc4 <HAL_JPEG_Init+0x258>)
  value = *address & 0x0000FFFFUL;
90008ce4:	b29b      	uxth	r3, r3
90008ce6:	f1a2 06a0 	sub.w	r6, r2, #160	@ 0xa0
  value = value | (((uint32_t)HuffTableAC1->HuffVal[1] & 0xFFUL) << 24) | (((uint32_t)HuffTableAC1->HuffVal[0] & 0xFFUL) <<
90008cea:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
  *address = value;
90008cee:	f8c4 3458 	str.w	r3, [r4, #1112]	@ 0x458
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90008cf2:	f892 30b0 	ldrb.w	r3, [r2, #176]	@ 0xb0
  while (index > 3UL)
90008cf6:	3a04      	subs	r2, #4
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90008cf8:	f892 e0b5 	ldrb.w	lr, [r2, #181]	@ 0xb5
               (((uint32_t)HuffTableAC1->HuffVal[index] & 0xFFUL) << 16) |
90008cfc:	041b      	lsls	r3, r3, #16
               ((uint32_t)HuffTableAC1->HuffVal[index - 2UL] & 0xFFUL);
90008cfe:	f892 c0b2 	ldrb.w	ip, [r2, #178]	@ 0xb2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90008d02:	f892 00b3 	ldrb.w	r0, [r2, #179]	@ 0xb3
  while (index > 3UL)
90008d06:	4296      	cmp	r6, r2
               (((uint32_t)HuffTableAC1->HuffVal[index - 1UL] & 0xFFUL) << 8) |
90008d08:	ea43 630e 	orr.w	r3, r3, lr, lsl #24
90008d0c:	ea43 030c 	orr.w	r3, r3, ip
90008d10:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
    *address = (((uint32_t)HuffTableAC1->HuffVal[index + 1UL] & 0xFFUL) << 24) |
90008d14:	f841 3904 	str.w	r3, [r1], #-4
  while (index > 3UL)
90008d18:	d1eb      	bne.n	90008cf2 <HAL_JPEG_Init+0x186>
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACLUM_HuffTable,
90008d1a:	f504 62a0 	add.w	r2, r4, #1280	@ 0x500
90008d1e:	4923      	ldr	r1, [pc, #140]	@ (90008dac <HAL_JPEG_Init+0x240>)
90008d20:	4628      	mov	r0, r5
90008d22:	f7ff fd3b 	bl	9000879c <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90008d26:	b118      	cbz	r0, 90008d30 <HAL_JPEG_Init+0x1c4>
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90008d28:	2301      	movs	r3, #1
    return HAL_ERROR;
90008d2a:	2001      	movs	r0, #1
    hjpeg->ErrorCode = HAL_JPEG_ERROR_HUFF_TABLE;
90008d2c:	652b      	str	r3, [r5, #80]	@ 0x50
}
90008d2e:	bd70      	pop	{r4, r5, r6, pc}
  error = JPEG_Set_HuffAC_Mem(hjpeg, (JPEG_ACHuffTableTypeDef *)(uint32_t)&JPEG_ACCHROM_HuffTable,
90008d30:	f504 62cc 	add.w	r2, r4, #1632	@ 0x660
90008d34:	4923      	ldr	r1, [pc, #140]	@ (90008dc4 <HAL_JPEG_Init+0x258>)
90008d36:	4628      	mov	r0, r5
90008d38:	f7ff fd30 	bl	9000879c <JPEG_Set_HuffAC_Mem>
  if (error != HAL_OK)
90008d3c:	2800      	cmp	r0, #0
90008d3e:	d1f3      	bne.n	90008d28 <HAL_JPEG_Init+0x1bc>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCLUM_HuffTable,
90008d40:	f504 62f8 	add.w	r2, r4, #1984	@ 0x7c0
90008d44:	4920      	ldr	r1, [pc, #128]	@ (90008dc8 <HAL_JPEG_Init+0x25c>)
90008d46:	4628      	mov	r0, r5
90008d48:	f7ff fc7e 	bl	90008648 <JPEG_Set_HuffDC_Mem>
  if (error != HAL_OK)
90008d4c:	2800      	cmp	r0, #0
90008d4e:	d1eb      	bne.n	90008d28 <HAL_JPEG_Init+0x1bc>
  error = JPEG_Set_HuffDC_Mem(hjpeg, (JPEG_DCHuffTableTypeDef *)(uint32_t)&JPEG_DCCHROM_HuffTable,
90008d50:	f504 62fc 	add.w	r2, r4, #2016	@ 0x7e0
90008d54:	491d      	ldr	r1, [pc, #116]	@ (90008dcc <HAL_JPEG_Init+0x260>)
90008d56:	4628      	mov	r0, r5
90008d58:	f7ff fc76 	bl	90008648 <JPEG_Set_HuffDC_Mem>
  if (JPEG_Set_HuffEnc_Mem(hjpeg) != HAL_OK)
90008d5c:	2800      	cmp	r0, #0
90008d5e:	d1e3      	bne.n	90008d28 <HAL_JPEG_Init+0x1bc>
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
90008d60:	6863      	ldr	r3, [r4, #4]
  hjpeg->State = HAL_JPEG_STATE_READY;
90008d62:	2201      	movs	r2, #1
  hjpeg->Instance->CONFR1 |= JPEG_CONFR1_HDR;
90008d64:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
90008d68:	6063      	str	r3, [r4, #4]
  hjpeg->JpegInCount = 0;
90008d6a:	6228      	str	r0, [r5, #32]
  hjpeg->JpegOutCount = 0;
90008d6c:	6268      	str	r0, [r5, #36]	@ 0x24
  hjpeg->State = HAL_JPEG_STATE_READY;
90008d6e:	f885 204d 	strb.w	r2, [r5, #77]	@ 0x4d
  hjpeg->ErrorCode = HAL_JPEG_ERROR_NONE;
90008d72:	6528      	str	r0, [r5, #80]	@ 0x50
  hjpeg->Context = 0;
90008d74:	6568      	str	r0, [r5, #84]	@ 0x54
}
90008d76:	bd70      	pop	{r4, r5, r6, pc}
    hjpeg->Lock = HAL_UNLOCKED;
90008d78:	f880 204c 	strb.w	r2, [r0, #76]	@ 0x4c
    HAL_JPEG_MspInit(hjpeg);
90008d7c:	f7fb f898 	bl	90003eb0 <HAL_JPEG_MspInit>
90008d80:	e700      	b.n	90008b84 <HAL_JPEG_Init+0x18>
    return HAL_ERROR;
90008d82:	2001      	movs	r0, #1
}
90008d84:	4770      	bx	lr
90008d86:	bf00      	nop
90008d88:	9002ce98 	.word	0x9002ce98
90008d8c:	9002ce58 	.word	0x9002ce58
90008d90:	01050100 	.word	0x01050100
90008d94:	0b0a0908 	.word	0x0b0a0908
90008d98:	07060504 	.word	0x07060504
90008d9c:	03020100 	.word	0x03020100
90008da0:	7d010000 	.word	0x7d010000
90008da4:	04040505 	.word	0x04040505
90008da8:	03040203 	.word	0x03040203
90008dac:	9002cfcc 	.word	0x9002cfcc
90008db0:	ffff0000 	.word	0xffff0000
90008db4:	09080706 	.word	0x09080706
90008db8:	01000404 	.word	0x01000404
90008dbc:	04040201 	.word	0x04040201
90008dc0:	05070403 	.word	0x05070403
90008dc4:	9002cf18 	.word	0x9002cf18
90008dc8:	9002d09c 	.word	0x9002d09c
90008dcc:	9002d080 	.word	0x9002d080

90008dd0 <HAL_JPEG_Decode_DMA>:
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90008dd0:	2b00      	cmp	r3, #0
90008dd2:	bf18      	it	ne
90008dd4:	2900      	cmpne	r1, #0
90008dd6:	d036      	beq.n	90008e46 <HAL_JPEG_Decode_DMA+0x76>
{
90008dd8:	b538      	push	{r3, r4, r5, lr}
  if ((hjpeg == NULL) || (pDataIn == NULL) || (pDataOutMCU == NULL))
90008dda:	fab0 f580 	clz	r5, r0
90008dde:	4604      	mov	r4, r0
90008de0:	096d      	lsrs	r5, r5, #5
90008de2:	b370      	cbz	r0, 90008e42 <HAL_JPEG_Decode_DMA+0x72>
  __HAL_LOCK(hjpeg);
90008de4:	f890 c04c 	ldrb.w	ip, [r0, #76]	@ 0x4c
90008de8:	f1bc 0f01 	cmp.w	ip, #1
90008dec:	d022      	beq.n	90008e34 <HAL_JPEG_Decode_DMA+0x64>
90008dee:	f04f 0c01 	mov.w	ip, #1
90008df2:	f880 c04c 	strb.w	ip, [r0, #76]	@ 0x4c
  if (hjpeg->State == HAL_JPEG_STATE_READY)
90008df6:	f890 c04d 	ldrb.w	ip, [r0, #77]	@ 0x4d
90008dfa:	f1bc 0f01 	cmp.w	ip, #1
90008dfe:	d117      	bne.n	90008e30 <HAL_JPEG_Decode_DMA+0x60>
    hjpeg->InDataLength = InDataLength;
90008e00:	6282      	str	r2, [r0, #40]	@ 0x28
    hjpeg->pJpegOutBuffPtr = pDataOutMCU;
90008e02:	e9c0 1306 	strd	r1, r3, [r0, #24]
    hjpeg->OutDataLength = OutDataLength;
90008e06:	9b04      	ldr	r3, [sp, #16]
90008e08:	62c3      	str	r3, [r0, #44]	@ 0x2c
    hjpeg->State = HAL_JPEG_STATE_BUSY_DECODING;
90008e0a:	2304      	movs	r3, #4
90008e0c:	f880 304d 	strb.w	r3, [r0, #77]	@ 0x4d
    hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK);
90008e10:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008e12:	f023 030f 	bic.w	r3, r3, #15
90008e16:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->Context |= (JPEG_CONTEXT_DECODE | JPEG_CONTEXT_DMA);
90008e18:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008e1a:	f043 030e 	orr.w	r3, r3, #14
90008e1e:	6543      	str	r3, [r0, #84]	@ 0x54
    hjpeg->JpegInCount = 0;
90008e20:	6205      	str	r5, [r0, #32]
    hjpeg->JpegOutCount = 0;
90008e22:	6245      	str	r5, [r0, #36]	@ 0x24
    JPEG_Init_Process(hjpeg);
90008e24:	f7ff fd44 	bl	900088b0 <JPEG_Init_Process>
    if (JPEG_DMA_StartProcess(hjpeg) != HAL_OK)
90008e28:	f7ff fd80 	bl	9000892c <JPEG_DMA_StartProcess>
90008e2c:	b920      	cbnz	r0, 90008e38 <HAL_JPEG_Decode_DMA+0x68>
}
90008e2e:	bd38      	pop	{r3, r4, r5, pc}
    __HAL_UNLOCK(hjpeg);
90008e30:	f880 504c 	strb.w	r5, [r0, #76]	@ 0x4c
  __HAL_LOCK(hjpeg);
90008e34:	2002      	movs	r0, #2
}
90008e36:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90008e38:	2306      	movs	r3, #6
      __HAL_UNLOCK(hjpeg);
90008e3a:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90008e3e:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
90008e42:	2001      	movs	r0, #1
}
90008e44:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
90008e46:	2001      	movs	r0, #1
}
90008e48:	4770      	bx	lr
90008e4a:	bf00      	nop

90008e4c <HAL_JPEG_Pause>:
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008e4c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008e4e:	f003 030c 	and.w	r3, r3, #12
90008e52:	2b0c      	cmp	r3, #12
90008e54:	d01a      	beq.n	90008e8c <HAL_JPEG_Pause+0x40>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90008e56:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008e58:	f003 030c 	and.w	r3, r3, #12
90008e5c:	2b08      	cmp	r3, #8
90008e5e:	d001      	beq.n	90008e64 <HAL_JPEG_Pause+0x18>
}
90008e60:	2000      	movs	r0, #0
90008e62:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90008e64:	07ca      	lsls	r2, r1, #31
90008e66:	d41f      	bmi.n	90008ea8 <HAL_JPEG_Pause+0x5c>
90008e68:	f04f 3cff 	mov.w	ip, #4294967295
90008e6c:	f06f 0228 	mvn.w	r2, #40	@ 0x28
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90008e70:	078b      	lsls	r3, r1, #30
90008e72:	d504      	bpl.n	90008e7e <HAL_JPEG_Pause+0x32>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
90008e74:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008e76:	4694      	mov	ip, r2
90008e78:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
90008e7c:	6543      	str	r3, [r0, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90008e7e:	6802      	ldr	r2, [r0, #0]
}
90008e80:	2000      	movs	r0, #0
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
90008e82:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90008e84:	ea03 030c 	and.w	r3, r3, ip
90008e88:	6313      	str	r3, [r2, #48]	@ 0x30
}
90008e8a:	4770      	bx	lr
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
90008e8c:	07cb      	lsls	r3, r1, #31
90008e8e:	d503      	bpl.n	90008e98 <HAL_JPEG_Pause+0x4c>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90008e90:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008e92:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
90008e96:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
90008e98:	0789      	lsls	r1, r1, #30
90008e9a:	d5e1      	bpl.n	90008e60 <HAL_JPEG_Pause+0x14>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_OUTPUT;
90008e9c:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008e9e:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
90008ea2:	6543      	str	r3, [r0, #84]	@ 0x54
}
90008ea4:	2000      	movs	r0, #0
90008ea6:	4770      	bx	lr
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90008ea8:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90008eaa:	f06f 0c06 	mvn.w	ip, #6
90008eae:	f06f 022e 	mvn.w	r2, #46	@ 0x2e
90008eb2:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
90008eb6:	6543      	str	r3, [r0, #84]	@ 0x54
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
90008eb8:	e7da      	b.n	90008e70 <HAL_JPEG_Pause+0x24>
90008eba:	bf00      	nop

90008ebc <HAL_JPEG_ConfigInputBuffer>:
  hjpeg->pJpegInBuffPtr =  pNewInputBuffer;
90008ebc:	6181      	str	r1, [r0, #24]
  hjpeg->InDataLength = InDataLength;
90008ebe:	6282      	str	r2, [r0, #40]	@ 0x28
}
90008ec0:	4770      	bx	lr
90008ec2:	bf00      	nop

90008ec4 <HAL_JPEG_ConfigOutputBuffer>:
  hjpeg->pJpegOutBuffPtr = pNewOutputBuffer;
90008ec4:	61c1      	str	r1, [r0, #28]
  hjpeg->OutDataLength = OutDataLength;
90008ec6:	62c2      	str	r2, [r0, #44]	@ 0x2c
}
90008ec8:	4770      	bx	lr
90008eca:	bf00      	nop

90008ecc <HAL_JPEG_Abort>:
{
90008ecc:	b538      	push	{r3, r4, r5, lr}
  tmpContext = hjpeg->Context;
90008ece:	6d43      	ldr	r3, [r0, #84]	@ 0x54
{
90008ed0:	4604      	mov	r4, r0
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90008ed2:	6d41      	ldr	r1, [r0, #84]	@ 0x54
90008ed4:	4a32      	ldr	r2, [pc, #200]	@ (90008fa0 <HAL_JPEG_Abort+0xd4>)
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008ed6:	f003 030c 	and.w	r3, r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90008eda:	400a      	ands	r2, r1
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008edc:	2b0c      	cmp	r3, #12
  hjpeg->Context &= ~(JPEG_CONTEXT_OPERATION_MASK | JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA);
90008ede:	6542      	str	r2, [r0, #84]	@ 0x54
  if ((tmpContext & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90008ee0:	d043      	beq.n	90008f6a <HAL_JPEG_Abort+0x9e>
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90008ee2:	6822      	ldr	r2, [r4, #0]
90008ee4:	6813      	ldr	r3, [r2, #0]
90008ee6:	f023 0301 	bic.w	r3, r3, #1
90008eea:	6013      	str	r3, [r2, #0]
  tickstart = HAL_GetTick();
90008eec:	f7fd ffbc 	bl	90006e68 <HAL_GetTick>
90008ef0:	4605      	mov	r5, r0
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
90008ef2:	e005      	b.n	90008f00 <HAL_JPEG_Abort+0x34>
    if ((HAL_GetTick() - tickstart) > JPEG_TIMEOUT_VALUE)
90008ef4:	f7fd ffb8 	bl	90006e68 <HAL_GetTick>
90008ef8:	1b40      	subs	r0, r0, r5
90008efa:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
90008efe:	d82b      	bhi.n	90008f58 <HAL_JPEG_Abort+0x8c>
  while (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_COF) != 0UL)
90008f00:	6823      	ldr	r3, [r4, #0]
90008f02:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90008f04:	0612      	lsls	r2, r2, #24
90008f06:	d4f5      	bmi.n	90008ef4 <HAL_JPEG_Abort+0x28>
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008f08:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
  hjpeg->JpegInCount = 0;
90008f0a:	2100      	movs	r1, #0
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008f0c:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90008f10:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_IFF;
90008f12:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008f14:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
90008f18:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->Instance->CR |= JPEG_CR_OFF;
90008f1a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008f1c:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
90008f20:	631a      	str	r2, [r3, #48]	@ 0x30
  __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90008f22:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90008f24:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90008f28:	639a      	str	r2, [r3, #56]	@ 0x38
  hjpeg->JpegInCount = 0;
90008f2a:	6221      	str	r1, [r4, #32]
  hjpeg->JpegOutCount = 0;
90008f2c:	6261      	str	r1, [r4, #36]	@ 0x24
  hjpeg->Context &= ~(JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT);
90008f2e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90008f30:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
90008f34:	6563      	str	r3, [r4, #84]	@ 0x54
  if (hjpeg->ErrorCode != HAL_JPEG_ERROR_NONE)
90008f36:	6d20      	ldr	r0, [r4, #80]	@ 0x50
90008f38:	b138      	cbz	r0, 90008f4a <HAL_JPEG_Abort+0x7e>
    hjpeg->State = HAL_JPEG_STATE_ERROR;
90008f3a:	2306      	movs	r3, #6
    return HAL_ERROR;
90008f3c:	2001      	movs	r0, #1
    hjpeg->State = HAL_JPEG_STATE_ERROR;
90008f3e:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_ERROR;
90008f42:	2300      	movs	r3, #0
90008f44:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
90008f48:	bd38      	pop	{r3, r4, r5, pc}
    hjpeg->State = HAL_JPEG_STATE_READY;
90008f4a:	2301      	movs	r3, #1
90008f4c:	f884 304d 	strb.w	r3, [r4, #77]	@ 0x4d
    return HAL_OK;
90008f50:	2300      	movs	r3, #0
90008f52:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
}
90008f56:	bd38      	pop	{r3, r4, r5, pc}
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
90008f58:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90008f5a:	2106      	movs	r1, #6
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008f5c:	6823      	ldr	r3, [r4, #0]
      hjpeg->ErrorCode |= HAL_JPEG_ERROR_TIMEOUT;
90008f5e:	f042 0208 	orr.w	r2, r2, #8
90008f62:	6522      	str	r2, [r4, #80]	@ 0x50
      hjpeg->State = HAL_JPEG_STATE_ERROR;
90008f64:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
      break;
90008f68:	e7ce      	b.n	90008f08 <HAL_JPEG_Abort+0x3c>
    if (HAL_MDMA_Abort(hjpeg->hdmaout) != HAL_OK)
90008f6a:	6b40      	ldr	r0, [r0, #52]	@ 0x34
90008f6c:	f001 f986 	bl	9000a27c <HAL_MDMA_Abort>
90008f70:	b118      	cbz	r0, 90008f7a <HAL_JPEG_Abort+0xae>
      if (hjpeg->hdmaout->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
90008f72:	6b63      	ldr	r3, [r4, #52]	@ 0x34
90008f74:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90008f76:	2b40      	cmp	r3, #64	@ 0x40
90008f78:	d00d      	beq.n	90008f96 <HAL_JPEG_Abort+0xca>
    if (HAL_MDMA_Abort(hjpeg->hdmain) != HAL_OK)
90008f7a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90008f7c:	f001 f97e 	bl	9000a27c <HAL_MDMA_Abort>
90008f80:	2800      	cmp	r0, #0
90008f82:	d0ae      	beq.n	90008ee2 <HAL_JPEG_Abort+0x16>
      if (hjpeg->hdmain->ErrorCode == HAL_MDMA_ERROR_TIMEOUT)
90008f84:	6b23      	ldr	r3, [r4, #48]	@ 0x30
90008f86:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90008f88:	2b40      	cmp	r3, #64	@ 0x40
90008f8a:	d1aa      	bne.n	90008ee2 <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90008f8c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90008f8e:	f043 0304 	orr.w	r3, r3, #4
90008f92:	6523      	str	r3, [r4, #80]	@ 0x50
90008f94:	e7a5      	b.n	90008ee2 <HAL_JPEG_Abort+0x16>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90008f96:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90008f98:	f043 0304 	orr.w	r3, r3, #4
90008f9c:	6523      	str	r3, [r4, #80]	@ 0x50
90008f9e:	e7ec      	b.n	90008f7a <HAL_JPEG_Abort+0xae>
90008fa0:	ffff7ff0 	.word	0xffff7ff0

90008fa4 <HAL_JPEG_EncodeCpltCallback>:
__weak void HAL_JPEG_EncodeCpltCallback(JPEG_HandleTypeDef *hjpeg)
90008fa4:	4770      	bx	lr
90008fa6:	bf00      	nop

90008fa8 <JPEG_MDMAErrorCallback>:
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90008fa8:	6c00      	ldr	r0, [r0, #64]	@ 0x40
  hjpeg->State = HAL_JPEG_STATE_READY;
90008faa:	2101      	movs	r1, #1
{
90008fac:	b508      	push	{r3, lr}
  hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90008fae:	6803      	ldr	r3, [r0, #0]
90008fb0:	681a      	ldr	r2, [r3, #0]
90008fb2:	f022 0201 	bic.w	r2, r2, #1
90008fb6:	601a      	str	r2, [r3, #0]
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008fb8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90008fba:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90008fbe:	631a      	str	r2, [r3, #48]	@ 0x30
  hjpeg->State = HAL_JPEG_STATE_READY;
90008fc0:	f880 104d 	strb.w	r1, [r0, #77]	@ 0x4d
  hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90008fc4:	6d03      	ldr	r3, [r0, #80]	@ 0x50
90008fc6:	f043 0304 	orr.w	r3, r3, #4
90008fca:	6503      	str	r3, [r0, #80]	@ 0x50
  HAL_JPEG_ErrorCallback(hjpeg);
90008fcc:	f7f9 f8c2 	bl	90002154 <HAL_JPEG_ErrorCallback>
}
90008fd0:	bd08      	pop	{r3, pc}
90008fd2:	bf00      	nop

90008fd4 <JPEG_MDMAInCpltCallback>:
{
90008fd4:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
90008fd6:	6c04      	ldr	r4, [r0, #64]	@ 0x40
{
90008fd8:	b083      	sub	sp, #12
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
90008fda:	f248 010c 	movw	r1, #32780	@ 0x800c
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90008fde:	6822      	ldr	r2, [r4, #0]
90008fe0:	6b13      	ldr	r3, [r2, #48]	@ 0x30
90008fe2:	f023 037e 	bic.w	r3, r3, #126	@ 0x7e
90008fe6:	6313      	str	r3, [r2, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) == JPEG_CONTEXT_DMA)
90008fe8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90008fea:	400b      	ands	r3, r1
90008fec:	2b0c      	cmp	r3, #12
90008fee:	d001      	beq.n	90008ff4 <JPEG_MDMAInCpltCallback+0x20>
}
90008ff0:	b003      	add	sp, #12
90008ff2:	bd30      	pop	{r4, r5, pc}
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90008ff4:	6802      	ldr	r2, [r0, #0]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90008ff6:	4620      	mov	r0, r4
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90008ff8:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90008ffa:	6952      	ldr	r2, [r2, #20]
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90008ffc:	6b21      	ldr	r1, [r4, #48]	@ 0x30
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90008ffe:	f3c2 0210 	ubfx	r2, r2, #0, #17
    inXfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009002:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
    hjpeg->JpegInCount = hjpeg->InDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009004:	1a9b      	subs	r3, r3, r2
90009006:	6223      	str	r3, [r4, #32]
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009008:	6a21      	ldr	r1, [r4, #32]
9000900a:	f7f8 ffd7 	bl	90001fbc <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength >= inXfrSize)
9000900e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90009010:	42ab      	cmp	r3, r5
90009012:	d311      	bcc.n	90009038 <JPEG_MDMAInCpltCallback+0x64>
      if (inXfrSize == 0UL)
90009014:	b305      	cbz	r5, 90009058 <JPEG_MDMAInCpltCallback+0x84>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009016:	fbb3 f2f5 	udiv	r2, r3, r5
9000901a:	fb05 3212 	mls	r2, r5, r2, r3
9000901e:	1a9b      	subs	r3, r3, r2
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009020:	6d62      	ldr	r2, [r4, #84]	@ 0x54
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % inXfrSize);
90009022:	62a3      	str	r3, [r4, #40]	@ 0x28
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
90009024:	04d1      	lsls	r1, r2, #19
90009026:	d400      	bmi.n	9000902a <JPEG_MDMAInCpltCallback+0x56>
90009028:	b963      	cbnz	r3, 90009044 <JPEG_MDMAInCpltCallback+0x70>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000902a:	6822      	ldr	r2, [r4, #0]
9000902c:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000902e:	f043 0360 	orr.w	r3, r3, #96	@ 0x60
90009032:	6313      	str	r3, [r2, #48]	@ 0x30
}
90009034:	b003      	add	sp, #12
90009036:	bd30      	pop	{r4, r5, pc}
    else if (hjpeg->InDataLength > 0UL)
90009038:	b1cb      	cbz	r3, 9000906e <JPEG_MDMAInCpltCallback+0x9a>
      if ((hjpeg->InDataLength % 4UL) != 0UL)
9000903a:	0798      	lsls	r0, r3, #30
9000903c:	d119      	bne.n	90009072 <JPEG_MDMAInCpltCallback+0x9e>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000903e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009040:	04d2      	lsls	r2, r2, #19
90009042:	d4f2      	bmi.n	9000902a <JPEG_MDMAInCpltCallback+0x56>
      if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
90009044:	6822      	ldr	r2, [r4, #0]
90009046:	2501      	movs	r5, #1
90009048:	69a1      	ldr	r1, [r4, #24]
9000904a:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000904c:	3240      	adds	r2, #64	@ 0x40
9000904e:	9500      	str	r5, [sp, #0]
90009050:	f001 f8a8 	bl	9000a1a4 <HAL_MDMA_Start_IT>
90009054:	2800      	cmp	r0, #0
90009056:	d0e8      	beq.n	9000902a <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009058:	6d23      	ldr	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
9000905a:	2206      	movs	r2, #6
        HAL_JPEG_ErrorCallback(hjpeg);
9000905c:	4620      	mov	r0, r4
        hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000905e:	f043 0304 	orr.w	r3, r3, #4
90009062:	6523      	str	r3, [r4, #80]	@ 0x50
        hjpeg->State = HAL_JPEG_STATE_ERROR;
90009064:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
        HAL_JPEG_ErrorCallback(hjpeg);
90009068:	f7f9 f874 	bl	90002154 <HAL_JPEG_ErrorCallback>
        return;
9000906c:	e7c0      	b.n	90008ff0 <JPEG_MDMAInCpltCallback+0x1c>
    if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (hjpeg->InDataLength > 0UL))
9000906e:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009070:	e7db      	b.n	9000902a <JPEG_MDMAInCpltCallback+0x56>
        hjpeg->InDataLength = ((hjpeg->InDataLength / 4UL) + 1UL) * 4UL;
90009072:	f023 0303 	bic.w	r3, r3, #3
90009076:	3304      	adds	r3, #4
90009078:	e7d2      	b.n	90009020 <JPEG_MDMAInCpltCallback+0x4c>
9000907a:	bf00      	nop

9000907c <JPEG_DMA_PollResidualData>:
{
9000907c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000907e:	6802      	ldr	r2, [r0, #0]
90009080:	2610      	movs	r6, #16
{
90009082:	4604      	mov	r4, r0
    if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009084:	6d65      	ldr	r5, [r4, #84]	@ 0x54
90009086:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
9000908a:	d11d      	bne.n	900090c8 <JPEG_DMA_PollResidualData+0x4c>
      if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
9000908c:	6b53      	ldr	r3, [r2, #52]	@ 0x34
9000908e:	06df      	lsls	r7, r3, #27
90009090:	d51a      	bpl.n	900090c8 <JPEG_DMA_PollResidualData+0x4c>
        dataOut = hjpeg->Instance->DOR;
90009092:	6c53      	ldr	r3, [r2, #68]	@ 0x44
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
90009094:	69e7      	ldr	r7, [r4, #28]
90009096:	6a62      	ldr	r2, [r4, #36]	@ 0x24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
90009098:	0a18      	lsrs	r0, r3, #8
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
9000909a:	0c19      	lsrs	r1, r3, #16
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataOut & 0x000000FFUL);
9000909c:	54bb      	strb	r3, [r7, r2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
9000909e:	0e1b      	lsrs	r3, r3, #24
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataOut & 0x0000FF00UL) >> 8);
900090a0:	6a67      	ldr	r7, [r4, #36]	@ 0x24
900090a2:	69e2      	ldr	r2, [r4, #28]
900090a4:	443a      	add	r2, r7
900090a6:	7050      	strb	r0, [r2, #1]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataOut & 0x00FF0000UL) >> 16);
900090a8:	6a60      	ldr	r0, [r4, #36]	@ 0x24
900090aa:	69e2      	ldr	r2, [r4, #28]
900090ac:	4402      	add	r2, r0
900090ae:	7091      	strb	r1, [r2, #2]
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataOut & 0xFF000000UL) >> 24);
900090b0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900090b2:	69e2      	ldr	r2, [r4, #28]
900090b4:	440a      	add	r2, r1
900090b6:	70d3      	strb	r3, [r2, #3]
        hjpeg->JpegOutCount += 4UL;
900090b8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
900090ba:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
        hjpeg->JpegOutCount += 4UL;
900090bc:	3304      	adds	r3, #4
900090be:	6263      	str	r3, [r4, #36]	@ 0x24
        if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
900090c0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900090c2:	4293      	cmp	r3, r2
900090c4:	d021      	beq.n	9000910a <JPEG_DMA_PollResidualData+0x8e>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
900090c6:	6822      	ldr	r2, [r4, #0]
  for (count = JPEG_FIFO_SIZE; count > 0UL; count--)
900090c8:	3e01      	subs	r6, #1
900090ca:	d1db      	bne.n	90009084 <JPEG_DMA_PollResidualData+0x8>
  tmpContext = hjpeg->Context;
900090cc:	6d61      	ldr	r1, [r4, #84]	@ 0x54
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
900090ce:	6b53      	ldr	r3, [r2, #52]	@ 0x34
900090d0:	06d8      	lsls	r0, r3, #27
900090d2:	d501      	bpl.n	900090d8 <JPEG_DMA_PollResidualData+0x5c>
900090d4:	048b      	lsls	r3, r1, #18
900090d6:	d417      	bmi.n	90009108 <JPEG_DMA_PollResidualData+0x8c>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900090d8:	6813      	ldr	r3, [r2, #0]
900090da:	f023 0301 	bic.w	r3, r3, #1
900090de:	6013      	str	r3, [r2, #0]
    if (hjpeg->JpegOutCount > 0UL)
900090e0:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900090e2:	b9eb      	cbnz	r3, 90009120 <JPEG_DMA_PollResidualData+0xa4>
    tmpContext = hjpeg->Context;
900090e4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
900090e6:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900090e8:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
900090ea:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900090ec:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
900090f0:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900090f4:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
900090f8:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900090fa:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900090fc:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
900090fe:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009102:	d00a      	beq.n	9000911a <JPEG_DMA_PollResidualData+0x9e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009104:	f7ff ff4e 	bl	90008fa4 <HAL_JPEG_EncodeCpltCallback>
}
90009108:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
          HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000910a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000910c:	4620      	mov	r0, r4
9000910e:	69e1      	ldr	r1, [r4, #28]
90009110:	f7f8 ff74 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
  if ((__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL) || ((tmpContext & JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL))
90009114:	6822      	ldr	r2, [r4, #0]
          hjpeg->JpegOutCount = 0;
90009116:	6265      	str	r5, [r4, #36]	@ 0x24
90009118:	e7d6      	b.n	900090c8 <JPEG_DMA_PollResidualData+0x4c>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000911a:	f7f9 f81d 	bl	90002158 <HAL_JPEG_DecodeCpltCallback>
}
9000911e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009120:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009122:	4620      	mov	r0, r4
90009124:	69e1      	ldr	r1, [r4, #28]
90009126:	f7f8 ff69 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
9000912a:	2300      	movs	r3, #0
9000912c:	6263      	str	r3, [r4, #36]	@ 0x24
9000912e:	e7d9      	b.n	900090e4 <JPEG_DMA_PollResidualData+0x68>

90009130 <HAL_JPEG_Resume>:
  if ((hjpeg->Context & (JPEG_CONTEXT_PAUSE_INPUT | JPEG_CONTEXT_PAUSE_OUTPUT)) == 0UL)
90009130:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009132:	f413 5f40 	tst.w	r3, #12288	@ 0x3000
90009136:	d06f      	beq.n	90009218 <HAL_JPEG_Resume+0xe8>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009138:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000913a:	f003 030c 	and.w	r3, r3, #12
9000913e:	2b0c      	cmp	r3, #12
{
90009140:	b530      	push	{r4, r5, lr}
90009142:	4604      	mov	r4, r0
90009144:	b083      	sub	sp, #12
90009146:	460d      	mov	r5, r1
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009148:	d007      	beq.n	9000915a <HAL_JPEG_Resume+0x2a>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
9000914a:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9000914c:	f003 030c 	and.w	r3, r3, #12
90009150:	2b08      	cmp	r3, #8
90009152:	d035      	beq.n	900091c0 <HAL_JPEG_Resume+0x90>
  return HAL_OK;
90009154:	2000      	movs	r0, #0
}
90009156:	b003      	add	sp, #12
90009158:	bd30      	pop	{r4, r5, pc}
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
9000915a:	07c8      	lsls	r0, r1, #31
9000915c:	d415      	bmi.n	9000918a <HAL_JPEG_Resume+0x5a>
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
9000915e:	07a9      	lsls	r1, r5, #30
90009160:	d5f8      	bpl.n	90009154 <HAL_JPEG_Resume+0x24>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
90009162:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009164:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
90009168:	6563      	str	r3, [r4, #84]	@ 0x54
      if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
9000916a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000916c:	041a      	lsls	r2, r3, #16
9000916e:	d44f      	bmi.n	90009210 <HAL_JPEG_Resume+0xe0>
        xfrSize = hjpeg->hdmaout->Init.BufferTransferLength;
90009170:	6b60      	ldr	r0, [r4, #52]	@ 0x34
90009172:	6a82      	ldr	r2, [r0, #40]	@ 0x28
        if (xfrSize == 0UL)
90009174:	2a00      	cmp	r2, #0
90009176:	d13a      	bne.n	900091ee <HAL_JPEG_Resume+0xbe>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009178:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
9000917a:	2206      	movs	r2, #6
    return HAL_ERROR;
9000917c:	2001      	movs	r0, #1
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000917e:	f043 0304 	orr.w	r3, r3, #4
90009182:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009184:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          return HAL_ERROR;
90009188:	e7e5      	b.n	90009156 <HAL_JPEG_Resume+0x26>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000918a:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
9000918c:	6b20      	ldr	r0, [r4, #48]	@ 0x30
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
9000918e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
      xfrSize = hjpeg->hdmain->Init.BufferTransferLength;
90009192:	6a82      	ldr	r2, [r0, #40]	@ 0x28
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
90009194:	6563      	str	r3, [r4, #84]	@ 0x54
      if (xfrSize == 0UL)
90009196:	2a00      	cmp	r2, #0
90009198:	d0ee      	beq.n	90009178 <HAL_JPEG_Resume+0x48>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % xfrSize);
9000919a:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000919c:	fbb3 f1f2 	udiv	r1, r3, r2
900091a0:	fb02 3211 	mls	r2, r2, r1, r3
900091a4:	1a9b      	subs	r3, r3, r2
900091a6:	62a3      	str	r3, [r4, #40]	@ 0x28
      if (hjpeg->InDataLength > 0UL)
900091a8:	2b00      	cmp	r3, #0
900091aa:	d0d8      	beq.n	9000915e <HAL_JPEG_Resume+0x2e>
        if (HAL_MDMA_Start_IT(hjpeg->hdmain, (uint32_t)hjpeg->pJpegInBuffPtr, (uint32_t)&hjpeg->Instance->DIR,
900091ac:	6822      	ldr	r2, [r4, #0]
900091ae:	2101      	movs	r1, #1
900091b0:	3240      	adds	r2, #64	@ 0x40
900091b2:	9100      	str	r1, [sp, #0]
900091b4:	69a1      	ldr	r1, [r4, #24]
900091b6:	f000 fff5 	bl	9000a1a4 <HAL_MDMA_Start_IT>
900091ba:	2800      	cmp	r0, #0
900091bc:	d0cf      	beq.n	9000915e <HAL_JPEG_Resume+0x2e>
900091be:	e7db      	b.n	90009178 <HAL_JPEG_Resume+0x48>
    if ((XferSelection & JPEG_PAUSE_RESUME_INPUT) == JPEG_PAUSE_RESUME_INPUT)
900091c0:	f011 0101 	ands.w	r1, r1, #1
900091c4:	d011      	beq.n	900091ea <HAL_JPEG_Resume+0xba>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
900091c6:	6d43      	ldr	r3, [r0, #84]	@ 0x54
900091c8:	222e      	movs	r2, #46	@ 0x2e
      mask |= (JPEG_IT_IFT | JPEG_IT_IFNF);
900091ca:	2106      	movs	r1, #6
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_INPUT);
900091cc:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
900091d0:	6543      	str	r3, [r0, #84]	@ 0x54
    if ((XferSelection & JPEG_PAUSE_RESUME_OUTPUT) == JPEG_PAUSE_RESUME_OUTPUT)
900091d2:	07ab      	lsls	r3, r5, #30
900091d4:	d504      	bpl.n	900091e0 <HAL_JPEG_Resume+0xb0>
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
900091d6:	6d63      	ldr	r3, [r4, #84]	@ 0x54
      mask |= (JPEG_IT_OFT | JPEG_IT_OFNE | JPEG_IT_EOC);
900091d8:	4611      	mov	r1, r2
      hjpeg->Context &= (~JPEG_CONTEXT_PAUSE_OUTPUT);
900091da:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
900091de:	6563      	str	r3, [r4, #84]	@ 0x54
    __HAL_JPEG_ENABLE_IT(hjpeg, mask);
900091e0:	6822      	ldr	r2, [r4, #0]
900091e2:	6b13      	ldr	r3, [r2, #48]	@ 0x30
900091e4:	430b      	orrs	r3, r1
900091e6:	6313      	str	r3, [r2, #48]	@ 0x30
900091e8:	e7b4      	b.n	90009154 <HAL_JPEG_Resume+0x24>
900091ea:	2228      	movs	r2, #40	@ 0x28
900091ec:	e7f1      	b.n	900091d2 <HAL_JPEG_Resume+0xa2>
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
900091ee:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
900091f0:	fbb3 f1f2 	udiv	r1, r3, r2
900091f4:	fb02 3211 	mls	r2, r2, r1, r3
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900091f8:	6821      	ldr	r1, [r4, #0]
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
900091fa:	1a9b      	subs	r3, r3, r2
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
900091fc:	2201      	movs	r2, #1
900091fe:	3144      	adds	r1, #68	@ 0x44
        hjpeg->OutDataLength = hjpeg->OutDataLength - (hjpeg->OutDataLength % xfrSize);
90009200:	62e3      	str	r3, [r4, #44]	@ 0x2c
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009202:	9200      	str	r2, [sp, #0]
90009204:	69e2      	ldr	r2, [r4, #28]
90009206:	f000 ffcd 	bl	9000a1a4 <HAL_MDMA_Start_IT>
9000920a:	2800      	cmp	r0, #0
9000920c:	d0a2      	beq.n	90009154 <HAL_JPEG_Resume+0x24>
9000920e:	e7b3      	b.n	90009178 <HAL_JPEG_Resume+0x48>
        JPEG_DMA_PollResidualData(hjpeg);
90009210:	4620      	mov	r0, r4
90009212:	f7ff ff33 	bl	9000907c <JPEG_DMA_PollResidualData>
90009216:	e79d      	b.n	90009154 <HAL_JPEG_Resume+0x24>
    return HAL_ERROR;
90009218:	2001      	movs	r0, #1
}
9000921a:	4770      	bx	lr

9000921c <JPEG_MDMAOutCpltCallback>:
{
9000921c:	b530      	push	{r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000921e:	6c04      	ldr	r4, [r0, #64]	@ 0x40
{
90009220:	b083      	sub	sp, #12
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
90009222:	f248 010c 	movw	r1, #32780	@ 0x800c
  __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009226:	6823      	ldr	r3, [r4, #0]
90009228:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000922a:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
9000922e:	631a      	str	r2, [r3, #48]	@ 0x30
  if ((hjpeg->Context & (JPEG_CONTEXT_METHOD_MASK | JPEG_CONTEXT_ENDING_DMA)) ==
90009230:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009232:	400a      	ands	r2, r1
90009234:	2a0c      	cmp	r2, #12
90009236:	d001      	beq.n	9000923c <JPEG_MDMAOutCpltCallback+0x20>
}
90009238:	b003      	add	sp, #12
9000923a:	bd30      	pop	{r4, r5, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) == 0UL)
9000923c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000923e:	0692      	lsls	r2, r2, #26
90009240:	d505      	bpl.n	9000924e <JPEG_MDMAOutCpltCallback+0x32>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
90009242:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009244:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009248:	631a      	str	r2, [r3, #48]	@ 0x30
}
9000924a:	b003      	add	sp, #12
9000924c:	bd30      	pop	{r4, r5, pc}
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
9000924e:	6802      	ldr	r2, [r0, #0]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009250:	4620      	mov	r0, r4
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009252:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90009254:	6952      	ldr	r2, [r2, #20]
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009256:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount = hjpeg->OutDataLength - (hmdma->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009258:	f3c2 0210 	ubfx	r2, r2, #0, #17
9000925c:	1a9b      	subs	r3, r3, r2
9000925e:	6263      	str	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009260:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009262:	f7f8 fecb 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
      if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009266:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009268:	049b      	lsls	r3, r3, #18
9000926a:	d501      	bpl.n	90009270 <JPEG_MDMAOutCpltCallback+0x54>
    __HAL_JPEG_ENABLE_IT(hjpeg, JPEG_IT_EOC | JPEG_IT_HPD);
9000926c:	6823      	ldr	r3, [r4, #0]
9000926e:	e7e8      	b.n	90009242 <JPEG_MDMAOutCpltCallback+0x26>
        if (HAL_MDMA_Start_IT(hjpeg->hdmaout, (uint32_t)&hjpeg->Instance->DOR, (uint32_t)hjpeg->pJpegOutBuffPtr,
90009270:	6821      	ldr	r1, [r4, #0]
90009272:	2501      	movs	r5, #1
90009274:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90009276:	69e2      	ldr	r2, [r4, #28]
90009278:	3144      	adds	r1, #68	@ 0x44
9000927a:	6b60      	ldr	r0, [r4, #52]	@ 0x34
9000927c:	9500      	str	r5, [sp, #0]
9000927e:	f000 ff91 	bl	9000a1a4 <HAL_MDMA_Start_IT>
90009282:	2800      	cmp	r0, #0
90009284:	d0f2      	beq.n	9000926c <JPEG_MDMAOutCpltCallback+0x50>
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
90009286:	6d23      	ldr	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009288:	2206      	movs	r2, #6
          HAL_JPEG_ErrorCallback(hjpeg);
9000928a:	4620      	mov	r0, r4
          hjpeg->ErrorCode |= HAL_JPEG_ERROR_DMA;
9000928c:	f043 0304 	orr.w	r3, r3, #4
90009290:	6523      	str	r3, [r4, #80]	@ 0x50
          hjpeg->State = HAL_JPEG_STATE_ERROR;
90009292:	f884 204d 	strb.w	r2, [r4, #77]	@ 0x4d
          HAL_JPEG_ErrorCallback(hjpeg);
90009296:	f7f8 ff5d 	bl	90002154 <HAL_JPEG_ErrorCallback>
          return;
9000929a:	e7cd      	b.n	90009238 <JPEG_MDMAOutCpltCallback+0x1c>

9000929c <JPEG_MDMAOutAbortCallback>:
{
9000929c:	b538      	push	{r3, r4, r5, lr}
  JPEG_HandleTypeDef *hjpeg = (JPEG_HandleTypeDef *)((MDMA_HandleTypeDef *)hmdma)->Parent;
9000929e:	6c04      	ldr	r4, [r0, #64]	@ 0x40
  if ((hjpeg->Context & JPEG_CONTEXT_ENDING_DMA) != 0UL)
900092a0:	6d63      	ldr	r3, [r4, #84]	@ 0x54
900092a2:	041a      	lsls	r2, r3, #16
900092a4:	d400      	bmi.n	900092a8 <JPEG_MDMAOutAbortCallback+0xc>
}
900092a6:	bd38      	pop	{r3, r4, r5, pc}
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
900092a8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
900092aa:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
900092ac:	681b      	ldr	r3, [r3, #0]
900092ae:	695b      	ldr	r3, [r3, #20]
900092b0:	f3c3 0310 	ubfx	r3, r3, #0, #17
900092b4:	1ad3      	subs	r3, r2, r3
900092b6:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
900092b8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900092ba:	429a      	cmp	r2, r3
900092bc:	d025      	beq.n	9000930a <JPEG_MDMAOutAbortCallback+0x6e>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
900092be:	6822      	ldr	r2, [r4, #0]
900092c0:	6b55      	ldr	r5, [r2, #52]	@ 0x34
900092c2:	f015 0510 	ands.w	r5, r5, #16
900092c6:	d118      	bne.n	900092fa <JPEG_MDMAOutAbortCallback+0x5e>
    if (hjpeg->JpegOutCount > 0UL)
900092c8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900092ca:	bb4b      	cbnz	r3, 90009320 <JPEG_MDMAOutAbortCallback+0x84>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900092cc:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
900092ce:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
900092d0:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900092d2:	f023 0301 	bic.w	r3, r3, #1
900092d6:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
900092d8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900092da:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900092dc:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
900092e0:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900092e4:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
900092e8:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900092ea:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900092ec:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
900092ee:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900092f2:	d012      	beq.n	9000931a <JPEG_MDMAOutAbortCallback+0x7e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
900092f4:	f7ff fe56 	bl	90008fa4 <HAL_JPEG_EncodeCpltCallback>
}
900092f8:	bd38      	pop	{r3, r4, r5, pc}
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
900092fa:	6d63      	ldr	r3, [r4, #84]	@ 0x54
900092fc:	049b      	lsls	r3, r3, #18
900092fe:	d4d2      	bmi.n	900092a6 <JPEG_MDMAOutAbortCallback+0xa>
    JPEG_DMA_PollResidualData(hjpeg);
90009300:	4620      	mov	r0, r4
}
90009302:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
90009306:	f7ff beb9 	b.w	9000907c <JPEG_DMA_PollResidualData>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000930a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000930c:	4620      	mov	r0, r4
9000930e:	69e1      	ldr	r1, [r4, #28]
90009310:	f7f8 fe74 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
90009314:	2300      	movs	r3, #0
90009316:	6263      	str	r3, [r4, #36]	@ 0x24
90009318:	e7d1      	b.n	900092be <JPEG_MDMAOutAbortCallback+0x22>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
9000931a:	f7f8 ff1d 	bl	90002158 <HAL_JPEG_DecodeCpltCallback>
}
9000931e:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009320:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009322:	4620      	mov	r0, r4
90009324:	69e1      	ldr	r1, [r4, #28]
90009326:	f7f8 fe69 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
9000932a:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
9000932c:	6265      	str	r5, [r4, #36]	@ 0x24
9000932e:	e7cd      	b.n	900092cc <JPEG_MDMAOutAbortCallback+0x30>

90009330 <JPEG_Process>:
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009330:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009332:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009334:	f002 0203 	and.w	r2, r2, #3
90009338:	2a02      	cmp	r2, #2
{
9000933a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000933e:	4604      	mov	r4, r0
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009340:	d01e      	beq.n	90009380 <JPEG_Process+0x50>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL)
90009342:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009344:	04d7      	lsls	r7, r2, #19
90009346:	d407      	bmi.n	90009358 <JPEG_Process+0x28>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFTF) != 0UL)
90009348:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000934a:	0796      	lsls	r6, r2, #30
9000934c:	f100 811b 	bmi.w	90009586 <JPEG_Process+0x256>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_IFNFF) != 0UL)
90009350:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009352:	0750      	lsls	r0, r2, #29
90009354:	f100 81cc 	bmi.w	900096f0 <JPEG_Process+0x3c0>
  if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009358:	6d65      	ldr	r5, [r4, #84]	@ 0x54
9000935a:	f415 5500 	ands.w	r5, r5, #8192	@ 0x2000
9000935e:	d107      	bne.n	90009370 <JPEG_Process+0x40>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFTF) != 0UL)
90009360:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
90009362:	f016 0608 	ands.w	r6, r6, #8
90009366:	d14a      	bne.n	900093fe <JPEG_Process+0xce>
    else if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) != 0UL)
90009368:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000936a:	06d2      	lsls	r2, r2, #27
9000936c:	f100 81fe 	bmi.w	9000976c <JPEG_Process+0x43c>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009370:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009372:	f002 0238 	and.w	r2, r2, #56	@ 0x38
90009376:	2a20      	cmp	r2, #32
90009378:	d019      	beq.n	900093ae <JPEG_Process+0x7e>
  return JPEG_PROCESS_ONGOING;
9000937a:	2000      	movs	r0, #0
}
9000937c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009380:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009382:	0652      	lsls	r2, r2, #25
90009384:	d5dd      	bpl.n	90009342 <JPEG_Process+0x12>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
90009386:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
90009388:	4629      	mov	r1, r5
9000938a:	f7ff fb17 	bl	900089bc <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
9000938e:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
90009390:	4629      	mov	r1, r5
90009392:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
90009394:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
90009396:	f7f8 fde3 	bl	90001f60 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
9000939a:	6823      	ldr	r3, [r4, #0]
9000939c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000939e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
900093a2:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
900093a4:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
900093a6:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
900093aa:	639a      	str	r2, [r3, #56]	@ 0x38
900093ac:	e7c9      	b.n	90009342 <JPEG_Process+0x12>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
900093ae:	681a      	ldr	r2, [r3, #0]
900093b0:	f022 0201 	bic.w	r2, r2, #1
900093b4:	601a      	str	r2, [r3, #0]
    if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
900093b6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
900093b8:	f002 020c 	and.w	r2, r2, #12
900093bc:	2a08      	cmp	r2, #8
900093be:	f000 8201 	beq.w	900097c4 <JPEG_Process+0x494>
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
900093c2:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
900093c4:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
900093c8:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->JpegOutCount > 0UL)
900093ca:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900093cc:	2b00      	cmp	r3, #0
900093ce:	f040 81fe 	bne.w	900097ce <JPEG_Process+0x49e>
    tmpContext = hjpeg->Context;
900093d2:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    __HAL_UNLOCK(hjpeg);
900093d4:	2000      	movs	r0, #0
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900093d6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
900093d8:	2101      	movs	r1, #1
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900093da:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
900093de:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900093e2:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
900093e6:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900093e8:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
900093ea:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
900093ec:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
900093f0:	f000 81e5 	beq.w	900097be <JPEG_Process+0x48e>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
900093f4:	f7ff fdd6 	bl	90008fa4 <HAL_JPEG_EncodeCpltCallback>
    return JPEG_PROCESS_DONE;
900093f8:	2001      	movs	r0, #1
}
900093fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
900093fe:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009400:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
90009402:	3220      	adds	r2, #32
90009404:	4296      	cmp	r6, r2
90009406:	f0c0 8200 	bcc.w	9000980a <JPEG_Process+0x4da>
      dataword = hjpeg->Instance->DOR;
9000940a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000940c:	69e1      	ldr	r1, [r4, #28]
9000940e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009410:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009412:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009414:	69e2      	ldr	r2, [r4, #28]
90009416:	440a      	add	r2, r1
90009418:	0a19      	lsrs	r1, r3, #8
9000941a:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000941c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000941e:	69e2      	ldr	r2, [r4, #28]
90009420:	440a      	add	r2, r1
90009422:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009424:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009426:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009428:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000942a:	69e2      	ldr	r2, [r4, #28]
9000942c:	440a      	add	r2, r1
9000942e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009430:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009432:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009434:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009436:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009438:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000943a:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000943c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000943e:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009440:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009442:	69e2      	ldr	r2, [r4, #28]
90009444:	440a      	add	r2, r1
90009446:	0a19      	lsrs	r1, r3, #8
90009448:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000944a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000944c:	69e2      	ldr	r2, [r4, #28]
9000944e:	440a      	add	r2, r1
90009450:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009452:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009454:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009456:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009458:	69e2      	ldr	r2, [r4, #28]
9000945a:	440a      	add	r2, r1
9000945c:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000945e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009460:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009462:	3304      	adds	r3, #4
90009464:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009466:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009468:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000946a:	69e1      	ldr	r1, [r4, #28]
9000946c:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000946e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009470:	69e2      	ldr	r2, [r4, #28]
90009472:	440a      	add	r2, r1
90009474:	0a19      	lsrs	r1, r3, #8
90009476:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009478:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000947a:	69e2      	ldr	r2, [r4, #28]
9000947c:	440a      	add	r2, r1
9000947e:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009480:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009482:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009484:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009486:	69e2      	ldr	r2, [r4, #28]
90009488:	440a      	add	r2, r1
9000948a:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000948c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
9000948e:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009490:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009492:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
90009494:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009496:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009498:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000949a:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000949c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000949e:	69e2      	ldr	r2, [r4, #28]
900094a0:	440a      	add	r2, r1
900094a2:	0a19      	lsrs	r1, r3, #8
900094a4:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900094a6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094a8:	69e2      	ldr	r2, [r4, #28]
900094aa:	440a      	add	r2, r1
900094ac:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900094ae:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900094b0:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900094b2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094b4:	69e2      	ldr	r2, [r4, #28]
900094b6:	440a      	add	r2, r1
900094b8:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
900094ba:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900094bc:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
900094be:	3304      	adds	r3, #4
900094c0:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
900094c2:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900094c4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900094c6:	69e1      	ldr	r1, [r4, #28]
900094c8:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
900094ca:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094cc:	69e2      	ldr	r2, [r4, #28]
900094ce:	440a      	add	r2, r1
900094d0:	0a19      	lsrs	r1, r3, #8
900094d2:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900094d4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094d6:	69e2      	ldr	r2, [r4, #28]
900094d8:	440a      	add	r2, r1
900094da:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900094dc:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
900094de:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
900094e0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094e2:	69e2      	ldr	r2, [r4, #28]
900094e4:	440a      	add	r2, r1
900094e6:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
900094e8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900094ea:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
900094ec:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900094ee:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
900094f0:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
900094f2:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
900094f4:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900094f6:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
900094f8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900094fa:	69e2      	ldr	r2, [r4, #28]
900094fc:	440a      	add	r2, r1
900094fe:	0a19      	lsrs	r1, r3, #8
90009500:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009502:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009504:	69e2      	ldr	r2, [r4, #28]
90009506:	440a      	add	r2, r1
90009508:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000950a:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000950c:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000950e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009510:	69e2      	ldr	r2, [r4, #28]
90009512:	440a      	add	r2, r1
90009514:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009516:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009518:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
9000951a:	3304      	adds	r3, #4
9000951c:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000951e:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009520:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009522:	69e1      	ldr	r1, [r4, #28]
90009524:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009526:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009528:	69e2      	ldr	r2, [r4, #28]
9000952a:	440a      	add	r2, r1
9000952c:	0a19      	lsrs	r1, r3, #8
9000952e:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009530:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009532:	69e2      	ldr	r2, [r4, #28]
90009534:	440a      	add	r2, r1
90009536:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009538:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000953a:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000953c:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000953e:	69e2      	ldr	r2, [r4, #28]
90009540:	440a      	add	r2, r1
90009542:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009544:	6a63      	ldr	r3, [r4, #36]	@ 0x24
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009546:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount += 4UL;
90009548:	3304      	adds	r3, #4
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000954a:	69e1      	ldr	r1, [r4, #28]
      hjpeg->JpegOutCount += 4UL;
9000954c:	6263      	str	r3, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000954e:	6c53      	ldr	r3, [r2, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009550:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009552:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009554:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009556:	69e2      	ldr	r2, [r4, #28]
90009558:	440a      	add	r2, r1
9000955a:	0a19      	lsrs	r1, r3, #8
9000955c:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000955e:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009560:	69e2      	ldr	r2, [r4, #28]
90009562:	440a      	add	r2, r1
90009564:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009566:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009568:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000956a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000956c:	69e2      	ldr	r2, [r4, #28]
9000956e:	440a      	add	r2, r1
90009570:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009572:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009574:	3304      	adds	r3, #4
90009576:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009578:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000957a:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000957c:	429a      	cmp	r2, r3
9000957e:	f000 82d8 	beq.w	90009b32 <JPEG_Process+0x802>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009582:	6823      	ldr	r3, [r4, #0]
90009584:	e6f4      	b.n	90009370 <JPEG_Process+0x40>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
90009586:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90009588:	2a00      	cmp	r2, #0
9000958a:	f000 8128 	beq.w	900097de <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
9000958e:	6a21      	ldr	r1, [r4, #32]
90009590:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009592:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
90009594:	f240 81b9 	bls.w	9000990a <JPEG_Process+0x5da>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009598:	1a52      	subs	r2, r2, r1
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000959a:	6d61      	ldr	r1, [r4, #84]	@ 0x54
9000959c:	04cd      	lsls	r5, r1, #19
9000959e:	f53f aedb 	bmi.w	90009358 <JPEG_Process+0x28>
900095a2:	2a00      	cmp	r2, #0
900095a4:	f43f aed8 	beq.w	90009358 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
900095a8:	2a1f      	cmp	r2, #31
    nb_words = nb_bytes / 4UL;
900095aa:	ea4f 0092 	mov.w	r0, r2, lsr #2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900095ae:	69a1      	ldr	r1, [r4, #24]
    if (nb_words >= nbRequestWords)
900095b0:	f200 824e 	bhi.w	90009a50 <JPEG_Process+0x720>
      if (nb_words > 0UL)
900095b4:	2a03      	cmp	r2, #3
900095b6:	f240 82cc 	bls.w	90009b52 <JPEG_Process+0x822>
          input_count = hjpeg->JpegInCount;
900095ba:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
900095bc:	2801      	cmp	r0, #1
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900095be:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900095c2:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900095c4:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900095c6:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900095c8:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
900095cc:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900095ce:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
900095d2:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900095d6:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900095da:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
900095dc:	6a22      	ldr	r2, [r4, #32]
900095de:	f102 0204 	add.w	r2, r2, #4
900095e2:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
900095e4:	f43f aeb8 	beq.w	90009358 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
900095e8:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
900095ea:	2802      	cmp	r0, #2
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900095ec:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900095f0:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900095f2:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900095f4:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900095f6:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
900095fa:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900095fc:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
90009600:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009604:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009608:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
9000960a:	6a22      	ldr	r2, [r4, #32]
9000960c:	f102 0204 	add.w	r2, r2, #4
90009610:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009612:	f43f aea1 	beq.w	90009358 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
90009616:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009618:	2803      	cmp	r0, #3
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000961a:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000961e:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009620:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009622:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009624:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009628:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000962a:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
9000962e:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009632:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009636:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009638:	6a22      	ldr	r2, [r4, #32]
9000963a:	f102 0204 	add.w	r2, r2, #4
9000963e:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009640:	f43f ae8a 	beq.w	90009358 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
90009644:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009646:	2804      	cmp	r0, #4
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009648:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000964c:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000964e:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009650:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009652:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009656:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009658:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
9000965c:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009660:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009664:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009666:	6a22      	ldr	r2, [r4, #32]
90009668:	f102 0204 	add.w	r2, r2, #4
9000966c:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000966e:	f43f ae73 	beq.w	90009358 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
90009672:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
90009674:	2805      	cmp	r0, #5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009676:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000967a:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000967c:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
9000967e:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009680:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009684:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009686:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
9000968a:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
9000968e:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009692:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
90009694:	6a22      	ldr	r2, [r4, #32]
90009696:	f102 0204 	add.w	r2, r2, #4
9000969a:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
9000969c:	f43f ae5c 	beq.w	90009358 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
900096a0:	6a22      	ldr	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
900096a2:	2807      	cmp	r0, #7
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900096a4:	eb01 0502 	add.w	r5, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900096a8:	5c8e      	ldrb	r6, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096aa:	78aa      	ldrb	r2, [r5, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900096ac:	786f      	ldrb	r7, [r5, #1]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096ae:	ea4f 4202 	mov.w	r2, r2, lsl #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
900096b2:	78ed      	ldrb	r5, [r5, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900096b4:	ea42 2207 	orr.w	r2, r2, r7, lsl #8
900096b8:	ea42 0206 	orr.w	r2, r2, r6
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096bc:	ea42 6205 	orr.w	r2, r2, r5, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900096c0:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
900096c2:	6a22      	ldr	r2, [r4, #32]
900096c4:	f102 0204 	add.w	r2, r2, #4
900096c8:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
900096ca:	f47f ae45 	bne.w	90009358 <JPEG_Process+0x28>
          input_count = hjpeg->JpegInCount;
900096ce:	6a22      	ldr	r2, [r4, #32]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900096d0:	1888      	adds	r0, r1, r2
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900096d2:	5c8d      	ldrb	r5, [r1, r2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096d4:	7882      	ldrb	r2, [r0, #2]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
900096d6:	78c1      	ldrb	r1, [r0, #3]
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096d8:	0412      	lsls	r2, r2, #16
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
900096da:	7840      	ldrb	r0, [r0, #1]
900096dc:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
900096e0:	432a      	orrs	r2, r5
                                  (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
900096e2:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
900096e6:	641a      	str	r2, [r3, #64]	@ 0x40
          hjpeg->JpegInCount += 4UL;
900096e8:	6a22      	ldr	r2, [r4, #32]
900096ea:	3204      	adds	r2, #4
900096ec:	6222      	str	r2, [r4, #32]
        for (index = 0; index < nb_words; index++)
900096ee:	e633      	b.n	90009358 <JPEG_Process+0x28>
  if ((hjpeg->InDataLength == 0UL) || (nbRequestWords == 0UL))
900096f0:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
900096f2:	2a00      	cmp	r2, #0
900096f4:	d073      	beq.n	900097de <JPEG_Process+0x4ae>
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
900096f6:	6a21      	ldr	r1, [r4, #32]
900096f8:	428a      	cmp	r2, r1
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
900096fa:	6a21      	ldr	r1, [r4, #32]
  else if (hjpeg->InDataLength > hjpeg->JpegInCount)
900096fc:	f200 8182 	bhi.w	90009a04 <JPEG_Process+0x6d4>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
90009700:	428a      	cmp	r2, r1
90009702:	f040 8104 	bne.w	9000990e <JPEG_Process+0x5de>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009706:	6a21      	ldr	r1, [r4, #32]
90009708:	4620      	mov	r0, r4
9000970a:	f7f8 fc57 	bl	90001fbc <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
9000970e:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90009710:	2a04      	cmp	r2, #4
90009712:	d902      	bls.n	9000971a <JPEG_Process+0x3ea>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
90009714:	f022 0203 	bic.w	r2, r2, #3
90009718:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
9000971a:	2100      	movs	r1, #0
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
9000971c:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
9000971e:	6221      	str	r1, [r4, #32]
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009720:	6d61      	ldr	r1, [r4, #84]	@ 0x54
90009722:	04c9      	lsls	r1, r1, #19
90009724:	f53f ae18 	bmi.w	90009358 <JPEG_Process+0x28>
90009728:	2a00      	cmp	r2, #0
9000972a:	f43f ae15 	beq.w	90009358 <JPEG_Process+0x28>
    if (nb_words >= nbRequestWords)
9000972e:	0891      	lsrs	r1, r2, #2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009730:	69a0      	ldr	r0, [r4, #24]
    if (nb_words >= nbRequestWords)
90009732:	f040 8177 	bne.w	90009a24 <JPEG_Process+0x6f4>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009736:	6a21      	ldr	r1, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009738:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
9000973a:	6a25      	ldr	r5, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000973c:	5c41      	ldrb	r1, [r0, r1]
          hjpeg->JpegInCount++;
9000973e:	f105 0501 	add.w	r5, r5, #1
90009742:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009744:	d010      	beq.n	90009768 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009746:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009748:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000974a:	5d45      	ldrb	r5, [r0, r5]
9000974c:	ea41 2105 	orr.w	r1, r1, r5, lsl #8
          hjpeg->JpegInCount++;
90009750:	6a25      	ldr	r5, [r4, #32]
90009752:	f105 0501 	add.w	r5, r5, #1
90009756:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009758:	d106      	bne.n	90009768 <JPEG_Process+0x438>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
9000975a:	6a22      	ldr	r2, [r4, #32]
9000975c:	5c80      	ldrb	r0, [r0, r2]
          hjpeg->JpegInCount++;
9000975e:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009760:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
          hjpeg->JpegInCount++;
90009764:	3201      	adds	r2, #1
90009766:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
90009768:	6419      	str	r1, [r3, #64]	@ 0x40
9000976a:	e5f5      	b.n	90009358 <JPEG_Process+0x28>
  if (hjpeg->OutDataLength >= (hjpeg->JpegOutCount + (nbOutputWords * 4UL)))
9000976c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000976e:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
90009770:	3204      	adds	r2, #4
90009772:	4295      	cmp	r5, r2
90009774:	f0c0 80cd 	bcc.w	90009912 <JPEG_Process+0x5e2>
      dataword = hjpeg->Instance->DOR;
90009778:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000977a:	69e1      	ldr	r1, [r4, #28]
9000977c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000977e:	548b      	strb	r3, [r1, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009780:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009782:	69e2      	ldr	r2, [r4, #28]
90009784:	440a      	add	r2, r1
90009786:	0a19      	lsrs	r1, r3, #8
90009788:	7051      	strb	r1, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000978a:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000978c:	69e2      	ldr	r2, [r4, #28]
9000978e:	440a      	add	r2, r1
90009790:	0c19      	lsrs	r1, r3, #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009792:	0e1b      	lsrs	r3, r3, #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009794:	7091      	strb	r1, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009796:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90009798:	69e2      	ldr	r2, [r4, #28]
9000979a:	440a      	add	r2, r1
9000979c:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
9000979e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
900097a0:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
      hjpeg->JpegOutCount += 4UL;
900097a2:	3304      	adds	r3, #4
900097a4:	6263      	str	r3, [r4, #36]	@ 0x24
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
900097a6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900097a8:	429a      	cmp	r2, r3
900097aa:	f47f aeea 	bne.w	90009582 <JPEG_Process+0x252>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900097ae:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900097b0:	4620      	mov	r0, r4
900097b2:	69e1      	ldr	r1, [r4, #28]
900097b4:	f7f8 fc22 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
900097b8:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
900097ba:	6266      	str	r6, [r4, #36]	@ 0x24
900097bc:	e5d8      	b.n	90009370 <JPEG_Process+0x40>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
900097be:	f7f8 fccb 	bl	90002158 <HAL_JPEG_DecodeCpltCallback>
900097c2:	e619      	b.n	900093f8 <JPEG_Process+0xc8>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
900097c4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
900097c6:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
900097ca:	631a      	str	r2, [r3, #48]	@ 0x30
900097cc:	e5f9      	b.n	900093c2 <JPEG_Process+0x92>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
900097ce:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900097d0:	4620      	mov	r0, r4
900097d2:	69e1      	ldr	r1, [r4, #28]
900097d4:	f7f8 fc12 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
900097d8:	2300      	movs	r3, #0
900097da:	6263      	str	r3, [r4, #36]	@ 0x24
900097dc:	e5f9      	b.n	900093d2 <JPEG_Process+0xa2>
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
900097de:	6d62      	ldr	r2, [r4, #84]	@ 0x54
900097e0:	f002 020c 	and.w	r2, r2, #12
900097e4:	2a0c      	cmp	r2, #12
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
900097e6:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
900097e8:	f000 812d 	beq.w	90009a46 <JPEG_Process+0x716>
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
900097ec:	f002 020c 	and.w	r2, r2, #12
900097f0:	2a08      	cmp	r2, #8
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
900097f2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
  else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
900097f4:	f47f adb0 	bne.w	90009358 <JPEG_Process+0x28>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
900097f8:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
900097fc:	6562      	str	r2, [r4, #84]	@ 0x54
    __HAL_JPEG_DISABLE_IT(hjpeg, mask);
900097fe:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009800:	f022 0206 	bic.w	r2, r2, #6
90009804:	631a      	str	r2, [r3, #48]	@ 0x30
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009806:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009808:	e5a6      	b.n	90009358 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
9000980a:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000980c:	4296      	cmp	r6, r2
9000980e:	f67f adaf 	bls.w	90009370 <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
90009812:	6a60      	ldr	r0, [r4, #36]	@ 0x24
90009814:	1a30      	subs	r0, r6, r0
    for (index = 0; index < nb_words; index++)
90009816:	0880      	lsrs	r0, r0, #2
90009818:	d020      	beq.n	9000985c <JPEG_Process+0x52c>
9000981a:	4629      	mov	r1, r5
9000981c:	e000      	b.n	90009820 <JPEG_Process+0x4f0>
      dataword = hjpeg->Instance->DOR;
9000981e:	6823      	ldr	r3, [r4, #0]
90009820:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
90009822:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009824:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009826:	69e6      	ldr	r6, [r4, #28]
    for (index = 0; index < nb_words; index++)
90009828:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000982a:	54b3      	strb	r3, [r6, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
9000982c:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000982e:	69e2      	ldr	r2, [r4, #28]
90009830:	4432      	add	r2, r6
90009832:	ea4f 2613 	mov.w	r6, r3, lsr #8
90009836:	7056      	strb	r6, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009838:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000983a:	69e2      	ldr	r2, [r4, #28]
9000983c:	4432      	add	r2, r6
9000983e:	ea4f 4613 	mov.w	r6, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009842:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009846:	7096      	strb	r6, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009848:	6a66      	ldr	r6, [r4, #36]	@ 0x24
9000984a:	69e2      	ldr	r2, [r4, #28]
9000984c:	4432      	add	r2, r6
9000984e:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009850:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009852:	f103 0304 	add.w	r3, r3, #4
90009856:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
90009858:	d1e1      	bne.n	9000981e <JPEG_Process+0x4ee>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
9000985a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9000985c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000985e:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009860:	429e      	cmp	r6, r3
90009862:	f000 816e 	beq.w	90009b42 <JPEG_Process+0x812>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
90009866:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
9000986a:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
9000986c:	ebb6 0008 	subs.w	r0, r6, r8
      dataword = hjpeg->Instance->DOR;
90009870:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
90009872:	d00e      	beq.n	90009892 <JPEG_Process+0x562>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009874:	f005 0303 	and.w	r3, r5, #3
90009878:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
9000987a:	3501      	adds	r5, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000987c:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
9000987e:	42a8      	cmp	r0, r5
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009880:	fa27 f303 	lsr.w	r3, r7, r3
90009884:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
90009886:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009888:	69e1      	ldr	r1, [r4, #28]
9000988a:	f103 0301 	add.w	r3, r3, #1
9000988e:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
90009890:	d1f0      	bne.n	90009874 <JPEG_Process+0x544>
      nb_bytes = 4UL - nb_bytes;
90009892:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009896:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009898:	4620      	mov	r0, r4
      nb_bytes = 4UL - nb_bytes;
9000989a:	eba8 0606 	sub.w	r6, r8, r6
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000989e:	f7f8 fbad 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
900098a2:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
900098a4:	2e03      	cmp	r6, #3
      hjpeg->JpegOutCount = 0;
900098a6:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
900098a8:	f63f ae6b 	bhi.w	90009582 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
900098ac:	ea4f 02c6 	mov.w	r2, r6, lsl #3
900098b0:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900098b2:	69e0      	ldr	r0, [r4, #28]
900098b4:	fa27 f502 	lsr.w	r5, r7, r2
900098b8:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
900098ba:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900098bc:	f101 0101 	add.w	r1, r1, #1
900098c0:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
900098c2:	f43f ae5e 	beq.w	90009582 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
900098c6:	f102 0108 	add.w	r1, r2, #8
900098ca:	6a60      	ldr	r0, [r4, #36]	@ 0x24
900098cc:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
900098ce:	2e02      	cmp	r6, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
900098d0:	fa27 f101 	lsr.w	r1, r7, r1
900098d4:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
900098d6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900098d8:	f101 0101 	add.w	r1, r1, #1
900098dc:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
900098de:	f43f ae50 	beq.w	90009582 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
900098e2:	3210      	adds	r2, #16
900098e4:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900098e6:	69e0      	ldr	r0, [r4, #28]
900098e8:	fa27 f202 	lsr.w	r2, r7, r2
900098ec:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
900098ee:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900098f0:	3201      	adds	r2, #1
900098f2:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
900098f4:	2e00      	cmp	r6, #0
900098f6:	f47f ae44 	bne.w	90009582 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
900098fa:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900098fc:	0e3f      	lsrs	r7, r7, #24
900098fe:	69e2      	ldr	r2, [r4, #28]
90009900:	54d7      	strb	r7, [r2, r3]
        hjpeg->JpegOutCount++;
90009902:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009904:	3301      	adds	r3, #1
90009906:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
90009908:	e63b      	b.n	90009582 <JPEG_Process+0x252>
  else if (hjpeg->InDataLength == hjpeg->JpegInCount)
9000990a:	428a      	cmp	r2, r1
9000990c:	d07c      	beq.n	90009a08 <JPEG_Process+0x6d8>
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
9000990e:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009910:	e522      	b.n	90009358 <JPEG_Process+0x28>
  else if (hjpeg->OutDataLength > hjpeg->JpegOutCount)
90009912:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009914:	4295      	cmp	r5, r2
90009916:	f67f ad2b 	bls.w	90009370 <JPEG_Process+0x40>
    nb_words = (hjpeg->OutDataLength - hjpeg->JpegOutCount) / 4UL;
9000991a:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000991c:	1a28      	subs	r0, r5, r0
    for (index = 0; index < nb_words; index++)
9000991e:	0880      	lsrs	r0, r0, #2
90009920:	d020      	beq.n	90009964 <JPEG_Process+0x634>
90009922:	4631      	mov	r1, r6
90009924:	e000      	b.n	90009928 <JPEG_Process+0x5f8>
      dataword = hjpeg->Instance->DOR;
90009926:	6823      	ldr	r3, [r4, #0]
90009928:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
    for (index = 0; index < nb_words; index++)
9000992a:	3101      	adds	r1, #1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
9000992c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
9000992e:	69e5      	ldr	r5, [r4, #28]
    for (index = 0; index < nb_words; index++)
90009930:	4288      	cmp	r0, r1
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)(dataword & 0x000000FFUL);
90009932:	54ab      	strb	r3, [r5, r2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 1UL] = (uint8_t)((dataword & 0x0000FF00UL) >> 8);
90009934:	6a65      	ldr	r5, [r4, #36]	@ 0x24
90009936:	69e2      	ldr	r2, [r4, #28]
90009938:	442a      	add	r2, r5
9000993a:	ea4f 2513 	mov.w	r5, r3, lsr #8
9000993e:	7055      	strb	r5, [r2, #1]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
90009940:	6a65      	ldr	r5, [r4, #36]	@ 0x24
90009942:	69e2      	ldr	r2, [r4, #28]
90009944:	442a      	add	r2, r5
90009946:	ea4f 4513 	mov.w	r5, r3, lsr #16
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
9000994a:	ea4f 6313 	mov.w	r3, r3, lsr #24
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 2UL] = (uint8_t)((dataword & 0x00FF0000UL) >> 16);
9000994e:	7095      	strb	r5, [r2, #2]
      hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount + 3UL] = (uint8_t)((dataword & 0xFF000000UL) >> 24);
90009950:	6a65      	ldr	r5, [r4, #36]	@ 0x24
90009952:	69e2      	ldr	r2, [r4, #28]
90009954:	442a      	add	r2, r5
90009956:	70d3      	strb	r3, [r2, #3]
      hjpeg->JpegOutCount += 4UL;
90009958:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000995a:	f103 0304 	add.w	r3, r3, #4
9000995e:	6263      	str	r3, [r4, #36]	@ 0x24
    for (index = 0; index < nb_words; index++)
90009960:	d1e1      	bne.n	90009926 <JPEG_Process+0x5f6>
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009962:	6ae5      	ldr	r5, [r4, #44]	@ 0x2c
90009964:	6a63      	ldr	r3, [r4, #36]	@ 0x24
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009966:	69e1      	ldr	r1, [r4, #28]
    if (hjpeg->OutDataLength == hjpeg->JpegOutCount)
90009968:	429d      	cmp	r5, r3
9000996a:	f000 80ea 	beq.w	90009b42 <JPEG_Process+0x812>
      nb_bytes = hjpeg->OutDataLength - hjpeg->JpegOutCount;
9000996e:	f8d4 8024 	ldr.w	r8, [r4, #36]	@ 0x24
      dataword = hjpeg->Instance->DOR;
90009972:	6823      	ldr	r3, [r4, #0]
      for (index = 0; index < nb_bytes; index++)
90009974:	ebb5 0008 	subs.w	r0, r5, r8
      dataword = hjpeg->Instance->DOR;
90009978:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
      for (index = 0; index < nb_bytes; index++)
9000997a:	d00e      	beq.n	9000999a <JPEG_Process+0x66a>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
9000997c:	f006 0303 	and.w	r3, r6, #3
90009980:	6a62      	ldr	r2, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
90009982:	3601      	adds	r6, #1
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009984:	00db      	lsls	r3, r3, #3
      for (index = 0; index < nb_bytes; index++)
90009986:	42b0      	cmp	r0, r6
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * (index & 0x3UL))) & 0xFFUL);
90009988:	fa27 f303 	lsr.w	r3, r7, r3
9000998c:	548b      	strb	r3, [r1, r2]
        hjpeg->JpegOutCount++;
9000998e:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009990:	69e1      	ldr	r1, [r4, #28]
90009992:	f103 0301 	add.w	r3, r3, #1
90009996:	6263      	str	r3, [r4, #36]	@ 0x24
      for (index = 0; index < nb_bytes; index++)
90009998:	d1f0      	bne.n	9000997c <JPEG_Process+0x64c>
      nb_bytes = 4UL - nb_bytes;
9000999a:	f108 0804 	add.w	r8, r8, #4
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
9000999e:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900099a0:	4620      	mov	r0, r4
900099a2:	f7f8 fb2b 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
      nb_bytes = 4UL - nb_bytes;
900099a6:	eba8 0305 	sub.w	r3, r8, r5
      hjpeg->JpegOutCount = 0;
900099aa:	2200      	movs	r2, #0
      for (index = nb_bytes; index < 4UL; index++)
900099ac:	2b03      	cmp	r3, #3
      hjpeg->JpegOutCount = 0;
900099ae:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
900099b0:	f63f ade7 	bhi.w	90009582 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
900099b4:	ea4f 02c3 	mov.w	r2, r3, lsl #3
900099b8:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900099ba:	69e0      	ldr	r0, [r4, #28]
900099bc:	fa27 f502 	lsr.w	r5, r7, r2
900099c0:	5445      	strb	r5, [r0, r1]
        hjpeg->JpegOutCount++;
900099c2:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900099c4:	f101 0101 	add.w	r1, r1, #1
900099c8:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
900099ca:	f43f adda 	beq.w	90009582 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
900099ce:	f102 0108 	add.w	r1, r2, #8
900099d2:	6a60      	ldr	r0, [r4, #36]	@ 0x24
900099d4:	69e5      	ldr	r5, [r4, #28]
      for (index = nb_bytes; index < 4UL; index++)
900099d6:	2b02      	cmp	r3, #2
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
900099d8:	fa27 f101 	lsr.w	r1, r7, r1
900099dc:	5429      	strb	r1, [r5, r0]
        hjpeg->JpegOutCount++;
900099de:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900099e0:	f101 0101 	add.w	r1, r1, #1
900099e4:	6261      	str	r1, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
900099e6:	f43f adcc 	beq.w	90009582 <JPEG_Process+0x252>
        hjpeg->pJpegOutBuffPtr[hjpeg->JpegOutCount] = (uint8_t)((dataword >> (8UL * index)) & 0xFFUL);
900099ea:	3210      	adds	r2, #16
900099ec:	6a61      	ldr	r1, [r4, #36]	@ 0x24
900099ee:	69e0      	ldr	r0, [r4, #28]
900099f0:	fa27 f202 	lsr.w	r2, r7, r2
900099f4:	5442      	strb	r2, [r0, r1]
        hjpeg->JpegOutCount++;
900099f6:	6a62      	ldr	r2, [r4, #36]	@ 0x24
900099f8:	3201      	adds	r2, #1
900099fa:	6262      	str	r2, [r4, #36]	@ 0x24
      for (index = nb_bytes; index < 4UL; index++)
900099fc:	2b00      	cmp	r3, #0
900099fe:	f43f af7c 	beq.w	900098fa <JPEG_Process+0x5ca>
90009a02:	e5be      	b.n	90009582 <JPEG_Process+0x252>
    nb_bytes = hjpeg->InDataLength - hjpeg->JpegInCount;
90009a04:	1a52      	subs	r2, r2, r1
90009a06:	e68b      	b.n	90009720 <JPEG_Process+0x3f0>
    HAL_JPEG_GetDataCallback(hjpeg, hjpeg->JpegInCount);
90009a08:	6a21      	ldr	r1, [r4, #32]
90009a0a:	4620      	mov	r0, r4
90009a0c:	f7f8 fad6 	bl	90001fbc <HAL_JPEG_GetDataCallback>
    if (hjpeg->InDataLength > 4UL)
90009a10:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90009a12:	2a04      	cmp	r2, #4
90009a14:	d902      	bls.n	90009a1c <JPEG_Process+0x6ec>
      hjpeg->InDataLength = hjpeg->InDataLength - (hjpeg->InDataLength % 4UL);
90009a16:	f022 0203 	bic.w	r2, r2, #3
90009a1a:	62a2      	str	r2, [r4, #40]	@ 0x28
    hjpeg->JpegInCount = 0;
90009a1c:	2100      	movs	r1, #0
          hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a1e:	6823      	ldr	r3, [r4, #0]
    hjpeg->JpegInCount = 0;
90009a20:	6221      	str	r1, [r4, #32]
    nb_bytes = hjpeg->InDataLength;
90009a22:	e5ba      	b.n	9000959a <JPEG_Process+0x26a>
        input_count = hjpeg->JpegInCount;
90009a24:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a26:	1881      	adds	r1, r0, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a28:	5c85      	ldrb	r5, [r0, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a2a:	788a      	ldrb	r2, [r1, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009a2c:	78c8      	ldrb	r0, [r1, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a2e:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a30:	7849      	ldrb	r1, [r1, #1]
90009a32:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
90009a36:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a38:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a3c:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009a3e:	6a22      	ldr	r2, [r4, #32]
90009a40:	3204      	adds	r2, #4
90009a42:	6222      	str	r2, [r4, #32]
      for (index = 0; index < nbRequestWords; index++)
90009a44:	e488      	b.n	90009358 <JPEG_Process+0x28>
      hjpeg->Context |= JPEG_CONTEXT_PAUSE_INPUT;
90009a46:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
90009a4a:	6562      	str	r2, [r4, #84]	@ 0x54
  if (((hjpeg->Context &  JPEG_CONTEXT_PAUSE_INPUT) == 0UL) && (nb_bytes > 0UL))
90009a4c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
90009a4e:	e483      	b.n	90009358 <JPEG_Process+0x28>
        input_count = hjpeg->JpegInCount;
90009a50:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a52:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a54:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a56:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a58:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a5a:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009a5c:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a5e:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
90009a62:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a64:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a68:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009a6a:	6a22      	ldr	r2, [r4, #32]
90009a6c:	3204      	adds	r2, #4
90009a6e:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009a70:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a72:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a74:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a76:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a78:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a7a:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009a7c:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a7e:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
90009a82:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a84:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a88:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009a8a:	6a22      	ldr	r2, [r4, #32]
90009a8c:	3204      	adds	r2, #4
90009a8e:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009a90:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a92:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009a94:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a96:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a98:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009a9a:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009a9c:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009a9e:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
90009aa2:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009aa4:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009aa8:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009aaa:	6a22      	ldr	r2, [r4, #32]
90009aac:	3204      	adds	r2, #4
90009aae:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009ab0:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ab2:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ab4:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ab6:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ab8:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009aba:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009abc:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009abe:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
90009ac2:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ac4:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ac8:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009aca:	6a22      	ldr	r2, [r4, #32]
90009acc:	3204      	adds	r2, #4
90009ace:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009ad0:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ad2:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ad4:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ad6:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ad8:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ada:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009adc:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009ade:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
90009ae2:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009ae4:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009ae8:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009aea:	6a22      	ldr	r2, [r4, #32]
90009aec:	3204      	adds	r2, #4
90009aee:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009af0:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009af2:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009af4:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009af6:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009af8:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009afa:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009afc:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009afe:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
90009b02:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b04:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b08:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009b0a:	6a22      	ldr	r2, [r4, #32]
90009b0c:	3204      	adds	r2, #4
90009b0e:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009b10:	6a22      	ldr	r2, [r4, #32]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b12:	1888      	adds	r0, r1, r2
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b14:	5c8d      	ldrb	r5, [r1, r2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b16:	7882      	ldrb	r2, [r0, #2]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b18:	7846      	ldrb	r6, [r0, #1]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b1a:	0412      	lsls	r2, r2, #16
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 3UL])) << 24));
90009b1c:	78c0      	ldrb	r0, [r0, #3]
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 1UL])) << 8) | \
90009b1e:	ea42 2206 	orr.w	r2, r2, r6, lsl #8
90009b22:	432a      	orrs	r2, r5
                                (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count + 2UL])) << 16) | \
90009b24:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
        hjpeg->Instance->DIR = (((uint32_t)(hjpeg->pJpegInBuffPtr[input_count])) | \
90009b28:	641a      	str	r2, [r3, #64]	@ 0x40
        hjpeg->JpegInCount += 4UL;
90009b2a:	6a22      	ldr	r2, [r4, #32]
90009b2c:	3204      	adds	r2, #4
90009b2e:	6222      	str	r2, [r4, #32]
        input_count = hjpeg->JpegInCount;
90009b30:	e5cd      	b.n	900096ce <JPEG_Process+0x39e>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009b32:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009b34:	4620      	mov	r0, r4
90009b36:	69e1      	ldr	r1, [r4, #28]
90009b38:	f7f8 fa60 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009b3c:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009b3e:	6265      	str	r5, [r4, #36]	@ 0x24
90009b40:	e416      	b.n	90009370 <JPEG_Process+0x40>
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009b42:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009b44:	4620      	mov	r0, r4
90009b46:	f7f8 fa59 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
      hjpeg->JpegOutCount = 0;
90009b4a:	2200      	movs	r2, #0
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF | JPEG_FLAG_OFTF | JPEG_FLAG_OFNEF) == JPEG_FLAG_EOCF)
90009b4c:	6823      	ldr	r3, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009b4e:	6262      	str	r2, [r4, #36]	@ 0x24
90009b50:	e40e      	b.n	90009370 <JPEG_Process+0x40>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009b52:	6a20      	ldr	r0, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009b54:	2a01      	cmp	r2, #1
          hjpeg->JpegInCount++;
90009b56:	6a25      	ldr	r5, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009b58:	5c08      	ldrb	r0, [r1, r0]
          hjpeg->JpegInCount++;
90009b5a:	f105 0501 	add.w	r5, r5, #1
90009b5e:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009b60:	d010      	beq.n	90009b84 <JPEG_Process+0x854>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009b62:	6a25      	ldr	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009b64:	2a03      	cmp	r2, #3
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009b66:	5d4d      	ldrb	r5, [r1, r5]
90009b68:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
          hjpeg->JpegInCount++;
90009b6c:	6a25      	ldr	r5, [r4, #32]
90009b6e:	f105 0501 	add.w	r5, r5, #1
90009b72:	6225      	str	r5, [r4, #32]
        for (index = 0; index < nb_bytes; index++)
90009b74:	d106      	bne.n	90009b84 <JPEG_Process+0x854>
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009b76:	6a22      	ldr	r2, [r4, #32]
90009b78:	5c89      	ldrb	r1, [r1, r2]
          hjpeg->JpegInCount++;
90009b7a:	6a22      	ldr	r2, [r4, #32]
          dataword |= (uint32_t)hjpeg->pJpegInBuffPtr[hjpeg->JpegInCount] << (8UL * (index & 0x03UL));
90009b7c:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
          hjpeg->JpegInCount++;
90009b80:	3201      	adds	r2, #1
90009b82:	6222      	str	r2, [r4, #32]
        hjpeg->Instance->DIR = dataword;
90009b84:	6418      	str	r0, [r3, #64]	@ 0x40
90009b86:	f7ff bbe7 	b.w	90009358 <JPEG_Process+0x28>
90009b8a:	bf00      	nop

90009b8c <HAL_JPEG_IRQHandler>:
{
90009b8c:	b538      	push	{r3, r4, r5, lr}
  switch (hjpeg->State)
90009b8e:	f890 304d 	ldrb.w	r3, [r0, #77]	@ 0x4d
90009b92:	3b03      	subs	r3, #3
90009b94:	2b01      	cmp	r3, #1
90009b96:	d900      	bls.n	90009b9a <HAL_JPEG_IRQHandler+0xe>
}
90009b98:	bd38      	pop	{r3, r4, r5, pc}
      if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_IT)
90009b9a:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009b9c:	4604      	mov	r4, r0
90009b9e:	f003 030c 	and.w	r3, r3, #12
90009ba2:	2b08      	cmp	r3, #8
90009ba4:	d050      	beq.n	90009c48 <HAL_JPEG_IRQHandler+0xbc>
      else if ((hjpeg->Context & JPEG_CONTEXT_METHOD_MASK) == JPEG_CONTEXT_DMA)
90009ba6:	6d43      	ldr	r3, [r0, #84]	@ 0x54
90009ba8:	f003 030c 	and.w	r3, r3, #12
90009bac:	2b0c      	cmp	r3, #12
90009bae:	d1f3      	bne.n	90009b98 <HAL_JPEG_IRQHandler+0xc>
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009bb0:	6d42      	ldr	r2, [r0, #84]	@ 0x54
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009bb2:	6803      	ldr	r3, [r0, #0]
  if ((hjpeg->Context & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009bb4:	f002 0203 	and.w	r2, r2, #3
90009bb8:	2a02      	cmp	r2, #2
90009bba:	d049      	beq.n	90009c50 <HAL_JPEG_IRQHandler+0xc4>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_EOCF) != 0UL)
90009bbc:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009bbe:	0692      	lsls	r2, r2, #26
90009bc0:	d5ea      	bpl.n	90009b98 <HAL_JPEG_IRQHandler+0xc>
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
90009bc2:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
90009bc4:	6b20      	ldr	r0, [r4, #48]	@ 0x30
    hjpeg->Context |= JPEG_CONTEXT_ENDING_DMA;
90009bc6:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
90009bca:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009bcc:	681a      	ldr	r2, [r3, #0]
90009bce:	f022 0201 	bic.w	r2, r2, #1
90009bd2:	601a      	str	r2, [r3, #0]
    __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_INTERRUPT_MASK);
90009bd4:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009bd6:	f022 027e 	bic.w	r2, r2, #126	@ 0x7e
90009bda:	631a      	str	r2, [r3, #48]	@ 0x30
    __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_ALL);
90009bdc:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90009bde:	f042 0260 	orr.w	r2, r2, #96	@ 0x60
90009be2:	639a      	str	r2, [r3, #56]	@ 0x38
    if (hjpeg->hdmain->State == HAL_MDMA_STATE_BUSY)
90009be4:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
90009be8:	2b02      	cmp	r3, #2
90009bea:	d054      	beq.n	90009c96 <HAL_JPEG_IRQHandler+0x10a>
    if (hjpeg->hdmaout->State == HAL_MDMA_STATE_BUSY)
90009bec:	6b60      	ldr	r0, [r4, #52]	@ 0x34
90009bee:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
90009bf2:	2b02      	cmp	r3, #2
90009bf4:	d043      	beq.n	90009c7e <HAL_JPEG_IRQHandler+0xf2>
  hjpeg->JpegOutCount = hjpeg->OutDataLength - (hjpeg->hdmaout->Instance->CBNDTR & MDMA_CBNDTR_BNDT);
90009bf6:	6803      	ldr	r3, [r0, #0]
90009bf8:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
90009bfa:	695b      	ldr	r3, [r3, #20]
90009bfc:	f3c3 0310 	ubfx	r3, r3, #0, #17
90009c00:	1ad3      	subs	r3, r2, r3
90009c02:	6263      	str	r3, [r4, #36]	@ 0x24
  if (hjpeg->JpegOutCount == hjpeg->OutDataLength)
90009c04:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009c06:	429a      	cmp	r2, r3
90009c08:	d048      	beq.n	90009c9c <HAL_JPEG_IRQHandler+0x110>
  if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_OFNEF) == 0UL)
90009c0a:	6822      	ldr	r2, [r4, #0]
90009c0c:	6b55      	ldr	r5, [r2, #52]	@ 0x34
90009c0e:	f015 0510 	ands.w	r5, r5, #16
90009c12:	d138      	bne.n	90009c86 <HAL_JPEG_IRQHandler+0xfa>
    if (hjpeg->JpegOutCount > 0UL)
90009c14:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90009c16:	2b00      	cmp	r3, #0
90009c18:	d14b      	bne.n	90009cb2 <HAL_JPEG_IRQHandler+0x126>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009c1a:	6813      	ldr	r3, [r2, #0]
    __HAL_UNLOCK(hjpeg);
90009c1c:	2000      	movs	r0, #0
    hjpeg->State = HAL_JPEG_STATE_READY;
90009c1e:	2101      	movs	r1, #1
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009c20:	f023 0301 	bic.w	r3, r3, #1
90009c24:	6013      	str	r3, [r2, #0]
    tmpContext = hjpeg->Context;
90009c26:	6d63      	ldr	r3, [r4, #84]	@ 0x54
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009c28:	6d62      	ldr	r2, [r4, #84]	@ 0x54
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009c2a:	f003 0303 	and.w	r3, r3, #3
    __HAL_UNLOCK(hjpeg);
90009c2e:	f884 004c 	strb.w	r0, [r4, #76]	@ 0x4c
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009c32:	f402 4282 	and.w	r2, r2, #16640	@ 0x4100
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009c36:	4620      	mov	r0, r4
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009c38:	2b02      	cmp	r3, #2
    hjpeg->Context &= (JPEG_CONTEXT_CONF_ENCODING | JPEG_CONTEXT_CUSTOM_TABLES);
90009c3a:	6562      	str	r2, [r4, #84]	@ 0x54
    hjpeg->State = HAL_JPEG_STATE_READY;
90009c3c:	f884 104d 	strb.w	r1, [r4, #77]	@ 0x4d
    if ((tmpContext & JPEG_CONTEXT_OPERATION_MASK) == JPEG_CONTEXT_DECODE)
90009c40:	d034      	beq.n	90009cac <HAL_JPEG_IRQHandler+0x120>
      HAL_JPEG_EncodeCpltCallback(hjpeg);
90009c42:	f7ff f9af 	bl	90008fa4 <HAL_JPEG_EncodeCpltCallback>
}
90009c46:	bd38      	pop	{r3, r4, r5, pc}
90009c48:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        (void) JPEG_Process(hjpeg);
90009c4c:	f7ff bb70 	b.w	90009330 <JPEG_Process>
    if (__HAL_JPEG_GET_FLAG(hjpeg, JPEG_FLAG_HPDF) != 0UL)
90009c50:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009c52:	0651      	lsls	r1, r2, #25
90009c54:	d5b2      	bpl.n	90009bbc <HAL_JPEG_IRQHandler+0x30>
      (void) HAL_JPEG_GetInfo(hjpeg, &hjpeg->Conf);
90009c56:	1d05      	adds	r5, r0, #4
  if ((hjpeg == NULL) || (pInfo == NULL))
90009c58:	4629      	mov	r1, r5
90009c5a:	f7fe feaf 	bl	900089bc <HAL_JPEG_GetInfo.part.0>
      hjpeg->Conf.ImageQuality = 0;
90009c5e:	2300      	movs	r3, #0
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
90009c60:	4629      	mov	r1, r5
90009c62:	4620      	mov	r0, r4
      hjpeg->Conf.ImageQuality = 0;
90009c64:	6163      	str	r3, [r4, #20]
      HAL_JPEG_InfoReadyCallback(hjpeg, &hjpeg->Conf);
90009c66:	f7f8 f97b 	bl	90001f60 <HAL_JPEG_InfoReadyCallback>
      __HAL_JPEG_DISABLE_IT(hjpeg, JPEG_IT_HPD);
90009c6a:	6823      	ldr	r3, [r4, #0]
90009c6c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
90009c6e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
90009c72:	631a      	str	r2, [r3, #48]	@ 0x30
      __HAL_JPEG_CLEAR_FLAG(hjpeg, JPEG_FLAG_HPDF);
90009c74:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
90009c76:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
90009c7a:	639a      	str	r2, [r3, #56]	@ 0x38
90009c7c:	e79e      	b.n	90009bbc <HAL_JPEG_IRQHandler+0x30>
}
90009c7e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmaout);
90009c82:	f000 bb35 	b.w	9000a2f0 <HAL_MDMA_Abort_IT>
  else if ((hjpeg->Context &  JPEG_CONTEXT_PAUSE_OUTPUT) == 0UL)
90009c86:	6d63      	ldr	r3, [r4, #84]	@ 0x54
90009c88:	049b      	lsls	r3, r3, #18
90009c8a:	d485      	bmi.n	90009b98 <HAL_JPEG_IRQHandler+0xc>
    JPEG_DMA_PollResidualData(hjpeg);
90009c8c:	4620      	mov	r0, r4
}
90009c8e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    JPEG_DMA_PollResidualData(hjpeg);
90009c92:	f7ff b9f3 	b.w	9000907c <JPEG_DMA_PollResidualData>
      (void) HAL_MDMA_Abort_IT(hjpeg->hdmain);
90009c96:	f000 fb2b 	bl	9000a2f0 <HAL_MDMA_Abort_IT>
90009c9a:	e7a7      	b.n	90009bec <HAL_JPEG_IRQHandler+0x60>
    HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009c9c:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009c9e:	4620      	mov	r0, r4
90009ca0:	69e1      	ldr	r1, [r4, #28]
90009ca2:	f7f8 f9ab 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
    hjpeg->JpegOutCount = 0;
90009ca6:	2300      	movs	r3, #0
90009ca8:	6263      	str	r3, [r4, #36]	@ 0x24
90009caa:	e7ae      	b.n	90009c0a <HAL_JPEG_IRQHandler+0x7e>
      HAL_JPEG_DecodeCpltCallback(hjpeg);
90009cac:	f7f8 fa54 	bl	90002158 <HAL_JPEG_DecodeCpltCallback>
}
90009cb0:	bd38      	pop	{r3, r4, r5, pc}
      HAL_JPEG_DataReadyCallback(hjpeg, hjpeg->pJpegOutBuffPtr, hjpeg->JpegOutCount);
90009cb2:	6a62      	ldr	r2, [r4, #36]	@ 0x24
90009cb4:	4620      	mov	r0, r4
90009cb6:	69e1      	ldr	r1, [r4, #28]
90009cb8:	f7f8 f9a0 	bl	90001ffc <HAL_JPEG_DataReadyCallback>
    hjpeg->Instance->CONFR0 &=  ~JPEG_CONFR0_START;
90009cbc:	6822      	ldr	r2, [r4, #0]
      hjpeg->JpegOutCount = 0;
90009cbe:	6265      	str	r5, [r4, #36]	@ 0x24
90009cc0:	e7ab      	b.n	90009c1a <HAL_JPEG_IRQHandler+0x8e>
90009cc2:	bf00      	nop

90009cc4 <HAL_JPEG_GetState>:
  return hjpeg->State;
90009cc4:	f890 004d 	ldrb.w	r0, [r0, #77]	@ 0x4d
}
90009cc8:	4770      	bx	lr
90009cca:	bf00      	nop

90009ccc <HAL_LTDC_Init>:
{
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
90009ccc:	2800      	cmp	r0, #0
90009cce:	d052      	beq.n	90009d76 <HAL_LTDC_Init+0xaa>
{
90009cd0:	b538      	push	{r3, r4, r5, lr}
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
90009cd2:	f890 30a1 	ldrb.w	r3, [r0, #161]	@ 0xa1
90009cd6:	4604      	mov	r4, r0
90009cd8:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
90009cdc:	2b00      	cmp	r3, #0
90009cde:	d045      	beq.n	90009d6c <HAL_LTDC_Init+0xa0>
  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009ce0:	68a0      	ldr	r0, [r4, #8]
  hltdc->State = HAL_LTDC_STATE_BUSY;
90009ce2:	2102      	movs	r1, #2
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009ce4:	e9d4 3200 	ldrd	r3, r2, [r4]
  hltdc->State = HAL_LTDC_STATE_BUSY;
90009ce8:	f884 10a1 	strb.w	r1, [r4, #161]	@ 0xa1
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009cec:	4302      	orrs	r2, r0
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
90009cee:	6999      	ldr	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009cf0:	68e0      	ldr	r0, [r4, #12]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
90009cf2:	f021 4170 	bic.w	r1, r1, #4026531840	@ 0xf0000000
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009cf6:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
90009cf8:	6920      	ldr	r0, [r4, #16]
90009cfa:	4302      	orrs	r2, r0

  /* Set Synchronization size */
  tmp = (hltdc->Init.HorizontalSync << 16U);
90009cfc:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
90009cfe:	6199      	str	r1, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
90009d00:	6999      	ldr	r1, [r3, #24]
90009d02:	430a      	orrs	r2, r1
90009d04:	619a      	str	r2, [r3, #24]
  WRITE_REG(hltdc->Instance->SSCR, (tmp | hltdc->Init.VerticalSync));

  /* Set Accumulated Back porch */
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
90009d06:	e9d4 2106 	ldrd	r2, r1, [r4, #24]
  WRITE_REG(hltdc->Instance->SSCR, (tmp | hltdc->Init.VerticalSync));
90009d0a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
90009d0e:	609a      	str	r2, [r3, #8]
  WRITE_REG(hltdc->Instance->BPCR, (tmp | hltdc->Init.AccumulatedVBP));

  /* Set Accumulated Active Width */
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
90009d10:	e9d4 2008 	ldrd	r2, r0, [r4, #32]
  WRITE_REG(hltdc->Instance->BPCR, (tmp | hltdc->Init.AccumulatedVBP));
90009d14:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90009d18:	60da      	str	r2, [r3, #12]
  WRITE_REG(hltdc->Instance->AWCR, (tmp | hltdc->Init.AccumulatedActiveH));

  /* Set Total Width */
  tmp = (hltdc->Init.TotalWidth << 16U);
90009d1a:	e9d4 210a 	ldrd	r2, r1, [r4, #40]	@ 0x28
  WRITE_REG(hltdc->Instance->AWCR, (tmp | hltdc->Init.AccumulatedActiveH));
90009d1e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
90009d22:	611a      	str	r2, [r3, #16]
  WRITE_REG(hltdc->Instance->TWCR, (tmp | hltdc->Init.TotalHeigh));
90009d24:	6b22      	ldr	r2, [r4, #48]	@ 0x30
90009d26:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90009d2a:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
90009d2c:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
90009d2e:	f894 0035 	ldrb.w	r0, [r4, #53]	@ 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
90009d32:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
90009d36:	f894 1036 	ldrb.w	r1, [r4, #54]	@ 0x36
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
90009d3a:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
90009d3c:	6add      	ldr	r5, [r3, #44]	@ 0x2c
90009d3e:	f894 2034 	ldrb.w	r2, [r4, #52]	@ 0x34
90009d42:	432a      	orrs	r2, r5
90009d44:	ea42 2200 	orr.w	r2, r2, r0, lsl #8

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
90009d48:	2000      	movs	r0, #0
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
90009d4a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
90009d4e:	62da      	str	r2, [r3, #44]	@ 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
90009d50:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009d52:	f042 0206 	orr.w	r2, r2, #6
90009d56:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_LTDC_ENABLE(hltdc);
90009d58:	699a      	ldr	r2, [r3, #24]
90009d5a:	f042 0201 	orr.w	r2, r2, #1
90009d5e:	619a      	str	r2, [r3, #24]

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
90009d60:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
90009d62:	f8c4 00a4 	str.w	r0, [r4, #164]	@ 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
90009d66:	f884 30a1 	strb.w	r3, [r4, #161]	@ 0xa1

  return HAL_OK;
}
90009d6a:	bd38      	pop	{r3, r4, r5, pc}
    hltdc->Lock = HAL_UNLOCKED;
90009d6c:	f880 20a0 	strb.w	r2, [r0, #160]	@ 0xa0
    HAL_LTDC_MspInit(hltdc);
90009d70:	f7fa f92a 	bl	90003fc8 <HAL_LTDC_MspInit>
90009d74:	e7b4      	b.n	90009ce0 <HAL_LTDC_Init+0x14>
    return HAL_ERROR;
90009d76:	2001      	movs	r0, #1
}
90009d78:	4770      	bx	lr
90009d7a:	bf00      	nop

90009d7c <HAL_LTDC_ErrorCallback>:
  * @brief  Error LTDC callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
90009d7c:	4770      	bx	lr
90009d7e:	bf00      	nop

90009d80 <HAL_LTDC_ReloadEventCallback>:
  * @brief  Reload Event callback.
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
90009d80:	4770      	bx	lr
90009d82:	bf00      	nop

90009d84 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
90009d84:	6803      	ldr	r3, [r0, #0]
{
90009d86:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
90009d88:	6b9d      	ldr	r5, [r3, #56]	@ 0x38
{
90009d8a:	4604      	mov	r4, r0
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
90009d8c:	6b5e      	ldr	r6, [r3, #52]	@ 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
90009d8e:	076a      	lsls	r2, r5, #29
90009d90:	d501      	bpl.n	90009d96 <HAL_LTDC_IRQHandler+0x12>
90009d92:	0771      	lsls	r1, r6, #29
90009d94:	d41d      	bmi.n	90009dd2 <HAL_LTDC_IRQHandler+0x4e>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
90009d96:	07aa      	lsls	r2, r5, #30
90009d98:	d501      	bpl.n	90009d9e <HAL_LTDC_IRQHandler+0x1a>
90009d9a:	07b3      	lsls	r3, r6, #30
90009d9c:	d42d      	bmi.n	90009dfa <HAL_LTDC_IRQHandler+0x76>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
90009d9e:	07e8      	lsls	r0, r5, #31
90009da0:	d501      	bpl.n	90009da6 <HAL_LTDC_IRQHandler+0x22>
90009da2:	07f1      	lsls	r1, r6, #31
90009da4:	d440      	bmi.n	90009e28 <HAL_LTDC_IRQHandler+0xa4>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
90009da6:	072a      	lsls	r2, r5, #28
90009da8:	d501      	bpl.n	90009dae <HAL_LTDC_IRQHandler+0x2a>
90009daa:	0733      	lsls	r3, r6, #28
90009dac:	d400      	bmi.n	90009db0 <HAL_LTDC_IRQHandler+0x2c>
}
90009dae:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
90009db0:	6823      	ldr	r3, [r4, #0]
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
90009db2:	2008      	movs	r0, #8
    hltdc->State = HAL_LTDC_STATE_READY;
90009db4:	2501      	movs	r5, #1
    __HAL_UNLOCK(hltdc);
90009db6:	2100      	movs	r1, #0
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
90009db8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009dba:	f022 0208 	bic.w	r2, r2, #8
90009dbe:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
90009dc0:	63d8      	str	r0, [r3, #60]	@ 0x3c
    HAL_LTDC_ReloadEventCallback(hltdc);
90009dc2:	4620      	mov	r0, r4
    hltdc->State = HAL_LTDC_STATE_READY;
90009dc4:	f884 50a1 	strb.w	r5, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
90009dc8:	f884 10a0 	strb.w	r1, [r4, #160]	@ 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
90009dcc:	f7ff ffd8 	bl	90009d80 <HAL_LTDC_ReloadEventCallback>
}
90009dd0:	bd70      	pop	{r4, r5, r6, pc}
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
90009dd2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009dd4:	f022 0204 	bic.w	r2, r2, #4
90009dd8:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
90009dda:	2204      	movs	r2, #4
90009ddc:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
90009dde:	f8d0 30a4 	ldr.w	r3, [r0, #164]	@ 0xa4
90009de2:	f043 0301 	orr.w	r3, r3, #1
90009de6:	f8c0 30a4 	str.w	r3, [r0, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
90009dea:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
90009dec:	f880 20a1 	strb.w	r2, [r0, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
90009df0:	f880 30a0 	strb.w	r3, [r0, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
90009df4:	f7ff ffc2 	bl	90009d7c <HAL_LTDC_ErrorCallback>
90009df8:	e7cd      	b.n	90009d96 <HAL_LTDC_IRQHandler+0x12>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
90009dfa:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_ErrorCallback(hltdc);
90009dfc:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
90009dfe:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009e00:	f022 0202 	bic.w	r2, r2, #2
90009e04:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
90009e06:	2202      	movs	r2, #2
90009e08:	63da      	str	r2, [r3, #60]	@ 0x3c
    hltdc->State = HAL_LTDC_STATE_ERROR;
90009e0a:	2204      	movs	r2, #4
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
90009e0c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	@ 0xa4
90009e10:	f043 0302 	orr.w	r3, r3, #2
90009e14:	f8c4 30a4 	str.w	r3, [r4, #164]	@ 0xa4
    __HAL_UNLOCK(hltdc);
90009e18:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
90009e1a:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
90009e1e:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
90009e22:	f7ff ffab 	bl	90009d7c <HAL_LTDC_ErrorCallback>
90009e26:	e7ba      	b.n	90009d9e <HAL_LTDC_IRQHandler+0x1a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90009e28:	6823      	ldr	r3, [r4, #0]
    HAL_LTDC_LineEventCallback(hltdc);
90009e2a:	4620      	mov	r0, r4
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90009e2c:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
90009e2e:	f022 0201 	bic.w	r2, r2, #1
90009e32:	635a      	str	r2, [r3, #52]	@ 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
90009e34:	2201      	movs	r2, #1
90009e36:	63da      	str	r2, [r3, #60]	@ 0x3c
    __HAL_UNLOCK(hltdc);
90009e38:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
90009e3a:	f884 20a1 	strb.w	r2, [r4, #161]	@ 0xa1
    __HAL_UNLOCK(hltdc);
90009e3e:	f884 30a0 	strb.w	r3, [r4, #160]	@ 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
90009e42:	f7f9 fc39 	bl	900036b8 <HAL_LTDC_LineEventCallback>
90009e46:	e7ae      	b.n	90009da6 <HAL_LTDC_IRQHandler+0x22>

90009e48 <HAL_LTDC_ConfigLayer>:
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
90009e48:	f890 30a0 	ldrb.w	r3, [r0, #160]	@ 0xa0
90009e4c:	2b01      	cmp	r3, #1
90009e4e:	f000 80b6 	beq.w	90009fbe <HAL_LTDC_ConfigLayer+0x176>

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
90009e52:	2302      	movs	r3, #2
{
90009e54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009e58:	f04f 0e34 	mov.w	lr, #52	@ 0x34
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009e5c:	f8d0 9000 	ldr.w	r9, [r0]
{
90009e60:	b083      	sub	sp, #12
  hltdc->State = HAL_LTDC_STATE_BUSY;
90009e62:	f880 30a1 	strb.w	r3, [r0, #161]	@ 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009e66:	fb0e 0e02 	mla	lr, lr, r2, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009e6a:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009e6c:	f8d9 300c 	ldr.w	r3, [r9, #12]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009e70:	460c      	mov	r4, r1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009e72:	f102 0684 	add.w	r6, r2, #132	@ 0x84
90009e76:	460d      	mov	r5, r1
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009e78:	f3c3 4b0b 	ubfx	fp, r3, #16, #12
90009e7c:	4680      	mov	r8, r0
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009e7e:	eb09 0c06 	add.w	ip, r9, r6
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009e82:	f10e 0e38 	add.w	lr, lr, #56	@ 0x38
  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
90009e86:	f8df a140 	ldr.w	sl, [pc, #320]	@ 90009fc8 <HAL_LTDC_ConfigLayer+0x180>
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009e8a:	f8dc 3004 	ldr.w	r3, [ip, #4]
90009e8e:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
90009e92:	9301      	str	r3, [sp, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009e94:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
90009e96:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
90009e9a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009e9c:	686f      	ldr	r7, [r5, #4]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009e9e:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
90009ea2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
90009ea4:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
90009ea8:	6823      	ldr	r3, [r4, #0]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
90009eaa:	44bb      	add	fp, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
90009eac:	682a      	ldr	r2, [r5, #0]
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
90009eae:	f8ce 3000 	str.w	r3, [lr]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009eb2:	9b01      	ldr	r3, [sp, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
90009eb4:	1c51      	adds	r1, r2, #1
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90009eb6:	68e8      	ldr	r0, [r5, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
90009eb8:	f8cc 3004 	str.w	r3, [ip, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
90009ebc:	f8d9 300c 	ldr.w	r3, [r9, #12]
90009ec0:	f3c3 430b 	ubfx	r3, r3, #16, #12
90009ec4:	440b      	add	r3, r1
90009ec6:	ea43 430b 	orr.w	r3, r3, fp, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
90009eca:	f8cc 3004 	str.w	r3, [ip, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90009ece:	f8d9 100c 	ldr.w	r1, [r9, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
90009ed2:	f8dc 3008 	ldr.w	r3, [ip, #8]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90009ed6:	f3c1 010a 	ubfx	r1, r1, #0, #11
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
90009eda:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
90009ede:	4401      	add	r1, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
90009ee0:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
90009ee4:	68ab      	ldr	r3, [r5, #8]
90009ee6:	f8d9 000c 	ldr.w	r0, [r9, #12]
90009eea:	3301      	adds	r3, #1
90009eec:	f3c0 000a 	ubfx	r0, r0, #0, #11
90009ef0:	4403      	add	r3, r0
  tmp2 = (pLayerCfg->Alpha0 << 24U);
90009ef2:	69a8      	ldr	r0, [r5, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
90009ef4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
90009ef8:	6929      	ldr	r1, [r5, #16]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
90009efa:	f8cc 3008 	str.w	r3, [ip, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
90009efe:	2907      	cmp	r1, #7
90009f00:	f8dc 3010 	ldr.w	r3, [ip, #16]
90009f04:	f023 0307 	bic.w	r3, r3, #7
90009f08:	f8cc 3010 	str.w	r3, [ip, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
90009f0c:	f8cc 1010 	str.w	r1, [ip, #16]
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
90009f10:	f895 3030 	ldrb.w	r3, [r5, #48]	@ 0x30
90009f14:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
90009f18:	f895 0031 	ldrb.w	r0, [r5, #49]	@ 0x31
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
90009f1c:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
90009f20:	f895 0032 	ldrb.w	r0, [r5, #50]	@ 0x32
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->DCCR, (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2));
90009f24:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
90009f28:	f8cc 3018 	str.w	r3, [ip, #24]
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
90009f2c:	f8dc 3014 	ldr.w	r3, [ip, #20]
90009f30:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
90009f34:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
90009f38:	696b      	ldr	r3, [r5, #20]
90009f3a:	f8cc 3014 	str.w	r3, [ip, #20]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
90009f3e:	f8dc 001c 	ldr.w	r0, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
90009f42:	69eb      	ldr	r3, [r5, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
90009f44:	ea00 0a0a 	and.w	sl, r0, sl
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
90009f48:	6a28      	ldr	r0, [r5, #32]
90009f4a:	ea43 0300 	orr.w	r3, r3, r0
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
90009f4e:	f8cc a01c 	str.w	sl, [ip, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
90009f52:	f8cc 301c 	str.w	r3, [ip, #28]

  /* Configure the color frame buffer start address */
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
90009f56:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
90009f58:	f8cc 3028 	str.w	r3, [ip, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
90009f5c:	d82d      	bhi.n	90009fba <HAL_LTDC_ConfigLayer+0x172>
90009f5e:	4b19      	ldr	r3, [pc, #100]	@ (90009fc4 <HAL_LTDC_ConfigLayer+0x17c>)
90009f60:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
90009f64:	1abf      	subs	r7, r7, r2
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
90009f66:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
90009f68:	fb03 f707 	mul.w	r7, r3, r7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
90009f6c:	fb02 f303 	mul.w	r3, r2, r3
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
90009f70:	6aea      	ldr	r2, [r5, #44]	@ 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
90009f72:	3707      	adds	r7, #7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
90009f74:	ea47 4703 	orr.w	r7, r7, r3, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
90009f78:	f8dc 302c 	ldr.w	r3, [ip, #44]	@ 0x2c
90009f7c:	f003 23e0 	and.w	r3, r3, #3758153728	@ 0xe000e000
90009f80:	f8cc 302c 	str.w	r3, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
90009f84:	f8cc 702c 	str.w	r7, [ip, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
90009f88:	f8dc 3030 	ldr.w	r3, [ip, #48]	@ 0x30
90009f8c:	f36f 030a 	bfc	r3, #0, #11
90009f90:	f8cc 3030 	str.w	r3, [ip, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
90009f94:	f8cc 2030 	str.w	r2, [ip, #48]	@ 0x30
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
90009f98:	2201      	movs	r2, #1

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
90009f9a:	f859 3006 	ldr.w	r3, [r9, r6]
90009f9e:	4313      	orrs	r3, r2
90009fa0:	f849 3006 	str.w	r3, [r9, r6]
  __HAL_UNLOCK(hltdc);
90009fa4:	2300      	movs	r3, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
90009fa6:	f8c9 2024 	str.w	r2, [r9, #36]	@ 0x24
  return HAL_OK;
90009faa:	4618      	mov	r0, r3
  hltdc->State  = HAL_LTDC_STATE_READY;
90009fac:	f888 20a1 	strb.w	r2, [r8, #161]	@ 0xa1
  __HAL_UNLOCK(hltdc);
90009fb0:	f888 30a0 	strb.w	r3, [r8, #160]	@ 0xa0
}
90009fb4:	b003      	add	sp, #12
90009fb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  WRITE_REG(LTDC_LAYER(hltdc, LayerIdx)->CFBAR, pLayerCfg->FBStartAdress);
90009fba:	2301      	movs	r3, #1
90009fbc:	e7d2      	b.n	90009f64 <HAL_LTDC_ConfigLayer+0x11c>
  __HAL_LOCK(hltdc);
90009fbe:	2002      	movs	r0, #2
}
90009fc0:	4770      	bx	lr
90009fc2:	bf00      	nop
90009fc4:	9002d0b8 	.word	0x9002d0b8
90009fc8:	fffff8f8 	.word	0xfffff8f8

90009fcc <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
90009fcc:	f890 20a0 	ldrb.w	r2, [r0, #160]	@ 0xa0
90009fd0:	2a01      	cmp	r2, #1
90009fd2:	d019      	beq.n	9000a008 <HAL_LTDC_ProgramLineEvent+0x3c>
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90009fd4:	6802      	ldr	r2, [r0, #0]
90009fd6:	4603      	mov	r3, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
90009fd8:	2002      	movs	r0, #2
  __HAL_UNLOCK(hltdc);
90009fda:	f04f 0c00 	mov.w	ip, #0
{
90009fde:	b410      	push	{r4}
  hltdc->State = HAL_LTDC_STATE_BUSY;
90009fe0:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90009fe4:	6b50      	ldr	r0, [r2, #52]	@ 0x34
  LTDC->LIPCR = (uint32_t)Line;
90009fe6:	4c09      	ldr	r4, [pc, #36]	@ (9000a00c <HAL_LTDC_ProgramLineEvent+0x40>)
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
90009fe8:	f020 0001 	bic.w	r0, r0, #1
90009fec:	6350      	str	r0, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
90009fee:	2001      	movs	r0, #1
  LTDC->LIPCR = (uint32_t)Line;
90009ff0:	6421      	str	r1, [r4, #64]	@ 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
90009ff2:	6b51      	ldr	r1, [r2, #52]	@ 0x34
90009ff4:	4301      	orrs	r1, r0
90009ff6:	6351      	str	r1, [r2, #52]	@ 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
90009ff8:	f883 00a1 	strb.w	r0, [r3, #161]	@ 0xa1
  return HAL_OK;
90009ffc:	4660      	mov	r0, ip
  __HAL_UNLOCK(hltdc);
90009ffe:	f883 c0a0 	strb.w	ip, [r3, #160]	@ 0xa0
}
9000a002:	f85d 4b04 	ldr.w	r4, [sp], #4
9000a006:	4770      	bx	lr
  __HAL_LOCK(hltdc);
9000a008:	2002      	movs	r0, #2
}
9000a00a:	4770      	bx	lr
9000a00c:	50001000 	.word	0x50001000

9000a010 <HAL_MDMA_Init>:
  * @param  hmdma: Pointer to a MDMA_HandleTypeDef structure that contains
  *               the configuration information for the specified MDMA Channel.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Init(MDMA_HandleTypeDef *hmdma)
{
9000a010:	b538      	push	{r3, r4, r5, lr}
9000a012:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
9000a014:	f7fc ff28 	bl	90006e68 <HAL_GetTick>

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
9000a018:	2c00      	cmp	r4, #0
9000a01a:	d058      	beq.n	9000a0ce <HAL_MDMA_Init+0xbe>

  /* Change MDMA peripheral state */
  hmdma->State = HAL_MDMA_STATE_BUSY;

  /* Disable the MDMA channel */
  __HAL_MDMA_DISABLE(hmdma);
9000a01c:	6823      	ldr	r3, [r4, #0]
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000a01e:	2202      	movs	r2, #2
  __HAL_UNLOCK(hmdma);
9000a020:	2100      	movs	r1, #0
9000a022:	4605      	mov	r5, r0
  hmdma->State = HAL_MDMA_STATE_BUSY;
9000a024:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  __HAL_UNLOCK(hmdma);
9000a028:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
  __HAL_MDMA_DISABLE(hmdma);
9000a02c:	68da      	ldr	r2, [r3, #12]
9000a02e:	f022 0201 	bic.w	r2, r2, #1
9000a032:	60da      	str	r2, [r3, #12]

  /* Check if the MDMA channel is effectively disabled */
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a034:	e005      	b.n	9000a042 <HAL_MDMA_Init+0x32>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000a036:	f7fc ff17 	bl	90006e68 <HAL_GetTick>
9000a03a:	1b43      	subs	r3, r0, r5
9000a03c:	2b05      	cmp	r3, #5
9000a03e:	d841      	bhi.n	9000a0c4 <HAL_MDMA_Init+0xb4>
  while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a040:	6823      	ldr	r3, [r4, #0]
9000a042:	68da      	ldr	r2, [r3, #12]
9000a044:	07d2      	lsls	r2, r2, #31
9000a046:	d4f6      	bmi.n	9000a036 <HAL_MDMA_Init+0x26>
  /* Write new CTCR Register value */
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
                           hmdma->Init.SourceDataSize | hmdma->Init.DestDataSize   | \
                           hmdma->Init.DataAlignment  | hmdma->Init.SourceBurst    | \
                           hmdma->Init.DestBurst                                   | \
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a048:	e9d4 2505 	ldrd	r2, r5, [r4, #20]
9000a04c:	69e0      	ldr	r0, [r4, #28]
9000a04e:	432a      	orrs	r2, r5
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a050:	68e1      	ldr	r1, [r4, #12]
9000a052:	6925      	ldr	r5, [r4, #16]
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a054:	4302      	orrs	r2, r0
9000a056:	6a20      	ldr	r0, [r4, #32]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a058:	4329      	orrs	r1, r5
                           ((hmdma->Init.BufferTransferLength - 1U) << MDMA_CTCR_TLEN_Pos) | \
9000a05a:	4302      	orrs	r2, r0
9000a05c:	6a60      	ldr	r0, [r4, #36]	@ 0x24
9000a05e:	4302      	orrs	r2, r0
9000a060:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000a062:	4302      	orrs	r2, r0
9000a064:	6b20      	ldr	r0, [r4, #48]	@ 0x30
9000a066:	4302      	orrs	r2, r0
9000a068:	68a0      	ldr	r0, [r4, #8]
9000a06a:	4302      	orrs	r2, r0
9000a06c:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
9000a06e:	3801      	subs	r0, #1
9000a070:	ea42 4280 	orr.w	r2, r2, r0, lsl #18
                           hmdma->Init.TransferTriggerMode;

  /* If SW request set the CTCR register to SW Request Mode */
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a074:	6860      	ldr	r0, [r4, #4]
  hmdma->Instance->CCR = hmdma->Init.Priority  | hmdma->Init.Endianness;
9000a076:	60d9      	str	r1, [r3, #12]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a078:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
  hmdma->Instance->CTCR =  hmdma->Init.SourceInc      | hmdma->Init.DestinationInc | \
9000a07c:	611a      	str	r2, [r3, #16]
  if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a07e:	d103      	bne.n	9000a088 <HAL_MDMA_Init+0x78>
    -If the request is done by SW : BWM could be set to 1 or 0.
    -If the request is done by a peripheral :
    If mask address not set (0) => BWM must be set to 0
    If mask address set (different than 0) => BWM could be set to 1 or 0
    */
    hmdma->Instance->CTCR |= (MDMA_CTCR_SWRM | MDMA_CTCR_BWM);
9000a080:	691a      	ldr	r2, [r3, #16]
9000a082:	f042 4240 	orr.w	r2, r2, #3221225472	@ 0xc0000000
9000a086:	611a      	str	r2, [r3, #16]
  }

  /* Reset CBNDTR Register */
  hmdma->Instance->CBNDTR = 0;
9000a088:	2100      	movs	r1, #0

  /* if block source address offset is negative set the Block Repeat Source address Update Mode to decrement */
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000a08a:	6b62      	ldr	r2, [r4, #52]	@ 0x34
9000a08c:	428a      	cmp	r2, r1
  hmdma->Instance->CBNDTR = 0;
9000a08e:	6159      	str	r1, [r3, #20]
  if(hmdma->Init.SourceBlockAddressOffset < 0)
9000a090:	db1f      	blt.n	9000a0d2 <HAL_MDMA_Init+0xc2>
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
  }
  else
  {
    /* Write new CBRUR Register value : source repeat block offset */
    hmdma->Instance->CBRUR = (((uint32_t)hmdma->Init.SourceBlockAddressOffset) & 0x0000FFFFU);
9000a092:	b292      	uxth	r2, r2
9000a094:	621a      	str	r2, [r3, #32]
  }

  /* If block destination address offset is negative set the Block Repeat destination address Update Mode to decrement */
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000a096:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000a098:	2a00      	cmp	r2, #0
9000a09a:	db24      	blt.n	9000a0e6 <HAL_MDMA_Init+0xd6>
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
  }
  else
  {
    /*write new CBRUR Register value : destination repeat block offset */
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a09c:	6a19      	ldr	r1, [r3, #32]
  }

  /* if HW request set the HW request and the requet CleraMask and ClearData MaskData, */
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a09e:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBRUR |= ((((uint32_t)hmdma->Init.DestBlockAddressOffset) & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a0a2:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000a0a6:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a0a8:	d029      	beq.n	9000a0fe <HAL_MDMA_Init+0xee>
  {
    /* Set the HW request in CTRB register  */
    hmdma->Instance->CTBR = hmdma->Init.Request & MDMA_CTBR_TSEL;
9000a0aa:	b2c0      	uxtb	r0, r0
9000a0ac:	6298      	str	r0, [r3, #40]	@ 0x28
  {
    hmdma->Instance->CTBR = 0;
  }

  /* Write Link Address Register */
  hmdma->Instance->CLAR =  0;
9000a0ae:	2200      	movs	r2, #0
  hmdma->State = HAL_MDMA_STATE_READY;
9000a0b0:	2101      	movs	r1, #1
  hmdma->Instance->CLAR =  0;
9000a0b2:	625a      	str	r2, [r3, #36]	@ 0x24
  return HAL_OK;
9000a0b4:	4610      	mov	r0, r2
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a0b6:	66a2      	str	r2, [r4, #104]	@ 0x68
  hmdma->LinkedListNodeCounter  = 0;
9000a0b8:	6662      	str	r2, [r4, #100]	@ 0x64
  hmdma->State = HAL_MDMA_STATE_READY;
9000a0ba:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
  hmdma->FirstLinkedListNodeAddress  = 0;
9000a0be:	e9c4 2217 	strd	r2, r2, [r4, #92]	@ 0x5c
}
9000a0c2:	bd38      	pop	{r3, r4, r5, pc}
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000a0c4:	2240      	movs	r2, #64	@ 0x40
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a0c6:	2303      	movs	r3, #3
      hmdma->ErrorCode = HAL_MDMA_ERROR_TIMEOUT;
9000a0c8:	66a2      	str	r2, [r4, #104]	@ 0x68
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a0ca:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    return HAL_ERROR;
9000a0ce:	2001      	movs	r0, #1
}
9000a0d0:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a0d2:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.SourceBlockAddressOffset);
9000a0d4:	4252      	negs	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a0d6:	f441 2180 	orr.w	r1, r1, #262144	@ 0x40000
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000a0da:	b292      	uxth	r2, r2
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRSUM;
9000a0dc:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR = (blockoffset & 0x0000FFFFU);
9000a0de:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.DestBlockAddressOffset < 0)
9000a0e0:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000a0e2:	2a00      	cmp	r2, #0
9000a0e4:	dada      	bge.n	9000a09c <HAL_MDMA_Init+0x8c>
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000a0e6:	6959      	ldr	r1, [r3, #20]
    blockoffset = (uint32_t)(- hmdma->Init.DestBlockAddressOffset);
9000a0e8:	4252      	negs	r2, r2
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a0ea:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
    hmdma->Instance->CBNDTR |= MDMA_CBNDTR_BRDUM;
9000a0ee:	f441 2100 	orr.w	r1, r1, #524288	@ 0x80000
9000a0f2:	6159      	str	r1, [r3, #20]
    hmdma->Instance->CBRUR |= ((blockoffset & 0x0000FFFFU) << MDMA_CBRUR_DUV_Pos);
9000a0f4:	6a19      	ldr	r1, [r3, #32]
9000a0f6:	ea41 4202 	orr.w	r2, r1, r2, lsl #16
9000a0fa:	621a      	str	r2, [r3, #32]
  if(hmdma->Init.Request != MDMA_REQUEST_SW)
9000a0fc:	d1d5      	bne.n	9000a0aa <HAL_MDMA_Init+0x9a>
    hmdma->Instance->CTBR = 0;
9000a0fe:	2200      	movs	r2, #0
9000a100:	629a      	str	r2, [r3, #40]	@ 0x28
9000a102:	e7d4      	b.n	9000a0ae <HAL_MDMA_Init+0x9e>

9000a104 <HAL_MDMA_DeInit>:
  if(hmdma == NULL)
9000a104:	b1f8      	cbz	r0, 9000a146 <HAL_MDMA_DeInit+0x42>
  __HAL_MDMA_DISABLE(hmdma);
9000a106:	6802      	ldr	r2, [r0, #0]
9000a108:	4601      	mov	r1, r0
  hmdma->Instance->CCR  = 0;
9000a10a:	2300      	movs	r3, #0
  __HAL_MDMA_DISABLE(hmdma);
9000a10c:	68d0      	ldr	r0, [r2, #12]
{
9000a10e:	b410      	push	{r4}
  __HAL_MDMA_DISABLE(hmdma);
9000a110:	f020 0001 	bic.w	r0, r0, #1
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000a114:	241f      	movs	r4, #31
  __HAL_MDMA_DISABLE(hmdma);
9000a116:	60d0      	str	r0, [r2, #12]
  return HAL_OK;
9000a118:	4618      	mov	r0, r3
  hmdma->Instance->CCR  = 0;
9000a11a:	60d3      	str	r3, [r2, #12]
  hmdma->Instance->CTCR = 0;
9000a11c:	6113      	str	r3, [r2, #16]
  hmdma->Instance->CBNDTR = 0;
9000a11e:	6153      	str	r3, [r2, #20]
  hmdma->Instance->CSAR = 0;
9000a120:	6193      	str	r3, [r2, #24]
  hmdma->Instance->CDAR = 0;
9000a122:	61d3      	str	r3, [r2, #28]
  hmdma->Instance->CBRUR = 0;
9000a124:	6213      	str	r3, [r2, #32]
  hmdma->Instance->CLAR = 0;
9000a126:	6253      	str	r3, [r2, #36]	@ 0x24
  hmdma->Instance->CTBR = 0;
9000a128:	6293      	str	r3, [r2, #40]	@ 0x28
  hmdma->Instance->CMAR = 0;
9000a12a:	6313      	str	r3, [r2, #48]	@ 0x30
  hmdma->Instance->CMDR = 0;
9000a12c:	6353      	str	r3, [r2, #52]	@ 0x34
  __HAL_MDMA_CLEAR_FLAG(hmdma,(MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BRT | MDMA_FLAG_BT | MDMA_FLAG_BFTC));
9000a12e:	6054      	str	r4, [r2, #4]
  hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a130:	668b      	str	r3, [r1, #104]	@ 0x68
  __HAL_UNLOCK(hmdma);
9000a132:	f881 303c 	strb.w	r3, [r1, #60]	@ 0x3c
  hmdma->State = HAL_MDMA_STATE_RESET;
9000a136:	f881 303d 	strb.w	r3, [r1, #61]	@ 0x3d
}
9000a13a:	f85d 4b04 	ldr.w	r4, [sp], #4
  hmdma->LinkedListNodeCounter  = 0;
9000a13e:	664b      	str	r3, [r1, #100]	@ 0x64
  hmdma->FirstLinkedListNodeAddress  = 0;
9000a140:	e9c1 3317 	strd	r3, r3, [r1, #92]	@ 0x5c
}
9000a144:	4770      	bx	lr
    return HAL_ERROR;
9000a146:	2001      	movs	r0, #1
}
9000a148:	4770      	bx	lr
9000a14a:	bf00      	nop

9000a14c <HAL_MDMA_ConfigPostRequestMask>:
  if(hmdma == NULL)
9000a14c:	b308      	cbz	r0, 9000a192 <HAL_MDMA_ConfigPostRequestMask+0x46>
9000a14e:	4603      	mov	r3, r0
  __HAL_LOCK(hmdma);
9000a150:	f890 003c 	ldrb.w	r0, [r0, #60]	@ 0x3c
9000a154:	2801      	cmp	r0, #1
9000a156:	d01e      	beq.n	9000a196 <HAL_MDMA_ConfigPostRequestMask+0x4a>
{
9000a158:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hmdma);
9000a15a:	f04f 0e01 	mov.w	lr, #1
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000a15e:	f893 c03d 	ldrb.w	ip, [r3, #61]	@ 0x3d
9000a162:	45f4      	cmp	ip, lr
9000a164:	fa5f f08c 	uxtb.w	r0, ip
  __HAL_LOCK(hmdma);
9000a168:	f883 e03c 	strb.w	lr, [r3, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000a16c:	d004      	beq.n	9000a178 <HAL_MDMA_ConfigPostRequestMask+0x2c>
      status =  HAL_ERROR;
9000a16e:	4670      	mov	r0, lr
  __HAL_UNLOCK(hmdma);
9000a170:	2200      	movs	r2, #0
9000a172:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
}
9000a176:	bd30      	pop	{r4, r5, pc}
    if((hmdma->Instance->CTCR & MDMA_CTCR_SWRM) == 0U)
9000a178:	681c      	ldr	r4, [r3, #0]
9000a17a:	6925      	ldr	r5, [r4, #16]
9000a17c:	006d      	lsls	r5, r5, #1
9000a17e:	d4f7      	bmi.n	9000a170 <HAL_MDMA_ConfigPostRequestMask+0x24>
      hmdma->Instance->CMAR = MaskAddress;
9000a180:	6321      	str	r1, [r4, #48]	@ 0x30
      hmdma->Instance->CMDR = MaskData;
9000a182:	6362      	str	r2, [r4, #52]	@ 0x34
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000a184:	6922      	ldr	r2, [r4, #16]
      if(MaskAddress == 0U)
9000a186:	b941      	cbnz	r1, 9000a19a <HAL_MDMA_ConfigPostRequestMask+0x4e>
        hmdma->Instance->CTCR &=  ~MDMA_CTCR_BWM;
9000a188:	f022 4200 	bic.w	r2, r2, #2147483648	@ 0x80000000
9000a18c:	6122      	str	r2, [r4, #16]
  HAL_StatusTypeDef  status = HAL_OK;
9000a18e:	2000      	movs	r0, #0
9000a190:	e7ee      	b.n	9000a170 <HAL_MDMA_ConfigPostRequestMask+0x24>
    return HAL_ERROR;
9000a192:	2001      	movs	r0, #1
9000a194:	4770      	bx	lr
  __HAL_LOCK(hmdma);
9000a196:	2002      	movs	r0, #2
}
9000a198:	4770      	bx	lr
        hmdma->Instance->CTCR |=  MDMA_CTCR_BWM;
9000a19a:	f042 4200 	orr.w	r2, r2, #2147483648	@ 0x80000000
9000a19e:	6122      	str	r2, [r4, #16]
9000a1a0:	e7f5      	b.n	9000a18e <HAL_MDMA_ConfigPostRequestMask+0x42>
9000a1a2:	bf00      	nop

9000a1a4 <HAL_MDMA_Start_IT>:
  if(hmdma == NULL)
9000a1a4:	2800      	cmp	r0, #0
9000a1a6:	d066      	beq.n	9000a276 <HAL_MDMA_Start_IT+0xd2>
{
9000a1a8:	b470      	push	{r4, r5, r6}
  __HAL_LOCK(hmdma);
9000a1aa:	f890 403c 	ldrb.w	r4, [r0, #60]	@ 0x3c
9000a1ae:	2c01      	cmp	r4, #1
9000a1b0:	d009      	beq.n	9000a1c6 <HAL_MDMA_Start_IT+0x22>
9000a1b2:	2401      	movs	r4, #1
9000a1b4:	f880 403c 	strb.w	r4, [r0, #60]	@ 0x3c
  if(HAL_MDMA_STATE_READY == hmdma->State)
9000a1b8:	f890 403d 	ldrb.w	r4, [r0, #61]	@ 0x3d
9000a1bc:	2c01      	cmp	r4, #1
9000a1be:	d005      	beq.n	9000a1cc <HAL_MDMA_Start_IT+0x28>
    __HAL_UNLOCK(hmdma);
9000a1c0:	2300      	movs	r3, #0
9000a1c2:	f880 303c 	strb.w	r3, [r0, #60]	@ 0x3c
  __HAL_LOCK(hmdma);
9000a1c6:	2002      	movs	r0, #2
}
9000a1c8:	bc70      	pop	{r4, r5, r6}
9000a1ca:	4770      	bx	lr
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000a1cc:	2402      	movs	r4, #2
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000a1ce:	9d03      	ldr	r5, [sp, #12]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000a1d0:	261f      	movs	r6, #31
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000a1d2:	f011 4f5f 	tst.w	r1, #3741319168	@ 0xdf000000
    hmdma->State = HAL_MDMA_STATE_BUSY;
9000a1d6:	f880 403d 	strb.w	r4, [r0, #61]	@ 0x3d
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a1da:	f04f 0400 	mov.w	r4, #0
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000a1de:	f105 3cff 	add.w	ip, r5, #4294967295
    hmdma->ErrorCode = HAL_MDMA_ERROR_NONE;
9000a1e2:	6684      	str	r4, [r0, #104]	@ 0x68
    __HAL_MDMA_DISABLE(hmdma);
9000a1e4:	6804      	ldr	r4, [r0, #0]
9000a1e6:	68e5      	ldr	r5, [r4, #12]
9000a1e8:	f025 0501 	bic.w	r5, r5, #1
9000a1ec:	60e5      	str	r5, [r4, #12]
  MODIFY_REG(hmdma->Instance->CBNDTR ,MDMA_CBNDTR_BNDT, (BlockDataLength & MDMA_CBNDTR_BNDT));
9000a1ee:	6965      	ldr	r5, [r4, #20]
9000a1f0:	f363 0510 	bfi	r5, r3, #0, #17
9000a1f4:	6165      	str	r5, [r4, #20]
  MODIFY_REG(hmdma->Instance->CBNDTR , MDMA_CBNDTR_BRC , ((BlockCount - 1U) << MDMA_CBNDTR_BRC_Pos) & MDMA_CBNDTR_BRC);
9000a1f6:	6963      	ldr	r3, [r4, #20]
9000a1f8:	f3c3 0313 	ubfx	r3, r3, #0, #20
9000a1fc:	ea43 530c 	orr.w	r3, r3, ip, lsl #20
9000a200:	6163      	str	r3, [r4, #20]
  __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_CISR_BRTIF | MDMA_CISR_BTIF | MDMA_CISR_TCIF);
9000a202:	6066      	str	r6, [r4, #4]
  hmdma->Instance->CDAR = DstAddress;
9000a204:	61e2      	str	r2, [r4, #28]
  hmdma->Instance->CSAR = SrcAddress;
9000a206:	61a1      	str	r1, [r4, #24]
    hmdma->Instance->CTBR |= MDMA_CTBR_SBUS;
9000a208:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a20a:	bf0c      	ite	eq
9000a20c:	f443 3380 	orreq.w	r3, r3, #65536	@ 0x10000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000a210:	f423 3380 	bicne.w	r3, r3, #65536	@ 0x10000
  if((addressMask == 0x20000000U) || (addressMask == 0x00000000U))
9000a214:	f012 4f5f 	tst.w	r2, #3741319168	@ 0xdf000000
    if(hmdma->XferBlockCpltCallback != NULL)
9000a218:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
    hmdma->Instance->CTBR &= (~MDMA_CTBR_SBUS);
9000a21a:	62a3      	str	r3, [r4, #40]	@ 0x28
    hmdma->Instance->CTBR |= MDMA_CTBR_DBUS;
9000a21c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000a21e:	bf0c      	ite	eq
9000a220:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
    hmdma->Instance->CTBR &= (~MDMA_CTBR_DBUS);
9000a224:	f423 3300 	bicne.w	r3, r3, #131072	@ 0x20000
9000a228:	62a3      	str	r3, [r4, #40]	@ 0x28
  hmdma->Instance->CLAR = (uint32_t)hmdma->FirstLinkedListNodeAddress;
9000a22a:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9000a22c:	6263      	str	r3, [r4, #36]	@ 0x24
    __HAL_MDMA_ENABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC));
9000a22e:	68e3      	ldr	r3, [r4, #12]
9000a230:	f043 0306 	orr.w	r3, r3, #6
9000a234:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBlockCpltCallback != NULL)
9000a236:	b11a      	cbz	r2, 9000a240 <HAL_MDMA_Start_IT+0x9c>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BT);
9000a238:	68e3      	ldr	r3, [r4, #12]
9000a23a:	f043 0310 	orr.w	r3, r3, #16
9000a23e:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000a240:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9000a242:	b11b      	cbz	r3, 9000a24c <HAL_MDMA_Start_IT+0xa8>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BRT);
9000a244:	68e3      	ldr	r3, [r4, #12]
9000a246:	f043 0308 	orr.w	r3, r3, #8
9000a24a:	60e3      	str	r3, [r4, #12]
    if(hmdma->XferBufferCpltCallback != NULL)
9000a24c:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9000a24e:	b11b      	cbz	r3, 9000a258 <HAL_MDMA_Start_IT+0xb4>
      __HAL_MDMA_ENABLE_IT(hmdma, MDMA_IT_BFTC);
9000a250:	68e3      	ldr	r3, [r4, #12]
9000a252:	f043 0320 	orr.w	r3, r3, #32
9000a256:	60e3      	str	r3, [r4, #12]
    __HAL_MDMA_ENABLE(hmdma);
9000a258:	68e3      	ldr	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a25a:	6842      	ldr	r2, [r0, #4]
    __HAL_MDMA_ENABLE(hmdma);
9000a25c:	f043 0301 	orr.w	r3, r3, #1
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a260:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
    __HAL_MDMA_ENABLE(hmdma);
9000a264:	60e3      	str	r3, [r4, #12]
    if(hmdma->Init.Request == MDMA_REQUEST_SW)
9000a266:	d103      	bne.n	9000a270 <HAL_MDMA_Start_IT+0xcc>
      hmdma->Instance->CCR |=  MDMA_CCR_SWRQ;
9000a268:	68e3      	ldr	r3, [r4, #12]
9000a26a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000a26e:	60e3      	str	r3, [r4, #12]
  return HAL_OK;
9000a270:	2000      	movs	r0, #0
}
9000a272:	bc70      	pop	{r4, r5, r6}
9000a274:	4770      	bx	lr
    return HAL_ERROR;
9000a276:	2001      	movs	r0, #1
}
9000a278:	4770      	bx	lr
9000a27a:	bf00      	nop

9000a27c <HAL_MDMA_Abort>:
{
9000a27c:	b538      	push	{r3, r4, r5, lr}
9000a27e:	4604      	mov	r4, r0
  uint32_t tickstart =  HAL_GetTick();
9000a280:	f7fc fdf2 	bl	90006e68 <HAL_GetTick>
  if(hmdma == NULL)
9000a284:	b334      	cbz	r4, 9000a2d4 <HAL_MDMA_Abort+0x58>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000a286:	f894 303d 	ldrb.w	r3, [r4, #61]	@ 0x3d
9000a28a:	2b02      	cmp	r3, #2
9000a28c:	d11d      	bne.n	9000a2ca <HAL_MDMA_Abort+0x4e>
    __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000a28e:	6822      	ldr	r2, [r4, #0]
9000a290:	4605      	mov	r5, r0
9000a292:	68d3      	ldr	r3, [r2, #12]
9000a294:	f023 033e 	bic.w	r3, r3, #62	@ 0x3e
9000a298:	60d3      	str	r3, [r2, #12]
    __HAL_MDMA_DISABLE(hmdma);
9000a29a:	68d3      	ldr	r3, [r2, #12]
9000a29c:	f023 0301 	bic.w	r3, r3, #1
9000a2a0:	60d3      	str	r3, [r2, #12]
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a2a2:	e005      	b.n	9000a2b0 <HAL_MDMA_Abort+0x34>
      if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
9000a2a4:	f7fc fde0 	bl	90006e68 <HAL_GetTick>
9000a2a8:	1b43      	subs	r3, r0, r5
9000a2aa:	2b05      	cmp	r3, #5
9000a2ac:	d814      	bhi.n	9000a2d8 <HAL_MDMA_Abort+0x5c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a2ae:	6822      	ldr	r2, [r4, #0]
9000a2b0:	68d3      	ldr	r3, [r2, #12]
9000a2b2:	f013 0301 	ands.w	r3, r3, #1
9000a2b6:	d1f5      	bne.n	9000a2a4 <HAL_MDMA_Abort+0x28>
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000a2b8:	201f      	movs	r0, #31
    hmdma->State = HAL_MDMA_STATE_READY;
9000a2ba:	2101      	movs	r1, #1
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
9000a2bc:	6050      	str	r0, [r2, #4]
  return HAL_OK;
9000a2be:	4618      	mov	r0, r3
    __HAL_UNLOCK(hmdma);
9000a2c0:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    hmdma->State = HAL_MDMA_STATE_READY;
9000a2c4:	f884 103d 	strb.w	r1, [r4, #61]	@ 0x3d
}
9000a2c8:	bd38      	pop	{r3, r4, r5, pc}
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000a2ca:	2280      	movs	r2, #128	@ 0x80
    __HAL_UNLOCK(hmdma);
9000a2cc:	2300      	movs	r3, #0
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000a2ce:	66a2      	str	r2, [r4, #104]	@ 0x68
    __HAL_UNLOCK(hmdma);
9000a2d0:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    return HAL_ERROR;
9000a2d4:	2001      	movs	r0, #1
}
9000a2d6:	bd38      	pop	{r3, r4, r5, pc}
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000a2d8:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
        __HAL_UNLOCK(hmdma);
9000a2da:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000a2dc:	2203      	movs	r2, #3
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000a2de:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
        __HAL_UNLOCK(hmdma);
9000a2e2:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
9000a2e6:	66a3      	str	r3, [r4, #104]	@ 0x68
        hmdma->State = HAL_MDMA_STATE_ERROR;
9000a2e8:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        return HAL_ERROR;
9000a2ec:	e7f2      	b.n	9000a2d4 <HAL_MDMA_Abort+0x58>
9000a2ee:	bf00      	nop

9000a2f0 <HAL_MDMA_Abort_IT>:
  if(hmdma == NULL)
9000a2f0:	4603      	mov	r3, r0
9000a2f2:	b128      	cbz	r0, 9000a300 <HAL_MDMA_Abort_IT+0x10>
  if(HAL_MDMA_STATE_BUSY != hmdma->State)
9000a2f4:	f890 203d 	ldrb.w	r2, [r0, #61]	@ 0x3d
9000a2f8:	2a02      	cmp	r2, #2
9000a2fa:	d003      	beq.n	9000a304 <HAL_MDMA_Abort_IT+0x14>
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
9000a2fc:	2280      	movs	r2, #128	@ 0x80
9000a2fe:	6682      	str	r2, [r0, #104]	@ 0x68
    return HAL_ERROR;
9000a300:	2001      	movs	r0, #1
9000a302:	4770      	bx	lr
    __HAL_MDMA_DISABLE(hmdma);
9000a304:	6802      	ldr	r2, [r0, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a306:	2104      	movs	r1, #4
  return HAL_OK;
9000a308:	2000      	movs	r0, #0
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a30a:	f883 103d 	strb.w	r1, [r3, #61]	@ 0x3d
    __HAL_MDMA_DISABLE(hmdma);
9000a30e:	68d3      	ldr	r3, [r2, #12]
9000a310:	f023 0301 	bic.w	r3, r3, #1
9000a314:	60d3      	str	r3, [r2, #12]
}
9000a316:	4770      	bx	lr

9000a318 <HAL_MDMA_IRQHandler>:
{
9000a318:	b530      	push	{r4, r5, lr}
  __IO uint32_t count = 0;
9000a31a:	2300      	movs	r3, #0
{
9000a31c:	b083      	sub	sp, #12
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000a31e:	f04f 45a4 	mov.w	r5, #1375731712	@ 0x52000000
{
9000a322:	4604      	mov	r4, r0
  __IO uint32_t count = 0;
9000a324:	9301      	str	r3, [sp, #4]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000a326:	2101      	movs	r1, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000a328:	4b57      	ldr	r3, [pc, #348]	@ (9000a488 <HAL_MDMA_IRQHandler+0x170>)
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000a32a:	6828      	ldr	r0, [r5, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000a32c:	4a57      	ldr	r2, [pc, #348]	@ (9000a48c <HAL_MDMA_IRQHandler+0x174>)
  uint32_t timeout = SystemCoreClock / 9600U;
9000a32e:	681d      	ldr	r5, [r3, #0]
  generalIntFlag =  1UL << ((((uint32_t)hmdma->Instance - (uint32_t)(MDMA_Channel0))/HAL_MDMA_CHANNEL_SIZE) & 0x1FU);
9000a330:	6823      	ldr	r3, [r4, #0]
9000a332:	441a      	add	r2, r3
9000a334:	f3c2 1284 	ubfx	r2, r2, #6, #5
9000a338:	fa01 f202 	lsl.w	r2, r1, r2
  if((MDMA->GISR0 & generalIntFlag) == 0U)
9000a33c:	4202      	tst	r2, r0
9000a33e:	f000 80a0 	beq.w	9000a482 <HAL_MDMA_IRQHandler+0x16a>
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_TE) != 0U))
9000a342:	681a      	ldr	r2, [r3, #0]
9000a344:	07d1      	lsls	r1, r2, #31
9000a346:	d529      	bpl.n	9000a39c <HAL_MDMA_IRQHandler+0x84>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_TE) != 0U)
9000a348:	68da      	ldr	r2, [r3, #12]
9000a34a:	0792      	lsls	r2, r2, #30
9000a34c:	d526      	bpl.n	9000a39c <HAL_MDMA_IRQHandler+0x84>
      __HAL_MDMA_DISABLE_IT(hmdma, MDMA_IT_TE);
9000a34e:	68da      	ldr	r2, [r3, #12]
9000a350:	f022 0202 	bic.w	r2, r2, #2
9000a354:	60da      	str	r2, [r3, #12]
      errorFlag = hmdma->Instance->CESR;
9000a356:	689a      	ldr	r2, [r3, #8]
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000a358:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TED) == 0U)
9000a35a:	0610      	lsls	r0, r2, #24
        hmdma->ErrorCode |= HAL_MDMA_ERROR_READ_XFER;
9000a35c:	bf54      	ite	pl
9000a35e:	f041 0101 	orrpl.w	r1, r1, #1
        hmdma->ErrorCode |= HAL_MDMA_ERROR_WRITE_XFER;
9000a362:	f041 0102 	orrmi.w	r1, r1, #2
9000a366:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TEMD) != 0U)
9000a368:	0591      	lsls	r1, r2, #22
9000a36a:	d503      	bpl.n	9000a374 <HAL_MDMA_IRQHandler+0x5c>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_MASK_DATA;
9000a36c:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000a36e:	f041 0104 	orr.w	r1, r1, #4
9000a372:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_TELD) != 0U)
9000a374:	05d0      	lsls	r0, r2, #23
9000a376:	d503      	bpl.n	9000a380 <HAL_MDMA_IRQHandler+0x68>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_LINKED_LIST;
9000a378:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000a37a:	f041 0108 	orr.w	r1, r1, #8
9000a37e:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_ASE) != 0U)
9000a380:	0551      	lsls	r1, r2, #21
9000a382:	d503      	bpl.n	9000a38c <HAL_MDMA_IRQHandler+0x74>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_ALIGNMENT;
9000a384:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000a386:	f041 0110 	orr.w	r1, r1, #16
9000a38a:	66a1      	str	r1, [r4, #104]	@ 0x68
      if((errorFlag & MDMA_CESR_BSE) != 0U)
9000a38c:	0510      	lsls	r0, r2, #20
9000a38e:	d503      	bpl.n	9000a398 <HAL_MDMA_IRQHandler+0x80>
        hmdma->ErrorCode |= HAL_MDMA_ERROR_BLOCK_SIZE;
9000a390:	6ea2      	ldr	r2, [r4, #104]	@ 0x68
9000a392:	f042 0220 	orr.w	r2, r2, #32
9000a396:	66a2      	str	r2, [r4, #104]	@ 0x68
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_TE);
9000a398:	2201      	movs	r2, #1
9000a39a:	605a      	str	r2, [r3, #4]
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BFTC) != 0U))
9000a39c:	681a      	ldr	r2, [r3, #0]
9000a39e:	06d1      	lsls	r1, r2, #27
9000a3a0:	d509      	bpl.n	9000a3b6 <HAL_MDMA_IRQHandler+0x9e>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BFTC) != 0U)
9000a3a2:	68da      	ldr	r2, [r3, #12]
9000a3a4:	0692      	lsls	r2, r2, #26
9000a3a6:	d506      	bpl.n	9000a3b6 <HAL_MDMA_IRQHandler+0x9e>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000a3a8:	2110      	movs	r1, #16
      if(hmdma->XferBufferCpltCallback != NULL)
9000a3aa:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BFTC);
9000a3ac:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBufferCpltCallback != NULL)
9000a3ae:	b112      	cbz	r2, 9000a3b6 <HAL_MDMA_IRQHandler+0x9e>
        hmdma->XferBufferCpltCallback(hmdma);
9000a3b0:	4620      	mov	r0, r4
9000a3b2:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BT) != 0U))
9000a3b4:	6823      	ldr	r3, [r4, #0]
9000a3b6:	681a      	ldr	r2, [r3, #0]
9000a3b8:	0710      	lsls	r0, r2, #28
9000a3ba:	d509      	bpl.n	9000a3d0 <HAL_MDMA_IRQHandler+0xb8>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BT) != 0U)
9000a3bc:	68da      	ldr	r2, [r3, #12]
9000a3be:	06d1      	lsls	r1, r2, #27
9000a3c0:	d506      	bpl.n	9000a3d0 <HAL_MDMA_IRQHandler+0xb8>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000a3c2:	2108      	movs	r1, #8
      if(hmdma->XferBlockCpltCallback != NULL)
9000a3c4:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BT);
9000a3c6:	6059      	str	r1, [r3, #4]
      if(hmdma->XferBlockCpltCallback != NULL)
9000a3c8:	b112      	cbz	r2, 9000a3d0 <HAL_MDMA_IRQHandler+0xb8>
        hmdma->XferBlockCpltCallback(hmdma);
9000a3ca:	4620      	mov	r0, r4
9000a3cc:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_BRT) != 0U))
9000a3ce:	6823      	ldr	r3, [r4, #0]
9000a3d0:	681a      	ldr	r2, [r3, #0]
9000a3d2:	0752      	lsls	r2, r2, #29
9000a3d4:	d509      	bpl.n	9000a3ea <HAL_MDMA_IRQHandler+0xd2>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_BRT) != 0U)
9000a3d6:	68da      	ldr	r2, [r3, #12]
9000a3d8:	0710      	lsls	r0, r2, #28
9000a3da:	d506      	bpl.n	9000a3ea <HAL_MDMA_IRQHandler+0xd2>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000a3dc:	2104      	movs	r1, #4
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000a3de:	6d22      	ldr	r2, [r4, #80]	@ 0x50
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_BRT);
9000a3e0:	6059      	str	r1, [r3, #4]
      if(hmdma->XferRepeatBlockCpltCallback != NULL)
9000a3e2:	b112      	cbz	r2, 9000a3ea <HAL_MDMA_IRQHandler+0xd2>
        hmdma->XferRepeatBlockCpltCallback(hmdma);
9000a3e4:	4620      	mov	r0, r4
9000a3e6:	4790      	blx	r2
  if((__HAL_MDMA_GET_FLAG(hmdma, MDMA_FLAG_CTC) != 0U))
9000a3e8:	6823      	ldr	r3, [r4, #0]
9000a3ea:	681a      	ldr	r2, [r3, #0]
9000a3ec:	0791      	lsls	r1, r2, #30
9000a3ee:	d516      	bpl.n	9000a41e <HAL_MDMA_IRQHandler+0x106>
    if(__HAL_MDMA_GET_IT_SOURCE(hmdma, MDMA_IT_CTC) != 0U)
9000a3f0:	68da      	ldr	r2, [r3, #12]
9000a3f2:	0752      	lsls	r2, r2, #29
9000a3f4:	d513      	bpl.n	9000a41e <HAL_MDMA_IRQHandler+0x106>
      __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
9000a3f6:	68da      	ldr	r2, [r3, #12]
9000a3f8:	f022 023e 	bic.w	r2, r2, #62	@ 0x3e
9000a3fc:	60da      	str	r2, [r3, #12]
      if(HAL_MDMA_STATE_ABORT == hmdma->State)
9000a3fe:	f894 203d 	ldrb.w	r2, [r4, #61]	@ 0x3d
9000a402:	2a04      	cmp	r2, #4
9000a404:	d034      	beq.n	9000a470 <HAL_MDMA_IRQHandler+0x158>
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000a406:	2202      	movs	r2, #2
      __HAL_UNLOCK(hmdma);
9000a408:	2100      	movs	r1, #0
      __HAL_MDMA_CLEAR_FLAG(hmdma, MDMA_FLAG_CTC);
9000a40a:	605a      	str	r2, [r3, #4]
      hmdma->State = HAL_MDMA_STATE_READY;
9000a40c:	2201      	movs	r2, #1
      if(hmdma->XferCpltCallback != NULL)
9000a40e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
      __HAL_UNLOCK(hmdma);
9000a410:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
      hmdma->State = HAL_MDMA_STATE_READY;
9000a414:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
      if(hmdma->XferCpltCallback != NULL)
9000a418:	b10b      	cbz	r3, 9000a41e <HAL_MDMA_IRQHandler+0x106>
        hmdma->XferCpltCallback(hmdma);
9000a41a:	4620      	mov	r0, r4
9000a41c:	4798      	blx	r3
  if(hmdma->ErrorCode != HAL_MDMA_ERROR_NONE)
9000a41e:	6ea3      	ldr	r3, [r4, #104]	@ 0x68
9000a420:	2b00      	cmp	r3, #0
9000a422:	d02e      	beq.n	9000a482 <HAL_MDMA_IRQHandler+0x16a>
    __HAL_MDMA_DISABLE(hmdma);
9000a424:	6821      	ldr	r1, [r4, #0]
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a426:	2004      	movs	r0, #4
  uint32_t timeout = SystemCoreClock / 9600U;
9000a428:	4b19      	ldr	r3, [pc, #100]	@ (9000a490 <HAL_MDMA_IRQHandler+0x178>)
    hmdma->State = HAL_MDMA_STATE_ABORT;
9000a42a:	f884 003d 	strb.w	r0, [r4, #61]	@ 0x3d
  uint32_t timeout = SystemCoreClock / 9600U;
9000a42e:	fba3 3205 	umull	r3, r2, r3, r5
    __HAL_MDMA_DISABLE(hmdma);
9000a432:	68cb      	ldr	r3, [r1, #12]
9000a434:	f023 0301 	bic.w	r3, r3, #1
  uint32_t timeout = SystemCoreClock / 9600U;
9000a438:	0a92      	lsrs	r2, r2, #10
    __HAL_MDMA_DISABLE(hmdma);
9000a43a:	60cb      	str	r3, [r1, #12]
9000a43c:	e002      	b.n	9000a444 <HAL_MDMA_IRQHandler+0x12c>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U);
9000a43e:	68cb      	ldr	r3, [r1, #12]
9000a440:	07d8      	lsls	r0, r3, #31
9000a442:	d504      	bpl.n	9000a44e <HAL_MDMA_IRQHandler+0x136>
      if (++count > timeout)
9000a444:	9b01      	ldr	r3, [sp, #4]
9000a446:	3301      	adds	r3, #1
9000a448:	4293      	cmp	r3, r2
9000a44a:	9301      	str	r3, [sp, #4]
9000a44c:	d9f7      	bls.n	9000a43e <HAL_MDMA_IRQHandler+0x126>
    __HAL_UNLOCK(hmdma);
9000a44e:	2300      	movs	r3, #0
9000a450:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
    if((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
9000a454:	68cb      	ldr	r3, [r1, #12]
9000a456:	07db      	lsls	r3, r3, #31
      hmdma->State = HAL_MDMA_STATE_ERROR;
9000a458:	bf4c      	ite	mi
9000a45a:	2303      	movmi	r3, #3
      hmdma->State = HAL_MDMA_STATE_READY;
9000a45c:	2301      	movpl	r3, #1
9000a45e:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
    if (hmdma->XferErrorCallback != NULL)
9000a462:	6d63      	ldr	r3, [r4, #84]	@ 0x54
9000a464:	b16b      	cbz	r3, 9000a482 <HAL_MDMA_IRQHandler+0x16a>
      hmdma->XferErrorCallback(hmdma);
9000a466:	4620      	mov	r0, r4
}
9000a468:	b003      	add	sp, #12
9000a46a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
      hmdma->XferErrorCallback(hmdma);
9000a46e:	4718      	bx	r3
        __HAL_UNLOCK(hmdma);
9000a470:	2100      	movs	r1, #0
        hmdma->State = HAL_MDMA_STATE_READY;
9000a472:	2201      	movs	r2, #1
        if(hmdma->XferAbortCallback != NULL)
9000a474:	6da3      	ldr	r3, [r4, #88]	@ 0x58
        __HAL_UNLOCK(hmdma);
9000a476:	f884 103c 	strb.w	r1, [r4, #60]	@ 0x3c
        hmdma->State = HAL_MDMA_STATE_READY;
9000a47a:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
        if(hmdma->XferAbortCallback != NULL)
9000a47e:	2b00      	cmp	r3, #0
9000a480:	d1f1      	bne.n	9000a466 <HAL_MDMA_IRQHandler+0x14e>
}
9000a482:	b003      	add	sp, #12
9000a484:	bd30      	pop	{r4, r5, pc}
9000a486:	bf00      	nop
9000a488:	24000078 	.word	0x24000078
9000a48c:	adffffc0 	.word	0xadffffc0
9000a490:	1b4e81b5 	.word	0x1b4e81b5

9000a494 <HAL_PWREx_ConfigSupply>:
  *         process during startup.
  *         For more details, please refer to the power control chapter in the reference manual
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
9000a494:	b538      	push	{r3, r4, r5, lr}
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000a496:	4c10      	ldr	r4, [pc, #64]	@ (9000a4d8 <HAL_PWREx_ConfigSupply+0x44>)
9000a498:	68e3      	ldr	r3, [r4, #12]
9000a49a:	f013 0f04 	tst.w	r3, #4
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000a49e:	68e3      	ldr	r3, [r4, #12]
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
9000a4a0:	d105      	bne.n	9000a4ae <HAL_PWREx_ConfigSupply+0x1a>
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
9000a4a2:	f003 0307 	and.w	r3, r3, #7
9000a4a6:	1a18      	subs	r0, r3, r0
9000a4a8:	bf18      	it	ne
9000a4aa:	2001      	movne	r0, #1
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
}
9000a4ac:	bd38      	pop	{r3, r4, r5, pc}
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
9000a4ae:	f023 0307 	bic.w	r3, r3, #7
9000a4b2:	4303      	orrs	r3, r0
9000a4b4:	60e3      	str	r3, [r4, #12]
  tickstart = HAL_GetTick ();
9000a4b6:	f7fc fcd7 	bl	90006e68 <HAL_GetTick>
9000a4ba:	4605      	mov	r5, r0
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000a4bc:	e005      	b.n	9000a4ca <HAL_PWREx_ConfigSupply+0x36>
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
9000a4be:	f7fc fcd3 	bl	90006e68 <HAL_GetTick>
9000a4c2:	1b40      	subs	r0, r0, r5
9000a4c4:	f5b0 7f7a 	cmp.w	r0, #1000	@ 0x3e8
9000a4c8:	d804      	bhi.n	9000a4d4 <HAL_PWREx_ConfigSupply+0x40>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
9000a4ca:	6863      	ldr	r3, [r4, #4]
9000a4cc:	049b      	lsls	r3, r3, #18
9000a4ce:	d5f6      	bpl.n	9000a4be <HAL_PWREx_ConfigSupply+0x2a>
      return HAL_OK;
9000a4d0:	2000      	movs	r0, #0
}
9000a4d2:	bd38      	pop	{r3, r4, r5, pc}
      return HAL_ERROR;
9000a4d4:	2001      	movs	r0, #1
}
9000a4d6:	bd38      	pop	{r3, r4, r5, pc}
9000a4d8:	58024800 	.word	0x58024800

9000a4dc <HAL_RCC_GetSysClockFreq.part.0>:
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000a4dc:	4b33      	ldr	r3, [pc, #204]	@ (9000a5ac <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
uint32_t HAL_RCC_GetSysClockFreq(void)
9000a4de:	b430      	push	{r4, r5}
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000a4e0:	6a99      	ldr	r1, [r3, #40]	@ 0x28
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000a4e2:	6a9c      	ldr	r4, [r3, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000a4e4:	6add      	ldr	r5, [r3, #44]	@ 0x2c
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));

      if (pllm != 0U)
9000a4e6:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000a4ea:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000a4ec:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000a4f0:	d036      	beq.n	9000a560 <HAL_RCC_GetSysClockFreq.part.0+0x84>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000a4f2:	f3c2 02cc 	ubfx	r2, r2, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000a4f6:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000a4fa:	f001 0103 	and.w	r1, r1, #3
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a4fe:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000a502:	fb05 f202 	mul.w	r2, r5, r2
        switch (pllsource)
9000a506:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a508:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000a50c:	ee06 2a90 	vmov	s13, r2
9000a510:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
        switch (pllsource)
9000a514:	d002      	beq.n	9000a51c <HAL_RCC_GetSysClockFreq.part.0+0x40>
9000a516:	2902      	cmp	r1, #2
9000a518:	d042      	beq.n	9000a5a0 <HAL_RCC_GetSysClockFreq.part.0+0xc4>
9000a51a:	b319      	cbz	r1, 9000a564 <HAL_RCC_GetSysClockFreq.part.0+0x88>
          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            break;

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a51c:	eddf 7a24 	vldr	s15, [pc, #144]	@ 9000a5b0 <HAL_RCC_GetSysClockFreq.part.0+0xd4>
9000a520:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000a524:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000a526:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000a52a:	ee07 3a90 	vmov	s15, r3
9000a52e:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000a532:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000a536:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000a53a:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000a53e:	ee67 7a86 	vmul.f32	s15, s15, s12
            break;
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000a542:	4b1a      	ldr	r3, [pc, #104]	@ (9000a5ac <HAL_RCC_GetSysClockFreq.part.0+0xd0>)
9000a544:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000a546:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000a54a:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000a54c:	ee07 3a10 	vmov	s14, r3
9000a550:	eef8 6ac7 	vcvt.f32.s32	s13, s14
9000a554:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000a558:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000a55c:	ee17 0a90 	vmov	r0, s15
      sysclockfreq = CSI_VALUE;
      break;
  }

  return sysclockfreq;
}
9000a560:	bc30      	pop	{r4, r5}
9000a562:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000a564:	681a      	ldr	r2, [r3, #0]
9000a566:	0692      	lsls	r2, r2, #26
9000a568:	d51d      	bpl.n	9000a5a6 <HAL_RCC_GetSysClockFreq.part.0+0xca>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a56a:	6819      	ldr	r1, [r3, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a56c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a570:	4a10      	ldr	r2, [pc, #64]	@ (9000a5b4 <HAL_RCC_GetSysClockFreq.part.0+0xd8>)
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a572:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a574:	f3c1 01c1 	ubfx	r1, r1, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a578:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000a57c:	40ca      	lsrs	r2, r1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a57e:	ee07 3a90 	vmov	s15, r3
9000a582:	ee06 2a10 	vmov	s12, r2
9000a586:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000a58a:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000a58e:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000a592:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000a596:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000a59a:	ee67 7a87 	vmul.f32	s15, s15, s14
9000a59e:	e7d0      	b.n	9000a542 <HAL_RCC_GetSysClockFreq.part.0+0x66>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a5a0:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000a5b8 <HAL_RCC_GetSysClockFreq.part.0+0xdc>
9000a5a4:	e7bc      	b.n	9000a520 <HAL_RCC_GetSysClockFreq.part.0+0x44>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000a5a6:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000a5bc <HAL_RCC_GetSysClockFreq.part.0+0xe0>
9000a5aa:	e7b9      	b.n	9000a520 <HAL_RCC_GetSysClockFreq.part.0+0x44>
9000a5ac:	58024400 	.word	0x58024400
9000a5b0:	4a742400 	.word	0x4a742400
9000a5b4:	03d09000 	.word	0x03d09000
9000a5b8:	4bbebc20 	.word	0x4bbebc20
9000a5bc:	4c742400 	.word	0x4c742400

9000a5c0 <HAL_RCC_OscConfig>:
  if (RCC_OscInitStruct == NULL)
9000a5c0:	2800      	cmp	r0, #0
9000a5c2:	f000 82e7 	beq.w	9000ab94 <HAL_RCC_OscConfig+0x5d4>
{
9000a5c6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
9000a5c8:	6803      	ldr	r3, [r0, #0]
9000a5ca:	4604      	mov	r4, r0
9000a5cc:	07d9      	lsls	r1, r3, #31
9000a5ce:	d52e      	bpl.n	9000a62e <HAL_RCC_OscConfig+0x6e>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a5d0:	4997      	ldr	r1, [pc, #604]	@ (9000a830 <HAL_RCC_OscConfig+0x270>)
9000a5d2:	690a      	ldr	r2, [r1, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000a5d4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a5d6:	f002 0238 	and.w	r2, r2, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000a5da:	2a10      	cmp	r2, #16
9000a5dc:	f000 80ee 	beq.w	9000a7bc <HAL_RCC_OscConfig+0x1fc>
9000a5e0:	2a18      	cmp	r2, #24
9000a5e2:	f000 80e6 	beq.w	9000a7b2 <HAL_RCC_OscConfig+0x1f2>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000a5e6:	6863      	ldr	r3, [r4, #4]
9000a5e8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000a5ec:	f000 8111 	beq.w	9000a812 <HAL_RCC_OscConfig+0x252>
9000a5f0:	2b00      	cmp	r3, #0
9000a5f2:	f000 8167 	beq.w	9000a8c4 <HAL_RCC_OscConfig+0x304>
9000a5f6:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
9000a5fa:	4b8d      	ldr	r3, [pc, #564]	@ (9000a830 <HAL_RCC_OscConfig+0x270>)
9000a5fc:	681a      	ldr	r2, [r3, #0]
9000a5fe:	f000 8288 	beq.w	9000ab12 <HAL_RCC_OscConfig+0x552>
9000a602:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000a606:	601a      	str	r2, [r3, #0]
9000a608:	681a      	ldr	r2, [r3, #0]
9000a60a:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
9000a60e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
9000a610:	f7fc fc2a 	bl	90006e68 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000a614:	4e86      	ldr	r6, [pc, #536]	@ (9000a830 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
9000a616:	4605      	mov	r5, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000a618:	e005      	b.n	9000a626 <HAL_RCC_OscConfig+0x66>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000a61a:	f7fc fc25 	bl	90006e68 <HAL_GetTick>
9000a61e:	1b40      	subs	r0, r0, r5
9000a620:	2864      	cmp	r0, #100	@ 0x64
9000a622:	f200 814d 	bhi.w	9000a8c0 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000a626:	6833      	ldr	r3, [r6, #0]
9000a628:	039b      	lsls	r3, r3, #14
9000a62a:	d5f6      	bpl.n	9000a61a <HAL_RCC_OscConfig+0x5a>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
9000a62c:	6823      	ldr	r3, [r4, #0]
9000a62e:	079d      	lsls	r5, r3, #30
9000a630:	d470      	bmi.n	9000a714 <HAL_RCC_OscConfig+0x154>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000a632:	06d9      	lsls	r1, r3, #27
9000a634:	d533      	bpl.n	9000a69e <HAL_RCC_OscConfig+0xde>
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a636:	4a7e      	ldr	r2, [pc, #504]	@ (9000a830 <HAL_RCC_OscConfig+0x270>)
9000a638:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000a63a:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a63c:	f003 0338 	and.w	r3, r3, #56	@ 0x38
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000a640:	2b08      	cmp	r3, #8
9000a642:	f000 80cb 	beq.w	9000a7dc <HAL_RCC_OscConfig+0x21c>
9000a646:	2b18      	cmp	r3, #24
9000a648:	f000 80c3 	beq.w	9000a7d2 <HAL_RCC_OscConfig+0x212>
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000a64c:	69e3      	ldr	r3, [r4, #28]
        __HAL_RCC_CSI_ENABLE();
9000a64e:	4d78      	ldr	r5, [pc, #480]	@ (9000a830 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
9000a650:	2b00      	cmp	r3, #0
9000a652:	f000 816f 	beq.w	9000a934 <HAL_RCC_OscConfig+0x374>
        __HAL_RCC_CSI_ENABLE();
9000a656:	682b      	ldr	r3, [r5, #0]
9000a658:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9000a65c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a65e:	f7fc fc03 	bl	90006e68 <HAL_GetTick>
9000a662:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000a664:	e005      	b.n	9000a672 <HAL_RCC_OscConfig+0xb2>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000a666:	f7fc fbff 	bl	90006e68 <HAL_GetTick>
9000a66a:	1b80      	subs	r0, r0, r6
9000a66c:	2802      	cmp	r0, #2
9000a66e:	f200 8127 	bhi.w	9000a8c0 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000a672:	682b      	ldr	r3, [r5, #0]
9000a674:	05db      	lsls	r3, r3, #23
9000a676:	d5f6      	bpl.n	9000a666 <HAL_RCC_OscConfig+0xa6>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000a678:	f7fc fbfc 	bl	90006e74 <HAL_GetREVID>
9000a67c:	f241 0303 	movw	r3, #4099	@ 0x1003
9000a680:	4298      	cmp	r0, r3
9000a682:	f200 8267 	bhi.w	9000ab54 <HAL_RCC_OscConfig+0x594>
9000a686:	6a22      	ldr	r2, [r4, #32]
9000a688:	686b      	ldr	r3, [r5, #4]
9000a68a:	2a20      	cmp	r2, #32
9000a68c:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000a690:	bf0c      	ite	eq
9000a692:	f043 4380 	orreq.w	r3, r3, #1073741824	@ 0x40000000
9000a696:	ea43 6382 	orrne.w	r3, r3, r2, lsl #26
9000a69a:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000a69c:	6823      	ldr	r3, [r4, #0]
9000a69e:	071d      	lsls	r5, r3, #28
9000a6a0:	d516      	bpl.n	9000a6d0 <HAL_RCC_OscConfig+0x110>
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000a6a2:	6963      	ldr	r3, [r4, #20]
      __HAL_RCC_LSI_ENABLE();
9000a6a4:	4d62      	ldr	r5, [pc, #392]	@ (9000a830 <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
9000a6a6:	2b00      	cmp	r3, #0
9000a6a8:	f000 8122 	beq.w	9000a8f0 <HAL_RCC_OscConfig+0x330>
      __HAL_RCC_LSI_ENABLE();
9000a6ac:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000a6ae:	f043 0301 	orr.w	r3, r3, #1
9000a6b2:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000a6b4:	f7fc fbd8 	bl	90006e68 <HAL_GetTick>
9000a6b8:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000a6ba:	e005      	b.n	9000a6c8 <HAL_RCC_OscConfig+0x108>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000a6bc:	f7fc fbd4 	bl	90006e68 <HAL_GetTick>
9000a6c0:	1b80      	subs	r0, r0, r6
9000a6c2:	2802      	cmp	r0, #2
9000a6c4:	f200 80fc 	bhi.w	9000a8c0 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
9000a6c8:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000a6ca:	0798      	lsls	r0, r3, #30
9000a6cc:	d5f6      	bpl.n	9000a6bc <HAL_RCC_OscConfig+0xfc>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
9000a6ce:	6823      	ldr	r3, [r4, #0]
9000a6d0:	069a      	lsls	r2, r3, #26
9000a6d2:	d516      	bpl.n	9000a702 <HAL_RCC_OscConfig+0x142>
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000a6d4:	69a3      	ldr	r3, [r4, #24]
      __HAL_RCC_HSI48_ENABLE();
9000a6d6:	4d56      	ldr	r5, [pc, #344]	@ (9000a830 <HAL_RCC_OscConfig+0x270>)
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
9000a6d8:	2b00      	cmp	r3, #0
9000a6da:	f000 811a 	beq.w	9000a912 <HAL_RCC_OscConfig+0x352>
      __HAL_RCC_HSI48_ENABLE();
9000a6de:	682b      	ldr	r3, [r5, #0]
9000a6e0:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
9000a6e4:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000a6e6:	f7fc fbbf 	bl	90006e68 <HAL_GetTick>
9000a6ea:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000a6ec:	e005      	b.n	9000a6fa <HAL_RCC_OscConfig+0x13a>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000a6ee:	f7fc fbbb 	bl	90006e68 <HAL_GetTick>
9000a6f2:	1b80      	subs	r0, r0, r6
9000a6f4:	2802      	cmp	r0, #2
9000a6f6:	f200 80e3 	bhi.w	9000a8c0 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
9000a6fa:	682b      	ldr	r3, [r5, #0]
9000a6fc:	049f      	lsls	r7, r3, #18
9000a6fe:	d5f6      	bpl.n	9000a6ee <HAL_RCC_OscConfig+0x12e>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
9000a700:	6823      	ldr	r3, [r4, #0]
9000a702:	0759      	lsls	r1, r3, #29
9000a704:	f100 808b 	bmi.w	9000a81e <HAL_RCC_OscConfig+0x25e>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
9000a708:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000a70a:	2b00      	cmp	r3, #0
9000a70c:	f040 80bf 	bne.w	9000a88e <HAL_RCC_OscConfig+0x2ce>
  return HAL_OK;
9000a710:	2000      	movs	r0, #0
}
9000a712:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
9000a714:	4a46      	ldr	r2, [pc, #280]	@ (9000a830 <HAL_RCC_OscConfig+0x270>)
9000a716:	6913      	ldr	r3, [r2, #16]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
9000a718:	6a92      	ldr	r2, [r2, #40]	@ 0x28
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000a71a:	f013 0338 	ands.w	r3, r3, #56	@ 0x38
9000a71e:	d12d      	bne.n	9000a77c <HAL_RCC_OscConfig+0x1bc>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000a720:	4b43      	ldr	r3, [pc, #268]	@ (9000a830 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000a722:	68e2      	ldr	r2, [r4, #12]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
9000a724:	681b      	ldr	r3, [r3, #0]
9000a726:	0759      	lsls	r1, r3, #29
9000a728:	d501      	bpl.n	9000a72e <HAL_RCC_OscConfig+0x16e>
9000a72a:	2a00      	cmp	r2, #0
9000a72c:	d04f      	beq.n	9000a7ce <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000a72e:	4d40      	ldr	r5, [pc, #256]	@ (9000a830 <HAL_RCC_OscConfig+0x270>)
9000a730:	682b      	ldr	r3, [r5, #0]
9000a732:	f023 0319 	bic.w	r3, r3, #25
9000a736:	4313      	orrs	r3, r2
9000a738:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a73a:	f7fc fb95 	bl	90006e68 <HAL_GetTick>
9000a73e:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000a740:	e005      	b.n	9000a74e <HAL_RCC_OscConfig+0x18e>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000a742:	f7fc fb91 	bl	90006e68 <HAL_GetTick>
9000a746:	1b80      	subs	r0, r0, r6
9000a748:	2802      	cmp	r0, #2
9000a74a:	f200 80b9 	bhi.w	9000a8c0 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000a74e:	682b      	ldr	r3, [r5, #0]
9000a750:	075b      	lsls	r3, r3, #29
9000a752:	d5f6      	bpl.n	9000a742 <HAL_RCC_OscConfig+0x182>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000a754:	f7fc fb8e 	bl	90006e74 <HAL_GetREVID>
9000a758:	f241 0303 	movw	r3, #4099	@ 0x1003
9000a75c:	4298      	cmp	r0, r3
9000a75e:	f200 8110 	bhi.w	9000a982 <HAL_RCC_OscConfig+0x3c2>
9000a762:	6922      	ldr	r2, [r4, #16]
9000a764:	686b      	ldr	r3, [r5, #4]
9000a766:	2a40      	cmp	r2, #64	@ 0x40
9000a768:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000a76c:	bf0c      	ite	eq
9000a76e:	f443 3300 	orreq.w	r3, r3, #131072	@ 0x20000
9000a772:	ea43 3302 	orrne.w	r3, r3, r2, lsl #12
9000a776:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000a778:	6823      	ldr	r3, [r4, #0]
9000a77a:	e75a      	b.n	9000a632 <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000a77c:	2b18      	cmp	r3, #24
9000a77e:	f000 80fc 	beq.w	9000a97a <HAL_RCC_OscConfig+0x3ba>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000a782:	4d2b      	ldr	r5, [pc, #172]	@ (9000a830 <HAL_RCC_OscConfig+0x270>)
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000a784:	68e2      	ldr	r2, [r4, #12]
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000a786:	682b      	ldr	r3, [r5, #0]
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
9000a788:	2a00      	cmp	r2, #0
9000a78a:	f000 80e5 	beq.w	9000a958 <HAL_RCC_OscConfig+0x398>
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
9000a78e:	f023 0319 	bic.w	r3, r3, #25
9000a792:	4313      	orrs	r3, r2
9000a794:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a796:	f7fc fb67 	bl	90006e68 <HAL_GetTick>
9000a79a:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000a79c:	e005      	b.n	9000a7aa <HAL_RCC_OscConfig+0x1ea>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000a79e:	f7fc fb63 	bl	90006e68 <HAL_GetTick>
9000a7a2:	1b80      	subs	r0, r0, r6
9000a7a4:	2802      	cmp	r0, #2
9000a7a6:	f200 808b 	bhi.w	9000a8c0 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000a7aa:	682b      	ldr	r3, [r5, #0]
9000a7ac:	075f      	lsls	r7, r3, #29
9000a7ae:	d5f6      	bpl.n	9000a79e <HAL_RCC_OscConfig+0x1de>
9000a7b0:	e7d0      	b.n	9000a754 <HAL_RCC_OscConfig+0x194>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
9000a7b2:	f001 0103 	and.w	r1, r1, #3
9000a7b6:	2902      	cmp	r1, #2
9000a7b8:	f47f af15 	bne.w	9000a5e6 <HAL_RCC_OscConfig+0x26>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
9000a7bc:	4a1c      	ldr	r2, [pc, #112]	@ (9000a830 <HAL_RCC_OscConfig+0x270>)
9000a7be:	6812      	ldr	r2, [r2, #0]
9000a7c0:	0392      	lsls	r2, r2, #14
9000a7c2:	f57f af34 	bpl.w	9000a62e <HAL_RCC_OscConfig+0x6e>
9000a7c6:	6862      	ldr	r2, [r4, #4]
9000a7c8:	2a00      	cmp	r2, #0
9000a7ca:	f47f af30 	bne.w	9000a62e <HAL_RCC_OscConfig+0x6e>
    return HAL_ERROR;
9000a7ce:	2001      	movs	r0, #1
}
9000a7d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
9000a7d2:	f002 0203 	and.w	r2, r2, #3
9000a7d6:	2a01      	cmp	r2, #1
9000a7d8:	f47f af38 	bne.w	9000a64c <HAL_RCC_OscConfig+0x8c>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
9000a7dc:	4b14      	ldr	r3, [pc, #80]	@ (9000a830 <HAL_RCC_OscConfig+0x270>)
9000a7de:	681b      	ldr	r3, [r3, #0]
9000a7e0:	05da      	lsls	r2, r3, #23
9000a7e2:	d502      	bpl.n	9000a7ea <HAL_RCC_OscConfig+0x22a>
9000a7e4:	69e3      	ldr	r3, [r4, #28]
9000a7e6:	2b80      	cmp	r3, #128	@ 0x80
9000a7e8:	d1f1      	bne.n	9000a7ce <HAL_RCC_OscConfig+0x20e>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000a7ea:	f7fc fb43 	bl	90006e74 <HAL_GetREVID>
9000a7ee:	f241 0303 	movw	r3, #4099	@ 0x1003
9000a7f2:	4298      	cmp	r0, r3
9000a7f4:	f200 80ce 	bhi.w	9000a994 <HAL_RCC_OscConfig+0x3d4>
9000a7f8:	6a22      	ldr	r2, [r4, #32]
9000a7fa:	2a20      	cmp	r2, #32
9000a7fc:	f000 81b9 	beq.w	9000ab72 <HAL_RCC_OscConfig+0x5b2>
9000a800:	490b      	ldr	r1, [pc, #44]	@ (9000a830 <HAL_RCC_OscConfig+0x270>)
9000a802:	684b      	ldr	r3, [r1, #4]
9000a804:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000a808:	ea43 6382 	orr.w	r3, r3, r2, lsl #26
9000a80c:	604b      	str	r3, [r1, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000a80e:	6823      	ldr	r3, [r4, #0]
9000a810:	e745      	b.n	9000a69e <HAL_RCC_OscConfig+0xde>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000a812:	4a07      	ldr	r2, [pc, #28]	@ (9000a830 <HAL_RCC_OscConfig+0x270>)
9000a814:	6813      	ldr	r3, [r2, #0]
9000a816:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000a81a:	6013      	str	r3, [r2, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000a81c:	e6f8      	b.n	9000a610 <HAL_RCC_OscConfig+0x50>
    PWR->CR1 |= PWR_CR1_DBP;
9000a81e:	4d05      	ldr	r5, [pc, #20]	@ (9000a834 <HAL_RCC_OscConfig+0x274>)
9000a820:	682b      	ldr	r3, [r5, #0]
9000a822:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000a826:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
9000a828:	f7fc fb1e 	bl	90006e68 <HAL_GetTick>
9000a82c:	4606      	mov	r6, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000a82e:	e008      	b.n	9000a842 <HAL_RCC_OscConfig+0x282>
9000a830:	58024400 	.word	0x58024400
9000a834:	58024800 	.word	0x58024800
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000a838:	f7fc fb16 	bl	90006e68 <HAL_GetTick>
9000a83c:	1b80      	subs	r0, r0, r6
9000a83e:	2864      	cmp	r0, #100	@ 0x64
9000a840:	d83e      	bhi.n	9000a8c0 <HAL_RCC_OscConfig+0x300>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000a842:	682b      	ldr	r3, [r5, #0]
9000a844:	05da      	lsls	r2, r3, #23
9000a846:	d5f7      	bpl.n	9000a838 <HAL_RCC_OscConfig+0x278>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000a848:	68a3      	ldr	r3, [r4, #8]
9000a84a:	2b01      	cmp	r3, #1
9000a84c:	f000 818b 	beq.w	9000ab66 <HAL_RCC_OscConfig+0x5a6>
9000a850:	2b00      	cmp	r3, #0
9000a852:	f000 8166 	beq.w	9000ab22 <HAL_RCC_OscConfig+0x562>
9000a856:	2b05      	cmp	r3, #5
9000a858:	4b85      	ldr	r3, [pc, #532]	@ (9000aa70 <HAL_RCC_OscConfig+0x4b0>)
9000a85a:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000a85c:	f000 8192 	beq.w	9000ab84 <HAL_RCC_OscConfig+0x5c4>
9000a860:	f022 0201 	bic.w	r2, r2, #1
9000a864:	671a      	str	r2, [r3, #112]	@ 0x70
9000a866:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000a868:	f022 0204 	bic.w	r2, r2, #4
9000a86c:	671a      	str	r2, [r3, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000a86e:	f7fc fafb 	bl	90006e68 <HAL_GetTick>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000a872:	4e7f      	ldr	r6, [pc, #508]	@ (9000aa70 <HAL_RCC_OscConfig+0x4b0>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000a874:	f241 3788 	movw	r7, #5000	@ 0x1388
      tickstart = HAL_GetTick();
9000a878:	4605      	mov	r5, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000a87a:	e004      	b.n	9000a886 <HAL_RCC_OscConfig+0x2c6>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000a87c:	f7fc faf4 	bl	90006e68 <HAL_GetTick>
9000a880:	1b40      	subs	r0, r0, r5
9000a882:	42b8      	cmp	r0, r7
9000a884:	d81c      	bhi.n	9000a8c0 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000a886:	6f33      	ldr	r3, [r6, #112]	@ 0x70
9000a888:	079b      	lsls	r3, r3, #30
9000a88a:	d5f7      	bpl.n	9000a87c <HAL_RCC_OscConfig+0x2bc>
9000a88c:	e73c      	b.n	9000a708 <HAL_RCC_OscConfig+0x148>
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
9000a88e:	4d78      	ldr	r5, [pc, #480]	@ (9000aa70 <HAL_RCC_OscConfig+0x4b0>)
9000a890:	692a      	ldr	r2, [r5, #16]
9000a892:	f002 0238 	and.w	r2, r2, #56	@ 0x38
9000a896:	2a18      	cmp	r2, #24
9000a898:	f000 80ee 	beq.w	9000aa78 <HAL_RCC_OscConfig+0x4b8>
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000a89c:	2b02      	cmp	r3, #2
        __HAL_RCC_PLL_DISABLE();
9000a89e:	682b      	ldr	r3, [r5, #0]
9000a8a0:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
9000a8a4:	602b      	str	r3, [r5, #0]
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
9000a8a6:	d07f      	beq.n	9000a9a8 <HAL_RCC_OscConfig+0x3e8>
        tickstart = HAL_GetTick();
9000a8a8:	f7fc fade 	bl	90006e68 <HAL_GetTick>
9000a8ac:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000a8ae:	682b      	ldr	r3, [r5, #0]
9000a8b0:	019b      	lsls	r3, r3, #6
9000a8b2:	f57f af2d 	bpl.w	9000a710 <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000a8b6:	f7fc fad7 	bl	90006e68 <HAL_GetTick>
9000a8ba:	1b00      	subs	r0, r0, r4
9000a8bc:	2802      	cmp	r0, #2
9000a8be:	d9f6      	bls.n	9000a8ae <HAL_RCC_OscConfig+0x2ee>
            return HAL_TIMEOUT;
9000a8c0:	2003      	movs	r0, #3
}
9000a8c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000a8c4:	4d6a      	ldr	r5, [pc, #424]	@ (9000aa70 <HAL_RCC_OscConfig+0x4b0>)
9000a8c6:	682b      	ldr	r3, [r5, #0]
9000a8c8:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
9000a8cc:	602b      	str	r3, [r5, #0]
9000a8ce:	682b      	ldr	r3, [r5, #0]
9000a8d0:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
9000a8d4:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a8d6:	f7fc fac7 	bl	90006e68 <HAL_GetTick>
9000a8da:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000a8dc:	e004      	b.n	9000a8e8 <HAL_RCC_OscConfig+0x328>
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
9000a8de:	f7fc fac3 	bl	90006e68 <HAL_GetTick>
9000a8e2:	1b80      	subs	r0, r0, r6
9000a8e4:	2864      	cmp	r0, #100	@ 0x64
9000a8e6:	d8eb      	bhi.n	9000a8c0 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
9000a8e8:	682b      	ldr	r3, [r5, #0]
9000a8ea:	039f      	lsls	r7, r3, #14
9000a8ec:	d4f7      	bmi.n	9000a8de <HAL_RCC_OscConfig+0x31e>
9000a8ee:	e69d      	b.n	9000a62c <HAL_RCC_OscConfig+0x6c>
      __HAL_RCC_LSI_DISABLE();
9000a8f0:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000a8f2:	f023 0301 	bic.w	r3, r3, #1
9000a8f6:	676b      	str	r3, [r5, #116]	@ 0x74
      tickstart = HAL_GetTick();
9000a8f8:	f7fc fab6 	bl	90006e68 <HAL_GetTick>
9000a8fc:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000a8fe:	e004      	b.n	9000a90a <HAL_RCC_OscConfig+0x34a>
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
9000a900:	f7fc fab2 	bl	90006e68 <HAL_GetTick>
9000a904:	1b80      	subs	r0, r0, r6
9000a906:	2802      	cmp	r0, #2
9000a908:	d8da      	bhi.n	9000a8c0 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
9000a90a:	6f6b      	ldr	r3, [r5, #116]	@ 0x74
9000a90c:	0799      	lsls	r1, r3, #30
9000a90e:	d4f7      	bmi.n	9000a900 <HAL_RCC_OscConfig+0x340>
9000a910:	e6dd      	b.n	9000a6ce <HAL_RCC_OscConfig+0x10e>
      __HAL_RCC_HSI48_DISABLE();
9000a912:	682b      	ldr	r3, [r5, #0]
9000a914:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9000a918:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
9000a91a:	f7fc faa5 	bl	90006e68 <HAL_GetTick>
9000a91e:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000a920:	e004      	b.n	9000a92c <HAL_RCC_OscConfig+0x36c>
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
9000a922:	f7fc faa1 	bl	90006e68 <HAL_GetTick>
9000a926:	1b80      	subs	r0, r0, r6
9000a928:	2802      	cmp	r0, #2
9000a92a:	d8c9      	bhi.n	9000a8c0 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
9000a92c:	682b      	ldr	r3, [r5, #0]
9000a92e:	0498      	lsls	r0, r3, #18
9000a930:	d4f7      	bmi.n	9000a922 <HAL_RCC_OscConfig+0x362>
9000a932:	e6e5      	b.n	9000a700 <HAL_RCC_OscConfig+0x140>
        __HAL_RCC_CSI_DISABLE();
9000a934:	682b      	ldr	r3, [r5, #0]
9000a936:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
9000a93a:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a93c:	f7fc fa94 	bl	90006e68 <HAL_GetTick>
9000a940:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000a942:	e004      	b.n	9000a94e <HAL_RCC_OscConfig+0x38e>
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
9000a944:	f7fc fa90 	bl	90006e68 <HAL_GetTick>
9000a948:	1b80      	subs	r0, r0, r6
9000a94a:	2802      	cmp	r0, #2
9000a94c:	d8b8      	bhi.n	9000a8c0 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
9000a94e:	682b      	ldr	r3, [r5, #0]
9000a950:	05df      	lsls	r7, r3, #23
9000a952:	d4f7      	bmi.n	9000a944 <HAL_RCC_OscConfig+0x384>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000a954:	6823      	ldr	r3, [r4, #0]
9000a956:	e6a2      	b.n	9000a69e <HAL_RCC_OscConfig+0xde>
        __HAL_RCC_HSI_DISABLE();
9000a958:	f023 0301 	bic.w	r3, r3, #1
9000a95c:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000a95e:	f7fc fa83 	bl	90006e68 <HAL_GetTick>
9000a962:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000a964:	e004      	b.n	9000a970 <HAL_RCC_OscConfig+0x3b0>
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
9000a966:	f7fc fa7f 	bl	90006e68 <HAL_GetTick>
9000a96a:	1b80      	subs	r0, r0, r6
9000a96c:	2802      	cmp	r0, #2
9000a96e:	d8a7      	bhi.n	9000a8c0 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
9000a970:	682b      	ldr	r3, [r5, #0]
9000a972:	0758      	lsls	r0, r3, #29
9000a974:	d4f7      	bmi.n	9000a966 <HAL_RCC_OscConfig+0x3a6>
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000a976:	6823      	ldr	r3, [r4, #0]
9000a978:	e65b      	b.n	9000a632 <HAL_RCC_OscConfig+0x72>
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
9000a97a:	0790      	lsls	r0, r2, #30
9000a97c:	f47f af01 	bne.w	9000a782 <HAL_RCC_OscConfig+0x1c2>
9000a980:	e6ce      	b.n	9000a720 <HAL_RCC_OscConfig+0x160>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
9000a982:	686b      	ldr	r3, [r5, #4]
9000a984:	6922      	ldr	r2, [r4, #16]
9000a986:	f023 43fe 	bic.w	r3, r3, #2130706432	@ 0x7f000000
9000a98a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000a98e:	606b      	str	r3, [r5, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
9000a990:	6823      	ldr	r3, [r4, #0]
9000a992:	e64e      	b.n	9000a632 <HAL_RCC_OscConfig+0x72>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000a994:	4a36      	ldr	r2, [pc, #216]	@ (9000aa70 <HAL_RCC_OscConfig+0x4b0>)
9000a996:	6a21      	ldr	r1, [r4, #32]
9000a998:	68d3      	ldr	r3, [r2, #12]
9000a99a:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000a99e:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
9000a9a2:	60d3      	str	r3, [r2, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000a9a4:	6823      	ldr	r3, [r4, #0]
9000a9a6:	e67a      	b.n	9000a69e <HAL_RCC_OscConfig+0xde>
        tickstart = HAL_GetTick();
9000a9a8:	f7fc fa5e 	bl	90006e68 <HAL_GetTick>
9000a9ac:	4606      	mov	r6, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000a9ae:	e004      	b.n	9000a9ba <HAL_RCC_OscConfig+0x3fa>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000a9b0:	f7fc fa5a 	bl	90006e68 <HAL_GetTick>
9000a9b4:	1b80      	subs	r0, r0, r6
9000a9b6:	2802      	cmp	r0, #2
9000a9b8:	d882      	bhi.n	9000a8c0 <HAL_RCC_OscConfig+0x300>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
9000a9ba:	682b      	ldr	r3, [r5, #0]
9000a9bc:	0199      	lsls	r1, r3, #6
9000a9be:	d4f7      	bmi.n	9000a9b0 <HAL_RCC_OscConfig+0x3f0>
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
9000a9c0:	6aa9      	ldr	r1, [r5, #40]	@ 0x28
9000a9c2:	4b2c      	ldr	r3, [pc, #176]	@ (9000aa74 <HAL_RCC_OscConfig+0x4b4>)
9000a9c4:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
9000a9c6:	400b      	ands	r3, r1
9000a9c8:	4313      	orrs	r3, r2
9000a9ca:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000a9cc:	ea43 1302 	orr.w	r3, r3, r2, lsl #4
9000a9d0:	62ab      	str	r3, [r5, #40]	@ 0x28
9000a9d2:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9000a9d4:	e9d4 320d 	ldrd	r3, r2, [r4, #52]	@ 0x34
9000a9d8:	3901      	subs	r1, #1
9000a9da:	3b01      	subs	r3, #1
9000a9dc:	3a01      	subs	r2, #1
9000a9de:	f3c1 0108 	ubfx	r1, r1, #0, #9
9000a9e2:	025b      	lsls	r3, r3, #9
9000a9e4:	0412      	lsls	r2, r2, #16
9000a9e6:	b29b      	uxth	r3, r3
9000a9e8:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000a9ec:	4313      	orrs	r3, r2
9000a9ee:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000a9f0:	3a01      	subs	r2, #1
9000a9f2:	430b      	orrs	r3, r1
9000a9f4:	0612      	lsls	r2, r2, #24
9000a9f6:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000a9fa:	4313      	orrs	r3, r2
9000a9fc:	632b      	str	r3, [r5, #48]	@ 0x30
        __HAL_RCC_PLLFRACN_DISABLE();
9000a9fe:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aa00:	f023 0301 	bic.w	r3, r3, #1
9000aa04:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000aa06:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
9000aa08:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
9000aa0a:	f36f 03cf 	bfc	r3, #3, #13
9000aa0e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000aa12:	636b      	str	r3, [r5, #52]	@ 0x34
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
9000aa14:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aa16:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000aa18:	f023 030c 	bic.w	r3, r3, #12
9000aa1c:	4313      	orrs	r3, r2
9000aa1e:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
9000aa20:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aa22:	6c62      	ldr	r2, [r4, #68]	@ 0x44
9000aa24:	f023 0302 	bic.w	r3, r3, #2
9000aa28:	4313      	orrs	r3, r2
9000aa2a:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
9000aa2c:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aa2e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
9000aa32:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000aa34:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aa36:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
9000aa3a:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
9000aa3c:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aa3e:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
9000aa42:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLLFRACN_ENABLE();
9000aa44:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000aa46:	f043 0301 	orr.w	r3, r3, #1
9000aa4a:	62eb      	str	r3, [r5, #44]	@ 0x2c
        __HAL_RCC_PLL_ENABLE();
9000aa4c:	682b      	ldr	r3, [r5, #0]
9000aa4e:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
9000aa52:	602b      	str	r3, [r5, #0]
        tickstart = HAL_GetTick();
9000aa54:	f7fc fa08 	bl	90006e68 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000aa58:	4d05      	ldr	r5, [pc, #20]	@ (9000aa70 <HAL_RCC_OscConfig+0x4b0>)
        tickstart = HAL_GetTick();
9000aa5a:	4604      	mov	r4, r0
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000aa5c:	682b      	ldr	r3, [r5, #0]
9000aa5e:	019a      	lsls	r2, r3, #6
9000aa60:	f53f ae56 	bmi.w	9000a710 <HAL_RCC_OscConfig+0x150>
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
9000aa64:	f7fc fa00 	bl	90006e68 <HAL_GetTick>
9000aa68:	1b00      	subs	r0, r0, r4
9000aa6a:	2802      	cmp	r0, #2
9000aa6c:	d9f6      	bls.n	9000aa5c <HAL_RCC_OscConfig+0x49c>
9000aa6e:	e727      	b.n	9000a8c0 <HAL_RCC_OscConfig+0x300>
9000aa70:	58024400 	.word	0x58024400
9000aa74:	fffffc0c 	.word	0xfffffc0c
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000aa78:	2b01      	cmp	r3, #1
      temp1_pllckcfg = RCC->PLLCKSELR;
9000aa7a:	6aaa      	ldr	r2, [r5, #40]	@ 0x28
      temp2_pllckcfg = RCC->PLL1DIVR;
9000aa7c:	6b28      	ldr	r0, [r5, #48]	@ 0x30
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000aa7e:	f43f aea6 	beq.w	9000a7ce <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000aa82:	f002 0303 	and.w	r3, r2, #3
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
9000aa86:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
9000aa88:	428b      	cmp	r3, r1
9000aa8a:	f47f aea0 	bne.w	9000a7ce <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000aa8e:	f3c2 1205 	ubfx	r2, r2, #4, #6
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
9000aa92:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000aa94:	429a      	cmp	r2, r3
9000aa96:	f47f ae9a 	bne.w	9000a7ce <HAL_RCC_OscConfig+0x20e>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000aa9a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000aa9c:	f3c0 0208 	ubfx	r2, r0, #0, #9
9000aaa0:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
9000aaa2:	429a      	cmp	r2, r3
9000aaa4:	f47f ae93 	bne.w	9000a7ce <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000aaa8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9000aaaa:	f3c0 2246 	ubfx	r2, r0, #9, #7
9000aaae:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
9000aab0:	429a      	cmp	r2, r3
9000aab2:	f47f ae8c 	bne.w	9000a7ce <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000aab6:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000aab8:	f3c0 4206 	ubfx	r2, r0, #16, #7
9000aabc:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
9000aabe:	429a      	cmp	r2, r3
9000aac0:	f47f ae85 	bne.w	9000a7ce <HAL_RCC_OscConfig+0x20e>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
9000aac4:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000aac6:	f3c0 6006 	ubfx	r0, r0, #24, #7
9000aaca:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
9000aacc:	4298      	cmp	r0, r3
9000aace:	f47f ae7e 	bne.w	9000a7ce <HAL_RCC_OscConfig+0x20e>
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000aad2:	6b6b      	ldr	r3, [r5, #52]	@ 0x34
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000aad4:	6ca2      	ldr	r2, [r4, #72]	@ 0x48
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
9000aad6:	f3c3 03cc 	ubfx	r3, r3, #3, #13
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
9000aada:	429a      	cmp	r2, r3
9000aadc:	f43f ae18 	beq.w	9000a710 <HAL_RCC_OscConfig+0x150>
          __HAL_RCC_PLLFRACN_DISABLE();
9000aae0:	4a2d      	ldr	r2, [pc, #180]	@ (9000ab98 <HAL_RCC_OscConfig+0x5d8>)
9000aae2:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000aae4:	f023 0301 	bic.w	r3, r3, #1
9000aae8:	62d3      	str	r3, [r2, #44]	@ 0x2c
          tickstart = HAL_GetTick();
9000aaea:	f7fc f9bd 	bl	90006e68 <HAL_GetTick>
9000aaee:	4605      	mov	r5, r0
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
9000aaf0:	f7fc f9ba 	bl	90006e68 <HAL_GetTick>
9000aaf4:	42a8      	cmp	r0, r5
9000aaf6:	d0fb      	beq.n	9000aaf0 <HAL_RCC_OscConfig+0x530>
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
9000aaf8:	4a27      	ldr	r2, [pc, #156]	@ (9000ab98 <HAL_RCC_OscConfig+0x5d8>)
9000aafa:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000aafc:	6b53      	ldr	r3, [r2, #52]	@ 0x34
9000aafe:	f36f 03cf 	bfc	r3, #3, #13
9000ab02:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
9000ab06:	6353      	str	r3, [r2, #52]	@ 0x34
          __HAL_RCC_PLLFRACN_ENABLE();
9000ab08:	6ad3      	ldr	r3, [r2, #44]	@ 0x2c
9000ab0a:	f043 0301 	orr.w	r3, r3, #1
9000ab0e:	62d3      	str	r3, [r2, #44]	@ 0x2c
9000ab10:	e5fe      	b.n	9000a710 <HAL_RCC_OscConfig+0x150>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
9000ab12:	f442 2280 	orr.w	r2, r2, #262144	@ 0x40000
9000ab16:	601a      	str	r2, [r3, #0]
9000ab18:	681a      	ldr	r2, [r3, #0]
9000ab1a:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
9000ab1e:	601a      	str	r2, [r3, #0]
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
9000ab20:	e576      	b.n	9000a610 <HAL_RCC_OscConfig+0x50>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000ab22:	4d1d      	ldr	r5, [pc, #116]	@ (9000ab98 <HAL_RCC_OscConfig+0x5d8>)
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000ab24:	f241 3788 	movw	r7, #5000	@ 0x1388
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000ab28:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000ab2a:	f023 0301 	bic.w	r3, r3, #1
9000ab2e:	672b      	str	r3, [r5, #112]	@ 0x70
9000ab30:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000ab32:	f023 0304 	bic.w	r3, r3, #4
9000ab36:	672b      	str	r3, [r5, #112]	@ 0x70
      tickstart = HAL_GetTick();
9000ab38:	f7fc f996 	bl	90006e68 <HAL_GetTick>
9000ab3c:	4606      	mov	r6, r0
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000ab3e:	e005      	b.n	9000ab4c <HAL_RCC_OscConfig+0x58c>
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000ab40:	f7fc f992 	bl	90006e68 <HAL_GetTick>
9000ab44:	1b80      	subs	r0, r0, r6
9000ab46:	42b8      	cmp	r0, r7
9000ab48:	f63f aeba 	bhi.w	9000a8c0 <HAL_RCC_OscConfig+0x300>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
9000ab4c:	6f2b      	ldr	r3, [r5, #112]	@ 0x70
9000ab4e:	0798      	lsls	r0, r3, #30
9000ab50:	d4f6      	bmi.n	9000ab40 <HAL_RCC_OscConfig+0x580>
9000ab52:	e5d9      	b.n	9000a708 <HAL_RCC_OscConfig+0x148>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000ab54:	68eb      	ldr	r3, [r5, #12]
9000ab56:	6a22      	ldr	r2, [r4, #32]
9000ab58:	f023 537c 	bic.w	r3, r3, #1056964608	@ 0x3f000000
9000ab5c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
9000ab60:	60eb      	str	r3, [r5, #12]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000ab62:	6823      	ldr	r3, [r4, #0]
9000ab64:	e59b      	b.n	9000a69e <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000ab66:	4a0c      	ldr	r2, [pc, #48]	@ (9000ab98 <HAL_RCC_OscConfig+0x5d8>)
9000ab68:	6f13      	ldr	r3, [r2, #112]	@ 0x70
9000ab6a:	f043 0301 	orr.w	r3, r3, #1
9000ab6e:	6713      	str	r3, [r2, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000ab70:	e67d      	b.n	9000a86e <HAL_RCC_OscConfig+0x2ae>
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
9000ab72:	4a09      	ldr	r2, [pc, #36]	@ (9000ab98 <HAL_RCC_OscConfig+0x5d8>)
9000ab74:	6853      	ldr	r3, [r2, #4]
9000ab76:	f023 43f8 	bic.w	r3, r3, #2080374784	@ 0x7c000000
9000ab7a:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
9000ab7e:	6053      	str	r3, [r2, #4]
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
9000ab80:	6823      	ldr	r3, [r4, #0]
9000ab82:	e58c      	b.n	9000a69e <HAL_RCC_OscConfig+0xde>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
9000ab84:	f042 0204 	orr.w	r2, r2, #4
9000ab88:	671a      	str	r2, [r3, #112]	@ 0x70
9000ab8a:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
9000ab8c:	f042 0201 	orr.w	r2, r2, #1
9000ab90:	671a      	str	r2, [r3, #112]	@ 0x70
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
9000ab92:	e66c      	b.n	9000a86e <HAL_RCC_OscConfig+0x2ae>
    return HAL_ERROR;
9000ab94:	2001      	movs	r0, #1
}
9000ab96:	4770      	bx	lr
9000ab98:	58024400 	.word	0x58024400

9000ab9c <HAL_RCC_GetSysClockFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000ab9c:	4a3f      	ldr	r2, [pc, #252]	@ (9000ac9c <HAL_RCC_GetSysClockFreq+0x100>)
9000ab9e:	6913      	ldr	r3, [r2, #16]
9000aba0:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000aba4:	2b10      	cmp	r3, #16
9000aba6:	d04f      	beq.n	9000ac48 <HAL_RCC_GetSysClockFreq+0xac>
9000aba8:	2b18      	cmp	r3, #24
9000abaa:	d00a      	beq.n	9000abc2 <HAL_RCC_GetSysClockFreq+0x26>
9000abac:	2b00      	cmp	r3, #0
9000abae:	d14d      	bne.n	9000ac4c <HAL_RCC_GetSysClockFreq+0xb0>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000abb0:	6813      	ldr	r3, [r2, #0]
9000abb2:	0699      	lsls	r1, r3, #26
9000abb4:	d54c      	bpl.n	9000ac50 <HAL_RCC_GetSysClockFreq+0xb4>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000abb6:	6813      	ldr	r3, [r2, #0]
9000abb8:	4839      	ldr	r0, [pc, #228]	@ (9000aca0 <HAL_RCC_GetSysClockFreq+0x104>)
9000abba:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000abbe:	40d8      	lsrs	r0, r3
9000abc0:	4770      	bx	lr
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000abc2:	6a91      	ldr	r1, [r2, #40]	@ 0x28
{
9000abc4:	b430      	push	{r4, r5}
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000abc6:	6a94      	ldr	r4, [r2, #40]	@ 0x28
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000abc8:	6ad5      	ldr	r5, [r2, #44]	@ 0x2c
      if (pllm != 0U)
9000abca:	f414 7f7c 	tst.w	r4, #1008	@ 0x3f0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000abce:	6b53      	ldr	r3, [r2, #52]	@ 0x34
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
9000abd0:	f3c4 1005 	ubfx	r0, r4, #4, #6
      if (pllm != 0U)
9000abd4:	d036      	beq.n	9000ac44 <HAL_RCC_GetSysClockFreq+0xa8>
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000abd6:	f3c3 03cc 	ubfx	r3, r3, #3, #13
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
9000abda:	f005 0501 	and.w	r5, r5, #1
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000abde:	f001 0103 	and.w	r1, r1, #3
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000abe2:	ee07 0a90 	vmov	s15, r0
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
9000abe6:	fb05 f303 	mul.w	r3, r5, r3
        switch (pllsource)
9000abea:	2901      	cmp	r1, #1
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000abec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000abf0:	ee06 3a90 	vmov	s13, r3
9000abf4:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
        switch (pllsource)
9000abf8:	d002      	beq.n	9000ac00 <HAL_RCC_GetSysClockFreq+0x64>
9000abfa:	2902      	cmp	r1, #2
9000abfc:	d048      	beq.n	9000ac90 <HAL_RCC_GetSysClockFreq+0xf4>
9000abfe:	b349      	cbz	r1, 9000ac54 <HAL_RCC_GetSysClockFreq+0xb8>
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ac00:	ed9f 7a28 	vldr	s14, [pc, #160]	@ 9000aca4 <HAL_RCC_GetSysClockFreq+0x108>
9000ac04:	ee87 6a27 	vdiv.f32	s12, s14, s15
9000ac08:	6b13      	ldr	r3, [r2, #48]	@ 0x30
9000ac0a:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000ac0e:	ee07 3a10 	vmov	s14, r3
9000ac12:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000ac16:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000ac1a:	ee37 7a26 	vadd.f32	s14, s14, s13
9000ac1e:	ee37 7a25 	vadd.f32	s14, s14, s11
9000ac22:	ee27 7a06 	vmul.f32	s14, s14, s12
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
9000ac26:	4b1d      	ldr	r3, [pc, #116]	@ (9000ac9c <HAL_RCC_GetSysClockFreq+0x100>)
9000ac28:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9000ac2a:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000ac2e:	3301      	adds	r3, #1
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
9000ac30:	ee07 3a90 	vmov	s15, r3
9000ac34:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9000ac38:	eec7 7a26 	vdiv.f32	s15, s14, s13
9000ac3c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
9000ac40:	ee17 0a90 	vmov	r0, s15
}
9000ac44:	bc30      	pop	{r4, r5}
9000ac46:	4770      	bx	lr
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000ac48:	4817      	ldr	r0, [pc, #92]	@ (9000aca8 <HAL_RCC_GetSysClockFreq+0x10c>)
9000ac4a:	4770      	bx	lr
      sysclockfreq = CSI_VALUE;
9000ac4c:	4817      	ldr	r0, [pc, #92]	@ (9000acac <HAL_RCC_GetSysClockFreq+0x110>)
9000ac4e:	4770      	bx	lr
        sysclockfreq = (uint32_t) HSI_VALUE;
9000ac50:	4813      	ldr	r0, [pc, #76]	@ (9000aca0 <HAL_RCC_GetSysClockFreq+0x104>)
}
9000ac52:	4770      	bx	lr
            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000ac54:	6813      	ldr	r3, [r2, #0]
9000ac56:	069b      	lsls	r3, r3, #26
9000ac58:	d51d      	bpl.n	9000ac96 <HAL_RCC_GetSysClockFreq+0xfa>
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ac5a:	6810      	ldr	r0, [r2, #0]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ac5c:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000ac60:	6b13      	ldr	r3, [r2, #48]	@ 0x30
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ac62:	490f      	ldr	r1, [pc, #60]	@ (9000aca0 <HAL_RCC_GetSysClockFreq+0x104>)
9000ac64:	f3c0 02c1 	ubfx	r2, r0, #3, #2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ac68:	f3c3 0308 	ubfx	r3, r3, #0, #9
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000ac6c:	40d1      	lsrs	r1, r2
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ac6e:	ee07 3a10 	vmov	s14, r3
9000ac72:	ee06 1a10 	vmov	s12, r1
9000ac76:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000ac7a:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000ac7e:	ee77 6a26 	vadd.f32	s13, s14, s13
9000ac82:	ee86 7a27 	vdiv.f32	s14, s12, s15
9000ac86:	ee76 7aa5 	vadd.f32	s15, s13, s11
9000ac8a:	ee27 7a27 	vmul.f32	s14, s14, s15
9000ac8e:	e7ca      	b.n	9000ac26 <HAL_RCC_GetSysClockFreq+0x8a>
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ac90:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 9000acb0 <HAL_RCC_GetSysClockFreq+0x114>
9000ac94:	e7b6      	b.n	9000ac04 <HAL_RCC_GetSysClockFreq+0x68>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
9000ac96:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 9000acb4 <HAL_RCC_GetSysClockFreq+0x118>
9000ac9a:	e7b3      	b.n	9000ac04 <HAL_RCC_GetSysClockFreq+0x68>
9000ac9c:	58024400 	.word	0x58024400
9000aca0:	03d09000 	.word	0x03d09000
9000aca4:	4a742400 	.word	0x4a742400
9000aca8:	017d7840 	.word	0x017d7840
9000acac:	003d0900 	.word	0x003d0900
9000acb0:	4bbebc20 	.word	0x4bbebc20
9000acb4:	4c742400 	.word	0x4c742400

9000acb8 <HAL_RCC_ClockConfig>:
  if (RCC_ClkInitStruct == NULL)
9000acb8:	2800      	cmp	r0, #0
9000acba:	f000 810e 	beq.w	9000aeda <HAL_RCC_ClockConfig+0x222>
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000acbe:	4a8d      	ldr	r2, [pc, #564]	@ (9000aef4 <HAL_RCC_ClockConfig+0x23c>)
9000acc0:	6813      	ldr	r3, [r2, #0]
9000acc2:	f003 030f 	and.w	r3, r3, #15
9000acc6:	428b      	cmp	r3, r1
{
9000acc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000accc:	4604      	mov	r4, r0
9000acce:	460d      	mov	r5, r1
  if (FLatency > __HAL_FLASH_GET_LATENCY())
9000acd0:	d20c      	bcs.n	9000acec <HAL_RCC_ClockConfig+0x34>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000acd2:	6813      	ldr	r3, [r2, #0]
9000acd4:	f023 030f 	bic.w	r3, r3, #15
9000acd8:	430b      	orrs	r3, r1
9000acda:	6013      	str	r3, [r2, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000acdc:	6813      	ldr	r3, [r2, #0]
9000acde:	f003 030f 	and.w	r3, r3, #15
9000ace2:	428b      	cmp	r3, r1
9000ace4:	d002      	beq.n	9000acec <HAL_RCC_ClockConfig+0x34>
    return HAL_ERROR;
9000ace6:	2001      	movs	r0, #1
}
9000ace8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000acec:	6823      	ldr	r3, [r4, #0]
9000acee:	0758      	lsls	r0, r3, #29
9000acf0:	d50b      	bpl.n	9000ad0a <HAL_RCC_ClockConfig+0x52>
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000acf2:	4981      	ldr	r1, [pc, #516]	@ (9000aef8 <HAL_RCC_ClockConfig+0x240>)
9000acf4:	6920      	ldr	r0, [r4, #16]
9000acf6:	698a      	ldr	r2, [r1, #24]
9000acf8:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000acfc:	4290      	cmp	r0, r2
9000acfe:	d904      	bls.n	9000ad0a <HAL_RCC_ClockConfig+0x52>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000ad00:	698a      	ldr	r2, [r1, #24]
9000ad02:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000ad06:	4302      	orrs	r2, r0
9000ad08:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000ad0a:	0719      	lsls	r1, r3, #28
9000ad0c:	d50b      	bpl.n	9000ad26 <HAL_RCC_ClockConfig+0x6e>
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000ad0e:	497a      	ldr	r1, [pc, #488]	@ (9000aef8 <HAL_RCC_ClockConfig+0x240>)
9000ad10:	6960      	ldr	r0, [r4, #20]
9000ad12:	69ca      	ldr	r2, [r1, #28]
9000ad14:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000ad18:	4290      	cmp	r0, r2
9000ad1a:	d904      	bls.n	9000ad26 <HAL_RCC_ClockConfig+0x6e>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000ad1c:	69ca      	ldr	r2, [r1, #28]
9000ad1e:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000ad22:	4302      	orrs	r2, r0
9000ad24:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000ad26:	06da      	lsls	r2, r3, #27
9000ad28:	d50b      	bpl.n	9000ad42 <HAL_RCC_ClockConfig+0x8a>
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000ad2a:	4973      	ldr	r1, [pc, #460]	@ (9000aef8 <HAL_RCC_ClockConfig+0x240>)
9000ad2c:	69a0      	ldr	r0, [r4, #24]
9000ad2e:	69ca      	ldr	r2, [r1, #28]
9000ad30:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000ad34:	4290      	cmp	r0, r2
9000ad36:	d904      	bls.n	9000ad42 <HAL_RCC_ClockConfig+0x8a>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000ad38:	69ca      	ldr	r2, [r1, #28]
9000ad3a:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000ad3e:	4302      	orrs	r2, r0
9000ad40:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000ad42:	069f      	lsls	r7, r3, #26
9000ad44:	d50b      	bpl.n	9000ad5e <HAL_RCC_ClockConfig+0xa6>
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000ad46:	496c      	ldr	r1, [pc, #432]	@ (9000aef8 <HAL_RCC_ClockConfig+0x240>)
9000ad48:	69e0      	ldr	r0, [r4, #28]
9000ad4a:	6a0a      	ldr	r2, [r1, #32]
9000ad4c:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000ad50:	4290      	cmp	r0, r2
9000ad52:	d904      	bls.n	9000ad5e <HAL_RCC_ClockConfig+0xa6>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000ad54:	6a0a      	ldr	r2, [r1, #32]
9000ad56:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000ad5a:	4302      	orrs	r2, r0
9000ad5c:	620a      	str	r2, [r1, #32]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000ad5e:	079e      	lsls	r6, r3, #30
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000ad60:	f003 0201 	and.w	r2, r3, #1
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000ad64:	f140 80ab 	bpl.w	9000aebe <HAL_RCC_ClockConfig+0x206>
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000ad68:	4e63      	ldr	r6, [pc, #396]	@ (9000aef8 <HAL_RCC_ClockConfig+0x240>)
9000ad6a:	68e0      	ldr	r0, [r4, #12]
9000ad6c:	69b1      	ldr	r1, [r6, #24]
9000ad6e:	f001 010f 	and.w	r1, r1, #15
9000ad72:	4288      	cmp	r0, r1
9000ad74:	d904      	bls.n	9000ad80 <HAL_RCC_ClockConfig+0xc8>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000ad76:	69b1      	ldr	r1, [r6, #24]
9000ad78:	f021 010f 	bic.w	r1, r1, #15
9000ad7c:	4301      	orrs	r1, r0
9000ad7e:	61b1      	str	r1, [r6, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000ad80:	2a00      	cmp	r2, #0
9000ad82:	d030      	beq.n	9000ade6 <HAL_RCC_ClockConfig+0x12e>
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
9000ad84:	4a5c      	ldr	r2, [pc, #368]	@ (9000aef8 <HAL_RCC_ClockConfig+0x240>)
9000ad86:	68a1      	ldr	r1, [r4, #8]
9000ad88:	6993      	ldr	r3, [r2, #24]
9000ad8a:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
9000ad8e:	430b      	orrs	r3, r1
9000ad90:	6193      	str	r3, [r2, #24]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000ad92:	6861      	ldr	r1, [r4, #4]
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000ad94:	6813      	ldr	r3, [r2, #0]
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
9000ad96:	2902      	cmp	r1, #2
9000ad98:	f000 80a1 	beq.w	9000aede <HAL_RCC_ClockConfig+0x226>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
9000ad9c:	2903      	cmp	r1, #3
9000ad9e:	f000 8098 	beq.w	9000aed2 <HAL_RCC_ClockConfig+0x21a>
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
9000ada2:	2901      	cmp	r1, #1
9000ada4:	f000 80a1 	beq.w	9000aeea <HAL_RCC_ClockConfig+0x232>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
9000ada8:	075f      	lsls	r7, r3, #29
9000adaa:	d59c      	bpl.n	9000ace6 <HAL_RCC_ClockConfig+0x2e>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000adac:	4e52      	ldr	r6, [pc, #328]	@ (9000aef8 <HAL_RCC_ClockConfig+0x240>)
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000adae:	f241 3888 	movw	r8, #5000	@ 0x1388
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
9000adb2:	6933      	ldr	r3, [r6, #16]
9000adb4:	f023 0307 	bic.w	r3, r3, #7
9000adb8:	430b      	orrs	r3, r1
9000adba:	6133      	str	r3, [r6, #16]
    tickstart = HAL_GetTick();
9000adbc:	f7fc f854 	bl	90006e68 <HAL_GetTick>
9000adc0:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000adc2:	e005      	b.n	9000add0 <HAL_RCC_ClockConfig+0x118>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
9000adc4:	f7fc f850 	bl	90006e68 <HAL_GetTick>
9000adc8:	1bc0      	subs	r0, r0, r7
9000adca:	4540      	cmp	r0, r8
9000adcc:	f200 808b 	bhi.w	9000aee6 <HAL_RCC_ClockConfig+0x22e>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
9000add0:	6933      	ldr	r3, [r6, #16]
9000add2:	6862      	ldr	r2, [r4, #4]
9000add4:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000add8:	ebb3 0fc2 	cmp.w	r3, r2, lsl #3
9000addc:	d1f2      	bne.n	9000adc4 <HAL_RCC_ClockConfig+0x10c>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
9000adde:	6823      	ldr	r3, [r4, #0]
9000ade0:	079e      	lsls	r6, r3, #30
9000ade2:	d506      	bpl.n	9000adf2 <HAL_RCC_ClockConfig+0x13a>
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
9000ade4:	68e0      	ldr	r0, [r4, #12]
9000ade6:	4944      	ldr	r1, [pc, #272]	@ (9000aef8 <HAL_RCC_ClockConfig+0x240>)
9000ade8:	698a      	ldr	r2, [r1, #24]
9000adea:	f002 020f 	and.w	r2, r2, #15
9000adee:	4290      	cmp	r0, r2
9000adf0:	d369      	bcc.n	9000aec6 <HAL_RCC_ClockConfig+0x20e>
  if (FLatency < __HAL_FLASH_GET_LATENCY())
9000adf2:	4940      	ldr	r1, [pc, #256]	@ (9000aef4 <HAL_RCC_ClockConfig+0x23c>)
9000adf4:	680a      	ldr	r2, [r1, #0]
9000adf6:	f002 020f 	and.w	r2, r2, #15
9000adfa:	42aa      	cmp	r2, r5
9000adfc:	d90a      	bls.n	9000ae14 <HAL_RCC_ClockConfig+0x15c>
    __HAL_FLASH_SET_LATENCY(FLatency);
9000adfe:	680a      	ldr	r2, [r1, #0]
9000ae00:	f022 020f 	bic.w	r2, r2, #15
9000ae04:	432a      	orrs	r2, r5
9000ae06:	600a      	str	r2, [r1, #0]
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
9000ae08:	680a      	ldr	r2, [r1, #0]
9000ae0a:	f002 020f 	and.w	r2, r2, #15
9000ae0e:	42aa      	cmp	r2, r5
9000ae10:	f47f af69 	bne.w	9000ace6 <HAL_RCC_ClockConfig+0x2e>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
9000ae14:	0758      	lsls	r0, r3, #29
9000ae16:	d50b      	bpl.n	9000ae30 <HAL_RCC_ClockConfig+0x178>
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
9000ae18:	4937      	ldr	r1, [pc, #220]	@ (9000aef8 <HAL_RCC_ClockConfig+0x240>)
9000ae1a:	6920      	ldr	r0, [r4, #16]
9000ae1c:	698a      	ldr	r2, [r1, #24]
9000ae1e:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000ae22:	4290      	cmp	r0, r2
9000ae24:	d204      	bcs.n	9000ae30 <HAL_RCC_ClockConfig+0x178>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
9000ae26:	698a      	ldr	r2, [r1, #24]
9000ae28:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000ae2c:	4302      	orrs	r2, r0
9000ae2e:	618a      	str	r2, [r1, #24]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
9000ae30:	0719      	lsls	r1, r3, #28
9000ae32:	d50b      	bpl.n	9000ae4c <HAL_RCC_ClockConfig+0x194>
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
9000ae34:	4930      	ldr	r1, [pc, #192]	@ (9000aef8 <HAL_RCC_ClockConfig+0x240>)
9000ae36:	6960      	ldr	r0, [r4, #20]
9000ae38:	69ca      	ldr	r2, [r1, #28]
9000ae3a:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000ae3e:	4290      	cmp	r0, r2
9000ae40:	d204      	bcs.n	9000ae4c <HAL_RCC_ClockConfig+0x194>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
9000ae42:	69ca      	ldr	r2, [r1, #28]
9000ae44:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
9000ae48:	4302      	orrs	r2, r0
9000ae4a:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
9000ae4c:	06da      	lsls	r2, r3, #27
9000ae4e:	d50b      	bpl.n	9000ae68 <HAL_RCC_ClockConfig+0x1b0>
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
9000ae50:	4929      	ldr	r1, [pc, #164]	@ (9000aef8 <HAL_RCC_ClockConfig+0x240>)
9000ae52:	69a0      	ldr	r0, [r4, #24]
9000ae54:	69ca      	ldr	r2, [r1, #28]
9000ae56:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000ae5a:	4290      	cmp	r0, r2
9000ae5c:	d204      	bcs.n	9000ae68 <HAL_RCC_ClockConfig+0x1b0>
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
9000ae5e:	69ca      	ldr	r2, [r1, #28]
9000ae60:	f422 62e0 	bic.w	r2, r2, #1792	@ 0x700
9000ae64:	4302      	orrs	r2, r0
9000ae66:	61ca      	str	r2, [r1, #28]
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
9000ae68:	069b      	lsls	r3, r3, #26
9000ae6a:	d50b      	bpl.n	9000ae84 <HAL_RCC_ClockConfig+0x1cc>
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
9000ae6c:	4a22      	ldr	r2, [pc, #136]	@ (9000aef8 <HAL_RCC_ClockConfig+0x240>)
9000ae6e:	69e1      	ldr	r1, [r4, #28]
9000ae70:	6a13      	ldr	r3, [r2, #32]
9000ae72:	f003 0370 	and.w	r3, r3, #112	@ 0x70
9000ae76:	4299      	cmp	r1, r3
9000ae78:	d204      	bcs.n	9000ae84 <HAL_RCC_ClockConfig+0x1cc>
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
9000ae7a:	6a13      	ldr	r3, [r2, #32]
9000ae7c:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
9000ae80:	430b      	orrs	r3, r1
9000ae82:	6213      	str	r3, [r2, #32]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000ae84:	f7ff fe8a 	bl	9000ab9c <HAL_RCC_GetSysClockFreq>
9000ae88:	4a1b      	ldr	r2, [pc, #108]	@ (9000aef8 <HAL_RCC_ClockConfig+0x240>)
9000ae8a:	4603      	mov	r3, r0
9000ae8c:	481b      	ldr	r0, [pc, #108]	@ (9000aefc <HAL_RCC_ClockConfig+0x244>)
9000ae8e:	6991      	ldr	r1, [r2, #24]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000ae90:	6992      	ldr	r2, [r2, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000ae92:	f3c1 2103 	ubfx	r1, r1, #8, #4
  SystemCoreClock = common_system_clock;
9000ae96:	4d1a      	ldr	r5, [pc, #104]	@ (9000af00 <HAL_RCC_ClockConfig+0x248>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000ae98:	f002 020f 	and.w	r2, r2, #15
9000ae9c:	4c19      	ldr	r4, [pc, #100]	@ (9000af04 <HAL_RCC_ClockConfig+0x24c>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000ae9e:	5c41      	ldrb	r1, [r0, r1]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000aea0:	5c82      	ldrb	r2, [r0, r2]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000aea2:	f001 011f 	and.w	r1, r1, #31
  halstatus = HAL_InitTick(uwTickPrio);
9000aea6:	4818      	ldr	r0, [pc, #96]	@ (9000af08 <HAL_RCC_ClockConfig+0x250>)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000aea8:	f002 021f 	and.w	r2, r2, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
9000aeac:	40cb      	lsrs	r3, r1
  halstatus = HAL_InitTick(uwTickPrio);
9000aeae:	6800      	ldr	r0, [r0, #0]
  SystemCoreClock = common_system_clock;
9000aeb0:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000aeb2:	40d3      	lsrs	r3, r2
9000aeb4:	6023      	str	r3, [r4, #0]
}
9000aeb6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  halstatus = HAL_InitTick(uwTickPrio);
9000aeba:	f7f9 ba3d 	b.w	90004338 <HAL_InitTick>
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
9000aebe:	2a00      	cmp	r2, #0
9000aec0:	f47f af60 	bne.w	9000ad84 <HAL_RCC_ClockConfig+0xcc>
9000aec4:	e795      	b.n	9000adf2 <HAL_RCC_ClockConfig+0x13a>
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
9000aec6:	698a      	ldr	r2, [r1, #24]
9000aec8:	f022 020f 	bic.w	r2, r2, #15
9000aecc:	4302      	orrs	r2, r0
9000aece:	618a      	str	r2, [r1, #24]
9000aed0:	e78f      	b.n	9000adf2 <HAL_RCC_ClockConfig+0x13a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
9000aed2:	019a      	lsls	r2, r3, #6
9000aed4:	f53f af6a 	bmi.w	9000adac <HAL_RCC_ClockConfig+0xf4>
9000aed8:	e705      	b.n	9000ace6 <HAL_RCC_ClockConfig+0x2e>
    return HAL_ERROR;
9000aeda:	2001      	movs	r0, #1
}
9000aedc:	4770      	bx	lr
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
9000aede:	0398      	lsls	r0, r3, #14
9000aee0:	f53f af64 	bmi.w	9000adac <HAL_RCC_ClockConfig+0xf4>
9000aee4:	e6ff      	b.n	9000ace6 <HAL_RCC_ClockConfig+0x2e>
        return HAL_TIMEOUT;
9000aee6:	2003      	movs	r0, #3
9000aee8:	e6fe      	b.n	9000ace8 <HAL_RCC_ClockConfig+0x30>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
9000aeea:	05db      	lsls	r3, r3, #23
9000aeec:	f53f af5e 	bmi.w	9000adac <HAL_RCC_ClockConfig+0xf4>
9000aef0:	e6f9      	b.n	9000ace6 <HAL_RCC_ClockConfig+0x2e>
9000aef2:	bf00      	nop
9000aef4:	52002000 	.word	0x52002000
9000aef8:	58024400 	.word	0x58024400
9000aefc:	9002ce48 	.word	0x9002ce48
9000af00:	24000078 	.word	0x24000078
9000af04:	24000074 	.word	0x24000074
9000af08:	24000080 	.word	0x24000080

9000af0c <HAL_RCC_GetHCLKFreq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000af0c:	4a18      	ldr	r2, [pc, #96]	@ (9000af70 <HAL_RCC_GetHCLKFreq+0x64>)
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
9000af0e:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000af10:	6913      	ldr	r3, [r2, #16]
9000af12:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000af16:	2b10      	cmp	r3, #16
9000af18:	d024      	beq.n	9000af64 <HAL_RCC_GetHCLKFreq+0x58>
9000af1a:	2b18      	cmp	r3, #24
9000af1c:	d009      	beq.n	9000af32 <HAL_RCC_GetHCLKFreq+0x26>
9000af1e:	bb1b      	cbnz	r3, 9000af68 <HAL_RCC_GetHCLKFreq+0x5c>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000af20:	6813      	ldr	r3, [r2, #0]
9000af22:	069b      	lsls	r3, r3, #26
9000af24:	d522      	bpl.n	9000af6c <HAL_RCC_GetHCLKFreq+0x60>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000af26:	6812      	ldr	r2, [r2, #0]
9000af28:	4b12      	ldr	r3, [pc, #72]	@ (9000af74 <HAL_RCC_GetHCLKFreq+0x68>)
9000af2a:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000af2e:	40d3      	lsrs	r3, r2
9000af30:	e002      	b.n	9000af38 <HAL_RCC_GetHCLKFreq+0x2c>
9000af32:	f7ff fad3 	bl	9000a4dc <HAL_RCC_GetSysClockFreq.part.0>
9000af36:	4603      	mov	r3, r0
  uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000af38:	490d      	ldr	r1, [pc, #52]	@ (9000af70 <HAL_RCC_GetHCLKFreq+0x64>)
9000af3a:	480f      	ldr	r0, [pc, #60]	@ (9000af78 <HAL_RCC_GetHCLKFreq+0x6c>)
9000af3c:	698a      	ldr	r2, [r1, #24]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000af3e:	6989      	ldr	r1, [r1, #24]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000af40:	f3c2 2203 	ubfx	r2, r2, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000af44:	4c0d      	ldr	r4, [pc, #52]	@ (9000af7c <HAL_RCC_GetHCLKFreq+0x70>)
9000af46:	f001 010f 	and.w	r1, r1, #15
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
9000af4a:	4d0d      	ldr	r5, [pc, #52]	@ (9000af80 <HAL_RCC_GetHCLKFreq+0x74>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000af4c:	5c82      	ldrb	r2, [r0, r2]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000af4e:	5c40      	ldrb	r0, [r0, r1]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000af50:	f002 021f 	and.w	r2, r2, #31
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000af54:	f000 001f 	and.w	r0, r0, #31
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000af58:	40d3      	lsrs	r3, r2
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000af5a:	fa23 f000 	lsr.w	r0, r3, r0
  SystemCoreClock = common_system_clock;
9000af5e:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000af60:	6020      	str	r0, [r4, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
}
9000af62:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000af64:	4b07      	ldr	r3, [pc, #28]	@ (9000af84 <HAL_RCC_GetHCLKFreq+0x78>)
9000af66:	e7e7      	b.n	9000af38 <HAL_RCC_GetHCLKFreq+0x2c>
      sysclockfreq = CSI_VALUE;
9000af68:	4b07      	ldr	r3, [pc, #28]	@ (9000af88 <HAL_RCC_GetHCLKFreq+0x7c>)
9000af6a:	e7e5      	b.n	9000af38 <HAL_RCC_GetHCLKFreq+0x2c>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000af6c:	4b01      	ldr	r3, [pc, #4]	@ (9000af74 <HAL_RCC_GetHCLKFreq+0x68>)
9000af6e:	e7e3      	b.n	9000af38 <HAL_RCC_GetHCLKFreq+0x2c>
9000af70:	58024400 	.word	0x58024400
9000af74:	03d09000 	.word	0x03d09000
9000af78:	9002ce48 	.word	0x9002ce48
9000af7c:	24000074 	.word	0x24000074
9000af80:	24000078 	.word	0x24000078
9000af84:	017d7840 	.word	0x017d7840
9000af88:	003d0900 	.word	0x003d0900

9000af8c <HAL_RCC_GetPCLK1Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000af8c:	4a1c      	ldr	r2, [pc, #112]	@ (9000b000 <HAL_RCC_GetPCLK1Freq+0x74>)
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
9000af8e:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000af90:	6913      	ldr	r3, [r2, #16]
9000af92:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000af96:	2b10      	cmp	r3, #16
9000af98:	d02b      	beq.n	9000aff2 <HAL_RCC_GetPCLK1Freq+0x66>
9000af9a:	2b18      	cmp	r3, #24
9000af9c:	d009      	beq.n	9000afb2 <HAL_RCC_GetPCLK1Freq+0x26>
9000af9e:	bb53      	cbnz	r3, 9000aff6 <HAL_RCC_GetPCLK1Freq+0x6a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000afa0:	6813      	ldr	r3, [r2, #0]
9000afa2:	069b      	lsls	r3, r3, #26
9000afa4:	d529      	bpl.n	9000affa <HAL_RCC_GetPCLK1Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000afa6:	6812      	ldr	r2, [r2, #0]
9000afa8:	4b16      	ldr	r3, [pc, #88]	@ (9000b004 <HAL_RCC_GetPCLK1Freq+0x78>)
9000afaa:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000afae:	40d3      	lsrs	r3, r2
9000afb0:	e002      	b.n	9000afb8 <HAL_RCC_GetPCLK1Freq+0x2c>
9000afb2:	f7ff fa93 	bl	9000a4dc <HAL_RCC_GetSysClockFreq.part.0>
9000afb6:	4603      	mov	r3, r0
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000afb8:	4a11      	ldr	r2, [pc, #68]	@ (9000b000 <HAL_RCC_GetPCLK1Freq+0x74>)
9000afba:	4913      	ldr	r1, [pc, #76]	@ (9000b008 <HAL_RCC_GetPCLK1Freq+0x7c>)
9000afbc:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000afbe:	4d13      	ldr	r5, [pc, #76]	@ (9000b00c <HAL_RCC_GetPCLK1Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000afc0:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000afc4:	4c12      	ldr	r4, [pc, #72]	@ (9000b010 <HAL_RCC_GetPCLK1Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000afc6:	5c08      	ldrb	r0, [r1, r0]
9000afc8:	f000 001f 	and.w	r0, r0, #31
9000afcc:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000afce:	6990      	ldr	r0, [r2, #24]
9000afd0:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000afd4:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000afd6:	5c08      	ldrb	r0, [r1, r0]
9000afd8:	f000 001f 	and.w	r0, r0, #31
9000afdc:	40c3      	lsrs	r3, r0
9000afde:	6023      	str	r3, [r4, #0]
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
9000afe0:	69d2      	ldr	r2, [r2, #28]
9000afe2:	f3c2 1202 	ubfx	r2, r2, #4, #3
9000afe6:	5c88      	ldrb	r0, [r1, r2]
9000afe8:	f000 001f 	and.w	r0, r0, #31
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
9000afec:	fa23 f000 	lsr.w	r0, r3, r0
9000aff0:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000aff2:	4b08      	ldr	r3, [pc, #32]	@ (9000b014 <HAL_RCC_GetPCLK1Freq+0x88>)
9000aff4:	e7e0      	b.n	9000afb8 <HAL_RCC_GetPCLK1Freq+0x2c>
      sysclockfreq = CSI_VALUE;
9000aff6:	4b08      	ldr	r3, [pc, #32]	@ (9000b018 <HAL_RCC_GetPCLK1Freq+0x8c>)
9000aff8:	e7de      	b.n	9000afb8 <HAL_RCC_GetPCLK1Freq+0x2c>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000affa:	4b02      	ldr	r3, [pc, #8]	@ (9000b004 <HAL_RCC_GetPCLK1Freq+0x78>)
9000affc:	e7dc      	b.n	9000afb8 <HAL_RCC_GetPCLK1Freq+0x2c>
9000affe:	bf00      	nop
9000b000:	58024400 	.word	0x58024400
9000b004:	03d09000 	.word	0x03d09000
9000b008:	9002ce48 	.word	0x9002ce48
9000b00c:	24000078 	.word	0x24000078
9000b010:	24000074 	.word	0x24000074
9000b014:	017d7840 	.word	0x017d7840
9000b018:	003d0900 	.word	0x003d0900

9000b01c <HAL_RCC_GetPCLK2Freq>:
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b01c:	4a1c      	ldr	r2, [pc, #112]	@ (9000b090 <HAL_RCC_GetPCLK2Freq+0x74>)
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
9000b01e:	b538      	push	{r3, r4, r5, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b020:	6913      	ldr	r3, [r2, #16]
9000b022:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000b026:	2b10      	cmp	r3, #16
9000b028:	d02b      	beq.n	9000b082 <HAL_RCC_GetPCLK2Freq+0x66>
9000b02a:	2b18      	cmp	r3, #24
9000b02c:	d009      	beq.n	9000b042 <HAL_RCC_GetPCLK2Freq+0x26>
9000b02e:	bb53      	cbnz	r3, 9000b086 <HAL_RCC_GetPCLK2Freq+0x6a>
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000b030:	6813      	ldr	r3, [r2, #0]
9000b032:	069b      	lsls	r3, r3, #26
9000b034:	d529      	bpl.n	9000b08a <HAL_RCC_GetPCLK2Freq+0x6e>
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000b036:	6812      	ldr	r2, [r2, #0]
9000b038:	4b16      	ldr	r3, [pc, #88]	@ (9000b094 <HAL_RCC_GetPCLK2Freq+0x78>)
9000b03a:	f3c2 02c1 	ubfx	r2, r2, #3, #2
9000b03e:	40d3      	lsrs	r3, r2
9000b040:	e002      	b.n	9000b048 <HAL_RCC_GetPCLK2Freq+0x2c>
9000b042:	f7ff fa4b 	bl	9000a4dc <HAL_RCC_GetSysClockFreq.part.0>
9000b046:	4603      	mov	r3, r0
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b048:	4a11      	ldr	r2, [pc, #68]	@ (9000b090 <HAL_RCC_GetPCLK2Freq+0x74>)
9000b04a:	4913      	ldr	r1, [pc, #76]	@ (9000b098 <HAL_RCC_GetPCLK2Freq+0x7c>)
9000b04c:	6990      	ldr	r0, [r2, #24]
  SystemCoreClock = common_system_clock;
9000b04e:	4d13      	ldr	r5, [pc, #76]	@ (9000b09c <HAL_RCC_GetPCLK2Freq+0x80>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b050:	f3c0 2003 	ubfx	r0, r0, #8, #4
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b054:	4c12      	ldr	r4, [pc, #72]	@ (9000b0a0 <HAL_RCC_GetPCLK2Freq+0x84>)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
9000b056:	5c08      	ldrb	r0, [r1, r0]
9000b058:	f000 001f 	and.w	r0, r0, #31
9000b05c:	40c3      	lsrs	r3, r0
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b05e:	6990      	ldr	r0, [r2, #24]
9000b060:	f000 000f 	and.w	r0, r0, #15
  SystemCoreClock = common_system_clock;
9000b064:	602b      	str	r3, [r5, #0]
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
9000b066:	5c08      	ldrb	r0, [r1, r0]
9000b068:	f000 001f 	and.w	r0, r0, #31
9000b06c:	40c3      	lsrs	r3, r0
9000b06e:	6023      	str	r3, [r4, #0]
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
9000b070:	69d2      	ldr	r2, [r2, #28]
9000b072:	f3c2 2202 	ubfx	r2, r2, #8, #3
9000b076:	5c88      	ldrb	r0, [r1, r2]
9000b078:	f000 001f 	and.w	r0, r0, #31
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
9000b07c:	fa23 f000 	lsr.w	r0, r3, r0
9000b080:	bd38      	pop	{r3, r4, r5, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
9000b082:	4b08      	ldr	r3, [pc, #32]	@ (9000b0a4 <HAL_RCC_GetPCLK2Freq+0x88>)
9000b084:	e7e0      	b.n	9000b048 <HAL_RCC_GetPCLK2Freq+0x2c>
      sysclockfreq = CSI_VALUE;
9000b086:	4b08      	ldr	r3, [pc, #32]	@ (9000b0a8 <HAL_RCC_GetPCLK2Freq+0x8c>)
9000b088:	e7de      	b.n	9000b048 <HAL_RCC_GetPCLK2Freq+0x2c>
        sysclockfreq = (uint32_t) HSI_VALUE;
9000b08a:	4b02      	ldr	r3, [pc, #8]	@ (9000b094 <HAL_RCC_GetPCLK2Freq+0x78>)
9000b08c:	e7dc      	b.n	9000b048 <HAL_RCC_GetPCLK2Freq+0x2c>
9000b08e:	bf00      	nop
9000b090:	58024400 	.word	0x58024400
9000b094:	03d09000 	.word	0x03d09000
9000b098:	9002ce48 	.word	0x9002ce48
9000b09c:	24000078 	.word	0x24000078
9000b0a0:	24000074 	.word	0x24000074
9000b0a4:	017d7840 	.word	0x017d7840
9000b0a8:	003d0900 	.word	0x003d0900

9000b0ac <HAL_RCC_GetClockConfig>:
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
                                 RCC_CLOCKTYPE_PCLK2 |  RCC_CLOCKTYPE_D3PCLK1  ;

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000b0ac:	4b13      	ldr	r3, [pc, #76]	@ (9000b0fc <HAL_RCC_GetClockConfig+0x50>)
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000b0ae:	223f      	movs	r2, #63	@ 0x3f
{
9000b0b0:	b410      	push	{r4}
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_D1PCLK1 | RCC_CLOCKTYPE_PCLK1 |
9000b0b2:	6002      	str	r2, [r0, #0]
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000b0b4:	691a      	ldr	r2, [r3, #16]
  /* Get the APB4 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE);
#endif

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b0b6:	4c12      	ldr	r4, [pc, #72]	@ (9000b100 <HAL_RCC_GetClockConfig+0x54>)
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
9000b0b8:	f002 0207 	and.w	r2, r2, #7
9000b0bc:	6042      	str	r2, [r0, #4]
  RCC_ClkInitStruct->SYSCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1CPRE);
9000b0be:	699a      	ldr	r2, [r3, #24]
9000b0c0:	f402 6270 	and.w	r2, r2, #3840	@ 0xf00
9000b0c4:	6082      	str	r2, [r0, #8]
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_HPRE);
9000b0c6:	699a      	ldr	r2, [r3, #24]
9000b0c8:	f002 020f 	and.w	r2, r2, #15
9000b0cc:	60c2      	str	r2, [r0, #12]
  RCC_ClkInitStruct->APB3CLKDivider = (uint32_t)(RCC->D1CFGR & RCC_D1CFGR_D1PPRE);
9000b0ce:	699a      	ldr	r2, [r3, #24]
9000b0d0:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b0d4:	6102      	str	r2, [r0, #16]
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1);
9000b0d6:	69da      	ldr	r2, [r3, #28]
9000b0d8:	f002 0270 	and.w	r2, r2, #112	@ 0x70
9000b0dc:	6142      	str	r2, [r0, #20]
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2);
9000b0de:	69da      	ldr	r2, [r3, #28]
9000b0e0:	f402 62e0 	and.w	r2, r2, #1792	@ 0x700
9000b0e4:	6182      	str	r2, [r0, #24]
  RCC_ClkInitStruct->APB4CLKDivider = (uint32_t)(RCC->D3CFGR & RCC_D3CFGR_D3PPRE);
9000b0e6:	6a1b      	ldr	r3, [r3, #32]
9000b0e8:	f003 0370 	and.w	r3, r3, #112	@ 0x70
9000b0ec:	61c3      	str	r3, [r0, #28]
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b0ee:	6823      	ldr	r3, [r4, #0]
}
9000b0f0:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
9000b0f4:	f003 030f 	and.w	r3, r3, #15
9000b0f8:	600b      	str	r3, [r1, #0]
}
9000b0fa:	4770      	bx	lr
9000b0fc:	58024400 	.word	0x58024400
9000b100:	52002000 	.word	0x52002000

9000b104 <RCCEx_PLL2_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000b104:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
9000b106:	4c36      	ldr	r4, [pc, #216]	@ (9000b1e0 <RCCEx_PLL2_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL2_Config(const RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
9000b108:	4606      	mov	r6, r0
9000b10a:	460f      	mov	r7, r1
    __HAL_RCC_PLL2_DISABLE();
9000b10c:	6823      	ldr	r3, [r4, #0]
9000b10e:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
9000b112:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b114:	f7fb fea8 	bl	90006e68 <HAL_GetTick>
9000b118:	4605      	mov	r5, r0

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000b11a:	e004      	b.n	9000b126 <RCCEx_PLL2_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000b11c:	f7fb fea4 	bl	90006e68 <HAL_GetTick>
9000b120:	1b40      	subs	r0, r0, r5
9000b122:	2802      	cmp	r0, #2
9000b124:	d856      	bhi.n	9000b1d4 <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
9000b126:	6823      	ldr	r3, [r4, #0]
9000b128:	011a      	lsls	r2, r3, #4
9000b12a:	d4f7      	bmi.n	9000b11c <RCCEx_PLL2_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
9000b12c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000b12e:	6832      	ldr	r2, [r6, #0]
9000b130:	f423 337c 	bic.w	r3, r3, #258048	@ 0x3f000
9000b134:	ea43 3302 	orr.w	r3, r3, r2, lsl #12
9000b138:	62a3      	str	r3, [r4, #40]	@ 0x28
9000b13a:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000b13e:	3b01      	subs	r3, #1
9000b140:	3a01      	subs	r2, #1
9000b142:	025b      	lsls	r3, r3, #9
9000b144:	0412      	lsls	r2, r2, #16
9000b146:	b29b      	uxth	r3, r3
9000b148:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000b14c:	4313      	orrs	r3, r2
9000b14e:	6872      	ldr	r2, [r6, #4]
9000b150:	3a01      	subs	r2, #1
9000b152:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000b156:	4313      	orrs	r3, r2
9000b158:	6932      	ldr	r2, [r6, #16]
9000b15a:	3a01      	subs	r2, #1
9000b15c:	0612      	lsls	r2, r2, #24
9000b15e:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000b162:	4313      	orrs	r3, r2
9000b164:	63a3      	str	r3, [r4, #56]	@ 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
9000b166:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b168:	6972      	ldr	r2, [r6, #20]
9000b16a:	f023 03c0 	bic.w	r3, r3, #192	@ 0xc0
9000b16e:	4313      	orrs	r3, r2
9000b170:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
9000b172:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b174:	69b2      	ldr	r2, [r6, #24]
9000b176:	f023 0320 	bic.w	r3, r3, #32
9000b17a:	4313      	orrs	r3, r2
9000b17c:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();
9000b17e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b180:	f023 0310 	bic.w	r3, r3, #16
9000b184:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
9000b186:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000b188:	69f2      	ldr	r2, [r6, #28]
9000b18a:	f36f 03cf 	bfc	r3, #3, #13
9000b18e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000b192:	63e3      	str	r3, [r4, #60]	@ 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
9000b194:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b196:	f043 0310 	orr.w	r3, r3, #16
9000b19a:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000b19c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000b19e:	b1df      	cbz	r7, 9000b1d8 <RCCEx_PLL2_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000b1a0:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
9000b1a2:	bf0c      	ite	eq
9000b1a4:	f443 1380 	orreq.w	r3, r3, #1048576	@ 0x100000
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
9000b1a8:	f443 1300 	orrne.w	r3, r3, #2097152	@ 0x200000
9000b1ac:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
9000b1ae:	4c0c      	ldr	r4, [pc, #48]	@ (9000b1e0 <RCCEx_PLL2_Config.part.0+0xdc>)
9000b1b0:	6823      	ldr	r3, [r4, #0]
9000b1b2:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
9000b1b6:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b1b8:	f7fb fe56 	bl	90006e68 <HAL_GetTick>
9000b1bc:	4605      	mov	r5, r0

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000b1be:	e004      	b.n	9000b1ca <RCCEx_PLL2_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
9000b1c0:	f7fb fe52 	bl	90006e68 <HAL_GetTick>
9000b1c4:	1b40      	subs	r0, r0, r5
9000b1c6:	2802      	cmp	r0, #2
9000b1c8:	d804      	bhi.n	9000b1d4 <RCCEx_PLL2_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
9000b1ca:	6823      	ldr	r3, [r4, #0]
9000b1cc:	011b      	lsls	r3, r3, #4
9000b1ce:	d5f7      	bpl.n	9000b1c0 <RCCEx_PLL2_Config.part.0+0xbc>
    }

  }


  return status;
9000b1d0:	2000      	movs	r0, #0
}
9000b1d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000b1d4:	2003      	movs	r0, #3
}
9000b1d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
9000b1d8:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
9000b1dc:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000b1de:	e7e6      	b.n	9000b1ae <RCCEx_PLL2_Config.part.0+0xaa>
9000b1e0:	58024400 	.word	0x58024400

9000b1e4 <RCCEx_PLL3_Config.part.0>:
  * @param  Divider  divider parameter to be updated
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000b1e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
9000b1e6:	4c36      	ldr	r4, [pc, #216]	@ (9000b2c0 <RCCEx_PLL3_Config.part.0+0xdc>)
static HAL_StatusTypeDef RCCEx_PLL3_Config(const RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
9000b1e8:	4606      	mov	r6, r0
9000b1ea:	460f      	mov	r7, r1
    __HAL_RCC_PLL3_DISABLE();
9000b1ec:	6823      	ldr	r3, [r4, #0]
9000b1ee:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
9000b1f2:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b1f4:	f7fb fe38 	bl	90006e68 <HAL_GetTick>
9000b1f8:	4605      	mov	r5, r0
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000b1fa:	e004      	b.n	9000b206 <RCCEx_PLL3_Config.part.0+0x22>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000b1fc:	f7fb fe34 	bl	90006e68 <HAL_GetTick>
9000b200:	1b40      	subs	r0, r0, r5
9000b202:	2802      	cmp	r0, #2
9000b204:	d856      	bhi.n	9000b2b4 <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
9000b206:	6823      	ldr	r3, [r4, #0]
9000b208:	009a      	lsls	r2, r3, #2
9000b20a:	d4f7      	bmi.n	9000b1fc <RCCEx_PLL3_Config.part.0+0x18>
        return HAL_TIMEOUT;
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
9000b20c:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
9000b20e:	6832      	ldr	r2, [r6, #0]
9000b210:	f023 737c 	bic.w	r3, r3, #66060288	@ 0x3f00000
9000b214:	ea43 5302 	orr.w	r3, r3, r2, lsl #20
9000b218:	62a3      	str	r3, [r4, #40]	@ 0x28
9000b21a:	e9d6 3202 	ldrd	r3, r2, [r6, #8]
9000b21e:	3b01      	subs	r3, #1
9000b220:	3a01      	subs	r2, #1
9000b222:	025b      	lsls	r3, r3, #9
9000b224:	0412      	lsls	r2, r2, #16
9000b226:	b29b      	uxth	r3, r3
9000b228:	f402 02fe 	and.w	r2, r2, #8323072	@ 0x7f0000
9000b22c:	4313      	orrs	r3, r2
9000b22e:	6872      	ldr	r2, [r6, #4]
9000b230:	3a01      	subs	r2, #1
9000b232:	f3c2 0208 	ubfx	r2, r2, #0, #9
9000b236:	4313      	orrs	r3, r2
9000b238:	6932      	ldr	r2, [r6, #16]
9000b23a:	3a01      	subs	r2, #1
9000b23c:	0612      	lsls	r2, r2, #24
9000b23e:	f002 42fe 	and.w	r2, r2, #2130706432	@ 0x7f000000
9000b242:	4313      	orrs	r3, r2
9000b244:	6423      	str	r3, [r4, #64]	@ 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
9000b246:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b248:	6972      	ldr	r2, [r6, #20]
9000b24a:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
9000b24e:	4313      	orrs	r3, r2
9000b250:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
9000b252:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b254:	69b2      	ldr	r2, [r6, #24]
9000b256:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
9000b25a:	4313      	orrs	r3, r2
9000b25c:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();
9000b25e:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b260:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
9000b264:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
9000b266:	6c63      	ldr	r3, [r4, #68]	@ 0x44
9000b268:	69f2      	ldr	r2, [r6, #28]
9000b26a:	f36f 03cf 	bfc	r3, #3, #13
9000b26e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
9000b272:	6463      	str	r3, [r4, #68]	@ 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
9000b274:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000b276:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000b27a:	62e3      	str	r3, [r4, #44]	@ 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000b27c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
    if (Divider == DIVIDER_P_UPDATE)
9000b27e:	b1df      	cbz	r7, 9000b2b8 <RCCEx_PLL3_Config.part.0+0xd4>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
9000b280:	2f01      	cmp	r7, #1
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
9000b282:	bf0c      	ite	eq
9000b284:	f443 0300 	orreq.w	r3, r3, #8388608	@ 0x800000
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
9000b288:	f043 7380 	orrne.w	r3, r3, #16777216	@ 0x1000000
9000b28c:	62e3      	str	r3, [r4, #44]	@ 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
9000b28e:	4c0c      	ldr	r4, [pc, #48]	@ (9000b2c0 <RCCEx_PLL3_Config.part.0+0xdc>)
9000b290:	6823      	ldr	r3, [r4, #0]
9000b292:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
9000b296:	6023      	str	r3, [r4, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
9000b298:	f7fb fde6 	bl	90006e68 <HAL_GetTick>
9000b29c:	4605      	mov	r5, r0

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000b29e:	e004      	b.n	9000b2aa <RCCEx_PLL3_Config.part.0+0xc6>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
9000b2a0:	f7fb fde2 	bl	90006e68 <HAL_GetTick>
9000b2a4:	1b40      	subs	r0, r0, r5
9000b2a6:	2802      	cmp	r0, #2
9000b2a8:	d804      	bhi.n	9000b2b4 <RCCEx_PLL3_Config.part.0+0xd0>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
9000b2aa:	6823      	ldr	r3, [r4, #0]
9000b2ac:	009b      	lsls	r3, r3, #2
9000b2ae:	d5f7      	bpl.n	9000b2a0 <RCCEx_PLL3_Config.part.0+0xbc>
    }

  }


  return status;
9000b2b0:	2000      	movs	r0, #0
}
9000b2b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        return HAL_TIMEOUT;
9000b2b4:	2003      	movs	r0, #3
}
9000b2b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
9000b2b8:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
9000b2bc:	62e3      	str	r3, [r4, #44]	@ 0x2c
9000b2be:	e7e6      	b.n	9000b28e <RCCEx_PLL3_Config.part.0+0xaa>
9000b2c0:	58024400 	.word	0x58024400

9000b2c4 <HAL_RCCEx_PeriphCLKConfig>:
{
9000b2c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000b2c8:	e9d0 3200 	ldrd	r3, r2, [r0]
{
9000b2cc:	4604      	mov	r4, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
9000b2ce:	011d      	lsls	r5, r3, #4
9000b2d0:	f003 6600 	and.w	r6, r3, #134217728	@ 0x8000000
9000b2d4:	d524      	bpl.n	9000b320 <HAL_RCCEx_PeriphCLKConfig+0x5c>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000b2d6:	6e81      	ldr	r1, [r0, #104]	@ 0x68
9000b2d8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000b2dc:	f000 85df 	beq.w	9000be9e <HAL_RCCEx_PeriphCLKConfig+0xbda>
9000b2e0:	f200 86a8 	bhi.w	9000c034 <HAL_RCCEx_PeriphCLKConfig+0xd70>
9000b2e4:	2900      	cmp	r1, #0
9000b2e6:	f000 85f6 	beq.w	9000bed6 <HAL_RCCEx_PeriphCLKConfig+0xc12>
9000b2ea:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000b2ee:	f040 86a5 	bne.w	9000c03c <HAL_RCCEx_PeriphCLKConfig+0xd78>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b2f2:	49a9      	ldr	r1, [pc, #676]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b2f4:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b2f6:	f001 0103 	and.w	r1, r1, #3
9000b2fa:	2903      	cmp	r1, #3
9000b2fc:	f000 869e 	beq.w	9000c03c <HAL_RCCEx_PeriphCLKConfig+0xd78>
9000b300:	2102      	movs	r1, #2
9000b302:	3008      	adds	r0, #8
9000b304:	f7ff fefe 	bl	9000b104 <RCCEx_PLL2_Config.part.0>
9000b308:	4606      	mov	r6, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000b30a:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b30e:	b93e      	cbnz	r6, 9000b320 <HAL_RCCEx_PeriphCLKConfig+0x5c>
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000b310:	6ea1      	ldr	r1, [r4, #104]	@ 0x68
9000b312:	4da1      	ldr	r5, [pc, #644]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
9000b314:	2600      	movs	r6, #0
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
9000b316:	6d28      	ldr	r0, [r5, #80]	@ 0x50
9000b318:	f420 1040 	bic.w	r0, r0, #3145728	@ 0x300000
9000b31c:	4301      	orrs	r1, r0
9000b31e:	6529      	str	r1, [r5, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
9000b320:	05d8      	lsls	r0, r3, #23
9000b322:	d50a      	bpl.n	9000b33a <HAL_RCCEx_PeriphCLKConfig+0x76>
    switch (PeriphClkInit->Sai1ClockSelection)
9000b324:	6da1      	ldr	r1, [r4, #88]	@ 0x58
9000b326:	2904      	cmp	r1, #4
9000b328:	d806      	bhi.n	9000b338 <HAL_RCCEx_PeriphCLKConfig+0x74>
9000b32a:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b32e:	03ff      	.short	0x03ff
9000b330:	0582056d 	.word	0x0582056d
9000b334:	04040404 	.word	0x04040404
      status = ret;
9000b338:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000b33a:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000b33c:	0599      	lsls	r1, r3, #22
9000b33e:	d524      	bpl.n	9000b38a <HAL_RCCEx_PeriphCLKConfig+0xc6>
    switch (PeriphClkInit->Sai23ClockSelection)
9000b340:	6de1      	ldr	r1, [r4, #92]	@ 0x5c
9000b342:	2980      	cmp	r1, #128	@ 0x80
9000b344:	f000 854b 	beq.w	9000bdde <HAL_RCCEx_PeriphCLKConfig+0xb1a>
9000b348:	f200 8687 	bhi.w	9000c05a <HAL_RCCEx_PeriphCLKConfig+0xd96>
9000b34c:	2900      	cmp	r1, #0
9000b34e:	f000 85bb 	beq.w	9000bec8 <HAL_RCCEx_PeriphCLKConfig+0xc04>
9000b352:	2940      	cmp	r1, #64	@ 0x40
9000b354:	f040 8688 	bne.w	9000c068 <HAL_RCCEx_PeriphCLKConfig+0xda4>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b358:	498f      	ldr	r1, [pc, #572]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b35a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b35c:	f001 0103 	and.w	r1, r1, #3
9000b360:	2903      	cmp	r1, #3
9000b362:	f000 8681 	beq.w	9000c068 <HAL_RCCEx_PeriphCLKConfig+0xda4>
9000b366:	2100      	movs	r1, #0
9000b368:	f104 0008 	add.w	r0, r4, #8
9000b36c:	f7ff feca 	bl	9000b104 <RCCEx_PLL2_Config.part.0>
9000b370:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000b372:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b376:	2d00      	cmp	r5, #0
9000b378:	f040 8543 	bne.w	9000be02 <HAL_RCCEx_PeriphCLKConfig+0xb3e>
      __HAL_RCC_SAI23_CONFIG(PeriphClkInit->Sai23ClockSelection);
9000b37c:	4f86      	ldr	r7, [pc, #536]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b37e:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
9000b380:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000b382:	f421 71e0 	bic.w	r1, r1, #448	@ 0x1c0
9000b386:	4301      	orrs	r1, r0
9000b388:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000b38a:	055f      	lsls	r7, r3, #21
9000b38c:	d528      	bpl.n	9000b3e0 <HAL_RCCEx_PeriphCLKConfig+0x11c>
    switch (PeriphClkInit->Sai4AClockSelection)
9000b38e:	f8d4 10a8 	ldr.w	r1, [r4, #168]	@ 0xa8
9000b392:	f5b1 0f80 	cmp.w	r1, #4194304	@ 0x400000
9000b396:	f000 855c 	beq.w	9000be52 <HAL_RCCEx_PeriphCLKConfig+0xb8e>
9000b39a:	f200 8652 	bhi.w	9000c042 <HAL_RCCEx_PeriphCLKConfig+0xd7e>
9000b39e:	2900      	cmp	r1, #0
9000b3a0:	f000 858b 	beq.w	9000beba <HAL_RCCEx_PeriphCLKConfig+0xbf6>
9000b3a4:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000b3a8:	f040 8653 	bne.w	9000c052 <HAL_RCCEx_PeriphCLKConfig+0xd8e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b3ac:	497a      	ldr	r1, [pc, #488]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b3ae:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b3b0:	f001 0103 	and.w	r1, r1, #3
9000b3b4:	2903      	cmp	r1, #3
9000b3b6:	f000 864c 	beq.w	9000c052 <HAL_RCCEx_PeriphCLKConfig+0xd8e>
9000b3ba:	2100      	movs	r1, #0
9000b3bc:	f104 0008 	add.w	r0, r4, #8
9000b3c0:	f7ff fea0 	bl	9000b104 <RCCEx_PLL2_Config.part.0>
9000b3c4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000b3c6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b3ca:	2d00      	cmp	r5, #0
9000b3cc:	f040 8553 	bne.w	9000be76 <HAL_RCCEx_PeriphCLKConfig+0xbb2>
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
9000b3d0:	4f71      	ldr	r7, [pc, #452]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b3d2:	f8d4 00a8 	ldr.w	r0, [r4, #168]	@ 0xa8
9000b3d6:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b3d8:	f421 0160 	bic.w	r1, r1, #14680064	@ 0xe00000
9000b3dc:	4301      	orrs	r1, r0
9000b3de:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000b3e0:	0518      	lsls	r0, r3, #20
9000b3e2:	d528      	bpl.n	9000b436 <HAL_RCCEx_PeriphCLKConfig+0x172>
    switch (PeriphClkInit->Sai4BClockSelection)
9000b3e4:	f8d4 10ac 	ldr.w	r1, [r4, #172]	@ 0xac
9000b3e8:	f1b1 7f00 	cmp.w	r1, #33554432	@ 0x2000000
9000b3ec:	f000 8546 	beq.w	9000be7c <HAL_RCCEx_PeriphCLKConfig+0xbb8>
9000b3f0:	f200 8614 	bhi.w	9000c01c <HAL_RCCEx_PeriphCLKConfig+0xd58>
9000b3f4:	2900      	cmp	r1, #0
9000b3f6:	f000 84d6 	beq.w	9000bda6 <HAL_RCCEx_PeriphCLKConfig+0xae2>
9000b3fa:	f1b1 7f80 	cmp.w	r1, #16777216	@ 0x1000000
9000b3fe:	f040 8615 	bne.w	9000c02c <HAL_RCCEx_PeriphCLKConfig+0xd68>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b402:	4965      	ldr	r1, [pc, #404]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b404:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b406:	f001 0103 	and.w	r1, r1, #3
9000b40a:	2903      	cmp	r1, #3
9000b40c:	f000 860e 	beq.w	9000c02c <HAL_RCCEx_PeriphCLKConfig+0xd68>
9000b410:	2100      	movs	r1, #0
9000b412:	f104 0008 	add.w	r0, r4, #8
9000b416:	f7ff fe75 	bl	9000b104 <RCCEx_PLL2_Config.part.0>
9000b41a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000b41c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b420:	2d00      	cmp	r5, #0
9000b422:	f040 84c8 	bne.w	9000bdb6 <HAL_RCCEx_PeriphCLKConfig+0xaf2>
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
9000b426:	4f5c      	ldr	r7, [pc, #368]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b428:	f8d4 00ac 	ldr.w	r0, [r4, #172]	@ 0xac
9000b42c:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b42e:	f021 61e0 	bic.w	r1, r1, #117440512	@ 0x7000000
9000b432:	4301      	orrs	r1, r0
9000b434:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000b436:	0199      	lsls	r1, r3, #6
9000b438:	d518      	bpl.n	9000b46c <HAL_RCCEx_PeriphCLKConfig+0x1a8>
    switch (PeriphClkInit->QspiClockSelection)
9000b43a:	6ce1      	ldr	r1, [r4, #76]	@ 0x4c
9000b43c:	2920      	cmp	r1, #32
9000b43e:	f000 8434 	beq.w	9000bcaa <HAL_RCCEx_PeriphCLKConfig+0x9e6>
9000b442:	f200 8615 	bhi.w	9000c070 <HAL_RCCEx_PeriphCLKConfig+0xdac>
9000b446:	b139      	cbz	r1, 9000b458 <HAL_RCCEx_PeriphCLKConfig+0x194>
9000b448:	2910      	cmp	r1, #16
9000b44a:	f040 8614 	bne.w	9000c076 <HAL_RCCEx_PeriphCLKConfig+0xdb2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000b44e:	4852      	ldr	r0, [pc, #328]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b450:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000b452:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000b456:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000b458:	2d00      	cmp	r5, #0
9000b45a:	f040 83bf 	bne.w	9000bbdc <HAL_RCCEx_PeriphCLKConfig+0x918>
      __HAL_RCC_QSPI_CONFIG(PeriphClkInit->QspiClockSelection);
9000b45e:	4f4e      	ldr	r7, [pc, #312]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b460:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
9000b462:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000b464:	f021 0130 	bic.w	r1, r1, #48	@ 0x30
9000b468:	4301      	orrs	r1, r0
9000b46a:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000b46c:	04df      	lsls	r7, r3, #19
9000b46e:	d526      	bpl.n	9000b4be <HAL_RCCEx_PeriphCLKConfig+0x1fa>
    switch (PeriphClkInit->Spi123ClockSelection)
9000b470:	6e21      	ldr	r1, [r4, #96]	@ 0x60
9000b472:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000b476:	f000 84a1 	beq.w	9000bdbc <HAL_RCCEx_PeriphCLKConfig+0xaf8>
9000b47a:	f200 85c3 	bhi.w	9000c004 <HAL_RCCEx_PeriphCLKConfig+0xd40>
9000b47e:	2900      	cmp	r1, #0
9000b480:	f000 8486 	beq.w	9000bd90 <HAL_RCCEx_PeriphCLKConfig+0xacc>
9000b484:	f5b1 5f80 	cmp.w	r1, #4096	@ 0x1000
9000b488:	f040 85c4 	bne.w	9000c014 <HAL_RCCEx_PeriphCLKConfig+0xd50>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b48c:	4942      	ldr	r1, [pc, #264]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b48e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b490:	f001 0103 	and.w	r1, r1, #3
9000b494:	2903      	cmp	r1, #3
9000b496:	f000 85bd 	beq.w	9000c014 <HAL_RCCEx_PeriphCLKConfig+0xd50>
9000b49a:	2100      	movs	r1, #0
9000b49c:	f104 0008 	add.w	r0, r4, #8
9000b4a0:	f7ff fe30 	bl	9000b104 <RCCEx_PLL2_Config.part.0>
9000b4a4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000b4a6:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b4aa:	2d00      	cmp	r5, #0
9000b4ac:	f040 8478 	bne.w	9000bda0 <HAL_RCCEx_PeriphCLKConfig+0xadc>
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
9000b4b0:	4f39      	ldr	r7, [pc, #228]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b4b2:	6e20      	ldr	r0, [r4, #96]	@ 0x60
9000b4b4:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000b4b6:	f421 41e0 	bic.w	r1, r1, #28672	@ 0x7000
9000b4ba:	4301      	orrs	r1, r0
9000b4bc:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000b4be:	0498      	lsls	r0, r3, #18
9000b4c0:	d524      	bpl.n	9000b50c <HAL_RCCEx_PeriphCLKConfig+0x248>
    switch (PeriphClkInit->Spi45ClockSelection)
9000b4c2:	6e61      	ldr	r1, [r4, #100]	@ 0x64
9000b4c4:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000b4c8:	f000 8415 	beq.w	9000bcf6 <HAL_RCCEx_PeriphCLKConfig+0xa32>
9000b4cc:	f200 8556 	bhi.w	9000bf7c <HAL_RCCEx_PeriphCLKConfig+0xcb8>
9000b4d0:	b191      	cbz	r1, 9000b4f8 <HAL_RCCEx_PeriphCLKConfig+0x234>
9000b4d2:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000b4d6:	f040 855b 	bne.w	9000bf90 <HAL_RCCEx_PeriphCLKConfig+0xccc>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b4da:	492f      	ldr	r1, [pc, #188]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b4dc:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b4de:	f001 0103 	and.w	r1, r1, #3
9000b4e2:	2903      	cmp	r1, #3
9000b4e4:	f000 8554 	beq.w	9000bf90 <HAL_RCCEx_PeriphCLKConfig+0xccc>
9000b4e8:	2101      	movs	r1, #1
9000b4ea:	f104 0008 	add.w	r0, r4, #8
9000b4ee:	f7ff fe09 	bl	9000b104 <RCCEx_PLL2_Config.part.0>
9000b4f2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000b4f4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b4f8:	2d00      	cmp	r5, #0
9000b4fa:	f040 838f 	bne.w	9000bc1c <HAL_RCCEx_PeriphCLKConfig+0x958>
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
9000b4fe:	4f26      	ldr	r7, [pc, #152]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b500:	6e60      	ldr	r0, [r4, #100]	@ 0x64
9000b502:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000b504:	f421 21e0 	bic.w	r1, r1, #458752	@ 0x70000
9000b508:	4301      	orrs	r1, r0
9000b50a:	6539      	str	r1, [r7, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000b50c:	0459      	lsls	r1, r3, #17
9000b50e:	d526      	bpl.n	9000b55e <HAL_RCCEx_PeriphCLKConfig+0x29a>
    switch (PeriphClkInit->Spi6ClockSelection)
9000b510:	f8d4 10b0 	ldr.w	r1, [r4, #176]	@ 0xb0
9000b514:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000b518:	f000 8426 	beq.w	9000bd68 <HAL_RCCEx_PeriphCLKConfig+0xaa4>
9000b51c:	f200 854a 	bhi.w	9000bfb4 <HAL_RCCEx_PeriphCLKConfig+0xcf0>
9000b520:	b191      	cbz	r1, 9000b548 <HAL_RCCEx_PeriphCLKConfig+0x284>
9000b522:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000b526:	f040 854f 	bne.w	9000bfc8 <HAL_RCCEx_PeriphCLKConfig+0xd04>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b52a:	491b      	ldr	r1, [pc, #108]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b52c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b52e:	f001 0103 	and.w	r1, r1, #3
9000b532:	2903      	cmp	r1, #3
9000b534:	f000 8548 	beq.w	9000bfc8 <HAL_RCCEx_PeriphCLKConfig+0xd04>
9000b538:	2101      	movs	r1, #1
9000b53a:	f104 0008 	add.w	r0, r4, #8
9000b53e:	f7ff fde1 	bl	9000b104 <RCCEx_PLL2_Config.part.0>
9000b542:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000b544:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b548:	2d00      	cmp	r5, #0
9000b54a:	f040 835b 	bne.w	9000bc04 <HAL_RCCEx_PeriphCLKConfig+0x940>
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
9000b54e:	4f12      	ldr	r7, [pc, #72]	@ (9000b598 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
9000b550:	f8d4 00b0 	ldr.w	r0, [r4, #176]	@ 0xb0
9000b554:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b556:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000b55a:	4301      	orrs	r1, r0
9000b55c:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000b55e:	041f      	lsls	r7, r3, #16
9000b560:	d50d      	bpl.n	9000b57e <HAL_RCCEx_PeriphCLKConfig+0x2ba>
    switch (PeriphClkInit->FdcanClockSelection)
9000b562:	6f21      	ldr	r1, [r4, #112]	@ 0x70
9000b564:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000b568:	f000 8260 	beq.w	9000ba2c <HAL_RCCEx_PeriphCLKConfig+0x768>
9000b56c:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000b570:	f000 8591 	beq.w	9000c096 <HAL_RCCEx_PeriphCLKConfig+0xdd2>
9000b574:	2900      	cmp	r1, #0
9000b576:	f000 825e 	beq.w	9000ba36 <HAL_RCCEx_PeriphCLKConfig+0x772>
      status = ret;
9000b57a:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000b57c:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000b57e:	01d8      	lsls	r0, r3, #7
9000b580:	d515      	bpl.n	9000b5ae <HAL_RCCEx_PeriphCLKConfig+0x2ea>
    switch (PeriphClkInit->FmcClockSelection)
9000b582:	6ca1      	ldr	r1, [r4, #72]	@ 0x48
9000b584:	2903      	cmp	r1, #3
9000b586:	f200 85b4 	bhi.w	9000c0f2 <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000b58a:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b58e:	000c      	.short	0x000c
9000b590:	03a10007 	.word	0x03a10007
9000b594:	000c      	.short	0x000c
9000b596:	bf00      	nop
9000b598:	58024400 	.word	0x58024400
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000b59c:	4836      	ldr	r0, [pc, #216]	@ (9000b678 <HAL_RCCEx_PeriphCLKConfig+0x3b4>)
9000b59e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000b5a0:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000b5a4:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000b5a6:	2d00      	cmp	r5, #0
9000b5a8:	f000 831a 	beq.w	9000bbe0 <HAL_RCCEx_PeriphCLKConfig+0x91c>
      status = ret;
9000b5ac:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000b5ae:	0259      	lsls	r1, r3, #9
9000b5b0:	f100 827a 	bmi.w	9000baa8 <HAL_RCCEx_PeriphCLKConfig+0x7e4>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000b5b4:	07df      	lsls	r7, r3, #31
9000b5b6:	d52f      	bpl.n	9000b618 <HAL_RCCEx_PeriphCLKConfig+0x354>
    switch (PeriphClkInit->Usart16ClockSelection)
9000b5b8:	6fe1      	ldr	r1, [r4, #124]	@ 0x7c
9000b5ba:	2928      	cmp	r1, #40	@ 0x28
9000b5bc:	d82a      	bhi.n	9000b614 <HAL_RCCEx_PeriphCLKConfig+0x350>
9000b5be:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b5c2:	0257      	.short	0x0257
9000b5c4:	00290029 	.word	0x00290029
9000b5c8:	00290029 	.word	0x00290029
9000b5cc:	00290029 	.word	0x00290029
9000b5d0:	02480029 	.word	0x02480029
9000b5d4:	00290029 	.word	0x00290029
9000b5d8:	00290029 	.word	0x00290029
9000b5dc:	00290029 	.word	0x00290029
9000b5e0:	04b90029 	.word	0x04b90029
9000b5e4:	00290029 	.word	0x00290029
9000b5e8:	00290029 	.word	0x00290029
9000b5ec:	00290029 	.word	0x00290029
9000b5f0:	02570029 	.word	0x02570029
9000b5f4:	00290029 	.word	0x00290029
9000b5f8:	00290029 	.word	0x00290029
9000b5fc:	00290029 	.word	0x00290029
9000b600:	02570029 	.word	0x02570029
9000b604:	00290029 	.word	0x00290029
9000b608:	00290029 	.word	0x00290029
9000b60c:	00290029 	.word	0x00290029
9000b610:	02570029 	.word	0x02570029
      status = ret;
9000b614:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000b616:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000b618:	0798      	lsls	r0, r3, #30
9000b61a:	d51e      	bpl.n	9000b65a <HAL_RCCEx_PeriphCLKConfig+0x396>
    switch (PeriphClkInit->Usart234578ClockSelection)
9000b61c:	6fa1      	ldr	r1, [r4, #120]	@ 0x78
9000b61e:	2905      	cmp	r1, #5
9000b620:	f200 8550 	bhi.w	9000c0c4 <HAL_RCCEx_PeriphCLKConfig+0xe00>
9000b624:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b628:	00060015 	.word	0x00060015
9000b62c:	00150471 	.word	0x00150471
9000b630:	00150015 	.word	0x00150015
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b634:	4910      	ldr	r1, [pc, #64]	@ (9000b678 <HAL_RCCEx_PeriphCLKConfig+0x3b4>)
9000b636:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b638:	f001 0103 	and.w	r1, r1, #3
9000b63c:	2903      	cmp	r1, #3
9000b63e:	f000 8541 	beq.w	9000c0c4 <HAL_RCCEx_PeriphCLKConfig+0xe00>
9000b642:	2101      	movs	r1, #1
9000b644:	f104 0008 	add.w	r0, r4, #8
9000b648:	f7ff fd5c 	bl	9000b104 <RCCEx_PLL2_Config.part.0>
9000b64c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000b64e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b652:	2d00      	cmp	r5, #0
9000b654:	f000 82cc 	beq.w	9000bbf0 <HAL_RCCEx_PeriphCLKConfig+0x92c>
      status = ret;
9000b658:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000b65a:	0759      	lsls	r1, r3, #29
9000b65c:	d521      	bpl.n	9000b6a2 <HAL_RCCEx_PeriphCLKConfig+0x3de>
    switch (PeriphClkInit->Lpuart1ClockSelection)
9000b65e:	f8d4 1094 	ldr.w	r1, [r4, #148]	@ 0x94
9000b662:	2905      	cmp	r1, #5
9000b664:	f200 852a 	bhi.w	9000c0bc <HAL_RCCEx_PeriphCLKConfig+0xdf8>
9000b668:	e8df f011 	tbh	[pc, r1, lsl #1]
9000b66c:	00080017 	.word	0x00080017
9000b670:	0017043c 	.word	0x0017043c
9000b674:	00170017 	.word	0x00170017
9000b678:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b67c:	49ae      	ldr	r1, [pc, #696]	@ (9000b938 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b67e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b680:	f001 0103 	and.w	r1, r1, #3
9000b684:	2903      	cmp	r1, #3
9000b686:	f000 8519 	beq.w	9000c0bc <HAL_RCCEx_PeriphCLKConfig+0xdf8>
9000b68a:	2101      	movs	r1, #1
9000b68c:	f104 0008 	add.w	r0, r4, #8
9000b690:	f7ff fd38 	bl	9000b104 <RCCEx_PLL2_Config.part.0>
9000b694:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000b696:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b69a:	2d00      	cmp	r5, #0
9000b69c:	f000 82c2 	beq.w	9000bc24 <HAL_RCCEx_PeriphCLKConfig+0x960>
      status = ret;
9000b6a0:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000b6a2:	069f      	lsls	r7, r3, #26
9000b6a4:	d526      	bpl.n	9000b6f4 <HAL_RCCEx_PeriphCLKConfig+0x430>
    switch (PeriphClkInit->Lptim1ClockSelection)
9000b6a6:	f8d4 1090 	ldr.w	r1, [r4, #144]	@ 0x90
9000b6aa:	f1b1 5f00 	cmp.w	r1, #536870912	@ 0x20000000
9000b6ae:	f000 82c6 	beq.w	9000bc3e <HAL_RCCEx_PeriphCLKConfig+0x97a>
9000b6b2:	f200 8455 	bhi.w	9000bf60 <HAL_RCCEx_PeriphCLKConfig+0xc9c>
9000b6b6:	b191      	cbz	r1, 9000b6de <HAL_RCCEx_PeriphCLKConfig+0x41a>
9000b6b8:	f1b1 5f80 	cmp.w	r1, #268435456	@ 0x10000000
9000b6bc:	f040 845a 	bne.w	9000bf74 <HAL_RCCEx_PeriphCLKConfig+0xcb0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b6c0:	499d      	ldr	r1, [pc, #628]	@ (9000b938 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b6c2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b6c4:	f001 0103 	and.w	r1, r1, #3
9000b6c8:	2903      	cmp	r1, #3
9000b6ca:	f000 8453 	beq.w	9000bf74 <HAL_RCCEx_PeriphCLKConfig+0xcb0>
9000b6ce:	2100      	movs	r1, #0
9000b6d0:	f104 0008 	add.w	r0, r4, #8
9000b6d4:	f7ff fd16 	bl	9000b104 <RCCEx_PLL2_Config.part.0>
9000b6d8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000b6da:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b6de:	2d00      	cmp	r5, #0
9000b6e0:	f040 828e 	bne.w	9000bc00 <HAL_RCCEx_PeriphCLKConfig+0x93c>
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
9000b6e4:	4f94      	ldr	r7, [pc, #592]	@ (9000b938 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b6e6:	f8d4 0090 	ldr.w	r0, [r4, #144]	@ 0x90
9000b6ea:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000b6ec:	f021 41e0 	bic.w	r1, r1, #1879048192	@ 0x70000000
9000b6f0:	4301      	orrs	r1, r0
9000b6f2:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000b6f4:	0658      	lsls	r0, r3, #25
9000b6f6:	d526      	bpl.n	9000b746 <HAL_RCCEx_PeriphCLKConfig+0x482>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000b6f8:	f8d4 109c 	ldr.w	r1, [r4, #156]	@ 0x9c
9000b6fc:	f5b1 6f00 	cmp.w	r1, #2048	@ 0x800
9000b700:	f000 82af 	beq.w	9000bc62 <HAL_RCCEx_PeriphCLKConfig+0x99e>
9000b704:	f200 8464 	bhi.w	9000bfd0 <HAL_RCCEx_PeriphCLKConfig+0xd0c>
9000b708:	b191      	cbz	r1, 9000b730 <HAL_RCCEx_PeriphCLKConfig+0x46c>
9000b70a:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
9000b70e:	f040 8469 	bne.w	9000bfe4 <HAL_RCCEx_PeriphCLKConfig+0xd20>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b712:	4989      	ldr	r1, [pc, #548]	@ (9000b938 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b714:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b716:	f001 0103 	and.w	r1, r1, #3
9000b71a:	2903      	cmp	r1, #3
9000b71c:	f000 8462 	beq.w	9000bfe4 <HAL_RCCEx_PeriphCLKConfig+0xd20>
9000b720:	2100      	movs	r1, #0
9000b722:	f104 0008 	add.w	r0, r4, #8
9000b726:	f7ff fced 	bl	9000b104 <RCCEx_PLL2_Config.part.0>
9000b72a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000b72c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b730:	2d00      	cmp	r5, #0
9000b732:	f040 8269 	bne.w	9000bc08 <HAL_RCCEx_PeriphCLKConfig+0x944>
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
9000b736:	4f80      	ldr	r7, [pc, #512]	@ (9000b938 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b738:	f8d4 009c 	ldr.w	r0, [r4, #156]	@ 0x9c
9000b73c:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b73e:	f421 51e0 	bic.w	r1, r1, #7168	@ 0x1c00
9000b742:	4301      	orrs	r1, r0
9000b744:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000b746:	0619      	lsls	r1, r3, #24
9000b748:	d526      	bpl.n	9000b798 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000b74a:	f8d4 10a0 	ldr.w	r1, [r4, #160]	@ 0xa0
9000b74e:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000b752:	f000 8298 	beq.w	9000bc86 <HAL_RCCEx_PeriphCLKConfig+0x9c2>
9000b756:	f200 841f 	bhi.w	9000bf98 <HAL_RCCEx_PeriphCLKConfig+0xcd4>
9000b75a:	b191      	cbz	r1, 9000b782 <HAL_RCCEx_PeriphCLKConfig+0x4be>
9000b75c:	f5b1 5f00 	cmp.w	r1, #8192	@ 0x2000
9000b760:	f040 8424 	bne.w	9000bfac <HAL_RCCEx_PeriphCLKConfig+0xce8>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b764:	4974      	ldr	r1, [pc, #464]	@ (9000b938 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b766:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b768:	f001 0103 	and.w	r1, r1, #3
9000b76c:	2903      	cmp	r1, #3
9000b76e:	f000 841d 	beq.w	9000bfac <HAL_RCCEx_PeriphCLKConfig+0xce8>
9000b772:	2100      	movs	r1, #0
9000b774:	f104 0008 	add.w	r0, r4, #8
9000b778:	f7ff fcc4 	bl	9000b104 <RCCEx_PLL2_Config.part.0>
9000b77c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000b77e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b782:	2d00      	cmp	r5, #0
9000b784:	f040 8244 	bne.w	9000bc10 <HAL_RCCEx_PeriphCLKConfig+0x94c>
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
9000b788:	4f6b      	ldr	r7, [pc, #428]	@ (9000b938 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b78a:	f8d4 00a0 	ldr.w	r0, [r4, #160]	@ 0xa0
9000b78e:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b790:	f421 4160 	bic.w	r1, r1, #57344	@ 0xe000
9000b794:	4301      	orrs	r1, r0
9000b796:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000b798:	071f      	lsls	r7, r3, #28
9000b79a:	d50b      	bpl.n	9000b7b4 <HAL_RCCEx_PeriphCLKConfig+0x4f0>
    if ((PeriphClkInit->I2c123ClockSelection) == RCC_I2C123CLKSOURCE_PLL3)
9000b79c:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
9000b7a0:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000b7a4:	f000 81d4 	beq.w	9000bb50 <HAL_RCCEx_PeriphCLKConfig+0x88c>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000b7a8:	4f63      	ldr	r7, [pc, #396]	@ (9000b938 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b7aa:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000b7ac:	f421 5140 	bic.w	r1, r1, #12288	@ 0x3000
9000b7b0:	4301      	orrs	r1, r0
9000b7b2:	6579      	str	r1, [r7, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000b7b4:	06d8      	lsls	r0, r3, #27
9000b7b6:	d50b      	bpl.n	9000b7d0 <HAL_RCCEx_PeriphCLKConfig+0x50c>
    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
9000b7b8:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
9000b7bc:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
9000b7c0:	f000 81db 	beq.w	9000bb7a <HAL_RCCEx_PeriphCLKConfig+0x8b6>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000b7c4:	4f5c      	ldr	r7, [pc, #368]	@ (9000b938 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b7c6:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b7c8:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
9000b7cc:	4301      	orrs	r1, r0
9000b7ce:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000b7d0:	0319      	lsls	r1, r3, #12
9000b7d2:	d524      	bpl.n	9000b81e <HAL_RCCEx_PeriphCLKConfig+0x55a>
    switch (PeriphClkInit->AdcClockSelection)
9000b7d4:	f8d4 10a4 	ldr.w	r1, [r4, #164]	@ 0xa4
9000b7d8:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000b7dc:	f000 82b1 	beq.w	9000bd42 <HAL_RCCEx_PeriphCLKConfig+0xa7e>
9000b7e0:	f5b1 3f00 	cmp.w	r1, #131072	@ 0x20000
9000b7e4:	d010      	beq.n	9000b808 <HAL_RCCEx_PeriphCLKConfig+0x544>
9000b7e6:	2900      	cmp	r1, #0
9000b7e8:	f040 8130 	bne.w	9000ba4c <HAL_RCCEx_PeriphCLKConfig+0x788>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b7ec:	4852      	ldr	r0, [pc, #328]	@ (9000b938 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b7ee:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9000b7f0:	f000 0003 	and.w	r0, r0, #3
9000b7f4:	2803      	cmp	r0, #3
9000b7f6:	f000 8129 	beq.w	9000ba4c <HAL_RCCEx_PeriphCLKConfig+0x788>
9000b7fa:	f104 0008 	add.w	r0, r4, #8
9000b7fe:	f7ff fc81 	bl	9000b104 <RCCEx_PLL2_Config.part.0>
9000b802:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000b804:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b808:	2d00      	cmp	r5, #0
9000b80a:	f040 81ff 	bne.w	9000bc0c <HAL_RCCEx_PeriphCLKConfig+0x948>
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
9000b80e:	4f4a      	ldr	r7, [pc, #296]	@ (9000b938 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b810:	f8d4 00a4 	ldr.w	r0, [r4, #164]	@ 0xa4
9000b814:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000b816:	f421 3140 	bic.w	r1, r1, #196608	@ 0x30000
9000b81a:	4301      	orrs	r1, r0
9000b81c:	65b9      	str	r1, [r7, #88]	@ 0x58
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000b81e:	035f      	lsls	r7, r3, #13
9000b820:	d50f      	bpl.n	9000b842 <HAL_RCCEx_PeriphCLKConfig+0x57e>
    switch (PeriphClkInit->UsbClockSelection)
9000b822:	f8d4 1088 	ldr.w	r1, [r4, #136]	@ 0x88
9000b826:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
9000b82a:	f000 8277 	beq.w	9000bd1c <HAL_RCCEx_PeriphCLKConfig+0xa58>
9000b82e:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000b832:	f000 812d 	beq.w	9000ba90 <HAL_RCCEx_PeriphCLKConfig+0x7cc>
9000b836:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
9000b83a:	f000 8124 	beq.w	9000ba86 <HAL_RCCEx_PeriphCLKConfig+0x7c2>
      status = ret;
9000b83e:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000b840:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000b842:	03d8      	lsls	r0, r3, #15
9000b844:	d520      	bpl.n	9000b888 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
    switch (PeriphClkInit->SdmmcClockSelection)
9000b846:	6d21      	ldr	r1, [r4, #80]	@ 0x50
9000b848:	2900      	cmp	r1, #0
9000b84a:	f000 81aa 	beq.w	9000bba2 <HAL_RCCEx_PeriphCLKConfig+0x8de>
9000b84e:	f5b1 3f80 	cmp.w	r1, #65536	@ 0x10000
9000b852:	f040 80e8 	bne.w	9000ba26 <HAL_RCCEx_PeriphCLKConfig+0x762>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b856:	4938      	ldr	r1, [pc, #224]	@ (9000b938 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b858:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b85a:	f001 0103 	and.w	r1, r1, #3
9000b85e:	2903      	cmp	r1, #3
9000b860:	f000 80e1 	beq.w	9000ba26 <HAL_RCCEx_PeriphCLKConfig+0x762>
9000b864:	2102      	movs	r1, #2
9000b866:	f104 0008 	add.w	r0, r4, #8
9000b86a:	f7ff fc4b 	bl	9000b104 <RCCEx_PLL2_Config.part.0>
9000b86e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000b870:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000b874:	2d00      	cmp	r5, #0
9000b876:	f040 819c 	bne.w	9000bbb2 <HAL_RCCEx_PeriphCLKConfig+0x8ee>
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
9000b87a:	4f2f      	ldr	r7, [pc, #188]	@ (9000b938 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b87c:	6d20      	ldr	r0, [r4, #80]	@ 0x50
9000b87e:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000b880:	f421 3180 	bic.w	r1, r1, #65536	@ 0x10000
9000b884:	4301      	orrs	r1, r0
9000b886:	64f9      	str	r1, [r7, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
9000b888:	0099      	lsls	r1, r3, #2
9000b88a:	d50e      	bpl.n	9000b8aa <HAL_RCCEx_PeriphCLKConfig+0x5e6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b88c:	492a      	ldr	r1, [pc, #168]	@ (9000b938 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b88e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000b890:	f001 0103 	and.w	r1, r1, #3
9000b894:	2903      	cmp	r1, #3
9000b896:	d007      	beq.n	9000b8a8 <HAL_RCCEx_PeriphCLKConfig+0x5e4>
9000b898:	2102      	movs	r1, #2
9000b89a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000b89e:	f7ff fca1 	bl	9000b1e4 <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000b8a2:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000b8a6:	b100      	cbz	r0, 9000b8aa <HAL_RCCEx_PeriphCLKConfig+0x5e6>
      status = HAL_ERROR;
9000b8a8:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
9000b8aa:	039f      	lsls	r7, r3, #14
9000b8ac:	f100 80ab 	bmi.w	9000ba06 <HAL_RCCEx_PeriphCLKConfig+0x742>
      status = HAL_ERROR;
9000b8b0:	4635      	mov	r5, r6
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
9000b8b2:	02d8      	lsls	r0, r3, #11
9000b8b4:	d506      	bpl.n	9000b8c4 <HAL_RCCEx_PeriphCLKConfig+0x600>
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
9000b8b6:	4820      	ldr	r0, [pc, #128]	@ (9000b938 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b8b8:	6f66      	ldr	r6, [r4, #116]	@ 0x74
9000b8ba:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000b8bc:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
9000b8c0:	4331      	orrs	r1, r6
9000b8c2:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_HRTIM1) == RCC_PERIPHCLK_HRTIM1)
9000b8c4:	00d9      	lsls	r1, r3, #3
9000b8c6:	d507      	bpl.n	9000b8d8 <HAL_RCCEx_PeriphCLKConfig+0x614>
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
9000b8c8:	481b      	ldr	r0, [pc, #108]	@ (9000b938 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b8ca:	f8d4 60b8 	ldr.w	r6, [r4, #184]	@ 0xb8
9000b8ce:	6901      	ldr	r1, [r0, #16]
9000b8d0:	f421 4180 	bic.w	r1, r1, #16384	@ 0x4000
9000b8d4:	4331      	orrs	r1, r6
9000b8d6:	6101      	str	r1, [r0, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
9000b8d8:	029f      	lsls	r7, r3, #10
9000b8da:	d506      	bpl.n	9000b8ea <HAL_RCCEx_PeriphCLKConfig+0x626>
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
9000b8dc:	4816      	ldr	r0, [pc, #88]	@ (9000b938 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b8de:	6ee6      	ldr	r6, [r4, #108]	@ 0x6c
9000b8e0:	6d01      	ldr	r1, [r0, #80]	@ 0x50
9000b8e2:	f021 7180 	bic.w	r1, r1, #16777216	@ 0x1000000
9000b8e6:	4331      	orrs	r1, r6
9000b8e8:	6501      	str	r1, [r0, #80]	@ 0x50
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
9000b8ea:	005e      	lsls	r6, r3, #1
9000b8ec:	d509      	bpl.n	9000b902 <HAL_RCCEx_PeriphCLKConfig+0x63e>
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
9000b8ee:	4912      	ldr	r1, [pc, #72]	@ (9000b938 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b8f0:	6908      	ldr	r0, [r1, #16]
9000b8f2:	f420 4000 	bic.w	r0, r0, #32768	@ 0x8000
9000b8f6:	6108      	str	r0, [r1, #16]
9000b8f8:	6908      	ldr	r0, [r1, #16]
9000b8fa:	f8d4 60bc 	ldr.w	r6, [r4, #188]	@ 0xbc
9000b8fe:	4330      	orrs	r0, r6
9000b900:	6108      	str	r0, [r1, #16]
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
9000b902:	2b00      	cmp	r3, #0
9000b904:	da06      	bge.n	9000b914 <HAL_RCCEx_PeriphCLKConfig+0x650>
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
9000b906:	480c      	ldr	r0, [pc, #48]	@ (9000b938 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b908:	6d66      	ldr	r6, [r4, #84]	@ 0x54
9000b90a:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
9000b90c:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000b910:	4331      	orrs	r1, r6
9000b912:	64c1      	str	r1, [r0, #76]	@ 0x4c
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
9000b914:	0218      	lsls	r0, r3, #8
9000b916:	d507      	bpl.n	9000b928 <HAL_RCCEx_PeriphCLKConfig+0x664>
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
9000b918:	4907      	ldr	r1, [pc, #28]	@ (9000b938 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b91a:	f8d4 008c 	ldr.w	r0, [r4, #140]	@ 0x8c
9000b91e:	6d4b      	ldr	r3, [r1, #84]	@ 0x54
9000b920:	f423 0340 	bic.w	r3, r3, #12582912	@ 0xc00000
9000b924:	4303      	orrs	r3, r0
9000b926:	654b      	str	r3, [r1, #84]	@ 0x54
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
9000b928:	07d1      	lsls	r1, r2, #31
9000b92a:	d511      	bpl.n	9000b950 <HAL_RCCEx_PeriphCLKConfig+0x68c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b92c:	4b02      	ldr	r3, [pc, #8]	@ (9000b938 <HAL_RCCEx_PeriphCLKConfig+0x674>)
9000b92e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000b930:	f003 0303 	and.w	r3, r3, #3
9000b934:	2b03      	cmp	r3, #3
9000b936:	e001      	b.n	9000b93c <HAL_RCCEx_PeriphCLKConfig+0x678>
9000b938:	58024400 	.word	0x58024400
9000b93c:	f000 835c 	beq.w	9000bff8 <HAL_RCCEx_PeriphCLKConfig+0xd34>
9000b940:	2100      	movs	r1, #0
9000b942:	f104 0008 	add.w	r0, r4, #8
9000b946:	f7ff fbdd 	bl	9000b104 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000b94a:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000b94c:	b100      	cbz	r0, 9000b950 <HAL_RCCEx_PeriphCLKConfig+0x68c>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
9000b94e:	4605      	mov	r5, r0
9000b950:	0793      	lsls	r3, r2, #30
9000b952:	d50e      	bpl.n	9000b972 <HAL_RCCEx_PeriphCLKConfig+0x6ae>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b954:	4baf      	ldr	r3, [pc, #700]	@ (9000bc14 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b956:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000b958:	f003 0303 	and.w	r3, r3, #3
9000b95c:	2b03      	cmp	r3, #3
9000b95e:	f000 834d 	beq.w	9000bffc <HAL_RCCEx_PeriphCLKConfig+0xd38>
9000b962:	2101      	movs	r1, #1
9000b964:	f104 0008 	add.w	r0, r4, #8
9000b968:	f7ff fbcc 	bl	9000b104 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000b96c:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000b96e:	b100      	cbz	r0, 9000b972 <HAL_RCCEx_PeriphCLKConfig+0x6ae>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
9000b970:	4605      	mov	r5, r0
9000b972:	0757      	lsls	r7, r2, #29
9000b974:	d50e      	bpl.n	9000b994 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b976:	4ba7      	ldr	r3, [pc, #668]	@ (9000bc14 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b978:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000b97a:	f003 0303 	and.w	r3, r3, #3
9000b97e:	2b03      	cmp	r3, #3
9000b980:	f000 833e 	beq.w	9000c000 <HAL_RCCEx_PeriphCLKConfig+0xd3c>
9000b984:	2102      	movs	r1, #2
9000b986:	f104 0008 	add.w	r0, r4, #8
9000b98a:	f7ff fbbb 	bl	9000b104 <RCCEx_PLL2_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000b98e:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000b990:	b100      	cbz	r0, 9000b994 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
9000b992:	4605      	mov	r5, r0
9000b994:	0716      	lsls	r6, r2, #28
9000b996:	d50e      	bpl.n	9000b9b6 <HAL_RCCEx_PeriphCLKConfig+0x6f2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b998:	4b9e      	ldr	r3, [pc, #632]	@ (9000bc14 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b99a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000b99c:	f003 0303 	and.w	r3, r3, #3
9000b9a0:	2b03      	cmp	r3, #3
9000b9a2:	f000 8323 	beq.w	9000bfec <HAL_RCCEx_PeriphCLKConfig+0xd28>
9000b9a6:	2100      	movs	r1, #0
9000b9a8:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000b9ac:	f7ff fc1a 	bl	9000b1e4 <RCCEx_PLL3_Config.part.0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000b9b0:	6862      	ldr	r2, [r4, #4]
    if (ret == HAL_OK)
9000b9b2:	b100      	cbz	r0, 9000b9b6 <HAL_RCCEx_PeriphCLKConfig+0x6f2>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
9000b9b4:	4605      	mov	r5, r0
9000b9b6:	06d0      	lsls	r0, r2, #27
9000b9b8:	d50f      	bpl.n	9000b9da <HAL_RCCEx_PeriphCLKConfig+0x716>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b9ba:	4b96      	ldr	r3, [pc, #600]	@ (9000bc14 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b9bc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000b9be:	f003 0303 	and.w	r3, r3, #3
9000b9c2:	2b03      	cmp	r3, #3
9000b9c4:	f000 8314 	beq.w	9000bff0 <HAL_RCCEx_PeriphCLKConfig+0xd2c>
9000b9c8:	2101      	movs	r1, #1
9000b9ca:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000b9ce:	f7ff fc09 	bl	9000b1e4 <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000b9d2:	2800      	cmp	r0, #0
9000b9d4:	f040 8359 	bne.w	9000c08a <HAL_RCCEx_PeriphCLKConfig+0xdc6>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000b9d8:	6862      	ldr	r2, [r4, #4]
9000b9da:	0693      	lsls	r3, r2, #26
9000b9dc:	d50e      	bpl.n	9000b9fc <HAL_RCCEx_PeriphCLKConfig+0x738>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000b9de:	4b8d      	ldr	r3, [pc, #564]	@ (9000bc14 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000b9e0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9000b9e2:	f003 0303 	and.w	r3, r3, #3
9000b9e6:	2b03      	cmp	r3, #3
9000b9e8:	f000 82b7 	beq.w	9000bf5a <HAL_RCCEx_PeriphCLKConfig+0xc96>
9000b9ec:	2102      	movs	r1, #2
9000b9ee:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000b9f2:	f7ff fbf7 	bl	9000b1e4 <RCCEx_PLL3_Config.part.0>
    if (ret == HAL_OK)
9000b9f6:	2800      	cmp	r0, #0
9000b9f8:	f040 82af 	bne.w	9000bf5a <HAL_RCCEx_PeriphCLKConfig+0xc96>
  if (status == HAL_OK)
9000b9fc:	1e28      	subs	r0, r5, #0
9000b9fe:	bf18      	it	ne
9000ba00:	2001      	movne	r0, #1
}
9000ba02:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->RngClockSelection)
9000ba06:	f8d4 1080 	ldr.w	r1, [r4, #128]	@ 0x80
9000ba0a:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000ba0e:	f000 80d2 	beq.w	9000bbb6 <HAL_RCCEx_PeriphCLKConfig+0x8f2>
9000ba12:	f240 8110 	bls.w	9000bc36 <HAL_RCCEx_PeriphCLKConfig+0x972>
9000ba16:	f421 7080 	bic.w	r0, r1, #256	@ 0x100
9000ba1a:	f5b0 7f00 	cmp.w	r0, #512	@ 0x200
9000ba1e:	f000 80cf 	beq.w	9000bbc0 <HAL_RCCEx_PeriphCLKConfig+0x8fc>
9000ba22:	2501      	movs	r5, #1
9000ba24:	e745      	b.n	9000b8b2 <HAL_RCCEx_PeriphCLKConfig+0x5ee>
      status = ret;
9000ba26:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000ba28:	4635      	mov	r5, r6
9000ba2a:	e72d      	b.n	9000b888 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ba2c:	4879      	ldr	r0, [pc, #484]	@ (9000bc14 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000ba2e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000ba30:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000ba34:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000ba36:	2d00      	cmp	r5, #0
9000ba38:	f040 80ce 	bne.w	9000bbd8 <HAL_RCCEx_PeriphCLKConfig+0x914>
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
9000ba3c:	4f75      	ldr	r7, [pc, #468]	@ (9000bc14 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000ba3e:	6f20      	ldr	r0, [r4, #112]	@ 0x70
9000ba40:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000ba42:	f021 5140 	bic.w	r1, r1, #805306368	@ 0x30000000
9000ba46:	4301      	orrs	r1, r0
9000ba48:	6539      	str	r1, [r7, #80]	@ 0x50
9000ba4a:	e598      	b.n	9000b57e <HAL_RCCEx_PeriphCLKConfig+0x2ba>
      status = ret;
9000ba4c:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000ba4e:	4635      	mov	r5, r6
9000ba50:	e6e5      	b.n	9000b81e <HAL_RCCEx_PeriphCLKConfig+0x55a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000ba52:	4970      	ldr	r1, [pc, #448]	@ (9000bc14 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000ba54:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000ba56:	f001 0103 	and.w	r1, r1, #3
9000ba5a:	2903      	cmp	r1, #3
9000ba5c:	f43f adda 	beq.w	9000b614 <HAL_RCCEx_PeriphCLKConfig+0x350>
9000ba60:	2101      	movs	r1, #1
9000ba62:	f104 0008 	add.w	r0, r4, #8
9000ba66:	f7ff fb4d 	bl	9000b104 <RCCEx_PLL2_Config.part.0>
9000ba6a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000ba6c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000ba70:	2d00      	cmp	r5, #0
9000ba72:	f040 80d5 	bne.w	9000bc20 <HAL_RCCEx_PeriphCLKConfig+0x95c>
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
9000ba76:	4f67      	ldr	r7, [pc, #412]	@ (9000bc14 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000ba78:	6fe0      	ldr	r0, [r4, #124]	@ 0x7c
9000ba7a:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000ba7c:	f021 0138 	bic.w	r1, r1, #56	@ 0x38
9000ba80:	4301      	orrs	r1, r0
9000ba82:	6579      	str	r1, [r7, #84]	@ 0x54
9000ba84:	e5c8      	b.n	9000b618 <HAL_RCCEx_PeriphCLKConfig+0x354>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000ba86:	4863      	ldr	r0, [pc, #396]	@ (9000bc14 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000ba88:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000ba8a:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000ba8e:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000ba90:	2d00      	cmp	r5, #0
9000ba92:	f040 809f 	bne.w	9000bbd4 <HAL_RCCEx_PeriphCLKConfig+0x910>
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
9000ba96:	4f5f      	ldr	r7, [pc, #380]	@ (9000bc14 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000ba98:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
9000ba9c:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000ba9e:	f421 1140 	bic.w	r1, r1, #3145728	@ 0x300000
9000baa2:	4301      	orrs	r1, r0
9000baa4:	6579      	str	r1, [r7, #84]	@ 0x54
9000baa6:	e6cc      	b.n	9000b842 <HAL_RCCEx_PeriphCLKConfig+0x57e>
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
9000baa8:	4f5b      	ldr	r7, [pc, #364]	@ (9000bc18 <HAL_RCCEx_PeriphCLKConfig+0x954>)
9000baaa:	683b      	ldr	r3, [r7, #0]
9000baac:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
9000bab0:	603b      	str	r3, [r7, #0]
    tickstart = HAL_GetTick();
9000bab2:	f7fb f9d9 	bl	90006e68 <HAL_GetTick>
9000bab6:	4680      	mov	r8, r0
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000bab8:	e006      	b.n	9000bac8 <HAL_RCCEx_PeriphCLKConfig+0x804>
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
9000baba:	f7fb f9d5 	bl	90006e68 <HAL_GetTick>
9000babe:	eba0 0008 	sub.w	r0, r0, r8
9000bac2:	2864      	cmp	r0, #100	@ 0x64
9000bac4:	f200 82db 	bhi.w	9000c07e <HAL_RCCEx_PeriphCLKConfig+0xdba>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
9000bac8:	683b      	ldr	r3, [r7, #0]
9000baca:	05da      	lsls	r2, r3, #23
9000bacc:	d5f5      	bpl.n	9000baba <HAL_RCCEx_PeriphCLKConfig+0x7f6>
    if (ret == HAL_OK)
9000bace:	2d00      	cmp	r5, #0
9000bad0:	f040 82d6 	bne.w	9000c080 <HAL_RCCEx_PeriphCLKConfig+0xdbc>
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
9000bad4:	4a4f      	ldr	r2, [pc, #316]	@ (9000bc14 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bad6:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000bada:	6f11      	ldr	r1, [r2, #112]	@ 0x70
9000badc:	4059      	eors	r1, r3
9000bade:	f411 7f40 	tst.w	r1, #768	@ 0x300
9000bae2:	d00b      	beq.n	9000bafc <HAL_RCCEx_PeriphCLKConfig+0x838>
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000bae4:	6f11      	ldr	r1, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_FORCE();
9000bae6:	6f10      	ldr	r0, [r2, #112]	@ 0x70
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
9000bae8:	f421 7140 	bic.w	r1, r1, #768	@ 0x300
        __HAL_RCC_BACKUPRESET_FORCE();
9000baec:	f440 3080 	orr.w	r0, r0, #65536	@ 0x10000
9000baf0:	6710      	str	r0, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
9000baf2:	6f10      	ldr	r0, [r2, #112]	@ 0x70
9000baf4:	f420 3080 	bic.w	r0, r0, #65536	@ 0x10000
9000baf8:	6710      	str	r0, [r2, #112]	@ 0x70
        RCC->BDCR = tmpreg;
9000bafa:	6711      	str	r1, [r2, #112]	@ 0x70
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
9000bafc:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
9000bb00:	f000 82fb 	beq.w	9000c0fa <HAL_RCCEx_PeriphCLKConfig+0xe36>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000bb04:	f403 7240 	and.w	r2, r3, #768	@ 0x300
9000bb08:	f5b2 7f40 	cmp.w	r2, #768	@ 0x300
9000bb0c:	f000 8309 	beq.w	9000c122 <HAL_RCCEx_PeriphCLKConfig+0xe5e>
9000bb10:	4940      	ldr	r1, [pc, #256]	@ (9000bc14 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bb12:	690a      	ldr	r2, [r1, #16]
9000bb14:	f422 527c 	bic.w	r2, r2, #16128	@ 0x3f00
9000bb18:	610a      	str	r2, [r1, #16]
9000bb1a:	483e      	ldr	r0, [pc, #248]	@ (9000bc14 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bb1c:	f3c3 010b 	ubfx	r1, r3, #0, #12
9000bb20:	6f07      	ldr	r7, [r0, #112]	@ 0x70
9000bb22:	4339      	orrs	r1, r7
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000bb24:	e9d4 3200 	ldrd	r3, r2, [r4]
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000bb28:	6701      	str	r1, [r0, #112]	@ 0x70
9000bb2a:	e543      	b.n	9000b5b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bb2c:	4839      	ldr	r0, [pc, #228]	@ (9000bc14 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bb2e:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bb30:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bb34:	62c1      	str	r1, [r0, #44]	@ 0x2c
        ret = HAL_ERROR;
9000bb36:	4635      	mov	r5, r6
    if (ret == HAL_OK)
9000bb38:	2d00      	cmp	r5, #0
9000bb3a:	f040 8177 	bne.w	9000be2c <HAL_RCCEx_PeriphCLKConfig+0xb68>
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
9000bb3e:	4f35      	ldr	r7, [pc, #212]	@ (9000bc14 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bb40:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9000bb42:	6d39      	ldr	r1, [r7, #80]	@ 0x50
9000bb44:	f021 0107 	bic.w	r1, r1, #7
9000bb48:	4301      	orrs	r1, r0
9000bb4a:	6539      	str	r1, [r7, #80]	@ 0x50
9000bb4c:	f7ff bbf6 	b.w	9000b33c <HAL_RCCEx_PeriphCLKConfig+0x78>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bb50:	4930      	ldr	r1, [pc, #192]	@ (9000bc14 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bb52:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bb54:	f001 0103 	and.w	r1, r1, #3
9000bb58:	2903      	cmp	r1, #3
9000bb5a:	f000 82ba 	beq.w	9000c0d2 <HAL_RCCEx_PeriphCLKConfig+0xe0e>
9000bb5e:	2102      	movs	r1, #2
9000bb60:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bb64:	f7ff fb3e 	bl	9000b1e4 <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000bb68:	2800      	cmp	r0, #0
9000bb6a:	f000 82b5 	beq.w	9000c0d8 <HAL_RCCEx_PeriphCLKConfig+0xe14>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000bb6e:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
        status = HAL_ERROR;
9000bb72:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000bb74:	e9d4 3200 	ldrd	r3, r2, [r4]
9000bb78:	e616      	b.n	9000b7a8 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bb7a:	4926      	ldr	r1, [pc, #152]	@ (9000bc14 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bb7c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bb7e:	f001 0103 	and.w	r1, r1, #3
9000bb82:	2903      	cmp	r1, #3
9000bb84:	f000 82a2 	beq.w	9000c0cc <HAL_RCCEx_PeriphCLKConfig+0xe08>
9000bb88:	2102      	movs	r1, #2
9000bb8a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bb8e:	f7ff fb29 	bl	9000b1e4 <RCCEx_PLL3_Config.part.0>
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
9000bb92:	2800      	cmp	r0, #0
9000bb94:	f040 82a6 	bne.w	9000c0e4 <HAL_RCCEx_PeriphCLKConfig+0xe20>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000bb98:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000bb9c:	e9d4 3200 	ldrd	r3, r2, [r4]
9000bba0:	e610      	b.n	9000b7c4 <HAL_RCCEx_PeriphCLKConfig+0x500>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bba2:	481c      	ldr	r0, [pc, #112]	@ (9000bc14 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bba4:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bba6:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bbaa:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bbac:	2d00      	cmp	r5, #0
9000bbae:	f43f ae64 	beq.w	9000b87a <HAL_RCCEx_PeriphCLKConfig+0x5b6>
      status = ret;
9000bbb2:	462e      	mov	r6, r5
9000bbb4:	e668      	b.n	9000b888 <HAL_RCCEx_PeriphCLKConfig+0x5c4>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bbb6:	4f17      	ldr	r7, [pc, #92]	@ (9000bc14 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bbb8:	6af8      	ldr	r0, [r7, #44]	@ 0x2c
9000bbba:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000bbbe:	62f8      	str	r0, [r7, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bbc0:	2d00      	cmp	r5, #0
9000bbc2:	f47f ae76 	bne.w	9000b8b2 <HAL_RCCEx_PeriphCLKConfig+0x5ee>
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
9000bbc6:	4d13      	ldr	r5, [pc, #76]	@ (9000bc14 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bbc8:	6d68      	ldr	r0, [r5, #84]	@ 0x54
9000bbca:	f420 7040 	bic.w	r0, r0, #768	@ 0x300
9000bbce:	4301      	orrs	r1, r0
9000bbd0:	6569      	str	r1, [r5, #84]	@ 0x54
9000bbd2:	e66d      	b.n	9000b8b0 <HAL_RCCEx_PeriphCLKConfig+0x5ec>
      status = ret;
9000bbd4:	462e      	mov	r6, r5
9000bbd6:	e634      	b.n	9000b842 <HAL_RCCEx_PeriphCLKConfig+0x57e>
      status = ret;
9000bbd8:	462e      	mov	r6, r5
9000bbda:	e4d0      	b.n	9000b57e <HAL_RCCEx_PeriphCLKConfig+0x2ba>
      status = ret;
9000bbdc:	462e      	mov	r6, r5
9000bbde:	e445      	b.n	9000b46c <HAL_RCCEx_PeriphCLKConfig+0x1a8>
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
9000bbe0:	4f0c      	ldr	r7, [pc, #48]	@ (9000bc14 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bbe2:	6ca0      	ldr	r0, [r4, #72]	@ 0x48
9000bbe4:	6cf9      	ldr	r1, [r7, #76]	@ 0x4c
9000bbe6:	f021 0103 	bic.w	r1, r1, #3
9000bbea:	4301      	orrs	r1, r0
9000bbec:	64f9      	str	r1, [r7, #76]	@ 0x4c
9000bbee:	e4de      	b.n	9000b5ae <HAL_RCCEx_PeriphCLKConfig+0x2ea>
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
9000bbf0:	4f08      	ldr	r7, [pc, #32]	@ (9000bc14 <HAL_RCCEx_PeriphCLKConfig+0x950>)
9000bbf2:	6fa0      	ldr	r0, [r4, #120]	@ 0x78
9000bbf4:	6d79      	ldr	r1, [r7, #84]	@ 0x54
9000bbf6:	f021 0107 	bic.w	r1, r1, #7
9000bbfa:	4301      	orrs	r1, r0
9000bbfc:	6579      	str	r1, [r7, #84]	@ 0x54
9000bbfe:	e52c      	b.n	9000b65a <HAL_RCCEx_PeriphCLKConfig+0x396>
      status = ret;
9000bc00:	462e      	mov	r6, r5
9000bc02:	e577      	b.n	9000b6f4 <HAL_RCCEx_PeriphCLKConfig+0x430>
      status = ret;
9000bc04:	462e      	mov	r6, r5
9000bc06:	e4aa      	b.n	9000b55e <HAL_RCCEx_PeriphCLKConfig+0x29a>
      status = ret;
9000bc08:	462e      	mov	r6, r5
9000bc0a:	e59c      	b.n	9000b746 <HAL_RCCEx_PeriphCLKConfig+0x482>
      status = ret;
9000bc0c:	462e      	mov	r6, r5
9000bc0e:	e606      	b.n	9000b81e <HAL_RCCEx_PeriphCLKConfig+0x55a>
      status = ret;
9000bc10:	462e      	mov	r6, r5
9000bc12:	e5c1      	b.n	9000b798 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
9000bc14:	58024400 	.word	0x58024400
9000bc18:	58024800 	.word	0x58024800
      status = ret;
9000bc1c:	462e      	mov	r6, r5
9000bc1e:	e475      	b.n	9000b50c <HAL_RCCEx_PeriphCLKConfig+0x248>
      status = ret;
9000bc20:	462e      	mov	r6, r5
9000bc22:	e4f9      	b.n	9000b618 <HAL_RCCEx_PeriphCLKConfig+0x354>
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
9000bc24:	4fc2      	ldr	r7, [pc, #776]	@ (9000bf30 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bc26:	f8d4 0094 	ldr.w	r0, [r4, #148]	@ 0x94
9000bc2a:	6db9      	ldr	r1, [r7, #88]	@ 0x58
9000bc2c:	f021 0107 	bic.w	r1, r1, #7
9000bc30:	4301      	orrs	r1, r0
9000bc32:	65b9      	str	r1, [r7, #88]	@ 0x58
9000bc34:	e535      	b.n	9000b6a2 <HAL_RCCEx_PeriphCLKConfig+0x3de>
    switch (PeriphClkInit->RngClockSelection)
9000bc36:	2900      	cmp	r1, #0
9000bc38:	f47f aef3 	bne.w	9000ba22 <HAL_RCCEx_PeriphCLKConfig+0x75e>
9000bc3c:	e7c0      	b.n	9000bbc0 <HAL_RCCEx_PeriphCLKConfig+0x8fc>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bc3e:	49bc      	ldr	r1, [pc, #752]	@ (9000bf30 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bc40:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bc42:	f001 0103 	and.w	r1, r1, #3
9000bc46:	2903      	cmp	r1, #3
9000bc48:	f000 8194 	beq.w	9000bf74 <HAL_RCCEx_PeriphCLKConfig+0xcb0>
9000bc4c:	2102      	movs	r1, #2
9000bc4e:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bc52:	f7ff fac7 	bl	9000b1e4 <RCCEx_PLL3_Config.part.0>
9000bc56:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
9000bc58:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bc5c:	2d00      	cmp	r5, #0
9000bc5e:	d1cf      	bne.n	9000bc00 <HAL_RCCEx_PeriphCLKConfig+0x93c>
9000bc60:	e540      	b.n	9000b6e4 <HAL_RCCEx_PeriphCLKConfig+0x420>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bc62:	49b3      	ldr	r1, [pc, #716]	@ (9000bf30 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bc64:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bc66:	f001 0103 	and.w	r1, r1, #3
9000bc6a:	2903      	cmp	r1, #3
9000bc6c:	f000 81ba 	beq.w	9000bfe4 <HAL_RCCEx_PeriphCLKConfig+0xd20>
9000bc70:	2102      	movs	r1, #2
9000bc72:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bc76:	f7ff fab5 	bl	9000b1e4 <RCCEx_PLL3_Config.part.0>
9000bc7a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
9000bc7c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bc80:	2d00      	cmp	r5, #0
9000bc82:	d1c1      	bne.n	9000bc08 <HAL_RCCEx_PeriphCLKConfig+0x944>
9000bc84:	e557      	b.n	9000b736 <HAL_RCCEx_PeriphCLKConfig+0x472>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bc86:	49aa      	ldr	r1, [pc, #680]	@ (9000bf30 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bc88:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bc8a:	f001 0103 	and.w	r1, r1, #3
9000bc8e:	2903      	cmp	r1, #3
9000bc90:	f000 818c 	beq.w	9000bfac <HAL_RCCEx_PeriphCLKConfig+0xce8>
9000bc94:	2102      	movs	r1, #2
9000bc96:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bc9a:	f7ff faa3 	bl	9000b1e4 <RCCEx_PLL3_Config.part.0>
9000bc9e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C123) == RCC_PERIPHCLK_I2C123)
9000bca0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bca4:	2d00      	cmp	r5, #0
9000bca6:	d1b3      	bne.n	9000bc10 <HAL_RCCEx_PeriphCLKConfig+0x94c>
9000bca8:	e56e      	b.n	9000b788 <HAL_RCCEx_PeriphCLKConfig+0x4c4>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bcaa:	49a1      	ldr	r1, [pc, #644]	@ (9000bf30 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bcac:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bcae:	f001 0103 	and.w	r1, r1, #3
9000bcb2:	2903      	cmp	r1, #3
9000bcb4:	f000 81df 	beq.w	9000c076 <HAL_RCCEx_PeriphCLKConfig+0xdb2>
9000bcb8:	2102      	movs	r1, #2
9000bcba:	f104 0008 	add.w	r0, r4, #8
9000bcbe:	f7ff fa21 	bl	9000b104 <RCCEx_PLL2_Config.part.0>
9000bcc2:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
9000bcc4:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bcc8:	2d00      	cmp	r5, #0
9000bcca:	d187      	bne.n	9000bbdc <HAL_RCCEx_PeriphCLKConfig+0x918>
9000bccc:	f7ff bbc7 	b.w	9000b45e <HAL_RCCEx_PeriphCLKConfig+0x19a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bcd0:	4997      	ldr	r1, [pc, #604]	@ (9000bf30 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bcd2:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bcd4:	f001 0103 	and.w	r1, r1, #3
9000bcd8:	2903      	cmp	r1, #3
9000bcda:	f000 820a 	beq.w	9000c0f2 <HAL_RCCEx_PeriphCLKConfig+0xe2e>
9000bcde:	2102      	movs	r1, #2
9000bce0:	f104 0008 	add.w	r0, r4, #8
9000bce4:	f7ff fa0e 	bl	9000b104 <RCCEx_PLL2_Config.part.0>
9000bce8:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
9000bcea:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bcee:	2d00      	cmp	r5, #0
9000bcf0:	f47f ac5c 	bne.w	9000b5ac <HAL_RCCEx_PeriphCLKConfig+0x2e8>
9000bcf4:	e774      	b.n	9000bbe0 <HAL_RCCEx_PeriphCLKConfig+0x91c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bcf6:	498e      	ldr	r1, [pc, #568]	@ (9000bf30 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bcf8:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bcfa:	f001 0103 	and.w	r1, r1, #3
9000bcfe:	2903      	cmp	r1, #3
9000bd00:	f000 8146 	beq.w	9000bf90 <HAL_RCCEx_PeriphCLKConfig+0xccc>
9000bd04:	2101      	movs	r1, #1
9000bd06:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bd0a:	f7ff fa6b 	bl	9000b1e4 <RCCEx_PLL3_Config.part.0>
9000bd0e:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
9000bd10:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bd14:	2d00      	cmp	r5, #0
9000bd16:	d181      	bne.n	9000bc1c <HAL_RCCEx_PeriphCLKConfig+0x958>
9000bd18:	f7ff bbf1 	b.w	9000b4fe <HAL_RCCEx_PeriphCLKConfig+0x23a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bd1c:	4984      	ldr	r1, [pc, #528]	@ (9000bf30 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bd1e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bd20:	f001 0103 	and.w	r1, r1, #3
9000bd24:	2903      	cmp	r1, #3
9000bd26:	f43f ad8a 	beq.w	9000b83e <HAL_RCCEx_PeriphCLKConfig+0x57a>
9000bd2a:	2101      	movs	r1, #1
9000bd2c:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bd30:	f7ff fa58 	bl	9000b1e4 <RCCEx_PLL3_Config.part.0>
9000bd34:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
9000bd36:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bd3a:	2d00      	cmp	r5, #0
9000bd3c:	f47f af4a 	bne.w	9000bbd4 <HAL_RCCEx_PeriphCLKConfig+0x910>
9000bd40:	e6a9      	b.n	9000ba96 <HAL_RCCEx_PeriphCLKConfig+0x7d2>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bd42:	497b      	ldr	r1, [pc, #492]	@ (9000bf30 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bd44:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bd46:	f001 0103 	and.w	r1, r1, #3
9000bd4a:	2903      	cmp	r1, #3
9000bd4c:	f43f ae7e 	beq.w	9000ba4c <HAL_RCCEx_PeriphCLKConfig+0x788>
9000bd50:	2102      	movs	r1, #2
9000bd52:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bd56:	f7ff fa45 	bl	9000b1e4 <RCCEx_PLL3_Config.part.0>
9000bd5a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
9000bd5c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bd60:	2d00      	cmp	r5, #0
9000bd62:	f47f af53 	bne.w	9000bc0c <HAL_RCCEx_PeriphCLKConfig+0x948>
9000bd66:	e552      	b.n	9000b80e <HAL_RCCEx_PeriphCLKConfig+0x54a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bd68:	4971      	ldr	r1, [pc, #452]	@ (9000bf30 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bd6a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bd6c:	f001 0103 	and.w	r1, r1, #3
9000bd70:	2903      	cmp	r1, #3
9000bd72:	f000 8129 	beq.w	9000bfc8 <HAL_RCCEx_PeriphCLKConfig+0xd04>
9000bd76:	2101      	movs	r1, #1
9000bd78:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bd7c:	f7ff fa32 	bl	9000b1e4 <RCCEx_PLL3_Config.part.0>
9000bd80:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
9000bd82:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bd86:	2d00      	cmp	r5, #0
9000bd88:	f47f af3c 	bne.w	9000bc04 <HAL_RCCEx_PeriphCLKConfig+0x940>
9000bd8c:	f7ff bbdf 	b.w	9000b54e <HAL_RCCEx_PeriphCLKConfig+0x28a>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bd90:	4867      	ldr	r0, [pc, #412]	@ (9000bf30 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bd92:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bd94:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bd98:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bd9a:	2d00      	cmp	r5, #0
9000bd9c:	f43f ab88 	beq.w	9000b4b0 <HAL_RCCEx_PeriphCLKConfig+0x1ec>
      status = ret;
9000bda0:	462e      	mov	r6, r5
9000bda2:	f7ff bb8c 	b.w	9000b4be <HAL_RCCEx_PeriphCLKConfig+0x1fa>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bda6:	4862      	ldr	r0, [pc, #392]	@ (9000bf30 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bda8:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bdaa:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bdae:	62c1      	str	r1, [r0, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bdb0:	2d00      	cmp	r5, #0
9000bdb2:	f43f ab38 	beq.w	9000b426 <HAL_RCCEx_PeriphCLKConfig+0x162>
      status = ret;
9000bdb6:	462e      	mov	r6, r5
9000bdb8:	f7ff bb3d 	b.w	9000b436 <HAL_RCCEx_PeriphCLKConfig+0x172>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bdbc:	495c      	ldr	r1, [pc, #368]	@ (9000bf30 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bdbe:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bdc0:	f001 0103 	and.w	r1, r1, #3
9000bdc4:	2903      	cmp	r1, #3
9000bdc6:	f000 8125 	beq.w	9000c014 <HAL_RCCEx_PeriphCLKConfig+0xd50>
9000bdca:	2100      	movs	r1, #0
9000bdcc:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bdd0:	f7ff fa08 	bl	9000b1e4 <RCCEx_PLL3_Config.part.0>
9000bdd4:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
9000bdd6:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000bdda:	f7ff bb66 	b.w	9000b4aa <HAL_RCCEx_PeriphCLKConfig+0x1e6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bdde:	4954      	ldr	r1, [pc, #336]	@ (9000bf30 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bde0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bde2:	f001 0103 	and.w	r1, r1, #3
9000bde6:	2903      	cmp	r1, #3
9000bde8:	f000 813e 	beq.w	9000c068 <HAL_RCCEx_PeriphCLKConfig+0xda4>
9000bdec:	2100      	movs	r1, #0
9000bdee:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bdf2:	f7ff f9f7 	bl	9000b1e4 <RCCEx_PLL3_Config.part.0>
9000bdf6:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
9000bdf8:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bdfc:	2d00      	cmp	r5, #0
9000bdfe:	f43f aabd 	beq.w	9000b37c <HAL_RCCEx_PeriphCLKConfig+0xb8>
      status = ret;
9000be02:	462e      	mov	r6, r5
9000be04:	f7ff bac1 	b.w	9000b38a <HAL_RCCEx_PeriphCLKConfig+0xc6>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000be08:	4949      	ldr	r1, [pc, #292]	@ (9000bf30 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000be0a:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000be0c:	f001 0103 	and.w	r1, r1, #3
9000be10:	2903      	cmp	r1, #3
9000be12:	f43f aa91 	beq.w	9000b338 <HAL_RCCEx_PeriphCLKConfig+0x74>
9000be16:	2100      	movs	r1, #0
9000be18:	f104 0008 	add.w	r0, r4, #8
9000be1c:	f7ff f972 	bl	9000b104 <RCCEx_PLL2_Config.part.0>
9000be20:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000be22:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000be26:	2d00      	cmp	r5, #0
9000be28:	f43f ae89 	beq.w	9000bb3e <HAL_RCCEx_PeriphCLKConfig+0x87a>
      status = ret;
9000be2c:	462e      	mov	r6, r5
9000be2e:	f7ff ba85 	b.w	9000b33c <HAL_RCCEx_PeriphCLKConfig+0x78>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000be32:	493f      	ldr	r1, [pc, #252]	@ (9000bf30 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000be34:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000be36:	f001 0103 	and.w	r1, r1, #3
9000be3a:	2903      	cmp	r1, #3
9000be3c:	f43f aa7c 	beq.w	9000b338 <HAL_RCCEx_PeriphCLKConfig+0x74>
9000be40:	2100      	movs	r1, #0
9000be42:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000be46:	f7ff f9cd 	bl	9000b1e4 <RCCEx_PLL3_Config.part.0>
9000be4a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI23) == RCC_PERIPHCLK_SAI23)
9000be4c:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000be50:	e672      	b.n	9000bb38 <HAL_RCCEx_PeriphCLKConfig+0x874>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000be52:	4937      	ldr	r1, [pc, #220]	@ (9000bf30 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000be54:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000be56:	f001 0103 	and.w	r1, r1, #3
9000be5a:	2903      	cmp	r1, #3
9000be5c:	f000 80f9 	beq.w	9000c052 <HAL_RCCEx_PeriphCLKConfig+0xd8e>
9000be60:	2100      	movs	r1, #0
9000be62:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000be66:	f7ff f9bd 	bl	9000b1e4 <RCCEx_PLL3_Config.part.0>
9000be6a:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
9000be6c:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000be70:	2d00      	cmp	r5, #0
9000be72:	f43f aaad 	beq.w	9000b3d0 <HAL_RCCEx_PeriphCLKConfig+0x10c>
      status = ret;
9000be76:	462e      	mov	r6, r5
9000be78:	f7ff bab2 	b.w	9000b3e0 <HAL_RCCEx_PeriphCLKConfig+0x11c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000be7c:	492c      	ldr	r1, [pc, #176]	@ (9000bf30 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000be7e:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000be80:	f001 0103 	and.w	r1, r1, #3
9000be84:	2903      	cmp	r1, #3
9000be86:	f000 80d1 	beq.w	9000c02c <HAL_RCCEx_PeriphCLKConfig+0xd68>
9000be8a:	2100      	movs	r1, #0
9000be8c:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000be90:	f7ff f9a8 	bl	9000b1e4 <RCCEx_PLL3_Config.part.0>
9000be94:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_QSPI) == RCC_PERIPHCLK_QSPI)
9000be96:	e9d4 3200 	ldrd	r3, r2, [r4]
        break;
9000be9a:	f7ff bac1 	b.w	9000b420 <HAL_RCCEx_PeriphCLKConfig+0x15c>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000be9e:	4924      	ldr	r1, [pc, #144]	@ (9000bf30 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bea0:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bea2:	f001 0103 	and.w	r1, r1, #3
9000bea6:	2903      	cmp	r1, #3
9000bea8:	f000 80c8 	beq.w	9000c03c <HAL_RCCEx_PeriphCLKConfig+0xd78>
9000beac:	2102      	movs	r1, #2
9000beae:	3028      	adds	r0, #40	@ 0x28
9000beb0:	f7ff f998 	bl	9000b1e4 <RCCEx_PLL3_Config.part.0>
9000beb4:	4606      	mov	r6, r0
        break;
9000beb6:	f7ff ba28 	b.w	9000b30a <HAL_RCCEx_PeriphCLKConfig+0x46>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000beba:	481d      	ldr	r0, [pc, #116]	@ (9000bf30 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bebc:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000bebe:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bec2:	62c1      	str	r1, [r0, #44]	@ 0x2c
        break;
9000bec4:	f7ff ba81 	b.w	9000b3ca <HAL_RCCEx_PeriphCLKConfig+0x106>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bec8:	4819      	ldr	r0, [pc, #100]	@ (9000bf30 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000beca:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
9000becc:	f441 3100 	orr.w	r1, r1, #131072	@ 0x20000
9000bed0:	62c1      	str	r1, [r0, #44]	@ 0x2c
        break;
9000bed2:	f7ff ba50 	b.w	9000b376 <HAL_RCCEx_PeriphCLKConfig+0xb2>
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
9000bed6:	4d16      	ldr	r5, [pc, #88]	@ (9000bf30 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bed8:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000beda:	f440 3000 	orr.w	r0, r0, #131072	@ 0x20000
9000bede:	62e8      	str	r0, [r5, #44]	@ 0x2c
    if (ret == HAL_OK)
9000bee0:	f7ff ba17 	b.w	9000b312 <HAL_RCCEx_PeriphCLKConfig+0x4e>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bee4:	4912      	ldr	r1, [pc, #72]	@ (9000bf30 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bee6:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bee8:	f001 0103 	and.w	r1, r1, #3
9000beec:	2903      	cmp	r1, #3
9000beee:	f000 80e5 	beq.w	9000c0bc <HAL_RCCEx_PeriphCLKConfig+0xdf8>
9000bef2:	2101      	movs	r1, #1
9000bef4:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bef8:	f7ff f974 	bl	9000b1e4 <RCCEx_PLL3_Config.part.0>
9000befc:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
9000befe:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bf02:	2d00      	cmp	r5, #0
9000bf04:	f47f abcc 	bne.w	9000b6a0 <HAL_RCCEx_PeriphCLKConfig+0x3dc>
9000bf08:	e68c      	b.n	9000bc24 <HAL_RCCEx_PeriphCLKConfig+0x960>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bf0a:	4909      	ldr	r1, [pc, #36]	@ (9000bf30 <HAL_RCCEx_PeriphCLKConfig+0xc6c>)
9000bf0c:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bf0e:	f001 0103 	and.w	r1, r1, #3
9000bf12:	2903      	cmp	r1, #3
9000bf14:	f000 80d6 	beq.w	9000c0c4 <HAL_RCCEx_PeriphCLKConfig+0xe00>
9000bf18:	2101      	movs	r1, #1
9000bf1a:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bf1e:	f7ff f961 	bl	9000b1e4 <RCCEx_PLL3_Config.part.0>
9000bf22:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
9000bf24:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bf28:	2d00      	cmp	r5, #0
9000bf2a:	f47f ab95 	bne.w	9000b658 <HAL_RCCEx_PeriphCLKConfig+0x394>
9000bf2e:	e65f      	b.n	9000bbf0 <HAL_RCCEx_PeriphCLKConfig+0x92c>
9000bf30:	58024400 	.word	0x58024400
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000bf34:	4983      	ldr	r1, [pc, #524]	@ (9000c144 <HAL_RCCEx_PeriphCLKConfig+0xe80>)
9000bf36:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000bf38:	f001 0103 	and.w	r1, r1, #3
9000bf3c:	2903      	cmp	r1, #3
9000bf3e:	f43f ab69 	beq.w	9000b614 <HAL_RCCEx_PeriphCLKConfig+0x350>
9000bf42:	2101      	movs	r1, #1
9000bf44:	f104 0028 	add.w	r0, r4, #40	@ 0x28
9000bf48:	f7ff f94c 	bl	9000b1e4 <RCCEx_PLL3_Config.part.0>
9000bf4c:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
9000bf4e:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000bf52:	2d00      	cmp	r5, #0
9000bf54:	f47f ae64 	bne.w	9000bc20 <HAL_RCCEx_PeriphCLKConfig+0x95c>
9000bf58:	e58d      	b.n	9000ba76 <HAL_RCCEx_PeriphCLKConfig+0x7b2>
  return HAL_ERROR;
9000bf5a:	2001      	movs	r0, #1
}
9000bf5c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    switch (PeriphClkInit->Lptim1ClockSelection)
9000bf60:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000bf64:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000bf68:	f43f abb9 	beq.w	9000b6de <HAL_RCCEx_PeriphCLKConfig+0x41a>
9000bf6c:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000bf70:	f43f abb5 	beq.w	9000b6de <HAL_RCCEx_PeriphCLKConfig+0x41a>
      status = ret;
9000bf74:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000bf76:	4635      	mov	r5, r6
9000bf78:	f7ff bbbc 	b.w	9000b6f4 <HAL_RCCEx_PeriphCLKConfig+0x430>
    switch (PeriphClkInit->Spi45ClockSelection)
9000bf7c:	f421 3080 	bic.w	r0, r1, #65536	@ 0x10000
9000bf80:	f5b0 2f80 	cmp.w	r0, #262144	@ 0x40000
9000bf84:	f43f aab8 	beq.w	9000b4f8 <HAL_RCCEx_PeriphCLKConfig+0x234>
9000bf88:	f5b1 3f40 	cmp.w	r1, #196608	@ 0x30000
9000bf8c:	f43f aab4 	beq.w	9000b4f8 <HAL_RCCEx_PeriphCLKConfig+0x234>
      status = ret;
9000bf90:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000bf92:	4635      	mov	r5, r6
9000bf94:	f7ff baba 	b.w	9000b50c <HAL_RCCEx_PeriphCLKConfig+0x248>
    switch (PeriphClkInit->Lptim345ClockSelection)
9000bf98:	f421 5000 	bic.w	r0, r1, #8192	@ 0x2000
9000bf9c:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000bfa0:	f43f abef 	beq.w	9000b782 <HAL_RCCEx_PeriphCLKConfig+0x4be>
9000bfa4:	f5b1 4fc0 	cmp.w	r1, #24576	@ 0x6000
9000bfa8:	f43f abeb 	beq.w	9000b782 <HAL_RCCEx_PeriphCLKConfig+0x4be>
      status = ret;
9000bfac:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000bfae:	4635      	mov	r5, r6
9000bfb0:	f7ff bbf2 	b.w	9000b798 <HAL_RCCEx_PeriphCLKConfig+0x4d4>
    switch (PeriphClkInit->Spi6ClockSelection)
9000bfb4:	f021 5080 	bic.w	r0, r1, #268435456	@ 0x10000000
9000bfb8:	f1b0 4f80 	cmp.w	r0, #1073741824	@ 0x40000000
9000bfbc:	f43f aac4 	beq.w	9000b548 <HAL_RCCEx_PeriphCLKConfig+0x284>
9000bfc0:	f1b1 5f40 	cmp.w	r1, #805306368	@ 0x30000000
9000bfc4:	f43f aac0 	beq.w	9000b548 <HAL_RCCEx_PeriphCLKConfig+0x284>
      status = ret;
9000bfc8:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000bfca:	4635      	mov	r5, r6
9000bfcc:	f7ff bac7 	b.w	9000b55e <HAL_RCCEx_PeriphCLKConfig+0x29a>
    switch (PeriphClkInit->Lptim2ClockSelection)
9000bfd0:	f421 6080 	bic.w	r0, r1, #1024	@ 0x400
9000bfd4:	f5b0 5f80 	cmp.w	r0, #4096	@ 0x1000
9000bfd8:	f43f abaa 	beq.w	9000b730 <HAL_RCCEx_PeriphCLKConfig+0x46c>
9000bfdc:	f5b1 6f40 	cmp.w	r1, #3072	@ 0xc00
9000bfe0:	f43f aba6 	beq.w	9000b730 <HAL_RCCEx_PeriphCLKConfig+0x46c>
      status = ret;
9000bfe4:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000bfe6:	4635      	mov	r5, r6
9000bfe8:	f7ff bbad 	b.w	9000b746 <HAL_RCCEx_PeriphCLKConfig+0x482>
    return HAL_ERROR;
9000bfec:	2501      	movs	r5, #1
9000bfee:	e4e2      	b.n	9000b9b6 <HAL_RCCEx_PeriphCLKConfig+0x6f2>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000bff0:	0691      	lsls	r1, r2, #26
9000bff2:	d5b2      	bpl.n	9000bf5a <HAL_RCCEx_PeriphCLKConfig+0xc96>
    return HAL_ERROR;
9000bff4:	2501      	movs	r5, #1
9000bff6:	e4f2      	b.n	9000b9de <HAL_RCCEx_PeriphCLKConfig+0x71a>
    return HAL_ERROR;
9000bff8:	2501      	movs	r5, #1
9000bffa:	e4a9      	b.n	9000b950 <HAL_RCCEx_PeriphCLKConfig+0x68c>
9000bffc:	2501      	movs	r5, #1
9000bffe:	e4b8      	b.n	9000b972 <HAL_RCCEx_PeriphCLKConfig+0x6ae>
9000c000:	2501      	movs	r5, #1
9000c002:	e4c7      	b.n	9000b994 <HAL_RCCEx_PeriphCLKConfig+0x6d0>
    switch (PeriphClkInit->Spi123ClockSelection)
9000c004:	f5b1 5f40 	cmp.w	r1, #12288	@ 0x3000
9000c008:	f43f aa4f 	beq.w	9000b4aa <HAL_RCCEx_PeriphCLKConfig+0x1e6>
9000c00c:	f5b1 4f80 	cmp.w	r1, #16384	@ 0x4000
9000c010:	f43f aa4b 	beq.w	9000b4aa <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      status = ret;
9000c014:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c016:	4635      	mov	r5, r6
9000c018:	f7ff ba51 	b.w	9000b4be <HAL_RCCEx_PeriphCLKConfig+0x1fa>
    switch (PeriphClkInit->Sai4BClockSelection)
9000c01c:	f1b1 7f40 	cmp.w	r1, #50331648	@ 0x3000000
9000c020:	f43f a9fe 	beq.w	9000b420 <HAL_RCCEx_PeriphCLKConfig+0x15c>
9000c024:	f1b1 6f80 	cmp.w	r1, #67108864	@ 0x4000000
9000c028:	f43f a9fa 	beq.w	9000b420 <HAL_RCCEx_PeriphCLKConfig+0x15c>
      status = ret;
9000c02c:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c02e:	4635      	mov	r5, r6
9000c030:	f7ff ba01 	b.w	9000b436 <HAL_RCCEx_PeriphCLKConfig+0x172>
    switch (PeriphClkInit->SpdifrxClockSelection)
9000c034:	f5b1 1f40 	cmp.w	r1, #3145728	@ 0x300000
9000c038:	f43f a96b 	beq.w	9000b312 <HAL_RCCEx_PeriphCLKConfig+0x4e>
        ret = HAL_ERROR;
9000c03c:	2601      	movs	r6, #1
9000c03e:	f7ff b96f 	b.w	9000b320 <HAL_RCCEx_PeriphCLKConfig+0x5c>
    switch (PeriphClkInit->Sai4AClockSelection)
9000c042:	f5b1 0fc0 	cmp.w	r1, #6291456	@ 0x600000
9000c046:	f43f a9c0 	beq.w	9000b3ca <HAL_RCCEx_PeriphCLKConfig+0x106>
9000c04a:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
9000c04e:	f43f a9bc 	beq.w	9000b3ca <HAL_RCCEx_PeriphCLKConfig+0x106>
      status = ret;
9000c052:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c054:	4635      	mov	r5, r6
9000c056:	f7ff b9c3 	b.w	9000b3e0 <HAL_RCCEx_PeriphCLKConfig+0x11c>
    switch (PeriphClkInit->Sai23ClockSelection)
9000c05a:	29c0      	cmp	r1, #192	@ 0xc0
9000c05c:	f43f a98b 	beq.w	9000b376 <HAL_RCCEx_PeriphCLKConfig+0xb2>
9000c060:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
9000c064:	f43f a987 	beq.w	9000b376 <HAL_RCCEx_PeriphCLKConfig+0xb2>
      status = ret;
9000c068:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c06a:	4635      	mov	r5, r6
9000c06c:	f7ff b98d 	b.w	9000b38a <HAL_RCCEx_PeriphCLKConfig+0xc6>
    switch (PeriphClkInit->QspiClockSelection)
9000c070:	2930      	cmp	r1, #48	@ 0x30
9000c072:	f43f a9f1 	beq.w	9000b458 <HAL_RCCEx_PeriphCLKConfig+0x194>
      status = ret;
9000c076:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c078:	4635      	mov	r5, r6
9000c07a:	f7ff b9f7 	b.w	9000b46c <HAL_RCCEx_PeriphCLKConfig+0x1a8>
        ret = HAL_TIMEOUT;
9000c07e:	2503      	movs	r5, #3
      status = ret;
9000c080:	462e      	mov	r6, r5
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c082:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c086:	f7ff ba95 	b.w	9000b5b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
9000c08a:	6863      	ldr	r3, [r4, #4]
9000c08c:	069a      	lsls	r2, r3, #26
9000c08e:	f57f af64 	bpl.w	9000bf5a <HAL_RCCEx_PeriphCLKConfig+0xc96>
9000c092:	4605      	mov	r5, r0
9000c094:	e4a3      	b.n	9000b9de <HAL_RCCEx_PeriphCLKConfig+0x71a>
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
9000c096:	492b      	ldr	r1, [pc, #172]	@ (9000c144 <HAL_RCCEx_PeriphCLKConfig+0xe80>)
9000c098:	6a89      	ldr	r1, [r1, #40]	@ 0x28
9000c09a:	f001 0103 	and.w	r1, r1, #3
9000c09e:	2903      	cmp	r1, #3
9000c0a0:	f43f aa6b 	beq.w	9000b57a <HAL_RCCEx_PeriphCLKConfig+0x2b6>
9000c0a4:	2101      	movs	r1, #1
9000c0a6:	f104 0008 	add.w	r0, r4, #8
9000c0aa:	f7ff f82b 	bl	9000b104 <RCCEx_PLL2_Config.part.0>
9000c0ae:	4605      	mov	r5, r0
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
9000c0b0:	e9d4 3200 	ldrd	r3, r2, [r4]
    if (ret == HAL_OK)
9000c0b4:	2d00      	cmp	r5, #0
9000c0b6:	f47f ad8f 	bne.w	9000bbd8 <HAL_RCCEx_PeriphCLKConfig+0x914>
9000c0ba:	e4bf      	b.n	9000ba3c <HAL_RCCEx_PeriphCLKConfig+0x778>
      status = ret;
9000c0bc:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c0be:	4635      	mov	r5, r6
9000c0c0:	f7ff baef 	b.w	9000b6a2 <HAL_RCCEx_PeriphCLKConfig+0x3de>
      status = ret;
9000c0c4:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c0c6:	4635      	mov	r5, r6
9000c0c8:	f7ff bac7 	b.w	9000b65a <HAL_RCCEx_PeriphCLKConfig+0x396>
        status = HAL_ERROR;
9000c0cc:	2601      	movs	r6, #1
9000c0ce:	f7ff bb79 	b.w	9000b7c4 <HAL_RCCEx_PeriphCLKConfig+0x500>
        status = HAL_ERROR;
9000c0d2:	2601      	movs	r6, #1
9000c0d4:	f7ff bb68 	b.w	9000b7a8 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
    __HAL_RCC_I2C123_CONFIG(PeriphClkInit->I2c123ClockSelection);
9000c0d8:	f8d4 0084 	ldr.w	r0, [r4, #132]	@ 0x84
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
9000c0dc:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c0e0:	f7ff bb62 	b.w	9000b7a8 <HAL_RCCEx_PeriphCLKConfig+0x4e4>
    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
9000c0e4:	f8d4 0098 	ldr.w	r0, [r4, #152]	@ 0x98
        status = HAL_ERROR;
9000c0e8:	2601      	movs	r6, #1
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
9000c0ea:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c0ee:	f7ff bb69 	b.w	9000b7c4 <HAL_RCCEx_PeriphCLKConfig+0x500>
      status = ret;
9000c0f2:	2601      	movs	r6, #1
        ret = HAL_ERROR;
9000c0f4:	4635      	mov	r5, r6
9000c0f6:	f7ff ba5a 	b.w	9000b5ae <HAL_RCCEx_PeriphCLKConfig+0x2ea>
        tickstart = HAL_GetTick();
9000c0fa:	f7fa feb5 	bl	90006e68 <HAL_GetTick>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c0fe:	f8df 8044 	ldr.w	r8, [pc, #68]	@ 9000c144 <HAL_RCCEx_PeriphCLKConfig+0xe80>
        tickstart = HAL_GetTick();
9000c102:	4607      	mov	r7, r0
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c104:	f241 3988 	movw	r9, #5000	@ 0x1388
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c108:	e004      	b.n	9000c114 <HAL_RCCEx_PeriphCLKConfig+0xe50>
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
9000c10a:	f7fa fead 	bl	90006e68 <HAL_GetTick>
9000c10e:	1bc0      	subs	r0, r0, r7
9000c110:	4548      	cmp	r0, r9
9000c112:	d810      	bhi.n	9000c136 <HAL_RCCEx_PeriphCLKConfig+0xe72>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
9000c114:	f8d8 3070 	ldr.w	r3, [r8, #112]	@ 0x70
9000c118:	079b      	lsls	r3, r3, #30
9000c11a:	d5f6      	bpl.n	9000c10a <HAL_RCCEx_PeriphCLKConfig+0xe46>
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
9000c11c:	f8d4 30b4 	ldr.w	r3, [r4, #180]	@ 0xb4
9000c120:	e4f0      	b.n	9000bb04 <HAL_RCCEx_PeriphCLKConfig+0x840>
9000c122:	4808      	ldr	r0, [pc, #32]	@ (9000c144 <HAL_RCCEx_PeriphCLKConfig+0xe80>)
9000c124:	4a08      	ldr	r2, [pc, #32]	@ (9000c148 <HAL_RCCEx_PeriphCLKConfig+0xe84>)
9000c126:	6901      	ldr	r1, [r0, #16]
9000c128:	ea02 1213 	and.w	r2, r2, r3, lsr #4
9000c12c:	f421 517c 	bic.w	r1, r1, #16128	@ 0x3f00
9000c130:	430a      	orrs	r2, r1
9000c132:	6102      	str	r2, [r0, #16]
9000c134:	e4f1      	b.n	9000bb1a <HAL_RCCEx_PeriphCLKConfig+0x856>
        status = ret;
9000c136:	2603      	movs	r6, #3
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
9000c138:	e9d4 3200 	ldrd	r3, r2, [r4]
9000c13c:	4635      	mov	r5, r6
9000c13e:	f7ff ba39 	b.w	9000b5b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>
9000c142:	bf00      	nop
9000c144:	58024400 	.word	0x58024400
9000c148:	00ffffcf 	.word	0x00ffffcf

9000c14c <HAL_RCCEx_GetD3PCLK1Freq>:
{
9000c14c:	b508      	push	{r3, lr}
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->D3CFGR & RCC_D3CFGR_D3PPRE) >> RCC_D3CFGR_D3PPRE_Pos] & 0x1FU));
9000c14e:	f7fe fedd 	bl	9000af0c <HAL_RCC_GetHCLKFreq>
9000c152:	4b05      	ldr	r3, [pc, #20]	@ (9000c168 <HAL_RCCEx_GetD3PCLK1Freq+0x1c>)
9000c154:	4a05      	ldr	r2, [pc, #20]	@ (9000c16c <HAL_RCCEx_GetD3PCLK1Freq+0x20>)
9000c156:	6a1b      	ldr	r3, [r3, #32]
9000c158:	f3c3 1302 	ubfx	r3, r3, #4, #3
9000c15c:	5cd3      	ldrb	r3, [r2, r3]
9000c15e:	f003 031f 	and.w	r3, r3, #31
}
9000c162:	40d8      	lsrs	r0, r3
9000c164:	bd08      	pop	{r3, pc}
9000c166:	bf00      	nop
9000c168:	58024400 	.word	0x58024400
9000c16c:	9002ce48 	.word	0x9002ce48

9000c170 <HAL_RCCEx_GetPLL2ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c170:	4a47      	ldr	r2, [pc, #284]	@ (9000c290 <HAL_RCCEx_GetPLL2ClockFreq+0x120>)
{
9000c172:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c174:	6a94      	ldr	r4, [r2, #40]	@ 0x28
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
9000c176:	6a95      	ldr	r5, [r2, #40]	@ 0x28
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
9000c178:	6ad6      	ldr	r6, [r2, #44]	@ 0x2c
  if (pll2m != 0U)
9000c17a:	f415 3f7c 	tst.w	r5, #258048	@ 0x3f000
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
9000c17e:	f3c5 3305 	ubfx	r3, r5, #12, #6
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000c182:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
  if (pll2m != 0U)
9000c184:	d05b      	beq.n	9000c23e <HAL_RCCEx_GetPLL2ClockFreq+0xce>
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000c186:	f3c1 01cc 	ubfx	r1, r1, #3, #13
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
9000c18a:	f3c6 1600 	ubfx	r6, r6, #4, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c18e:	f004 0403 	and.w	r4, r4, #3
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000c192:	ee07 3a90 	vmov	s15, r3
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
9000c196:	fb06 f101 	mul.w	r1, r6, r1
    switch (pllsource)
9000c19a:	2c01      	cmp	r4, #1
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000c19c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000c1a0:	ee06 1a90 	vmov	s13, r1
9000c1a4:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
    switch (pllsource)
9000c1a8:	d003      	beq.n	9000c1b2 <HAL_RCCEx_GetPLL2ClockFreq+0x42>
9000c1aa:	2c02      	cmp	r4, #2
9000c1ac:	d06a      	beq.n	9000c284 <HAL_RCCEx_GetPLL2ClockFreq+0x114>
9000c1ae:	2c00      	cmp	r4, #0
9000c1b0:	d04a      	beq.n	9000c248 <HAL_RCCEx_GetPLL2ClockFreq+0xd8>
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000c1b2:	eddf 7a38 	vldr	s15, [pc, #224]	@ 9000c294 <HAL_RCCEx_GetPLL2ClockFreq+0x124>
9000c1b6:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000c1ba:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000c1bc:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000c1c0:	ee07 3a90 	vmov	s15, r3
9000c1c4:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000c1c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c1cc:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000c1d0:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000c1d4:	ee67 7a86 	vmul.f32	s15, s15, s12
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
9000c1d8:	4a2d      	ldr	r2, [pc, #180]	@ (9000c290 <HAL_RCCEx_GetPLL2ClockFreq+0x120>)
9000c1da:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
9000c1de:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000c1e0:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000c1e4:	ee07 3a10 	vmov	s14, r3
9000c1e8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
}
9000c1ec:	bc70      	pop	{r4, r5, r6}
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
9000c1ee:	ee37 7a06 	vadd.f32	s14, s14, s12
9000c1f2:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000c1f6:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000c1fa:	edc0 6a00 	vstr	s13, [r0]
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_Q2) >> 16) + (float_t)1)) ;
9000c1fe:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000c200:	f3c3 4306 	ubfx	r3, r3, #16, #7
9000c204:	ee07 3a10 	vmov	s14, r3
9000c208:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000c20c:	ee37 7a06 	vadd.f32	s14, s14, s12
9000c210:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000c214:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000c218:	edc0 6a01 	vstr	s13, [r0, #4]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
9000c21c:	6b93      	ldr	r3, [r2, #56]	@ 0x38
9000c21e:	f3c3 6306 	ubfx	r3, r3, #24, #7
9000c222:	ee06 3a90 	vmov	s13, r3
9000c226:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000c22a:	ee76 6a86 	vadd.f32	s13, s13, s12
9000c22e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000c232:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000c236:	ee17 3a90 	vmov	r3, s15
9000c23a:	6083      	str	r3, [r0, #8]
}
9000c23c:	4770      	bx	lr
9000c23e:	bc70      	pop	{r4, r5, r6}
    PLL2_Clocks->PLL2_P_Frequency = 0U;
9000c240:	e9c0 3300 	strd	r3, r3, [r0]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
9000c244:	6083      	str	r3, [r0, #8]
}
9000c246:	4770      	bx	lr
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c248:	6813      	ldr	r3, [r2, #0]
9000c24a:	069b      	lsls	r3, r3, #26
9000c24c:	d51d      	bpl.n	9000c28a <HAL_RCCEx_GetPLL2ClockFreq+0x11a>
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c24e:	6814      	ldr	r4, [r2, #0]
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000c250:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000c254:	6b93      	ldr	r3, [r2, #56]	@ 0x38
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c256:	4910      	ldr	r1, [pc, #64]	@ (9000c298 <HAL_RCCEx_GetPLL2ClockFreq+0x128>)
9000c258:	f3c4 02c1 	ubfx	r2, r4, #3, #2
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000c25c:	f3c3 0308 	ubfx	r3, r3, #0, #9
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c260:	40d1      	lsrs	r1, r2
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000c262:	ee07 3a90 	vmov	s15, r3
9000c266:	ee06 1a10 	vmov	s12, r1
9000c26a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c26e:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000c272:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000c276:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000c27a:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000c27e:	ee67 7a87 	vmul.f32	s15, s15, s14
9000c282:	e7a9      	b.n	9000c1d8 <HAL_RCCEx_GetPLL2ClockFreq+0x68>
        pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000c284:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000c29c <HAL_RCCEx_GetPLL2ClockFreq+0x12c>
9000c288:	e795      	b.n	9000c1b6 <HAL_RCCEx_GetPLL2ClockFreq+0x46>
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
9000c28a:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000c2a0 <HAL_RCCEx_GetPLL2ClockFreq+0x130>
9000c28e:	e792      	b.n	9000c1b6 <HAL_RCCEx_GetPLL2ClockFreq+0x46>
9000c290:	58024400 	.word	0x58024400
9000c294:	4a742400 	.word	0x4a742400
9000c298:	03d09000 	.word	0x03d09000
9000c29c:	4bbebc20 	.word	0x4bbebc20
9000c2a0:	4c742400 	.word	0x4c742400

9000c2a4 <HAL_RCCEx_GetPLL3ClockFreq>:
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c2a4:	4a47      	ldr	r2, [pc, #284]	@ (9000c3c4 <HAL_RCCEx_GetPLL3ClockFreq+0x120>)
{
9000c2a6:	b470      	push	{r4, r5, r6}
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c2a8:	6a94      	ldr	r4, [r2, #40]	@ 0x28
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
9000c2aa:	6a95      	ldr	r5, [r2, #40]	@ 0x28
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
9000c2ac:	6ad6      	ldr	r6, [r2, #44]	@ 0x2c
  if (pll3m != 0U)
9000c2ae:	f015 7f7c 	tst.w	r5, #66060288	@ 0x3f00000
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
9000c2b2:	f3c5 5305 	ubfx	r3, r5, #20, #6
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000c2b6:	6c51      	ldr	r1, [r2, #68]	@ 0x44
  if (pll3m != 0U)
9000c2b8:	d05b      	beq.n	9000c372 <HAL_RCCEx_GetPLL3ClockFreq+0xce>
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000c2ba:	f3c1 01cc 	ubfx	r1, r1, #3, #13
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
9000c2be:	f3c6 2600 	ubfx	r6, r6, #8, #1
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
9000c2c2:	f004 0403 	and.w	r4, r4, #3
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c2c6:	ee07 3a90 	vmov	s15, r3
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
9000c2ca:	fb06 f101 	mul.w	r1, r6, r1
    switch (pllsource)
9000c2ce:	2c01      	cmp	r4, #1
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c2d0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
9000c2d4:	ee06 1a90 	vmov	s13, r1
9000c2d8:	eefa 6ae9 	vcvt.f32.s32	s13, s13, #13
    switch (pllsource)
9000c2dc:	d003      	beq.n	9000c2e6 <HAL_RCCEx_GetPLL3ClockFreq+0x42>
9000c2de:	2c02      	cmp	r4, #2
9000c2e0:	d06a      	beq.n	9000c3b8 <HAL_RCCEx_GetPLL3ClockFreq+0x114>
9000c2e2:	2c00      	cmp	r4, #0
9000c2e4:	d04a      	beq.n	9000c37c <HAL_RCCEx_GetPLL3ClockFreq+0xd8>
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c2e6:	eddf 7a38 	vldr	s15, [pc, #224]	@ 9000c3c8 <HAL_RCCEx_GetPLL3ClockFreq+0x124>
9000c2ea:	ee87 6a87 	vdiv.f32	s12, s15, s14
9000c2ee:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000c2f0:	f3c3 0308 	ubfx	r3, r3, #0, #9
9000c2f4:	ee07 3a90 	vmov	s15, r3
9000c2f8:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000c2fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c300:	ee77 7aa6 	vadd.f32	s15, s15, s13
9000c304:	ee77 7aa5 	vadd.f32	s15, s15, s11
9000c308:	ee67 7a86 	vmul.f32	s15, s15, s12
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
9000c30c:	4a2d      	ldr	r2, [pc, #180]	@ (9000c3c4 <HAL_RCCEx_GetPLL3ClockFreq+0x120>)
9000c30e:	eeb7 6a00 	vmov.f32	s12, #112	@ 0x3f800000  1.0
9000c312:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000c314:	f3c3 2346 	ubfx	r3, r3, #9, #7
9000c318:	ee07 3a10 	vmov	s14, r3
9000c31c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
}
9000c320:	bc70      	pop	{r4, r5, r6}
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
9000c322:	ee37 7a06 	vadd.f32	s14, s14, s12
9000c326:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000c32a:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000c32e:	edc0 6a00 	vstr	s13, [r0]
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_Q3) >> 16) + (float_t)1)) ;
9000c332:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000c334:	f3c3 4306 	ubfx	r3, r3, #16, #7
9000c338:	ee07 3a10 	vmov	s14, r3
9000c33c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9000c340:	ee37 7a06 	vadd.f32	s14, s14, s12
9000c344:	eec7 6a87 	vdiv.f32	s13, s15, s14
9000c348:	eefc 6ae6 	vcvt.u32.f32	s13, s13
9000c34c:	edc0 6a01 	vstr	s13, [r0, #4]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
9000c350:	6c13      	ldr	r3, [r2, #64]	@ 0x40
9000c352:	f3c3 6306 	ubfx	r3, r3, #24, #7
9000c356:	ee06 3a90 	vmov	s13, r3
9000c35a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9000c35e:	ee76 6a86 	vadd.f32	s13, s13, s12
9000c362:	ee87 7aa6 	vdiv.f32	s14, s15, s13
9000c366:	eefc 7ac7 	vcvt.u32.f32	s15, s14
9000c36a:	ee17 3a90 	vmov	r3, s15
9000c36e:	6083      	str	r3, [r0, #8]
}
9000c370:	4770      	bx	lr
9000c372:	bc70      	pop	{r4, r5, r6}
    PLL3_Clocks->PLL3_P_Frequency = 0U;
9000c374:	e9c0 3300 	strd	r3, r3, [r0]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
9000c378:	6083      	str	r3, [r0, #8]
}
9000c37a:	4770      	bx	lr
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c37c:	6813      	ldr	r3, [r2, #0]
9000c37e:	069b      	lsls	r3, r3, #26
9000c380:	d51d      	bpl.n	9000c3be <HAL_RCCEx_GetPLL3ClockFreq+0x11a>
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c382:	6814      	ldr	r4, [r2, #0]
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c384:	eef7 5a00 	vmov.f32	s11, #112	@ 0x3f800000  1.0
9000c388:	6c13      	ldr	r3, [r2, #64]	@ 0x40
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c38a:	4910      	ldr	r1, [pc, #64]	@ (9000c3cc <HAL_RCCEx_GetPLL3ClockFreq+0x128>)
9000c38c:	f3c4 02c1 	ubfx	r2, r4, #3, #2
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c390:	f3c3 0308 	ubfx	r3, r3, #0, #9
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
9000c394:	40d1      	lsrs	r1, r2
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c396:	ee07 3a90 	vmov	s15, r3
9000c39a:	ee06 1a10 	vmov	s12, r1
9000c39e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9000c3a2:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
9000c3a6:	ee77 6aa6 	vadd.f32	s13, s15, s13
9000c3aa:	eec6 7a07 	vdiv.f32	s15, s12, s14
9000c3ae:	ee36 7aa5 	vadd.f32	s14, s13, s11
9000c3b2:	ee67 7a87 	vmul.f32	s15, s15, s14
9000c3b6:	e7a9      	b.n	9000c30c <HAL_RCCEx_GetPLL3ClockFreq+0x68>
        pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c3b8:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000c3d0 <HAL_RCCEx_GetPLL3ClockFreq+0x12c>
9000c3bc:	e795      	b.n	9000c2ea <HAL_RCCEx_GetPLL3ClockFreq+0x46>
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
9000c3be:	eddf 7a05 	vldr	s15, [pc, #20]	@ 9000c3d4 <HAL_RCCEx_GetPLL3ClockFreq+0x130>
9000c3c2:	e792      	b.n	9000c2ea <HAL_RCCEx_GetPLL3ClockFreq+0x46>
9000c3c4:	58024400 	.word	0x58024400
9000c3c8:	4a742400 	.word	0x4a742400
9000c3cc:	03d09000 	.word	0x03d09000
9000c3d0:	4bbebc20 	.word	0x4bbebc20
9000c3d4:	4c742400 	.word	0x4c742400

9000c3d8 <HAL_SDRAM_Init>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
9000c3d8:	b318      	cbz	r0, 9000c422 <HAL_SDRAM_Init+0x4a>
{
9000c3da:	b538      	push	{r3, r4, r5, lr}
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
9000c3dc:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
9000c3e0:	4604      	mov	r4, r0
9000c3e2:	460d      	mov	r5, r1
9000c3e4:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000c3e8:	b1b3      	cbz	r3, 9000c418 <HAL_SDRAM_Init+0x40>

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000c3ea:	4621      	mov	r1, r4
  hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c3ec:	2302      	movs	r3, #2
9000c3ee:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
9000c3f2:	f851 0b04 	ldr.w	r0, [r1], #4
9000c3f6:	f000 fe29 	bl	9000d04c <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
9000c3fa:	6862      	ldr	r2, [r4, #4]
9000c3fc:	4629      	mov	r1, r5
9000c3fe:	6820      	ldr	r0, [r4, #0]
9000c400:	f000 fe5a 	bl	9000d0b8 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
9000c404:	4a08      	ldr	r2, [pc, #32]	@ (9000c428 <HAL_SDRAM_Init+0x50>)
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
9000c406:	2101      	movs	r1, #1

  return HAL_OK;
9000c408:	2000      	movs	r0, #0
  __FMC_ENABLE();
9000c40a:	6813      	ldr	r3, [r2, #0]
9000c40c:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
9000c410:	6013      	str	r3, [r2, #0]
  hsdram->State = HAL_SDRAM_STATE_READY;
9000c412:	f884 102c 	strb.w	r1, [r4, #44]	@ 0x2c
}
9000c416:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->Lock = HAL_UNLOCKED;
9000c418:	f880 202d 	strb.w	r2, [r0, #45]	@ 0x2d
    HAL_SDRAM_MspInit(hsdram);
9000c41c:	f7f7 feda 	bl	900041d4 <HAL_SDRAM_MspInit>
9000c420:	e7e3      	b.n	9000c3ea <HAL_SDRAM_Init+0x12>
    return HAL_ERROR;
9000c422:	2001      	movs	r0, #1
}
9000c424:	4770      	bx	lr
9000c426:	bf00      	nop
9000c428:	52004000 	.word	0x52004000

9000c42c <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
9000c42c:	b510      	push	{r4, lr}
9000c42e:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
9000c430:	f7f7 ff4c 	bl	900042cc <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
9000c434:	e9d4 0100 	ldrd	r0, r1, [r4]
9000c438:	f000 fe7c 	bl	9000d134 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
9000c43c:	2000      	movs	r0, #0
9000c43e:	f884 002c 	strb.w	r0, [r4, #44]	@ 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
9000c442:	f884 002d 	strb.w	r0, [r4, #45]	@ 0x2d

  return HAL_OK;
}
9000c446:	bd10      	pop	{r4, pc}

9000c448 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
9000c448:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000c44a:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000c44e:	4605      	mov	r5, r0

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
9000c450:	2b02      	cmp	r3, #2
  HAL_SDRAM_StateTypeDef state = hsdram->State;
9000c452:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
9000c454:	d004      	beq.n	9000c460 <HAL_SDRAM_SendCommand+0x18>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
9000c456:	f000 04fb 	and.w	r4, r0, #251	@ 0xfb
9000c45a:	2c01      	cmp	r4, #1
9000c45c:	d001      	beq.n	9000c462 <HAL_SDRAM_SendCommand+0x1a>
      hsdram->State = HAL_SDRAM_STATE_READY;
    }
  }
  else
  {
    return HAL_ERROR;
9000c45e:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000c460:	bd70      	pop	{r4, r5, r6, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c462:	2302      	movs	r3, #2
9000c464:	460e      	mov	r6, r1
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000c466:	6828      	ldr	r0, [r5, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c468:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
9000c46c:	f000 fe76 	bl	9000d15c <FMC_SDRAM_SendCommand>
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
9000c470:	6833      	ldr	r3, [r6, #0]
9000c472:	2b02      	cmp	r3, #2
9000c474:	d003      	beq.n	9000c47e <HAL_SDRAM_SendCommand+0x36>
      hsdram->State = HAL_SDRAM_STATE_READY;
9000c476:	f885 402c 	strb.w	r4, [r5, #44]	@ 0x2c
  return HAL_OK;
9000c47a:	2000      	movs	r0, #0
}
9000c47c:	bd70      	pop	{r4, r5, r6, pc}
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
9000c47e:	2305      	movs	r3, #5
9000c480:	f885 302c 	strb.w	r3, [r5, #44]	@ 0x2c
9000c484:	e7f9      	b.n	9000c47a <HAL_SDRAM_SendCommand+0x32>
9000c486:	bf00      	nop

9000c488 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
9000c488:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000c48a:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
{
9000c48e:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
9000c490:	2b02      	cmp	r3, #2
9000c492:	b2d8      	uxtb	r0, r3
9000c494:	d005      	beq.n	9000c4a2 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
9000c496:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9000c49a:	2b01      	cmp	r3, #1
9000c49c:	b2dd      	uxtb	r5, r3
9000c49e:	d001      	beq.n	9000c4a4 <HAL_SDRAM_ProgramRefreshRate+0x1c>
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
  }
  else
  {
    return HAL_ERROR;
9000c4a0:	2001      	movs	r0, #1
  }

  return HAL_OK;
}
9000c4a2:	bd38      	pop	{r3, r4, r5, pc}
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c4a4:	2302      	movs	r3, #2
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000c4a6:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
9000c4a8:	f884 302c 	strb.w	r3, [r4, #44]	@ 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
9000c4ac:	f000 fe70 	bl	9000d190 <FMC_SDRAM_ProgramRefreshRate>
  return HAL_OK;
9000c4b0:	2000      	movs	r0, #0
    hsdram->State = HAL_SDRAM_STATE_READY;
9000c4b2:	f884 502c 	strb.w	r5, [r4, #44]	@ 0x2c
}
9000c4b6:	bd38      	pop	{r3, r4, r5, pc}

9000c4b8 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
9000c4b8:	4770      	bx	lr
9000c4ba:	bf00      	nop

9000c4bc <HAL_TIM_Base_Init>:
  if (htim == NULL)
9000c4bc:	2800      	cmp	r0, #0
9000c4be:	f000 8095 	beq.w	9000c5ec <HAL_TIM_Base_Init+0x130>
{
9000c4c2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  if (htim->State == HAL_TIM_STATE_RESET)
9000c4c4:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000c4c8:	4604      	mov	r4, r0
9000c4ca:	f003 02ff 	and.w	r2, r3, #255	@ 0xff
9000c4ce:	2b00      	cmp	r3, #0
9000c4d0:	f000 8087 	beq.w	9000c5e2 <HAL_TIM_Base_Init+0x126>
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
9000c4d4:	6823      	ldr	r3, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000c4d6:	2202      	movs	r2, #2
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c4d8:	4945      	ldr	r1, [pc, #276]	@ (9000c5f0 <HAL_TIM_Base_Init+0x134>)
9000c4da:	4d46      	ldr	r5, [pc, #280]	@ (9000c5f4 <HAL_TIM_Base_Init+0x138>)
9000c4dc:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
9000c4e0:	eba3 0101 	sub.w	r1, r3, r1
  htim->State = HAL_TIM_STATE_BUSY;
9000c4e4:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c4e8:	eba3 0e05 	sub.w	lr, r3, r5
  tmpcr1 = TIMx->CR1;
9000c4ec:	681a      	ldr	r2, [r3, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c4ee:	fab1 f181 	clz	r1, r1
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c4f2:	69a0      	ldr	r0, [r4, #24]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c4f4:	fabe fe8e 	clz	lr, lr

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c4f8:	68e7      	ldr	r7, [r4, #12]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c4fa:	ea4f 1151 	mov.w	r1, r1, lsr #5

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
9000c4fe:	6866      	ldr	r6, [r4, #4]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
9000c500:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9000c504:	d01f      	beq.n	9000c546 <HAL_TIM_Base_Init+0x8a>
9000c506:	b9f1      	cbnz	r1, 9000c546 <HAL_TIM_Base_Init+0x8a>
9000c508:	f8df c0f8 	ldr.w	ip, [pc, #248]	@ 9000c604 <HAL_TIM_Base_Init+0x148>
9000c50c:	4563      	cmp	r3, ip
9000c50e:	d050      	beq.n	9000c5b2 <HAL_TIM_Base_Init+0xf6>
9000c510:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000c514:	4563      	cmp	r3, ip
9000c516:	d04c      	beq.n	9000c5b2 <HAL_TIM_Base_Init+0xf6>
9000c518:	f50c 6c80 	add.w	ip, ip, #1024	@ 0x400
9000c51c:	4563      	cmp	r3, ip
9000c51e:	d012      	beq.n	9000c546 <HAL_TIM_Base_Init+0x8a>
9000c520:	f1be 0f00 	cmp.w	lr, #0
9000c524:	d10f      	bne.n	9000c546 <HAL_TIM_Base_Init+0x8a>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c526:	4d34      	ldr	r5, [pc, #208]	@ (9000c5f8 <HAL_TIM_Base_Init+0x13c>)
9000c528:	4934      	ldr	r1, [pc, #208]	@ (9000c5fc <HAL_TIM_Base_Init+0x140>)
9000c52a:	428b      	cmp	r3, r1
9000c52c:	bf18      	it	ne
9000c52e:	42ab      	cmpne	r3, r5
9000c530:	d043      	beq.n	9000c5ba <HAL_TIM_Base_Init+0xfe>
9000c532:	f501 6180 	add.w	r1, r1, #1024	@ 0x400
9000c536:	428b      	cmp	r3, r1
9000c538:	d03f      	beq.n	9000c5ba <HAL_TIM_Base_Init+0xfe>
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c53a:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c53e:	62df      	str	r7, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c540:	629e      	str	r6, [r3, #40]	@ 0x28
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c542:	4310      	orrs	r0, r2

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c544:	e014      	b.n	9000c570 <HAL_TIM_Base_Init+0xb4>
    tmpcr1 |= Structure->CounterMode;
9000c546:	68a5      	ldr	r5, [r4, #8]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000c548:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c54c:	f8d4 c010 	ldr.w	ip, [r4, #16]
    tmpcr1 |= Structure->CounterMode;
9000c550:	432a      	orrs	r2, r5
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c552:	62df      	str	r7, [r3, #44]	@ 0x2c
  TIMx->PSC = Structure->Prescaler;
9000c554:	629e      	str	r6, [r3, #40]	@ 0x28
    tmpcr1 &= ~TIM_CR1_CKD;
9000c556:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c55a:	ea42 020c 	orr.w	r2, r2, ip
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c55e:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000c562:	4310      	orrs	r0, r2
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c564:	b911      	cbnz	r1, 9000c56c <HAL_TIM_Base_Init+0xb0>
9000c566:	f1be 0f00 	cmp.w	lr, #0
9000c56a:	d02f      	beq.n	9000c5cc <HAL_TIM_Base_Init+0x110>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
9000c56c:	6962      	ldr	r2, [r4, #20]
9000c56e:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Disable Update Event (UEV) with Update Generation (UG)
     by changing Update Request Source (URS) to avoid Update flag (UIF) */
  SET_BIT(TIMx->CR1, TIM_CR1_URS);
9000c570:	6819      	ldr	r1, [r3, #0]

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
9000c572:	2201      	movs	r2, #1
  SET_BIT(TIMx->CR1, TIM_CR1_URS);
9000c574:	f041 0104 	orr.w	r1, r1, #4
9000c578:	6019      	str	r1, [r3, #0]
  TIMx->EGR = TIM_EGR_UG;
9000c57a:	615a      	str	r2, [r3, #20]

  TIMx->CR1 = tmpcr1;
9000c57c:	6018      	str	r0, [r3, #0]
  return HAL_OK;
9000c57e:	2000      	movs	r0, #0
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
9000c580:	f884 2048 	strb.w	r2, [r4, #72]	@ 0x48
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000c584:	f884 203e 	strb.w	r2, [r4, #62]	@ 0x3e
9000c588:	f884 203f 	strb.w	r2, [r4, #63]	@ 0x3f
9000c58c:	f884 2040 	strb.w	r2, [r4, #64]	@ 0x40
9000c590:	f884 2041 	strb.w	r2, [r4, #65]	@ 0x41
9000c594:	f884 2042 	strb.w	r2, [r4, #66]	@ 0x42
9000c598:	f884 2043 	strb.w	r2, [r4, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
9000c59c:	f884 2044 	strb.w	r2, [r4, #68]	@ 0x44
9000c5a0:	f884 2045 	strb.w	r2, [r4, #69]	@ 0x45
9000c5a4:	f884 2046 	strb.w	r2, [r4, #70]	@ 0x46
9000c5a8:	f884 2047 	strb.w	r2, [r4, #71]	@ 0x47
  htim->State = HAL_TIM_STATE_READY;
9000c5ac:	f884 203d 	strb.w	r2, [r4, #61]	@ 0x3d
}
9000c5b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
9000c5b2:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
    tmpcr1 |= Structure->CounterMode;
9000c5b6:	68a1      	ldr	r1, [r4, #8]
9000c5b8:	430a      	orrs	r2, r1
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c5ba:	6921      	ldr	r1, [r4, #16]
    tmpcr1 &= ~TIM_CR1_CKD;
9000c5bc:	f422 7240 	bic.w	r2, r2, #768	@ 0x300
  TIMx->ARR = (uint32_t)Structure->Period ;
9000c5c0:	62df      	str	r7, [r3, #44]	@ 0x2c
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
9000c5c2:	430a      	orrs	r2, r1
  TIMx->PSC = Structure->Prescaler;
9000c5c4:	629e      	str	r6, [r3, #40]	@ 0x28
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
9000c5c6:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
9000c5ca:	4310      	orrs	r0, r2
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c5cc:	490c      	ldr	r1, [pc, #48]	@ (9000c600 <HAL_TIM_Base_Init+0x144>)
9000c5ce:	4a0a      	ldr	r2, [pc, #40]	@ (9000c5f8 <HAL_TIM_Base_Init+0x13c>)
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c5d0:	4293      	cmp	r3, r2
9000c5d2:	bf18      	it	ne
9000c5d4:	428b      	cmpne	r3, r1
9000c5d6:	d0c9      	beq.n	9000c56c <HAL_TIM_Base_Init+0xb0>
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
9000c5d8:	f502 6280 	add.w	r2, r2, #1024	@ 0x400
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
9000c5dc:	4293      	cmp	r3, r2
9000c5de:	d0c5      	beq.n	9000c56c <HAL_TIM_Base_Init+0xb0>
9000c5e0:	e7c6      	b.n	9000c570 <HAL_TIM_Base_Init+0xb4>
    htim->Lock = HAL_UNLOCKED;
9000c5e2:	f880 203c 	strb.w	r2, [r0, #60]	@ 0x3c
    HAL_TIM_Base_MspInit(htim);
9000c5e6:	f7ff ff67 	bl	9000c4b8 <HAL_TIM_Base_MspInit>
9000c5ea:	e773      	b.n	9000c4d4 <HAL_TIM_Base_Init+0x18>
    return HAL_ERROR;
9000c5ec:	2001      	movs	r0, #1
}
9000c5ee:	4770      	bx	lr
9000c5f0:	40010000 	.word	0x40010000
9000c5f4:	40010400 	.word	0x40010400
9000c5f8:	40014000 	.word	0x40014000
9000c5fc:	40014400 	.word	0x40014400
9000c600:	40014800 	.word	0x40014800
9000c604:	40000400 	.word	0x40000400

9000c608 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
9000c608:	f890 303d 	ldrb.w	r3, [r0, #61]	@ 0x3d
9000c60c:	2b01      	cmp	r3, #1
9000c60e:	d13d      	bne.n	9000c68c <HAL_TIM_Base_Start_IT+0x84>
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c610:	6802      	ldr	r2, [r0, #0]
  htim->State = HAL_TIM_STATE_BUSY;
9000c612:	2102      	movs	r1, #2
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c614:	4b1e      	ldr	r3, [pc, #120]	@ (9000c690 <HAL_TIM_Base_Start_IT+0x88>)
9000c616:	f1b2 4f80 	cmp.w	r2, #1073741824	@ 0x40000000
9000c61a:	bf18      	it	ne
9000c61c:	429a      	cmpne	r2, r3
{
9000c61e:	b430      	push	{r4, r5}
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c620:	bf0c      	ite	eq
9000c622:	2301      	moveq	r3, #1
9000c624:	2300      	movne	r3, #0
9000c626:	4d1b      	ldr	r5, [pc, #108]	@ (9000c694 <HAL_TIM_Base_Start_IT+0x8c>)
9000c628:	4c1b      	ldr	r4, [pc, #108]	@ (9000c698 <HAL_TIM_Base_Start_IT+0x90>)
9000c62a:	42aa      	cmp	r2, r5
9000c62c:	bf08      	it	eq
9000c62e:	f043 0301 	orreq.w	r3, r3, #1
  htim->State = HAL_TIM_STATE_BUSY;
9000c632:	f880 103d 	strb.w	r1, [r0, #61]	@ 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c636:	68d1      	ldr	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c638:	42a2      	cmp	r2, r4
9000c63a:	bf08      	it	eq
9000c63c:	f043 0301 	orreq.w	r3, r3, #1
9000c640:	f504 6480 	add.w	r4, r4, #1024	@ 0x400
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c644:	f041 0101 	orr.w	r1, r1, #1
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c648:	4814      	ldr	r0, [pc, #80]	@ (9000c69c <HAL_TIM_Base_Start_IT+0x94>)
9000c64a:	42a2      	cmp	r2, r4
9000c64c:	bf08      	it	eq
9000c64e:	f043 0301 	orreq.w	r3, r3, #1
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
9000c652:	60d1      	str	r1, [r2, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
9000c654:	4282      	cmp	r2, r0
9000c656:	bf08      	it	eq
9000c658:	f043 0301 	orreq.w	r3, r3, #1
9000c65c:	4910      	ldr	r1, [pc, #64]	@ (9000c6a0 <HAL_TIM_Base_Start_IT+0x98>)
9000c65e:	428a      	cmp	r2, r1
9000c660:	bf08      	it	eq
9000c662:	f043 0301 	orreq.w	r3, r3, #1
9000c666:	b913      	cbnz	r3, 9000c66e <HAL_TIM_Base_Start_IT+0x66>
9000c668:	4b0e      	ldr	r3, [pc, #56]	@ (9000c6a4 <HAL_TIM_Base_Start_IT+0x9c>)
9000c66a:	429a      	cmp	r2, r3
9000c66c:	d107      	bne.n	9000c67e <HAL_TIM_Base_Start_IT+0x76>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
9000c66e:	6891      	ldr	r1, [r2, #8]
9000c670:	4b0d      	ldr	r3, [pc, #52]	@ (9000c6a8 <HAL_TIM_Base_Start_IT+0xa0>)
9000c672:	400b      	ands	r3, r1
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
9000c674:	2b06      	cmp	r3, #6
9000c676:	d006      	beq.n	9000c686 <HAL_TIM_Base_Start_IT+0x7e>
9000c678:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
9000c67c:	d003      	beq.n	9000c686 <HAL_TIM_Base_Start_IT+0x7e>
      __HAL_TIM_ENABLE(htim);
9000c67e:	6813      	ldr	r3, [r2, #0]
9000c680:	f043 0301 	orr.w	r3, r3, #1
9000c684:	6013      	str	r3, [r2, #0]
  return HAL_OK;
9000c686:	2000      	movs	r0, #0
}
9000c688:	bc30      	pop	{r4, r5}
9000c68a:	4770      	bx	lr
    return HAL_ERROR;
9000c68c:	2001      	movs	r0, #1
}
9000c68e:	4770      	bx	lr
9000c690:	40010000 	.word	0x40010000
9000c694:	40000400 	.word	0x40000400
9000c698:	40000800 	.word	0x40000800
9000c69c:	40010400 	.word	0x40010400
9000c6a0:	40001800 	.word	0x40001800
9000c6a4:	40014000 	.word	0x40014000
9000c6a8:	00010007 	.word	0x00010007

9000c6ac <HAL_TIM_OC_DelayElapsedCallback>:
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
9000c6ac:	4770      	bx	lr
9000c6ae:	bf00      	nop

9000c6b0 <HAL_TIM_IC_CaptureCallback>:
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
9000c6b0:	4770      	bx	lr
9000c6b2:	bf00      	nop

9000c6b4 <HAL_TIM_PWM_PulseFinishedCallback>:
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
9000c6b4:	4770      	bx	lr
9000c6b6:	bf00      	nop

9000c6b8 <HAL_TIM_TriggerCallback>:
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
9000c6b8:	4770      	bx	lr
9000c6ba:	bf00      	nop

9000c6bc <HAL_TIM_IRQHandler>:
  uint32_t itsource = htim->Instance->DIER;
9000c6bc:	6803      	ldr	r3, [r0, #0]
{
9000c6be:	b570      	push	{r4, r5, r6, lr}
  uint32_t itsource = htim->Instance->DIER;
9000c6c0:	68de      	ldr	r6, [r3, #12]
{
9000c6c2:	4604      	mov	r4, r0
  uint32_t itflag   = htim->Instance->SR;
9000c6c4:	691d      	ldr	r5, [r3, #16]
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
9000c6c6:	07aa      	lsls	r2, r5, #30
9000c6c8:	d501      	bpl.n	9000c6ce <HAL_TIM_IRQHandler+0x12>
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
9000c6ca:	07b1      	lsls	r1, r6, #30
9000c6cc:	d452      	bmi.n	9000c774 <HAL_TIM_IRQHandler+0xb8>
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
9000c6ce:	076b      	lsls	r3, r5, #29
9000c6d0:	d501      	bpl.n	9000c6d6 <HAL_TIM_IRQHandler+0x1a>
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
9000c6d2:	0770      	lsls	r0, r6, #29
9000c6d4:	d43b      	bmi.n	9000c74e <HAL_TIM_IRQHandler+0x92>
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
9000c6d6:	0729      	lsls	r1, r5, #28
9000c6d8:	d501      	bpl.n	9000c6de <HAL_TIM_IRQHandler+0x22>
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
9000c6da:	0732      	lsls	r2, r6, #28
9000c6dc:	d425      	bmi.n	9000c72a <HAL_TIM_IRQHandler+0x6e>
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
9000c6de:	06e8      	lsls	r0, r5, #27
9000c6e0:	d501      	bpl.n	9000c6e6 <HAL_TIM_IRQHandler+0x2a>
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
9000c6e2:	06f1      	lsls	r1, r6, #27
9000c6e4:	d411      	bmi.n	9000c70a <HAL_TIM_IRQHandler+0x4e>
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
9000c6e6:	07ea      	lsls	r2, r5, #31
9000c6e8:	d501      	bpl.n	9000c6ee <HAL_TIM_IRQHandler+0x32>
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
9000c6ea:	07f3      	lsls	r3, r6, #31
9000c6ec:	d464      	bmi.n	9000c7b8 <HAL_TIM_IRQHandler+0xfc>
  if (((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK)) || \
9000c6ee:	f415 5f02 	tst.w	r5, #8320	@ 0x2080
9000c6f2:	d04c      	beq.n	9000c78e <HAL_TIM_IRQHandler+0xd2>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000c6f4:	0630      	lsls	r0, r6, #24
9000c6f6:	d467      	bmi.n	9000c7c8 <HAL_TIM_IRQHandler+0x10c>
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
9000c6f8:	0668      	lsls	r0, r5, #25
9000c6fa:	d501      	bpl.n	9000c700 <HAL_TIM_IRQHandler+0x44>
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
9000c6fc:	0671      	lsls	r1, r6, #25
9000c6fe:	d46d      	bmi.n	9000c7dc <HAL_TIM_IRQHandler+0x120>
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
9000c700:	06aa      	lsls	r2, r5, #26
9000c702:	d501      	bpl.n	9000c708 <HAL_TIM_IRQHandler+0x4c>
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
9000c704:	06b3      	lsls	r3, r6, #26
9000c706:	d44e      	bmi.n	9000c7a6 <HAL_TIM_IRQHandler+0xea>
}
9000c708:	bd70      	pop	{r4, r5, r6, pc}
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000c70a:	6823      	ldr	r3, [r4, #0]
9000c70c:	f06f 0210 	mvn.w	r2, #16
        HAL_TIM_IC_CaptureCallback(htim);
9000c710:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
9000c712:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
9000c714:	2208      	movs	r2, #8
9000c716:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
9000c718:	69db      	ldr	r3, [r3, #28]
9000c71a:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000c71e:	d071      	beq.n	9000c804 <HAL_TIM_IRQHandler+0x148>
        HAL_TIM_IC_CaptureCallback(htim);
9000c720:	f7ff ffc6 	bl	9000c6b0 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c724:	2300      	movs	r3, #0
9000c726:	7723      	strb	r3, [r4, #28]
9000c728:	e7dd      	b.n	9000c6e6 <HAL_TIM_IRQHandler+0x2a>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000c72a:	6823      	ldr	r3, [r4, #0]
9000c72c:	f06f 0208 	mvn.w	r2, #8
        HAL_TIM_IC_CaptureCallback(htim);
9000c730:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
9000c732:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
9000c734:	2204      	movs	r2, #4
9000c736:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
9000c738:	69db      	ldr	r3, [r3, #28]
9000c73a:	079b      	lsls	r3, r3, #30
9000c73c:	d15f      	bne.n	9000c7fe <HAL_TIM_IRQHandler+0x142>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000c73e:	f7ff ffb5 	bl	9000c6ac <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c742:	4620      	mov	r0, r4
9000c744:	f7ff ffb6 	bl	9000c6b4 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c748:	2300      	movs	r3, #0
9000c74a:	7723      	strb	r3, [r4, #28]
9000c74c:	e7c7      	b.n	9000c6de <HAL_TIM_IRQHandler+0x22>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000c74e:	6823      	ldr	r3, [r4, #0]
9000c750:	f06f 0204 	mvn.w	r2, #4
        HAL_TIM_IC_CaptureCallback(htim);
9000c754:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
9000c756:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
9000c758:	2202      	movs	r2, #2
9000c75a:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
9000c75c:	699b      	ldr	r3, [r3, #24]
9000c75e:	f413 7f40 	tst.w	r3, #768	@ 0x300
9000c762:	d149      	bne.n	9000c7f8 <HAL_TIM_IRQHandler+0x13c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000c764:	f7ff ffa2 	bl	9000c6ac <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c768:	4620      	mov	r0, r4
9000c76a:	f7ff ffa3 	bl	9000c6b4 <HAL_TIM_PWM_PulseFinishedCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c76e:	2300      	movs	r3, #0
9000c770:	7723      	strb	r3, [r4, #28]
9000c772:	e7b0      	b.n	9000c6d6 <HAL_TIM_IRQHandler+0x1a>
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
9000c774:	f06f 0202 	mvn.w	r2, #2
9000c778:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
9000c77a:	2201      	movs	r2, #1
9000c77c:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
9000c77e:	699b      	ldr	r3, [r3, #24]
9000c780:	079a      	lsls	r2, r3, #30
9000c782:	d033      	beq.n	9000c7ec <HAL_TIM_IRQHandler+0x130>
          HAL_TIM_IC_CaptureCallback(htim);
9000c784:	f7ff ff94 	bl	9000c6b0 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
9000c788:	2300      	movs	r3, #0
9000c78a:	7723      	strb	r3, [r4, #28]
9000c78c:	e79f      	b.n	9000c6ce <HAL_TIM_IRQHandler+0x12>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000c78e:	05ea      	lsls	r2, r5, #23
9000c790:	d5b2      	bpl.n	9000c6f8 <HAL_TIM_IRQHandler+0x3c>
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
9000c792:	0633      	lsls	r3, r6, #24
9000c794:	d5b0      	bpl.n	9000c6f8 <HAL_TIM_IRQHandler+0x3c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000c796:	6823      	ldr	r3, [r4, #0]
9000c798:	f46f 7280 	mvn.w	r2, #256	@ 0x100
      HAL_TIMEx_Break2Callback(htim);
9000c79c:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK2);
9000c79e:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_Break2Callback(htim);
9000c7a0:	f000 f83a 	bl	9000c818 <HAL_TIMEx_Break2Callback>
9000c7a4:	e7a8      	b.n	9000c6f8 <HAL_TIM_IRQHandler+0x3c>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000c7a6:	6823      	ldr	r3, [r4, #0]
9000c7a8:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
9000c7ac:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
9000c7ae:	611a      	str	r2, [r3, #16]
}
9000c7b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
      HAL_TIMEx_CommutCallback(htim);
9000c7b4:	f000 b82c 	b.w	9000c810 <HAL_TIMEx_CommutCallback>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000c7b8:	6823      	ldr	r3, [r4, #0]
9000c7ba:	f06f 0201 	mvn.w	r2, #1
      HAL_TIM_PeriodElapsedCallback(htim);
9000c7be:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
9000c7c0:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
9000c7c2:	f7f7 fb13 	bl	90003dec <HAL_TIM_PeriodElapsedCallback>
9000c7c6:	e792      	b.n	9000c6ee <HAL_TIM_IRQHandler+0x32>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000c7c8:	6823      	ldr	r3, [r4, #0]
9000c7ca:	f46f 5202 	mvn.w	r2, #8320	@ 0x2080
      HAL_TIMEx_BreakCallback(htim);
9000c7ce:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK | TIM_FLAG_SYSTEM_BREAK);
9000c7d0:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
9000c7d2:	f000 f81f 	bl	9000c814 <HAL_TIMEx_BreakCallback>
  if ((itflag & (TIM_FLAG_BREAK2)) == (TIM_FLAG_BREAK2))
9000c7d6:	05e9      	lsls	r1, r5, #23
9000c7d8:	d58e      	bpl.n	9000c6f8 <HAL_TIM_IRQHandler+0x3c>
9000c7da:	e7dc      	b.n	9000c796 <HAL_TIM_IRQHandler+0xda>
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000c7dc:	6823      	ldr	r3, [r4, #0]
9000c7de:	f06f 0240 	mvn.w	r2, #64	@ 0x40
      HAL_TIM_TriggerCallback(htim);
9000c7e2:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
9000c7e4:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
9000c7e6:	f7ff ff67 	bl	9000c6b8 <HAL_TIM_TriggerCallback>
9000c7ea:	e789      	b.n	9000c700 <HAL_TIM_IRQHandler+0x44>
          HAL_TIM_OC_DelayElapsedCallback(htim);
9000c7ec:	f7ff ff5e 	bl	9000c6ac <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c7f0:	4620      	mov	r0, r4
9000c7f2:	f7ff ff5f 	bl	9000c6b4 <HAL_TIM_PWM_PulseFinishedCallback>
9000c7f6:	e7c7      	b.n	9000c788 <HAL_TIM_IRQHandler+0xcc>
        HAL_TIM_IC_CaptureCallback(htim);
9000c7f8:	f7ff ff5a 	bl	9000c6b0 <HAL_TIM_IC_CaptureCallback>
9000c7fc:	e7b7      	b.n	9000c76e <HAL_TIM_IRQHandler+0xb2>
        HAL_TIM_IC_CaptureCallback(htim);
9000c7fe:	f7ff ff57 	bl	9000c6b0 <HAL_TIM_IC_CaptureCallback>
9000c802:	e7a1      	b.n	9000c748 <HAL_TIM_IRQHandler+0x8c>
        HAL_TIM_OC_DelayElapsedCallback(htim);
9000c804:	f7ff ff52 	bl	9000c6ac <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
9000c808:	4620      	mov	r0, r4
9000c80a:	f7ff ff53 	bl	9000c6b4 <HAL_TIM_PWM_PulseFinishedCallback>
9000c80e:	e789      	b.n	9000c724 <HAL_TIM_IRQHandler+0x68>

9000c810 <HAL_TIMEx_CommutCallback>:
/**
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
9000c810:	4770      	bx	lr
9000c812:	bf00      	nop

9000c814 <HAL_TIMEx_BreakCallback>:
/**
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
9000c814:	4770      	bx	lr
9000c816:	bf00      	nop

9000c818 <HAL_TIMEx_Break2Callback>:
/**
  * @brief  Break2 detection callback in non blocking mode
  * @param  htim: TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_Break2Callback(TIM_HandleTypeDef *htim)
9000c818:	4770      	bx	lr
9000c81a:	bf00      	nop

9000c81c <UART_SetConfig>:
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000c81c:	6901      	ldr	r1, [r0, #16]
9000c81e:	6882      	ldr	r2, [r0, #8]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000c820:	6803      	ldr	r3, [r0, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000c822:	430a      	orrs	r2, r1
{
9000c824:	b570      	push	{r4, r5, r6, lr}
9000c826:	4604      	mov	r4, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000c828:	681d      	ldr	r5, [r3, #0]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000c82a:	69c0      	ldr	r0, [r0, #28]
{
9000c82c:	b086      	sub	sp, #24
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000c82e:	6961      	ldr	r1, [r4, #20]
9000c830:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000c832:	49a0      	ldr	r1, [pc, #640]	@ (9000cab4 <UART_SetConfig+0x298>)
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
9000c834:	4302      	orrs	r2, r0
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000c836:	4029      	ands	r1, r5
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);

  /*-------------------------- USART PRESC Configuration -----------------------*/
  /* Configure
  * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000c838:	6a65      	ldr	r5, [r4, #36]	@ 0x24
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000c83a:	430a      	orrs	r2, r1
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000c83c:	68e1      	ldr	r1, [r4, #12]
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
9000c83e:	601a      	str	r2, [r3, #0]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000c840:	685a      	ldr	r2, [r3, #4]
9000c842:	f422 5240 	bic.w	r2, r2, #12288	@ 0x3000
9000c846:	430a      	orrs	r2, r1
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
9000c848:	69a1      	ldr	r1, [r4, #24]
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
9000c84a:	605a      	str	r2, [r3, #4]
  if (!(UART_INSTANCE_LOWPOWER(huart)))
9000c84c:	4a9a      	ldr	r2, [pc, #616]	@ (9000cab8 <UART_SetConfig+0x29c>)
9000c84e:	4293      	cmp	r3, r2
9000c850:	f000 8119 	beq.w	9000ca86 <UART_SetConfig+0x26a>
    tmpreg |= huart->Init.OneBitSampling;
9000c854:	6a22      	ldr	r2, [r4, #32]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000c856:	689e      	ldr	r6, [r3, #8]
    tmpreg |= huart->Init.OneBitSampling;
9000c858:	4311      	orrs	r1, r2
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000c85a:	4a98      	ldr	r2, [pc, #608]	@ (9000cabc <UART_SetConfig+0x2a0>)
9000c85c:	4032      	ands	r2, r6
9000c85e:	4311      	orrs	r1, r2
9000c860:	6099      	str	r1, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000c862:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000c864:	f022 020f 	bic.w	r2, r2, #15
9000c868:	432a      	orrs	r2, r5
9000c86a:	62da      	str	r2, [r3, #44]	@ 0x2c

  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
9000c86c:	4a94      	ldr	r2, [pc, #592]	@ (9000cac0 <UART_SetConfig+0x2a4>)
9000c86e:	4293      	cmp	r3, r2
9000c870:	d028      	beq.n	9000c8c4 <UART_SetConfig+0xa8>
9000c872:	4a94      	ldr	r2, [pc, #592]	@ (9000cac4 <UART_SetConfig+0x2a8>)
9000c874:	4293      	cmp	r3, r2
9000c876:	d01a      	beq.n	9000c8ae <UART_SetConfig+0x92>
9000c878:	4a93      	ldr	r2, [pc, #588]	@ (9000cac8 <UART_SetConfig+0x2ac>)
9000c87a:	4293      	cmp	r3, r2
9000c87c:	d017      	beq.n	9000c8ae <UART_SetConfig+0x92>
9000c87e:	4a93      	ldr	r2, [pc, #588]	@ (9000cacc <UART_SetConfig+0x2b0>)
9000c880:	4293      	cmp	r3, r2
9000c882:	d014      	beq.n	9000c8ae <UART_SetConfig+0x92>
9000c884:	4a92      	ldr	r2, [pc, #584]	@ (9000cad0 <UART_SetConfig+0x2b4>)
9000c886:	4293      	cmp	r3, r2
9000c888:	d011      	beq.n	9000c8ae <UART_SetConfig+0x92>
9000c88a:	4a92      	ldr	r2, [pc, #584]	@ (9000cad4 <UART_SetConfig+0x2b8>)
9000c88c:	4293      	cmp	r3, r2
9000c88e:	d019      	beq.n	9000c8c4 <UART_SetConfig+0xa8>
9000c890:	4a91      	ldr	r2, [pc, #580]	@ (9000cad8 <UART_SetConfig+0x2bc>)
9000c892:	4293      	cmp	r3, r2
9000c894:	d00b      	beq.n	9000c8ae <UART_SetConfig+0x92>
9000c896:	4a91      	ldr	r2, [pc, #580]	@ (9000cadc <UART_SetConfig+0x2c0>)
9000c898:	4293      	cmp	r3, r2
9000c89a:	d008      	beq.n	9000c8ae <UART_SetConfig+0x92>

      /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
          (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
      {
        ret = HAL_ERROR;
9000c89c:	2001      	movs	r0, #1
  /* Initialize the number of data to process during RX/TX ISR execution */
  huart->NbTxDataToProcess = 1;
  huart->NbRxDataToProcess = 1;

  /* Clear ISR function pointers */
  huart->RxISR = NULL;
9000c89e:	2300      	movs	r3, #0
  huart->NbRxDataToProcess = 1;
9000c8a0:	f04f 1201 	mov.w	r2, #65537	@ 0x10001
  huart->RxISR = NULL;
9000c8a4:	6763      	str	r3, [r4, #116]	@ 0x74
  huart->NbRxDataToProcess = 1;
9000c8a6:	66a2      	str	r2, [r4, #104]	@ 0x68
  huart->TxISR = NULL;
9000c8a8:	67a3      	str	r3, [r4, #120]	@ 0x78

  return ret;
}
9000c8aa:	b006      	add	sp, #24
9000c8ac:	bd70      	pop	{r4, r5, r6, pc}
  UART_GETCLOCKSOURCE(huart, clocksource);
9000c8ae:	4b8c      	ldr	r3, [pc, #560]	@ (9000cae0 <UART_SetConfig+0x2c4>)
9000c8b0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000c8b2:	f003 0307 	and.w	r3, r3, #7
9000c8b6:	2b05      	cmp	r3, #5
9000c8b8:	d8f0      	bhi.n	9000c89c <UART_SetConfig+0x80>
9000c8ba:	e8df f003 	tbb	[pc, r3]
9000c8be:	7e9e      	.short	0x7e9e
9000c8c0:	785f9189 	.word	0x785f9189
9000c8c4:	4b86      	ldr	r3, [pc, #536]	@ (9000cae0 <UART_SetConfig+0x2c4>)
9000c8c6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000c8c8:	f003 0338 	and.w	r3, r3, #56	@ 0x38
9000c8cc:	2b28      	cmp	r3, #40	@ 0x28
9000c8ce:	d8e5      	bhi.n	9000c89c <UART_SetConfig+0x80>
9000c8d0:	a201      	add	r2, pc, #4	@ (adr r2, 9000c8d8 <UART_SetConfig+0xbc>)
9000c8d2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
9000c8d6:	bf00      	nop
9000c8d8:	9000ca55 	.word	0x9000ca55
9000c8dc:	9000c89d 	.word	0x9000c89d
9000c8e0:	9000c89d 	.word	0x9000c89d
9000c8e4:	9000c89d 	.word	0x9000c89d
9000c8e8:	9000c89d 	.word	0x9000c89d
9000c8ec:	9000c89d 	.word	0x9000c89d
9000c8f0:	9000c89d 	.word	0x9000c89d
9000c8f4:	9000c89d 	.word	0x9000c89d
9000c8f8:	9000c9bb 	.word	0x9000c9bb
9000c8fc:	9000c89d 	.word	0x9000c89d
9000c900:	9000c89d 	.word	0x9000c89d
9000c904:	9000c89d 	.word	0x9000c89d
9000c908:	9000c89d 	.word	0x9000c89d
9000c90c:	9000c89d 	.word	0x9000c89d
9000c910:	9000c89d 	.word	0x9000c89d
9000c914:	9000c89d 	.word	0x9000c89d
9000c918:	9000c9d1 	.word	0x9000c9d1
9000c91c:	9000c89d 	.word	0x9000c89d
9000c920:	9000c89d 	.word	0x9000c89d
9000c924:	9000c89d 	.word	0x9000c89d
9000c928:	9000c89d 	.word	0x9000c89d
9000c92c:	9000c89d 	.word	0x9000c89d
9000c930:	9000c89d 	.word	0x9000c89d
9000c934:	9000c89d 	.word	0x9000c89d
9000c938:	9000c9e1 	.word	0x9000c9e1
9000c93c:	9000c89d 	.word	0x9000c89d
9000c940:	9000c89d 	.word	0x9000c89d
9000c944:	9000c89d 	.word	0x9000c89d
9000c948:	9000c89d 	.word	0x9000c89d
9000c94c:	9000c89d 	.word	0x9000c89d
9000c950:	9000c89d 	.word	0x9000c89d
9000c954:	9000c89d 	.word	0x9000c89d
9000c958:	9000c97d 	.word	0x9000c97d
9000c95c:	9000c89d 	.word	0x9000c89d
9000c960:	9000c89d 	.word	0x9000c89d
9000c964:	9000c89d 	.word	0x9000c89d
9000c968:	9000c89d 	.word	0x9000c89d
9000c96c:	9000c89d 	.word	0x9000c89d
9000c970:	9000c89d 	.word	0x9000c89d
9000c974:	9000c89d 	.word	0x9000c89d
9000c978:	9000c9af 	.word	0x9000c9af
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000c97c:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
        pclk = (uint32_t) CSI_VALUE;
9000c980:	4858      	ldr	r0, [pc, #352]	@ (9000cae4 <UART_SetConfig+0x2c8>)
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000c982:	d047      	beq.n	9000ca14 <UART_SetConfig+0x1f8>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000c984:	4a58      	ldr	r2, [pc, #352]	@ (9000cae8 <UART_SetConfig+0x2cc>)
9000c986:	6863      	ldr	r3, [r4, #4]
9000c988:	f832 1015 	ldrh.w	r1, [r2, r5, lsl #1]
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000c98c:	f64f 72ef 	movw	r2, #65519	@ 0xffef
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000c990:	fbb0 f0f1 	udiv	r0, r0, r1
9000c994:	eb00 0053 	add.w	r0, r0, r3, lsr #1
9000c998:	fbb0 f0f3 	udiv	r0, r0, r3
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000c99c:	f1a0 0310 	sub.w	r3, r0, #16
9000c9a0:	4293      	cmp	r3, r2
9000c9a2:	f63f af7b 	bhi.w	9000c89c <UART_SetConfig+0x80>
          huart->Instance->BRR = usartdiv;
9000c9a6:	6823      	ldr	r3, [r4, #0]
9000c9a8:	60d8      	str	r0, [r3, #12]
          pclk = (uint32_t) HSI_VALUE;
9000c9aa:	2000      	movs	r0, #0
9000c9ac:	e777      	b.n	9000c89e <UART_SetConfig+0x82>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000c9ae:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000c9b2:	d02f      	beq.n	9000ca14 <UART_SetConfig+0x1f8>
        pclk = (uint32_t) LSE_VALUE;
9000c9b4:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
9000c9b8:	e7e4      	b.n	9000c984 <UART_SetConfig+0x168>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000c9ba:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000c9be:	d022      	beq.n	9000ca06 <UART_SetConfig+0x1ea>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000c9c0:	4668      	mov	r0, sp
9000c9c2:	f7ff fbd5 	bl	9000c170 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000c9c6:	9801      	ldr	r0, [sp, #4]
    if (pclk != 0U)
9000c9c8:	2800      	cmp	r0, #0
9000c9ca:	d0ee      	beq.n	9000c9aa <UART_SetConfig+0x18e>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000c9cc:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000c9ce:	e7d9      	b.n	9000c984 <UART_SetConfig+0x168>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000c9d0:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000c9d4:	d04f      	beq.n	9000ca76 <UART_SetConfig+0x25a>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000c9d6:	a803      	add	r0, sp, #12
9000c9d8:	f7ff fc64 	bl	9000c2a4 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000c9dc:	9804      	ldr	r0, [sp, #16]
        break;
9000c9de:	e7f3      	b.n	9000c9c8 <UART_SetConfig+0x1ac>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000c9e0:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000c9e4:	d03c      	beq.n	9000ca60 <UART_SetConfig+0x244>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000c9e6:	4b3e      	ldr	r3, [pc, #248]	@ (9000cae0 <UART_SetConfig+0x2c4>)
9000c9e8:	681a      	ldr	r2, [r3, #0]
9000c9ea:	0691      	lsls	r1, r2, #26
9000c9ec:	d52d      	bpl.n	9000ca4a <UART_SetConfig+0x22e>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000c9ee:	681b      	ldr	r3, [r3, #0]
9000c9f0:	483e      	ldr	r0, [pc, #248]	@ (9000caec <UART_SetConfig+0x2d0>)
9000c9f2:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000c9f6:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9000c9f8:	e7c4      	b.n	9000c984 <UART_SetConfig+0x168>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000c9fa:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000c9fe:	d026      	beq.n	9000ca4e <UART_SetConfig+0x232>
        pclk = HAL_RCC_GetPCLK1Freq();
9000ca00:	f7fe fac4 	bl	9000af8c <HAL_RCC_GetPCLK1Freq>
        break;
9000ca04:	e7e0      	b.n	9000c9c8 <UART_SetConfig+0x1ac>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000ca06:	4668      	mov	r0, sp
9000ca08:	f7ff fbb2 	bl	9000c170 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000ca0c:	9801      	ldr	r0, [sp, #4]
    if (pclk != 0U)
9000ca0e:	2800      	cmp	r0, #0
9000ca10:	d0cb      	beq.n	9000c9aa <UART_SetConfig+0x18e>
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000ca12:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000ca14:	4b34      	ldr	r3, [pc, #208]	@ (9000cae8 <UART_SetConfig+0x2cc>)
9000ca16:	6862      	ldr	r2, [r4, #4]
9000ca18:	f833 1015 	ldrh.w	r1, [r3, r5, lsl #1]
9000ca1c:	0853      	lsrs	r3, r2, #1
9000ca1e:	fbb0 f0f1 	udiv	r0, r0, r1
9000ca22:	eb03 0340 	add.w	r3, r3, r0, lsl #1
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000ca26:	f64f 71ef 	movw	r1, #65519	@ 0xffef
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000ca2a:	fbb3 f3f2 	udiv	r3, r3, r2
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
9000ca2e:	f1a3 0210 	sub.w	r2, r3, #16
9000ca32:	428a      	cmp	r2, r1
9000ca34:	f63f af32 	bhi.w	9000c89c <UART_SetConfig+0x80>
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
9000ca38:	f023 020f 	bic.w	r2, r3, #15
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
9000ca3c:	f3c3 0342 	ubfx	r3, r3, #1, #3
        huart->Instance->BRR = brrtemp;
9000ca40:	6821      	ldr	r1, [r4, #0]
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
9000ca42:	b292      	uxth	r2, r2
        huart->Instance->BRR = brrtemp;
9000ca44:	4313      	orrs	r3, r2
9000ca46:	60cb      	str	r3, [r1, #12]
9000ca48:	e7af      	b.n	9000c9aa <UART_SetConfig+0x18e>
          pclk = (uint32_t) HSI_VALUE;
9000ca4a:	4828      	ldr	r0, [pc, #160]	@ (9000caec <UART_SetConfig+0x2d0>)
9000ca4c:	e79a      	b.n	9000c984 <UART_SetConfig+0x168>
        pclk = HAL_RCC_GetPCLK1Freq();
9000ca4e:	f7fe fa9d 	bl	9000af8c <HAL_RCC_GetPCLK1Freq>
        break;
9000ca52:	e7dc      	b.n	9000ca0e <UART_SetConfig+0x1f2>
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
9000ca54:	f5b0 4f00 	cmp.w	r0, #32768	@ 0x8000
9000ca58:	d012      	beq.n	9000ca80 <UART_SetConfig+0x264>
        pclk = HAL_RCC_GetPCLK2Freq();
9000ca5a:	f7fe fadf 	bl	9000b01c <HAL_RCC_GetPCLK2Freq>
        break;
9000ca5e:	e7b3      	b.n	9000c9c8 <UART_SetConfig+0x1ac>
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000ca60:	4b1f      	ldr	r3, [pc, #124]	@ (9000cae0 <UART_SetConfig+0x2c4>)
9000ca62:	681a      	ldr	r2, [r3, #0]
9000ca64:	0690      	lsls	r0, r2, #26
9000ca66:	f140 808b 	bpl.w	9000cb80 <UART_SetConfig+0x364>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000ca6a:	681b      	ldr	r3, [r3, #0]
9000ca6c:	481f      	ldr	r0, [pc, #124]	@ (9000caec <UART_SetConfig+0x2d0>)
9000ca6e:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000ca72:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9000ca74:	e7ce      	b.n	9000ca14 <UART_SetConfig+0x1f8>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000ca76:	a803      	add	r0, sp, #12
9000ca78:	f7ff fc14 	bl	9000c2a4 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000ca7c:	9804      	ldr	r0, [sp, #16]
        break;
9000ca7e:	e7c6      	b.n	9000ca0e <UART_SetConfig+0x1f2>
        pclk = HAL_RCC_GetPCLK2Freq();
9000ca80:	f7fe facc 	bl	9000b01c <HAL_RCC_GetPCLK2Freq>
        break;
9000ca84:	e7c3      	b.n	9000ca0e <UART_SetConfig+0x1f2>
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000ca86:	6898      	ldr	r0, [r3, #8]
9000ca88:	4a0c      	ldr	r2, [pc, #48]	@ (9000cabc <UART_SetConfig+0x2a0>)
9000ca8a:	4002      	ands	r2, r0
9000ca8c:	430a      	orrs	r2, r1
  UART_GETCLOCKSOURCE(huart, clocksource);
9000ca8e:	4914      	ldr	r1, [pc, #80]	@ (9000cae0 <UART_SetConfig+0x2c4>)
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
9000ca90:	609a      	str	r2, [r3, #8]
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
9000ca92:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000ca94:	f022 020f 	bic.w	r2, r2, #15
9000ca98:	432a      	orrs	r2, r5
9000ca9a:	62da      	str	r2, [r3, #44]	@ 0x2c
  UART_GETCLOCKSOURCE(huart, clocksource);
9000ca9c:	6d8b      	ldr	r3, [r1, #88]	@ 0x58
9000ca9e:	f003 0307 	and.w	r3, r3, #7
9000caa2:	2b05      	cmp	r3, #5
9000caa4:	f63f aefa 	bhi.w	9000c89c <UART_SetConfig+0x80>
9000caa8:	e8df f003 	tbb	[pc, r3]
9000caac:	224e575c 	.word	0x224e575c
9000cab0:	5f62      	.short	0x5f62
9000cab2:	bf00      	nop
9000cab4:	cfff69f3 	.word	0xcfff69f3
9000cab8:	58000c00 	.word	0x58000c00
9000cabc:	11fff4ff 	.word	0x11fff4ff
9000cac0:	40011000 	.word	0x40011000
9000cac4:	40004400 	.word	0x40004400
9000cac8:	40004800 	.word	0x40004800
9000cacc:	40004c00 	.word	0x40004c00
9000cad0:	40005000 	.word	0x40005000
9000cad4:	40011400 	.word	0x40011400
9000cad8:	40007800 	.word	0x40007800
9000cadc:	40007c00 	.word	0x40007c00
9000cae0:	58024400 	.word	0x58024400
9000cae4:	003d0900 	.word	0x003d0900
9000cae8:	9002d0d8 	.word	0x9002d0d8
9000caec:	03d09000 	.word	0x03d09000
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
9000caf0:	4b24      	ldr	r3, [pc, #144]	@ (9000cb84 <UART_SetConfig+0x368>)
9000caf2:	681a      	ldr	r2, [r3, #0]
9000caf4:	0692      	lsls	r2, r2, #26
9000caf6:	d43d      	bmi.n	9000cb74 <UART_SetConfig+0x358>
          pclk = (uint32_t) HSI_VALUE;
9000caf8:	4823      	ldr	r0, [pc, #140]	@ (9000cb88 <UART_SetConfig+0x36c>)
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000cafa:	4b24      	ldr	r3, [pc, #144]	@ (9000cb8c <UART_SetConfig+0x370>)
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000cafc:	6866      	ldr	r6, [r4, #4]
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000cafe:	f833 2015 	ldrh.w	r2, [r3, r5, lsl #1]
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000cb02:	eb06 0146 	add.w	r1, r6, r6, lsl #1
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000cb06:	fbb0 f3f2 	udiv	r3, r0, r2
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
9000cb0a:	4299      	cmp	r1, r3
9000cb0c:	f63f aec6 	bhi.w	9000c89c <UART_SetConfig+0x80>
9000cb10:	ebb3 3f06 	cmp.w	r3, r6, lsl #12
9000cb14:	f63f aec2 	bhi.w	9000c89c <UART_SetConfig+0x80>
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
9000cb18:	2300      	movs	r3, #0
9000cb1a:	4619      	mov	r1, r3
9000cb1c:	f7f3 fe3c 	bl	90000798 <__aeabi_uldivmod>
9000cb20:	4632      	mov	r2, r6
9000cb22:	0209      	lsls	r1, r1, #8
9000cb24:	0203      	lsls	r3, r0, #8
9000cb26:	ea41 6110 	orr.w	r1, r1, r0, lsr #24
9000cb2a:	0870      	lsrs	r0, r6, #1
9000cb2c:	1818      	adds	r0, r3, r0
9000cb2e:	f04f 0300 	mov.w	r3, #0
9000cb32:	f141 0100 	adc.w	r1, r1, #0
9000cb36:	f7f3 fe2f 	bl	90000798 <__aeabi_uldivmod>
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
9000cb3a:	4b15      	ldr	r3, [pc, #84]	@ (9000cb90 <UART_SetConfig+0x374>)
9000cb3c:	f5a0 7240 	sub.w	r2, r0, #768	@ 0x300
9000cb40:	429a      	cmp	r2, r3
9000cb42:	f63f aeab 	bhi.w	9000c89c <UART_SetConfig+0x80>
9000cb46:	e72e      	b.n	9000c9a6 <UART_SetConfig+0x18a>
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
9000cb48:	a803      	add	r0, sp, #12
9000cb4a:	f7ff fbab 	bl	9000c2a4 <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
9000cb4e:	9804      	ldr	r0, [sp, #16]
    if (pclk != 0U)
9000cb50:	2800      	cmp	r0, #0
9000cb52:	f43f af2a 	beq.w	9000c9aa <UART_SetConfig+0x18e>
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
9000cb56:	6a65      	ldr	r5, [r4, #36]	@ 0x24
9000cb58:	e7cf      	b.n	9000cafa <UART_SetConfig+0x2de>
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
9000cb5a:	4668      	mov	r0, sp
9000cb5c:	f7ff fb08 	bl	9000c170 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
9000cb60:	9801      	ldr	r0, [sp, #4]
        break;
9000cb62:	e7f5      	b.n	9000cb50 <UART_SetConfig+0x334>
        pclk = HAL_RCCEx_GetD3PCLK1Freq();
9000cb64:	f7ff faf2 	bl	9000c14c <HAL_RCCEx_GetD3PCLK1Freq>
        break;
9000cb68:	e7f2      	b.n	9000cb50 <UART_SetConfig+0x334>
        pclk = (uint32_t) LSE_VALUE;
9000cb6a:	f44f 4000 	mov.w	r0, #32768	@ 0x8000
9000cb6e:	e7c4      	b.n	9000cafa <UART_SetConfig+0x2de>
        pclk = (uint32_t) CSI_VALUE;
9000cb70:	4808      	ldr	r0, [pc, #32]	@ (9000cb94 <UART_SetConfig+0x378>)
9000cb72:	e7c2      	b.n	9000cafa <UART_SetConfig+0x2de>
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
9000cb74:	681b      	ldr	r3, [r3, #0]
9000cb76:	4804      	ldr	r0, [pc, #16]	@ (9000cb88 <UART_SetConfig+0x36c>)
9000cb78:	f3c3 03c1 	ubfx	r3, r3, #3, #2
9000cb7c:	40d8      	lsrs	r0, r3
    if (pclk != 0U)
9000cb7e:	e7bc      	b.n	9000cafa <UART_SetConfig+0x2de>
          pclk = (uint32_t) HSI_VALUE;
9000cb80:	4801      	ldr	r0, [pc, #4]	@ (9000cb88 <UART_SetConfig+0x36c>)
9000cb82:	e747      	b.n	9000ca14 <UART_SetConfig+0x1f8>
9000cb84:	58024400 	.word	0x58024400
9000cb88:	03d09000 	.word	0x03d09000
9000cb8c:	9002d0d8 	.word	0x9002d0d8
9000cb90:	000ffcff 	.word	0x000ffcff
9000cb94:	003d0900 	.word	0x003d0900

9000cb98 <UART_AdvFeatureConfig>:
{
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
9000cb98:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000cb9a:	071a      	lsls	r2, r3, #28
{
9000cb9c:	b410      	push	{r4}
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
9000cb9e:	d506      	bpl.n	9000cbae <UART_AdvFeatureConfig+0x16>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
9000cba0:	6801      	ldr	r1, [r0, #0]
9000cba2:	6b84      	ldr	r4, [r0, #56]	@ 0x38
9000cba4:	684a      	ldr	r2, [r1, #4]
9000cba6:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
9000cbaa:	4322      	orrs	r2, r4
9000cbac:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
9000cbae:	07dc      	lsls	r4, r3, #31
9000cbb0:	d506      	bpl.n	9000cbc0 <UART_AdvFeatureConfig+0x28>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
9000cbb2:	6801      	ldr	r1, [r0, #0]
9000cbb4:	6ac4      	ldr	r4, [r0, #44]	@ 0x2c
9000cbb6:	684a      	ldr	r2, [r1, #4]
9000cbb8:	f422 3200 	bic.w	r2, r2, #131072	@ 0x20000
9000cbbc:	4322      	orrs	r2, r4
9000cbbe:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
9000cbc0:	0799      	lsls	r1, r3, #30
9000cbc2:	d506      	bpl.n	9000cbd2 <UART_AdvFeatureConfig+0x3a>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
9000cbc4:	6801      	ldr	r1, [r0, #0]
9000cbc6:	6b04      	ldr	r4, [r0, #48]	@ 0x30
9000cbc8:	684a      	ldr	r2, [r1, #4]
9000cbca:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
9000cbce:	4322      	orrs	r2, r4
9000cbd0:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
9000cbd2:	075a      	lsls	r2, r3, #29
9000cbd4:	d506      	bpl.n	9000cbe4 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
9000cbd6:	6801      	ldr	r1, [r0, #0]
9000cbd8:	6b44      	ldr	r4, [r0, #52]	@ 0x34
9000cbda:	684a      	ldr	r2, [r1, #4]
9000cbdc:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
9000cbe0:	4322      	orrs	r2, r4
9000cbe2:	604a      	str	r2, [r1, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
9000cbe4:	06dc      	lsls	r4, r3, #27
9000cbe6:	d506      	bpl.n	9000cbf6 <UART_AdvFeatureConfig+0x5e>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
9000cbe8:	6801      	ldr	r1, [r0, #0]
9000cbea:	6bc4      	ldr	r4, [r0, #60]	@ 0x3c
9000cbec:	688a      	ldr	r2, [r1, #8]
9000cbee:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
9000cbf2:	4322      	orrs	r2, r4
9000cbf4:	608a      	str	r2, [r1, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
9000cbf6:	0699      	lsls	r1, r3, #26
9000cbf8:	d506      	bpl.n	9000cc08 <UART_AdvFeatureConfig+0x70>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
9000cbfa:	6801      	ldr	r1, [r0, #0]
9000cbfc:	6c04      	ldr	r4, [r0, #64]	@ 0x40
9000cbfe:	688a      	ldr	r2, [r1, #8]
9000cc00:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
9000cc04:	4322      	orrs	r2, r4
9000cc06:	608a      	str	r2, [r1, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
9000cc08:	065a      	lsls	r2, r3, #25
9000cc0a:	d50a      	bpl.n	9000cc22 <UART_AdvFeatureConfig+0x8a>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
9000cc0c:	6801      	ldr	r1, [r0, #0]
9000cc0e:	6c44      	ldr	r4, [r0, #68]	@ 0x44
9000cc10:	684a      	ldr	r2, [r1, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
9000cc12:	f5b4 1f80 	cmp.w	r4, #1048576	@ 0x100000
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
9000cc16:	f422 1280 	bic.w	r2, r2, #1048576	@ 0x100000
9000cc1a:	ea42 0204 	orr.w	r2, r2, r4
9000cc1e:	604a      	str	r2, [r1, #4]
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
9000cc20:	d00b      	beq.n	9000cc3a <UART_AdvFeatureConfig+0xa2>
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
9000cc22:	061b      	lsls	r3, r3, #24
9000cc24:	d506      	bpl.n	9000cc34 <UART_AdvFeatureConfig+0x9c>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
9000cc26:	6802      	ldr	r2, [r0, #0]
9000cc28:	6cc1      	ldr	r1, [r0, #76]	@ 0x4c
9000cc2a:	6853      	ldr	r3, [r2, #4]
9000cc2c:	f423 2300 	bic.w	r3, r3, #524288	@ 0x80000
9000cc30:	430b      	orrs	r3, r1
9000cc32:	6053      	str	r3, [r2, #4]
  }
}
9000cc34:	f85d 4b04 	ldr.w	r4, [sp], #4
9000cc38:	4770      	bx	lr
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
9000cc3a:	684a      	ldr	r2, [r1, #4]
9000cc3c:	6c84      	ldr	r4, [r0, #72]	@ 0x48
9000cc3e:	f422 02c0 	bic.w	r2, r2, #6291456	@ 0x600000
9000cc42:	4322      	orrs	r2, r4
9000cc44:	604a      	str	r2, [r1, #4]
9000cc46:	e7ec      	b.n	9000cc22 <UART_AdvFeatureConfig+0x8a>

9000cc48 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
9000cc48:	b538      	push	{r3, r4, r5, lr}
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000cc4a:	2300      	movs	r3, #0
{
9000cc4c:	4604      	mov	r4, r0
  huart->ErrorCode = HAL_UART_ERROR_NONE;
9000cc4e:	f8c0 3090 	str.w	r3, [r0, #144]	@ 0x90

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
9000cc52:	f7fa f909 	bl	90006e68 <HAL_GetTick>

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
9000cc56:	6822      	ldr	r2, [r4, #0]
  tickstart = HAL_GetTick();
9000cc58:	4605      	mov	r5, r0
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
9000cc5a:	6813      	ldr	r3, [r2, #0]
9000cc5c:	071b      	lsls	r3, r3, #28
9000cc5e:	d40f      	bmi.n	9000cc80 <UART_CheckIdleState+0x38>
      return HAL_TIMEOUT;
    }
  }

  /* Check if the Receiver is enabled */
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
9000cc60:	6813      	ldr	r3, [r2, #0]
9000cc62:	0759      	lsls	r1, r3, #29
9000cc64:	d431      	bmi.n	9000ccca <UART_CheckIdleState+0x82>
  }

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
  huart->RxState = HAL_UART_STATE_READY;
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000cc66:	2300      	movs	r3, #0
  huart->gState = HAL_UART_STATE_READY;
9000cc68:	2220      	movs	r2, #32
  huart->RxEventType = HAL_UART_RXEVENT_TC;

  __HAL_UNLOCK(huart);

  return HAL_OK;
9000cc6a:	4618      	mov	r0, r3
  huart->gState = HAL_UART_STATE_READY;
9000cc6c:	f8c4 2088 	str.w	r2, [r4, #136]	@ 0x88
  huart->RxState = HAL_UART_STATE_READY;
9000cc70:	f8c4 208c 	str.w	r2, [r4, #140]	@ 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000cc74:	66e3      	str	r3, [r4, #108]	@ 0x6c
  huart->RxEventType = HAL_UART_RXEVENT_TC;
9000cc76:	6723      	str	r3, [r4, #112]	@ 0x70
      __HAL_UNLOCK(huart);
9000cc78:	2300      	movs	r3, #0
9000cc7a:	f884 3084 	strb.w	r3, [r4, #132]	@ 0x84
}
9000cc7e:	bd38      	pop	{r3, r4, r5, pc}
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000cc80:	69d3      	ldr	r3, [r2, #28]
9000cc82:	0298      	lsls	r0, r3, #10
9000cc84:	d4ec      	bmi.n	9000cc60 <UART_CheckIdleState+0x18>
9000cc86:	e00c      	b.n	9000cca2 <UART_CheckIdleState+0x5a>
      {

        return HAL_TIMEOUT;
      }

      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
9000cc88:	6819      	ldr	r1, [r3, #0]
9000cc8a:	461a      	mov	r2, r3
9000cc8c:	0749      	lsls	r1, r1, #29
9000cc8e:	d505      	bpl.n	9000cc9c <UART_CheckIdleState+0x54>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
9000cc90:	69d9      	ldr	r1, [r3, #28]
9000cc92:	0708      	lsls	r0, r1, #28
9000cc94:	d44a      	bmi.n	9000cd2c <UART_CheckIdleState+0xe4>
          /* Process Unlocked */
          __HAL_UNLOCK(huart);

          return HAL_ERROR;
        }
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
9000cc96:	69d9      	ldr	r1, [r3, #28]
9000cc98:	0509      	lsls	r1, r1, #20
9000cc9a:	d475      	bmi.n	9000cd88 <UART_CheckIdleState+0x140>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000cc9c:	69db      	ldr	r3, [r3, #28]
9000cc9e:	0298      	lsls	r0, r3, #10
9000cca0:	d4de      	bmi.n	9000cc60 <UART_CheckIdleState+0x18>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000cca2:	f7fa f8e1 	bl	90006e68 <HAL_GetTick>
9000cca6:	1b43      	subs	r3, r0, r5
9000cca8:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
9000ccac:	6823      	ldr	r3, [r4, #0]
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000ccae:	d3eb      	bcc.n	9000cc88 <UART_CheckIdleState+0x40>
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ccb0:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE));
9000ccb4:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ccb8:	e843 2100 	strex	r1, r2, [r3]
9000ccbc:	2900      	cmp	r1, #0
9000ccbe:	d1f7      	bne.n	9000ccb0 <UART_CheckIdleState+0x68>
      huart->gState = HAL_UART_STATE_READY;
9000ccc0:	2320      	movs	r3, #32
9000ccc2:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
      return HAL_TIMEOUT;
9000ccc6:	2003      	movs	r0, #3
9000ccc8:	e7d6      	b.n	9000cc78 <UART_CheckIdleState+0x30>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000ccca:	69d3      	ldr	r3, [r2, #28]
9000cccc:	025b      	lsls	r3, r3, #9
9000ccce:	d4ca      	bmi.n	9000cc66 <UART_CheckIdleState+0x1e>
9000ccd0:	e00d      	b.n	9000ccee <UART_CheckIdleState+0xa6>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
9000ccd2:	681a      	ldr	r2, [r3, #0]
9000ccd4:	0750      	lsls	r0, r2, #29
9000ccd6:	d507      	bpl.n	9000cce8 <UART_CheckIdleState+0xa0>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
9000ccd8:	69da      	ldr	r2, [r3, #28]
9000ccda:	0711      	lsls	r1, r2, #28
9000ccdc:	f100 8082 	bmi.w	9000cde4 <UART_CheckIdleState+0x19c>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
9000cce0:	69da      	ldr	r2, [r3, #28]
9000cce2:	0512      	lsls	r2, r2, #20
9000cce4:	f100 80ac 	bmi.w	9000ce40 <UART_CheckIdleState+0x1f8>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
9000cce8:	69db      	ldr	r3, [r3, #28]
9000ccea:	025b      	lsls	r3, r3, #9
9000ccec:	d4bb      	bmi.n	9000cc66 <UART_CheckIdleState+0x1e>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
9000ccee:	f7fa f8bb 	bl	90006e68 <HAL_GetTick>
9000ccf2:	1b43      	subs	r3, r0, r5
9000ccf4:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
9000ccf8:	6823      	ldr	r3, [r4, #0]
9000ccfa:	d3ea      	bcc.n	9000ccd2 <UART_CheckIdleState+0x8a>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ccfc:	e853 2f00 	ldrex	r2, [r3]
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000cd00:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cd04:	e843 2100 	strex	r1, r2, [r3]
9000cd08:	2900      	cmp	r1, #0
9000cd0a:	d1f7      	bne.n	9000ccfc <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cd0c:	f103 0208 	add.w	r2, r3, #8
9000cd10:	e852 2f00 	ldrex	r2, [r2]
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
9000cd14:	f022 0201 	bic.w	r2, r2, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cd18:	f103 0008 	add.w	r0, r3, #8
9000cd1c:	e840 2100 	strex	r1, r2, [r0]
9000cd20:	2900      	cmp	r1, #0
9000cd22:	d1f3      	bne.n	9000cd0c <UART_CheckIdleState+0xc4>
      huart->RxState = HAL_UART_STATE_READY;
9000cd24:	2320      	movs	r3, #32
9000cd26:	f8c4 308c 	str.w	r3, [r4, #140]	@ 0x8c
      return HAL_TIMEOUT;
9000cd2a:	e7cc      	b.n	9000ccc6 <UART_CheckIdleState+0x7e>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
9000cd2c:	2208      	movs	r2, #8
9000cd2e:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cd30:	e853 2f00 	ldrex	r2, [r3]
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000cd34:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cd38:	e843 2100 	strex	r1, r2, [r3]
9000cd3c:	2900      	cmp	r1, #0
9000cd3e:	d1f7      	bne.n	9000cd30 <UART_CheckIdleState+0xe8>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000cd40:	4856      	ldr	r0, [pc, #344]	@ (9000ce9c <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cd42:	f103 0208 	add.w	r2, r3, #8
9000cd46:	e852 2f00 	ldrex	r2, [r2]
9000cd4a:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cd4c:	f103 0508 	add.w	r5, r3, #8
9000cd50:	e845 2100 	strex	r1, r2, [r5]
9000cd54:	2900      	cmp	r1, #0
9000cd56:	d1f4      	bne.n	9000cd42 <UART_CheckIdleState+0xfa>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000cd58:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000cd5a:	2a01      	cmp	r2, #1
9000cd5c:	d00b      	beq.n	9000cd76 <UART_CheckIdleState+0x12e>
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000cd5e:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000cd60:	2020      	movs	r0, #32
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000cd62:	2108      	movs	r1, #8
  huart->RxState = HAL_UART_STATE_READY;
9000cd64:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
9000cd68:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000cd6a:	66e2      	str	r2, [r4, #108]	@ 0x6c
          __HAL_UNLOCK(huart);
9000cd6c:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000cd70:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_ERROR;
9000cd74:	e79c      	b.n	9000ccb0 <UART_CheckIdleState+0x68>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cd76:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000cd7a:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cd7e:	e843 2100 	strex	r1, r2, [r3]
9000cd82:	2900      	cmp	r1, #0
9000cd84:	d1f7      	bne.n	9000cd76 <UART_CheckIdleState+0x12e>
9000cd86:	e7ea      	b.n	9000cd5e <UART_CheckIdleState+0x116>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9000cd88:	f44f 6200 	mov.w	r2, #2048	@ 0x800
9000cd8c:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cd8e:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000cd92:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cd96:	e843 2100 	strex	r1, r2, [r3]
9000cd9a:	2900      	cmp	r1, #0
9000cd9c:	d1f7      	bne.n	9000cd8e <UART_CheckIdleState+0x146>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000cd9e:	483f      	ldr	r0, [pc, #252]	@ (9000ce9c <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cda0:	f103 0208 	add.w	r2, r3, #8
9000cda4:	e852 2f00 	ldrex	r2, [r2]
9000cda8:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cdaa:	f103 0508 	add.w	r5, r3, #8
9000cdae:	e845 2100 	strex	r1, r2, [r5]
9000cdb2:	2900      	cmp	r1, #0
9000cdb4:	d1f4      	bne.n	9000cda0 <UART_CheckIdleState+0x158>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000cdb6:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000cdb8:	2a01      	cmp	r2, #1
9000cdba:	d00a      	beq.n	9000cdd2 <UART_CheckIdleState+0x18a>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000cdbc:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000cdbe:	2120      	movs	r1, #32
  huart->RxISR = NULL;
9000cdc0:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->RxState = HAL_UART_STATE_READY;
9000cdc2:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
          __HAL_UNLOCK(huart);
9000cdc6:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000cdca:	66e2      	str	r2, [r4, #108]	@ 0x6c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
9000cdcc:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_TIMEOUT;
9000cdd0:	e76e      	b.n	9000ccb0 <UART_CheckIdleState+0x68>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cdd2:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000cdd6:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cdda:	e843 2100 	strex	r1, r2, [r3]
9000cdde:	2900      	cmp	r1, #0
9000cde0:	d1f7      	bne.n	9000cdd2 <UART_CheckIdleState+0x18a>
9000cde2:	e7eb      	b.n	9000cdbc <UART_CheckIdleState+0x174>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
9000cde4:	2208      	movs	r2, #8
9000cde6:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cde8:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000cdec:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000cdf0:	e843 2100 	strex	r1, r2, [r3]
9000cdf4:	2900      	cmp	r1, #0
9000cdf6:	d1f7      	bne.n	9000cde8 <UART_CheckIdleState+0x1a0>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000cdf8:	4828      	ldr	r0, [pc, #160]	@ (9000ce9c <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000cdfa:	f103 0208 	add.w	r2, r3, #8
9000cdfe:	e852 2f00 	ldrex	r2, [r2]
9000ce02:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ce04:	f103 0508 	add.w	r5, r3, #8
9000ce08:	e845 2100 	strex	r1, r2, [r5]
9000ce0c:	2900      	cmp	r1, #0
9000ce0e:	d1f4      	bne.n	9000cdfa <UART_CheckIdleState+0x1b2>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000ce10:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000ce12:	2a01      	cmp	r2, #1
9000ce14:	d00b      	beq.n	9000ce2e <UART_CheckIdleState+0x1e6>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000ce16:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000ce18:	2020      	movs	r0, #32
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000ce1a:	2108      	movs	r1, #8
  huart->RxState = HAL_UART_STATE_READY;
9000ce1c:	f8c4 008c 	str.w	r0, [r4, #140]	@ 0x8c
  huart->RxISR = NULL;
9000ce20:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000ce22:	66e2      	str	r2, [r4, #108]	@ 0x6c
          __HAL_UNLOCK(huart);
9000ce24:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
          huart->ErrorCode = HAL_UART_ERROR_ORE;
9000ce28:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_ERROR;
9000ce2c:	e766      	b.n	9000ccfc <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ce2e:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000ce32:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ce36:	e843 2100 	strex	r1, r2, [r3]
9000ce3a:	2900      	cmp	r1, #0
9000ce3c:	d1f7      	bne.n	9000ce2e <UART_CheckIdleState+0x1e6>
9000ce3e:	e7ea      	b.n	9000ce16 <UART_CheckIdleState+0x1ce>
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
9000ce40:	f44f 6200 	mov.w	r2, #2048	@ 0x800
9000ce44:	621a      	str	r2, [r3, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ce46:	e853 2f00 	ldrex	r2, [r3]
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
9000ce4a:	f422 7290 	bic.w	r2, r2, #288	@ 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ce4e:	e843 2100 	strex	r1, r2, [r3]
9000ce52:	2900      	cmp	r1, #0
9000ce54:	d1f7      	bne.n	9000ce46 <UART_CheckIdleState+0x1fe>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
9000ce56:	4811      	ldr	r0, [pc, #68]	@ (9000ce9c <UART_CheckIdleState+0x254>)
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ce58:	f103 0208 	add.w	r2, r3, #8
9000ce5c:	e852 2f00 	ldrex	r2, [r2]
9000ce60:	4002      	ands	r2, r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ce62:	f103 0508 	add.w	r5, r3, #8
9000ce66:	e845 2100 	strex	r1, r2, [r5]
9000ce6a:	2900      	cmp	r1, #0
9000ce6c:	d1f4      	bne.n	9000ce58 <UART_CheckIdleState+0x210>
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
9000ce6e:	6ee2      	ldr	r2, [r4, #108]	@ 0x6c
9000ce70:	2a01      	cmp	r2, #1
9000ce72:	d00a      	beq.n	9000ce8a <UART_CheckIdleState+0x242>
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000ce74:	2200      	movs	r2, #0
  huart->RxState = HAL_UART_STATE_READY;
9000ce76:	2120      	movs	r1, #32
  huart->RxISR = NULL;
9000ce78:	6762      	str	r2, [r4, #116]	@ 0x74
  huart->RxState = HAL_UART_STATE_READY;
9000ce7a:	f8c4 108c 	str.w	r1, [r4, #140]	@ 0x8c
          __HAL_UNLOCK(huart);
9000ce7e:	f884 2084 	strb.w	r2, [r4, #132]	@ 0x84
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
9000ce82:	66e2      	str	r2, [r4, #108]	@ 0x6c
          huart->ErrorCode = HAL_UART_ERROR_RTO;
9000ce84:	f8c4 1090 	str.w	r1, [r4, #144]	@ 0x90
          return HAL_TIMEOUT;
9000ce88:	e738      	b.n	9000ccfc <UART_CheckIdleState+0xb4>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
9000ce8a:	e853 2f00 	ldrex	r2, [r3]
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
9000ce8e:	f022 0210 	bic.w	r2, r2, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
9000ce92:	e843 2100 	strex	r1, r2, [r3]
9000ce96:	2900      	cmp	r1, #0
9000ce98:	d1f7      	bne.n	9000ce8a <UART_CheckIdleState+0x242>
9000ce9a:	e7eb      	b.n	9000ce74 <UART_CheckIdleState+0x22c>
9000ce9c:	effffffe 	.word	0xeffffffe

9000cea0 <HAL_UART_Init>:
  if (huart == NULL)
9000cea0:	b380      	cbz	r0, 9000cf04 <HAL_UART_Init+0x64>
  if (huart->gState == HAL_UART_STATE_RESET)
9000cea2:	f8d0 3088 	ldr.w	r3, [r0, #136]	@ 0x88
{
9000cea6:	b510      	push	{r4, lr}
9000cea8:	4604      	mov	r4, r0
  if (huart->gState == HAL_UART_STATE_RESET)
9000ceaa:	b333      	cbz	r3, 9000cefa <HAL_UART_Init+0x5a>
  __HAL_UART_DISABLE(huart);
9000ceac:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
9000ceae:	2324      	movs	r3, #36	@ 0x24
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
9000ceb0:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
  huart->gState = HAL_UART_STATE_BUSY;
9000ceb2:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
  __HAL_UART_DISABLE(huart);
9000ceb6:	6813      	ldr	r3, [r2, #0]
9000ceb8:	f023 0301 	bic.w	r3, r3, #1
9000cebc:	6013      	str	r3, [r2, #0]
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
9000cebe:	b9c1      	cbnz	r1, 9000cef2 <HAL_UART_Init+0x52>
  if (UART_SetConfig(huart) == HAL_ERROR)
9000cec0:	4620      	mov	r0, r4
9000cec2:	f7ff fcab 	bl	9000c81c <UART_SetConfig>
9000cec6:	2801      	cmp	r0, #1
9000cec8:	d011      	beq.n	9000ceee <HAL_UART_Init+0x4e>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
9000ceca:	6823      	ldr	r3, [r4, #0]
  return (UART_CheckIdleState(huart));
9000cecc:	4620      	mov	r0, r4
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
9000cece:	685a      	ldr	r2, [r3, #4]
9000ced0:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
9000ced4:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
9000ced6:	689a      	ldr	r2, [r3, #8]
9000ced8:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
9000cedc:	609a      	str	r2, [r3, #8]
  __HAL_UART_ENABLE(huart);
9000cede:	681a      	ldr	r2, [r3, #0]
9000cee0:	f042 0201 	orr.w	r2, r2, #1
}
9000cee4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  __HAL_UART_ENABLE(huart);
9000cee8:	601a      	str	r2, [r3, #0]
  return (UART_CheckIdleState(huart));
9000ceea:	f7ff bead 	b.w	9000cc48 <UART_CheckIdleState>
}
9000ceee:	2001      	movs	r0, #1
9000cef0:	bd10      	pop	{r4, pc}
    UART_AdvFeatureConfig(huart);
9000cef2:	4620      	mov	r0, r4
9000cef4:	f7ff fe50 	bl	9000cb98 <UART_AdvFeatureConfig>
9000cef8:	e7e2      	b.n	9000cec0 <HAL_UART_Init+0x20>
    huart->Lock = HAL_UNLOCKED;
9000cefa:	f880 3084 	strb.w	r3, [r0, #132]	@ 0x84
    HAL_UART_MspInit(huart);
9000cefe:	f7f7 f913 	bl	90004128 <HAL_UART_MspInit>
9000cf02:	e7d3      	b.n	9000ceac <HAL_UART_Init+0xc>
}
9000cf04:	2001      	movs	r0, #1
9000cf06:	4770      	bx	lr

9000cf08 <HAL_UARTEx_DisableFifoMode>:

  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));

  /* Process Locked */
  __HAL_LOCK(huart);
9000cf08:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
9000cf0c:	2a01      	cmp	r2, #1
9000cf0e:	d017      	beq.n	9000cf40 <HAL_UARTEx_DisableFifoMode+0x38>

  huart->gState = HAL_UART_STATE_BUSY;

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000cf10:	6802      	ldr	r2, [r0, #0]
9000cf12:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
9000cf14:	2024      	movs	r0, #36	@ 0x24
  /* Disable UART */
  __HAL_UART_DISABLE(huart);

  /* Disable FIFO mode */
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
  huart->FifoMode = UART_FIFOMODE_DISABLE;
9000cf16:	2100      	movs	r1, #0
{
9000cf18:	b430      	push	{r4, r5}
  huart->gState = HAL_UART_STATE_BUSY;
9000cf1a:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);

  huart->gState = HAL_UART_STATE_READY;
9000cf1e:	2520      	movs	r5, #32
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000cf20:	6810      	ldr	r0, [r2, #0]
  __HAL_UART_DISABLE(huart);
9000cf22:	6814      	ldr	r4, [r2, #0]
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
9000cf24:	f020 5000 	bic.w	r0, r0, #536870912	@ 0x20000000
  __HAL_UART_DISABLE(huart);
9000cf28:	f024 0401 	bic.w	r4, r4, #1
9000cf2c:	6014      	str	r4, [r2, #0]
  huart->FifoMode = UART_FIFOMODE_DISABLE;
9000cf2e:	6659      	str	r1, [r3, #100]	@ 0x64
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9000cf30:	6010      	str	r0, [r2, #0]

  /* Process Unlocked */
  __HAL_UNLOCK(huart);

  return HAL_OK;
9000cf32:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
9000cf34:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
  __HAL_UNLOCK(huart);
9000cf38:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
}
9000cf3c:	bc30      	pop	{r4, r5}
9000cf3e:	4770      	bx	lr
  __HAL_LOCK(huart);
9000cf40:	2002      	movs	r0, #2
}
9000cf42:	4770      	bx	lr

9000cf44 <HAL_UARTEx_SetTxFifoThreshold>:
  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
  assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));

  /* Process Locked */
  __HAL_LOCK(huart);
9000cf44:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
9000cf48:	2a01      	cmp	r2, #1
9000cf4a:	d037      	beq.n	9000cfbc <HAL_UARTEx_SetTxFifoThreshold+0x78>

  huart->gState = HAL_UART_STATE_BUSY;

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000cf4c:	6802      	ldr	r2, [r0, #0]
9000cf4e:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
9000cf50:	2024      	movs	r0, #36	@ 0x24
{
9000cf52:	b530      	push	{r4, r5, lr}
  huart->gState = HAL_UART_STATE_BUSY;
9000cf54:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000cf58:	6814      	ldr	r4, [r2, #0]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
9000cf5a:	6810      	ldr	r0, [r2, #0]
9000cf5c:	f020 0001 	bic.w	r0, r0, #1
9000cf60:	6010      	str	r0, [r2, #0]

  /* Update TX threshold configuration */
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
9000cf62:	6890      	ldr	r0, [r2, #8]
9000cf64:	f020 4060 	bic.w	r0, r0, #3758096384	@ 0xe0000000
9000cf68:	4301      	orrs	r1, r0
  uint8_t rx_fifo_threshold;
  uint8_t tx_fifo_threshold;
  static const uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
  static const uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};

  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000cf6a:	6e58      	ldr	r0, [r3, #100]	@ 0x64
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
9000cf6c:	6091      	str	r1, [r2, #8]
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000cf6e:	b310      	cbz	r0, 9000cfb6 <HAL_UARTEx_SetTxFifoThreshold+0x72>
  }
  else
  {
    rx_fifo_depth = RX_FIFO_DEPTH;
    tx_fifo_depth = TX_FIFO_DEPTH;
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
9000cf70:	6891      	ldr	r1, [r2, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000cf72:	6890      	ldr	r0, [r2, #8]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
                               (uint16_t)denominator[tx_fifo_threshold];
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000cf74:	f3c1 6c42 	ubfx	ip, r1, #25, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000cf78:	4911      	ldr	r1, [pc, #68]	@ (9000cfc0 <HAL_UARTEx_SetTxFifoThreshold+0x7c>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000cf7a:	ea4f 7e50 	mov.w	lr, r0, lsr #29
                               (uint16_t)denominator[tx_fifo_threshold];
9000cf7e:	4d11      	ldr	r5, [pc, #68]	@ (9000cfc4 <HAL_UARTEx_SetTxFifoThreshold+0x80>)
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000cf80:	f811 000e 	ldrb.w	r0, [r1, lr]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000cf84:	f811 100c 	ldrb.w	r1, [r1, ip]
                               (uint16_t)denominator[tx_fifo_threshold];
9000cf88:	f815 e00e 	ldrb.w	lr, [r5, lr]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000cf8c:	0100      	lsls	r0, r0, #4
                               (uint16_t)denominator[rx_fifo_threshold];
9000cf8e:	f815 500c 	ldrb.w	r5, [r5, ip]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000cf92:	0109      	lsls	r1, r1, #4
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000cf94:	fbb0 f0fe 	udiv	r0, r0, lr
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000cf98:	fbb1 f1f5 	udiv	r1, r1, r5
9000cf9c:	f8a3 1068 	strh.w	r1, [r3, #104]	@ 0x68
  huart->gState = HAL_UART_STATE_READY;
9000cfa0:	2520      	movs	r5, #32
  __HAL_UNLOCK(huart);
9000cfa2:	2100      	movs	r1, #0
9000cfa4:	f8a3 006a 	strh.w	r0, [r3, #106]	@ 0x6a
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9000cfa8:	6014      	str	r4, [r2, #0]
  return HAL_OK;
9000cfaa:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
9000cfac:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
  __HAL_UNLOCK(huart);
9000cfb0:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
}
9000cfb4:	bd30      	pop	{r4, r5, pc}
    huart->NbRxDataToProcess = 1U;
9000cfb6:	2101      	movs	r1, #1
    huart->NbTxDataToProcess = 1U;
9000cfb8:	4608      	mov	r0, r1
9000cfba:	e7ef      	b.n	9000cf9c <HAL_UARTEx_SetTxFifoThreshold+0x58>
  __HAL_LOCK(huart);
9000cfbc:	2002      	movs	r0, #2
}
9000cfbe:	4770      	bx	lr
9000cfc0:	9002d0f8 	.word	0x9002d0f8
9000cfc4:	9002d0f0 	.word	0x9002d0f0

9000cfc8 <HAL_UARTEx_SetRxFifoThreshold>:
  __HAL_LOCK(huart);
9000cfc8:	f890 2084 	ldrb.w	r2, [r0, #132]	@ 0x84
9000cfcc:	2a01      	cmp	r2, #1
9000cfce:	d037      	beq.n	9000d040 <HAL_UARTEx_SetRxFifoThreshold+0x78>
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000cfd0:	6802      	ldr	r2, [r0, #0]
9000cfd2:	4603      	mov	r3, r0
  huart->gState = HAL_UART_STATE_BUSY;
9000cfd4:	2024      	movs	r0, #36	@ 0x24
{
9000cfd6:	b530      	push	{r4, r5, lr}
  huart->gState = HAL_UART_STATE_BUSY;
9000cfd8:	f8c3 0088 	str.w	r0, [r3, #136]	@ 0x88
  tmpcr1 = READ_REG(huart->Instance->CR1);
9000cfdc:	6814      	ldr	r4, [r2, #0]
  __HAL_UART_DISABLE(huart);
9000cfde:	6810      	ldr	r0, [r2, #0]
9000cfe0:	f020 0001 	bic.w	r0, r0, #1
9000cfe4:	6010      	str	r0, [r2, #0]
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
9000cfe6:	6890      	ldr	r0, [r2, #8]
9000cfe8:	f020 6060 	bic.w	r0, r0, #234881024	@ 0xe000000
9000cfec:	4301      	orrs	r1, r0
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000cfee:	6e58      	ldr	r0, [r3, #100]	@ 0x64
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
9000cff0:	6091      	str	r1, [r2, #8]
  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
9000cff2:	b310      	cbz	r0, 9000d03a <HAL_UARTEx_SetRxFifoThreshold+0x72>
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
9000cff4:	6891      	ldr	r1, [r2, #8]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000cff6:	6890      	ldr	r0, [r2, #8]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000cff8:	f3c1 6c42 	ubfx	ip, r1, #25, #3
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000cffc:	4911      	ldr	r1, [pc, #68]	@ (9000d044 <HAL_UARTEx_SetRxFifoThreshold+0x7c>)
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
9000cffe:	ea4f 7e50 	mov.w	lr, r0, lsr #29
                               (uint16_t)denominator[tx_fifo_threshold];
9000d002:	4d11      	ldr	r5, [pc, #68]	@ (9000d048 <HAL_UARTEx_SetRxFifoThreshold+0x80>)
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000d004:	f811 000e 	ldrb.w	r0, [r1, lr]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000d008:	f811 100c 	ldrb.w	r1, [r1, ip]
                               (uint16_t)denominator[tx_fifo_threshold];
9000d00c:	f815 e00e 	ldrb.w	lr, [r5, lr]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000d010:	0100      	lsls	r0, r0, #4
                               (uint16_t)denominator[rx_fifo_threshold];
9000d012:	f815 500c 	ldrb.w	r5, [r5, ip]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000d016:	0109      	lsls	r1, r1, #4
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
9000d018:	fbb0 f0fe 	udiv	r0, r0, lr
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
9000d01c:	fbb1 f1f5 	udiv	r1, r1, r5
9000d020:	f8a3 1068 	strh.w	r1, [r3, #104]	@ 0x68
  huart->gState = HAL_UART_STATE_READY;
9000d024:	2520      	movs	r5, #32
  __HAL_UNLOCK(huart);
9000d026:	2100      	movs	r1, #0
9000d028:	f8a3 006a 	strh.w	r0, [r3, #106]	@ 0x6a
  WRITE_REG(huart->Instance->CR1, tmpcr1);
9000d02c:	6014      	str	r4, [r2, #0]
  return HAL_OK;
9000d02e:	4608      	mov	r0, r1
  huart->gState = HAL_UART_STATE_READY;
9000d030:	f8c3 5088 	str.w	r5, [r3, #136]	@ 0x88
  __HAL_UNLOCK(huart);
9000d034:	f883 1084 	strb.w	r1, [r3, #132]	@ 0x84
}
9000d038:	bd30      	pop	{r4, r5, pc}
    huart->NbRxDataToProcess = 1U;
9000d03a:	2101      	movs	r1, #1
    huart->NbTxDataToProcess = 1U;
9000d03c:	4608      	mov	r0, r1
9000d03e:	e7ef      	b.n	9000d020 <HAL_UARTEx_SetRxFifoThreshold+0x58>
  __HAL_LOCK(huart);
9000d040:	2002      	movs	r0, #2
}
9000d042:	4770      	bx	lr
9000d044:	9002d0f8 	.word	0x9002d0f8
9000d048:	9002d0f0 	.word	0x9002d0f0

9000d04c <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, const FMC_SDRAM_InitTypeDef *Init)
{
9000d04c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000d050:	e9d1 3e07 	ldrd	r3, lr, [r1, #28]
9000d054:	e9d1 8200 	ldrd	r8, r2, [r1]
9000d058:	6a4f      	ldr	r7, [r1, #36]	@ 0x24
9000d05a:	ea43 030e 	orr.w	r3, r3, lr
9000d05e:	e9d1 c602 	ldrd	ip, r6, [r1, #8]
9000d062:	e9d1 5404 	ldrd	r5, r4, [r1, #16]
9000d066:	6989      	ldr	r1, [r1, #24]
  if (Init->SDBank == FMC_SDRAM_BANK1)
9000d068:	f1b8 0f00 	cmp.w	r8, #0
9000d06c:	d10f      	bne.n	9000d08e <FMC_SDRAM_Init+0x42>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000d06e:	433b      	orrs	r3, r7
9000d070:	4313      	orrs	r3, r2
9000d072:	6802      	ldr	r2, [r0, #0]
9000d074:	ea43 030c 	orr.w	r3, r3, ip
9000d078:	f36f 020e 	bfc	r2, #0, #15
9000d07c:	4333      	orrs	r3, r6
9000d07e:	432b      	orrs	r3, r5
9000d080:	4323      	orrs	r3, r4
9000d082:	430b      	orrs	r3, r1
9000d084:	4313      	orrs	r3, r2
9000d086:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
9000d088:	2000      	movs	r0, #0
9000d08a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000d08e:	ea42 020c 	orr.w	r2, r2, ip
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000d092:	433b      	orrs	r3, r7
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000d094:	4332      	orrs	r2, r6
9000d096:	432a      	orrs	r2, r5
9000d098:	4322      	orrs	r2, r4
9000d09a:	430a      	orrs	r2, r1
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
9000d09c:	6801      	ldr	r1, [r0, #0]
9000d09e:	f421 41f8 	bic.w	r1, r1, #31744	@ 0x7c00
9000d0a2:	430b      	orrs	r3, r1
9000d0a4:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
9000d0a6:	6843      	ldr	r3, [r0, #4]
9000d0a8:	f36f 030e 	bfc	r3, #0, #15
9000d0ac:	4313      	orrs	r3, r2
9000d0ae:	6043      	str	r3, [r0, #4]
}
9000d0b0:	2000      	movs	r0, #0
9000d0b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9000d0b6:	bf00      	nop

9000d0b8 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        const FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
9000d0b8:	b5f0      	push	{r4, r5, r6, r7, lr}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000d0ba:	68cc      	ldr	r4, [r1, #12]
9000d0bc:	694b      	ldr	r3, [r1, #20]
9000d0be:	3c01      	subs	r4, #1
9000d0c0:	688d      	ldr	r5, [r1, #8]
9000d0c2:	698f      	ldr	r7, [r1, #24]
9000d0c4:	3b01      	subs	r3, #1
9000d0c6:	ea4f 3e04 	mov.w	lr, r4, lsl #12
9000d0ca:	684c      	ldr	r4, [r1, #4]
9000d0cc:	680e      	ldr	r6, [r1, #0]
9000d0ce:	3d01      	subs	r5, #1
9000d0d0:	3c01      	subs	r4, #1
9000d0d2:	051b      	lsls	r3, r3, #20
9000d0d4:	022d      	lsls	r5, r5, #8
9000d0d6:	3e01      	subs	r6, #1
9000d0d8:	ea4f 1c04 	mov.w	ip, r4, lsl #4
9000d0dc:	690c      	ldr	r4, [r1, #16]
9000d0de:	1e79      	subs	r1, r7, #1
9000d0e0:	3c01      	subs	r4, #1
9000d0e2:	0609      	lsls	r1, r1, #24
9000d0e4:	0424      	lsls	r4, r4, #16
  if (Bank == FMC_SDRAM_BANK1)
9000d0e6:	b972      	cbnz	r2, 9000d106 <FMC_SDRAM_Timing_Init+0x4e>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000d0e8:	ea4e 0303 	orr.w	r3, lr, r3
9000d0ec:	6882      	ldr	r2, [r0, #8]
9000d0ee:	4333      	orrs	r3, r6
9000d0f0:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000d0f4:	ea43 030c 	orr.w	r3, r3, ip
9000d0f8:	432b      	orrs	r3, r5
9000d0fa:	4323      	orrs	r3, r4
9000d0fc:	430b      	orrs	r3, r1
9000d0fe:	4313      	orrs	r3, r2
9000d100:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
}
9000d102:	2000      	movs	r0, #0
9000d104:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000d106:	ea4e 0e03 	orr.w	lr, lr, r3
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000d10a:	ea4c 0305 	orr.w	r3, ip, r5
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000d10e:	4a08      	ldr	r2, [pc, #32]	@ (9000d130 <FMC_SDRAM_Timing_Init+0x78>)
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000d110:	4333      	orrs	r3, r6
9000d112:	4323      	orrs	r3, r4
9000d114:	430b      	orrs	r3, r1
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
9000d116:	6881      	ldr	r1, [r0, #8]
9000d118:	400a      	ands	r2, r1
9000d11a:	ea4e 0202 	orr.w	r2, lr, r2
9000d11e:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
9000d120:	68c2      	ldr	r2, [r0, #12]
9000d122:	f002 4270 	and.w	r2, r2, #4026531840	@ 0xf0000000
9000d126:	4313      	orrs	r3, r2
9000d128:	60c3      	str	r3, [r0, #12]
}
9000d12a:	2000      	movs	r0, #0
9000d12c:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000d12e:	bf00      	nop
9000d130:	ff0f0fff 	.word	0xff0f0fff

9000d134 <FMC_SDRAM_DeInit>:
  * @brief  DeInitializes the FMC_SDRAM peripheral
  * @param  Device Pointer to SDRAM device instance
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_DeInit(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
9000d134:	b430      	push	{r4, r5}
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
  Device->SDTR[Bank] = 0x0FFFFFFFU;
  Device->SDCMR      = 0x00000000U;
9000d136:	2200      	movs	r2, #0
{
9000d138:	4603      	mov	r3, r0
  Device->SDCR[Bank] = 0x000002D0U;
9000d13a:	f44f 7534 	mov.w	r5, #720	@ 0x2d0
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000d13e:	f06f 4470 	mvn.w	r4, #4026531840	@ 0xf0000000
9000d142:	eb00 0c81 	add.w	ip, r0, r1, lsl #2
  Device->SDCR[Bank] = 0x000002D0U;
9000d146:	f840 5021 	str.w	r5, [r0, r1, lsl #2]
  Device->SDRTR      = 0x00000000U;
  Device->SDSR       = 0x00000000U;

  return HAL_OK;
}
9000d14a:	4610      	mov	r0, r2
  Device->SDTR[Bank] = 0x0FFFFFFFU;
9000d14c:	f8cc 4008 	str.w	r4, [ip, #8]
  Device->SDCMR      = 0x00000000U;
9000d150:	611a      	str	r2, [r3, #16]
  Device->SDRTR      = 0x00000000U;
9000d152:	615a      	str	r2, [r3, #20]
  Device->SDSR       = 0x00000000U;
9000d154:	619a      	str	r2, [r3, #24]
}
9000d156:	bc30      	pop	{r4, r5}
9000d158:	4770      	bx	lr
9000d15a:	bf00      	nop

9000d15c <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        const FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
9000d15c:	b410      	push	{r4}
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000d15e:	e9d1 3400 	ldrd	r3, r4, [r1]
{
9000d162:	4602      	mov	r2, r0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000d164:	f8df c024 	ldr.w	ip, [pc, #36]	@ 9000d18c <FMC_SDRAM_SendCommand+0x30>
9000d168:	6900      	ldr	r0, [r0, #16]
9000d16a:	4323      	orrs	r3, r4
9000d16c:	e9d1 1402 	ldrd	r1, r4, [r1, #8]
9000d170:	ea00 0c0c 	and.w	ip, r0, ip
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
}
9000d174:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000d176:	ea43 2344 	orr.w	r3, r3, r4, lsl #9
9000d17a:	3901      	subs	r1, #1
}
9000d17c:	f85d 4b04 	ldr.w	r4, [sp], #4
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
9000d180:	ea43 030c 	orr.w	r3, r3, ip
9000d184:	ea43 1341 	orr.w	r3, r3, r1, lsl #5
9000d188:	6113      	str	r3, [r2, #16]
}
9000d18a:	4770      	bx	lr
9000d18c:	ffc00000 	.word	0xffc00000

9000d190 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
9000d190:	4602      	mov	r2, r0

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));

  return HAL_OK;
}
9000d192:	2000      	movs	r0, #0
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
9000d194:	6953      	ldr	r3, [r2, #20]
9000d196:	f36f 034d 	bfc	r3, #1, #13
9000d19a:	ea43 0341 	orr.w	r3, r3, r1, lsl #1
9000d19e:	6153      	str	r3, [r2, #20]
}
9000d1a0:	4770      	bx	lr
9000d1a2:	bf00      	nop

9000d1a4 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
9000d1a4:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
9000d1a6:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d1aa:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
9000d1ac:	f002 fb54 	bl	9000f858 <xTaskGetSchedulerState>
9000d1b0:	2801      	cmp	r0, #1
9000d1b2:	d100      	bne.n	9000d1b6 <SysTick_Handler+0x12>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
9000d1b4:	bd08      	pop	{r3, pc}
9000d1b6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
9000d1ba:	f000 bc43 	b.w	9000da44 <xPortSysTickHandler>
9000d1be:	bf00      	nop

9000d1c0 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
9000d1c0:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000d1c4:	b92b      	cbnz	r3, 9000d1d2 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
9000d1c6:	4b06      	ldr	r3, [pc, #24]	@ (9000d1e0 <osKernelInitialize+0x20>)
9000d1c8:	6818      	ldr	r0, [r3, #0]
9000d1ca:	b928      	cbnz	r0, 9000d1d8 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
9000d1cc:	2201      	movs	r2, #1
9000d1ce:	601a      	str	r2, [r3, #0]
      stat = osOK;
9000d1d0:	4770      	bx	lr
    stat = osErrorISR;
9000d1d2:	f06f 0005 	mvn.w	r0, #5
9000d1d6:	4770      	bx	lr
    } else {
      stat = osError;
9000d1d8:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
9000d1dc:	4770      	bx	lr
9000d1de:	bf00      	nop
9000d1e0:	24008c4c 	.word	0x24008c4c

9000d1e4 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
9000d1e4:	b510      	push	{r4, lr}
9000d1e6:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
9000d1ea:	b974      	cbnz	r4, 9000d20a <osKernelStart+0x26>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
9000d1ec:	4b08      	ldr	r3, [pc, #32]	@ (9000d210 <osKernelStart+0x2c>)
9000d1ee:	681a      	ldr	r2, [r3, #0]
9000d1f0:	2a01      	cmp	r2, #1
9000d1f2:	d107      	bne.n	9000d204 <osKernelStart+0x20>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
9000d1f4:	4907      	ldr	r1, [pc, #28]	@ (9000d214 <osKernelStart+0x30>)
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
9000d1f6:	2202      	movs	r2, #2
9000d1f8:	77cc      	strb	r4, [r1, #31]
9000d1fa:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
9000d1fc:	f002 f8ca 	bl	9000f394 <vTaskStartScheduler>
      stat = osOK;
9000d200:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
9000d202:	bd10      	pop	{r4, pc}
      stat = osError;
9000d204:	f04f 30ff 	mov.w	r0, #4294967295
}
9000d208:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
9000d20a:	f06f 0005 	mvn.w	r0, #5
}
9000d20e:	bd10      	pop	{r4, pc}
9000d210:	24008c4c 	.word	0x24008c4c
9000d214:	e000ed00 	.word	0xe000ed00

9000d218 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000d218:	b5f0      	push	{r4, r5, r6, r7, lr}
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
9000d21a:	2500      	movs	r5, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
9000d21c:	b087      	sub	sp, #28
  hTask = NULL;
9000d21e:	9505      	str	r5, [sp, #20]
9000d220:	f3ef 8305 	mrs	r3, IPSR

  if (!IS_IRQ() && (func != NULL)) {
9000d224:	b340      	cbz	r0, 9000d278 <osThreadNew+0x60>
9000d226:	bb3b      	cbnz	r3, 9000d278 <osThreadNew+0x60>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
9000d228:	4614      	mov	r4, r2
9000d22a:	b1d2      	cbz	r2, 9000d262 <osThreadNew+0x4a>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
9000d22c:	6996      	ldr	r6, [r2, #24]
9000d22e:	bb36      	cbnz	r6, 9000d27e <osThreadNew+0x66>
    prio  = (UBaseType_t)osPriorityNormal;
9000d230:	2618      	movs	r6, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000d232:	6863      	ldr	r3, [r4, #4]
9000d234:	07db      	lsls	r3, r3, #31
9000d236:	d41f      	bmi.n	9000d278 <osThreadNew+0x60>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
9000d238:	6963      	ldr	r3, [r4, #20]
9000d23a:	b323      	cbz	r3, 9000d286 <osThreadNew+0x6e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
9000d23c:	089a      	lsrs	r2, r3, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000d23e:	68a5      	ldr	r5, [r4, #8]
      if (attr->name != NULL) {
9000d240:	f8d4 c000 	ldr.w	ip, [r4]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
9000d244:	68e7      	ldr	r7, [r4, #12]
9000d246:	b305      	cbz	r5, 9000d28a <osThreadNew+0x72>
9000d248:	2f5f      	cmp	r7, #95	@ 0x5f
9000d24a:	d915      	bls.n	9000d278 <osThreadNew+0x60>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
9000d24c:	6924      	ldr	r4, [r4, #16]
9000d24e:	b19c      	cbz	r4, 9000d278 <osThreadNew+0x60>
9000d250:	b193      	cbz	r3, 9000d278 <osThreadNew+0x60>
      mem = 0;
    }

    if (mem == 1) {
      #if (configSUPPORT_STATIC_ALLOCATION == 1)
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
9000d252:	460b      	mov	r3, r1
9000d254:	9600      	str	r6, [sp, #0]
9000d256:	4661      	mov	r1, ip
9000d258:	e9cd 4501 	strd	r4, r5, [sp, #4]
9000d25c:	f001 ff08 	bl	9000f070 <xTaskCreateStatic>
9000d260:	e00b      	b.n	9000d27a <osThreadNew+0x62>
9000d262:	2280      	movs	r2, #128	@ 0x80
    prio  = (UBaseType_t)osPriorityNormal;
9000d264:	2618      	movs	r6, #24
      #endif
    }
    else {
      if (mem == 0) {
        #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000d266:	460b      	mov	r3, r1
9000d268:	4621      	mov	r1, r4
9000d26a:	ac05      	add	r4, sp, #20
9000d26c:	9600      	str	r6, [sp, #0]
9000d26e:	9401      	str	r4, [sp, #4]
9000d270:	f001 ffa8 	bl	9000f1c4 <xTaskCreate>
9000d274:	2801      	cmp	r0, #1
9000d276:	d010      	beq.n	9000d29a <osThreadNew+0x82>
        return (NULL);
9000d278:	2000      	movs	r0, #0
      }
    }
  }

  return ((osThreadId_t)hTask);
}
9000d27a:	b007      	add	sp, #28
9000d27c:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
9000d27e:	1e72      	subs	r2, r6, #1
9000d280:	2a37      	cmp	r2, #55	@ 0x37
9000d282:	d9d6      	bls.n	9000d232 <osThreadNew+0x1a>
9000d284:	e7f8      	b.n	9000d278 <osThreadNew+0x60>
    stack = configMINIMAL_STACK_SIZE;
9000d286:	2280      	movs	r2, #128	@ 0x80
9000d288:	e7d9      	b.n	9000d23e <osThreadNew+0x26>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
9000d28a:	2f00      	cmp	r7, #0
9000d28c:	d1f4      	bne.n	9000d278 <osThreadNew+0x60>
9000d28e:	6923      	ldr	r3, [r4, #16]
9000d290:	2b00      	cmp	r3, #0
9000d292:	d1f1      	bne.n	9000d278 <osThreadNew+0x60>
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
9000d294:	b292      	uxth	r2, r2
9000d296:	4664      	mov	r4, ip
9000d298:	e7e5      	b.n	9000d266 <osThreadNew+0x4e>
  return ((osThreadId_t)hTask);
9000d29a:	9805      	ldr	r0, [sp, #20]
9000d29c:	e7ed      	b.n	9000d27a <osThreadNew+0x62>
9000d29e:	bf00      	nop

9000d2a0 <osDelay>:
9000d2a0:	f3ef 8205 	mrs	r2, IPSR
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
  osStatus_t stat;

  if (IS_IRQ()) {
9000d2a4:	b93a      	cbnz	r2, 9000d2b6 <osDelay+0x16>
osStatus_t osDelay (uint32_t ticks) {
9000d2a6:	b508      	push	{r3, lr}
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
9000d2a8:	b908      	cbnz	r0, 9000d2ae <osDelay+0xe>
    stat = osOK;
9000d2aa:	2000      	movs	r0, #0
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
9000d2ac:	bd08      	pop	{r3, pc}
      vTaskDelay(ticks);
9000d2ae:	f002 f81b 	bl	9000f2e8 <vTaskDelay>
    stat = osOK;
9000d2b2:	2000      	movs	r0, #0
}
9000d2b4:	bd08      	pop	{r3, pc}
    stat = osErrorISR;
9000d2b6:	f06f 0005 	mvn.w	r0, #5
}
9000d2ba:	4770      	bx	lr

9000d2bc <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
9000d2bc:	b5f0      	push	{r4, r5, r6, r7, lr}
9000d2be:	b083      	sub	sp, #12
9000d2c0:	f3ef 8605 	mrs	r6, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
9000d2c4:	b98e      	cbnz	r6, 9000d2ea <osSemaphoreNew+0x2e>
9000d2c6:	4605      	mov	r5, r0
9000d2c8:	b178      	cbz	r0, 9000d2ea <osSemaphoreNew+0x2e>
9000d2ca:	4288      	cmp	r0, r1
9000d2cc:	460f      	mov	r7, r1
9000d2ce:	d30c      	bcc.n	9000d2ea <osSemaphoreNew+0x2e>
    mem = -1;

    if (attr != NULL) {
9000d2d0:	4614      	mov	r4, r2
9000d2d2:	b172      	cbz	r2, 9000d2f2 <osSemaphoreNew+0x36>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
9000d2d4:	e9d2 2302 	ldrd	r2, r3, [r2, #8]
9000d2d8:	b14a      	cbz	r2, 9000d2ee <osSemaphoreNew+0x32>
9000d2da:	2b4f      	cmp	r3, #79	@ 0x4f
9000d2dc:	d905      	bls.n	9000d2ea <osSemaphoreNew+0x2e>
    else {
      mem = 0;
    }

    if (mem != -1) {
      if (max_count == 1U) {
9000d2de:	2801      	cmp	r0, #1
9000d2e0:	d02e      	beq.n	9000d340 <osSemaphoreNew+0x84>
        }
      }
      else {
        if (mem == 1) {
          #if (configSUPPORT_STATIC_ALLOCATION == 1)
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
9000d2e2:	f000 fd8f 	bl	9000de04 <xQueueCreateCountingSemaphoreStatic>
          #endif
        }
      }
      
      #if (configQUEUE_REGISTRY_SIZE > 0)
      if (hSemaphore != NULL) {
9000d2e6:	4605      	mov	r5, r0
9000d2e8:	b96d      	cbnz	r5, 9000d306 <osSemaphoreNew+0x4a>
  hSemaphore = NULL;
9000d2ea:	2500      	movs	r5, #0
9000d2ec:	e010      	b.n	9000d310 <osSemaphoreNew+0x54>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
9000d2ee:	2b00      	cmp	r3, #0
9000d2f0:	d1fb      	bne.n	9000d2ea <osSemaphoreNew+0x2e>
      if (max_count == 1U) {
9000d2f2:	2d01      	cmp	r5, #1
9000d2f4:	d00f      	beq.n	9000d316 <osSemaphoreNew+0x5a>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
9000d2f6:	4628      	mov	r0, r5
9000d2f8:	4639      	mov	r1, r7
9000d2fa:	f000 fde3 	bl	9000dec4 <xQueueCreateCountingSemaphore>
9000d2fe:	4605      	mov	r5, r0
      if (hSemaphore != NULL) {
9000d300:	2d00      	cmp	r5, #0
9000d302:	d0f2      	beq.n	9000d2ea <osSemaphoreNew+0x2e>
        if (attr != NULL) {
9000d304:	b104      	cbz	r4, 9000d308 <osSemaphoreNew+0x4c>
          name = attr->name;
9000d306:	6824      	ldr	r4, [r4, #0]
        } else {
          name = NULL;
        }
        vQueueAddToRegistry (hSemaphore, name);
9000d308:	4621      	mov	r1, r4
9000d30a:	4628      	mov	r0, r5
9000d30c:	f001 fc0e 	bl	9000eb2c <vQueueAddToRegistry>
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
9000d310:	4628      	mov	r0, r5
9000d312:	b003      	add	sp, #12
9000d314:	bdf0      	pop	{r4, r5, r6, r7, pc}
            hSemaphore = xSemaphoreCreateBinary();
9000d316:	4628      	mov	r0, r5
9000d318:	2203      	movs	r2, #3
9000d31a:	2100      	movs	r1, #0
9000d31c:	f000 fd30 	bl	9000dd80 <xQueueGenericCreate>
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000d320:	4605      	mov	r5, r0
9000d322:	2800      	cmp	r0, #0
9000d324:	d0ec      	beq.n	9000d300 <osSemaphoreNew+0x44>
9000d326:	2f00      	cmp	r7, #0
9000d328:	d0ea      	beq.n	9000d300 <osSemaphoreNew+0x44>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000d32a:	2300      	movs	r3, #0
9000d32c:	461a      	mov	r2, r3
9000d32e:	4619      	mov	r1, r3
9000d330:	f000 fe0e 	bl	9000df50 <xQueueGenericSend>
9000d334:	2801      	cmp	r0, #1
9000d336:	d0e5      	beq.n	9000d304 <osSemaphoreNew+0x48>
            vSemaphoreDelete (hSemaphore);
9000d338:	4628      	mov	r0, r5
9000d33a:	f001 fbb1 	bl	9000eaa0 <vQueueDelete>
      if (hSemaphore != NULL) {
9000d33e:	e7d4      	b.n	9000d2ea <osSemaphoreNew+0x2e>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
9000d340:	4613      	mov	r3, r2
9000d342:	2203      	movs	r2, #3
9000d344:	4631      	mov	r1, r6
9000d346:	9200      	str	r2, [sp, #0]
9000d348:	4632      	mov	r2, r6
9000d34a:	f000 fcad 	bl	9000dca8 <xQueueGenericCreateStatic>
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
9000d34e:	4605      	mov	r5, r0
9000d350:	2800      	cmp	r0, #0
9000d352:	d0c9      	beq.n	9000d2e8 <osSemaphoreNew+0x2c>
9000d354:	2f00      	cmp	r7, #0
9000d356:	d0c7      	beq.n	9000d2e8 <osSemaphoreNew+0x2c>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000d358:	4633      	mov	r3, r6
9000d35a:	4632      	mov	r2, r6
9000d35c:	4631      	mov	r1, r6
9000d35e:	f000 fdf7 	bl	9000df50 <xQueueGenericSend>
9000d362:	2801      	cmp	r0, #1
9000d364:	d0cf      	beq.n	9000d306 <osSemaphoreNew+0x4a>
9000d366:	e7e7      	b.n	9000d338 <osSemaphoreNew+0x7c>

9000d368 <osSemaphoreAcquire>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000d368:	b360      	cbz	r0, 9000d3c4 <osSemaphoreAcquire+0x5c>
osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
9000d36a:	b510      	push	{r4, lr}
9000d36c:	460c      	mov	r4, r1
9000d36e:	b082      	sub	sp, #8
9000d370:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000d374:	b1b3      	cbz	r3, 9000d3a4 <osSemaphoreAcquire+0x3c>
    if (timeout != 0U) {
9000d376:	bb11      	cbnz	r1, 9000d3be <osSemaphoreAcquire+0x56>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000d378:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000d37a:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
9000d37c:	f001 fb34 	bl	9000e9e8 <xQueueReceiveFromISR>
9000d380:	2801      	cmp	r0, #1
9000d382:	d118      	bne.n	9000d3b6 <osSemaphoreAcquire+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000d384:	9b01      	ldr	r3, [sp, #4]
9000d386:	b913      	cbnz	r3, 9000d38e <osSemaphoreAcquire+0x26>
  stat = osOK;
9000d388:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000d38a:	b002      	add	sp, #8
9000d38c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
9000d38e:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d392:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000d396:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000d39a:	f3bf 8f4f 	dsb	sy
9000d39e:	f3bf 8f6f 	isb	sy
9000d3a2:	e7f1      	b.n	9000d388 <osSemaphoreAcquire+0x20>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
9000d3a4:	f001 f990 	bl	9000e6c8 <xQueueSemaphoreTake>
9000d3a8:	2801      	cmp	r0, #1
9000d3aa:	d0ed      	beq.n	9000d388 <osSemaphoreAcquire+0x20>
      if (timeout != 0U) {
9000d3ac:	b11c      	cbz	r4, 9000d3b6 <osSemaphoreAcquire+0x4e>
        stat = osErrorTimeout;
9000d3ae:	f06f 0001 	mvn.w	r0, #1
}
9000d3b2:	b002      	add	sp, #8
9000d3b4:	bd10      	pop	{r4, pc}
        stat = osErrorResource;
9000d3b6:	f06f 0002 	mvn.w	r0, #2
}
9000d3ba:	b002      	add	sp, #8
9000d3bc:	bd10      	pop	{r4, pc}
    stat = osErrorParameter;
9000d3be:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000d3c2:	e7e2      	b.n	9000d38a <osSemaphoreAcquire+0x22>
    stat = osErrorParameter;
9000d3c4:	f06f 0003 	mvn.w	r0, #3
}
9000d3c8:	4770      	bx	lr
9000d3ca:	bf00      	nop

9000d3cc <osSemaphoreRelease>:
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
9000d3cc:	b328      	cbz	r0, 9000d41a <osSemaphoreRelease+0x4e>
osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
9000d3ce:	b500      	push	{lr}
9000d3d0:	b083      	sub	sp, #12
9000d3d2:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
9000d3d6:	b19b      	cbz	r3, 9000d400 <osSemaphoreRelease+0x34>
    yield = pdFALSE;
9000d3d8:	2300      	movs	r3, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000d3da:	a901      	add	r1, sp, #4
    yield = pdFALSE;
9000d3dc:	9301      	str	r3, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
9000d3de:	f000 ff9f 	bl	9000e320 <xQueueGiveFromISR>
9000d3e2:	2801      	cmp	r0, #1
9000d3e4:	d116      	bne.n	9000d414 <osSemaphoreRelease+0x48>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
9000d3e6:	9b01      	ldr	r3, [sp, #4]
9000d3e8:	b183      	cbz	r3, 9000d40c <osSemaphoreRelease+0x40>
9000d3ea:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d3ee:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000d3f2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000d3f6:	f3bf 8f4f 	dsb	sy
9000d3fa:	f3bf 8f6f 	isb	sy
9000d3fe:	e005      	b.n	9000d40c <osSemaphoreRelease+0x40>
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
9000d400:	461a      	mov	r2, r3
9000d402:	4619      	mov	r1, r3
9000d404:	f000 fda4 	bl	9000df50 <xQueueGenericSend>
9000d408:	2801      	cmp	r0, #1
9000d40a:	d103      	bne.n	9000d414 <osSemaphoreRelease+0x48>
  stat = osOK;
9000d40c:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
9000d40e:	b003      	add	sp, #12
9000d410:	f85d fb04 	ldr.w	pc, [sp], #4
      stat = osErrorResource;
9000d414:	f06f 0002 	mvn.w	r0, #2
9000d418:	e7f9      	b.n	9000d40e <osSemaphoreRelease+0x42>
    stat = osErrorParameter;
9000d41a:	f06f 0003 	mvn.w	r0, #3
}
9000d41e:	4770      	bx	lr

9000d420 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
9000d420:	b5f0      	push	{r4, r5, r6, r7, lr}
9000d422:	b083      	sub	sp, #12
9000d424:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
9000d428:	b987      	cbnz	r7, 9000d44c <osMessageQueueNew+0x2c>
9000d42a:	4605      	mov	r5, r0
9000d42c:	b170      	cbz	r0, 9000d44c <osMessageQueueNew+0x2c>
9000d42e:	b169      	cbz	r1, 9000d44c <osMessageQueueNew+0x2c>
    mem = -1;

    if (attr != NULL) {
9000d430:	4614      	mov	r4, r2
9000d432:	b17a      	cbz	r2, 9000d454 <osMessageQueueNew+0x34>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000d434:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
9000d438:	b1c3      	cbz	r3, 9000d46c <osMessageQueueNew+0x4c>
9000d43a:	2a4f      	cmp	r2, #79	@ 0x4f
9000d43c:	d906      	bls.n	9000d44c <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000d43e:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
9000d440:	b122      	cbz	r2, 9000d44c <osMessageQueueNew+0x2c>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
9000d442:	fb01 f505 	mul.w	r5, r1, r5
9000d446:	6966      	ldr	r6, [r4, #20]
9000d448:	42ae      	cmp	r6, r5
9000d44a:	d21e      	bcs.n	9000d48a <osMessageQueueNew+0x6a>
  hQueue = NULL;
9000d44c:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
9000d44e:	4628      	mov	r0, r5
9000d450:	b003      	add	sp, #12
9000d452:	bdf0      	pop	{r4, r5, r6, r7, pc}
          hQueue = xQueueCreate (msg_count, msg_size);
9000d454:	f000 fc94 	bl	9000dd80 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000d458:	4605      	mov	r5, r0
9000d45a:	2800      	cmp	r0, #0
9000d45c:	d0f6      	beq.n	9000d44c <osMessageQueueNew+0x2c>
      vQueueAddToRegistry (hQueue, name);
9000d45e:	4628      	mov	r0, r5
9000d460:	4621      	mov	r1, r4
9000d462:	f001 fb63 	bl	9000eb2c <vQueueAddToRegistry>
}
9000d466:	4628      	mov	r0, r5
9000d468:	b003      	add	sp, #12
9000d46a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
9000d46c:	2a00      	cmp	r2, #0
9000d46e:	d1ed      	bne.n	9000d44c <osMessageQueueNew+0x2c>
9000d470:	6923      	ldr	r3, [r4, #16]
9000d472:	2b00      	cmp	r3, #0
9000d474:	d1ea      	bne.n	9000d44c <osMessageQueueNew+0x2c>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
9000d476:	6962      	ldr	r2, [r4, #20]
9000d478:	2a00      	cmp	r2, #0
9000d47a:	d1e7      	bne.n	9000d44c <osMessageQueueNew+0x2c>
          hQueue = xQueueCreate (msg_count, msg_size);
9000d47c:	f000 fc80 	bl	9000dd80 <xQueueGenericCreate>
    if (hQueue != NULL) {
9000d480:	4605      	mov	r5, r0
9000d482:	2800      	cmp	r0, #0
9000d484:	d0e2      	beq.n	9000d44c <osMessageQueueNew+0x2c>
        name = attr->name;
9000d486:	6824      	ldr	r4, [r4, #0]
9000d488:	e7e9      	b.n	9000d45e <osMessageQueueNew+0x3e>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
9000d48a:	9700      	str	r7, [sp, #0]
9000d48c:	f000 fc0c 	bl	9000dca8 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
9000d490:	4605      	mov	r5, r0
9000d492:	2800      	cmp	r0, #0
9000d494:	d1f7      	bne.n	9000d486 <osMessageQueueNew+0x66>
9000d496:	e7d9      	b.n	9000d44c <osMessageQueueNew+0x2c>

9000d498 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
9000d498:	b560      	push	{r5, r6, lr}
9000d49a:	461e      	mov	r6, r3
9000d49c:	b083      	sub	sp, #12
9000d49e:	f3ef 8205 	mrs	r2, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d4a2:	fab0 f580 	clz	r5, r0
9000d4a6:	fab1 f381 	clz	r3, r1
9000d4aa:	096d      	lsrs	r5, r5, #5
9000d4ac:	095b      	lsrs	r3, r3, #5
  if (IS_IRQ()) {
9000d4ae:	b1da      	cbz	r2, 9000d4e8 <osMessageQueuePut+0x50>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d4b0:	2e00      	cmp	r6, #0
9000d4b2:	bf18      	it	ne
9000d4b4:	f043 0301 	orrne.w	r3, r3, #1
9000d4b8:	bb33      	cbnz	r3, 9000d508 <osMessageQueuePut+0x70>
9000d4ba:	bb2d      	cbnz	r5, 9000d508 <osMessageQueuePut+0x70>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000d4bc:	462b      	mov	r3, r5
9000d4be:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000d4c0:	9501      	str	r5, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
9000d4c2:	f000 fec7 	bl	9000e254 <xQueueGenericSendFromISR>
9000d4c6:	2801      	cmp	r0, #1
9000d4c8:	d11a      	bne.n	9000d500 <osMessageQueuePut+0x68>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000d4ca:	9b01      	ldr	r3, [sp, #4]
9000d4cc:	b14b      	cbz	r3, 9000d4e2 <osMessageQueuePut+0x4a>
9000d4ce:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d4d2:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000d4d6:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000d4da:	f3bf 8f4f 	dsb	sy
9000d4de:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000d4e2:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000d4e4:	b003      	add	sp, #12
9000d4e6:	bd60      	pop	{r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000d4e8:	b975      	cbnz	r5, 9000d508 <osMessageQueuePut+0x70>
9000d4ea:	b96b      	cbnz	r3, 9000d508 <osMessageQueuePut+0x70>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000d4ec:	4632      	mov	r2, r6
9000d4ee:	f000 fd2f 	bl	9000df50 <xQueueGenericSend>
9000d4f2:	2801      	cmp	r0, #1
9000d4f4:	d0f5      	beq.n	9000d4e2 <osMessageQueuePut+0x4a>
        if (timeout != 0U) {
9000d4f6:	b11e      	cbz	r6, 9000d500 <osMessageQueuePut+0x68>
          stat = osErrorTimeout;
9000d4f8:	f06f 0001 	mvn.w	r0, #1
}
9000d4fc:	b003      	add	sp, #12
9000d4fe:	bd60      	pop	{r5, r6, pc}
        stat = osErrorResource;
9000d500:	f06f 0002 	mvn.w	r0, #2
}
9000d504:	b003      	add	sp, #12
9000d506:	bd60      	pop	{r5, r6, pc}
      stat = osErrorParameter;
9000d508:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000d50c:	e7ea      	b.n	9000d4e4 <osMessageQueuePut+0x4c>
9000d50e:	bf00      	nop

9000d510 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
9000d510:	b570      	push	{r4, r5, r6, lr}
9000d512:	461e      	mov	r6, r3
9000d514:	b082      	sub	sp, #8
9000d516:	f3ef 8305 	mrs	r3, IPSR
  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d51a:	fab0 f580 	clz	r5, r0
9000d51e:	fab1 f481 	clz	r4, r1
9000d522:	096d      	lsrs	r5, r5, #5
9000d524:	0964      	lsrs	r4, r4, #5
  if (IS_IRQ()) {
9000d526:	b1d3      	cbz	r3, 9000d55e <osMessageQueueGet+0x4e>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
9000d528:	2e00      	cmp	r6, #0
9000d52a:	bf18      	it	ne
9000d52c:	f044 0401 	orrne.w	r4, r4, #1
9000d530:	bb2c      	cbnz	r4, 9000d57e <osMessageQueueGet+0x6e>
9000d532:	bb25      	cbnz	r5, 9000d57e <osMessageQueueGet+0x6e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000d534:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
9000d536:	9501      	str	r5, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
9000d538:	f001 fa56 	bl	9000e9e8 <xQueueReceiveFromISR>
9000d53c:	2801      	cmp	r0, #1
9000d53e:	d11a      	bne.n	9000d576 <osMessageQueueGet+0x66>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
9000d540:	9b01      	ldr	r3, [sp, #4]
9000d542:	b14b      	cbz	r3, 9000d558 <osMessageQueueGet+0x48>
9000d544:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d548:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000d54c:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000d550:	f3bf 8f4f 	dsb	sy
9000d554:	f3bf 8f6f 	isb	sy
  stat = osOK;
9000d558:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
9000d55a:	b002      	add	sp, #8
9000d55c:	bd70      	pop	{r4, r5, r6, pc}
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
9000d55e:	b975      	cbnz	r5, 9000d57e <osMessageQueueGet+0x6e>
9000d560:	b96c      	cbnz	r4, 9000d57e <osMessageQueueGet+0x6e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
9000d562:	4632      	mov	r2, r6
9000d564:	f000 ff32 	bl	9000e3cc <xQueueReceive>
9000d568:	2801      	cmp	r0, #1
9000d56a:	d0f5      	beq.n	9000d558 <osMessageQueueGet+0x48>
        if (timeout != 0U) {
9000d56c:	b11e      	cbz	r6, 9000d576 <osMessageQueueGet+0x66>
          stat = osErrorTimeout;
9000d56e:	f06f 0001 	mvn.w	r0, #1
}
9000d572:	b002      	add	sp, #8
9000d574:	bd70      	pop	{r4, r5, r6, pc}
        stat = osErrorResource;
9000d576:	f06f 0002 	mvn.w	r0, #2
}
9000d57a:	b002      	add	sp, #8
9000d57c:	bd70      	pop	{r4, r5, r6, pc}
      stat = osErrorParameter;
9000d57e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
9000d582:	e7ea      	b.n	9000d55a <osMessageQueueGet+0x4a>

9000d584 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000d584:	4b04      	ldr	r3, [pc, #16]	@ (9000d598 <vApplicationGetIdleTaskMemory+0x14>)
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
9000d586:	b410      	push	{r4}
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
9000d588:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000d58a:	2380      	movs	r3, #128	@ 0x80
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
9000d58c:	4c03      	ldr	r4, [pc, #12]	@ (9000d59c <vApplicationGetIdleTaskMemory+0x18>)
9000d58e:	600c      	str	r4, [r1, #0]
}
9000d590:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
9000d594:	6013      	str	r3, [r2, #0]
}
9000d596:	4770      	bx	lr
9000d598:	24008bec 	.word	0x24008bec
9000d59c:	240089ec 	.word	0x240089ec

9000d5a0 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000d5a0:	4b05      	ldr	r3, [pc, #20]	@ (9000d5b8 <vApplicationGetTimerTaskMemory+0x18>)
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
9000d5a2:	b410      	push	{r4}
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
9000d5a4:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000d5a6:	f44f 7380 	mov.w	r3, #256	@ 0x100
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
9000d5aa:	4c04      	ldr	r4, [pc, #16]	@ (9000d5bc <vApplicationGetTimerTaskMemory+0x1c>)
9000d5ac:	600c      	str	r4, [r1, #0]
}
9000d5ae:	f85d 4b04 	ldr.w	r4, [sp], #4
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
9000d5b2:	6013      	str	r3, [r2, #0]
}
9000d5b4:	4770      	bx	lr
9000d5b6:	bf00      	nop
9000d5b8:	2400898c 	.word	0x2400898c
9000d5bc:	2400858c 	.word	0x2400858c

9000d5c0 <pvPortMalloc>:
static size_t xBlockAllocatedBit = 0;

/*-----------------------------------------------------------*/

void *pvPortMalloc( size_t xWantedSize )
{
9000d5c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
9000d5c4:	4604      	mov	r4, r0
BlockLink_t *pxBlock, *pxPreviousBlock, *pxNewBlockLink;
void *pvReturn = NULL;

	vTaskSuspendAll();
9000d5c6:	f001 ff81 	bl	9000f4cc <vTaskSuspendAll>
	{
		/* If this is the first call to malloc then the heap will require
		initialisation to setup the list of free blocks. */
		if( pxEnd == NULL )
9000d5ca:	4a54      	ldr	r2, [pc, #336]	@ (9000d71c <pvPortMalloc+0x15c>)
9000d5cc:	6815      	ldr	r5, [r2, #0]
9000d5ce:	2d00      	cmp	r5, #0
9000d5d0:	d035      	beq.n	9000d63e <pvPortMalloc+0x7e>

		/* Check the requested block size is not so large that the top bit is
		set.  The top bit of the block size member of the BlockLink_t structure
		is used to determine who owns the block - the application or the
		kernel, so it must be free. */
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
9000d5d2:	4b53      	ldr	r3, [pc, #332]	@ (9000d720 <pvPortMalloc+0x160>)
9000d5d4:	681e      	ldr	r6, [r3, #0]
9000d5d6:	4234      	tst	r4, r6
9000d5d8:	d12b      	bne.n	9000d632 <pvPortMalloc+0x72>
		{
			/* The wanted size is increased so it can contain a BlockLink_t
			structure in addition to the requested amount of bytes. */
			if( xWantedSize > 0 )
9000d5da:	b354      	cbz	r4, 9000d632 <pvPortMalloc+0x72>
			{
				xWantedSize += xHeapStructSize;
9000d5dc:	f104 0008 	add.w	r0, r4, #8

				/* Ensure that blocks are always aligned to the required number
				of bytes. */
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
9000d5e0:	0764      	lsls	r4, r4, #29
9000d5e2:	d002      	beq.n	9000d5ea <pvPortMalloc+0x2a>
				{
					/* Byte alignment required. */
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
9000d5e4:	f020 0007 	bic.w	r0, r0, #7
9000d5e8:	3008      	adds	r0, #8
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}

			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
9000d5ea:	b310      	cbz	r0, 9000d632 <pvPortMalloc+0x72>
9000d5ec:	f8df e144 	ldr.w	lr, [pc, #324]	@ 9000d734 <pvPortMalloc+0x174>
9000d5f0:	f8de c000 	ldr.w	ip, [lr]
9000d5f4:	4584      	cmp	ip, r0
9000d5f6:	d31c      	bcc.n	9000d632 <pvPortMalloc+0x72>
			{
				/* Traverse the list from the start	(lowest address) block until
				one	of adequate size is found. */
				pxPreviousBlock = &xStart;
				pxBlock = xStart.pxNextFreeBlock;
9000d5f8:	4c4a      	ldr	r4, [pc, #296]	@ (9000d724 <pvPortMalloc+0x164>)
9000d5fa:	6823      	ldr	r3, [r4, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000d5fc:	e003      	b.n	9000d606 <pvPortMalloc+0x46>
9000d5fe:	681a      	ldr	r2, [r3, #0]
9000d600:	b122      	cbz	r2, 9000d60c <pvPortMalloc+0x4c>
				{
					pxPreviousBlock = pxBlock;
9000d602:	461c      	mov	r4, r3
					pxBlock = pxBlock->pxNextFreeBlock;
9000d604:	4613      	mov	r3, r2
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
9000d606:	6859      	ldr	r1, [r3, #4]
9000d608:	4281      	cmp	r1, r0
9000d60a:	d3f8      	bcc.n	9000d5fe <pvPortMalloc+0x3e>
				}

				/* If the end marker was reached then a block of adequate size
				was	not found. */
				if( pxBlock != pxEnd )
9000d60c:	42ab      	cmp	r3, r5
9000d60e:	d010      	beq.n	9000d632 <pvPortMalloc+0x72>
					BlockLink_t structure at its start. */
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );

					/* This block is being returned for use so must be taken out
					of the list of free blocks. */
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
9000d610:	681a      	ldr	r2, [r3, #0]
9000d612:	6022      	str	r2, [r4, #0]

					/* If the block is larger than required it can be split into
					two. */
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
9000d614:	1a0c      	subs	r4, r1, r0
9000d616:	2c10      	cmp	r4, #16
9000d618:	d947      	bls.n	9000d6aa <pvPortMalloc+0xea>
					{
						/* This block is to be split into two.  Create a new
						block following the number of bytes requested. The void
						cast is used to prevent byte alignment warnings from the
						compiler. */
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
9000d61a:	181a      	adds	r2, r3, r0
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
9000d61c:	0751      	lsls	r1, r2, #29
9000d61e:	d02d      	beq.n	9000d67c <pvPortMalloc+0xbc>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
9000d620:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d624:	f383 8811 	msr	BASEPRI, r3
9000d628:	f3bf 8f6f 	isb	sy
9000d62c:	f3bf 8f4f 	dsb	sy
9000d630:	e7fe      	b.n	9000d630 <pvPortMalloc+0x70>
void *pvReturn = NULL;
9000d632:	2400      	movs	r4, #0
			mtCOVERAGE_TEST_MARKER();
		}

		traceMALLOC( pvReturn, xWantedSize );
	}
	( void ) xTaskResumeAll();
9000d634:	f001 ff52 	bl	9000f4dc <xTaskResumeAll>
	}
	#endif

	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
	return pvReturn;
}
9000d638:	4620      	mov	r0, r4
9000d63a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
uint8_t *pucAlignedHeap;
size_t uxAddress;
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;

	/* Ensure the heap starts on a correctly aligned boundary. */
	uxAddress = ( size_t ) ucHeap;
9000d63e:	4b3a      	ldr	r3, [pc, #232]	@ (9000d728 <pvPortMalloc+0x168>)
	/* Only one block exists - and it covers the entire usable heap space. */
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;

	/* Work out the position of the top bit in a size_t variable. */
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000d640:	f04f 4000 	mov.w	r0, #2147483648	@ 0x80000000
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000d644:	4e37      	ldr	r6, [pc, #220]	@ (9000d724 <pvPortMalloc+0x164>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
9000d646:	075d      	lsls	r5, r3, #29
	uxAddress -= xHeapStructSize;
9000d648:	4d38      	ldr	r5, [pc, #224]	@ (9000d72c <pvPortMalloc+0x16c>)
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
9000d64a:	bf18      	it	ne
9000d64c:	3307      	addne	r3, #7
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000d64e:	f025 0507 	bic.w	r5, r5, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
9000d652:	bf18      	it	ne
9000d654:	f023 0307 	bicne.w	r3, r3, #7
	pxEnd = ( void * ) uxAddress;
9000d658:	6015      	str	r5, [r2, #0]
	xStart.xBlockSize = ( size_t ) 0;
9000d65a:	2200      	movs	r2, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
9000d65c:	6033      	str	r3, [r6, #0]
9000d65e:	4619      	mov	r1, r3
	xStart.xBlockSize = ( size_t ) 0;
9000d660:	6072      	str	r2, [r6, #4]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
9000d662:	1aeb      	subs	r3, r5, r3
}
9000d664:	4606      	mov	r6, r0
	pxEnd->pxNextFreeBlock = NULL;
9000d666:	e9c5 2200 	strd	r2, r2, [r5]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000d66a:	4a31      	ldr	r2, [pc, #196]	@ (9000d730 <pvPortMalloc+0x170>)
9000d66c:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000d66e:	4a31      	ldr	r2, [pc, #196]	@ (9000d734 <pvPortMalloc+0x174>)
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
9000d670:	e9c1 5300 	strd	r5, r3, [r1]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
9000d674:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
9000d676:	4b2a      	ldr	r3, [pc, #168]	@ (9000d720 <pvPortMalloc+0x160>)
9000d678:	6018      	str	r0, [r3, #0]
}
9000d67a:	e7ac      	b.n	9000d5d6 <pvPortMalloc+0x16>
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d67c:	4929      	ldr	r1, [pc, #164]	@ (9000d724 <pvPortMalloc+0x164>)
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
9000d67e:	6054      	str	r4, [r2, #4]
						pxBlock->xBlockSize = xWantedSize;
9000d680:	6058      	str	r0, [r3, #4]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d682:	460c      	mov	r4, r1
9000d684:	6809      	ldr	r1, [r1, #0]
9000d686:	428a      	cmp	r2, r1
9000d688:	d8fb      	bhi.n	9000d682 <pvPortMalloc+0xc2>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000d68a:	6867      	ldr	r7, [r4, #4]
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d68c:	f8d2 8004 	ldr.w	r8, [r2, #4]
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000d690:	eb04 0907 	add.w	r9, r4, r7
9000d694:	454a      	cmp	r2, r9
9000d696:	d028      	beq.n	9000d6ea <pvPortMalloc+0x12a>
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d698:	eb02 0708 	add.w	r7, r2, r8
9000d69c:	42b9      	cmp	r1, r7
9000d69e:	d02b      	beq.n	9000d6f8 <pvPortMalloc+0x138>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
		}
		else
		{
			pxBlockToInsert->pxNextFreeBlock = pxEnd;
9000d6a0:	6011      	str	r1, [r2, #0]
9000d6a2:	4601      	mov	r1, r0

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
9000d6a4:	42a2      	cmp	r2, r4
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000d6a6:	bf18      	it	ne
9000d6a8:	6022      	strne	r2, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000d6aa:	4821      	ldr	r0, [pc, #132]	@ (9000d730 <pvPortMalloc+0x170>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d6ac:	ebac 0201 	sub.w	r2, ip, r1
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000d6b0:	430e      	orrs	r6, r1
					pxBlock->pxNextFreeBlock = NULL;
9000d6b2:	2100      	movs	r1, #0
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000d6b4:	6804      	ldr	r4, [r0, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d6b6:	f8ce 2000 	str.w	r2, [lr]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
9000d6ba:	42a2      	cmp	r2, r4
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
9000d6bc:	f103 0408 	add.w	r4, r3, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
9000d6c0:	605e      	str	r6, [r3, #4]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
9000d6c2:	bf38      	it	cc
9000d6c4:	6002      	strcc	r2, [r0, #0]
					xNumberOfSuccessfulAllocations++;
9000d6c6:	481c      	ldr	r0, [pc, #112]	@ (9000d738 <pvPortMalloc+0x178>)
					pxBlock->pxNextFreeBlock = NULL;
9000d6c8:	6019      	str	r1, [r3, #0]
					xNumberOfSuccessfulAllocations++;
9000d6ca:	6802      	ldr	r2, [r0, #0]
9000d6cc:	3201      	adds	r2, #1
9000d6ce:	6002      	str	r2, [r0, #0]
	( void ) xTaskResumeAll();
9000d6d0:	f001 ff04 	bl	9000f4dc <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
9000d6d4:	0763      	lsls	r3, r4, #29
9000d6d6:	d0af      	beq.n	9000d638 <pvPortMalloc+0x78>
9000d6d8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d6dc:	f383 8811 	msr	BASEPRI, r3
9000d6e0:	f3bf 8f6f 	isb	sy
9000d6e4:	f3bf 8f4f 	dsb	sy
9000d6e8:	e7fe      	b.n	9000d6e8 <pvPortMalloc+0x128>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d6ea:	4447      	add	r7, r8
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d6ec:	19e0      	adds	r0, r4, r7
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d6ee:	6067      	str	r7, [r4, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d6f0:	4281      	cmp	r1, r0
9000d6f2:	d00a      	beq.n	9000d70a <pvPortMalloc+0x14a>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d6f4:	6859      	ldr	r1, [r3, #4]
	if( pxIterator != pxBlockToInsert )
9000d6f6:	e7d8      	b.n	9000d6aa <pvPortMalloc+0xea>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000d6f8:	42a9      	cmp	r1, r5
9000d6fa:	d0d1      	beq.n	9000d6a0 <pvPortMalloc+0xe0>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d6fc:	6848      	ldr	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d6fe:	6809      	ldr	r1, [r1, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d700:	4440      	add	r0, r8
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d702:	6011      	str	r1, [r2, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d704:	6050      	str	r0, [r2, #4]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
9000d706:	6859      	ldr	r1, [r3, #4]
9000d708:	e7cc      	b.n	9000d6a4 <pvPortMalloc+0xe4>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000d70a:	42a9      	cmp	r1, r5
9000d70c:	d0f2      	beq.n	9000d6f4 <pvPortMalloc+0x134>
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d70e:	6848      	ldr	r0, [r1, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d710:	680a      	ldr	r2, [r1, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d712:	4438      	add	r0, r7
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d714:	6022      	str	r2, [r4, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d716:	6060      	str	r0, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d718:	e7ec      	b.n	9000d6f4 <pvPortMalloc+0x134>
9000d71a:	bf00      	nop
9000d71c:	24008c64 	.word	0x24008c64
9000d720:	24008c50 	.word	0x24008c50
9000d724:	24008c68 	.word	0x24008c68
9000d728:	24008c70 	.word	0x24008c70
9000d72c:	24021308 	.word	0x24021308
9000d730:	24008c5c 	.word	0x24008c5c
9000d734:	24008c60 	.word	0x24008c60
9000d738:	24008c58 	.word	0x24008c58

9000d73c <vPortFree>:
	if( pv != NULL )
9000d73c:	b1d0      	cbz	r0, 9000d774 <vPortFree+0x38>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000d73e:	4a2f      	ldr	r2, [pc, #188]	@ (9000d7fc <vPortFree+0xc0>)
9000d740:	f850 3c04 	ldr.w	r3, [r0, #-4]
9000d744:	6812      	ldr	r2, [r2, #0]
9000d746:	4213      	tst	r3, r2
9000d748:	d00b      	beq.n	9000d762 <vPortFree+0x26>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
9000d74a:	f850 1c08 	ldr.w	r1, [r0, #-8]
9000d74e:	b191      	cbz	r1, 9000d776 <vPortFree+0x3a>
9000d750:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d754:	f383 8811 	msr	BASEPRI, r3
9000d758:	f3bf 8f6f 	isb	sy
9000d75c:	f3bf 8f4f 	dsb	sy
9000d760:	e7fe      	b.n	9000d760 <vPortFree+0x24>
9000d762:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d766:	f383 8811 	msr	BASEPRI, r3
9000d76a:	f3bf 8f6f 	isb	sy
9000d76e:	f3bf 8f4f 	dsb	sy
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
9000d772:	e7fe      	b.n	9000d772 <vPortFree+0x36>
9000d774:	4770      	bx	lr
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000d776:	ea23 0302 	bic.w	r3, r3, r2
{
9000d77a:	b530      	push	{r4, r5, lr}
9000d77c:	b083      	sub	sp, #12
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000d77e:	f840 3c04 	str.w	r3, [r0, #-4]
		puc -= xHeapStructSize;
9000d782:	f1a0 0408 	sub.w	r4, r0, #8
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
9000d786:	9001      	str	r0, [sp, #4]
				vTaskSuspendAll();
9000d788:	f001 fea0 	bl	9000f4cc <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
9000d78c:	4a1c      	ldr	r2, [pc, #112]	@ (9000d800 <vPortFree+0xc4>)
9000d78e:	9801      	ldr	r0, [sp, #4]
9000d790:	6813      	ldr	r3, [r2, #0]
9000d792:	f850 1c04 	ldr.w	r1, [r0, #-4]
9000d796:	440b      	add	r3, r1
9000d798:	6013      	str	r3, [r2, #0]
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
9000d79a:	4b1a      	ldr	r3, [pc, #104]	@ (9000d804 <vPortFree+0xc8>)
9000d79c:	461a      	mov	r2, r3
9000d79e:	681b      	ldr	r3, [r3, #0]
9000d7a0:	429c      	cmp	r4, r3
9000d7a2:	d8fb      	bhi.n	9000d79c <vPortFree+0x60>
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
9000d7a4:	6855      	ldr	r5, [r2, #4]
9000d7a6:	eb02 0e05 	add.w	lr, r2, r5
9000d7aa:	4574      	cmp	r4, lr
9000d7ac:	d011      	beq.n	9000d7d2 <vPortFree+0x96>
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d7ae:	eb04 0c01 	add.w	ip, r4, r1
9000d7b2:	4563      	cmp	r3, ip
9000d7b4:	d01d      	beq.n	9000d7f2 <vPortFree+0xb6>
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
9000d7b6:	f840 3c08 	str.w	r3, [r0, #-8]
	if( pxIterator != pxBlockToInsert )
9000d7ba:	42a2      	cmp	r2, r4
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
9000d7bc:	bf18      	it	ne
9000d7be:	6014      	strne	r4, [r2, #0]
					xNumberOfSuccessfulFrees++;
9000d7c0:	4a11      	ldr	r2, [pc, #68]	@ (9000d808 <vPortFree+0xcc>)
9000d7c2:	6813      	ldr	r3, [r2, #0]
9000d7c4:	3301      	adds	r3, #1
9000d7c6:	6013      	str	r3, [r2, #0]
}
9000d7c8:	b003      	add	sp, #12
9000d7ca:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
				( void ) xTaskResumeAll();
9000d7ce:	f001 be85 	b.w	9000f4dc <xTaskResumeAll>
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d7d2:	4429      	add	r1, r5
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d7d4:	1850      	adds	r0, r2, r1
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
9000d7d6:	6051      	str	r1, [r2, #4]
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
9000d7d8:	4283      	cmp	r3, r0
9000d7da:	d1f1      	bne.n	9000d7c0 <vPortFree+0x84>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000d7dc:	480b      	ldr	r0, [pc, #44]	@ (9000d80c <vPortFree+0xd0>)
9000d7de:	6800      	ldr	r0, [r0, #0]
9000d7e0:	4283      	cmp	r3, r0
9000d7e2:	d0ed      	beq.n	9000d7c0 <vPortFree+0x84>
		pxBlockToInsert = pxIterator;
9000d7e4:	4614      	mov	r4, r2
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d7e6:	e9d3 3000 	ldrd	r3, r0, [r3]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d7ea:	4401      	add	r1, r0
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d7ec:	6023      	str	r3, [r4, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
9000d7ee:	6061      	str	r1, [r4, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
9000d7f0:	e7e3      	b.n	9000d7ba <vPortFree+0x7e>
		if( pxIterator->pxNextFreeBlock != pxEnd )
9000d7f2:	4d06      	ldr	r5, [pc, #24]	@ (9000d80c <vPortFree+0xd0>)
9000d7f4:	682d      	ldr	r5, [r5, #0]
9000d7f6:	42ab      	cmp	r3, r5
9000d7f8:	d1f5      	bne.n	9000d7e6 <vPortFree+0xaa>
9000d7fa:	e7dc      	b.n	9000d7b6 <vPortFree+0x7a>
9000d7fc:	24008c50 	.word	0x24008c50
9000d800:	24008c60 	.word	0x24008c60
9000d804:	24008c68 	.word	0x24008c68
9000d808:	24008c54 	.word	0x24008c54
9000d80c:	24008c64 	.word	0x24008c64

9000d810 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000d810:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000d814:	f04f 31ff 	mov.w	r1, #4294967295
	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000d818:	2200      	movs	r2, #0
	pxList->xListEnd.xItemValue = portMAX_DELAY;
9000d81a:	6081      	str	r1, [r0, #8]
	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
9000d81c:	6002      	str	r2, [r0, #0]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000d81e:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
9000d820:	e9c0 3303 	strd	r3, r3, [r0, #12]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
9000d824:	4770      	bx	lr
9000d826:	bf00      	nop

9000d828 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
9000d828:	2300      	movs	r3, #0
9000d82a:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
9000d82c:	4770      	bx	lr
9000d82e:	bf00      	nop

9000d830 <vListInsertEnd>:
	pxIndex->pxPrevious = pxNewListItem;

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000d830:	6803      	ldr	r3, [r0, #0]
ListItem_t * const pxIndex = pxList->pxIndex;
9000d832:	6842      	ldr	r2, [r0, #4]
	( pxList->uxNumberOfItems )++;
9000d834:	3301      	adds	r3, #1
{
9000d836:	b410      	push	{r4}
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
9000d838:	6894      	ldr	r4, [r2, #8]
9000d83a:	e9c1 2401 	strd	r2, r4, [r1, #4]
	pxIndex->pxPrevious->pxNext = pxNewListItem;
9000d83e:	6061      	str	r1, [r4, #4]
	pxIndex->pxPrevious = pxNewListItem;
9000d840:	6091      	str	r1, [r2, #8]
}
9000d842:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxNewListItem->pxContainer = pxList;
9000d846:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000d848:	6003      	str	r3, [r0, #0]
}
9000d84a:	4770      	bx	lr

9000d84c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
9000d84c:	b430      	push	{r4, r5}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
9000d84e:	680d      	ldr	r5, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
9000d850:	1c6b      	adds	r3, r5, #1
9000d852:	d010      	beq.n	9000d876 <vListInsert+0x2a>
			4) Using a queue or semaphore before it has been initialised or
			   before the scheduler has been started (are interrupts firing
			   before vTaskStartScheduler() has been called?).
		**********************************************************************/

		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
9000d854:	f100 0308 	add.w	r3, r0, #8
9000d858:	461c      	mov	r4, r3
9000d85a:	685b      	ldr	r3, [r3, #4]
9000d85c:	681a      	ldr	r2, [r3, #0]
9000d85e:	42aa      	cmp	r2, r5
9000d860:	d9fa      	bls.n	9000d858 <vListInsert+0xc>

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
9000d862:	6802      	ldr	r2, [r0, #0]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000d864:	604b      	str	r3, [r1, #4]
	( pxList->uxNumberOfItems )++;
9000d866:	3201      	adds	r2, #1
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
9000d868:	6099      	str	r1, [r3, #8]
	pxNewListItem->pxPrevious = pxIterator;
9000d86a:	608c      	str	r4, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
9000d86c:	6061      	str	r1, [r4, #4]
	pxNewListItem->pxContainer = pxList;
9000d86e:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
9000d870:	6002      	str	r2, [r0, #0]
}
9000d872:	bc30      	pop	{r4, r5}
9000d874:	4770      	bx	lr
		pxIterator = pxList->xListEnd.pxPrevious;
9000d876:	6904      	ldr	r4, [r0, #16]
	pxNewListItem->pxNext = pxIterator->pxNext;
9000d878:	6863      	ldr	r3, [r4, #4]
9000d87a:	e7f2      	b.n	9000d862 <vListInsert+0x16>

9000d87c <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;
9000d87c:	6903      	ldr	r3, [r0, #16]
{
9000d87e:	b410      	push	{r4}

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
9000d880:	685c      	ldr	r4, [r3, #4]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000d882:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
	if( pxList->pxIndex == pxItemToRemove )
9000d886:	4284      	cmp	r4, r0

	pxItemToRemove->pxContainer = NULL;
	( pxList->uxNumberOfItems )--;

	return pxList->uxNumberOfItems;
}
9000d888:	f85d 4b04 	ldr.w	r4, [sp], #4
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
9000d88c:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
9000d88e:	6051      	str	r1, [r2, #4]
	pxItemToRemove->pxContainer = NULL;
9000d890:	f04f 0100 	mov.w	r1, #0
		pxList->pxIndex = pxItemToRemove->pxPrevious;
9000d894:	bf08      	it	eq
9000d896:	605a      	streq	r2, [r3, #4]
	( pxList->uxNumberOfItems )--;
9000d898:	681a      	ldr	r2, [r3, #0]
	pxItemToRemove->pxContainer = NULL;
9000d89a:	6101      	str	r1, [r0, #16]
	( pxList->uxNumberOfItems )--;
9000d89c:	3a01      	subs	r2, #1
9000d89e:	601a      	str	r2, [r3, #0]
	return pxList->uxNumberOfItems;
9000d8a0:	6818      	ldr	r0, [r3, #0]
}
9000d8a2:	4770      	bx	lr

9000d8a4 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
9000d8a4:	4808      	ldr	r0, [pc, #32]	@ (9000d8c8 <prvPortStartFirstTask+0x24>)
9000d8a6:	6800      	ldr	r0, [r0, #0]
9000d8a8:	6800      	ldr	r0, [r0, #0]
9000d8aa:	f380 8808 	msr	MSP, r0
9000d8ae:	f04f 0000 	mov.w	r0, #0
9000d8b2:	f380 8814 	msr	CONTROL, r0
9000d8b6:	b662      	cpsie	i
9000d8b8:	b661      	cpsie	f
9000d8ba:	f3bf 8f4f 	dsb	sy
9000d8be:	f3bf 8f6f 	isb	sy
9000d8c2:	df00      	svc	0
9000d8c4:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
9000d8c6:	0000      	.short	0x0000
9000d8c8:	e000ed08 	.word	0xe000ed08

9000d8cc <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
9000d8cc:	f8df 000c 	ldr.w	r0, [pc, #12]	@ 9000d8dc <vPortEnableVFP+0x10>
9000d8d0:	6801      	ldr	r1, [r0, #0]
9000d8d2:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
9000d8d6:	6001      	str	r1, [r0, #0]
9000d8d8:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
9000d8da:	0000      	.short	0x0000
9000d8dc:	e000ed88 	.word	0xe000ed88

9000d8e0 <prvTaskExitError>:
	configASSERT( uxCriticalNesting == ~0UL );
9000d8e0:	4b0e      	ldr	r3, [pc, #56]	@ (9000d91c <prvTaskExitError+0x3c>)
{
9000d8e2:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
9000d8e4:	2200      	movs	r2, #0
	configASSERT( uxCriticalNesting == ~0UL );
9000d8e6:	681b      	ldr	r3, [r3, #0]
volatile uint32_t ulDummy = 0;
9000d8e8:	9201      	str	r2, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
9000d8ea:	3301      	adds	r3, #1
9000d8ec:	d008      	beq.n	9000d900 <prvTaskExitError+0x20>
9000d8ee:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d8f2:	f383 8811 	msr	BASEPRI, r3
9000d8f6:	f3bf 8f6f 	isb	sy
9000d8fa:	f3bf 8f4f 	dsb	sy
9000d8fe:	e7fe      	b.n	9000d8fe <prvTaskExitError+0x1e>
9000d900:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d904:	f383 8811 	msr	BASEPRI, r3
9000d908:	f3bf 8f6f 	isb	sy
9000d90c:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000d910:	9b01      	ldr	r3, [sp, #4]
9000d912:	2b00      	cmp	r3, #0
9000d914:	d0fc      	beq.n	9000d910 <prvTaskExitError+0x30>
}
9000d916:	b002      	add	sp, #8
9000d918:	4770      	bx	lr
9000d91a:	bf00      	nop
9000d91c:	24000084 	.word	0x24000084

9000d920 <pxPortInitialiseStack>:
{
9000d920:	4603      	mov	r3, r0
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000d922:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000d926:	4809      	ldr	r0, [pc, #36]	@ (9000d94c <pxPortInitialiseStack+0x2c>)
{
9000d928:	b410      	push	{r4}
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
9000d92a:	f04f 7480 	mov.w	r4, #16777216	@ 0x1000000
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
9000d92e:	f843 0c0c 	str.w	r0, [r3, #-12]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
9000d932:	f843 2c20 	str.w	r2, [r3, #-32]
}
9000d936:	f1a3 0044 	sub.w	r0, r3, #68	@ 0x44
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
9000d93a:	e943 1402 	strd	r1, r4, [r3, #-8]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000d93e:	f06f 0102 	mvn.w	r1, #2
}
9000d942:	f85d 4b04 	ldr.w	r4, [sp], #4
	*pxTopOfStack = portINITIAL_EXC_RETURN;
9000d946:	f843 1c24 	str.w	r1, [r3, #-36]
}
9000d94a:	4770      	bx	lr
9000d94c:	9000d8e1 	.word	0x9000d8e1

9000d950 <SVC_Handler>:
	__asm volatile (
9000d950:	4b07      	ldr	r3, [pc, #28]	@ (9000d970 <pxCurrentTCBConst2>)
9000d952:	6819      	ldr	r1, [r3, #0]
9000d954:	6808      	ldr	r0, [r1, #0]
9000d956:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000d95a:	f380 8809 	msr	PSP, r0
9000d95e:	f3bf 8f6f 	isb	sy
9000d962:	f04f 0000 	mov.w	r0, #0
9000d966:	f380 8811 	msr	BASEPRI, r0
9000d96a:	4770      	bx	lr
9000d96c:	f3af 8000 	nop.w

9000d970 <pxCurrentTCBConst2>:
9000d970:	24021850 	.word	0x24021850

9000d974 <vPortEnterCritical>:
9000d974:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d978:	f383 8811 	msr	BASEPRI, r3
9000d97c:	f3bf 8f6f 	isb	sy
9000d980:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
9000d984:	4a0b      	ldr	r2, [pc, #44]	@ (9000d9b4 <vPortEnterCritical+0x40>)
9000d986:	6813      	ldr	r3, [r2, #0]
9000d988:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
9000d98a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
9000d98c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
9000d98e:	d000      	beq.n	9000d992 <vPortEnterCritical+0x1e>
}
9000d990:	4770      	bx	lr
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
9000d992:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000d996:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	@ 0xd04
9000d99a:	b2db      	uxtb	r3, r3
9000d99c:	2b00      	cmp	r3, #0
9000d99e:	d0f7      	beq.n	9000d990 <vPortEnterCritical+0x1c>
9000d9a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d9a4:	f383 8811 	msr	BASEPRI, r3
9000d9a8:	f3bf 8f6f 	isb	sy
9000d9ac:	f3bf 8f4f 	dsb	sy
9000d9b0:	e7fe      	b.n	9000d9b0 <vPortEnterCritical+0x3c>
9000d9b2:	bf00      	nop
9000d9b4:	24000084 	.word	0x24000084

9000d9b8 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
9000d9b8:	4a08      	ldr	r2, [pc, #32]	@ (9000d9dc <vPortExitCritical+0x24>)
9000d9ba:	6813      	ldr	r3, [r2, #0]
9000d9bc:	b943      	cbnz	r3, 9000d9d0 <vPortExitCritical+0x18>
9000d9be:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000d9c2:	f383 8811 	msr	BASEPRI, r3
9000d9c6:	f3bf 8f6f 	isb	sy
9000d9ca:	f3bf 8f4f 	dsb	sy
9000d9ce:	e7fe      	b.n	9000d9ce <vPortExitCritical+0x16>
	uxCriticalNesting--;
9000d9d0:	3b01      	subs	r3, #1
9000d9d2:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
9000d9d4:	b90b      	cbnz	r3, 9000d9da <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
9000d9d6:	f383 8811 	msr	BASEPRI, r3
}
9000d9da:	4770      	bx	lr
9000d9dc:	24000084 	.word	0x24000084

9000d9e0 <PendSV_Handler>:
	__asm volatile
9000d9e0:	f3ef 8009 	mrs	r0, PSP
9000d9e4:	f3bf 8f6f 	isb	sy
9000d9e8:	4b15      	ldr	r3, [pc, #84]	@ (9000da40 <pxCurrentTCBConst>)
9000d9ea:	681a      	ldr	r2, [r3, #0]
9000d9ec:	f01e 0f10 	tst.w	lr, #16
9000d9f0:	bf08      	it	eq
9000d9f2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
9000d9f6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000d9fa:	6010      	str	r0, [r2, #0]
9000d9fc:	e92d 0009 	stmdb	sp!, {r0, r3}
9000da00:	f04f 0050 	mov.w	r0, #80	@ 0x50
9000da04:	f380 8811 	msr	BASEPRI, r0
9000da08:	f3bf 8f4f 	dsb	sy
9000da0c:	f3bf 8f6f 	isb	sy
9000da10:	f001 fda0 	bl	9000f554 <vTaskSwitchContext>
9000da14:	f04f 0000 	mov.w	r0, #0
9000da18:	f380 8811 	msr	BASEPRI, r0
9000da1c:	bc09      	pop	{r0, r3}
9000da1e:	6819      	ldr	r1, [r3, #0]
9000da20:	6808      	ldr	r0, [r1, #0]
9000da22:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000da26:	f01e 0f10 	tst.w	lr, #16
9000da2a:	bf08      	it	eq
9000da2c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
9000da30:	f380 8809 	msr	PSP, r0
9000da34:	f3bf 8f6f 	isb	sy
9000da38:	4770      	bx	lr
9000da3a:	bf00      	nop
9000da3c:	f3af 8000 	nop.w

9000da40 <pxCurrentTCBConst>:
9000da40:	24021850 	.word	0x24021850

9000da44 <xPortSysTickHandler>:
{
9000da44:	b508      	push	{r3, lr}
	__asm volatile
9000da46:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000da4a:	f383 8811 	msr	BASEPRI, r3
9000da4e:	f3bf 8f6f 	isb	sy
9000da52:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
9000da56:	f001 fd57 	bl	9000f508 <xTaskIncrementTick>
9000da5a:	b128      	cbz	r0, 9000da68 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
9000da5c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000da60:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000da64:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
	__asm volatile
9000da68:	2300      	movs	r3, #0
9000da6a:	f383 8811 	msr	BASEPRI, r3
}
9000da6e:	bd08      	pop	{r3, pc}

9000da70 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000da70:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
9000da74:	2300      	movs	r3, #0
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000da76:	4806      	ldr	r0, [pc, #24]	@ (9000da90 <vPortSetupTimerInterrupt+0x20>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
9000da78:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000da7a:	4906      	ldr	r1, [pc, #24]	@ (9000da94 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
9000da7c:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000da7e:	6803      	ldr	r3, [r0, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000da80:	2007      	movs	r0, #7
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
9000da82:	fba1 1303 	umull	r1, r3, r1, r3
9000da86:	099b      	lsrs	r3, r3, #6
9000da88:	3b01      	subs	r3, #1
9000da8a:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
9000da8c:	6110      	str	r0, [r2, #16]
}
9000da8e:	4770      	bx	lr
9000da90:	24000078 	.word	0x24000078
9000da94:	10624dd3 	.word	0x10624dd3

9000da98 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000da98:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000da9c:	4a48      	ldr	r2, [pc, #288]	@ (9000dbc0 <xPortStartScheduler+0x128>)
9000da9e:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	@ 0xd00
9000daa2:	4291      	cmp	r1, r2
9000daa4:	d041      	beq.n	9000db2a <xPortStartScheduler+0x92>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000daa6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	@ 0xd00
9000daaa:	4b46      	ldr	r3, [pc, #280]	@ (9000dbc4 <xPortStartScheduler+0x12c>)
9000daac:	429a      	cmp	r2, r3
9000daae:	d033      	beq.n	9000db18 <xPortStartScheduler+0x80>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000dab0:	4b45      	ldr	r3, [pc, #276]	@ (9000dbc8 <xPortStartScheduler+0x130>)
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000dab2:	f04f 0cff 	mov.w	ip, #255	@ 0xff
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000dab6:	4845      	ldr	r0, [pc, #276]	@ (9000dbcc <xPortStartScheduler+0x134>)
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000dab8:	4945      	ldr	r1, [pc, #276]	@ (9000dbd0 <xPortStartScheduler+0x138>)
{
9000daba:	b570      	push	{r4, r5, r6, lr}
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000dabc:	781a      	ldrb	r2, [r3, #0]
{
9000dabe:	b084      	sub	sp, #16
		ulOriginalPriority = *pucFirstUserPriorityRegister;
9000dac0:	b2d2      	uxtb	r2, r2
9000dac2:	9202      	str	r2, [sp, #8]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000dac4:	2207      	movs	r2, #7
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
9000dac6:	f883 c000 	strb.w	ip, [r3]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000daca:	781b      	ldrb	r3, [r3, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
9000dacc:	6002      	str	r2, [r0, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
9000dace:	b2db      	uxtb	r3, r3
9000dad0:	f88d 3007 	strb.w	r3, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000dad4:	f89d 3007 	ldrb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000dad8:	f89d 2007 	ldrb.w	r2, [sp, #7]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000dadc:	f003 0350 	and.w	r3, r3, #80	@ 0x50
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000dae0:	0612      	lsls	r2, r2, #24
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
9000dae2:	700b      	strb	r3, [r1, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000dae4:	d50f      	bpl.n	9000db06 <xPortStartScheduler+0x6e>
9000dae6:	2206      	movs	r2, #6
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000dae8:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000daec:	4611      	mov	r1, r2
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000daee:	3a01      	subs	r2, #1
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
9000daf0:	005b      	lsls	r3, r3, #1
9000daf2:	b2db      	uxtb	r3, r3
9000daf4:	f88d 3007 	strb.w	r3, [sp, #7]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
9000daf8:	f89d 3007 	ldrb.w	r3, [sp, #7]
9000dafc:	061b      	lsls	r3, r3, #24
9000dafe:	d4f3      	bmi.n	9000dae8 <xPortStartScheduler+0x50>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
9000db00:	2903      	cmp	r1, #3
9000db02:	d01b      	beq.n	9000db3c <xPortStartScheduler+0xa4>
9000db04:	6001      	str	r1, [r0, #0]
	__asm volatile
9000db06:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000db0a:	f383 8811 	msr	BASEPRI, r3
9000db0e:	f3bf 8f6f 	isb	sy
9000db12:	f3bf 8f4f 	dsb	sy
9000db16:	e7fe      	b.n	9000db16 <xPortStartScheduler+0x7e>
9000db18:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000db1c:	f383 8811 	msr	BASEPRI, r3
9000db20:	f3bf 8f6f 	isb	sy
9000db24:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
9000db28:	e7fe      	b.n	9000db28 <xPortStartScheduler+0x90>
9000db2a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000db2e:	f383 8811 	msr	BASEPRI, r3
9000db32:	f3bf 8f6f 	isb	sy
9000db36:	f3bf 8f4f 	dsb	sy
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
9000db3a:	e7fe      	b.n	9000db3a <xPortStartScheduler+0xa2>
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000db3c:	9b02      	ldr	r3, [sp, #8]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000db3e:	f04f 24e0 	mov.w	r4, #3758153728	@ 0xe000e000
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000db42:	f44f 7140 	mov.w	r1, #768	@ 0x300
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000db46:	4a20      	ldr	r2, [pc, #128]	@ (9000dbc8 <xPortStartScheduler+0x130>)
9000db48:	b2db      	uxtb	r3, r3
	uxCriticalNesting = 0;
9000db4a:	4e22      	ldr	r6, [pc, #136]	@ (9000dbd4 <xPortStartScheduler+0x13c>)
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
9000db4c:	6001      	str	r1, [r0, #0]
	uxCriticalNesting = 0;
9000db4e:	2500      	movs	r5, #0
		*pucFirstUserPriorityRegister = ulOriginalPriority;
9000db50:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
9000db52:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000db56:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
9000db5a:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
9000db5e:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	@ 0xd20
9000db62:	f043 4370 	orr.w	r3, r3, #4026531840	@ 0xf0000000
9000db66:	f8c4 3d20 	str.w	r3, [r4, #3360]	@ 0xd20
	vPortSetupTimerInterrupt();
9000db6a:	f7ff ff81 	bl	9000da70 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
9000db6e:	6035      	str	r5, [r6, #0]
	vPortEnableVFP();
9000db70:	f7ff feac 	bl	9000d8cc <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
9000db74:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	@ 0xf34
9000db78:	f043 4340 	orr.w	r3, r3, #3221225472	@ 0xc0000000
9000db7c:	f8c4 3f34 	str.w	r3, [r4, #3892]	@ 0xf34
	prvPortStartFirstTask();
9000db80:	f7ff fe90 	bl	9000d8a4 <prvPortStartFirstTask>
	vTaskSwitchContext();
9000db84:	f001 fce6 	bl	9000f554 <vTaskSwitchContext>
	configASSERT( uxCriticalNesting == ~0UL );
9000db88:	6833      	ldr	r3, [r6, #0]
volatile uint32_t ulDummy = 0;
9000db8a:	9503      	str	r5, [sp, #12]
	configASSERT( uxCriticalNesting == ~0UL );
9000db8c:	3301      	adds	r3, #1
9000db8e:	d008      	beq.n	9000dba2 <xPortStartScheduler+0x10a>
9000db90:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000db94:	f383 8811 	msr	BASEPRI, r3
9000db98:	f3bf 8f6f 	isb	sy
9000db9c:	f3bf 8f4f 	dsb	sy
9000dba0:	e7fe      	b.n	9000dba0 <xPortStartScheduler+0x108>
9000dba2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dba6:	f383 8811 	msr	BASEPRI, r3
9000dbaa:	f3bf 8f6f 	isb	sy
9000dbae:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
9000dbb2:	9b03      	ldr	r3, [sp, #12]
9000dbb4:	2b00      	cmp	r3, #0
9000dbb6:	d0fc      	beq.n	9000dbb2 <xPortStartScheduler+0x11a>
}
9000dbb8:	2000      	movs	r0, #0
9000dbba:	b004      	add	sp, #16
9000dbbc:	bd70      	pop	{r4, r5, r6, pc}
9000dbbe:	bf00      	nop
9000dbc0:	410fc271 	.word	0x410fc271
9000dbc4:	410fc270 	.word	0x410fc270
9000dbc8:	e000e400 	.word	0xe000e400
9000dbcc:	24021310 	.word	0x24021310
9000dbd0:	24021314 	.word	0x24021314
9000dbd4:	24000084 	.word	0x24000084

9000dbd8 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
9000dbd8:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
9000dbdc:	2b0f      	cmp	r3, #15
9000dbde:	d90e      	bls.n	9000dbfe <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000dbe0:	4911      	ldr	r1, [pc, #68]	@ (9000dc28 <vPortValidateInterruptPriority+0x50>)
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000dbe2:	4a12      	ldr	r2, [pc, #72]	@ (9000dc2c <vPortValidateInterruptPriority+0x54>)
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
9000dbe4:	5c5b      	ldrb	r3, [r3, r1]
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
9000dbe6:	7812      	ldrb	r2, [r2, #0]
9000dbe8:	429a      	cmp	r2, r3
9000dbea:	d908      	bls.n	9000dbfe <vPortValidateInterruptPriority+0x26>
9000dbec:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dbf0:	f383 8811 	msr	BASEPRI, r3
9000dbf4:	f3bf 8f6f 	isb	sy
9000dbf8:	f3bf 8f4f 	dsb	sy
9000dbfc:	e7fe      	b.n	9000dbfc <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
9000dbfe:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000dc02:	4a0b      	ldr	r2, [pc, #44]	@ (9000dc30 <vPortValidateInterruptPriority+0x58>)
9000dc04:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	@ 0xd0c
9000dc08:	6812      	ldr	r2, [r2, #0]
9000dc0a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
9000dc0e:	4293      	cmp	r3, r2
9000dc10:	d908      	bls.n	9000dc24 <vPortValidateInterruptPriority+0x4c>
9000dc12:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dc16:	f383 8811 	msr	BASEPRI, r3
9000dc1a:	f3bf 8f6f 	isb	sy
9000dc1e:	f3bf 8f4f 	dsb	sy
9000dc22:	e7fe      	b.n	9000dc22 <vPortValidateInterruptPriority+0x4a>
	}
9000dc24:	4770      	bx	lr
9000dc26:	bf00      	nop
9000dc28:	e000e3f0 	.word	0xe000e3f0
9000dc2c:	24021314 	.word	0x24021314
9000dc30:	24021310 	.word	0x24021310

9000dc34 <prvCopyDataToQueue>:

#endif /* configUSE_MUTEXES */
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const BaseType_t xPosition )
{
9000dc34:	b570      	push	{r4, r5, r6, lr}
9000dc36:	4616      	mov	r6, r2

	/* This function is called from a critical section. */

	uxMessagesWaiting = pxQueue->uxMessagesWaiting;

	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000dc38:	6c02      	ldr	r2, [r0, #64]	@ 0x40
{
9000dc3a:	4604      	mov	r4, r0
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000dc3c:	6b85      	ldr	r5, [r0, #56]	@ 0x38
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
9000dc3e:	b92a      	cbnz	r2, 9000dc4c <prvCopyDataToQueue+0x18>
	{
		#if ( configUSE_MUTEXES == 1 )
		{
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000dc40:	6806      	ldr	r6, [r0, #0]
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000dc42:	3501      	adds	r5, #1
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000dc44:	b32e      	cbz	r6, 9000dc92 <prvCopyDataToQueue+0x5e>
BaseType_t xReturn = pdFALSE;
9000dc46:	4610      	mov	r0, r2
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000dc48:	63a5      	str	r5, [r4, #56]	@ 0x38

	return xReturn;
}
9000dc4a:	bd70      	pop	{r4, r5, r6, pc}
	else if( xPosition == queueSEND_TO_BACK )
9000dc4c:	b97e      	cbnz	r6, 9000dc6e <prvCopyDataToQueue+0x3a>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000dc4e:	6840      	ldr	r0, [r0, #4]
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000dc50:	3501      	adds	r5, #1
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000dc52:	f01c f806 	bl	90029c62 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000dc56:	6863      	ldr	r3, [r4, #4]
9000dc58:	6c21      	ldr	r1, [r4, #64]	@ 0x40
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000dc5a:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000dc5c:	440b      	add	r3, r1
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000dc5e:	4293      	cmp	r3, r2
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000dc60:	6063      	str	r3, [r4, #4]
			pxQueue->pcWriteTo = pxQueue->pcHead;
9000dc62:	bf24      	itt	cs
9000dc64:	6823      	ldrcs	r3, [r4, #0]
9000dc66:	6063      	strcs	r3, [r4, #4]
BaseType_t xReturn = pdFALSE;
9000dc68:	2000      	movs	r0, #0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000dc6a:	63a5      	str	r5, [r4, #56]	@ 0x38
}
9000dc6c:	bd70      	pop	{r4, r5, r6, pc}
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
9000dc6e:	68c0      	ldr	r0, [r0, #12]
9000dc70:	f01b fff7 	bl	90029c62 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000dc74:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000dc76:	68e3      	ldr	r3, [r4, #12]
9000dc78:	4251      	negs	r1, r2
9000dc7a:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000dc7c:	6822      	ldr	r2, [r4, #0]
9000dc7e:	4293      	cmp	r3, r2
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
9000dc80:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
9000dc82:	d202      	bcs.n	9000dc8a <prvCopyDataToQueue+0x56>
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
9000dc84:	68a3      	ldr	r3, [r4, #8]
9000dc86:	440b      	add	r3, r1
9000dc88:	60e3      	str	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
9000dc8a:	2e02      	cmp	r6, #2
9000dc8c:	d006      	beq.n	9000dc9c <prvCopyDataToQueue+0x68>
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000dc8e:	3501      	adds	r5, #1
9000dc90:	e7ea      	b.n	9000dc68 <prvCopyDataToQueue+0x34>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
9000dc92:	6880      	ldr	r0, [r0, #8]
9000dc94:	f001 fe30 	bl	9000f8f8 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
9000dc98:	60a6      	str	r6, [r4, #8]
9000dc9a:	e7d5      	b.n	9000dc48 <prvCopyDataToQueue+0x14>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000dc9c:	2d01      	cmp	r5, #1
BaseType_t xReturn = pdFALSE;
9000dc9e:	f04f 0000 	mov.w	r0, #0
9000dca2:	bf38      	it	cc
9000dca4:	2501      	movcc	r5, #1
9000dca6:	e7cf      	b.n	9000dc48 <prvCopyDataToQueue+0x14>

9000dca8 <xQueueGenericCreateStatic>:
	{
9000dca8:	b530      	push	{r4, r5, lr}
9000dcaa:	b083      	sub	sp, #12
9000dcac:	f89d 5018 	ldrb.w	r5, [sp, #24]
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000dcb0:	b940      	cbnz	r0, 9000dcc4 <xQueueGenericCreateStatic+0x1c>
9000dcb2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dcb6:	f383 8811 	msr	BASEPRI, r3
9000dcba:	f3bf 8f6f 	isb	sy
9000dcbe:	f3bf 8f4f 	dsb	sy
9000dcc2:	e7fe      	b.n	9000dcc2 <xQueueGenericCreateStatic+0x1a>
		configASSERT( pxStaticQueue != NULL );
9000dcc4:	461c      	mov	r4, r3
9000dcc6:	b153      	cbz	r3, 9000dcde <xQueueGenericCreateStatic+0x36>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
9000dcc8:	b30a      	cbz	r2, 9000dd0e <xQueueGenericCreateStatic+0x66>
9000dcca:	b989      	cbnz	r1, 9000dcf0 <xQueueGenericCreateStatic+0x48>
9000dccc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dcd0:	f383 8811 	msr	BASEPRI, r3
9000dcd4:	f3bf 8f6f 	isb	sy
9000dcd8:	f3bf 8f4f 	dsb	sy
9000dcdc:	e7fe      	b.n	9000dcdc <xQueueGenericCreateStatic+0x34>
9000dcde:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dce2:	f383 8811 	msr	BASEPRI, r3
9000dce6:	f3bf 8f6f 	isb	sy
9000dcea:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000dcee:	e7fe      	b.n	9000dcee <xQueueGenericCreateStatic+0x46>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000dcf0:	b16a      	cbz	r2, 9000dd0e <xQueueGenericCreateStatic+0x66>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000dcf2:	2350      	movs	r3, #80	@ 0x50
9000dcf4:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
9000dcf6:	9b01      	ldr	r3, [sp, #4]
9000dcf8:	2b50      	cmp	r3, #80	@ 0x50
9000dcfa:	d013      	beq.n	9000dd24 <xQueueGenericCreateStatic+0x7c>
9000dcfc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dd00:	f383 8811 	msr	BASEPRI, r3
9000dd04:	f3bf 8f6f 	isb	sy
9000dd08:	f3bf 8f4f 	dsb	sy
9000dd0c:	e7fe      	b.n	9000dd0c <xQueueGenericCreateStatic+0x64>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
9000dd0e:	2900      	cmp	r1, #0
9000dd10:	d0ef      	beq.n	9000dcf2 <xQueueGenericCreateStatic+0x4a>
9000dd12:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dd16:	f383 8811 	msr	BASEPRI, r3
9000dd1a:	f3bf 8f6f 	isb	sy
9000dd1e:	f3bf 8f4f 	dsb	sy
9000dd22:	e7fe      	b.n	9000dd22 <xQueueGenericCreateStatic+0x7a>
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000dd24:	2900      	cmp	r1, #0
9000dd26:	bf08      	it	eq
9000dd28:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000dd2a:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000dd2c:	2301      	movs	r3, #1
	pxNewQueue->uxLength = uxQueueLength;
9000dd2e:	63e0      	str	r0, [r4, #60]	@ 0x3c
9000dd30:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000dd32:	6421      	str	r1, [r4, #64]	@ 0x40
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000dd34:	f884 3046 	strb.w	r3, [r4, #70]	@ 0x46
	taskENTER_CRITICAL();
9000dd38:	f7ff fe1c 	bl	9000d974 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dd3c:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dd3e:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000dd42:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dd44:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9000dd48:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dd4c:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dd4e:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dd50:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dd52:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000dd54:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000dd56:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dd58:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000dd5a:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000dd5c:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000dd60:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dd64:	f7ff fd54 	bl	9000d810 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000dd68:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000dd6c:	f7ff fd50 	bl	9000d810 <vListInitialise>
	taskEXIT_CRITICAL();
9000dd70:	f7ff fe22 	bl	9000d9b8 <vPortExitCritical>
	}
9000dd74:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000dd76:	f884 504c 	strb.w	r5, [r4, #76]	@ 0x4c
	}
9000dd7a:	b003      	add	sp, #12
9000dd7c:	bd30      	pop	{r4, r5, pc}
9000dd7e:	bf00      	nop

9000dd80 <xQueueGenericCreate>:
	{
9000dd80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
9000dd82:	b940      	cbnz	r0, 9000dd96 <xQueueGenericCreate+0x16>
9000dd84:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dd88:	f383 8811 	msr	BASEPRI, r3
9000dd8c:	f3bf 8f6f 	isb	sy
9000dd90:	f3bf 8f4f 	dsb	sy
9000dd94:	e7fe      	b.n	9000dd94 <xQueueGenericCreate+0x14>
9000dd96:	4605      	mov	r5, r0
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000dd98:	fb01 f000 	mul.w	r0, r1, r0
9000dd9c:	460e      	mov	r6, r1
9000dd9e:	4617      	mov	r7, r2
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000dda0:	3050      	adds	r0, #80	@ 0x50
9000dda2:	f7ff fc0d 	bl	9000d5c0 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000dda6:	4604      	mov	r4, r0
9000dda8:	b340      	cbz	r0, 9000ddfc <xQueueGenericCreate+0x7c>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000ddaa:	2300      	movs	r3, #0
9000ddac:	f880 3046 	strb.w	r3, [r0, #70]	@ 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
9000ddb0:	b336      	cbz	r6, 9000de00 <xQueueGenericCreate+0x80>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ddb2:	f100 0350 	add.w	r3, r0, #80	@ 0x50
		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
9000ddb6:	6023      	str	r3, [r4, #0]
	pxNewQueue->uxItemSize = uxItemSize;
9000ddb8:	e9c4 560f 	strd	r5, r6, [r4, #60]	@ 0x3c
	taskENTER_CRITICAL();
9000ddbc:	f7ff fdda 	bl	9000d974 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ddc0:	6822      	ldr	r2, [r4, #0]
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000ddc2:	f104 0010 	add.w	r0, r4, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000ddc6:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ddc8:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	@ 0x3c
9000ddcc:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ddd0:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ddd2:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ddd4:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000ddd6:	60a3      	str	r3, [r4, #8]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ddd8:	2100      	movs	r1, #0
		pxQueue->cRxLock = queueUNLOCKED;
9000ddda:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000dddc:	60e2      	str	r2, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000ddde:	63a1      	str	r1, [r4, #56]	@ 0x38
		pxQueue->cRxLock = queueUNLOCKED;
9000dde0:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000dde4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000dde8:	f7ff fd12 	bl	9000d810 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000ddec:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000ddf0:	f7ff fd0e 	bl	9000d810 <vListInitialise>
	taskEXIT_CRITICAL();
9000ddf4:	f7ff fde0 	bl	9000d9b8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000ddf8:	f884 704c 	strb.w	r7, [r4, #76]	@ 0x4c
	}
9000ddfc:	4620      	mov	r0, r4
9000ddfe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000de00:	4603      	mov	r3, r0
9000de02:	e7d8      	b.n	9000ddb6 <xQueueGenericCreate+0x36>

9000de04 <xQueueCreateCountingSemaphoreStatic>:
		configASSERT( uxMaxCount != 0 );
9000de04:	b940      	cbnz	r0, 9000de18 <xQueueCreateCountingSemaphoreStatic+0x14>
9000de06:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000de0a:	f383 8811 	msr	BASEPRI, r3
9000de0e:	f3bf 8f6f 	isb	sy
9000de12:	f3bf 8f4f 	dsb	sy
9000de16:	e7fe      	b.n	9000de16 <xQueueCreateCountingSemaphoreStatic+0x12>
		configASSERT( uxInitialCount <= uxMaxCount );
9000de18:	4288      	cmp	r0, r1
9000de1a:	d208      	bcs.n	9000de2e <xQueueCreateCountingSemaphoreStatic+0x2a>
9000de1c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000de20:	f383 8811 	msr	BASEPRI, r3
9000de24:	f3bf 8f6f 	isb	sy
9000de28:	f3bf 8f4f 	dsb	sy
9000de2c:	e7fe      	b.n	9000de2c <xQueueCreateCountingSemaphoreStatic+0x28>
	{
9000de2e:	b530      	push	{r4, r5, lr}
9000de30:	4614      	mov	r4, r2
9000de32:	b085      	sub	sp, #20
		configASSERT( pxStaticQueue != NULL );
9000de34:	2a00      	cmp	r2, #0
9000de36:	d03b      	beq.n	9000deb0 <xQueueCreateCountingSemaphoreStatic+0xac>
			volatile size_t xSize = sizeof( StaticQueue_t );
9000de38:	2350      	movs	r3, #80	@ 0x50
9000de3a:	9303      	str	r3, [sp, #12]
			configASSERT( xSize == sizeof( Queue_t ) );
9000de3c:	9b03      	ldr	r3, [sp, #12]
9000de3e:	2b50      	cmp	r3, #80	@ 0x50
9000de40:	d008      	beq.n	9000de54 <xQueueCreateCountingSemaphoreStatic+0x50>
9000de42:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000de46:	f383 8811 	msr	BASEPRI, r3
9000de4a:	f3bf 8f6f 	isb	sy
9000de4e:	f3bf 8f4f 	dsb	sy
9000de52:	e7fe      	b.n	9000de52 <xQueueCreateCountingSemaphoreStatic+0x4e>
	pxNewQueue->uxItemSize = uxItemSize;
9000de54:	2500      	movs	r5, #0
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000de56:	2301      	movs	r3, #1
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000de58:	6022      	str	r2, [r4, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000de5a:	63d0      	str	r0, [r2, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
9000de5c:	f882 3046 	strb.w	r3, [r2, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000de60:	6415      	str	r5, [r2, #64]	@ 0x40
9000de62:	9101      	str	r1, [sp, #4]
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
9000de64:	9b03      	ldr	r3, [sp, #12]
	taskENTER_CRITICAL();
9000de66:	f7ff fd85 	bl	9000d974 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000de6a:	6822      	ldr	r2, [r4, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000de6c:	63a5      	str	r5, [r4, #56]	@ 0x38
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000de6e:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000de70:	e9d4 300f 	ldrd	r3, r0, [r4, #60]	@ 0x3c
9000de74:	fb00 f303 	mul.w	r3, r0, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000de78:	1a18      	subs	r0, r3, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000de7a:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000de7c:	4402      	add	r2, r0
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000de7e:	60a3      	str	r3, [r4, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000de80:	23ff      	movs	r3, #255	@ 0xff
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000de82:	f104 0010 	add.w	r0, r4, #16
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000de86:	60e2      	str	r2, [r4, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000de88:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000de8c:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000de90:	f7ff fcbe 	bl	9000d810 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000de94:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000de98:	f7ff fcba 	bl	9000d810 <vListInitialise>
	taskEXIT_CRITICAL();
9000de9c:	f7ff fd8c 	bl	9000d9b8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000dea0:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000dea2:	9901      	ldr	r1, [sp, #4]
	}
9000dea4:	4620      	mov	r0, r4
		pxNewQueue->ucQueueType = ucQueueType;
9000dea6:	f884 304c 	strb.w	r3, [r4, #76]	@ 0x4c
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000deaa:	63a1      	str	r1, [r4, #56]	@ 0x38
	}
9000deac:	b005      	add	sp, #20
9000deae:	bd30      	pop	{r4, r5, pc}
9000deb0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000deb4:	f383 8811 	msr	BASEPRI, r3
9000deb8:	f3bf 8f6f 	isb	sy
9000debc:	f3bf 8f4f 	dsb	sy
		configASSERT( pxStaticQueue != NULL );
9000dec0:	e7fe      	b.n	9000dec0 <xQueueCreateCountingSemaphoreStatic+0xbc>
9000dec2:	bf00      	nop

9000dec4 <xQueueCreateCountingSemaphore>:
	{
9000dec4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		configASSERT( uxMaxCount != 0 );
9000dec6:	b940      	cbnz	r0, 9000deda <xQueueCreateCountingSemaphore+0x16>
9000dec8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000decc:	f383 8811 	msr	BASEPRI, r3
9000ded0:	f3bf 8f6f 	isb	sy
9000ded4:	f3bf 8f4f 	dsb	sy
9000ded8:	e7fe      	b.n	9000ded8 <xQueueCreateCountingSemaphore+0x14>
		configASSERT( uxInitialCount <= uxMaxCount );
9000deda:	4288      	cmp	r0, r1
9000dedc:	4604      	mov	r4, r0
9000dede:	460e      	mov	r6, r1
9000dee0:	d208      	bcs.n	9000def4 <xQueueCreateCountingSemaphore+0x30>
9000dee2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000dee6:	f383 8811 	msr	BASEPRI, r3
9000deea:	f3bf 8f6f 	isb	sy
9000deee:	f3bf 8f4f 	dsb	sy
9000def2:	e7fe      	b.n	9000def2 <xQueueCreateCountingSemaphore+0x2e>
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
9000def4:	2050      	movs	r0, #80	@ 0x50
9000def6:	f7ff fb63 	bl	9000d5c0 <pvPortMalloc>
		if( pxNewQueue != NULL )
9000defa:	4605      	mov	r5, r0
9000defc:	b330      	cbz	r0, 9000df4c <xQueueCreateCountingSemaphore+0x88>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000defe:	2700      	movs	r7, #0
		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
9000df00:	6000      	str	r0, [r0, #0]
	pxNewQueue->uxLength = uxQueueLength;
9000df02:	63c4      	str	r4, [r0, #60]	@ 0x3c
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
9000df04:	f880 7046 	strb.w	r7, [r0, #70]	@ 0x46
	pxNewQueue->uxItemSize = uxItemSize;
9000df08:	6407      	str	r7, [r0, #64]	@ 0x40
	taskENTER_CRITICAL();
9000df0a:	f7ff fd33 	bl	9000d974 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000df0e:	682a      	ldr	r2, [r5, #0]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
9000df10:	63af      	str	r7, [r5, #56]	@ 0x38
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000df12:	f105 0010 	add.w	r0, r5, #16
		pxQueue->pcWriteTo = pxQueue->pcHead;
9000df16:	606a      	str	r2, [r5, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000df18:	e9d5 310f 	ldrd	r3, r1, [r5, #60]	@ 0x3c
9000df1c:	fb01 f303 	mul.w	r3, r1, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000df20:	1a59      	subs	r1, r3, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000df22:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000df24:	440a      	add	r2, r1
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000df26:	60ab      	str	r3, [r5, #8]
		pxQueue->cRxLock = queueUNLOCKED;
9000df28:	23ff      	movs	r3, #255	@ 0xff
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
9000df2a:	60ea      	str	r2, [r5, #12]
		pxQueue->cRxLock = queueUNLOCKED;
9000df2c:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		pxQueue->cTxLock = queueUNLOCKED;
9000df30:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
9000df34:	f7ff fc6c 	bl	9000d810 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
9000df38:	f105 0024 	add.w	r0, r5, #36	@ 0x24
9000df3c:	f7ff fc68 	bl	9000d810 <vListInitialise>
	taskEXIT_CRITICAL();
9000df40:	f7ff fd3a 	bl	9000d9b8 <vPortExitCritical>
		pxNewQueue->ucQueueType = ucQueueType;
9000df44:	2302      	movs	r3, #2
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
9000df46:	63ae      	str	r6, [r5, #56]	@ 0x38
		pxNewQueue->ucQueueType = ucQueueType;
9000df48:	f885 304c 	strb.w	r3, [r5, #76]	@ 0x4c
	}
9000df4c:	4628      	mov	r0, r5
9000df4e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

9000df50 <xQueueGenericSend>:
{
9000df50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9000df54:	b084      	sub	sp, #16
9000df56:	9201      	str	r2, [sp, #4]
	configASSERT( pxQueue );
9000df58:	2800      	cmp	r0, #0
9000df5a:	f000 8103 	beq.w	9000e164 <xQueueGenericSend+0x214>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000df5e:	4688      	mov	r8, r1
9000df60:	4604      	mov	r4, r0
9000df62:	461f      	mov	r7, r3
9000df64:	2900      	cmp	r1, #0
9000df66:	f000 8097 	beq.w	9000e098 <xQueueGenericSend+0x148>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000df6a:	2f02      	cmp	r7, #2
9000df6c:	d10b      	bne.n	9000df86 <xQueueGenericSend+0x36>
9000df6e:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000df70:	2b01      	cmp	r3, #1
9000df72:	d008      	beq.n	9000df86 <xQueueGenericSend+0x36>
9000df74:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000df78:	f383 8811 	msr	BASEPRI, r3
9000df7c:	f3bf 8f6f 	isb	sy
9000df80:	f3bf 8f4f 	dsb	sy
9000df84:	e7fe      	b.n	9000df84 <xQueueGenericSend+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000df86:	f001 fc67 	bl	9000f858 <xTaskGetSchedulerState>
9000df8a:	2800      	cmp	r0, #0
9000df8c:	f000 80f3 	beq.w	9000e176 <xQueueGenericSend+0x226>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000df90:	f1a7 0902 	sub.w	r9, r7, #2
9000df94:	2500      	movs	r5, #0
			{
				/* Tasks that are removed from the event list will get added to
				the pending ready list as the scheduler is still suspended. */
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
				{
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000df96:	f104 0624 	add.w	r6, r4, #36	@ 0x24
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000df9a:	fab9 f989 	clz	r9, r9
9000df9e:	ea4f 1959 	mov.w	r9, r9, lsr #5
		taskENTER_CRITICAL();
9000dfa2:	f7ff fce7 	bl	9000d974 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000dfa6:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000dfa8:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000dfaa:	429a      	cmp	r2, r3
9000dfac:	f0c0 80f0 	bcc.w	9000e190 <xQueueGenericSend+0x240>
9000dfb0:	f1b9 0f00 	cmp.w	r9, #0
9000dfb4:	f040 80ec 	bne.w	9000e190 <xQueueGenericSend+0x240>
				if( xTicksToWait == ( TickType_t ) 0 )
9000dfb8:	9b01      	ldr	r3, [sp, #4]
9000dfba:	2b00      	cmp	r3, #0
9000dfbc:	f000 8101 	beq.w	9000e1c2 <xQueueGenericSend+0x272>
				else if( xEntryTimeSet == pdFALSE )
9000dfc0:	2d00      	cmp	r5, #0
9000dfc2:	f000 80cb 	beq.w	9000e15c <xQueueGenericSend+0x20c>
		taskEXIT_CRITICAL();
9000dfc6:	f7ff fcf7 	bl	9000d9b8 <vPortExitCritical>
		vTaskSuspendAll();
9000dfca:	f001 fa7f 	bl	9000f4cc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000dfce:	f7ff fcd1 	bl	9000d974 <vPortEnterCritical>
9000dfd2:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000dfd6:	2bff      	cmp	r3, #255	@ 0xff
9000dfd8:	d102      	bne.n	9000dfe0 <xQueueGenericSend+0x90>
9000dfda:	2300      	movs	r3, #0
9000dfdc:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
9000dfe0:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000dfe4:	2bff      	cmp	r3, #255	@ 0xff
9000dfe6:	d102      	bne.n	9000dfee <xQueueGenericSend+0x9e>
9000dfe8:	2300      	movs	r3, #0
9000dfea:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
9000dfee:	f7ff fce3 	bl	9000d9b8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000dff2:	a901      	add	r1, sp, #4
9000dff4:	a802      	add	r0, sp, #8
9000dff6:	f001 fbe7 	bl	9000f7c8 <xTaskCheckForTimeOut>
9000dffa:	2800      	cmp	r0, #0
9000dffc:	f040 80e5 	bne.w	9000e1ca <xQueueGenericSend+0x27a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
9000e000:	f7ff fcb8 	bl	9000d974 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
9000e004:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000e006:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000e008:	429a      	cmp	r2, r3
9000e00a:	d052      	beq.n	9000e0b2 <xQueueGenericSend+0x162>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
9000e00c:	f7ff fcd4 	bl	9000d9b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e010:	f7ff fcb0 	bl	9000d974 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e014:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
9000e018:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e01a:	2d00      	cmp	r5, #0
9000e01c:	dc04      	bgt.n	9000e028 <xQueueGenericSend+0xd8>
9000e01e:	e011      	b.n	9000e044 <xQueueGenericSend+0xf4>
			--cTxLock;
9000e020:	1e6a      	subs	r2, r5, #1
9000e022:	b2d3      	uxtb	r3, r2
9000e024:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e026:	b16b      	cbz	r3, 9000e044 <xQueueGenericSend+0xf4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e028:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e02a:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e02c:	b153      	cbz	r3, 9000e044 <xQueueGenericSend+0xf4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e02e:	f001 fb79 	bl	9000f724 <xTaskRemoveFromEventList>
9000e032:	2800      	cmp	r0, #0
9000e034:	d0f4      	beq.n	9000e020 <xQueueGenericSend+0xd0>
						vTaskMissedYield();
9000e036:	f001 fc09 	bl	9000f84c <vTaskMissedYield>
			--cTxLock;
9000e03a:	1e6a      	subs	r2, r5, #1
9000e03c:	b2d3      	uxtb	r3, r2
9000e03e:	b255      	sxtb	r5, r2
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e040:	2b00      	cmp	r3, #0
9000e042:	d1f1      	bne.n	9000e028 <xQueueGenericSend+0xd8>
		pxQueue->cTxLock = queueUNLOCKED;
9000e044:	23ff      	movs	r3, #255	@ 0xff
9000e046:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e04a:	f7ff fcb5 	bl	9000d9b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e04e:	f7ff fc91 	bl	9000d974 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e052:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
9000e056:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e058:	2d00      	cmp	r5, #0
9000e05a:	dd14      	ble.n	9000e086 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e05c:	f104 0a10 	add.w	sl, r4, #16
9000e060:	e003      	b.n	9000e06a <xQueueGenericSend+0x11a>
				--cRxLock;
9000e062:	1e6a      	subs	r2, r5, #1
9000e064:	b2d3      	uxtb	r3, r2
9000e066:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e068:	b16b      	cbz	r3, 9000e086 <xQueueGenericSend+0x136>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e06a:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e06c:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e06e:	b153      	cbz	r3, 9000e086 <xQueueGenericSend+0x136>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e070:	f001 fb58 	bl	9000f724 <xTaskRemoveFromEventList>
9000e074:	2800      	cmp	r0, #0
9000e076:	d0f4      	beq.n	9000e062 <xQueueGenericSend+0x112>
					vTaskMissedYield();
9000e078:	f001 fbe8 	bl	9000f84c <vTaskMissedYield>
				--cRxLock;
9000e07c:	1e6a      	subs	r2, r5, #1
9000e07e:	b2d3      	uxtb	r3, r2
9000e080:	b255      	sxtb	r5, r2
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e082:	2b00      	cmp	r3, #0
9000e084:	d1f1      	bne.n	9000e06a <xQueueGenericSend+0x11a>
		pxQueue->cRxLock = queueUNLOCKED;
9000e086:	23ff      	movs	r3, #255	@ 0xff
9000e088:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e08c:	f7ff fc94 	bl	9000d9b8 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000e090:	f001 fa24 	bl	9000f4dc <xTaskResumeAll>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000e094:	2501      	movs	r5, #1
9000e096:	e784      	b.n	9000dfa2 <xQueueGenericSend+0x52>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e098:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000e09a:	2b00      	cmp	r3, #0
9000e09c:	f43f af65 	beq.w	9000df6a <xQueueGenericSend+0x1a>
9000e0a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e0a4:	f383 8811 	msr	BASEPRI, r3
9000e0a8:	f3bf 8f6f 	isb	sy
9000e0ac:	f3bf 8f4f 	dsb	sy
9000e0b0:	e7fe      	b.n	9000e0b0 <xQueueGenericSend+0x160>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000e0b2:	f104 0a10 	add.w	sl, r4, #16
	taskEXIT_CRITICAL();
9000e0b6:	f7ff fc7f 	bl	9000d9b8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
9000e0ba:	9901      	ldr	r1, [sp, #4]
9000e0bc:	4650      	mov	r0, sl
9000e0be:	f001 faa3 	bl	9000f608 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000e0c2:	f7ff fc57 	bl	9000d974 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e0c6:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e0ca:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e0cc:	2d00      	cmp	r5, #0
9000e0ce:	dc04      	bgt.n	9000e0da <xQueueGenericSend+0x18a>
9000e0d0:	e011      	b.n	9000e0f6 <xQueueGenericSend+0x1a6>
			--cTxLock;
9000e0d2:	1e6b      	subs	r3, r5, #1
9000e0d4:	b2da      	uxtb	r2, r3
9000e0d6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e0d8:	b16a      	cbz	r2, 9000e0f6 <xQueueGenericSend+0x1a6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e0da:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e0dc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e0de:	b153      	cbz	r3, 9000e0f6 <xQueueGenericSend+0x1a6>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e0e0:	f001 fb20 	bl	9000f724 <xTaskRemoveFromEventList>
9000e0e4:	2800      	cmp	r0, #0
9000e0e6:	d0f4      	beq.n	9000e0d2 <xQueueGenericSend+0x182>
						vTaskMissedYield();
9000e0e8:	f001 fbb0 	bl	9000f84c <vTaskMissedYield>
			--cTxLock;
9000e0ec:	1e6b      	subs	r3, r5, #1
9000e0ee:	b2da      	uxtb	r2, r3
9000e0f0:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e0f2:	2a00      	cmp	r2, #0
9000e0f4:	d1f1      	bne.n	9000e0da <xQueueGenericSend+0x18a>
		pxQueue->cTxLock = queueUNLOCKED;
9000e0f6:	23ff      	movs	r3, #255	@ 0xff
9000e0f8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e0fc:	f7ff fc5c 	bl	9000d9b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e100:	f7ff fc38 	bl	9000d974 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e104:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e108:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e10a:	2d00      	cmp	r5, #0
9000e10c:	dc04      	bgt.n	9000e118 <xQueueGenericSend+0x1c8>
9000e10e:	e011      	b.n	9000e134 <xQueueGenericSend+0x1e4>
				--cRxLock;
9000e110:	1e6b      	subs	r3, r5, #1
9000e112:	b2da      	uxtb	r2, r3
9000e114:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e116:	b16a      	cbz	r2, 9000e134 <xQueueGenericSend+0x1e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e118:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e11a:	4650      	mov	r0, sl
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e11c:	b153      	cbz	r3, 9000e134 <xQueueGenericSend+0x1e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e11e:	f001 fb01 	bl	9000f724 <xTaskRemoveFromEventList>
9000e122:	2800      	cmp	r0, #0
9000e124:	d0f4      	beq.n	9000e110 <xQueueGenericSend+0x1c0>
					vTaskMissedYield();
9000e126:	f001 fb91 	bl	9000f84c <vTaskMissedYield>
				--cRxLock;
9000e12a:	1e6b      	subs	r3, r5, #1
9000e12c:	b2da      	uxtb	r2, r3
9000e12e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e130:	2a00      	cmp	r2, #0
9000e132:	d1f1      	bne.n	9000e118 <xQueueGenericSend+0x1c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000e134:	23ff      	movs	r3, #255	@ 0xff
9000e136:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e13a:	f7ff fc3d 	bl	9000d9b8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000e13e:	f001 f9cd 	bl	9000f4dc <xTaskResumeAll>
9000e142:	2800      	cmp	r0, #0
9000e144:	d1a6      	bne.n	9000e094 <xQueueGenericSend+0x144>
					portYIELD_WITHIN_API();
9000e146:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e14a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e14e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e152:	f3bf 8f4f 	dsb	sy
9000e156:	f3bf 8f6f 	isb	sy
9000e15a:	e79b      	b.n	9000e094 <xQueueGenericSend+0x144>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000e15c:	a802      	add	r0, sp, #8
9000e15e:	f001 fb27 	bl	9000f7b0 <vTaskInternalSetTimeOutState>
					xEntryTimeSet = pdTRUE;
9000e162:	e730      	b.n	9000dfc6 <xQueueGenericSend+0x76>
9000e164:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e168:	f383 8811 	msr	BASEPRI, r3
9000e16c:	f3bf 8f6f 	isb	sy
9000e170:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e174:	e7fe      	b.n	9000e174 <xQueueGenericSend+0x224>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e176:	9b01      	ldr	r3, [sp, #4]
9000e178:	2b00      	cmp	r3, #0
9000e17a:	f43f af09 	beq.w	9000df90 <xQueueGenericSend+0x40>
9000e17e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e182:	f383 8811 	msr	BASEPRI, r3
9000e186:	f3bf 8f6f 	isb	sy
9000e18a:	f3bf 8f4f 	dsb	sy
9000e18e:	e7fe      	b.n	9000e18e <xQueueGenericSend+0x23e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000e190:	463a      	mov	r2, r7
9000e192:	4641      	mov	r1, r8
9000e194:	4620      	mov	r0, r4
9000e196:	f7ff fd4d 	bl	9000dc34 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e19a:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000e19c:	2b00      	cmp	r3, #0
9000e19e:	d151      	bne.n	9000e244 <xQueueGenericSend+0x2f4>
					else if( xYieldRequired != pdFALSE )
9000e1a0:	b148      	cbz	r0, 9000e1b6 <xQueueGenericSend+0x266>
						queueYIELD_IF_USING_PREEMPTION();
9000e1a2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e1a6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e1aa:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e1ae:	f3bf 8f4f 	dsb	sy
9000e1b2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
9000e1b6:	f7ff fbff 	bl	9000d9b8 <vPortExitCritical>
				return pdPASS;
9000e1ba:	2001      	movs	r0, #1
}
9000e1bc:	b004      	add	sp, #16
9000e1be:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
					taskEXIT_CRITICAL();
9000e1c2:	f7ff fbf9 	bl	9000d9b8 <vPortExitCritical>
					return errQUEUE_FULL;
9000e1c6:	2000      	movs	r0, #0
9000e1c8:	e7f8      	b.n	9000e1bc <xQueueGenericSend+0x26c>
	taskENTER_CRITICAL();
9000e1ca:	f7ff fbd3 	bl	9000d974 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e1ce:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e1d2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e1d4:	2d00      	cmp	r5, #0
9000e1d6:	dd10      	ble.n	9000e1fa <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e1d8:	f104 0624 	add.w	r6, r4, #36	@ 0x24
9000e1dc:	e003      	b.n	9000e1e6 <xQueueGenericSend+0x296>
			--cTxLock;
9000e1de:	1e6b      	subs	r3, r5, #1
9000e1e0:	b2da      	uxtb	r2, r3
9000e1e2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e1e4:	b14a      	cbz	r2, 9000e1fa <xQueueGenericSend+0x2aa>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e1e6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e1e8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e1ea:	b133      	cbz	r3, 9000e1fa <xQueueGenericSend+0x2aa>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e1ec:	f001 fa9a 	bl	9000f724 <xTaskRemoveFromEventList>
9000e1f0:	2800      	cmp	r0, #0
9000e1f2:	d0f4      	beq.n	9000e1de <xQueueGenericSend+0x28e>
						vTaskMissedYield();
9000e1f4:	f001 fb2a 	bl	9000f84c <vTaskMissedYield>
9000e1f8:	e7f1      	b.n	9000e1de <xQueueGenericSend+0x28e>
		pxQueue->cTxLock = queueUNLOCKED;
9000e1fa:	23ff      	movs	r3, #255	@ 0xff
9000e1fc:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e200:	f7ff fbda 	bl	9000d9b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e204:	f7ff fbb6 	bl	9000d974 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e208:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e20c:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e20e:	2d00      	cmp	r5, #0
9000e210:	dd10      	ble.n	9000e234 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e212:	f104 0610 	add.w	r6, r4, #16
9000e216:	e003      	b.n	9000e220 <xQueueGenericSend+0x2d0>
				--cRxLock;
9000e218:	1e6b      	subs	r3, r5, #1
9000e21a:	b2da      	uxtb	r2, r3
9000e21c:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e21e:	b14a      	cbz	r2, 9000e234 <xQueueGenericSend+0x2e4>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e220:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e222:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e224:	b133      	cbz	r3, 9000e234 <xQueueGenericSend+0x2e4>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e226:	f001 fa7d 	bl	9000f724 <xTaskRemoveFromEventList>
9000e22a:	2800      	cmp	r0, #0
9000e22c:	d0f4      	beq.n	9000e218 <xQueueGenericSend+0x2c8>
					vTaskMissedYield();
9000e22e:	f001 fb0d 	bl	9000f84c <vTaskMissedYield>
9000e232:	e7f1      	b.n	9000e218 <xQueueGenericSend+0x2c8>
		pxQueue->cRxLock = queueUNLOCKED;
9000e234:	23ff      	movs	r3, #255	@ 0xff
9000e236:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e23a:	f7ff fbbd 	bl	9000d9b8 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000e23e:	f001 f94d 	bl	9000f4dc <xTaskResumeAll>
			return errQUEUE_FULL;
9000e242:	e7c0      	b.n	9000e1c6 <xQueueGenericSend+0x276>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e244:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000e248:	f001 fa6c 	bl	9000f724 <xTaskRemoveFromEventList>
9000e24c:	2800      	cmp	r0, #0
9000e24e:	d0b2      	beq.n	9000e1b6 <xQueueGenericSend+0x266>
9000e250:	e7a7      	b.n	9000e1a2 <xQueueGenericSend+0x252>
9000e252:	bf00      	nop

9000e254 <xQueueGenericSendFromISR>:
	configASSERT( pxQueue );
9000e254:	2800      	cmp	r0, #0
9000e256:	d04b      	beq.n	9000e2f0 <xQueueGenericSendFromISR+0x9c>
{
9000e258:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000e25c:	460e      	mov	r6, r1
9000e25e:	4604      	mov	r4, r0
9000e260:	4617      	mov	r7, r2
9000e262:	461d      	mov	r5, r3
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e264:	b339      	cbz	r1, 9000e2b6 <xQueueGenericSendFromISR+0x62>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
9000e266:	2d02      	cmp	r5, #2
9000e268:	d10b      	bne.n	9000e282 <xQueueGenericSendFromISR+0x2e>
9000e26a:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000e26c:	2b01      	cmp	r3, #1
9000e26e:	d008      	beq.n	9000e282 <xQueueGenericSendFromISR+0x2e>
9000e270:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e274:	f383 8811 	msr	BASEPRI, r3
9000e278:	f3bf 8f6f 	isb	sy
9000e27c:	f3bf 8f4f 	dsb	sy
9000e280:	e7fe      	b.n	9000e280 <xQueueGenericSendFromISR+0x2c>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000e282:	f7ff fca9 	bl	9000dbd8 <vPortValidateInterruptPriority>
	__asm volatile
9000e286:	f3ef 8811 	mrs	r8, BASEPRI
9000e28a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e28e:	f383 8811 	msr	BASEPRI, r3
9000e292:	f3bf 8f6f 	isb	sy
9000e296:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
9000e29a:	6ba2      	ldr	r2, [r4, #56]	@ 0x38
9000e29c:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
9000e29e:	429a      	cmp	r2, r3
9000e2a0:	d315      	bcc.n	9000e2ce <xQueueGenericSendFromISR+0x7a>
9000e2a2:	f1a5 0002 	sub.w	r0, r5, #2
9000e2a6:	fab0 f080 	clz	r0, r0
9000e2aa:	0940      	lsrs	r0, r0, #5
9000e2ac:	b978      	cbnz	r0, 9000e2ce <xQueueGenericSendFromISR+0x7a>
	__asm volatile
9000e2ae:	f388 8811 	msr	BASEPRI, r8
}
9000e2b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e2b6:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000e2b8:	2b00      	cmp	r3, #0
9000e2ba:	d0d4      	beq.n	9000e266 <xQueueGenericSendFromISR+0x12>
	__asm volatile
9000e2bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e2c0:	f383 8811 	msr	BASEPRI, r3
9000e2c4:	f3bf 8f6f 	isb	sy
9000e2c8:	f3bf 8f4f 	dsb	sy
9000e2cc:	e7fe      	b.n	9000e2cc <xQueueGenericSendFromISR+0x78>
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000e2ce:	462a      	mov	r2, r5
			const int8_t cTxLock = pxQueue->cTxLock;
9000e2d0:	f894 5045 	ldrb.w	r5, [r4, #69]	@ 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000e2d4:	4631      	mov	r1, r6
9000e2d6:	4620      	mov	r0, r4
			const int8_t cTxLock = pxQueue->cTxLock;
9000e2d8:	b26d      	sxtb	r5, r5
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e2da:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
9000e2dc:	f7ff fcaa 	bl	9000dc34 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
9000e2e0:	1c6b      	adds	r3, r5, #1
9000e2e2:	d00e      	beq.n	9000e302 <xQueueGenericSendFromISR+0xae>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000e2e4:	1c6b      	adds	r3, r5, #1
9000e2e6:	b25b      	sxtb	r3, r3
9000e2e8:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
9000e2ec:	2001      	movs	r0, #1
9000e2ee:	e7de      	b.n	9000e2ae <xQueueGenericSendFromISR+0x5a>
9000e2f0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e2f4:	f383 8811 	msr	BASEPRI, r3
9000e2f8:	f3bf 8f6f 	isb	sy
9000e2fc:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e300:	e7fe      	b.n	9000e300 <xQueueGenericSendFromISR+0xac>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e302:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000e304:	2b00      	cmp	r3, #0
9000e306:	d0f1      	beq.n	9000e2ec <xQueueGenericSendFromISR+0x98>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e308:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000e30c:	f001 fa0a 	bl	9000f724 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000e310:	2f00      	cmp	r7, #0
9000e312:	d0eb      	beq.n	9000e2ec <xQueueGenericSendFromISR+0x98>
9000e314:	2800      	cmp	r0, #0
9000e316:	d0e9      	beq.n	9000e2ec <xQueueGenericSendFromISR+0x98>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000e318:	2301      	movs	r3, #1
9000e31a:	603b      	str	r3, [r7, #0]
9000e31c:	e7e6      	b.n	9000e2ec <xQueueGenericSendFromISR+0x98>
9000e31e:	bf00      	nop

9000e320 <xQueueGiveFromISR>:
	configASSERT( pxQueue );
9000e320:	b360      	cbz	r0, 9000e37c <xQueueGiveFromISR+0x5c>
	configASSERT( pxQueue->uxItemSize == 0 );
9000e322:	6c03      	ldr	r3, [r0, #64]	@ 0x40
{
9000e324:	b570      	push	{r4, r5, r6, lr}
9000e326:	4604      	mov	r4, r0
	configASSERT( pxQueue->uxItemSize == 0 );
9000e328:	b143      	cbz	r3, 9000e33c <xQueueGiveFromISR+0x1c>
9000e32a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e32e:	f383 8811 	msr	BASEPRI, r3
9000e332:	f3bf 8f6f 	isb	sy
9000e336:	f3bf 8f4f 	dsb	sy
9000e33a:	e7fe      	b.n	9000e33a <xQueueGiveFromISR+0x1a>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000e33c:	6803      	ldr	r3, [r0, #0]
9000e33e:	460d      	mov	r5, r1
9000e340:	b32b      	cbz	r3, 9000e38e <xQueueGiveFromISR+0x6e>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000e342:	f7ff fc49 	bl	9000dbd8 <vPortValidateInterruptPriority>
	__asm volatile
9000e346:	f3ef 8611 	mrs	r6, BASEPRI
9000e34a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e34e:	f383 8811 	msr	BASEPRI, r3
9000e352:	f3bf 8f6f 	isb	sy
9000e356:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e35a:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
9000e35c:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
9000e35e:	429a      	cmp	r2, r3
9000e360:	d921      	bls.n	9000e3a6 <xQueueGiveFromISR+0x86>
			const int8_t cTxLock = pxQueue->cTxLock;
9000e362:	f894 2045 	ldrb.w	r2, [r4, #69]	@ 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e366:	3301      	adds	r3, #1
			if( cTxLock == queueUNLOCKED )
9000e368:	2aff      	cmp	r2, #255	@ 0xff
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
9000e36a:	63a3      	str	r3, [r4, #56]	@ 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
9000e36c:	b253      	sxtb	r3, r2
			if( cTxLock == queueUNLOCKED )
9000e36e:	d01e      	beq.n	9000e3ae <xQueueGiveFromISR+0x8e>
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
9000e370:	3301      	adds	r3, #1
9000e372:	b25b      	sxtb	r3, r3
9000e374:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
			xReturn = pdPASS;
9000e378:	2001      	movs	r0, #1
9000e37a:	e015      	b.n	9000e3a8 <xQueueGiveFromISR+0x88>
	__asm volatile
9000e37c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e380:	f383 8811 	msr	BASEPRI, r3
9000e384:	f3bf 8f6f 	isb	sy
9000e388:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000e38c:	e7fe      	b.n	9000e38c <xQueueGiveFromISR+0x6c>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
9000e38e:	6883      	ldr	r3, [r0, #8]
9000e390:	2b00      	cmp	r3, #0
9000e392:	d0d6      	beq.n	9000e342 <xQueueGiveFromISR+0x22>
9000e394:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e398:	f383 8811 	msr	BASEPRI, r3
9000e39c:	f3bf 8f6f 	isb	sy
9000e3a0:	f3bf 8f4f 	dsb	sy
9000e3a4:	e7fe      	b.n	9000e3a4 <xQueueGiveFromISR+0x84>
			xReturn = errQUEUE_FULL;
9000e3a6:	2000      	movs	r0, #0
	__asm volatile
9000e3a8:	f386 8811 	msr	BASEPRI, r6
}
9000e3ac:	bd70      	pop	{r4, r5, r6, pc}
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e3ae:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9000e3b0:	2b00      	cmp	r3, #0
9000e3b2:	d0e1      	beq.n	9000e378 <xQueueGiveFromISR+0x58>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e3b4:	f104 0024 	add.w	r0, r4, #36	@ 0x24
9000e3b8:	f001 f9b4 	bl	9000f724 <xTaskRemoveFromEventList>
							if( pxHigherPriorityTaskWoken != NULL )
9000e3bc:	2d00      	cmp	r5, #0
9000e3be:	d0db      	beq.n	9000e378 <xQueueGiveFromISR+0x58>
9000e3c0:	2800      	cmp	r0, #0
9000e3c2:	d0d9      	beq.n	9000e378 <xQueueGiveFromISR+0x58>
								*pxHigherPriorityTaskWoken = pdTRUE;
9000e3c4:	2301      	movs	r3, #1
9000e3c6:	602b      	str	r3, [r5, #0]
9000e3c8:	e7d6      	b.n	9000e378 <xQueueGiveFromISR+0x58>
9000e3ca:	bf00      	nop

9000e3cc <xQueueReceive>:
{
9000e3cc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000e3d0:	b085      	sub	sp, #20
9000e3d2:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
9000e3d4:	2800      	cmp	r0, #0
9000e3d6:	f000 8147 	beq.w	9000e668 <xQueueReceive+0x29c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e3da:	460f      	mov	r7, r1
9000e3dc:	4604      	mov	r4, r0
9000e3de:	2900      	cmp	r1, #0
9000e3e0:	d07b      	beq.n	9000e4da <xQueueReceive+0x10e>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e3e2:	f001 fa39 	bl	9000f858 <xTaskGetSchedulerState>
9000e3e6:	2800      	cmp	r0, #0
9000e3e8:	f000 8083 	beq.w	9000e4f2 <xQueueReceive+0x126>
		taskENTER_CRITICAL();
9000e3ec:	f7ff fac2 	bl	9000d974 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e3f0:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e3f2:	2d00      	cmp	r5, #0
9000e3f4:	f040 8141 	bne.w	9000e67a <xQueueReceive+0x2ae>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e3f8:	9b01      	ldr	r3, [sp, #4]
9000e3fa:	2b00      	cmp	r3, #0
9000e3fc:	f000 80d7 	beq.w	9000e5ae <xQueueReceive+0x1e2>
		prvLockQueue( pxQueue );
9000e400:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e402:	f104 0624 	add.w	r6, r4, #36	@ 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9000e406:	a802      	add	r0, sp, #8
9000e408:	f001 f9d2 	bl	9000f7b0 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000e40c:	f7ff fad4 	bl	9000d9b8 <vPortExitCritical>
		vTaskSuspendAll();
9000e410:	f001 f85c 	bl	9000f4cc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000e414:	f7ff faae 	bl	9000d974 <vPortEnterCritical>
9000e418:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e41c:	2bff      	cmp	r3, #255	@ 0xff
9000e41e:	d101      	bne.n	9000e424 <xQueueReceive+0x58>
9000e420:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
9000e424:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e428:	2bff      	cmp	r3, #255	@ 0xff
9000e42a:	d101      	bne.n	9000e430 <xQueueReceive+0x64>
9000e42c:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
9000e430:	f7ff fac2 	bl	9000d9b8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000e434:	a901      	add	r1, sp, #4
9000e436:	a802      	add	r0, sp, #8
9000e438:	f001 f9c6 	bl	9000f7c8 <xTaskCheckForTimeOut>
9000e43c:	2800      	cmp	r0, #0
9000e43e:	d165      	bne.n	9000e50c <xQueueReceive+0x140>
	taskENTER_CRITICAL();
9000e440:	f7ff fa98 	bl	9000d974 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e444:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000e446:	2b00      	cmp	r3, #0
9000e448:	f000 80b7 	beq.w	9000e5ba <xQueueReceive+0x1ee>
	taskEXIT_CRITICAL();
9000e44c:	f7ff fab4 	bl	9000d9b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e450:	f7ff fa90 	bl	9000d974 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e454:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e458:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e45a:	2d00      	cmp	r5, #0
9000e45c:	dd14      	ble.n	9000e488 <xQueueReceive+0xbc>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e45e:	f104 0924 	add.w	r9, r4, #36	@ 0x24
9000e462:	e003      	b.n	9000e46c <xQueueReceive+0xa0>
			--cTxLock;
9000e464:	1e6b      	subs	r3, r5, #1
9000e466:	b2da      	uxtb	r2, r3
9000e468:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e46a:	b16a      	cbz	r2, 9000e488 <xQueueReceive+0xbc>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e46c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e46e:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e470:	b153      	cbz	r3, 9000e488 <xQueueReceive+0xbc>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e472:	f001 f957 	bl	9000f724 <xTaskRemoveFromEventList>
9000e476:	2800      	cmp	r0, #0
9000e478:	d0f4      	beq.n	9000e464 <xQueueReceive+0x98>
						vTaskMissedYield();
9000e47a:	f001 f9e7 	bl	9000f84c <vTaskMissedYield>
			--cTxLock;
9000e47e:	1e6b      	subs	r3, r5, #1
9000e480:	b2da      	uxtb	r2, r3
9000e482:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e484:	2a00      	cmp	r2, #0
9000e486:	d1f1      	bne.n	9000e46c <xQueueReceive+0xa0>
		pxQueue->cTxLock = queueUNLOCKED;
9000e488:	23ff      	movs	r3, #255	@ 0xff
9000e48a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e48e:	f7ff fa93 	bl	9000d9b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e492:	f7ff fa6f 	bl	9000d974 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e496:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e49a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e49c:	2d00      	cmp	r5, #0
9000e49e:	dd14      	ble.n	9000e4ca <xQueueReceive+0xfe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e4a0:	f104 0910 	add.w	r9, r4, #16
9000e4a4:	e003      	b.n	9000e4ae <xQueueReceive+0xe2>
				--cRxLock;
9000e4a6:	1e6b      	subs	r3, r5, #1
9000e4a8:	b2da      	uxtb	r2, r3
9000e4aa:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e4ac:	b16a      	cbz	r2, 9000e4ca <xQueueReceive+0xfe>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e4ae:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e4b0:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e4b2:	b153      	cbz	r3, 9000e4ca <xQueueReceive+0xfe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e4b4:	f001 f936 	bl	9000f724 <xTaskRemoveFromEventList>
9000e4b8:	2800      	cmp	r0, #0
9000e4ba:	d0f4      	beq.n	9000e4a6 <xQueueReceive+0xda>
					vTaskMissedYield();
9000e4bc:	f001 f9c6 	bl	9000f84c <vTaskMissedYield>
				--cRxLock;
9000e4c0:	1e6b      	subs	r3, r5, #1
9000e4c2:	b2da      	uxtb	r2, r3
9000e4c4:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e4c6:	2a00      	cmp	r2, #0
9000e4c8:	d1f1      	bne.n	9000e4ae <xQueueReceive+0xe2>
		pxQueue->cRxLock = queueUNLOCKED;
9000e4ca:	23ff      	movs	r3, #255	@ 0xff
9000e4cc:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e4d0:	f7ff fa72 	bl	9000d9b8 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000e4d4:	f001 f802 	bl	9000f4dc <xTaskResumeAll>
9000e4d8:	e060      	b.n	9000e59c <xQueueReceive+0x1d0>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e4da:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000e4dc:	2b00      	cmp	r3, #0
9000e4de:	d080      	beq.n	9000e3e2 <xQueueReceive+0x16>
	__asm volatile
9000e4e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e4e4:	f383 8811 	msr	BASEPRI, r3
9000e4e8:	f3bf 8f6f 	isb	sy
9000e4ec:	f3bf 8f4f 	dsb	sy
9000e4f0:	e7fe      	b.n	9000e4f0 <xQueueReceive+0x124>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e4f2:	9b01      	ldr	r3, [sp, #4]
9000e4f4:	2b00      	cmp	r3, #0
9000e4f6:	f43f af79 	beq.w	9000e3ec <xQueueReceive+0x20>
9000e4fa:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e4fe:	f383 8811 	msr	BASEPRI, r3
9000e502:	f3bf 8f6f 	isb	sy
9000e506:	f3bf 8f4f 	dsb	sy
9000e50a:	e7fe      	b.n	9000e50a <xQueueReceive+0x13e>
	taskENTER_CRITICAL();
9000e50c:	f7ff fa32 	bl	9000d974 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e510:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e514:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e516:	2d00      	cmp	r5, #0
9000e518:	dc04      	bgt.n	9000e524 <xQueueReceive+0x158>
9000e51a:	e011      	b.n	9000e540 <xQueueReceive+0x174>
			--cTxLock;
9000e51c:	1e6b      	subs	r3, r5, #1
9000e51e:	b2da      	uxtb	r2, r3
9000e520:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e522:	b16a      	cbz	r2, 9000e540 <xQueueReceive+0x174>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e524:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e526:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e528:	b153      	cbz	r3, 9000e540 <xQueueReceive+0x174>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e52a:	f001 f8fb 	bl	9000f724 <xTaskRemoveFromEventList>
9000e52e:	2800      	cmp	r0, #0
9000e530:	d0f4      	beq.n	9000e51c <xQueueReceive+0x150>
						vTaskMissedYield();
9000e532:	f001 f98b 	bl	9000f84c <vTaskMissedYield>
			--cTxLock;
9000e536:	1e6b      	subs	r3, r5, #1
9000e538:	b2da      	uxtb	r2, r3
9000e53a:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e53c:	2a00      	cmp	r2, #0
9000e53e:	d1f1      	bne.n	9000e524 <xQueueReceive+0x158>
		pxQueue->cTxLock = queueUNLOCKED;
9000e540:	23ff      	movs	r3, #255	@ 0xff
9000e542:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e546:	f7ff fa37 	bl	9000d9b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e54a:	f7ff fa13 	bl	9000d974 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e54e:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e552:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e554:	2d00      	cmp	r5, #0
9000e556:	dd14      	ble.n	9000e582 <xQueueReceive+0x1b6>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e558:	f104 0910 	add.w	r9, r4, #16
9000e55c:	e003      	b.n	9000e566 <xQueueReceive+0x19a>
				--cRxLock;
9000e55e:	1e6b      	subs	r3, r5, #1
9000e560:	b2da      	uxtb	r2, r3
9000e562:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e564:	b16a      	cbz	r2, 9000e582 <xQueueReceive+0x1b6>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e566:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e568:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e56a:	b153      	cbz	r3, 9000e582 <xQueueReceive+0x1b6>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e56c:	f001 f8da 	bl	9000f724 <xTaskRemoveFromEventList>
9000e570:	2800      	cmp	r0, #0
9000e572:	d0f4      	beq.n	9000e55e <xQueueReceive+0x192>
					vTaskMissedYield();
9000e574:	f001 f96a 	bl	9000f84c <vTaskMissedYield>
				--cRxLock;
9000e578:	1e6b      	subs	r3, r5, #1
9000e57a:	b2da      	uxtb	r2, r3
9000e57c:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e57e:	2a00      	cmp	r2, #0
9000e580:	d1f1      	bne.n	9000e566 <xQueueReceive+0x19a>
		pxQueue->cRxLock = queueUNLOCKED;
9000e582:	23ff      	movs	r3, #255	@ 0xff
9000e584:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e588:	f7ff fa16 	bl	9000d9b8 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000e58c:	f000 ffa6 	bl	9000f4dc <xTaskResumeAll>
	taskENTER_CRITICAL();
9000e590:	f7ff f9f0 	bl	9000d974 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e594:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000e596:	b153      	cbz	r3, 9000e5ae <xQueueReceive+0x1e2>
	taskEXIT_CRITICAL();
9000e598:	f7ff fa0e 	bl	9000d9b8 <vPortExitCritical>
		taskENTER_CRITICAL();
9000e59c:	f7ff f9ea 	bl	9000d974 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000e5a0:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000e5a2:	2d00      	cmp	r5, #0
9000e5a4:	d169      	bne.n	9000e67a <xQueueReceive+0x2ae>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e5a6:	9b01      	ldr	r3, [sp, #4]
9000e5a8:	2b00      	cmp	r3, #0
9000e5aa:	f47f af2f 	bne.w	9000e40c <xQueueReceive+0x40>
					taskEXIT_CRITICAL();
9000e5ae:	f7ff fa03 	bl	9000d9b8 <vPortExitCritical>
					return errQUEUE_EMPTY;
9000e5b2:	2000      	movs	r0, #0
}
9000e5b4:	b005      	add	sp, #20
9000e5b6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000e5ba:	f104 0924 	add.w	r9, r4, #36	@ 0x24
	taskEXIT_CRITICAL();
9000e5be:	f7ff f9fb 	bl	9000d9b8 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000e5c2:	9901      	ldr	r1, [sp, #4]
9000e5c4:	4648      	mov	r0, r9
9000e5c6:	f001 f81f 	bl	9000f608 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000e5ca:	f7ff f9d3 	bl	9000d974 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e5ce:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e5d2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e5d4:	2d00      	cmp	r5, #0
9000e5d6:	dc04      	bgt.n	9000e5e2 <xQueueReceive+0x216>
9000e5d8:	e011      	b.n	9000e5fe <xQueueReceive+0x232>
			--cTxLock;
9000e5da:	1e6b      	subs	r3, r5, #1
9000e5dc:	b2da      	uxtb	r2, r3
9000e5de:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e5e0:	b16a      	cbz	r2, 9000e5fe <xQueueReceive+0x232>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e5e2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e5e4:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e5e6:	b153      	cbz	r3, 9000e5fe <xQueueReceive+0x232>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e5e8:	f001 f89c 	bl	9000f724 <xTaskRemoveFromEventList>
9000e5ec:	2800      	cmp	r0, #0
9000e5ee:	d0f4      	beq.n	9000e5da <xQueueReceive+0x20e>
						vTaskMissedYield();
9000e5f0:	f001 f92c 	bl	9000f84c <vTaskMissedYield>
			--cTxLock;
9000e5f4:	1e6b      	subs	r3, r5, #1
9000e5f6:	b2da      	uxtb	r2, r3
9000e5f8:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e5fa:	2a00      	cmp	r2, #0
9000e5fc:	d1f1      	bne.n	9000e5e2 <xQueueReceive+0x216>
		pxQueue->cTxLock = queueUNLOCKED;
9000e5fe:	23ff      	movs	r3, #255	@ 0xff
9000e600:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e604:	f7ff f9d8 	bl	9000d9b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e608:	f7ff f9b4 	bl	9000d974 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e60c:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e610:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e612:	2d00      	cmp	r5, #0
9000e614:	dd14      	ble.n	9000e640 <xQueueReceive+0x274>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e616:	f104 0910 	add.w	r9, r4, #16
9000e61a:	e003      	b.n	9000e624 <xQueueReceive+0x258>
				--cRxLock;
9000e61c:	1e6b      	subs	r3, r5, #1
9000e61e:	b2da      	uxtb	r2, r3
9000e620:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e622:	b16a      	cbz	r2, 9000e640 <xQueueReceive+0x274>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e624:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e626:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e628:	b153      	cbz	r3, 9000e640 <xQueueReceive+0x274>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e62a:	f001 f87b 	bl	9000f724 <xTaskRemoveFromEventList>
9000e62e:	2800      	cmp	r0, #0
9000e630:	d0f4      	beq.n	9000e61c <xQueueReceive+0x250>
					vTaskMissedYield();
9000e632:	f001 f90b 	bl	9000f84c <vTaskMissedYield>
				--cRxLock;
9000e636:	1e6b      	subs	r3, r5, #1
9000e638:	b2da      	uxtb	r2, r3
9000e63a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e63c:	2a00      	cmp	r2, #0
9000e63e:	d1f1      	bne.n	9000e624 <xQueueReceive+0x258>
		pxQueue->cRxLock = queueUNLOCKED;
9000e640:	23ff      	movs	r3, #255	@ 0xff
9000e642:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e646:	f7ff f9b7 	bl	9000d9b8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000e64a:	f000 ff47 	bl	9000f4dc <xTaskResumeAll>
9000e64e:	2800      	cmp	r0, #0
9000e650:	d1a4      	bne.n	9000e59c <xQueueReceive+0x1d0>
					portYIELD_WITHIN_API();
9000e652:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e656:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e65a:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e65e:	f3bf 8f4f 	dsb	sy
9000e662:	f3bf 8f6f 	isb	sy
9000e666:	e799      	b.n	9000e59c <xQueueReceive+0x1d0>
9000e668:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e66c:	f383 8811 	msr	BASEPRI, r3
9000e670:	f3bf 8f6f 	isb	sy
9000e674:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000e678:	e7fe      	b.n	9000e678 <xQueueReceive+0x2ac>
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000e67a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
9000e67c:	b152      	cbz	r2, 9000e694 <xQueueReceive+0x2c8>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e67e:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e680:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e682:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e684:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000e686:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000e688:	d301      	bcc.n	9000e68e <xQueueReceive+0x2c2>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000e68a:	6821      	ldr	r1, [r4, #0]
9000e68c:	60e1      	str	r1, [r4, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000e68e:	4638      	mov	r0, r7
9000e690:	f01b fae7 	bl	90029c62 <memcpy>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000e694:	3d01      	subs	r5, #1
9000e696:	63a5      	str	r5, [r4, #56]	@ 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e698:	6923      	ldr	r3, [r4, #16]
9000e69a:	b91b      	cbnz	r3, 9000e6a4 <xQueueReceive+0x2d8>
				taskEXIT_CRITICAL();
9000e69c:	f7ff f98c 	bl	9000d9b8 <vPortExitCritical>
				return pdPASS;
9000e6a0:	2001      	movs	r0, #1
9000e6a2:	e787      	b.n	9000e5b4 <xQueueReceive+0x1e8>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e6a4:	f104 0010 	add.w	r0, r4, #16
9000e6a8:	f001 f83c 	bl	9000f724 <xTaskRemoveFromEventList>
9000e6ac:	2800      	cmp	r0, #0
9000e6ae:	d0f5      	beq.n	9000e69c <xQueueReceive+0x2d0>
						queueYIELD_IF_USING_PREEMPTION();
9000e6b0:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e6b4:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e6b8:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e6bc:	f3bf 8f4f 	dsb	sy
9000e6c0:	f3bf 8f6f 	isb	sy
9000e6c4:	e7ea      	b.n	9000e69c <xQueueReceive+0x2d0>
9000e6c6:	bf00      	nop

9000e6c8 <xQueueSemaphoreTake>:
{
9000e6c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000e6cc:	b085      	sub	sp, #20
9000e6ce:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
9000e6d0:	2800      	cmp	r0, #0
9000e6d2:	d05f      	beq.n	9000e794 <xQueueSemaphoreTake+0xcc>
	configASSERT( pxQueue->uxItemSize == 0 );
9000e6d4:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000e6d6:	4604      	mov	r4, r0
9000e6d8:	b143      	cbz	r3, 9000e6ec <xQueueSemaphoreTake+0x24>
9000e6da:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e6de:	f383 8811 	msr	BASEPRI, r3
9000e6e2:	f3bf 8f6f 	isb	sy
9000e6e6:	f3bf 8f4f 	dsb	sy
9000e6ea:	e7fe      	b.n	9000e6ea <xQueueSemaphoreTake+0x22>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e6ec:	f001 f8b4 	bl	9000f858 <xTaskGetSchedulerState>
9000e6f0:	2800      	cmp	r0, #0
9000e6f2:	d058      	beq.n	9000e7a6 <xQueueSemaphoreTake+0xde>
		taskENTER_CRITICAL();
9000e6f4:	f7ff f93e 	bl	9000d974 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9000e6f8:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9000e6fa:	2d00      	cmp	r5, #0
9000e6fc:	f040 8155 	bne.w	9000e9aa <xQueueSemaphoreTake+0x2e2>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e700:	9b01      	ldr	r3, [sp, #4]
9000e702:	2b00      	cmp	r3, #0
9000e704:	f000 8145 	beq.w	9000e992 <xQueueSemaphoreTake+0x2ca>
					vTaskInternalSetTimeOutState( &xTimeOut );
9000e708:	462f      	mov	r7, r5
		prvLockQueue( pxQueue );
9000e70a:	46a8      	mov	r8, r5
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e70c:	f104 0624 	add.w	r6, r4, #36	@ 0x24
					vTaskInternalSetTimeOutState( &xTimeOut );
9000e710:	a802      	add	r0, sp, #8
9000e712:	f001 f84d 	bl	9000f7b0 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
9000e716:	f7ff f94f 	bl	9000d9b8 <vPortExitCritical>
		vTaskSuspendAll();
9000e71a:	f000 fed7 	bl	9000f4cc <vTaskSuspendAll>
		prvLockQueue( pxQueue );
9000e71e:	f7ff f929 	bl	9000d974 <vPortEnterCritical>
9000e722:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e726:	2bff      	cmp	r3, #255	@ 0xff
9000e728:	d101      	bne.n	9000e72e <xQueueSemaphoreTake+0x66>
9000e72a:	f884 8044 	strb.w	r8, [r4, #68]	@ 0x44
9000e72e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e732:	2bff      	cmp	r3, #255	@ 0xff
9000e734:	d101      	bne.n	9000e73a <xQueueSemaphoreTake+0x72>
9000e736:	f884 8045 	strb.w	r8, [r4, #69]	@ 0x45
9000e73a:	f7ff f93d 	bl	9000d9b8 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
9000e73e:	a901      	add	r1, sp, #4
9000e740:	a802      	add	r0, sp, #8
9000e742:	f001 f841 	bl	9000f7c8 <xTaskCheckForTimeOut>
9000e746:	2800      	cmp	r0, #0
9000e748:	d139      	bne.n	9000e7be <xQueueSemaphoreTake+0xf6>
	taskENTER_CRITICAL();
9000e74a:	f7ff f913 	bl	9000d974 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e74e:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000e750:	2b00      	cmp	r3, #0
9000e752:	f000 80c0 	beq.w	9000e8d6 <xQueueSemaphoreTake+0x20e>
	taskEXIT_CRITICAL();
9000e756:	f7ff f92f 	bl	9000d9b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e75a:	f7ff f90b 	bl	9000d974 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e75e:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e762:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e764:	2d00      	cmp	r5, #0
9000e766:	f340 8091 	ble.w	9000e88c <xQueueSemaphoreTake+0x1c4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e76a:	f104 0924 	add.w	r9, r4, #36	@ 0x24
9000e76e:	e005      	b.n	9000e77c <xQueueSemaphoreTake+0xb4>
			--cTxLock;
9000e770:	1e6b      	subs	r3, r5, #1
9000e772:	b2da      	uxtb	r2, r3
9000e774:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e776:	2a00      	cmp	r2, #0
9000e778:	f000 8088 	beq.w	9000e88c <xQueueSemaphoreTake+0x1c4>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e77c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e77e:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e780:	2b00      	cmp	r3, #0
9000e782:	f000 8083 	beq.w	9000e88c <xQueueSemaphoreTake+0x1c4>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e786:	f000 ffcd 	bl	9000f724 <xTaskRemoveFromEventList>
9000e78a:	2800      	cmp	r0, #0
9000e78c:	d0f0      	beq.n	9000e770 <xQueueSemaphoreTake+0xa8>
						vTaskMissedYield();
9000e78e:	f001 f85d 	bl	9000f84c <vTaskMissedYield>
9000e792:	e7ed      	b.n	9000e770 <xQueueSemaphoreTake+0xa8>
9000e794:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e798:	f383 8811 	msr	BASEPRI, r3
9000e79c:	f3bf 8f6f 	isb	sy
9000e7a0:	f3bf 8f4f 	dsb	sy
	configASSERT( ( pxQueue ) );
9000e7a4:	e7fe      	b.n	9000e7a4 <xQueueSemaphoreTake+0xdc>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
9000e7a6:	9b01      	ldr	r3, [sp, #4]
9000e7a8:	2b00      	cmp	r3, #0
9000e7aa:	d0a3      	beq.n	9000e6f4 <xQueueSemaphoreTake+0x2c>
9000e7ac:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e7b0:	f383 8811 	msr	BASEPRI, r3
9000e7b4:	f3bf 8f6f 	isb	sy
9000e7b8:	f3bf 8f4f 	dsb	sy
9000e7bc:	e7fe      	b.n	9000e7bc <xQueueSemaphoreTake+0xf4>
	taskENTER_CRITICAL();
9000e7be:	f7ff f8d9 	bl	9000d974 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e7c2:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e7c6:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e7c8:	2d00      	cmp	r5, #0
9000e7ca:	dc04      	bgt.n	9000e7d6 <xQueueSemaphoreTake+0x10e>
9000e7cc:	e011      	b.n	9000e7f2 <xQueueSemaphoreTake+0x12a>
			--cTxLock;
9000e7ce:	1e6b      	subs	r3, r5, #1
9000e7d0:	b2da      	uxtb	r2, r3
9000e7d2:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e7d4:	b16a      	cbz	r2, 9000e7f2 <xQueueSemaphoreTake+0x12a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e7d6:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e7d8:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e7da:	b153      	cbz	r3, 9000e7f2 <xQueueSemaphoreTake+0x12a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e7dc:	f000 ffa2 	bl	9000f724 <xTaskRemoveFromEventList>
9000e7e0:	2800      	cmp	r0, #0
9000e7e2:	d0f4      	beq.n	9000e7ce <xQueueSemaphoreTake+0x106>
						vTaskMissedYield();
9000e7e4:	f001 f832 	bl	9000f84c <vTaskMissedYield>
			--cTxLock;
9000e7e8:	1e6b      	subs	r3, r5, #1
9000e7ea:	b2da      	uxtb	r2, r3
9000e7ec:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e7ee:	2a00      	cmp	r2, #0
9000e7f0:	d1f1      	bne.n	9000e7d6 <xQueueSemaphoreTake+0x10e>
		pxQueue->cTxLock = queueUNLOCKED;
9000e7f2:	23ff      	movs	r3, #255	@ 0xff
9000e7f4:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e7f8:	f7ff f8de 	bl	9000d9b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e7fc:	f7ff f8ba 	bl	9000d974 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e800:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e804:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e806:	2d00      	cmp	r5, #0
9000e808:	dd14      	ble.n	9000e834 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e80a:	f104 0910 	add.w	r9, r4, #16
9000e80e:	e003      	b.n	9000e818 <xQueueSemaphoreTake+0x150>
				--cRxLock;
9000e810:	1e6b      	subs	r3, r5, #1
9000e812:	b2da      	uxtb	r2, r3
9000e814:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e816:	b16a      	cbz	r2, 9000e834 <xQueueSemaphoreTake+0x16c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e818:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e81a:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e81c:	b153      	cbz	r3, 9000e834 <xQueueSemaphoreTake+0x16c>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e81e:	f000 ff81 	bl	9000f724 <xTaskRemoveFromEventList>
9000e822:	2800      	cmp	r0, #0
9000e824:	d0f4      	beq.n	9000e810 <xQueueSemaphoreTake+0x148>
					vTaskMissedYield();
9000e826:	f001 f811 	bl	9000f84c <vTaskMissedYield>
				--cRxLock;
9000e82a:	1e6b      	subs	r3, r5, #1
9000e82c:	b2da      	uxtb	r2, r3
9000e82e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e830:	2a00      	cmp	r2, #0
9000e832:	d1f1      	bne.n	9000e818 <xQueueSemaphoreTake+0x150>
		pxQueue->cRxLock = queueUNLOCKED;
9000e834:	23ff      	movs	r3, #255	@ 0xff
9000e836:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e83a:	f7ff f8bd 	bl	9000d9b8 <vPortExitCritical>
			( void ) xTaskResumeAll();
9000e83e:	f000 fe4d 	bl	9000f4dc <xTaskResumeAll>
	taskENTER_CRITICAL();
9000e842:	f7ff f897 	bl	9000d974 <vPortEnterCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
9000e846:	6ba3      	ldr	r3, [r4, #56]	@ 0x38
9000e848:	b943      	cbnz	r3, 9000e85c <xQueueSemaphoreTake+0x194>
	taskEXIT_CRITICAL();
9000e84a:	f7ff f8b5 	bl	9000d9b8 <vPortExitCritical>
					if( xInheritanceOccurred != pdFALSE )
9000e84e:	2f00      	cmp	r7, #0
9000e850:	f040 8094 	bne.w	9000e97c <xQueueSemaphoreTake+0x2b4>
					return errQUEUE_EMPTY;
9000e854:	2000      	movs	r0, #0
}
9000e856:	b005      	add	sp, #20
9000e858:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
9000e85c:	f7ff f8ac 	bl	9000d9b8 <vPortExitCritical>
		taskENTER_CRITICAL();
9000e860:	f7ff f888 	bl	9000d974 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
9000e864:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
9000e866:	2d00      	cmp	r5, #0
9000e868:	f040 809f 	bne.w	9000e9aa <xQueueSemaphoreTake+0x2e2>
				if( xTicksToWait == ( TickType_t ) 0 )
9000e86c:	9b01      	ldr	r3, [sp, #4]
9000e86e:	2b00      	cmp	r3, #0
9000e870:	f47f af51 	bne.w	9000e716 <xQueueSemaphoreTake+0x4e>
						configASSERT( xInheritanceOccurred == pdFALSE );
9000e874:	2f00      	cmp	r7, #0
9000e876:	f000 808c 	beq.w	9000e992 <xQueueSemaphoreTake+0x2ca>
9000e87a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000e87e:	f383 8811 	msr	BASEPRI, r3
9000e882:	f3bf 8f6f 	isb	sy
9000e886:	f3bf 8f4f 	dsb	sy
9000e88a:	e7fe      	b.n	9000e88a <xQueueSemaphoreTake+0x1c2>
		pxQueue->cTxLock = queueUNLOCKED;
9000e88c:	23ff      	movs	r3, #255	@ 0xff
9000e88e:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e892:	f7ff f891 	bl	9000d9b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e896:	f7ff f86d 	bl	9000d974 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e89a:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e89e:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e8a0:	2d00      	cmp	r5, #0
9000e8a2:	dd10      	ble.n	9000e8c6 <xQueueSemaphoreTake+0x1fe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e8a4:	f104 0910 	add.w	r9, r4, #16
9000e8a8:	e003      	b.n	9000e8b2 <xQueueSemaphoreTake+0x1ea>
				--cRxLock;
9000e8aa:	1e6b      	subs	r3, r5, #1
9000e8ac:	b2da      	uxtb	r2, r3
9000e8ae:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e8b0:	b14a      	cbz	r2, 9000e8c6 <xQueueSemaphoreTake+0x1fe>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e8b2:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e8b4:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e8b6:	b133      	cbz	r3, 9000e8c6 <xQueueSemaphoreTake+0x1fe>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e8b8:	f000 ff34 	bl	9000f724 <xTaskRemoveFromEventList>
9000e8bc:	2800      	cmp	r0, #0
9000e8be:	d0f4      	beq.n	9000e8aa <xQueueSemaphoreTake+0x1e2>
					vTaskMissedYield();
9000e8c0:	f000 ffc4 	bl	9000f84c <vTaskMissedYield>
9000e8c4:	e7f1      	b.n	9000e8aa <xQueueSemaphoreTake+0x1e2>
		pxQueue->cRxLock = queueUNLOCKED;
9000e8c6:	23ff      	movs	r3, #255	@ 0xff
9000e8c8:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e8cc:	f7ff f874 	bl	9000d9b8 <vPortExitCritical>
				( void ) xTaskResumeAll();
9000e8d0:	f000 fe04 	bl	9000f4dc <xTaskResumeAll>
9000e8d4:	e7c4      	b.n	9000e860 <xQueueSemaphoreTake+0x198>
	taskEXIT_CRITICAL();
9000e8d6:	f7ff f86f 	bl	9000d9b8 <vPortExitCritical>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e8da:	6823      	ldr	r3, [r4, #0]
9000e8dc:	2b00      	cmp	r3, #0
9000e8de:	d05b      	beq.n	9000e998 <xQueueSemaphoreTake+0x2d0>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
9000e8e0:	f104 0924 	add.w	r9, r4, #36	@ 0x24
9000e8e4:	9901      	ldr	r1, [sp, #4]
9000e8e6:	4648      	mov	r0, r9
9000e8e8:	f000 fe8e 	bl	9000f608 <vTaskPlaceOnEventList>
	taskENTER_CRITICAL();
9000e8ec:	f7ff f842 	bl	9000d974 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000e8f0:	f894 3045 	ldrb.w	r3, [r4, #69]	@ 0x45
9000e8f4:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e8f6:	2d00      	cmp	r5, #0
9000e8f8:	dc04      	bgt.n	9000e904 <xQueueSemaphoreTake+0x23c>
9000e8fa:	e00d      	b.n	9000e918 <xQueueSemaphoreTake+0x250>
			--cTxLock;
9000e8fc:	1e6b      	subs	r3, r5, #1
9000e8fe:	b2da      	uxtb	r2, r3
9000e900:	b25d      	sxtb	r5, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000e902:	b14a      	cbz	r2, 9000e918 <xQueueSemaphoreTake+0x250>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e904:	6a63      	ldr	r3, [r4, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e906:	4648      	mov	r0, r9
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000e908:	b133      	cbz	r3, 9000e918 <xQueueSemaphoreTake+0x250>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000e90a:	f000 ff0b 	bl	9000f724 <xTaskRemoveFromEventList>
9000e90e:	2800      	cmp	r0, #0
9000e910:	d0f4      	beq.n	9000e8fc <xQueueSemaphoreTake+0x234>
						vTaskMissedYield();
9000e912:	f000 ff9b 	bl	9000f84c <vTaskMissedYield>
9000e916:	e7f1      	b.n	9000e8fc <xQueueSemaphoreTake+0x234>
		pxQueue->cTxLock = queueUNLOCKED;
9000e918:	23ff      	movs	r3, #255	@ 0xff
9000e91a:	f884 3045 	strb.w	r3, [r4, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000e91e:	f7ff f84b 	bl	9000d9b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000e922:	f7ff f827 	bl	9000d974 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000e926:	f894 3044 	ldrb.w	r3, [r4, #68]	@ 0x44
9000e92a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e92c:	2d00      	cmp	r5, #0
9000e92e:	dd10      	ble.n	9000e952 <xQueueSemaphoreTake+0x28a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e930:	f104 0910 	add.w	r9, r4, #16
9000e934:	e003      	b.n	9000e93e <xQueueSemaphoreTake+0x276>
				--cRxLock;
9000e936:	1e6b      	subs	r3, r5, #1
9000e938:	b2da      	uxtb	r2, r3
9000e93a:	b25d      	sxtb	r5, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000e93c:	b14a      	cbz	r2, 9000e952 <xQueueSemaphoreTake+0x28a>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e93e:	6923      	ldr	r3, [r4, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e940:	4648      	mov	r0, r9
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e942:	b133      	cbz	r3, 9000e952 <xQueueSemaphoreTake+0x28a>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e944:	f000 feee 	bl	9000f724 <xTaskRemoveFromEventList>
9000e948:	2800      	cmp	r0, #0
9000e94a:	d0f4      	beq.n	9000e936 <xQueueSemaphoreTake+0x26e>
					vTaskMissedYield();
9000e94c:	f000 ff7e 	bl	9000f84c <vTaskMissedYield>
9000e950:	e7f1      	b.n	9000e936 <xQueueSemaphoreTake+0x26e>
		pxQueue->cRxLock = queueUNLOCKED;
9000e952:	23ff      	movs	r3, #255	@ 0xff
9000e954:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
	taskEXIT_CRITICAL();
9000e958:	f7ff f82e 	bl	9000d9b8 <vPortExitCritical>
				if( xTaskResumeAll() == pdFALSE )
9000e95c:	f000 fdbe 	bl	9000f4dc <xTaskResumeAll>
9000e960:	2800      	cmp	r0, #0
9000e962:	f47f af7d 	bne.w	9000e860 <xQueueSemaphoreTake+0x198>
					portYIELD_WITHIN_API();
9000e966:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e96a:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e96e:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e972:	f3bf 8f4f 	dsb	sy
9000e976:	f3bf 8f6f 	isb	sy
9000e97a:	e771      	b.n	9000e860 <xQueueSemaphoreTake+0x198>
						taskENTER_CRITICAL();
9000e97c:	f7fe fffa 	bl	9000d974 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
9000e980:	6a61      	ldr	r1, [r4, #36]	@ 0x24
9000e982:	b119      	cbz	r1, 9000e98c <xQueueSemaphoreTake+0x2c4>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
9000e984:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000e986:	6819      	ldr	r1, [r3, #0]
9000e988:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
9000e98c:	68a0      	ldr	r0, [r4, #8]
9000e98e:	f000 fff7 	bl	9000f980 <vTaskPriorityDisinheritAfterTimeout>
						taskEXIT_CRITICAL();
9000e992:	f7ff f811 	bl	9000d9b8 <vPortExitCritical>
9000e996:	e75d      	b.n	9000e854 <xQueueSemaphoreTake+0x18c>
						taskENTER_CRITICAL();
9000e998:	f7fe ffec 	bl	9000d974 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
9000e99c:	68a0      	ldr	r0, [r4, #8]
9000e99e:	f000 ff6b 	bl	9000f878 <xTaskPriorityInherit>
9000e9a2:	4607      	mov	r7, r0
						taskEXIT_CRITICAL();
9000e9a4:	f7ff f808 	bl	9000d9b8 <vPortExitCritical>
9000e9a8:	e79a      	b.n	9000e8e0 <xQueueSemaphoreTake+0x218>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000e9aa:	3d01      	subs	r5, #1
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e9ac:	6823      	ldr	r3, [r4, #0]
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
9000e9ae:	63a5      	str	r5, [r4, #56]	@ 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
9000e9b0:	b12b      	cbz	r3, 9000e9be <xQueueSemaphoreTake+0x2f6>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000e9b2:	6923      	ldr	r3, [r4, #16]
9000e9b4:	b93b      	cbnz	r3, 9000e9c6 <xQueueSemaphoreTake+0x2fe>
				taskEXIT_CRITICAL();
9000e9b6:	f7fe ffff 	bl	9000d9b8 <vPortExitCritical>
				return pdPASS;
9000e9ba:	2001      	movs	r0, #1
9000e9bc:	e74b      	b.n	9000e856 <xQueueSemaphoreTake+0x18e>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
9000e9be:	f001 f82f 	bl	9000fa20 <pvTaskIncrementMutexHeldCount>
9000e9c2:	60a0      	str	r0, [r4, #8]
9000e9c4:	e7f5      	b.n	9000e9b2 <xQueueSemaphoreTake+0x2ea>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000e9c6:	f104 0010 	add.w	r0, r4, #16
9000e9ca:	f000 feab 	bl	9000f724 <xTaskRemoveFromEventList>
9000e9ce:	2800      	cmp	r0, #0
9000e9d0:	d0f1      	beq.n	9000e9b6 <xQueueSemaphoreTake+0x2ee>
						queueYIELD_IF_USING_PREEMPTION();
9000e9d2:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000e9d6:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000e9da:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000e9de:	f3bf 8f4f 	dsb	sy
9000e9e2:	f3bf 8f6f 	isb	sy
9000e9e6:	e7e6      	b.n	9000e9b6 <xQueueSemaphoreTake+0x2ee>

9000e9e8 <xQueueReceiveFromISR>:
{
9000e9e8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	configASSERT( pxQueue );
9000e9ec:	b310      	cbz	r0, 9000ea34 <xQueueReceiveFromISR+0x4c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000e9ee:	460f      	mov	r7, r1
9000e9f0:	4604      	mov	r4, r0
9000e9f2:	4616      	mov	r6, r2
9000e9f4:	b191      	cbz	r1, 9000ea1c <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
9000e9f6:	f7ff f8ef 	bl	9000dbd8 <vPortValidateInterruptPriority>
	__asm volatile
9000e9fa:	f3ef 8911 	mrs	r9, BASEPRI
9000e9fe:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ea02:	f383 8811 	msr	BASEPRI, r3
9000ea06:	f3bf 8f6f 	isb	sy
9000ea0a:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
9000ea0e:	6ba5      	ldr	r5, [r4, #56]	@ 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
9000ea10:	b9cd      	cbnz	r5, 9000ea46 <xQueueReceiveFromISR+0x5e>
			xReturn = pdFAIL;
9000ea12:	4628      	mov	r0, r5
	__asm volatile
9000ea14:	f389 8811 	msr	BASEPRI, r9
}
9000ea18:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
9000ea1c:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9000ea1e:	2b00      	cmp	r3, #0
9000ea20:	d0e9      	beq.n	9000e9f6 <xQueueReceiveFromISR+0xe>
	__asm volatile
9000ea22:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ea26:	f383 8811 	msr	BASEPRI, r3
9000ea2a:	f3bf 8f6f 	isb	sy
9000ea2e:	f3bf 8f4f 	dsb	sy
9000ea32:	e7fe      	b.n	9000ea32 <xQueueReceiveFromISR+0x4a>
9000ea34:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ea38:	f383 8811 	msr	BASEPRI, r3
9000ea3c:	f3bf 8f6f 	isb	sy
9000ea40:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000ea44:	e7fe      	b.n	9000ea44 <xQueueReceiveFromISR+0x5c>
			const int8_t cRxLock = pxQueue->cRxLock;
9000ea46:	f894 8044 	ldrb.w	r8, [r4, #68]	@ 0x44
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000ea4a:	6c22      	ldr	r2, [r4, #64]	@ 0x40
			const int8_t cRxLock = pxQueue->cRxLock;
9000ea4c:	fa4f f888 	sxtb.w	r8, r8
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
9000ea50:	b142      	cbz	r2, 9000ea64 <xQueueReceiveFromISR+0x7c>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000ea52:	68e1      	ldr	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000ea54:	68a3      	ldr	r3, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000ea56:	4411      	add	r1, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000ea58:	4299      	cmp	r1, r3
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
9000ea5a:	60e1      	str	r1, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
9000ea5c:	d21c      	bcs.n	9000ea98 <xQueueReceiveFromISR+0xb0>
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
9000ea5e:	4638      	mov	r0, r7
9000ea60:	f01b f8ff 	bl	90029c62 <memcpy>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000ea64:	3d01      	subs	r5, #1
			if( cRxLock == queueUNLOCKED )
9000ea66:	f1b8 3fff 	cmp.w	r8, #4294967295
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
9000ea6a:	63a5      	str	r5, [r4, #56]	@ 0x38
			if( cRxLock == queueUNLOCKED )
9000ea6c:	d006      	beq.n	9000ea7c <xQueueReceiveFromISR+0x94>
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
9000ea6e:	f108 0301 	add.w	r3, r8, #1
9000ea72:	b25b      	sxtb	r3, r3
9000ea74:	f884 3044 	strb.w	r3, [r4, #68]	@ 0x44
			xReturn = pdPASS;
9000ea78:	2001      	movs	r0, #1
9000ea7a:	e7cb      	b.n	9000ea14 <xQueueReceiveFromISR+0x2c>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ea7c:	6923      	ldr	r3, [r4, #16]
9000ea7e:	2b00      	cmp	r3, #0
9000ea80:	d0fa      	beq.n	9000ea78 <xQueueReceiveFromISR+0x90>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ea82:	f104 0010 	add.w	r0, r4, #16
9000ea86:	f000 fe4d 	bl	9000f724 <xTaskRemoveFromEventList>
						if( pxHigherPriorityTaskWoken != NULL )
9000ea8a:	2e00      	cmp	r6, #0
9000ea8c:	d0f4      	beq.n	9000ea78 <xQueueReceiveFromISR+0x90>
9000ea8e:	2800      	cmp	r0, #0
9000ea90:	d0f2      	beq.n	9000ea78 <xQueueReceiveFromISR+0x90>
							*pxHigherPriorityTaskWoken = pdTRUE;
9000ea92:	2301      	movs	r3, #1
9000ea94:	6033      	str	r3, [r6, #0]
9000ea96:	e7ef      	b.n	9000ea78 <xQueueReceiveFromISR+0x90>
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
9000ea98:	6821      	ldr	r1, [r4, #0]
9000ea9a:	60e1      	str	r1, [r4, #12]
9000ea9c:	e7df      	b.n	9000ea5e <xQueueReceiveFromISR+0x76>
9000ea9e:	bf00      	nop

9000eaa0 <vQueueDelete>:
	configASSERT( pxQueue );
9000eaa0:	b1e0      	cbz	r0, 9000eadc <vQueueDelete+0x3c>

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
9000eaa2:	4b21      	ldr	r3, [pc, #132]	@ (9000eb28 <vQueueDelete+0x88>)
9000eaa4:	685a      	ldr	r2, [r3, #4]
9000eaa6:	4290      	cmp	r0, r2
9000eaa8:	d02b      	beq.n	9000eb02 <vQueueDelete+0x62>
9000eaaa:	68da      	ldr	r2, [r3, #12]
9000eaac:	4290      	cmp	r0, r2
9000eaae:	d02a      	beq.n	9000eb06 <vQueueDelete+0x66>
9000eab0:	695a      	ldr	r2, [r3, #20]
9000eab2:	4290      	cmp	r0, r2
9000eab4:	d029      	beq.n	9000eb0a <vQueueDelete+0x6a>
9000eab6:	69da      	ldr	r2, [r3, #28]
9000eab8:	4290      	cmp	r0, r2
9000eaba:	d028      	beq.n	9000eb0e <vQueueDelete+0x6e>
9000eabc:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
9000eabe:	4290      	cmp	r0, r2
9000eac0:	d027      	beq.n	9000eb12 <vQueueDelete+0x72>
9000eac2:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
9000eac4:	4290      	cmp	r0, r2
9000eac6:	d014      	beq.n	9000eaf2 <vQueueDelete+0x52>
9000eac8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
9000eaca:	4290      	cmp	r0, r2
9000eacc:	d023      	beq.n	9000eb16 <vQueueDelete+0x76>
9000eace:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
9000ead0:	4290      	cmp	r0, r2
9000ead2:	d022      	beq.n	9000eb1a <vQueueDelete+0x7a>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
9000ead4:	f890 3046 	ldrb.w	r3, [r0, #70]	@ 0x46
9000ead8:	b14b      	cbz	r3, 9000eaee <vQueueDelete+0x4e>
}
9000eada:	4770      	bx	lr
9000eadc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000eae0:	f383 8811 	msr	BASEPRI, r3
9000eae4:	f3bf 8f6f 	isb	sy
9000eae8:	f3bf 8f4f 	dsb	sy
	configASSERT( pxQueue );
9000eaec:	e7fe      	b.n	9000eaec <vQueueDelete+0x4c>
			vPortFree( pxQueue );
9000eaee:	f7fe be25 	b.w	9000d73c <vPortFree>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000eaf2:	2205      	movs	r2, #5
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
9000eaf4:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
9000eaf8:	ed9f 7b09 	vldr	d7, [pc, #36]	@ 9000eb20 <vQueueDelete+0x80>
9000eafc:	ed83 7b00 	vstr	d7, [r3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
				break;
9000eb00:	e7e8      	b.n	9000ead4 <vQueueDelete+0x34>
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000eb02:	2200      	movs	r2, #0
9000eb04:	e7f6      	b.n	9000eaf4 <vQueueDelete+0x54>
9000eb06:	2201      	movs	r2, #1
9000eb08:	e7f4      	b.n	9000eaf4 <vQueueDelete+0x54>
9000eb0a:	2202      	movs	r2, #2
9000eb0c:	e7f2      	b.n	9000eaf4 <vQueueDelete+0x54>
9000eb0e:	2203      	movs	r2, #3
9000eb10:	e7f0      	b.n	9000eaf4 <vQueueDelete+0x54>
9000eb12:	2204      	movs	r2, #4
9000eb14:	e7ee      	b.n	9000eaf4 <vQueueDelete+0x54>
9000eb16:	2206      	movs	r2, #6
9000eb18:	e7ec      	b.n	9000eaf4 <vQueueDelete+0x54>
9000eb1a:	2207      	movs	r2, #7
9000eb1c:	e7ea      	b.n	9000eaf4 <vQueueDelete+0x54>
9000eb1e:	bf00      	nop
	...
9000eb28:	24021318 	.word	0x24021318

9000eb2c <vQueueAddToRegistry>:
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
9000eb2c:	4b12      	ldr	r3, [pc, #72]	@ (9000eb78 <vQueueAddToRegistry+0x4c>)
9000eb2e:	681a      	ldr	r2, [r3, #0]
9000eb30:	b17a      	cbz	r2, 9000eb52 <vQueueAddToRegistry+0x26>
9000eb32:	689a      	ldr	r2, [r3, #8]
9000eb34:	b162      	cbz	r2, 9000eb50 <vQueueAddToRegistry+0x24>
9000eb36:	691a      	ldr	r2, [r3, #16]
9000eb38:	b192      	cbz	r2, 9000eb60 <vQueueAddToRegistry+0x34>
9000eb3a:	699a      	ldr	r2, [r3, #24]
9000eb3c:	b192      	cbz	r2, 9000eb64 <vQueueAddToRegistry+0x38>
9000eb3e:	6a1a      	ldr	r2, [r3, #32]
9000eb40:	b192      	cbz	r2, 9000eb68 <vQueueAddToRegistry+0x3c>
9000eb42:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
9000eb44:	b192      	cbz	r2, 9000eb6c <vQueueAddToRegistry+0x40>
9000eb46:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
9000eb48:	b192      	cbz	r2, 9000eb70 <vQueueAddToRegistry+0x44>
9000eb4a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
9000eb4c:	b192      	cbz	r2, 9000eb74 <vQueueAddToRegistry+0x48>
	}
9000eb4e:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000eb50:	2201      	movs	r2, #1
				xQueueRegistry[ ux ].xHandle = xQueue;
9000eb52:	eb03 0cc2 	add.w	ip, r3, r2, lsl #3
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
9000eb56:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
9000eb5a:	f8cc 0004 	str.w	r0, [ip, #4]
	}
9000eb5e:	4770      	bx	lr
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
9000eb60:	2202      	movs	r2, #2
9000eb62:	e7f6      	b.n	9000eb52 <vQueueAddToRegistry+0x26>
9000eb64:	2203      	movs	r2, #3
9000eb66:	e7f4      	b.n	9000eb52 <vQueueAddToRegistry+0x26>
9000eb68:	2204      	movs	r2, #4
9000eb6a:	e7f2      	b.n	9000eb52 <vQueueAddToRegistry+0x26>
9000eb6c:	2205      	movs	r2, #5
9000eb6e:	e7f0      	b.n	9000eb52 <vQueueAddToRegistry+0x26>
9000eb70:	2206      	movs	r2, #6
9000eb72:	e7ee      	b.n	9000eb52 <vQueueAddToRegistry+0x26>
9000eb74:	2207      	movs	r2, #7
9000eb76:	e7ec      	b.n	9000eb52 <vQueueAddToRegistry+0x26>
9000eb78:	24021318 	.word	0x24021318

9000eb7c <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
9000eb7c:	b570      	push	{r4, r5, r6, lr}
9000eb7e:	4605      	mov	r5, r0
9000eb80:	460e      	mov	r6, r1
9000eb82:	4614      	mov	r4, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
9000eb84:	f7fe fef6 	bl	9000d974 <vPortEnterCritical>
9000eb88:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
9000eb8c:	2bff      	cmp	r3, #255	@ 0xff
9000eb8e:	d102      	bne.n	9000eb96 <vQueueWaitForMessageRestricted+0x1a>
9000eb90:	2300      	movs	r3, #0
9000eb92:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
9000eb96:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
9000eb9a:	2bff      	cmp	r3, #255	@ 0xff
9000eb9c:	d102      	bne.n	9000eba4 <vQueueWaitForMessageRestricted+0x28>
9000eb9e:	2300      	movs	r3, #0
9000eba0:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
9000eba4:	f7fe ff08 	bl	9000d9b8 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
9000eba8:	6bab      	ldr	r3, [r5, #56]	@ 0x38
9000ebaa:	2b00      	cmp	r3, #0
9000ebac:	d043      	beq.n	9000ec36 <vQueueWaitForMessageRestricted+0xba>
	taskENTER_CRITICAL();
9000ebae:	f7fe fee1 	bl	9000d974 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
9000ebb2:	f895 3045 	ldrb.w	r3, [r5, #69]	@ 0x45
9000ebb6:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ebb8:	2c00      	cmp	r4, #0
9000ebba:	dd14      	ble.n	9000ebe6 <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ebbc:	f105 0624 	add.w	r6, r5, #36	@ 0x24
9000ebc0:	e003      	b.n	9000ebca <vQueueWaitForMessageRestricted+0x4e>
			--cTxLock;
9000ebc2:	1e63      	subs	r3, r4, #1
9000ebc4:	b2da      	uxtb	r2, r3
9000ebc6:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ebc8:	b16a      	cbz	r2, 9000ebe6 <vQueueWaitForMessageRestricted+0x6a>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ebca:	6a6b      	ldr	r3, [r5, #36]	@ 0x24
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ebcc:	4630      	mov	r0, r6
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
9000ebce:	b153      	cbz	r3, 9000ebe6 <vQueueWaitForMessageRestricted+0x6a>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
9000ebd0:	f000 fda8 	bl	9000f724 <xTaskRemoveFromEventList>
9000ebd4:	2800      	cmp	r0, #0
9000ebd6:	d0f4      	beq.n	9000ebc2 <vQueueWaitForMessageRestricted+0x46>
						vTaskMissedYield();
9000ebd8:	f000 fe38 	bl	9000f84c <vTaskMissedYield>
			--cTxLock;
9000ebdc:	1e63      	subs	r3, r4, #1
9000ebde:	b2da      	uxtb	r2, r3
9000ebe0:	b25c      	sxtb	r4, r3
		while( cTxLock > queueLOCKED_UNMODIFIED )
9000ebe2:	2a00      	cmp	r2, #0
9000ebe4:	d1f1      	bne.n	9000ebca <vQueueWaitForMessageRestricted+0x4e>
		pxQueue->cTxLock = queueUNLOCKED;
9000ebe6:	23ff      	movs	r3, #255	@ 0xff
9000ebe8:	f885 3045 	strb.w	r3, [r5, #69]	@ 0x45
	taskEXIT_CRITICAL();
9000ebec:	f7fe fee4 	bl	9000d9b8 <vPortExitCritical>
	taskENTER_CRITICAL();
9000ebf0:	f7fe fec0 	bl	9000d974 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
9000ebf4:	f895 3044 	ldrb.w	r3, [r5, #68]	@ 0x44
9000ebf8:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ebfa:	2c00      	cmp	r4, #0
9000ebfc:	dd14      	ble.n	9000ec28 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ebfe:	f105 0610 	add.w	r6, r5, #16
9000ec02:	e003      	b.n	9000ec0c <vQueueWaitForMessageRestricted+0x90>
				--cRxLock;
9000ec04:	1e63      	subs	r3, r4, #1
9000ec06:	b2da      	uxtb	r2, r3
9000ec08:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ec0a:	b16a      	cbz	r2, 9000ec28 <vQueueWaitForMessageRestricted+0xac>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ec0c:	692b      	ldr	r3, [r5, #16]
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ec0e:	4630      	mov	r0, r6
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
9000ec10:	b153      	cbz	r3, 9000ec28 <vQueueWaitForMessageRestricted+0xac>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
9000ec12:	f000 fd87 	bl	9000f724 <xTaskRemoveFromEventList>
9000ec16:	2800      	cmp	r0, #0
9000ec18:	d0f4      	beq.n	9000ec04 <vQueueWaitForMessageRestricted+0x88>
					vTaskMissedYield();
9000ec1a:	f000 fe17 	bl	9000f84c <vTaskMissedYield>
				--cRxLock;
9000ec1e:	1e63      	subs	r3, r4, #1
9000ec20:	b2da      	uxtb	r2, r3
9000ec22:	b25c      	sxtb	r4, r3
		while( cRxLock > queueLOCKED_UNMODIFIED )
9000ec24:	2a00      	cmp	r2, #0
9000ec26:	d1f1      	bne.n	9000ec0c <vQueueWaitForMessageRestricted+0x90>
		pxQueue->cRxLock = queueUNLOCKED;
9000ec28:	23ff      	movs	r3, #255	@ 0xff
9000ec2a:	f885 3044 	strb.w	r3, [r5, #68]	@ 0x44
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
	}
9000ec2e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
9000ec32:	f7fe bec1 	b.w	9000d9b8 <vPortExitCritical>
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
9000ec36:	4622      	mov	r2, r4
9000ec38:	4631      	mov	r1, r6
9000ec3a:	f105 0024 	add.w	r0, r5, #36	@ 0x24
9000ec3e:	f000 fd27 	bl	9000f690 <vTaskPlaceOnEventListRestricted>
9000ec42:	e7b4      	b.n	9000ebae <vQueueWaitForMessageRestricted+0x32>

9000ec44 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
9000ec44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000ec48:	4605      	mov	r5, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
9000ec4a:	f7fe fe93 	bl	9000d974 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
9000ec4e:	4a33      	ldr	r2, [pc, #204]	@ (9000ed1c <prvAddNewTaskToReadyList+0xd8>)
		if( pxCurrentTCB == NULL )
9000ec50:	4e33      	ldr	r6, [pc, #204]	@ (9000ed20 <prvAddNewTaskToReadyList+0xdc>)
		uxCurrentNumberOfTasks++;
9000ec52:	6813      	ldr	r3, [r2, #0]
9000ec54:	3301      	adds	r3, #1
9000ec56:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
9000ec58:	6833      	ldr	r3, [r6, #0]
9000ec5a:	2b00      	cmp	r3, #0
9000ec5c:	d031      	beq.n	9000ecc2 <prvAddNewTaskToReadyList+0x7e>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
9000ec5e:	4c31      	ldr	r4, [pc, #196]	@ (9000ed24 <prvAddNewTaskToReadyList+0xe0>)
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000ec60:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
			if( xSchedulerRunning == pdFALSE )
9000ec62:	6823      	ldr	r3, [r4, #0]
9000ec64:	b333      	cbz	r3, 9000ecb4 <prvAddNewTaskToReadyList+0x70>
9000ec66:	4f30      	ldr	r7, [pc, #192]	@ (9000ed28 <prvAddNewTaskToReadyList+0xe4>)
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
9000ec68:	4a30      	ldr	r2, [pc, #192]	@ (9000ed2c <prvAddNewTaskToReadyList+0xe8>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
9000ec6a:	4931      	ldr	r1, [pc, #196]	@ (9000ed30 <prvAddNewTaskToReadyList+0xec>)
		uxTaskNumber++;
9000ec6c:	6813      	ldr	r3, [r2, #0]
9000ec6e:	3301      	adds	r3, #1
9000ec70:	6013      	str	r3, [r2, #0]
			pxNewTCB->uxTCBNumber = uxTaskNumber;
9000ec72:	646b      	str	r3, [r5, #68]	@ 0x44
		prvAddTaskToReadyList( pxNewTCB );
9000ec74:	680b      	ldr	r3, [r1, #0]
9000ec76:	4283      	cmp	r3, r0
9000ec78:	d200      	bcs.n	9000ec7c <prvAddNewTaskToReadyList+0x38>
9000ec7a:	6008      	str	r0, [r1, #0]
9000ec7c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000ec80:	1d29      	adds	r1, r5, #4
9000ec82:	eb07 0080 	add.w	r0, r7, r0, lsl #2
9000ec86:	f7fe fdd3 	bl	9000d830 <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
9000ec8a:	f7fe fe95 	bl	9000d9b8 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
9000ec8e:	6823      	ldr	r3, [r4, #0]
9000ec90:	b173      	cbz	r3, 9000ecb0 <prvAddNewTaskToReadyList+0x6c>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
9000ec92:	6832      	ldr	r2, [r6, #0]
9000ec94:	6aeb      	ldr	r3, [r5, #44]	@ 0x2c
9000ec96:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9000ec98:	429a      	cmp	r2, r3
9000ec9a:	d209      	bcs.n	9000ecb0 <prvAddNewTaskToReadyList+0x6c>
		{
			taskYIELD_IF_USING_PREEMPTION();
9000ec9c:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000eca0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000eca4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000eca8:	f3bf 8f4f 	dsb	sy
9000ecac:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
9000ecb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000ecb4:	6833      	ldr	r3, [r6, #0]
9000ecb6:	4f1c      	ldr	r7, [pc, #112]	@ (9000ed28 <prvAddNewTaskToReadyList+0xe4>)
9000ecb8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000ecba:	4283      	cmp	r3, r0
9000ecbc:	d8d4      	bhi.n	9000ec68 <prvAddNewTaskToReadyList+0x24>
					pxCurrentTCB = pxNewTCB;
9000ecbe:	6035      	str	r5, [r6, #0]
9000ecc0:	e7d2      	b.n	9000ec68 <prvAddNewTaskToReadyList+0x24>
			pxCurrentTCB = pxNewTCB;
9000ecc2:	6035      	str	r5, [r6, #0]
			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
9000ecc4:	6813      	ldr	r3, [r2, #0]
9000ecc6:	2b01      	cmp	r3, #1
9000ecc8:	d003      	beq.n	9000ecd2 <prvAddNewTaskToReadyList+0x8e>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
9000ecca:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
9000eccc:	4f16      	ldr	r7, [pc, #88]	@ (9000ed28 <prvAddNewTaskToReadyList+0xe4>)
9000ecce:	4c15      	ldr	r4, [pc, #84]	@ (9000ed24 <prvAddNewTaskToReadyList+0xe0>)
9000ecd0:	e7ca      	b.n	9000ec68 <prvAddNewTaskToReadyList+0x24>
9000ecd2:	4f15      	ldr	r7, [pc, #84]	@ (9000ed28 <prvAddNewTaskToReadyList+0xe4>)
9000ecd4:	463c      	mov	r4, r7
9000ecd6:	f507 688c 	add.w	r8, r7, #1120	@ 0x460
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000ecda:	4620      	mov	r0, r4
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000ecdc:	3414      	adds	r4, #20
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
9000ecde:	f7fe fd97 	bl	9000d810 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
9000ece2:	45a0      	cmp	r8, r4
9000ece4:	d1f9      	bne.n	9000ecda <prvAddNewTaskToReadyList+0x96>
	}

	vListInitialise( &xDelayedTaskList1 );
9000ece6:	f8df 8064 	ldr.w	r8, [pc, #100]	@ 9000ed4c <prvAddNewTaskToReadyList+0x108>
	vListInitialise( &xDelayedTaskList2 );
9000ecea:	4c12      	ldr	r4, [pc, #72]	@ (9000ed34 <prvAddNewTaskToReadyList+0xf0>)
	vListInitialise( &xDelayedTaskList1 );
9000ecec:	4640      	mov	r0, r8
9000ecee:	f7fe fd8f 	bl	9000d810 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
9000ecf2:	4620      	mov	r0, r4
9000ecf4:	f7fe fd8c 	bl	9000d810 <vListInitialise>
	vListInitialise( &xPendingReadyList );
9000ecf8:	480f      	ldr	r0, [pc, #60]	@ (9000ed38 <prvAddNewTaskToReadyList+0xf4>)
9000ecfa:	f7fe fd89 	bl	9000d810 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
9000ecfe:	480f      	ldr	r0, [pc, #60]	@ (9000ed3c <prvAddNewTaskToReadyList+0xf8>)
9000ed00:	f7fe fd86 	bl	9000d810 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
9000ed04:	480e      	ldr	r0, [pc, #56]	@ (9000ed40 <prvAddNewTaskToReadyList+0xfc>)
9000ed06:	f7fe fd83 	bl	9000d810 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
9000ed0a:	4b0e      	ldr	r3, [pc, #56]	@ (9000ed44 <prvAddNewTaskToReadyList+0x100>)
		prvAddTaskToReadyList( pxNewTCB );
9000ed0c:	6ae8      	ldr	r0, [r5, #44]	@ 0x2c
	pxDelayedTaskList = &xDelayedTaskList1;
9000ed0e:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
9000ed12:	4b0d      	ldr	r3, [pc, #52]	@ (9000ed48 <prvAddNewTaskToReadyList+0x104>)
9000ed14:	601c      	str	r4, [r3, #0]
9000ed16:	4c03      	ldr	r4, [pc, #12]	@ (9000ed24 <prvAddNewTaskToReadyList+0xe0>)
}
9000ed18:	e7a6      	b.n	9000ec68 <prvAddNewTaskToReadyList+0x24>
9000ed1a:	bf00      	nop
9000ed1c:	2402137c 	.word	0x2402137c
9000ed20:	24021850 	.word	0x24021850
9000ed24:	24021370 	.word	0x24021370
9000ed28:	240213f0 	.word	0x240213f0
9000ed2c:	24021360 	.word	0x24021360
9000ed30:	24021374 	.word	0x24021374
9000ed34:	240213c8 	.word	0x240213c8
9000ed38:	240213ac 	.word	0x240213ac
9000ed3c:	24021398 	.word	0x24021398
9000ed40:	24021380 	.word	0x24021380
9000ed44:	240213c4 	.word	0x240213c4
9000ed48:	240213c0 	.word	0x240213c0
9000ed4c:	240213dc 	.word	0x240213dc

9000ed50 <prvIdleTask>:
{
9000ed50:	b580      	push	{r7, lr}
9000ed52:	4c22      	ldr	r4, [pc, #136]	@ (9000eddc <prvIdleTask+0x8c>)
9000ed54:	4e22      	ldr	r6, [pc, #136]	@ (9000ede0 <prvIdleTask+0x90>)
9000ed56:	4d23      	ldr	r5, [pc, #140]	@ (9000ede4 <prvIdleTask+0x94>)
9000ed58:	4f23      	ldr	r7, [pc, #140]	@ (9000ede8 <prvIdleTask+0x98>)
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000ed5a:	6823      	ldr	r3, [r4, #0]
9000ed5c:	b353      	cbz	r3, 9000edb4 <prvIdleTask+0x64>
		{
			taskENTER_CRITICAL();
9000ed5e:	f7fe fe09 	bl	9000d974 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ed62:	68f3      	ldr	r3, [r6, #12]
9000ed64:	f8d3 800c 	ldr.w	r8, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ed68:	f108 0004 	add.w	r0, r8, #4
9000ed6c:	f7fe fd86 	bl	9000d87c <uxListRemove>
				--uxCurrentNumberOfTasks;
9000ed70:	682b      	ldr	r3, [r5, #0]
9000ed72:	3b01      	subs	r3, #1
9000ed74:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
9000ed76:	6823      	ldr	r3, [r4, #0]
9000ed78:	3b01      	subs	r3, #1
9000ed7a:	6023      	str	r3, [r4, #0]
			}
			taskEXIT_CRITICAL();
9000ed7c:	f7fe fe1c 	bl	9000d9b8 <vPortExitCritical>
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
9000ed80:	f898 305d 	ldrb.w	r3, [r8, #93]	@ 0x5d
9000ed84:	b163      	cbz	r3, 9000eda0 <prvIdleTask+0x50>
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
				vPortFree( pxTCB );
			}
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
9000ed86:	2b01      	cmp	r3, #1
9000ed88:	d024      	beq.n	9000edd4 <prvIdleTask+0x84>
			}
			else
			{
				/* Neither the stack nor the TCB were allocated dynamically, so
				nothing needs to be freed. */
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
9000ed8a:	2b02      	cmp	r3, #2
9000ed8c:	d0e5      	beq.n	9000ed5a <prvIdleTask+0xa>
9000ed8e:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ed92:	f383 8811 	msr	BASEPRI, r3
9000ed96:	f3bf 8f6f 	isb	sy
9000ed9a:	f3bf 8f4f 	dsb	sy
9000ed9e:	e7fe      	b.n	9000ed9e <prvIdleTask+0x4e>
				vPortFree( pxTCB->pxStack );
9000eda0:	f8d8 0030 	ldr.w	r0, [r8, #48]	@ 0x30
9000eda4:	f7fe fcca 	bl	9000d73c <vPortFree>
				vPortFree( pxTCB );
9000eda8:	4640      	mov	r0, r8
9000edaa:	f7fe fcc7 	bl	9000d73c <vPortFree>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
9000edae:	6823      	ldr	r3, [r4, #0]
9000edb0:	2b00      	cmp	r3, #0
9000edb2:	d1d4      	bne.n	9000ed5e <prvIdleTask+0xe>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
9000edb4:	683b      	ldr	r3, [r7, #0]
9000edb6:	2b01      	cmp	r3, #1
9000edb8:	d909      	bls.n	9000edce <prvIdleTask+0x7e>
				taskYIELD();
9000edba:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000edbe:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000edc2:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000edc6:	f3bf 8f4f 	dsb	sy
9000edca:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
9000edce:	f7f4 fccb 	bl	90003768 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
9000edd2:	e7c2      	b.n	9000ed5a <prvIdleTask+0xa>
				vPortFree( pxTCB );
9000edd4:	4640      	mov	r0, r8
9000edd6:	f7fe fcb1 	bl	9000d73c <vPortFree>
9000edda:	e7be      	b.n	9000ed5a <prvIdleTask+0xa>
9000eddc:	24021394 	.word	0x24021394
9000ede0:	24021398 	.word	0x24021398
9000ede4:	2402137c 	.word	0x2402137c
9000ede8:	240213f0 	.word	0x240213f0

9000edec <xTaskIncrementTick.part.0>:
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000edec:	4b49      	ldr	r3, [pc, #292]	@ (9000ef14 <xTaskIncrementTick.part.0+0x128>)
BaseType_t xTaskIncrementTick( void )
9000edee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000edf2:	681e      	ldr	r6, [r3, #0]
BaseType_t xTaskIncrementTick( void )
9000edf4:	b083      	sub	sp, #12
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
9000edf6:	3601      	adds	r6, #1
		xTickCount = xConstTickCount;
9000edf8:	601e      	str	r6, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
9000edfa:	2e00      	cmp	r6, #0
9000edfc:	d03e      	beq.n	9000ee7c <xTaskIncrementTick.part.0+0x90>
9000edfe:	4b46      	ldr	r3, [pc, #280]	@ (9000ef18 <xTaskIncrementTick.part.0+0x12c>)
9000ee00:	9301      	str	r3, [sp, #4]
		if( xConstTickCount >= xNextTaskUnblockTime )
9000ee02:	681b      	ldr	r3, [r3, #0]
9000ee04:	429e      	cmp	r6, r3
9000ee06:	d346      	bcc.n	9000ee96 <xTaskIncrementTick.part.0+0xaa>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ee08:	4f44      	ldr	r7, [pc, #272]	@ (9000ef1c <xTaskIncrementTick.part.0+0x130>)
9000ee0a:	683b      	ldr	r3, [r7, #0]
9000ee0c:	681d      	ldr	r5, [r3, #0]
9000ee0e:	2d00      	cmp	r5, #0
9000ee10:	d077      	beq.n	9000ef02 <xTaskIncrementTick.part.0+0x116>
BaseType_t xSwitchRequired = pdFALSE;
9000ee12:	2500      	movs	r5, #0
9000ee14:	f8df 9114 	ldr.w	r9, [pc, #276]	@ 9000ef2c <xTaskIncrementTick.part.0+0x140>
9000ee18:	f8df a114 	ldr.w	sl, [pc, #276]	@ 9000ef30 <xTaskIncrementTick.part.0+0x144>
					prvAddTaskToReadyList( pxTCB );
9000ee1c:	f8df 8114 	ldr.w	r8, [pc, #276]	@ 9000ef34 <xTaskIncrementTick.part.0+0x148>
9000ee20:	e020      	b.n	9000ee64 <xTaskIncrementTick.part.0+0x78>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ee22:	f7fe fd2b 	bl	9000d87c <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000ee26:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000ee28:	f104 0018 	add.w	r0, r4, #24
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
9000ee2c:	b10b      	cbz	r3, 9000ee32 <xTaskIncrementTick.part.0+0x46>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000ee2e:	f7fe fd25 	bl	9000d87c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000ee32:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000ee34:	4659      	mov	r1, fp
9000ee36:	f8d8 2000 	ldr.w	r2, [r8]
9000ee3a:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000ee3e:	4293      	cmp	r3, r2
9000ee40:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000ee44:	d901      	bls.n	9000ee4a <xTaskIncrementTick.part.0+0x5e>
9000ee46:	f8c8 3000 	str.w	r3, [r8]
9000ee4a:	f7fe fcf1 	bl	9000d830 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000ee4e:	f8da 2000 	ldr.w	r2, [sl]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ee52:	683b      	ldr	r3, [r7, #0]
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000ee54:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
9000ee56:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ee58:	681b      	ldr	r3, [r3, #0]
							xSwitchRequired = pdTRUE;
9000ee5a:	4291      	cmp	r1, r2
9000ee5c:	bf28      	it	cs
9000ee5e:	2501      	movcs	r5, #1
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000ee60:	2b00      	cmp	r3, #0
9000ee62:	d052      	beq.n	9000ef0a <xTaskIncrementTick.part.0+0x11e>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ee64:	683b      	ldr	r3, [r7, #0]
9000ee66:	68db      	ldr	r3, [r3, #12]
9000ee68:	68dc      	ldr	r4, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
9000ee6a:	6863      	ldr	r3, [r4, #4]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ee6c:	f104 0b04 	add.w	fp, r4, #4
					if( xConstTickCount < xItemValue )
9000ee70:	429e      	cmp	r6, r3
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ee72:	4658      	mov	r0, fp
					if( xConstTickCount < xItemValue )
9000ee74:	d2d5      	bcs.n	9000ee22 <xTaskIncrementTick.part.0+0x36>
						xNextTaskUnblockTime = xItemValue;
9000ee76:	9a01      	ldr	r2, [sp, #4]
9000ee78:	6013      	str	r3, [r2, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
9000ee7a:	e011      	b.n	9000eea0 <xTaskIncrementTick.part.0+0xb4>
			taskSWITCH_DELAYED_LISTS();
9000ee7c:	4b27      	ldr	r3, [pc, #156]	@ (9000ef1c <xTaskIncrementTick.part.0+0x130>)
9000ee7e:	681a      	ldr	r2, [r3, #0]
9000ee80:	6812      	ldr	r2, [r2, #0]
9000ee82:	b30a      	cbz	r2, 9000eec8 <xTaskIncrementTick.part.0+0xdc>
9000ee84:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000ee88:	f383 8811 	msr	BASEPRI, r3
9000ee8c:	f3bf 8f6f 	isb	sy
9000ee90:	f3bf 8f4f 	dsb	sy
9000ee94:	e7fe      	b.n	9000ee94 <xTaskIncrementTick.part.0+0xa8>
BaseType_t xSwitchRequired = pdFALSE;
9000ee96:	2500      	movs	r5, #0
9000ee98:	f8df 9090 	ldr.w	r9, [pc, #144]	@ 9000ef2c <xTaskIncrementTick.part.0+0x140>
9000ee9c:	f8df a090 	ldr.w	sl, [pc, #144]	@ 9000ef30 <xTaskIncrementTick.part.0+0x144>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000eea0:	f8da 3000 	ldr.w	r3, [sl]
			if( xYieldPending != pdFALSE )
9000eea4:	491e      	ldr	r1, [pc, #120]	@ (9000ef20 <xTaskIncrementTick.part.0+0x134>)
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
9000eea6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000eea8:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000eeac:	009b      	lsls	r3, r3, #2
9000eeae:	f859 2003 	ldr.w	r2, [r9, r3]
			if( xYieldPending != pdFALSE )
9000eeb2:	680b      	ldr	r3, [r1, #0]
				xSwitchRequired = pdTRUE;
9000eeb4:	2a02      	cmp	r2, #2
9000eeb6:	bf28      	it	cs
9000eeb8:	2501      	movcs	r5, #1
				xSwitchRequired = pdTRUE;
9000eeba:	2b00      	cmp	r3, #0
}
9000eebc:	bf0c      	ite	eq
9000eebe:	4628      	moveq	r0, r5
9000eec0:	2001      	movne	r0, #1
9000eec2:	b003      	add	sp, #12
9000eec4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
			taskSWITCH_DELAYED_LISTS();
9000eec8:	4a16      	ldr	r2, [pc, #88]	@ (9000ef24 <xTaskIncrementTick.part.0+0x138>)
9000eeca:	6818      	ldr	r0, [r3, #0]
9000eecc:	6811      	ldr	r1, [r2, #0]
9000eece:	6019      	str	r1, [r3, #0]
9000eed0:	4915      	ldr	r1, [pc, #84]	@ (9000ef28 <xTaskIncrementTick.part.0+0x13c>)
9000eed2:	6010      	str	r0, [r2, #0]
9000eed4:	680a      	ldr	r2, [r1, #0]
9000eed6:	3201      	adds	r2, #1
9000eed8:	600a      	str	r2, [r1, #0]

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000eeda:	681a      	ldr	r2, [r3, #0]
9000eedc:	6812      	ldr	r2, [r2, #0]
9000eede:	b93a      	cbnz	r2, 9000eef0 <xTaskIncrementTick.part.0+0x104>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
9000eee0:	4b0d      	ldr	r3, [pc, #52]	@ (9000ef18 <xTaskIncrementTick.part.0+0x12c>)
9000eee2:	461a      	mov	r2, r3
9000eee4:	9301      	str	r3, [sp, #4]
9000eee6:	f04f 33ff 	mov.w	r3, #4294967295
9000eeea:	6013      	str	r3, [r2, #0]
9000eeec:	4613      	mov	r3, r2
9000eeee:	e788      	b.n	9000ee02 <xTaskIncrementTick.part.0+0x16>
	{
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000eef0:	681b      	ldr	r3, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000eef2:	4a09      	ldr	r2, [pc, #36]	@ (9000ef18 <xTaskIncrementTick.part.0+0x12c>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000eef4:	68db      	ldr	r3, [r3, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000eef6:	9201      	str	r2, [sp, #4]
9000eef8:	68db      	ldr	r3, [r3, #12]
9000eefa:	685b      	ldr	r3, [r3, #4]
9000eefc:	6013      	str	r3, [r2, #0]
9000eefe:	4613      	mov	r3, r2
	}
}
9000ef00:	e77f      	b.n	9000ee02 <xTaskIncrementTick.part.0+0x16>
9000ef02:	f8df 9028 	ldr.w	r9, [pc, #40]	@ 9000ef2c <xTaskIncrementTick.part.0+0x140>
9000ef06:	f8df a028 	ldr.w	sl, [pc, #40]	@ 9000ef30 <xTaskIncrementTick.part.0+0x144>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000ef0a:	f04f 33ff 	mov.w	r3, #4294967295
9000ef0e:	9a01      	ldr	r2, [sp, #4]
9000ef10:	6013      	str	r3, [r2, #0]
					break;
9000ef12:	e7c5      	b.n	9000eea0 <xTaskIncrementTick.part.0+0xb4>
9000ef14:	24021378 	.word	0x24021378
9000ef18:	2402135c 	.word	0x2402135c
9000ef1c:	240213c4 	.word	0x240213c4
9000ef20:	24021368 	.word	0x24021368
9000ef24:	240213c0 	.word	0x240213c0
9000ef28:	24021364 	.word	0x24021364
9000ef2c:	240213f0 	.word	0x240213f0
9000ef30:	24021850 	.word	0x24021850
9000ef34:	24021374 	.word	0x24021374

9000ef38 <xTaskResumeAll.part.0>:
BaseType_t xTaskResumeAll( void )
9000ef38:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
		--uxSchedulerSuspended;
9000ef3c:	4d42      	ldr	r5, [pc, #264]	@ (9000f048 <xTaskResumeAll.part.0+0x110>)
	taskENTER_CRITICAL();
9000ef3e:	f7fe fd19 	bl	9000d974 <vPortEnterCritical>
		--uxSchedulerSuspended;
9000ef42:	682b      	ldr	r3, [r5, #0]
9000ef44:	3b01      	subs	r3, #1
9000ef46:	602b      	str	r3, [r5, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000ef48:	682b      	ldr	r3, [r5, #0]
9000ef4a:	2b00      	cmp	r3, #0
9000ef4c:	d165      	bne.n	9000f01a <xTaskResumeAll.part.0+0xe2>
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
9000ef4e:	4b3f      	ldr	r3, [pc, #252]	@ (9000f04c <xTaskResumeAll.part.0+0x114>)
9000ef50:	681b      	ldr	r3, [r3, #0]
9000ef52:	2b00      	cmp	r3, #0
9000ef54:	d061      	beq.n	9000f01a <xTaskResumeAll.part.0+0xe2>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000ef56:	4e3e      	ldr	r6, [pc, #248]	@ (9000f050 <xTaskResumeAll.part.0+0x118>)
9000ef58:	6833      	ldr	r3, [r6, #0]
9000ef5a:	2b00      	cmp	r3, #0
9000ef5c:	d070      	beq.n	9000f040 <xTaskResumeAll.part.0+0x108>
9000ef5e:	4f3d      	ldr	r7, [pc, #244]	@ (9000f054 <xTaskResumeAll.part.0+0x11c>)
9000ef60:	f8df 9100 	ldr.w	r9, [pc, #256]	@ 9000f064 <xTaskResumeAll.part.0+0x12c>
9000ef64:	f8df 8100 	ldr.w	r8, [pc, #256]	@ 9000f068 <xTaskResumeAll.part.0+0x130>
9000ef68:	f8df a100 	ldr.w	sl, [pc, #256]	@ 9000f06c <xTaskResumeAll.part.0+0x134>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000ef6c:	68f3      	ldr	r3, [r6, #12]
9000ef6e:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ef70:	f104 0b04 	add.w	fp, r4, #4
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
9000ef74:	f104 0018 	add.w	r0, r4, #24
9000ef78:	f7fe fc80 	bl	9000d87c <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
9000ef7c:	4658      	mov	r0, fp
9000ef7e:	f7fe fc7d 	bl	9000d87c <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
9000ef82:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
9000ef84:	683a      	ldr	r2, [r7, #0]
9000ef86:	4659      	mov	r1, fp
9000ef88:	eb03 0083 	add.w	r0, r3, r3, lsl #2
9000ef8c:	4293      	cmp	r3, r2
9000ef8e:	eb09 0080 	add.w	r0, r9, r0, lsl #2
9000ef92:	d900      	bls.n	9000ef96 <xTaskResumeAll.part.0+0x5e>
9000ef94:	603b      	str	r3, [r7, #0]
9000ef96:	f7fe fc4b 	bl	9000d830 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
9000ef9a:	f8d8 3000 	ldr.w	r3, [r8]
9000ef9e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000efa0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000efa2:	429a      	cmp	r2, r3
9000efa4:	d33f      	bcc.n	9000f026 <xTaskResumeAll.part.0+0xee>
						xYieldPending = pdTRUE;
9000efa6:	2301      	movs	r3, #1
9000efa8:	f8ca 3000 	str.w	r3, [sl]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000efac:	6833      	ldr	r3, [r6, #0]
9000efae:	2b00      	cmp	r3, #0
9000efb0:	d1dc      	bne.n	9000ef6c <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000efb2:	4b29      	ldr	r3, [pc, #164]	@ (9000f058 <xTaskResumeAll.part.0+0x120>)
9000efb4:	681a      	ldr	r2, [r3, #0]
9000efb6:	6812      	ldr	r2, [r2, #0]
9000efb8:	2a00      	cmp	r2, #0
9000efba:	d03c      	beq.n	9000f036 <xTaskResumeAll.part.0+0xfe>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000efbc:	681a      	ldr	r2, [r3, #0]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000efbe:	4b27      	ldr	r3, [pc, #156]	@ (9000f05c <xTaskResumeAll.part.0+0x124>)
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000efc0:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
9000efc2:	68d2      	ldr	r2, [r2, #12]
9000efc4:	6852      	ldr	r2, [r2, #4]
9000efc6:	601a      	str	r2, [r3, #0]
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
9000efc8:	4e25      	ldr	r6, [pc, #148]	@ (9000f060 <xTaskResumeAll.part.0+0x128>)
9000efca:	6834      	ldr	r4, [r6, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
9000efcc:	b194      	cbz	r4, 9000eff4 <xTaskResumeAll.part.0+0xbc>
								xYieldPending = pdTRUE;
9000efce:	2701      	movs	r7, #1
9000efd0:	e006      	b.n	9000efe0 <xTaskResumeAll.part.0+0xa8>
9000efd2:	f7ff ff0b 	bl	9000edec <xTaskIncrementTick.part.0>
							if( xTaskIncrementTick() != pdFALSE )
9000efd6:	b108      	cbz	r0, 9000efdc <xTaskResumeAll.part.0+0xa4>
								xYieldPending = pdTRUE;
9000efd8:	f8ca 7000 	str.w	r7, [sl]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000efdc:	3c01      	subs	r4, #1
9000efde:	d008      	beq.n	9000eff2 <xTaskResumeAll.part.0+0xba>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000efe0:	682b      	ldr	r3, [r5, #0]
9000efe2:	2b00      	cmp	r3, #0
9000efe4:	d0f5      	beq.n	9000efd2 <xTaskResumeAll.part.0+0x9a>
		++xPendedTicks;
9000efe6:	6833      	ldr	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000efe8:	3c01      	subs	r4, #1
		++xPendedTicks;
9000efea:	f103 0301 	add.w	r3, r3, #1
9000efee:	6033      	str	r3, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
9000eff0:	d1f6      	bne.n	9000efe0 <xTaskResumeAll.part.0+0xa8>
						xPendedTicks = 0;
9000eff2:	6034      	str	r4, [r6, #0]
				if( xYieldPending != pdFALSE )
9000eff4:	f8da 3000 	ldr.w	r3, [sl]
9000eff8:	b17b      	cbz	r3, 9000f01a <xTaskResumeAll.part.0+0xe2>
					taskYIELD_IF_USING_PREEMPTION();
9000effa:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000effe:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f002:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f006:	f3bf 8f4f 	dsb	sy
9000f00a:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
9000f00e:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
9000f010:	f7fe fcd2 	bl	9000d9b8 <vPortExitCritical>
}
9000f014:	4620      	mov	r0, r4
9000f016:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
BaseType_t xAlreadyYielded = pdFALSE;
9000f01a:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
9000f01c:	f7fe fccc 	bl	9000d9b8 <vPortExitCritical>
}
9000f020:	4620      	mov	r0, r4
9000f022:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
9000f026:	6833      	ldr	r3, [r6, #0]
9000f028:	2b00      	cmp	r3, #0
9000f02a:	d19f      	bne.n	9000ef6c <xTaskResumeAll.part.0+0x34>
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
9000f02c:	4b0a      	ldr	r3, [pc, #40]	@ (9000f058 <xTaskResumeAll.part.0+0x120>)
9000f02e:	681a      	ldr	r2, [r3, #0]
9000f030:	6812      	ldr	r2, [r2, #0]
9000f032:	2a00      	cmp	r2, #0
9000f034:	d1c2      	bne.n	9000efbc <xTaskResumeAll.part.0+0x84>
		xNextTaskUnblockTime = portMAX_DELAY;
9000f036:	4b09      	ldr	r3, [pc, #36]	@ (9000f05c <xTaskResumeAll.part.0+0x124>)
9000f038:	f04f 32ff 	mov.w	r2, #4294967295
9000f03c:	601a      	str	r2, [r3, #0]
9000f03e:	e7c3      	b.n	9000efc8 <xTaskResumeAll.part.0+0x90>
9000f040:	f8df a028 	ldr.w	sl, [pc, #40]	@ 9000f06c <xTaskResumeAll.part.0+0x134>
9000f044:	e7c0      	b.n	9000efc8 <xTaskResumeAll.part.0+0x90>
9000f046:	bf00      	nop
9000f048:	24021358 	.word	0x24021358
9000f04c:	2402137c 	.word	0x2402137c
9000f050:	240213ac 	.word	0x240213ac
9000f054:	24021374 	.word	0x24021374
9000f058:	240213c4 	.word	0x240213c4
9000f05c:	2402135c 	.word	0x2402135c
9000f060:	2402136c 	.word	0x2402136c
9000f064:	240213f0 	.word	0x240213f0
9000f068:	24021850 	.word	0x24021850
9000f06c:	24021368 	.word	0x24021368

9000f070 <xTaskCreateStatic>:
	{
9000f070:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9000f074:	b083      	sub	sp, #12
9000f076:	4698      	mov	r8, r3
		configASSERT( puxStackBuffer != NULL );
9000f078:	e9dd 340b 	ldrd	r3, r4, [sp, #44]	@ 0x2c
9000f07c:	b1bb      	cbz	r3, 9000f0ae <xTaskCreateStatic+0x3e>
		configASSERT( pxTaskBuffer != NULL );
9000f07e:	b16c      	cbz	r4, 9000f09c <xTaskCreateStatic+0x2c>
			volatile size_t xSize = sizeof( StaticTask_t );
9000f080:	2360      	movs	r3, #96	@ 0x60
9000f082:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( TCB_t ) );
9000f084:	9b01      	ldr	r3, [sp, #4]
9000f086:	2b60      	cmp	r3, #96	@ 0x60
9000f088:	d01a      	beq.n	9000f0c0 <xTaskCreateStatic+0x50>
9000f08a:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f08e:	f383 8811 	msr	BASEPRI, r3
9000f092:	f3bf 8f6f 	isb	sy
9000f096:	f3bf 8f4f 	dsb	sy
9000f09a:	e7fe      	b.n	9000f09a <xTaskCreateStatic+0x2a>
9000f09c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f0a0:	f383 8811 	msr	BASEPRI, r3
9000f0a4:	f3bf 8f6f 	isb	sy
9000f0a8:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000f0ac:	e7fe      	b.n	9000f0ac <xTaskCreateStatic+0x3c>
9000f0ae:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f0b2:	f383 8811 	msr	BASEPRI, r3
9000f0b6:	f3bf 8f6f 	isb	sy
9000f0ba:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000f0be:	e7fe      	b.n	9000f0be <xTaskCreateStatic+0x4e>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000f0c0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f0c2:	0096      	lsls	r6, r2, #2
9000f0c4:	4607      	mov	r7, r0
9000f0c6:	460d      	mov	r5, r1
9000f0c8:	4618      	mov	r0, r3
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000f0ca:	6323      	str	r3, [r4, #48]	@ 0x30
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000f0cc:	9b01      	ldr	r3, [sp, #4]
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000f0ce:	2302      	movs	r3, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f0d0:	4632      	mov	r2, r6
9000f0d2:	21a5      	movs	r1, #165	@ 0xa5
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000f0d4:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f0d8:	f01a fce2 	bl	90029aa0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f0dc:	1f32      	subs	r2, r6, #4
9000f0de:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000f0e0:	4413      	add	r3, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000f0e2:	f023 0607 	bic.w	r6, r3, #7
	if( pcName != NULL )
9000f0e6:	2d00      	cmp	r5, #0
9000f0e8:	d068      	beq.n	9000f1bc <xTaskCreateStatic+0x14c>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f0ea:	782b      	ldrb	r3, [r5, #0]
9000f0ec:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000f0f0:	2b00      	cmp	r3, #0
9000f0f2:	d036      	beq.n	9000f162 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f0f4:	786b      	ldrb	r3, [r5, #1]
9000f0f6:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000f0fa:	b393      	cbz	r3, 9000f162 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f0fc:	78ab      	ldrb	r3, [r5, #2]
9000f0fe:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000f102:	b373      	cbz	r3, 9000f162 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f104:	78eb      	ldrb	r3, [r5, #3]
9000f106:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000f10a:	b353      	cbz	r3, 9000f162 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f10c:	792b      	ldrb	r3, [r5, #4]
9000f10e:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000f112:	b333      	cbz	r3, 9000f162 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f114:	796b      	ldrb	r3, [r5, #5]
9000f116:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000f11a:	b313      	cbz	r3, 9000f162 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f11c:	79ab      	ldrb	r3, [r5, #6]
9000f11e:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000f122:	b1f3      	cbz	r3, 9000f162 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f124:	79eb      	ldrb	r3, [r5, #7]
9000f126:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000f12a:	b1d3      	cbz	r3, 9000f162 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f12c:	7a2b      	ldrb	r3, [r5, #8]
9000f12e:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000f132:	b1b3      	cbz	r3, 9000f162 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f134:	7a6b      	ldrb	r3, [r5, #9]
9000f136:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000f13a:	b193      	cbz	r3, 9000f162 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f13c:	7aab      	ldrb	r3, [r5, #10]
9000f13e:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000f142:	b173      	cbz	r3, 9000f162 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f144:	7aeb      	ldrb	r3, [r5, #11]
9000f146:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000f14a:	b153      	cbz	r3, 9000f162 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f14c:	7b2b      	ldrb	r3, [r5, #12]
9000f14e:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000f152:	b133      	cbz	r3, 9000f162 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f154:	7b6b      	ldrb	r3, [r5, #13]
9000f156:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000f15a:	b113      	cbz	r3, 9000f162 <xTaskCreateStatic+0xf2>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f15c:	7bab      	ldrb	r3, [r5, #14]
9000f15e:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000f162:	2300      	movs	r3, #0
9000f164:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f168:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
		pxNewTCB->uxMutexesHeld = 0;
9000f16a:	f04f 0900 	mov.w	r9, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f16e:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f170:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000f172:	f8c4 9050 	str.w	r9, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f176:	bf28      	it	cs
9000f178:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
9000f17a:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000f17c:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f17e:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f182:	f7fe fb51 	bl	9000d828 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000f186:	f104 0018 	add.w	r0, r4, #24
9000f18a:	f7fe fb4d 	bl	9000d828 <vListInitialiseItem>
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f18e:	4642      	mov	r2, r8
9000f190:	4639      	mov	r1, r7
		pxNewTCB->ulNotifiedValue = 0;
9000f192:	f8c4 9058 	str.w	r9, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f196:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f198:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000f19a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000f19c:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9000f19e:	f8c4 9054 	str.w	r9, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000f1a2:	f884 905c 	strb.w	r9, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f1a6:	f7fe fbbb 	bl	9000d920 <pxPortInitialiseStack>
9000f1aa:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9000f1ac:	4620      	mov	r0, r4
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f1ae:	6023      	str	r3, [r4, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000f1b0:	f7ff fd48 	bl	9000ec44 <prvAddNewTaskToReadyList>
	}
9000f1b4:	4620      	mov	r0, r4
9000f1b6:	b003      	add	sp, #12
9000f1b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000f1bc:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
9000f1c0:	e7d2      	b.n	9000f168 <xTaskCreateStatic+0xf8>
9000f1c2:	bf00      	nop

9000f1c4 <xTaskCreate>:
	{
9000f1c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000f1c8:	0096      	lsls	r6, r2, #2
	{
9000f1ca:	4680      	mov	r8, r0
9000f1cc:	460d      	mov	r5, r1
9000f1ce:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
9000f1d0:	4630      	mov	r0, r6
9000f1d2:	f7fe f9f5 	bl	9000d5c0 <pvPortMalloc>
			if( pxStack != NULL )
9000f1d6:	2800      	cmp	r0, #0
9000f1d8:	d07f      	beq.n	9000f2da <xTaskCreate+0x116>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
9000f1da:	4607      	mov	r7, r0
9000f1dc:	2060      	movs	r0, #96	@ 0x60
9000f1de:	f7fe f9ef 	bl	9000d5c0 <pvPortMalloc>
				if( pxNewTCB != NULL )
9000f1e2:	4604      	mov	r4, r0
9000f1e4:	2800      	cmp	r0, #0
9000f1e6:	d075      	beq.n	9000f2d4 <xTaskCreate+0x110>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000f1e8:	2300      	movs	r3, #0
					pxNewTCB->pxStack = pxStack;
9000f1ea:	6307      	str	r7, [r0, #48]	@ 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f1ec:	4632      	mov	r2, r6
9000f1ee:	4638      	mov	r0, r7
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
9000f1f0:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f1f4:	21a5      	movs	r1, #165	@ 0xa5
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f1f6:	3e04      	subs	r6, #4
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f1f8:	f01a fc52 	bl	90029aa0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f1fc:	6b23      	ldr	r3, [r4, #48]	@ 0x30
9000f1fe:	441e      	add	r6, r3
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000f200:	f026 0607 	bic.w	r6, r6, #7
	if( pcName != NULL )
9000f204:	2d00      	cmp	r5, #0
9000f206:	d06c      	beq.n	9000f2e2 <xTaskCreate+0x11e>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f208:	782b      	ldrb	r3, [r5, #0]
9000f20a:	f884 3034 	strb.w	r3, [r4, #52]	@ 0x34
			if( pcName[ x ] == ( char ) 0x00 )
9000f20e:	2b00      	cmp	r3, #0
9000f210:	d036      	beq.n	9000f280 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f212:	786b      	ldrb	r3, [r5, #1]
9000f214:	f884 3035 	strb.w	r3, [r4, #53]	@ 0x35
			if( pcName[ x ] == ( char ) 0x00 )
9000f218:	b393      	cbz	r3, 9000f280 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f21a:	78ab      	ldrb	r3, [r5, #2]
9000f21c:	f884 3036 	strb.w	r3, [r4, #54]	@ 0x36
			if( pcName[ x ] == ( char ) 0x00 )
9000f220:	b373      	cbz	r3, 9000f280 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f222:	78eb      	ldrb	r3, [r5, #3]
9000f224:	f884 3037 	strb.w	r3, [r4, #55]	@ 0x37
			if( pcName[ x ] == ( char ) 0x00 )
9000f228:	b353      	cbz	r3, 9000f280 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f22a:	792b      	ldrb	r3, [r5, #4]
9000f22c:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
			if( pcName[ x ] == ( char ) 0x00 )
9000f230:	b333      	cbz	r3, 9000f280 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f232:	796b      	ldrb	r3, [r5, #5]
9000f234:	f884 3039 	strb.w	r3, [r4, #57]	@ 0x39
			if( pcName[ x ] == ( char ) 0x00 )
9000f238:	b313      	cbz	r3, 9000f280 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f23a:	79ab      	ldrb	r3, [r5, #6]
9000f23c:	f884 303a 	strb.w	r3, [r4, #58]	@ 0x3a
			if( pcName[ x ] == ( char ) 0x00 )
9000f240:	b1f3      	cbz	r3, 9000f280 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f242:	79eb      	ldrb	r3, [r5, #7]
9000f244:	f884 303b 	strb.w	r3, [r4, #59]	@ 0x3b
			if( pcName[ x ] == ( char ) 0x00 )
9000f248:	b1d3      	cbz	r3, 9000f280 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f24a:	7a2b      	ldrb	r3, [r5, #8]
9000f24c:	f884 303c 	strb.w	r3, [r4, #60]	@ 0x3c
			if( pcName[ x ] == ( char ) 0x00 )
9000f250:	b1b3      	cbz	r3, 9000f280 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f252:	7a6b      	ldrb	r3, [r5, #9]
9000f254:	f884 303d 	strb.w	r3, [r4, #61]	@ 0x3d
			if( pcName[ x ] == ( char ) 0x00 )
9000f258:	b193      	cbz	r3, 9000f280 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f25a:	7aab      	ldrb	r3, [r5, #10]
9000f25c:	f884 303e 	strb.w	r3, [r4, #62]	@ 0x3e
			if( pcName[ x ] == ( char ) 0x00 )
9000f260:	b173      	cbz	r3, 9000f280 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f262:	7aeb      	ldrb	r3, [r5, #11]
9000f264:	f884 303f 	strb.w	r3, [r4, #63]	@ 0x3f
			if( pcName[ x ] == ( char ) 0x00 )
9000f268:	b153      	cbz	r3, 9000f280 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f26a:	7b2b      	ldrb	r3, [r5, #12]
9000f26c:	f884 3040 	strb.w	r3, [r4, #64]	@ 0x40
			if( pcName[ x ] == ( char ) 0x00 )
9000f270:	b133      	cbz	r3, 9000f280 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f272:	7b6b      	ldrb	r3, [r5, #13]
9000f274:	f884 3041 	strb.w	r3, [r4, #65]	@ 0x41
			if( pcName[ x ] == ( char ) 0x00 )
9000f278:	b113      	cbz	r3, 9000f280 <xTaskCreate+0xbc>
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f27a:	7bab      	ldrb	r3, [r5, #14]
9000f27c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000f280:	2300      	movs	r3, #0
9000f282:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f286:	9d08      	ldr	r5, [sp, #32]
		pxNewTCB->uxMutexesHeld = 0;
9000f288:	2700      	movs	r7, #0
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f28a:	1d20      	adds	r0, r4, #4
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f28c:	2d37      	cmp	r5, #55	@ 0x37
		pxNewTCB->uxMutexesHeld = 0;
9000f28e:	6527      	str	r7, [r4, #80]	@ 0x50
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
9000f290:	bf28      	it	cs
9000f292:	2537      	movcs	r5, #55	@ 0x37
	pxNewTCB->uxPriority = uxPriority;
9000f294:	62e5      	str	r5, [r4, #44]	@ 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
9000f296:	64e5      	str	r5, [r4, #76]	@ 0x4c
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f298:	f1c5 0538 	rsb	r5, r5, #56	@ 0x38
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f29c:	f7fe fac4 	bl	9000d828 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000f2a0:	f104 0018 	add.w	r0, r4, #24
9000f2a4:	f7fe fac0 	bl	9000d828 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
9000f2a8:	65a7      	str	r7, [r4, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f2aa:	464a      	mov	r2, r9
9000f2ac:	4641      	mov	r1, r8
9000f2ae:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f2b0:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000f2b2:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000f2b4:	6264      	str	r4, [r4, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9000f2b6:	6567      	str	r7, [r4, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000f2b8:	f884 705c 	strb.w	r7, [r4, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f2bc:	f7fe fb30 	bl	9000d920 <pxPortInitialiseStack>
	if( pxCreatedTask != NULL )
9000f2c0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f2c2:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
9000f2c4:	b103      	cbz	r3, 9000f2c8 <xTaskCreate+0x104>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
9000f2c6:	601c      	str	r4, [r3, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000f2c8:	4620      	mov	r0, r4
9000f2ca:	f7ff fcbb 	bl	9000ec44 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
9000f2ce:	2001      	movs	r0, #1
	}
9000f2d0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
9000f2d4:	4638      	mov	r0, r7
9000f2d6:	f7fe fa31 	bl	9000d73c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
9000f2da:	f04f 30ff 	mov.w	r0, #4294967295
	}
9000f2de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
9000f2e2:	f884 5034 	strb.w	r5, [r4, #52]	@ 0x34
9000f2e6:	e7ce      	b.n	9000f286 <xTaskCreate+0xc2>

9000f2e8 <vTaskDelay>:
	{
9000f2e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
9000f2ea:	b950      	cbnz	r0, 9000f302 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
9000f2ec:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000
9000f2f0:	f04f 5280 	mov.w	r2, #268435456	@ 0x10000000
9000f2f4:	f8c3 2d04 	str.w	r2, [r3, #3332]	@ 0xd04
9000f2f8:	f3bf 8f4f 	dsb	sy
9000f2fc:	f3bf 8f6f 	isb	sy
	}
9000f300:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			configASSERT( uxSchedulerSuspended == 0 );
9000f302:	4d1e      	ldr	r5, [pc, #120]	@ (9000f37c <vTaskDelay+0x94>)
9000f304:	682b      	ldr	r3, [r5, #0]
9000f306:	b143      	cbz	r3, 9000f31a <vTaskDelay+0x32>
9000f308:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f30c:	f383 8811 	msr	BASEPRI, r3
9000f310:	f3bf 8f6f 	isb	sy
9000f314:	f3bf 8f4f 	dsb	sy
9000f318:	e7fe      	b.n	9000f318 <vTaskDelay+0x30>
	++uxSchedulerSuspended;
9000f31a:	682b      	ldr	r3, [r5, #0]
9000f31c:	4604      	mov	r4, r0
9000f31e:	3301      	adds	r3, #1
9000f320:	602b      	str	r3, [r5, #0]
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
9000f322:	4b17      	ldr	r3, [pc, #92]	@ (9000f380 <vTaskDelay+0x98>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f324:	4e17      	ldr	r6, [pc, #92]	@ (9000f384 <vTaskDelay+0x9c>)
const TickType_t xConstTickCount = xTickCount;
9000f326:	681f      	ldr	r7, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f328:	6830      	ldr	r0, [r6, #0]
9000f32a:	3004      	adds	r0, #4
9000f32c:	f7fe faa6 	bl	9000d87c <uxListRemove>
		else
		{
			/* Calculate the time at which the task should be woken if the event
			does not occur.  This may overflow but this doesn't matter, the
			kernel will manage it correctly. */
			xTimeToWake = xConstTickCount + xTicksToWait;
9000f330:	19e4      	adds	r4, r4, r7

			/* The list item will be inserted in wake time order. */
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000f332:	6833      	ldr	r3, [r6, #0]
9000f334:	605c      	str	r4, [r3, #4]

			if( xTimeToWake < xConstTickCount )
9000f336:	d315      	bcc.n	9000f364 <vTaskDelay+0x7c>
			{
				/* Wake time has overflowed.  Place this item in the overflow
				list. */
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f338:	4b13      	ldr	r3, [pc, #76]	@ (9000f388 <vTaskDelay+0xa0>)
9000f33a:	6818      	ldr	r0, [r3, #0]
9000f33c:	6831      	ldr	r1, [r6, #0]
9000f33e:	3104      	adds	r1, #4
9000f340:	f7fe fa84 	bl	9000d84c <vListInsert>
	configASSERT( uxSchedulerSuspended );
9000f344:	682b      	ldr	r3, [r5, #0]
9000f346:	b943      	cbnz	r3, 9000f35a <vTaskDelay+0x72>
9000f348:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f34c:	f383 8811 	msr	BASEPRI, r3
9000f350:	f3bf 8f6f 	isb	sy
9000f354:	f3bf 8f4f 	dsb	sy
9000f358:	e7fe      	b.n	9000f358 <vTaskDelay+0x70>
9000f35a:	f7ff fded 	bl	9000ef38 <xTaskResumeAll.part.0>
		if( xAlreadyYielded == pdFALSE )
9000f35e:	2800      	cmp	r0, #0
9000f360:	d0c4      	beq.n	9000f2ec <vTaskDelay+0x4>
	}
9000f362:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
			}
			else
			{
				/* The wake time has not overflowed, so the current block list
				is used. */
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f364:	4b09      	ldr	r3, [pc, #36]	@ (9000f38c <vTaskDelay+0xa4>)
9000f366:	6818      	ldr	r0, [r3, #0]
9000f368:	6831      	ldr	r1, [r6, #0]
9000f36a:	3104      	adds	r1, #4
9000f36c:	f7fe fa6e 	bl	9000d84c <vListInsert>

				/* If the task entering the blocked state was placed at the
				head of the list of blocked tasks then xNextTaskUnblockTime
				needs to be updated too. */
				if( xTimeToWake < xNextTaskUnblockTime )
9000f370:	4b07      	ldr	r3, [pc, #28]	@ (9000f390 <vTaskDelay+0xa8>)
9000f372:	681a      	ldr	r2, [r3, #0]
9000f374:	4294      	cmp	r4, r2
9000f376:	d2e5      	bcs.n	9000f344 <vTaskDelay+0x5c>
				{
					xNextTaskUnblockTime = xTimeToWake;
9000f378:	601c      	str	r4, [r3, #0]
9000f37a:	e7e3      	b.n	9000f344 <vTaskDelay+0x5c>
9000f37c:	24021358 	.word	0x24021358
9000f380:	24021378 	.word	0x24021378
9000f384:	24021850 	.word	0x24021850
9000f388:	240213c0 	.word	0x240213c0
9000f38c:	240213c4 	.word	0x240213c4
9000f390:	2402135c 	.word	0x2402135c

9000f394 <vTaskStartScheduler>:
{
9000f394:	b570      	push	{r4, r5, r6, lr}
9000f396:	b084      	sub	sp, #16
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
9000f398:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9000f39a:	4668      	mov	r0, sp
9000f39c:	aa02      	add	r2, sp, #8
9000f39e:	a901      	add	r1, sp, #4
		StackType_t *pxIdleTaskStackBuffer = NULL;
9000f3a0:	e9cd 4400 	strd	r4, r4, [sp]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
9000f3a4:	f7fe f8ee 	bl	9000d584 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
9000f3a8:	9d00      	ldr	r5, [sp, #0]
9000f3aa:	e9dd 0601 	ldrd	r0, r6, [sp, #4]
		configASSERT( puxStackBuffer != NULL );
9000f3ae:	b1b8      	cbz	r0, 9000f3e0 <vTaskStartScheduler+0x4c>
		configASSERT( pxTaskBuffer != NULL );
9000f3b0:	b16d      	cbz	r5, 9000f3ce <vTaskStartScheduler+0x3a>
			volatile size_t xSize = sizeof( StaticTask_t );
9000f3b2:	2260      	movs	r2, #96	@ 0x60
9000f3b4:	9203      	str	r2, [sp, #12]
			configASSERT( xSize == sizeof( TCB_t ) );
9000f3b6:	9a03      	ldr	r2, [sp, #12]
9000f3b8:	2a60      	cmp	r2, #96	@ 0x60
9000f3ba:	d01a      	beq.n	9000f3f2 <vTaskStartScheduler+0x5e>
9000f3bc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f3c0:	f383 8811 	msr	BASEPRI, r3
9000f3c4:	f3bf 8f6f 	isb	sy
9000f3c8:	f3bf 8f4f 	dsb	sy
9000f3cc:	e7fe      	b.n	9000f3cc <vTaskStartScheduler+0x38>
9000f3ce:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f3d2:	f383 8811 	msr	BASEPRI, r3
9000f3d6:	f3bf 8f6f 	isb	sy
9000f3da:	f3bf 8f4f 	dsb	sy
		configASSERT( pxTaskBuffer != NULL );
9000f3de:	e7fe      	b.n	9000f3de <vTaskStartScheduler+0x4a>
9000f3e0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f3e4:	f383 8811 	msr	BASEPRI, r3
9000f3e8:	f3bf 8f6f 	isb	sy
9000f3ec:	f3bf 8f4f 	dsb	sy
		configASSERT( puxStackBuffer != NULL );
9000f3f0:	e7fe      	b.n	9000f3f0 <vTaskStartScheduler+0x5c>
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000f3f2:	2202      	movs	r2, #2
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f3f4:	21a5      	movs	r1, #165	@ 0xa5
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
9000f3f6:	6328      	str	r0, [r5, #48]	@ 0x30
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f3f8:	4096      	lsls	r6, r2
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
9000f3fa:	f885 205d 	strb.w	r2, [r5, #93]	@ 0x5d
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
9000f3fe:	9b03      	ldr	r3, [sp, #12]
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
9000f400:	4632      	mov	r2, r6
9000f402:	f01a fb4d 	bl	90029aa0 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f406:	1f33      	subs	r3, r6, #4
9000f408:	6b2a      	ldr	r2, [r5, #48]	@ 0x30
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f40a:	1d28      	adds	r0, r5, #4
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f40c:	4929      	ldr	r1, [pc, #164]	@ (9000f4b4 <vTaskStartScheduler+0x120>)
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
9000f40e:	441a      	add	r2, r3
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
9000f410:	f885 4038 	strb.w	r4, [r5, #56]	@ 0x38
9000f414:	6369      	str	r1, [r5, #52]	@ 0x34
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
9000f416:	f885 4043 	strb.w	r4, [r5, #67]	@ 0x43
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
9000f41a:	f022 0607 	bic.w	r6, r2, #7
	pxNewTCB->uxPriority = uxPriority;
9000f41e:	62ec      	str	r4, [r5, #44]	@ 0x2c
		pxNewTCB->uxMutexesHeld = 0;
9000f420:	e9c5 4413 	strd	r4, r4, [r5, #76]	@ 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
9000f424:	f7fe fa00 	bl	9000d828 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
9000f428:	f105 0018 	add.w	r0, r5, #24
9000f42c:	f7fe f9fc 	bl	9000d828 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f430:	2338      	movs	r3, #56	@ 0x38
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f432:	4622      	mov	r2, r4
9000f434:	4920      	ldr	r1, [pc, #128]	@ (9000f4b8 <vTaskStartScheduler+0x124>)
		pxNewTCB->ulNotifiedValue = 0;
9000f436:	65ac      	str	r4, [r5, #88]	@ 0x58
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f438:	4630      	mov	r0, r6
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f43a:	61ab      	str	r3, [r5, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
9000f43c:	612d      	str	r5, [r5, #16]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
9000f43e:	626d      	str	r5, [r5, #36]	@ 0x24
		pxNewTCB->pxTaskTag = NULL;
9000f440:	656c      	str	r4, [r5, #84]	@ 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
9000f442:	f885 405c 	strb.w	r4, [r5, #92]	@ 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f446:	f7fe fa6b 	bl	9000d920 <pxPortInitialiseStack>
9000f44a:	4603      	mov	r3, r0
			prvAddNewTaskToReadyList( pxNewTCB );
9000f44c:	4628      	mov	r0, r5
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
9000f44e:	602b      	str	r3, [r5, #0]
			prvAddNewTaskToReadyList( pxNewTCB );
9000f450:	f7ff fbf8 	bl	9000ec44 <prvAddNewTaskToReadyList>
			xReturn = xTimerCreateTimerTask();
9000f454:	f000 fc86 	bl	9000fd64 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
9000f458:	2801      	cmp	r0, #1
9000f45a:	d00c      	beq.n	9000f476 <vTaskStartScheduler+0xe2>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9000f45c:	3001      	adds	r0, #1
9000f45e:	d001      	beq.n	9000f464 <vTaskStartScheduler+0xd0>
}
9000f460:	b004      	add	sp, #16
9000f462:	bd70      	pop	{r4, r5, r6, pc}
9000f464:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f468:	f383 8811 	msr	BASEPRI, r3
9000f46c:	f3bf 8f6f 	isb	sy
9000f470:	f3bf 8f4f 	dsb	sy
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
9000f474:	e7fe      	b.n	9000f474 <vTaskStartScheduler+0xe0>
9000f476:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f47a:	f383 8811 	msr	BASEPRI, r3
9000f47e:	f3bf 8f6f 	isb	sy
9000f482:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
9000f486:	4b0d      	ldr	r3, [pc, #52]	@ (9000f4bc <vTaskStartScheduler+0x128>)
9000f488:	f04f 32ff 	mov.w	r2, #4294967295
		xSchedulerRunning = pdTRUE;
9000f48c:	490c      	ldr	r1, [pc, #48]	@ (9000f4c0 <vTaskStartScheduler+0x12c>)
		xNextTaskUnblockTime = portMAX_DELAY;
9000f48e:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9000f490:	4b0c      	ldr	r3, [pc, #48]	@ (9000f4c4 <vTaskStartScheduler+0x130>)
		traceTASK_SWITCHED_IN();
9000f492:	4a0d      	ldr	r2, [pc, #52]	@ (9000f4c8 <vTaskStartScheduler+0x134>)
		xSchedulerRunning = pdTRUE;
9000f494:	6008      	str	r0, [r1, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
9000f496:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
9000f498:	6813      	ldr	r3, [r2, #0]
		if( xTask == NULL )
9000f49a:	b143      	cbz	r3, 9000f4ae <vTaskStartScheduler+0x11a>
		if( xTCB->pxTaskTag != NULL )
9000f49c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000f49e:	b10b      	cbz	r3, 9000f4a4 <vTaskStartScheduler+0x110>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f4a0:	2000      	movs	r0, #0
9000f4a2:	4798      	blx	r3
}
9000f4a4:	b004      	add	sp, #16
9000f4a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		if( xPortStartScheduler() != pdFALSE )
9000f4aa:	f7fe baf5 	b.w	9000da98 <xPortStartScheduler>
			xTCB = pxCurrentTCB;
9000f4ae:	6813      	ldr	r3, [r2, #0]
9000f4b0:	e7f4      	b.n	9000f49c <vTaskStartScheduler+0x108>
9000f4b2:	bf00      	nop
9000f4b4:	454c4449 	.word	0x454c4449
9000f4b8:	9000ed51 	.word	0x9000ed51
9000f4bc:	2402135c 	.word	0x2402135c
9000f4c0:	24021370 	.word	0x24021370
9000f4c4:	24021378 	.word	0x24021378
9000f4c8:	24021850 	.word	0x24021850

9000f4cc <vTaskSuspendAll>:
	++uxSchedulerSuspended;
9000f4cc:	4a02      	ldr	r2, [pc, #8]	@ (9000f4d8 <vTaskSuspendAll+0xc>)
9000f4ce:	6813      	ldr	r3, [r2, #0]
9000f4d0:	3301      	adds	r3, #1
9000f4d2:	6013      	str	r3, [r2, #0]
}
9000f4d4:	4770      	bx	lr
9000f4d6:	bf00      	nop
9000f4d8:	24021358 	.word	0x24021358

9000f4dc <xTaskResumeAll>:
	configASSERT( uxSchedulerSuspended );
9000f4dc:	4b06      	ldr	r3, [pc, #24]	@ (9000f4f8 <xTaskResumeAll+0x1c>)
9000f4de:	681b      	ldr	r3, [r3, #0]
9000f4e0:	b943      	cbnz	r3, 9000f4f4 <xTaskResumeAll+0x18>
9000f4e2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f4e6:	f383 8811 	msr	BASEPRI, r3
9000f4ea:	f3bf 8f6f 	isb	sy
9000f4ee:	f3bf 8f4f 	dsb	sy
9000f4f2:	e7fe      	b.n	9000f4f2 <xTaskResumeAll+0x16>
9000f4f4:	f7ff bd20 	b.w	9000ef38 <xTaskResumeAll.part.0>
9000f4f8:	24021358 	.word	0x24021358

9000f4fc <xTaskGetTickCount>:
		xTicks = xTickCount;
9000f4fc:	4b01      	ldr	r3, [pc, #4]	@ (9000f504 <xTaskGetTickCount+0x8>)
9000f4fe:	6818      	ldr	r0, [r3, #0]
}
9000f500:	4770      	bx	lr
9000f502:	bf00      	nop
9000f504:	24021378 	.word	0x24021378

9000f508 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f508:	4b05      	ldr	r3, [pc, #20]	@ (9000f520 <xTaskIncrementTick+0x18>)
9000f50a:	681b      	ldr	r3, [r3, #0]
9000f50c:	b90b      	cbnz	r3, 9000f512 <xTaskIncrementTick+0xa>
9000f50e:	f7ff bc6d 	b.w	9000edec <xTaskIncrementTick.part.0>
		++xPendedTicks;
9000f512:	4a04      	ldr	r2, [pc, #16]	@ (9000f524 <xTaskIncrementTick+0x1c>)
}
9000f514:	2000      	movs	r0, #0
		++xPendedTicks;
9000f516:	6813      	ldr	r3, [r2, #0]
9000f518:	3301      	adds	r3, #1
9000f51a:	6013      	str	r3, [r2, #0]
}
9000f51c:	4770      	bx	lr
9000f51e:	bf00      	nop
9000f520:	24021358 	.word	0x24021358
9000f524:	2402136c 	.word	0x2402136c

9000f528 <vTaskSetApplicationTaskTag>:
	{
9000f528:	b538      	push	{r3, r4, r5, lr}
9000f52a:	460d      	mov	r5, r1
		if( xTask == NULL )
9000f52c:	b138      	cbz	r0, 9000f53e <vTaskSetApplicationTaskTag+0x16>
9000f52e:	4604      	mov	r4, r0
		taskENTER_CRITICAL();
9000f530:	f7fe fa20 	bl	9000d974 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
9000f534:	6565      	str	r5, [r4, #84]	@ 0x54
	}
9000f536:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9000f53a:	f7fe ba3d 	b.w	9000d9b8 <vPortExitCritical>
			xTCB = ( TCB_t * ) pxCurrentTCB;
9000f53e:	4b04      	ldr	r3, [pc, #16]	@ (9000f550 <vTaskSetApplicationTaskTag+0x28>)
9000f540:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
9000f542:	f7fe fa17 	bl	9000d974 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
9000f546:	6565      	str	r5, [r4, #84]	@ 0x54
	}
9000f548:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
9000f54c:	f7fe ba34 	b.w	9000d9b8 <vPortExitCritical>
9000f550:	24021850 	.word	0x24021850

9000f554 <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
9000f554:	4b27      	ldr	r3, [pc, #156]	@ (9000f5f4 <vTaskSwitchContext+0xa0>)
9000f556:	681b      	ldr	r3, [r3, #0]
9000f558:	b11b      	cbz	r3, 9000f562 <vTaskSwitchContext+0xe>
		xYieldPending = pdTRUE;
9000f55a:	4b27      	ldr	r3, [pc, #156]	@ (9000f5f8 <vTaskSwitchContext+0xa4>)
9000f55c:	2201      	movs	r2, #1
9000f55e:	601a      	str	r2, [r3, #0]
9000f560:	4770      	bx	lr
{
9000f562:	b570      	push	{r4, r5, r6, lr}
		xYieldPending = pdFALSE;
9000f564:	4a24      	ldr	r2, [pc, #144]	@ (9000f5f8 <vTaskSwitchContext+0xa4>)
		traceTASK_SWITCHED_OUT();
9000f566:	4c25      	ldr	r4, [pc, #148]	@ (9000f5fc <vTaskSwitchContext+0xa8>)
		xYieldPending = pdFALSE;
9000f568:	6013      	str	r3, [r2, #0]
		traceTASK_SWITCHED_OUT();
9000f56a:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9000f56c:	2b00      	cmp	r3, #0
9000f56e:	d036      	beq.n	9000f5de <vTaskSwitchContext+0x8a>
		if( xTCB->pxTaskTag != NULL )
9000f570:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000f572:	b10b      	cbz	r3, 9000f578 <vTaskSwitchContext+0x24>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f574:	2001      	movs	r0, #1
9000f576:	4798      	blx	r3
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f578:	4d21      	ldr	r5, [pc, #132]	@ (9000f600 <vTaskSwitchContext+0xac>)
9000f57a:	4922      	ldr	r1, [pc, #136]	@ (9000f604 <vTaskSwitchContext+0xb0>)
9000f57c:	682b      	ldr	r3, [r5, #0]
9000f57e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
9000f582:	0098      	lsls	r0, r3, #2
9000f584:	0092      	lsls	r2, r2, #2
9000f586:	588a      	ldr	r2, [r1, r2]
9000f588:	b942      	cbnz	r2, 9000f59c <vTaskSwitchContext+0x48>
9000f58a:	b1fb      	cbz	r3, 9000f5cc <vTaskSwitchContext+0x78>
9000f58c:	3b01      	subs	r3, #1
9000f58e:	eb03 0283 	add.w	r2, r3, r3, lsl #2
9000f592:	0098      	lsls	r0, r3, #2
9000f594:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9000f598:	2a00      	cmp	r2, #0
9000f59a:	d0f6      	beq.n	9000f58a <vTaskSwitchContext+0x36>
9000f59c:	4418      	add	r0, r3
9000f59e:	eb01 0c80 	add.w	ip, r1, r0, lsl #2
9000f5a2:	f8dc 1004 	ldr.w	r1, [ip, #4]
9000f5a6:	4662      	mov	r2, ip
9000f5a8:	6849      	ldr	r1, [r1, #4]
9000f5aa:	3208      	adds	r2, #8
9000f5ac:	4291      	cmp	r1, r2
9000f5ae:	f8cc 1004 	str.w	r1, [ip, #4]
9000f5b2:	d01b      	beq.n	9000f5ec <vTaskSwitchContext+0x98>
9000f5b4:	68ca      	ldr	r2, [r1, #12]
9000f5b6:	6022      	str	r2, [r4, #0]
9000f5b8:	602b      	str	r3, [r5, #0]
		traceTASK_SWITCHED_IN();
9000f5ba:	6823      	ldr	r3, [r4, #0]
		if( xTask == NULL )
9000f5bc:	b1a3      	cbz	r3, 9000f5e8 <vTaskSwitchContext+0x94>
		if( xTCB->pxTaskTag != NULL )
9000f5be:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000f5c0:	b11b      	cbz	r3, 9000f5ca <vTaskSwitchContext+0x76>
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f5c2:	2000      	movs	r0, #0
}
9000f5c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			xReturn = xTCB->pxTaskTag( pvParameter );
9000f5c8:	4718      	bx	r3
}
9000f5ca:	bd70      	pop	{r4, r5, r6, pc}
9000f5cc:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f5d0:	f383 8811 	msr	BASEPRI, r3
9000f5d4:	f3bf 8f6f 	isb	sy
9000f5d8:	f3bf 8f4f 	dsb	sy
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f5dc:	e7fe      	b.n	9000f5dc <vTaskSwitchContext+0x88>
			xTCB = pxCurrentTCB;
9000f5de:	6823      	ldr	r3, [r4, #0]
		if( xTCB->pxTaskTag != NULL )
9000f5e0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000f5e2:	2b00      	cmp	r3, #0
9000f5e4:	d1c6      	bne.n	9000f574 <vTaskSwitchContext+0x20>
9000f5e6:	e7c7      	b.n	9000f578 <vTaskSwitchContext+0x24>
			xTCB = pxCurrentTCB;
9000f5e8:	6823      	ldr	r3, [r4, #0]
9000f5ea:	e7e8      	b.n	9000f5be <vTaskSwitchContext+0x6a>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f5ec:	6849      	ldr	r1, [r1, #4]
9000f5ee:	f8cc 1004 	str.w	r1, [ip, #4]
9000f5f2:	e7df      	b.n	9000f5b4 <vTaskSwitchContext+0x60>
9000f5f4:	24021358 	.word	0x24021358
9000f5f8:	24021368 	.word	0x24021368
9000f5fc:	24021850 	.word	0x24021850
9000f600:	24021374 	.word	0x24021374
9000f604:	240213f0 	.word	0x240213f0

9000f608 <vTaskPlaceOnEventList>:
	configASSERT( pxEventList );
9000f608:	b1f0      	cbz	r0, 9000f648 <vTaskPlaceOnEventList+0x40>
{
9000f60a:	b570      	push	{r4, r5, r6, lr}
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9000f60c:	4d1a      	ldr	r5, [pc, #104]	@ (9000f678 <vTaskPlaceOnEventList+0x70>)
9000f60e:	460c      	mov	r4, r1
9000f610:	6829      	ldr	r1, [r5, #0]
9000f612:	3118      	adds	r1, #24
9000f614:	f7fe f91a 	bl	9000d84c <vListInsert>
const TickType_t xConstTickCount = xTickCount;
9000f618:	4b18      	ldr	r3, [pc, #96]	@ (9000f67c <vTaskPlaceOnEventList+0x74>)
9000f61a:	681e      	ldr	r6, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f61c:	6828      	ldr	r0, [r5, #0]
9000f61e:	3004      	adds	r0, #4
9000f620:	f7fe f92c 	bl	9000d87c <uxListRemove>
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
9000f624:	1c63      	adds	r3, r4, #1
9000f626:	d020      	beq.n	9000f66a <vTaskPlaceOnEventList+0x62>
			xTimeToWake = xConstTickCount + xTicksToWait;
9000f628:	19a4      	adds	r4, r4, r6
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000f62a:	682b      	ldr	r3, [r5, #0]
9000f62c:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9000f62e:	d214      	bcs.n	9000f65a <vTaskPlaceOnEventList+0x52>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f630:	4b13      	ldr	r3, [pc, #76]	@ (9000f680 <vTaskPlaceOnEventList+0x78>)
9000f632:	6818      	ldr	r0, [r3, #0]
9000f634:	6829      	ldr	r1, [r5, #0]
9000f636:	3104      	adds	r1, #4
9000f638:	f7fe f908 	bl	9000d84c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9000f63c:	4b11      	ldr	r3, [pc, #68]	@ (9000f684 <vTaskPlaceOnEventList+0x7c>)
9000f63e:	681a      	ldr	r2, [r3, #0]
9000f640:	4294      	cmp	r4, r2
9000f642:	d200      	bcs.n	9000f646 <vTaskPlaceOnEventList+0x3e>
					xNextTaskUnblockTime = xTimeToWake;
9000f644:	601c      	str	r4, [r3, #0]
}
9000f646:	bd70      	pop	{r4, r5, r6, pc}
9000f648:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f64c:	f383 8811 	msr	BASEPRI, r3
9000f650:	f3bf 8f6f 	isb	sy
9000f654:	f3bf 8f4f 	dsb	sy
	configASSERT( pxEventList );
9000f658:	e7fe      	b.n	9000f658 <vTaskPlaceOnEventList+0x50>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f65a:	4b0b      	ldr	r3, [pc, #44]	@ (9000f688 <vTaskPlaceOnEventList+0x80>)
9000f65c:	6818      	ldr	r0, [r3, #0]
9000f65e:	6829      	ldr	r1, [r5, #0]
}
9000f660:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f664:	3104      	adds	r1, #4
9000f666:	f7fe b8f1 	b.w	9000d84c <vListInsert>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f66a:	6829      	ldr	r1, [r5, #0]
9000f66c:	4807      	ldr	r0, [pc, #28]	@ (9000f68c <vTaskPlaceOnEventList+0x84>)
9000f66e:	3104      	adds	r1, #4
}
9000f670:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f674:	f7fe b8dc 	b.w	9000d830 <vListInsertEnd>
9000f678:	24021850 	.word	0x24021850
9000f67c:	24021378 	.word	0x24021378
9000f680:	240213c4 	.word	0x240213c4
9000f684:	2402135c 	.word	0x2402135c
9000f688:	240213c0 	.word	0x240213c0
9000f68c:	24021380 	.word	0x24021380

9000f690 <vTaskPlaceOnEventListRestricted>:
		configASSERT( pxEventList );
9000f690:	b350      	cbz	r0, 9000f6e8 <vTaskPlaceOnEventListRestricted+0x58>
	{
9000f692:	b570      	push	{r4, r5, r6, lr}
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
9000f694:	4e1d      	ldr	r6, [pc, #116]	@ (9000f70c <vTaskPlaceOnEventListRestricted+0x7c>)
9000f696:	460c      	mov	r4, r1
9000f698:	4615      	mov	r5, r2
9000f69a:	6831      	ldr	r1, [r6, #0]
9000f69c:	3118      	adds	r1, #24
9000f69e:	f7fe f8c7 	bl	9000d830 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
9000f6a2:	4b1b      	ldr	r3, [pc, #108]	@ (9000f710 <vTaskPlaceOnEventListRestricted+0x80>)
		if( xWaitIndefinitely != pdFALSE )
9000f6a4:	b15d      	cbz	r5, 9000f6be <vTaskPlaceOnEventListRestricted+0x2e>
const TickType_t xConstTickCount = xTickCount;
9000f6a6:	681b      	ldr	r3, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f6a8:	6830      	ldr	r0, [r6, #0]
9000f6aa:	3004      	adds	r0, #4
9000f6ac:	f7fe f8e6 	bl	9000d87c <uxListRemove>
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f6b0:	6831      	ldr	r1, [r6, #0]
9000f6b2:	4818      	ldr	r0, [pc, #96]	@ (9000f714 <vTaskPlaceOnEventListRestricted+0x84>)
9000f6b4:	3104      	adds	r1, #4
	}
9000f6b6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f6ba:	f7fe b8b9 	b.w	9000d830 <vListInsertEnd>
const TickType_t xConstTickCount = xTickCount;
9000f6be:	681d      	ldr	r5, [r3, #0]
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f6c0:	6830      	ldr	r0, [r6, #0]
9000f6c2:	3004      	adds	r0, #4
9000f6c4:	f7fe f8da 	bl	9000d87c <uxListRemove>
			xTimeToWake = xConstTickCount + xTicksToWait;
9000f6c8:	1964      	adds	r4, r4, r5
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
9000f6ca:	6833      	ldr	r3, [r6, #0]
9000f6cc:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
9000f6ce:	d214      	bcs.n	9000f6fa <vTaskPlaceOnEventListRestricted+0x6a>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f6d0:	4b11      	ldr	r3, [pc, #68]	@ (9000f718 <vTaskPlaceOnEventListRestricted+0x88>)
9000f6d2:	6818      	ldr	r0, [r3, #0]
9000f6d4:	6831      	ldr	r1, [r6, #0]
9000f6d6:	3104      	adds	r1, #4
9000f6d8:	f7fe f8b8 	bl	9000d84c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
9000f6dc:	4b0f      	ldr	r3, [pc, #60]	@ (9000f71c <vTaskPlaceOnEventListRestricted+0x8c>)
9000f6de:	681a      	ldr	r2, [r3, #0]
9000f6e0:	4294      	cmp	r4, r2
9000f6e2:	d200      	bcs.n	9000f6e6 <vTaskPlaceOnEventListRestricted+0x56>
					xNextTaskUnblockTime = xTimeToWake;
9000f6e4:	601c      	str	r4, [r3, #0]
	}
9000f6e6:	bd70      	pop	{r4, r5, r6, pc}
9000f6e8:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f6ec:	f383 8811 	msr	BASEPRI, r3
9000f6f0:	f3bf 8f6f 	isb	sy
9000f6f4:	f3bf 8f4f 	dsb	sy
		configASSERT( pxEventList );
9000f6f8:	e7fe      	b.n	9000f6f8 <vTaskPlaceOnEventListRestricted+0x68>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f6fa:	4b09      	ldr	r3, [pc, #36]	@ (9000f720 <vTaskPlaceOnEventListRestricted+0x90>)
9000f6fc:	6818      	ldr	r0, [r3, #0]
9000f6fe:	6831      	ldr	r1, [r6, #0]
	}
9000f700:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
9000f704:	3104      	adds	r1, #4
9000f706:	f7fe b8a1 	b.w	9000d84c <vListInsert>
9000f70a:	bf00      	nop
9000f70c:	24021850 	.word	0x24021850
9000f710:	24021378 	.word	0x24021378
9000f714:	24021380 	.word	0x24021380
9000f718:	240213c4 	.word	0x240213c4
9000f71c:	2402135c 	.word	0x2402135c
9000f720:	240213c0 	.word	0x240213c0

9000f724 <xTaskRemoveFromEventList>:
{
9000f724:	b538      	push	{r3, r4, r5, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000f726:	68c3      	ldr	r3, [r0, #12]
9000f728:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
9000f72a:	b34c      	cbz	r4, 9000f780 <xTaskRemoveFromEventList+0x5c>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
9000f72c:	f104 0518 	add.w	r5, r4, #24
9000f730:	4628      	mov	r0, r5
9000f732:	f7fe f8a3 	bl	9000d87c <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f736:	4b18      	ldr	r3, [pc, #96]	@ (9000f798 <xTaskRemoveFromEventList+0x74>)
9000f738:	681b      	ldr	r3, [r3, #0]
9000f73a:	b173      	cbz	r3, 9000f75a <xTaskRemoveFromEventList+0x36>
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
9000f73c:	4629      	mov	r1, r5
9000f73e:	4817      	ldr	r0, [pc, #92]	@ (9000f79c <xTaskRemoveFromEventList+0x78>)
9000f740:	f7fe f876 	bl	9000d830 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
9000f744:	4b16      	ldr	r3, [pc, #88]	@ (9000f7a0 <xTaskRemoveFromEventList+0x7c>)
9000f746:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
9000f748:	681b      	ldr	r3, [r3, #0]
9000f74a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000f74c:	429a      	cmp	r2, r3
9000f74e:	d920      	bls.n	9000f792 <xTaskRemoveFromEventList+0x6e>
		xYieldPending = pdTRUE;
9000f750:	2301      	movs	r3, #1
9000f752:	4a14      	ldr	r2, [pc, #80]	@ (9000f7a4 <xTaskRemoveFromEventList+0x80>)
		xReturn = pdTRUE;
9000f754:	4618      	mov	r0, r3
		xYieldPending = pdTRUE;
9000f756:	6013      	str	r3, [r2, #0]
}
9000f758:	bd38      	pop	{r3, r4, r5, pc}
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
9000f75a:	1d25      	adds	r5, r4, #4
9000f75c:	4628      	mov	r0, r5
9000f75e:	f7fe f88d 	bl	9000d87c <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
9000f762:	4b11      	ldr	r3, [pc, #68]	@ (9000f7a8 <xTaskRemoveFromEventList+0x84>)
9000f764:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000f766:	681a      	ldr	r2, [r3, #0]
9000f768:	4290      	cmp	r0, r2
9000f76a:	d900      	bls.n	9000f76e <xTaskRemoveFromEventList+0x4a>
9000f76c:	6018      	str	r0, [r3, #0]
9000f76e:	4b0f      	ldr	r3, [pc, #60]	@ (9000f7ac <xTaskRemoveFromEventList+0x88>)
9000f770:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f774:	4629      	mov	r1, r5
9000f776:	eb03 0080 	add.w	r0, r3, r0, lsl #2
9000f77a:	f7fe f859 	bl	9000d830 <vListInsertEnd>
9000f77e:	e7e1      	b.n	9000f744 <xTaskRemoveFromEventList+0x20>
9000f780:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f784:	f383 8811 	msr	BASEPRI, r3
9000f788:	f3bf 8f6f 	isb	sy
9000f78c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxUnblockedTCB );
9000f790:	e7fe      	b.n	9000f790 <xTaskRemoveFromEventList+0x6c>
		xReturn = pdFALSE;
9000f792:	2000      	movs	r0, #0
}
9000f794:	bd38      	pop	{r3, r4, r5, pc}
9000f796:	bf00      	nop
9000f798:	24021358 	.word	0x24021358
9000f79c:	240213ac 	.word	0x240213ac
9000f7a0:	24021850 	.word	0x24021850
9000f7a4:	24021368 	.word	0x24021368
9000f7a8:	24021374 	.word	0x24021374
9000f7ac:	240213f0 	.word	0x240213f0

9000f7b0 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000f7b0:	4a03      	ldr	r2, [pc, #12]	@ (9000f7c0 <vTaskInternalSetTimeOutState+0x10>)
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f7b2:	4b04      	ldr	r3, [pc, #16]	@ (9000f7c4 <vTaskInternalSetTimeOutState+0x14>)
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000f7b4:	6812      	ldr	r2, [r2, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f7b6:	681b      	ldr	r3, [r3, #0]
9000f7b8:	e9c0 2300 	strd	r2, r3, [r0]
}
9000f7bc:	4770      	bx	lr
9000f7be:	bf00      	nop
9000f7c0:	24021364 	.word	0x24021364
9000f7c4:	24021378 	.word	0x24021378

9000f7c8 <xTaskCheckForTimeOut>:
{
9000f7c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	configASSERT( pxTimeOut );
9000f7ca:	b308      	cbz	r0, 9000f810 <xTaskCheckForTimeOut+0x48>
	configASSERT( pxTicksToWait );
9000f7cc:	460d      	mov	r5, r1
9000f7ce:	b1b1      	cbz	r1, 9000f7fe <xTaskCheckForTimeOut+0x36>
9000f7d0:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
9000f7d2:	f7fe f8cf 	bl	9000d974 <vPortEnterCritical>
			if( *pxTicksToWait == portMAX_DELAY )
9000f7d6:	682b      	ldr	r3, [r5, #0]
		const TickType_t xConstTickCount = xTickCount;
9000f7d8:	4a1a      	ldr	r2, [pc, #104]	@ (9000f844 <xTaskCheckForTimeOut+0x7c>)
			if( *pxTicksToWait == portMAX_DELAY )
9000f7da:	1c58      	adds	r0, r3, #1
		const TickType_t xConstTickCount = xTickCount;
9000f7dc:	6811      	ldr	r1, [r2, #0]
			if( *pxTicksToWait == portMAX_DELAY )
9000f7de:	d02c      	beq.n	9000f83a <xTaskCheckForTimeOut+0x72>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9000f7e0:	f8df c064 	ldr.w	ip, [pc, #100]	@ 9000f848 <xTaskCheckForTimeOut+0x80>
9000f7e4:	6826      	ldr	r6, [r4, #0]
9000f7e6:	f8dc 7000 	ldr.w	r7, [ip]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9000f7ea:	6860      	ldr	r0, [r4, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
9000f7ec:	42be      	cmp	r6, r7
9000f7ee:	d018      	beq.n	9000f822 <xTaskCheckForTimeOut+0x5a>
9000f7f0:	4288      	cmp	r0, r1
9000f7f2:	d816      	bhi.n	9000f822 <xTaskCheckForTimeOut+0x5a>
			xReturn = pdTRUE;
9000f7f4:	2401      	movs	r4, #1
	taskEXIT_CRITICAL();
9000f7f6:	f7fe f8df 	bl	9000d9b8 <vPortExitCritical>
}
9000f7fa:	4620      	mov	r0, r4
9000f7fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9000f7fe:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f802:	f383 8811 	msr	BASEPRI, r3
9000f806:	f3bf 8f6f 	isb	sy
9000f80a:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTicksToWait );
9000f80e:	e7fe      	b.n	9000f80e <xTaskCheckForTimeOut+0x46>
9000f810:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f814:	f383 8811 	msr	BASEPRI, r3
9000f818:	f3bf 8f6f 	isb	sy
9000f81c:	f3bf 8f4f 	dsb	sy
	configASSERT( pxTimeOut );
9000f820:	e7fe      	b.n	9000f820 <xTaskCheckForTimeOut+0x58>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
9000f822:	eba1 0e00 	sub.w	lr, r1, r0
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
9000f826:	4573      	cmp	r3, lr
9000f828:	d909      	bls.n	9000f83e <xTaskCheckForTimeOut+0x76>
			*pxTicksToWait -= xElapsedTime;
9000f82a:	1a5b      	subs	r3, r3, r1
	pxTimeOut->xOverflowCount = xNumOfOverflows;
9000f82c:	f8dc 1000 	ldr.w	r1, [ip]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f830:	6812      	ldr	r2, [r2, #0]
			*pxTicksToWait -= xElapsedTime;
9000f832:	4403      	add	r3, r0
9000f834:	602b      	str	r3, [r5, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
9000f836:	e9c4 1200 	strd	r1, r2, [r4]
				xReturn = pdFALSE;
9000f83a:	2400      	movs	r4, #0
9000f83c:	e7db      	b.n	9000f7f6 <xTaskCheckForTimeOut+0x2e>
			*pxTicksToWait = 0;
9000f83e:	2300      	movs	r3, #0
9000f840:	602b      	str	r3, [r5, #0]
			xReturn = pdTRUE;
9000f842:	e7d7      	b.n	9000f7f4 <xTaskCheckForTimeOut+0x2c>
9000f844:	24021378 	.word	0x24021378
9000f848:	24021364 	.word	0x24021364

9000f84c <vTaskMissedYield>:
	xYieldPending = pdTRUE;
9000f84c:	4b01      	ldr	r3, [pc, #4]	@ (9000f854 <vTaskMissedYield+0x8>)
9000f84e:	2201      	movs	r2, #1
9000f850:	601a      	str	r2, [r3, #0]
}
9000f852:	4770      	bx	lr
9000f854:	24021368 	.word	0x24021368

9000f858 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
9000f858:	4b05      	ldr	r3, [pc, #20]	@ (9000f870 <xTaskGetSchedulerState+0x18>)
9000f85a:	681b      	ldr	r3, [r3, #0]
9000f85c:	b133      	cbz	r3, 9000f86c <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
9000f85e:	4b05      	ldr	r3, [pc, #20]	@ (9000f874 <xTaskGetSchedulerState+0x1c>)
9000f860:	6818      	ldr	r0, [r3, #0]
9000f862:	fab0 f080 	clz	r0, r0
9000f866:	0940      	lsrs	r0, r0, #5
9000f868:	0040      	lsls	r0, r0, #1
9000f86a:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
9000f86c:	2001      	movs	r0, #1
	}
9000f86e:	4770      	bx	lr
9000f870:	24021370 	.word	0x24021370
9000f874:	24021358 	.word	0x24021358

9000f878 <xTaskPriorityInherit>:
	{
9000f878:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
		if( pxMutexHolder != NULL )
9000f87a:	4604      	mov	r4, r0
9000f87c:	b1c8      	cbz	r0, 9000f8b2 <xTaskPriorityInherit+0x3a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
9000f87e:	4d1b      	ldr	r5, [pc, #108]	@ (9000f8ec <xTaskPriorityInherit+0x74>)
9000f880:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9000f882:	682a      	ldr	r2, [r5, #0]
9000f884:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9000f886:	4293      	cmp	r3, r2
9000f888:	d214      	bcs.n	9000f8b4 <xTaskPriorityInherit+0x3c>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000f88a:	6982      	ldr	r2, [r0, #24]
9000f88c:	2a00      	cmp	r2, #0
9000f88e:	db04      	blt.n	9000f89a <xTaskPriorityInherit+0x22>
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f890:	682a      	ldr	r2, [r5, #0]
9000f892:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9000f894:	f1c2 0238 	rsb	r2, r2, #56	@ 0x38
9000f898:	6182      	str	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
9000f89a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9000f89e:	4e14      	ldr	r6, [pc, #80]	@ (9000f8f0 <xTaskPriorityInherit+0x78>)
9000f8a0:	6962      	ldr	r2, [r4, #20]
9000f8a2:	eb06 0383 	add.w	r3, r6, r3, lsl #2
9000f8a6:	429a      	cmp	r2, r3
9000f8a8:	d00c      	beq.n	9000f8c4 <xTaskPriorityInherit+0x4c>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f8aa:	682b      	ldr	r3, [r5, #0]
9000f8ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000f8ae:	62e3      	str	r3, [r4, #44]	@ 0x2c
				xReturn = pdTRUE;
9000f8b0:	2001      	movs	r0, #1
	}
9000f8b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
9000f8b4:	682b      	ldr	r3, [r5, #0]
9000f8b6:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
9000f8b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9000f8ba:	4298      	cmp	r0, r3
9000f8bc:	bf2c      	ite	cs
9000f8be:	2000      	movcs	r0, #0
9000f8c0:	2001      	movcc	r0, #1
	}
9000f8c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f8c4:	1d27      	adds	r7, r4, #4
9000f8c6:	4638      	mov	r0, r7
9000f8c8:	f7fd ffd8 	bl	9000d87c <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f8cc:	682a      	ldr	r2, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000f8ce:	4b09      	ldr	r3, [pc, #36]	@ (9000f8f4 <xTaskPriorityInherit+0x7c>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f8d0:	6ad0      	ldr	r0, [r2, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000f8d2:	681a      	ldr	r2, [r3, #0]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
9000f8d4:	62e0      	str	r0, [r4, #44]	@ 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
9000f8d6:	4290      	cmp	r0, r2
9000f8d8:	d900      	bls.n	9000f8dc <xTaskPriorityInherit+0x64>
9000f8da:	6018      	str	r0, [r3, #0]
9000f8dc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f8e0:	4639      	mov	r1, r7
9000f8e2:	eb06 0080 	add.w	r0, r6, r0, lsl #2
9000f8e6:	f7fd ffa3 	bl	9000d830 <vListInsertEnd>
9000f8ea:	e7e1      	b.n	9000f8b0 <xTaskPriorityInherit+0x38>
9000f8ec:	24021850 	.word	0x24021850
9000f8f0:	240213f0 	.word	0x240213f0
9000f8f4:	24021374 	.word	0x24021374

9000f8f8 <xTaskPriorityDisinherit>:
		if( pxMutexHolder != NULL )
9000f8f8:	b308      	cbz	r0, 9000f93e <xTaskPriorityDisinherit+0x46>
	{
9000f8fa:	b538      	push	{r3, r4, r5, lr}
			configASSERT( pxTCB == pxCurrentTCB );
9000f8fc:	4b1d      	ldr	r3, [pc, #116]	@ (9000f974 <xTaskPriorityDisinherit+0x7c>)
9000f8fe:	681c      	ldr	r4, [r3, #0]
9000f900:	4284      	cmp	r4, r0
9000f902:	d008      	beq.n	9000f916 <xTaskPriorityDisinherit+0x1e>
9000f904:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f908:	f383 8811 	msr	BASEPRI, r3
9000f90c:	f3bf 8f6f 	isb	sy
9000f910:	f3bf 8f4f 	dsb	sy
9000f914:	e7fe      	b.n	9000f914 <xTaskPriorityDisinherit+0x1c>
			configASSERT( pxTCB->uxMutexesHeld );
9000f916:	6d23      	ldr	r3, [r4, #80]	@ 0x50
9000f918:	b143      	cbz	r3, 9000f92c <xTaskPriorityDisinherit+0x34>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9000f91a:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
			( pxTCB->uxMutexesHeld )--;
9000f91c:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
9000f91e:	6ce2      	ldr	r2, [r4, #76]	@ 0x4c
			( pxTCB->uxMutexesHeld )--;
9000f920:	6523      	str	r3, [r4, #80]	@ 0x50
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
9000f922:	4291      	cmp	r1, r2
9000f924:	d000      	beq.n	9000f928 <xTaskPriorityDisinherit+0x30>
9000f926:	b163      	cbz	r3, 9000f942 <xTaskPriorityDisinherit+0x4a>
	BaseType_t xReturn = pdFALSE;
9000f928:	2000      	movs	r0, #0
	}
9000f92a:	bd38      	pop	{r3, r4, r5, pc}
9000f92c:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f930:	f383 8811 	msr	BASEPRI, r3
9000f934:	f3bf 8f6f 	isb	sy
9000f938:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
9000f93c:	e7fe      	b.n	9000f93c <xTaskPriorityDisinherit+0x44>
	BaseType_t xReturn = pdFALSE;
9000f93e:	2000      	movs	r0, #0
	}
9000f940:	4770      	bx	lr
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f942:	1d25      	adds	r5, r4, #4
9000f944:	4628      	mov	r0, r5
9000f946:	f7fd ff99 	bl	9000d87c <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9000f94a:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
					prvAddTaskToReadyList( pxTCB );
9000f94c:	4b0a      	ldr	r3, [pc, #40]	@ (9000f978 <xTaskPriorityDisinherit+0x80>)
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f94e:	f1c0 0238 	rsb	r2, r0, #56	@ 0x38
					pxTCB->uxPriority = pxTCB->uxBasePriority;
9000f952:	62e0      	str	r0, [r4, #44]	@ 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f954:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
9000f956:	681a      	ldr	r2, [r3, #0]
9000f958:	4290      	cmp	r0, r2
9000f95a:	d900      	bls.n	9000f95e <xTaskPriorityDisinherit+0x66>
9000f95c:	6018      	str	r0, [r3, #0]
9000f95e:	4b07      	ldr	r3, [pc, #28]	@ (9000f97c <xTaskPriorityDisinherit+0x84>)
9000f960:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f964:	4629      	mov	r1, r5
9000f966:	eb03 0080 	add.w	r0, r3, r0, lsl #2
9000f96a:	f7fd ff61 	bl	9000d830 <vListInsertEnd>
					xReturn = pdTRUE;
9000f96e:	2001      	movs	r0, #1
	}
9000f970:	bd38      	pop	{r3, r4, r5, pc}
9000f972:	bf00      	nop
9000f974:	24021850 	.word	0x24021850
9000f978:	24021374 	.word	0x24021374
9000f97c:	240213f0 	.word	0x240213f0

9000f980 <vTaskPriorityDisinheritAfterTimeout>:
		if( pxMutexHolder != NULL )
9000f980:	2800      	cmp	r0, #0
9000f982:	d03c      	beq.n	9000f9fe <vTaskPriorityDisinheritAfterTimeout+0x7e>
			configASSERT( pxTCB->uxMutexesHeld );
9000f984:	6d03      	ldr	r3, [r0, #80]	@ 0x50
	{
9000f986:	b570      	push	{r4, r5, r6, lr}
9000f988:	4604      	mov	r4, r0
			configASSERT( pxTCB->uxMutexesHeld );
9000f98a:	b14b      	cbz	r3, 9000f9a0 <vTaskPriorityDisinheritAfterTimeout+0x20>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
9000f98c:	6cc0      	ldr	r0, [r0, #76]	@ 0x4c
			if( pxTCB->uxPriority != uxPriorityToUse )
9000f98e:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
9000f990:	4281      	cmp	r1, r0
9000f992:	bf38      	it	cc
9000f994:	4601      	movcc	r1, r0
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
9000f996:	2b01      	cmp	r3, #1
9000f998:	d101      	bne.n	9000f99e <vTaskPriorityDisinheritAfterTimeout+0x1e>
9000f99a:	428a      	cmp	r2, r1
9000f99c:	d109      	bne.n	9000f9b2 <vTaskPriorityDisinheritAfterTimeout+0x32>
	}
9000f99e:	bd70      	pop	{r4, r5, r6, pc}
9000f9a0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000f9a4:	f383 8811 	msr	BASEPRI, r3
9000f9a8:	f3bf 8f6f 	isb	sy
9000f9ac:	f3bf 8f4f 	dsb	sy
			configASSERT( pxTCB->uxMutexesHeld );
9000f9b0:	e7fe      	b.n	9000f9b0 <vTaskPriorityDisinheritAfterTimeout+0x30>
					configASSERT( pxTCB != pxCurrentTCB );
9000f9b2:	4b18      	ldr	r3, [pc, #96]	@ (9000fa14 <vTaskPriorityDisinheritAfterTimeout+0x94>)
9000f9b4:	681b      	ldr	r3, [r3, #0]
9000f9b6:	42a3      	cmp	r3, r4
9000f9b8:	d022      	beq.n	9000fa00 <vTaskPriorityDisinheritAfterTimeout+0x80>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000f9ba:	69a3      	ldr	r3, [r4, #24]
					pxTCB->uxPriority = uxPriorityToUse;
9000f9bc:	62e1      	str	r1, [r4, #44]	@ 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
9000f9be:	2b00      	cmp	r3, #0
9000f9c0:	db02      	blt.n	9000f9c8 <vTaskPriorityDisinheritAfterTimeout+0x48>
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000f9c2:	f1c1 0138 	rsb	r1, r1, #56	@ 0x38
9000f9c6:	61a1      	str	r1, [r4, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
9000f9c8:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9000f9cc:	4d12      	ldr	r5, [pc, #72]	@ (9000fa18 <vTaskPriorityDisinheritAfterTimeout+0x98>)
9000f9ce:	6961      	ldr	r1, [r4, #20]
9000f9d0:	eb05 0382 	add.w	r3, r5, r2, lsl #2
9000f9d4:	4299      	cmp	r1, r3
9000f9d6:	d1e2      	bne.n	9000f99e <vTaskPriorityDisinheritAfterTimeout+0x1e>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
9000f9d8:	1d26      	adds	r6, r4, #4
9000f9da:	4630      	mov	r0, r6
9000f9dc:	f7fd ff4e 	bl	9000d87c <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
9000f9e0:	4b0e      	ldr	r3, [pc, #56]	@ (9000fa1c <vTaskPriorityDisinheritAfterTimeout+0x9c>)
9000f9e2:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
9000f9e4:	681a      	ldr	r2, [r3, #0]
9000f9e6:	4290      	cmp	r0, r2
9000f9e8:	d900      	bls.n	9000f9ec <vTaskPriorityDisinheritAfterTimeout+0x6c>
9000f9ea:	6018      	str	r0, [r3, #0]
9000f9ec:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9000f9f0:	4631      	mov	r1, r6
9000f9f2:	eb05 0080 	add.w	r0, r5, r0, lsl #2
	}
9000f9f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
						prvAddTaskToReadyList( pxTCB );
9000f9fa:	f7fd bf19 	b.w	9000d830 <vListInsertEnd>
9000f9fe:	4770      	bx	lr
9000fa00:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fa04:	f383 8811 	msr	BASEPRI, r3
9000fa08:	f3bf 8f6f 	isb	sy
9000fa0c:	f3bf 8f4f 	dsb	sy
					configASSERT( pxTCB != pxCurrentTCB );
9000fa10:	e7fe      	b.n	9000fa10 <vTaskPriorityDisinheritAfterTimeout+0x90>
9000fa12:	bf00      	nop
9000fa14:	24021850 	.word	0x24021850
9000fa18:	240213f0 	.word	0x240213f0
9000fa1c:	24021374 	.word	0x24021374

9000fa20 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
9000fa20:	4b04      	ldr	r3, [pc, #16]	@ (9000fa34 <pvTaskIncrementMutexHeldCount+0x14>)
9000fa22:	681a      	ldr	r2, [r3, #0]
9000fa24:	b11a      	cbz	r2, 9000fa2e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
9000fa26:	6819      	ldr	r1, [r3, #0]
9000fa28:	6d0a      	ldr	r2, [r1, #80]	@ 0x50
9000fa2a:	3201      	adds	r2, #1
9000fa2c:	650a      	str	r2, [r1, #80]	@ 0x50
		return pxCurrentTCB;
9000fa2e:	6818      	ldr	r0, [r3, #0]
	}
9000fa30:	4770      	bx	lr
9000fa32:	bf00      	nop
9000fa34:	24021850 	.word	0x24021850

9000fa38 <prvSwitchTimerLists>:
	}
}
/*-----------------------------------------------------------*/

static void prvSwitchTimerLists( void )
{
9000fa38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000fa3c:	4e21      	ldr	r6, [pc, #132]	@ (9000fac4 <prvSwitchTimerLists+0x8c>)
9000fa3e:	b084      	sub	sp, #16

	/* The tick count has overflowed.  The timer lists must be switched.
	If there are any timers still referenced from the current timer list
	then they must have expired and should be processed before the lists
	are switched. */
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9000fa40:	e00d      	b.n	9000fa5e <prvSwitchTimerLists+0x26>
	{
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000fa42:	68db      	ldr	r3, [r3, #12]

		/* Remove the timer from the list. */
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fa44:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000fa46:	681f      	ldr	r7, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000fa48:	1d25      	adds	r5, r4, #4
9000fa4a:	4628      	mov	r0, r5
9000fa4c:	f7fd ff16 	bl	9000d87c <uxListRemove>
		traceTIMER_EXPIRED( pxTimer );

		/* Execute its callback, then send a command to restart the timer if
		it is an auto-reload timer.  It cannot be restarted here as the lists
		have not yet been switched. */
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000fa50:	6a23      	ldr	r3, [r4, #32]
9000fa52:	4620      	mov	r0, r4
9000fa54:	4798      	blx	r3

		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000fa56:	f894 3028 	ldrb.w	r3, [r4, #40]	@ 0x28
9000fa5a:	075b      	lsls	r3, r3, #29
9000fa5c:	d40a      	bmi.n	9000fa74 <prvSwitchTimerLists+0x3c>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
9000fa5e:	6833      	ldr	r3, [r6, #0]
9000fa60:	681a      	ldr	r2, [r3, #0]
9000fa62:	2a00      	cmp	r2, #0
9000fa64:	d1ed      	bne.n	9000fa42 <prvSwitchTimerLists+0xa>
			mtCOVERAGE_TEST_MARKER();
		}
	}

	pxTemp = pxCurrentTimerList;
	pxCurrentTimerList = pxOverflowTimerList;
9000fa66:	4a18      	ldr	r2, [pc, #96]	@ (9000fac8 <prvSwitchTimerLists+0x90>)
9000fa68:	6811      	ldr	r1, [r2, #0]
	pxOverflowTimerList = pxTemp;
9000fa6a:	6013      	str	r3, [r2, #0]
	pxCurrentTimerList = pxOverflowTimerList;
9000fa6c:	6031      	str	r1, [r6, #0]
}
9000fa6e:	b004      	add	sp, #16
9000fa70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
9000fa74:	69a3      	ldr	r3, [r4, #24]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fa76:	4629      	mov	r1, r5
	if( xTimerQueue != NULL )
9000fa78:	f8df 8050 	ldr.w	r8, [pc, #80]	@ 9000facc <prvSwitchTimerLists+0x94>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
9000fa7c:	443b      	add	r3, r7
			if( xReloadTime > xNextExpireTime )
9000fa7e:	429f      	cmp	r7, r3
9000fa80:	d205      	bcs.n	9000fa8e <prvSwitchTimerLists+0x56>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fa82:	6830      	ldr	r0, [r6, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
9000fa84:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000fa86:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fa88:	f7fd fee0 	bl	9000d84c <vListInsert>
9000fa8c:	e7e7      	b.n	9000fa5e <prvSwitchTimerLists+0x26>
	if( xTimerQueue != NULL )
9000fa8e:	f8d8 3000 	ldr.w	r3, [r8]
		xMessage.xMessageID = xCommandID;
9000fa92:	2500      	movs	r5, #0
	if( xTimerQueue != NULL )
9000fa94:	b16b      	cbz	r3, 9000fab2 <prvSwitchTimerLists+0x7a>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9000fa96:	9402      	str	r4, [sp, #8]
		xMessage.xMessageID = xCommandID;
9000fa98:	e9cd 5700 	strd	r5, r7, [sp]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000fa9c:	f7ff fedc 	bl	9000f858 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000faa0:	462b      	mov	r3, r5
9000faa2:	462a      	mov	r2, r5
9000faa4:	4669      	mov	r1, sp
9000faa6:	f8d8 0000 	ldr.w	r0, [r8]
9000faaa:	f7fe fa51 	bl	9000df50 <xQueueGenericSend>
				configASSERT( xResult );
9000faae:	2800      	cmp	r0, #0
9000fab0:	d1d5      	bne.n	9000fa5e <prvSwitchTimerLists+0x26>
9000fab2:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fab6:	f383 8811 	msr	BASEPRI, r3
9000faba:	f3bf 8f6f 	isb	sy
9000fabe:	f3bf 8f4f 	dsb	sy
9000fac2:	e7fe      	b.n	9000fac2 <prvSwitchTimerLists+0x8a>
9000fac4:	24021954 	.word	0x24021954
9000fac8:	24021950 	.word	0x24021950
9000facc:	2402194c 	.word	0x2402194c

9000fad0 <prvTimerTask>:
{
9000fad0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000fad4:	4e9f      	ldr	r6, [pc, #636]	@ (9000fd54 <prvTimerTask+0x284>)
9000fad6:	b089      	sub	sp, #36	@ 0x24
9000fad8:	4d9f      	ldr	r5, [pc, #636]	@ (9000fd58 <prvTimerTask+0x288>)
					portYIELD_WITHIN_API();
9000fada:	f04f 29e0 	mov.w	r9, #3758153728	@ 0xe000e000
9000fade:	4c9f      	ldr	r4, [pc, #636]	@ (9000fd5c <prvTimerTask+0x28c>)
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
9000fae0:	6833      	ldr	r3, [r6, #0]
9000fae2:	681f      	ldr	r7, [r3, #0]
9000fae4:	2f00      	cmp	r7, #0
9000fae6:	f000 80b2 	beq.w	9000fc4e <prvTimerTask+0x17e>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
9000faea:	68db      	ldr	r3, [r3, #12]
9000faec:	681f      	ldr	r7, [r3, #0]
	vTaskSuspendAll();
9000faee:	f7ff fced 	bl	9000f4cc <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9000faf2:	f7ff fd03 	bl	9000f4fc <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000faf6:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000faf8:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
9000fafa:	4298      	cmp	r0, r3
9000fafc:	f0c0 80af 	bcc.w	9000fc5e <prvTimerTask+0x18e>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9000fb00:	4287      	cmp	r7, r0
	xLastTime = xTimeNow;
9000fb02:	6028      	str	r0, [r5, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
9000fb04:	f200 80d0 	bhi.w	9000fca8 <prvTimerTask+0x1d8>
				( void ) xTaskResumeAll();
9000fb08:	f7ff fce8 	bl	9000f4dc <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
9000fb0c:	6833      	ldr	r3, [r6, #0]
9000fb0e:	68db      	ldr	r3, [r3, #12]
9000fb10:	f8d3 b00c 	ldr.w	fp, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000fb14:	f10b 0804 	add.w	r8, fp, #4
9000fb18:	4640      	mov	r0, r8
9000fb1a:	f7fd feaf 	bl	9000d87c <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000fb1e:	f89b 3028 	ldrb.w	r3, [fp, #40]	@ 0x28
9000fb22:	0758      	lsls	r0, r3, #29
9000fb24:	f100 80d0 	bmi.w	9000fcc8 <prvTimerTask+0x1f8>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000fb28:	f023 0301 	bic.w	r3, r3, #1
9000fb2c:	f88b 3028 	strb.w	r3, [fp, #40]	@ 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000fb30:	f8db 3020 	ldr.w	r3, [fp, #32]
9000fb34:	4658      	mov	r0, fp
9000fb36:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
9000fb38:	2200      	movs	r2, #0
9000fb3a:	4669      	mov	r1, sp
9000fb3c:	6820      	ldr	r0, [r4, #0]
9000fb3e:	f7fe fc45 	bl	9000e3cc <xQueueReceive>
9000fb42:	2800      	cmp	r0, #0
9000fb44:	d0cc      	beq.n	9000fae0 <prvTimerTask+0x10>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
9000fb46:	9b00      	ldr	r3, [sp, #0]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
9000fb48:	9802      	ldr	r0, [sp, #8]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
9000fb4a:	2b00      	cmp	r3, #0
9000fb4c:	db77      	blt.n	9000fc3e <prvTimerTask+0x16e>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
9000fb4e:	9f02      	ldr	r7, [sp, #8]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
9000fb50:	697b      	ldr	r3, [r7, #20]
9000fb52:	b113      	cbz	r3, 9000fb5a <prvTimerTask+0x8a>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
9000fb54:	1d38      	adds	r0, r7, #4
9000fb56:	f7fd fe91 	bl	9000d87c <uxListRemove>
	xTimeNow = xTaskGetTickCount();
9000fb5a:	f7ff fccf 	bl	9000f4fc <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000fb5e:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000fb60:	4683      	mov	fp, r0
	if( xTimeNow < xLastTime )
9000fb62:	4298      	cmp	r0, r3
9000fb64:	f0c0 8082 	bcc.w	9000fc6c <prvTimerTask+0x19c>
			switch( xMessage.xMessageID )
9000fb68:	9b00      	ldr	r3, [sp, #0]
	xLastTime = xTimeNow;
9000fb6a:	f8c5 b000 	str.w	fp, [r5]
			switch( xMessage.xMessageID )
9000fb6e:	2b09      	cmp	r3, #9
9000fb70:	d8e2      	bhi.n	9000fb38 <prvTimerTask+0x68>
9000fb72:	e8df f003 	tbb	[pc, r3]
9000fb76:	0505      	.short	0x0505
9000fb78:	5b3e5405 	.word	0x5b3e5405
9000fb7c:	3e540505 	.word	0x3e540505
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000fb80:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9000fb84:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000fb86:	f042 0201 	orr.w	r2, r2, #1
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000fb8a:	613f      	str	r7, [r7, #16]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000fb8c:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
9000fb90:	69ba      	ldr	r2, [r7, #24]
9000fb92:	1899      	adds	r1, r3, r2
9000fb94:	bf2c      	ite	cs
9000fb96:	2001      	movcs	r0, #1
9000fb98:	2000      	movcc	r0, #0
	if( xNextExpiryTime <= xTimeNow )
9000fb9a:	4559      	cmp	r1, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000fb9c:	6079      	str	r1, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9000fb9e:	f200 8085 	bhi.w	9000fcac <prvTimerTask+0x1dc>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fba2:	ebab 0303 	sub.w	r3, fp, r3
9000fba6:	429a      	cmp	r2, r3
9000fba8:	f200 80be 	bhi.w	9000fd28 <prvTimerTask+0x258>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
9000fbac:	6a3b      	ldr	r3, [r7, #32]
9000fbae:	4638      	mov	r0, r7
9000fbb0:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
9000fbb2:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
9000fbb6:	0759      	lsls	r1, r3, #29
9000fbb8:	d5be      	bpl.n	9000fb38 <prvTimerTask+0x68>
	if( xTimerQueue != NULL )
9000fbba:	6821      	ldr	r1, [r4, #0]
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9000fbbc:	9b01      	ldr	r3, [sp, #4]
9000fbbe:	69ba      	ldr	r2, [r7, #24]
	if( xTimerQueue != NULL )
9000fbc0:	b171      	cbz	r1, 9000fbe0 <prvTimerTask+0x110>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
9000fbc2:	4413      	add	r3, r2
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
9000fbc4:	e9cd 3705 	strd	r3, r7, [sp, #20]
		xMessage.xMessageID = xCommandID;
9000fbc8:	2700      	movs	r7, #0
9000fbca:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000fbcc:	f7ff fe44 	bl	9000f858 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000fbd0:	463b      	mov	r3, r7
9000fbd2:	463a      	mov	r2, r7
9000fbd4:	a904      	add	r1, sp, #16
9000fbd6:	6820      	ldr	r0, [r4, #0]
9000fbd8:	f7fe f9ba 	bl	9000df50 <xQueueGenericSend>
							configASSERT( xResult );
9000fbdc:	2800      	cmp	r0, #0
9000fbde:	d1ab      	bne.n	9000fb38 <prvTimerTask+0x68>
9000fbe0:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fbe4:	f383 8811 	msr	BASEPRI, r3
9000fbe8:	f3bf 8f6f 	isb	sy
9000fbec:	f3bf 8f4f 	dsb	sy
9000fbf0:	e7fe      	b.n	9000fbf0 <prvTimerTask+0x120>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000fbf2:	f897 2028 	ldrb.w	r2, [r7, #40]	@ 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
9000fbf6:	9b01      	ldr	r3, [sp, #4]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000fbf8:	f042 0201 	orr.w	r2, r2, #1
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
9000fbfc:	61bb      	str	r3, [r7, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
9000fbfe:	f887 2028 	strb.w	r2, [r7, #40]	@ 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9000fc02:	2b00      	cmp	r3, #0
9000fc04:	f000 809c 	beq.w	9000fd40 <prvTimerTask+0x270>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
9000fc08:	445b      	add	r3, fp
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000fc0a:	1d39      	adds	r1, r7, #4
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000fc0c:	613f      	str	r7, [r7, #16]
	if( xNextExpiryTime <= xTimeNow )
9000fc0e:	455b      	cmp	r3, fp
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000fc10:	607b      	str	r3, [r7, #4]
	if( xNextExpiryTime <= xTimeNow )
9000fc12:	d855      	bhi.n	9000fcc0 <prvTimerTask+0x1f0>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000fc14:	4b52      	ldr	r3, [pc, #328]	@ (9000fd60 <prvTimerTask+0x290>)
9000fc16:	6818      	ldr	r0, [r3, #0]
9000fc18:	f7fd fe18 	bl	9000d84c <vListInsert>
9000fc1c:	e78c      	b.n	9000fb38 <prvTimerTask+0x68>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000fc1e:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
9000fc22:	f023 0301 	bic.w	r3, r3, #1
9000fc26:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
					break;
9000fc2a:	e785      	b.n	9000fb38 <prvTimerTask+0x68>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
9000fc2c:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
9000fc30:	079a      	lsls	r2, r3, #30
9000fc32:	d557      	bpl.n	9000fce4 <prvTimerTask+0x214>
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
9000fc34:	f023 0301 	bic.w	r3, r3, #1
9000fc38:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
9000fc3c:	e77c      	b.n	9000fb38 <prvTimerTask+0x68>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
9000fc3e:	9b01      	ldr	r3, [sp, #4]
9000fc40:	9903      	ldr	r1, [sp, #12]
9000fc42:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
9000fc44:	9b00      	ldr	r3, [sp, #0]
9000fc46:	2b00      	cmp	r3, #0
9000fc48:	f6ff af76 	blt.w	9000fb38 <prvTimerTask+0x68>
9000fc4c:	e77f      	b.n	9000fb4e <prvTimerTask+0x7e>
	vTaskSuspendAll();
9000fc4e:	f7ff fc3d 	bl	9000f4cc <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
9000fc52:	f7ff fc53 	bl	9000f4fc <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
9000fc56:	682b      	ldr	r3, [r5, #0]
	xTimeNow = xTaskGetTickCount();
9000fc58:	4682      	mov	sl, r0
	if( xTimeNow < xLastTime )
9000fc5a:	4283      	cmp	r3, r0
9000fc5c:	d909      	bls.n	9000fc72 <prvTimerTask+0x1a2>
		prvSwitchTimerLists();
9000fc5e:	f7ff feeb 	bl	9000fa38 <prvSwitchTimerLists>
	xLastTime = xTimeNow;
9000fc62:	f8c5 a000 	str.w	sl, [r5]
			( void ) xTaskResumeAll();
9000fc66:	f7ff fc39 	bl	9000f4dc <xTaskResumeAll>
9000fc6a:	e765      	b.n	9000fb38 <prvTimerTask+0x68>
		prvSwitchTimerLists();
9000fc6c:	f7ff fee4 	bl	9000fa38 <prvSwitchTimerLists>
		*pxTimerListsWereSwitched = pdTRUE;
9000fc70:	e77a      	b.n	9000fb68 <prvTimerTask+0x98>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
9000fc72:	4b3b      	ldr	r3, [pc, #236]	@ (9000fd60 <prvTimerTask+0x290>)
	xLastTime = xTimeNow;
9000fc74:	f8c5 a000 	str.w	sl, [r5]
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
9000fc78:	681b      	ldr	r3, [r3, #0]
9000fc7a:	681a      	ldr	r2, [r3, #0]
9000fc7c:	fab2 f282 	clz	r2, r2
9000fc80:	0952      	lsrs	r2, r2, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
9000fc82:	eba7 010a 	sub.w	r1, r7, sl
9000fc86:	6820      	ldr	r0, [r4, #0]
9000fc88:	f7fe ff78 	bl	9000eb7c <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
9000fc8c:	f7ff fc26 	bl	9000f4dc <xTaskResumeAll>
9000fc90:	2800      	cmp	r0, #0
9000fc92:	f47f af51 	bne.w	9000fb38 <prvTimerTask+0x68>
					portYIELD_WITHIN_API();
9000fc96:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
9000fc9a:	f8c9 3d04 	str.w	r3, [r9, #3332]	@ 0xd04
9000fc9e:	f3bf 8f4f 	dsb	sy
9000fca2:	f3bf 8f6f 	isb	sy
9000fca6:	e747      	b.n	9000fb38 <prvTimerTask+0x68>
9000fca8:	2200      	movs	r2, #0
9000fcaa:	e7ea      	b.n	9000fc82 <prvTimerTask+0x1b2>
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
9000fcac:	455b      	cmp	r3, fp
9000fcae:	d902      	bls.n	9000fcb6 <prvTimerTask+0x1e6>
9000fcb0:	2800      	cmp	r0, #0
9000fcb2:	f43f af7b 	beq.w	9000fbac <prvTimerTask+0xdc>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fcb6:	1d39      	adds	r1, r7, #4
9000fcb8:	6830      	ldr	r0, [r6, #0]
9000fcba:	f7fd fdc7 	bl	9000d84c <vListInsert>
	return xProcessTimerNow;
9000fcbe:	e73b      	b.n	9000fb38 <prvTimerTask+0x68>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fcc0:	6830      	ldr	r0, [r6, #0]
9000fcc2:	f7fd fdc3 	bl	9000d84c <vListInsert>
9000fcc6:	e737      	b.n	9000fb38 <prvTimerTask+0x68>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
9000fcc8:	f8db 2018 	ldr.w	r2, [fp, #24]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
9000fccc:	f8cb b010 	str.w	fp, [fp, #16]
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
9000fcd0:	18bb      	adds	r3, r7, r2
	if( xNextExpiryTime <= xTimeNow )
9000fcd2:	459a      	cmp	sl, r3
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
9000fcd4:	f8cb 3004 	str.w	r3, [fp, #4]
	if( xNextExpiryTime <= xTimeNow )
9000fcd8:	d208      	bcs.n	9000fcec <prvTimerTask+0x21c>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
9000fcda:	4641      	mov	r1, r8
9000fcdc:	6830      	ldr	r0, [r6, #0]
9000fcde:	f7fd fdb5 	bl	9000d84c <vListInsert>
	return xProcessTimerNow;
9000fce2:	e725      	b.n	9000fb30 <prvTimerTask+0x60>
							vPortFree( pxTimer );
9000fce4:	4638      	mov	r0, r7
9000fce6:	f7fd fd29 	bl	9000d73c <vPortFree>
9000fcea:	e725      	b.n	9000fb38 <prvTimerTask+0x68>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
9000fcec:	ebaa 0a07 	sub.w	sl, sl, r7
9000fcf0:	4552      	cmp	r2, sl
9000fcf2:	d81f      	bhi.n	9000fd34 <prvTimerTask+0x264>
	if( xTimerQueue != NULL )
9000fcf4:	6823      	ldr	r3, [r4, #0]
9000fcf6:	b173      	cbz	r3, 9000fd16 <prvTimerTask+0x246>
		xMessage.u.xTimerParameters.pxTimer = xTimer;
9000fcf8:	e9cd 7b05 	strd	r7, fp, [sp, #20]
		xMessage.xMessageID = xCommandID;
9000fcfc:	2700      	movs	r7, #0
9000fcfe:	9704      	str	r7, [sp, #16]
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
9000fd00:	f7ff fdaa 	bl	9000f858 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
9000fd04:	463b      	mov	r3, r7
9000fd06:	463a      	mov	r2, r7
9000fd08:	a904      	add	r1, sp, #16
9000fd0a:	6820      	ldr	r0, [r4, #0]
9000fd0c:	f7fe f920 	bl	9000df50 <xQueueGenericSend>
			configASSERT( xResult );
9000fd10:	2800      	cmp	r0, #0
9000fd12:	f47f af0d 	bne.w	9000fb30 <prvTimerTask+0x60>
9000fd16:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fd1a:	f383 8811 	msr	BASEPRI, r3
9000fd1e:	f3bf 8f6f 	isb	sy
9000fd22:	f3bf 8f4f 	dsb	sy
9000fd26:	e7fe      	b.n	9000fd26 <prvTimerTask+0x256>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000fd28:	4b0d      	ldr	r3, [pc, #52]	@ (9000fd60 <prvTimerTask+0x290>)
9000fd2a:	1d39      	adds	r1, r7, #4
9000fd2c:	6818      	ldr	r0, [r3, #0]
9000fd2e:	f7fd fd8d 	bl	9000d84c <vListInsert>
	return xProcessTimerNow;
9000fd32:	e701      	b.n	9000fb38 <prvTimerTask+0x68>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
9000fd34:	4b0a      	ldr	r3, [pc, #40]	@ (9000fd60 <prvTimerTask+0x290>)
9000fd36:	4641      	mov	r1, r8
9000fd38:	6818      	ldr	r0, [r3, #0]
9000fd3a:	f7fd fd87 	bl	9000d84c <vListInsert>
	return xProcessTimerNow;
9000fd3e:	e6f7      	b.n	9000fb30 <prvTimerTask+0x60>
9000fd40:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fd44:	f383 8811 	msr	BASEPRI, r3
9000fd48:	f3bf 8f6f 	isb	sy
9000fd4c:	f3bf 8f4f 	dsb	sy
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
9000fd50:	e7fe      	b.n	9000fd50 <prvTimerTask+0x280>
9000fd52:	bf00      	nop
9000fd54:	24021954 	.word	0x24021954
9000fd58:	24021944 	.word	0x24021944
9000fd5c:	2402194c 	.word	0x2402194c
9000fd60:	24021950 	.word	0x24021950

9000fd64 <xTimerCreateTimerTask>:
{
9000fd64:	b5f0      	push	{r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
9000fd66:	4c23      	ldr	r4, [pc, #140]	@ (9000fdf4 <xTimerCreateTimerTask+0x90>)
{
9000fd68:	b089      	sub	sp, #36	@ 0x24
	taskENTER_CRITICAL();
9000fd6a:	f7fd fe03 	bl	9000d974 <vPortEnterCritical>
		if( xTimerQueue == NULL )
9000fd6e:	6825      	ldr	r5, [r4, #0]
9000fd70:	b335      	cbz	r5, 9000fdc0 <xTimerCreateTimerTask+0x5c>
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
9000fd72:	f7fd fe21 	bl	9000d9b8 <vPortExitCritical>
	if( xTimerQueue != NULL )
9000fd76:	6823      	ldr	r3, [r4, #0]
9000fd78:	b1cb      	cbz	r3, 9000fdae <xTimerCreateTimerTask+0x4a>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
9000fd7a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9000fd7c:	aa07      	add	r2, sp, #28
9000fd7e:	a906      	add	r1, sp, #24
9000fd80:	a805      	add	r0, sp, #20
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9000fd82:	2502      	movs	r5, #2
			StackType_t *pxTimerTaskStackBuffer = NULL;
9000fd84:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
9000fd88:	f7fd fc0a 	bl	9000d5a0 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
9000fd8c:	4623      	mov	r3, r4
9000fd8e:	9a07      	ldr	r2, [sp, #28]
9000fd90:	9500      	str	r5, [sp, #0]
9000fd92:	e9dd 0105 	ldrd	r0, r1, [sp, #20]
9000fd96:	e9cd 1001 	strd	r1, r0, [sp, #4]
9000fd9a:	4917      	ldr	r1, [pc, #92]	@ (9000fdf8 <xTimerCreateTimerTask+0x94>)
9000fd9c:	4817      	ldr	r0, [pc, #92]	@ (9000fdfc <xTimerCreateTimerTask+0x98>)
9000fd9e:	f7ff f967 	bl	9000f070 <xTaskCreateStatic>
9000fda2:	4b17      	ldr	r3, [pc, #92]	@ (9000fe00 <xTimerCreateTimerTask+0x9c>)
9000fda4:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
9000fda6:	b110      	cbz	r0, 9000fdae <xTimerCreateTimerTask+0x4a>
}
9000fda8:	2001      	movs	r0, #1
9000fdaa:	b009      	add	sp, #36	@ 0x24
9000fdac:	bdf0      	pop	{r4, r5, r6, r7, pc}
9000fdae:	f04f 0350 	mov.w	r3, #80	@ 0x50
9000fdb2:	f383 8811 	msr	BASEPRI, r3
9000fdb6:	f3bf 8f6f 	isb	sy
9000fdba:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
9000fdbe:	e7fe      	b.n	9000fdbe <xTimerCreateTimerTask+0x5a>
			vListInitialise( &xActiveTimerList1 );
9000fdc0:	4f10      	ldr	r7, [pc, #64]	@ (9000fe04 <xTimerCreateTimerTask+0xa0>)
			vListInitialise( &xActiveTimerList2 );
9000fdc2:	4e11      	ldr	r6, [pc, #68]	@ (9000fe08 <xTimerCreateTimerTask+0xa4>)
			vListInitialise( &xActiveTimerList1 );
9000fdc4:	4638      	mov	r0, r7
9000fdc6:	f7fd fd23 	bl	9000d810 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
9000fdca:	4630      	mov	r0, r6
9000fdcc:	f7fd fd20 	bl	9000d810 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
9000fdd0:	4a0e      	ldr	r2, [pc, #56]	@ (9000fe0c <xTimerCreateTimerTask+0xa8>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fdd2:	9500      	str	r5, [sp, #0]
9000fdd4:	2110      	movs	r1, #16
			pxCurrentTimerList = &xActiveTimerList1;
9000fdd6:	6017      	str	r7, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fdd8:	200a      	movs	r0, #10
			pxOverflowTimerList = &xActiveTimerList2;
9000fdda:	4a0d      	ldr	r2, [pc, #52]	@ (9000fe10 <xTimerCreateTimerTask+0xac>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fddc:	4b0d      	ldr	r3, [pc, #52]	@ (9000fe14 <xTimerCreateTimerTask+0xb0>)
			pxOverflowTimerList = &xActiveTimerList2;
9000fdde:	6016      	str	r6, [r2, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
9000fde0:	4a0d      	ldr	r2, [pc, #52]	@ (9000fe18 <xTimerCreateTimerTask+0xb4>)
9000fde2:	f7fd ff61 	bl	9000dca8 <xQueueGenericCreateStatic>
9000fde6:	6020      	str	r0, [r4, #0]
				if( xTimerQueue != NULL )
9000fde8:	2800      	cmp	r0, #0
9000fdea:	d0c2      	beq.n	9000fd72 <xTimerCreateTimerTask+0xe>
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
9000fdec:	490b      	ldr	r1, [pc, #44]	@ (9000fe1c <xTimerCreateTimerTask+0xb8>)
9000fdee:	f7fe fe9d 	bl	9000eb2c <vQueueAddToRegistry>
9000fdf2:	e7be      	b.n	9000fd72 <xTimerCreateTimerTask+0xe>
9000fdf4:	2402194c 	.word	0x2402194c
9000fdf8:	9002c298 	.word	0x9002c298
9000fdfc:	9000fad1 	.word	0x9000fad1
9000fe00:	24021948 	.word	0x24021948
9000fe04:	2402196c 	.word	0x2402196c
9000fe08:	24021958 	.word	0x24021958
9000fe0c:	24021954 	.word	0x24021954
9000fe10:	24021950 	.word	0x24021950
9000fe14:	24021854 	.word	0x24021854
9000fe18:	240218a4 	.word	0x240218a4
9000fe1c:	9002c290 	.word	0x9002c290

9000fe20 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
9000fe20:	8880      	ldrh	r0, [r0, #4]
9000fe22:	4770      	bx	lr

9000fe24 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
9000fe24:	b570      	push	{r4, r5, r6, lr}
9000fe26:	6803      	ldr	r3, [r0, #0]
9000fe28:	460c      	mov	r4, r1
9000fe2a:	2100      	movs	r1, #0
9000fe2c:	4605      	mov	r5, r0
9000fe2e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000fe30:	4798      	blx	r3
9000fe32:	4606      	mov	r6, r0
9000fe34:	682b      	ldr	r3, [r5, #0]
9000fe36:	4628      	mov	r0, r5
9000fe38:	1ba4      	subs	r4, r4, r6
9000fe3a:	6a1b      	ldr	r3, [r3, #32]
9000fe3c:	b2a4      	uxth	r4, r4
9000fe3e:	4798      	blx	r3
9000fe40:	fbb4 f0f0 	udiv	r0, r4, r0
9000fe44:	bd70      	pop	{r4, r5, r6, pc}

9000fe46 <_ZN8touchgfx17AbstractPartition5clearEv>:
9000fe46:	2300      	movs	r3, #0
9000fe48:	8083      	strh	r3, [r0, #4]
9000fe4a:	4770      	bx	lr

9000fe4c <_ZN8touchgfx17AbstractPartition8allocateEt>:
9000fe4c:	b510      	push	{r4, lr}
9000fe4e:	6803      	ldr	r3, [r0, #0]
9000fe50:	4604      	mov	r4, r0
9000fe52:	8881      	ldrh	r1, [r0, #4]
9000fe54:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000fe56:	4798      	blx	r3
9000fe58:	88a3      	ldrh	r3, [r4, #4]
9000fe5a:	3301      	adds	r3, #1
9000fe5c:	80a3      	strh	r3, [r4, #4]
9000fe5e:	bd10      	pop	{r4, pc}

9000fe60 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
9000fe60:	6803      	ldr	r3, [r0, #0]
9000fe62:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9000fe64:	4718      	bx	r3

9000fe66 <_ZN8touchgfx17AbstractPartitionD1Ev>:
9000fe66:	4770      	bx	lr

9000fe68 <_ZN8touchgfx17AbstractPartitionC1Ev>:
9000fe68:	4a02      	ldr	r2, [pc, #8]	@ (9000fe74 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
9000fe6a:	6002      	str	r2, [r0, #0]
9000fe6c:	2200      	movs	r2, #0
9000fe6e:	8082      	strh	r2, [r0, #4]
9000fe70:	4770      	bx	lr
9000fe72:	bf00      	nop
9000fe74:	9002d108 	.word	0x9002d108

9000fe78 <_ZN8touchgfx9Container13getFirstChildEv>:
9000fe78:	6a80      	ldr	r0, [r0, #40]	@ 0x28
9000fe7a:	4770      	bx	lr

9000fe7c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
9000fe7c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000fe7e:	2000      	movs	r0, #0
9000fe80:	b12b      	cbz	r3, 9000fe8e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9000fe82:	b920      	cbnz	r0, 9000fe8e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
9000fe84:	1a5a      	subs	r2, r3, r1
9000fe86:	699b      	ldr	r3, [r3, #24]
9000fe88:	4250      	negs	r0, r2
9000fe8a:	4150      	adcs	r0, r2
9000fe8c:	e7f8      	b.n	9000fe80 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
9000fe8e:	4770      	bx	lr

9000fe90 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
9000fe90:	2300      	movs	r3, #0
9000fe92:	6148      	str	r0, [r1, #20]
9000fe94:	618b      	str	r3, [r1, #24]
9000fe96:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000fe98:	b913      	cbnz	r3, 9000fea0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
9000fe9a:	6281      	str	r1, [r0, #40]	@ 0x28
9000fe9c:	4770      	bx	lr
9000fe9e:	4613      	mov	r3, r2
9000fea0:	699a      	ldr	r2, [r3, #24]
9000fea2:	2a00      	cmp	r2, #0
9000fea4:	d1fb      	bne.n	9000fe9e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
9000fea6:	6199      	str	r1, [r3, #24]
9000fea8:	4770      	bx	lr

9000feaa <_ZN8touchgfx9Container9removeAllEv>:
9000feaa:	2200      	movs	r2, #0
9000feac:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000feae:	b123      	cbz	r3, 9000feba <_ZN8touchgfx9Container9removeAllEv+0x10>
9000feb0:	6999      	ldr	r1, [r3, #24]
9000feb2:	6281      	str	r1, [r0, #40]	@ 0x28
9000feb4:	e9c3 2205 	strd	r2, r2, [r3, #20]
9000feb8:	e7f8      	b.n	9000feac <_ZN8touchgfx9Container9removeAllEv+0x2>
9000feba:	4770      	bx	lr

9000febc <_ZN8touchgfx9Container6unlinkEv>:
9000febc:	2300      	movs	r3, #0
9000febe:	6283      	str	r3, [r0, #40]	@ 0x28
9000fec0:	4770      	bx	lr

9000fec2 <_ZNK8touchgfx9Container12getSolidRectEv>:
9000fec2:	2200      	movs	r2, #0
9000fec4:	8002      	strh	r2, [r0, #0]
9000fec6:	8042      	strh	r2, [r0, #2]
9000fec8:	8082      	strh	r2, [r0, #4]
9000feca:	80c2      	strh	r2, [r0, #6]
9000fecc:	4770      	bx	lr

9000fece <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
9000fece:	b570      	push	{r4, r5, r6, lr}
9000fed0:	460d      	mov	r5, r1
9000fed2:	4616      	mov	r6, r2
9000fed4:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9000fed6:	b13c      	cbz	r4, 9000fee8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
9000fed8:	6823      	ldr	r3, [r4, #0]
9000feda:	4620      	mov	r0, r4
9000fedc:	4632      	mov	r2, r6
9000fede:	4629      	mov	r1, r5
9000fee0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
9000fee2:	4798      	blx	r3
9000fee4:	69a4      	ldr	r4, [r4, #24]
9000fee6:	e7f6      	b.n	9000fed6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
9000fee8:	bd70      	pop	{r4, r5, r6, pc}

9000feea <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
9000feea:	b538      	push	{r3, r4, r5, lr}
9000feec:	460d      	mov	r5, r1
9000feee:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9000fef0:	b134      	cbz	r4, 9000ff00 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
9000fef2:	682b      	ldr	r3, [r5, #0]
9000fef4:	4621      	mov	r1, r4
9000fef6:	4628      	mov	r0, r5
9000fef8:	689b      	ldr	r3, [r3, #8]
9000fefa:	4798      	blx	r3
9000fefc:	69a4      	ldr	r4, [r4, #24]
9000fefe:	e7f7      	b.n	9000fef0 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
9000ff00:	bd38      	pop	{r3, r4, r5, pc}

9000ff02 <_ZN8touchgfx9ContainerD1Ev>:
9000ff02:	4770      	bx	lr

9000ff04 <_ZN8touchgfx9ContainerD0Ev>:
9000ff04:	b510      	push	{r4, lr}
9000ff06:	4604      	mov	r4, r0
9000ff08:	212c      	movs	r1, #44	@ 0x2c
9000ff0a:	f018 ffb7 	bl	90028e7c <_ZdlPvj>
9000ff0e:	4620      	mov	r0, r4
9000ff10:	bd10      	pop	{r4, pc}

9000ff12 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
9000ff12:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000ff14:	b19b      	cbz	r3, 9000ff3e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9000ff16:	428b      	cmp	r3, r1
9000ff18:	d109      	bne.n	9000ff2e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
9000ff1a:	699a      	ldr	r2, [r3, #24]
9000ff1c:	2100      	movs	r1, #0
9000ff1e:	6159      	str	r1, [r3, #20]
9000ff20:	6282      	str	r2, [r0, #40]	@ 0x28
9000ff22:	b902      	cbnz	r2, 9000ff26 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
9000ff24:	4770      	bx	lr
9000ff26:	6199      	str	r1, [r3, #24]
9000ff28:	4770      	bx	lr
9000ff2a:	4613      	mov	r3, r2
9000ff2c:	b13a      	cbz	r2, 9000ff3e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
9000ff2e:	699a      	ldr	r2, [r3, #24]
9000ff30:	428a      	cmp	r2, r1
9000ff32:	d1fa      	bne.n	9000ff2a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
9000ff34:	698a      	ldr	r2, [r1, #24]
9000ff36:	619a      	str	r2, [r3, #24]
9000ff38:	2300      	movs	r3, #0
9000ff3a:	e9c1 3305 	strd	r3, r3, [r1, #20]
9000ff3e:	4770      	bx	lr

9000ff40 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
9000ff40:	b410      	push	{r4}
9000ff42:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9000ff44:	4604      	mov	r4, r0
9000ff46:	b92b      	cbnz	r3, 9000ff54 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
9000ff48:	6803      	ldr	r3, [r0, #0]
9000ff4a:	4611      	mov	r1, r2
9000ff4c:	f85d 4b04 	ldr.w	r4, [sp], #4
9000ff50:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
9000ff52:	4718      	bx	r3
9000ff54:	b941      	cbnz	r1, 9000ff68 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
9000ff56:	6193      	str	r3, [r2, #24]
9000ff58:	6282      	str	r2, [r0, #40]	@ 0x28
9000ff5a:	6154      	str	r4, [r2, #20]
9000ff5c:	f85d 4b04 	ldr.w	r4, [sp], #4
9000ff60:	4770      	bx	lr
9000ff62:	4603      	mov	r3, r0
9000ff64:	2800      	cmp	r0, #0
9000ff66:	d0f9      	beq.n	9000ff5c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
9000ff68:	4299      	cmp	r1, r3
9000ff6a:	6998      	ldr	r0, [r3, #24]
9000ff6c:	d1f9      	bne.n	9000ff62 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
9000ff6e:	6190      	str	r0, [r2, #24]
9000ff70:	618a      	str	r2, [r1, #24]
9000ff72:	e7f2      	b.n	9000ff5a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

9000ff74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
9000ff74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9000ff78:	461f      	mov	r7, r3
9000ff7a:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
9000ff7e:	460d      	mov	r5, r1
9000ff80:	4616      	mov	r6, r2
9000ff82:	b103      	cbz	r3, 9000ff86 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
9000ff84:	6038      	str	r0, [r7, #0]
9000ff86:	6a84      	ldr	r4, [r0, #40]	@ 0x28
9000ff88:	b314      	cbz	r4, 9000ffd0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
9000ff8a:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
9000ff8e:	b1eb      	cbz	r3, 9000ffcc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000ff90:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9000ff94:	428d      	cmp	r5, r1
9000ff96:	db19      	blt.n	9000ffcc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000ff98:	b289      	uxth	r1, r1
9000ff9a:	8923      	ldrh	r3, [r4, #8]
9000ff9c:	440b      	add	r3, r1
9000ff9e:	b21b      	sxth	r3, r3
9000ffa0:	429d      	cmp	r5, r3
9000ffa2:	da13      	bge.n	9000ffcc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000ffa4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
9000ffa8:	4296      	cmp	r6, r2
9000ffaa:	db0f      	blt.n	9000ffcc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000ffac:	b292      	uxth	r2, r2
9000ffae:	8963      	ldrh	r3, [r4, #10]
9000ffb0:	4413      	add	r3, r2
9000ffb2:	b21b      	sxth	r3, r3
9000ffb4:	429e      	cmp	r6, r3
9000ffb6:	da09      	bge.n	9000ffcc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
9000ffb8:	6823      	ldr	r3, [r4, #0]
9000ffba:	1ab2      	subs	r2, r6, r2
9000ffbc:	1a69      	subs	r1, r5, r1
9000ffbe:	4620      	mov	r0, r4
9000ffc0:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
9000ffc4:	b212      	sxth	r2, r2
9000ffc6:	463b      	mov	r3, r7
9000ffc8:	b209      	sxth	r1, r1
9000ffca:	47c0      	blx	r8
9000ffcc:	69a4      	ldr	r4, [r4, #24]
9000ffce:	e7db      	b.n	9000ff88 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
9000ffd0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

9000ffd4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
9000ffd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9000ffd8:	4c6d      	ldr	r4, [pc, #436]	@ (90010190 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
9000ffda:	b0a1      	sub	sp, #132	@ 0x84
9000ffdc:	4606      	mov	r6, r0
9000ffde:	6824      	ldr	r4, [r4, #0]
9000ffe0:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
9000ffe2:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
9000ffe6:	2400      	movs	r4, #0
9000ffe8:	9303      	str	r3, [sp, #12]
9000ffea:	802c      	strh	r4, [r5, #0]
9000ffec:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
9000ffee:	802c      	strh	r4, [r5, #0]
9000fff0:	601c      	str	r4, [r3, #0]
9000fff2:	e9cd 1201 	strd	r1, r2, [sp, #4]
9000fff6:	f7ff ffbd 	bl	9000ff74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
9000fffa:	f1b9 0f03 	cmp.w	r9, #3
9000fffe:	f340 80c1 	ble.w	90010184 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
90010002:	4631      	mov	r1, r6
90010004:	a80c      	add	r0, sp, #48	@ 0x30
90010006:	f007 fb67 	bl	900176d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001000a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
9001000e:	9306      	str	r3, [sp, #24]
90010010:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90010014:	9307      	str	r3, [sp, #28]
90010016:	9b03      	ldr	r3, [sp, #12]
90010018:	f8d3 a000 	ldr.w	sl, [r3]
9001001c:	f1ba 0f00 	cmp.w	sl, #0
90010020:	f000 80b3 	beq.w	9001018a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
90010024:	4651      	mov	r1, sl
90010026:	a810      	add	r0, sp, #64	@ 0x40
90010028:	f007 fb56 	bl	900176d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001002c:	2002      	movs	r0, #2
9001002e:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
90010032:	9b01      	ldr	r3, [sp, #4]
90010034:	9a06      	ldr	r2, [sp, #24]
90010036:	fb91 f1f0 	sdiv	r1, r1, r0
9001003a:	189d      	adds	r5, r3, r2
9001003c:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
90010040:	9a07      	ldr	r2, [sp, #28]
90010042:	4419      	add	r1, r3
90010044:	9b02      	ldr	r3, [sp, #8]
90010046:	4413      	add	r3, r2
90010048:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
9001004c:	1a6d      	subs	r5, r5, r1
9001004e:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
90010052:	fb92 f2f0 	sdiv	r2, r2, r0
90010056:	440a      	add	r2, r1
90010058:	1a9b      	subs	r3, r3, r2
9001005a:	435b      	muls	r3, r3
9001005c:	fb05 3505 	mla	r5, r5, r5, r3
90010060:	4f4c      	ldr	r7, [pc, #304]	@ (90010194 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
90010062:	ac10      	add	r4, sp, #64	@ 0x40
90010064:	f1b9 0f0c 	cmp.w	r9, #12
90010068:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9001006a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9001006c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
9001006e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90010070:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
90010072:	c40f      	stmia	r4!, {r0, r1, r2, r3}
90010074:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
90010078:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
9001007c:	f04f 0303 	mov.w	r3, #3
90010080:	bfd8      	it	le
90010082:	f109 32ff 	addle.w	r2, r9, #4294967295
90010086:	f04f 0400 	mov.w	r4, #0
9001008a:	f8cd 9000 	str.w	r9, [sp]
9001008e:	bfcc      	ite	gt
90010090:	4698      	movgt	r8, r3
90010092:	fb92 f8f3 	sdivle	r8, r2, r3
90010096:	1c63      	adds	r3, r4, #1
90010098:	aa10      	add	r2, sp, #64	@ 0x40
9001009a:	f004 0401 	and.w	r4, r4, #1
9001009e:	f04f 0b00 	mov.w	fp, #0
900100a2:	9308      	str	r3, [sp, #32]
900100a4:	9b00      	ldr	r3, [sp, #0]
900100a6:	eb02 1444 	add.w	r4, r2, r4, lsl #5
900100aa:	fb93 f3f8 	sdiv	r3, r3, r8
900100ae:	3404      	adds	r4, #4
900100b0:	b29b      	uxth	r3, r3
900100b2:	9304      	str	r3, [sp, #16]
900100b4:	9a04      	ldr	r2, [sp, #16]
900100b6:	f854 3c04 	ldr.w	r3, [r4, #-4]
900100ba:	fb13 f302 	smulbb	r3, r3, r2
900100be:	9a01      	ldr	r2, [sp, #4]
900100c0:	b29b      	uxth	r3, r3
900100c2:	1899      	adds	r1, r3, r2
900100c4:	9305      	str	r3, [sp, #20]
900100c6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
900100ca:	b209      	sxth	r1, r1
900100cc:	4299      	cmp	r1, r3
900100ce:	db4d      	blt.n	9001016c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900100d0:	8932      	ldrh	r2, [r6, #8]
900100d2:	4413      	add	r3, r2
900100d4:	b21b      	sxth	r3, r3
900100d6:	4299      	cmp	r1, r3
900100d8:	da48      	bge.n	9001016c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900100da:	9b04      	ldr	r3, [sp, #16]
900100dc:	6827      	ldr	r7, [r4, #0]
900100de:	fb17 f703 	smulbb	r7, r7, r3
900100e2:	9b02      	ldr	r3, [sp, #8]
900100e4:	b2bf      	uxth	r7, r7
900100e6:	18fa      	adds	r2, r7, r3
900100e8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
900100ec:	b212      	sxth	r2, r2
900100ee:	429a      	cmp	r2, r3
900100f0:	db3c      	blt.n	9001016c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900100f2:	8970      	ldrh	r0, [r6, #10]
900100f4:	4403      	add	r3, r0
900100f6:	b21b      	sxth	r3, r3
900100f8:	429a      	cmp	r2, r3
900100fa:	da37      	bge.n	9001016c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
900100fc:	2300      	movs	r3, #0
900100fe:	4630      	mov	r0, r6
90010100:	930b      	str	r3, [sp, #44]	@ 0x2c
90010102:	ab0b      	add	r3, sp, #44	@ 0x2c
90010104:	f7ff ff36 	bl	9000ff74 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
90010108:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001010a:	b37a      	cbz	r2, 9001016c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
9001010c:	4552      	cmp	r2, sl
9001010e:	d02d      	beq.n	9001016c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
90010110:	4611      	mov	r1, r2
90010112:	a80e      	add	r0, sp, #56	@ 0x38
90010114:	9209      	str	r2, [sp, #36]	@ 0x24
90010116:	f007 fadf 	bl	900176d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001011a:	f04f 0e02 	mov.w	lr, #2
9001011e:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
90010122:	9a06      	ldr	r2, [sp, #24]
90010124:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
90010128:	9b01      	ldr	r3, [sp, #4]
9001012a:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
9001012e:	4413      	add	r3, r2
90010130:	9a07      	ldr	r2, [sp, #28]
90010132:	fb91 f1fe 	sdiv	r1, r1, lr
90010136:	fb9c fcfe 	sdiv	ip, ip, lr
9001013a:	4401      	add	r1, r0
9001013c:	1a58      	subs	r0, r3, r1
9001013e:	9b02      	ldr	r3, [sp, #8]
90010140:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
90010144:	4413      	add	r3, r2
90010146:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90010148:	448c      	add	ip, r1
9001014a:	eba3 030c 	sub.w	r3, r3, ip
9001014e:	435b      	muls	r3, r3
90010150:	fb00 3300 	mla	r3, r0, r0, r3
90010154:	42ab      	cmp	r3, r5
90010156:	d208      	bcs.n	9001016a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
90010158:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001015a:	461d      	mov	r5, r3
9001015c:	9803      	ldr	r0, [sp, #12]
9001015e:	6001      	str	r1, [r0, #0]
90010160:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90010162:	9805      	ldr	r0, [sp, #20]
90010164:	8008      	strh	r0, [r1, #0]
90010166:	992b      	ldr	r1, [sp, #172]	@ 0xac
90010168:	800f      	strh	r7, [r1, #0]
9001016a:	4692      	mov	sl, r2
9001016c:	f10b 0b01 	add.w	fp, fp, #1
90010170:	3408      	adds	r4, #8
90010172:	f1bb 0f04 	cmp.w	fp, #4
90010176:	d19d      	bne.n	900100b4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
90010178:	9b00      	ldr	r3, [sp, #0]
9001017a:	9c08      	ldr	r4, [sp, #32]
9001017c:	444b      	add	r3, r9
9001017e:	4544      	cmp	r4, r8
90010180:	9300      	str	r3, [sp, #0]
90010182:	d188      	bne.n	90010096 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
90010184:	b021      	add	sp, #132	@ 0x84
90010186:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001018a:	f04f 35ff 	mov.w	r5, #4294967295
9001018e:	e767      	b.n	90010060 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
90010190:	2402198c 	.word	0x2402198c
90010194:	9002a5e0 	.word	0x9002a5e0

90010198 <_ZN8touchgfx4RectaNERKS0_>:
90010198:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001019c:	f9b1 7000 	ldrsh.w	r7, [r1]
900101a0:	888c      	ldrh	r4, [r1, #4]
900101a2:	f9b0 9000 	ldrsh.w	r9, [r0]
900101a6:	443c      	add	r4, r7
900101a8:	b2a4      	uxth	r4, r4
900101aa:	fa0f f884 	sxth.w	r8, r4
900101ae:	45c1      	cmp	r9, r8
900101b0:	da2f      	bge.n	90010212 <_ZN8touchgfx4RectaNERKS0_+0x7a>
900101b2:	8882      	ldrh	r2, [r0, #4]
900101b4:	444a      	add	r2, r9
900101b6:	b292      	uxth	r2, r2
900101b8:	fa0f fe82 	sxth.w	lr, r2
900101bc:	4577      	cmp	r7, lr
900101be:	da28      	bge.n	90010212 <_ZN8touchgfx4RectaNERKS0_+0x7a>
900101c0:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
900101c4:	88cb      	ldrh	r3, [r1, #6]
900101c6:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
900101ca:	442b      	add	r3, r5
900101cc:	b21b      	sxth	r3, r3
900101ce:	429e      	cmp	r6, r3
900101d0:	da1f      	bge.n	90010212 <_ZN8touchgfx4RectaNERKS0_+0x7a>
900101d2:	88c3      	ldrh	r3, [r0, #6]
900101d4:	4433      	add	r3, r6
900101d6:	b29b      	uxth	r3, r3
900101d8:	fa0f fc83 	sxth.w	ip, r3
900101dc:	4565      	cmp	r5, ip
900101de:	da18      	bge.n	90010212 <_ZN8touchgfx4RectaNERKS0_+0x7a>
900101e0:	454f      	cmp	r7, r9
900101e2:	bfb8      	it	lt
900101e4:	464f      	movlt	r7, r9
900101e6:	42b5      	cmp	r5, r6
900101e8:	bfb8      	it	lt
900101ea:	4635      	movlt	r5, r6
900101ec:	45f0      	cmp	r8, lr
900101ee:	bfd8      	it	le
900101f0:	4622      	movle	r2, r4
900101f2:	1bd2      	subs	r2, r2, r7
900101f4:	8082      	strh	r2, [r0, #4]
900101f6:	884a      	ldrh	r2, [r1, #2]
900101f8:	88c9      	ldrh	r1, [r1, #6]
900101fa:	8007      	strh	r7, [r0, #0]
900101fc:	440a      	add	r2, r1
900101fe:	8045      	strh	r5, [r0, #2]
90010200:	b292      	uxth	r2, r2
90010202:	b211      	sxth	r1, r2
90010204:	458c      	cmp	ip, r1
90010206:	bfa8      	it	ge
90010208:	4613      	movge	r3, r2
9001020a:	1b5b      	subs	r3, r3, r5
9001020c:	80c3      	strh	r3, [r0, #6]
9001020e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90010212:	2300      	movs	r3, #0
90010214:	8003      	strh	r3, [r0, #0]
90010216:	8043      	strh	r3, [r0, #2]
90010218:	8083      	strh	r3, [r0, #4]
9001021a:	80c3      	strh	r3, [r0, #6]
9001021c:	e7f7      	b.n	9001020e <_ZN8touchgfx4RectaNERKS0_+0x76>

9001021e <_ZNK8touchgfx4Rect7isEmptyEv>:
9001021e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90010222:	2b00      	cmp	r3, #0
90010224:	dd06      	ble.n	90010234 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
90010226:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
9001022a:	2800      	cmp	r0, #0
9001022c:	bfcc      	ite	gt
9001022e:	2000      	movgt	r0, #0
90010230:	2001      	movle	r0, #1
90010232:	4770      	bx	lr
90010234:	2001      	movs	r0, #1
90010236:	4770      	bx	lr

90010238 <_ZNK8touchgfx9Container16getContainedAreaEv>:
90010238:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001023c:	2300      	movs	r3, #0
9001023e:	4604      	mov	r4, r0
90010240:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
90010242:	8003      	strh	r3, [r0, #0]
90010244:	8043      	strh	r3, [r0, #2]
90010246:	8083      	strh	r3, [r0, #4]
90010248:	80c3      	strh	r3, [r0, #6]
9001024a:	2d00      	cmp	r5, #0
9001024c:	d040      	beq.n	900102d0 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
9001024e:	1d28      	adds	r0, r5, #4
90010250:	f7ff ffe5 	bl	9001021e <_ZNK8touchgfx4Rect7isEmptyEv>
90010254:	b988      	cbnz	r0, 9001027a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
90010256:	4620      	mov	r0, r4
90010258:	f7ff ffe1 	bl	9001021e <_ZNK8touchgfx4Rect7isEmptyEv>
9001025c:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90010260:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
90010264:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
90010268:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
9001026c:	b138      	cbz	r0, 9001027e <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
9001026e:	8022      	strh	r2, [r4, #0]
90010270:	8063      	strh	r3, [r4, #2]
90010272:	f8a4 e004 	strh.w	lr, [r4, #4]
90010276:	f8a4 c006 	strh.w	ip, [r4, #6]
9001027a:	69ad      	ldr	r5, [r5, #24]
9001027c:	e7e5      	b.n	9001024a <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
9001027e:	f9b4 0000 	ldrsh.w	r0, [r4]
90010282:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90010286:	4290      	cmp	r0, r2
90010288:	4607      	mov	r7, r0
9001028a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
9001028e:	460e      	mov	r6, r1
90010290:	bfa8      	it	ge
90010292:	4617      	movge	r7, r2
90010294:	4299      	cmp	r1, r3
90010296:	4472      	add	r2, lr
90010298:	f8b4 e006 	ldrh.w	lr, [r4, #6]
9001029c:	bfa8      	it	ge
9001029e:	461e      	movge	r6, r3
900102a0:	4440      	add	r0, r8
900102a2:	4471      	add	r1, lr
900102a4:	4463      	add	r3, ip
900102a6:	b200      	sxth	r0, r0
900102a8:	8027      	strh	r7, [r4, #0]
900102aa:	b212      	sxth	r2, r2
900102ac:	8066      	strh	r6, [r4, #2]
900102ae:	b209      	sxth	r1, r1
900102b0:	b21b      	sxth	r3, r3
900102b2:	4290      	cmp	r0, r2
900102b4:	bfac      	ite	ge
900102b6:	ebc7 0200 	rsbge	r2, r7, r0
900102ba:	ebc7 0202 	rsblt	r2, r7, r2
900102be:	4299      	cmp	r1, r3
900102c0:	bfac      	ite	ge
900102c2:	ebc6 0301 	rsbge	r3, r6, r1
900102c6:	ebc6 0303 	rsblt	r3, r6, r3
900102ca:	80a2      	strh	r2, [r4, #4]
900102cc:	80e3      	strh	r3, [r4, #6]
900102ce:	e7d4      	b.n	9001027a <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
900102d0:	4620      	mov	r0, r4
900102d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

900102d6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
900102d6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
900102da:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
900102de:	b383      	cbz	r3, 90010342 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
900102e0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
900102e2:	b374      	cbz	r4, 90010342 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
900102e4:	f9b1 5000 	ldrsh.w	r5, [r1]
900102e8:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
900102ec:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
900102f0:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
900102f4:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
900102f8:	b303      	cbz	r3, 9001033c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
900102fa:	4668      	mov	r0, sp
900102fc:	1d21      	adds	r1, r4, #4
900102fe:	f8ad 5000 	strh.w	r5, [sp]
90010302:	f8ad 6002 	strh.w	r6, [sp, #2]
90010306:	f8ad 7004 	strh.w	r7, [sp, #4]
9001030a:	f8ad 8006 	strh.w	r8, [sp, #6]
9001030e:	f7ff ff43 	bl	90010198 <_ZN8touchgfx4RectaNERKS0_>
90010312:	4668      	mov	r0, sp
90010314:	f7ff ff83 	bl	9001021e <_ZNK8touchgfx4Rect7isEmptyEv>
90010318:	b980      	cbnz	r0, 9001033c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
9001031a:	f8bd 3000 	ldrh.w	r3, [sp]
9001031e:	4669      	mov	r1, sp
90010320:	88a2      	ldrh	r2, [r4, #4]
90010322:	4620      	mov	r0, r4
90010324:	1a9b      	subs	r3, r3, r2
90010326:	88e2      	ldrh	r2, [r4, #6]
90010328:	f8ad 3000 	strh.w	r3, [sp]
9001032c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90010330:	1a9b      	subs	r3, r3, r2
90010332:	f8ad 3002 	strh.w	r3, [sp, #2]
90010336:	6823      	ldr	r3, [r4, #0]
90010338:	689b      	ldr	r3, [r3, #8]
9001033a:	4798      	blx	r3
9001033c:	69a4      	ldr	r4, [r4, #24]
9001033e:	2c00      	cmp	r4, #0
90010340:	d1d8      	bne.n	900102f4 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
90010342:	b002      	add	sp, #8
90010344:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010348 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
90010348:	b573      	push	{r0, r1, r4, r5, r6, lr}
9001034a:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
9001034e:	460d      	mov	r5, r1
90010350:	4616      	mov	r6, r2
90010352:	b323      	cbz	r3, 9001039e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90010354:	6a84      	ldr	r4, [r0, #40]	@ 0x28
90010356:	b314      	cbz	r4, 9001039e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
90010358:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
9001035c:	b1eb      	cbz	r3, 9001039a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
9001035e:	6828      	ldr	r0, [r5, #0]
90010360:	466b      	mov	r3, sp
90010362:	6869      	ldr	r1, [r5, #4]
90010364:	c303      	stmia	r3!, {r0, r1}
90010366:	4668      	mov	r0, sp
90010368:	1d21      	adds	r1, r4, #4
9001036a:	f7ff ff15 	bl	90010198 <_ZN8touchgfx4RectaNERKS0_>
9001036e:	4668      	mov	r0, sp
90010370:	f7ff ff55 	bl	9001021e <_ZNK8touchgfx4Rect7isEmptyEv>
90010374:	b988      	cbnz	r0, 9001039a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
90010376:	f8bd 3000 	ldrh.w	r3, [sp]
9001037a:	4669      	mov	r1, sp
9001037c:	88a2      	ldrh	r2, [r4, #4]
9001037e:	4620      	mov	r0, r4
90010380:	1a9b      	subs	r3, r3, r2
90010382:	88e2      	ldrh	r2, [r4, #6]
90010384:	f8ad 3000 	strh.w	r3, [sp]
90010388:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001038c:	1a9b      	subs	r3, r3, r2
9001038e:	4632      	mov	r2, r6
90010390:	f8ad 3002 	strh.w	r3, [sp, #2]
90010394:	6823      	ldr	r3, [r4, #0]
90010396:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
90010398:	4798      	blx	r3
9001039a:	69a4      	ldr	r4, [r4, #24]
9001039c:	e7db      	b.n	90010356 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
9001039e:	b002      	add	sp, #8
900103a0:	bd70      	pop	{r4, r5, r6, pc}

900103a2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
900103a2:	6803      	ldr	r3, [r0, #0]
900103a4:	b513      	push	{r0, r1, r4, lr}
900103a6:	f8d3 40b4 	ldr.w	r4, [r3, #180]	@ 0xb4
900103aa:	2300      	movs	r3, #0
900103ac:	e9cd 3300 	strd	r3, r3, [sp]
900103b0:	466b      	mov	r3, sp
900103b2:	47a0      	blx	r4
900103b4:	b002      	add	sp, #8
900103b6:	bd10      	pop	{r4, pc}

900103b8 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
900103b8:	2301      	movs	r3, #1
900103ba:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
900103be:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
900103c2:	4770      	bx	lr

900103c4 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
900103c4:	2301      	movs	r3, #1
900103c6:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
900103ca:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
900103ce:	4770      	bx	lr

900103d0 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
900103d0:	6843      	ldr	r3, [r0, #4]
900103d2:	2201      	movs	r2, #1
900103d4:	725a      	strb	r2, [r3, #9]
900103d6:	6840      	ldr	r0, [r0, #4]
900103d8:	6803      	ldr	r3, [r0, #0]
900103da:	691b      	ldr	r3, [r3, #16]
900103dc:	4718      	bx	r3

900103de <_ZN8touchgfx3HAL8flushDMAEv>:
900103de:	6840      	ldr	r0, [r0, #4]
900103e0:	6803      	ldr	r3, [r0, #0]
900103e2:	689b      	ldr	r3, [r3, #8]
900103e4:	4718      	bx	r3

900103e6 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
900103e6:	b530      	push	{r4, r5, lr}
900103e8:	b08b      	sub	sp, #44	@ 0x2c
900103ea:	6804      	ldr	r4, [r0, #0]
900103ec:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
900103f0:	9509      	str	r5, [sp, #36]	@ 0x24
900103f2:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
900103f6:	9508      	str	r5, [sp, #32]
900103f8:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
900103fc:	9507      	str	r5, [sp, #28]
900103fe:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
90010402:	9506      	str	r5, [sp, #24]
90010404:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
90010408:	9505      	str	r5, [sp, #20]
9001040a:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
9001040e:	9504      	str	r5, [sp, #16]
90010410:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
90010414:	9503      	str	r5, [sp, #12]
90010416:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
9001041a:	9502      	str	r5, [sp, #8]
9001041c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
90010420:	e9cd 3500 	strd	r3, r5, [sp]
90010424:	4613      	mov	r3, r2
90010426:	6c24      	ldr	r4, [r4, #64]	@ 0x40
90010428:	2200      	movs	r2, #0
9001042a:	47a0      	blx	r4
9001042c:	b00b      	add	sp, #44	@ 0x2c
9001042e:	bd30      	pop	{r4, r5, pc}

90010430 <_ZN8touchgfx3HAL10beginFrameEv>:
90010430:	4b04      	ldr	r3, [pc, #16]	@ (90010444 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
90010432:	781b      	ldrb	r3, [r3, #0]
90010434:	b123      	cbz	r3, 90010440 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
90010436:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
9001043a:	f080 0001 	eor.w	r0, r0, #1
9001043e:	4770      	bx	lr
90010440:	2001      	movs	r0, #1
90010442:	4770      	bx	lr
90010444:	2402198a 	.word	0x2402198a

90010448 <_ZN8touchgfx3HAL8endFrameEv>:
90010448:	b510      	push	{r4, lr}
9001044a:	4604      	mov	r4, r0
9001044c:	6840      	ldr	r0, [r0, #4]
9001044e:	6803      	ldr	r3, [r0, #0]
90010450:	689b      	ldr	r3, [r3, #8]
90010452:	4798      	blx	r3
90010454:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
90010458:	b113      	cbz	r3, 90010460 <_ZN8touchgfx3HAL8endFrameEv+0x18>
9001045a:	2301      	movs	r3, #1
9001045c:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
90010460:	bd10      	pop	{r4, pc}

90010462 <_ZN8touchgfx3HAL10initializeEv>:
90010462:	b510      	push	{r4, lr}
90010464:	4604      	mov	r4, r0
90010466:	f7f1 ff67 	bl	90002338 <_ZN8touchgfx10OSWrappers10initializeEv>
9001046a:	f7f0 fbe9 	bl	90000c40 <_ZN8touchgfx4GPIO4initEv>
9001046e:	6860      	ldr	r0, [r4, #4]
90010470:	6803      	ldr	r3, [r0, #0]
90010472:	68db      	ldr	r3, [r3, #12]
90010474:	4798      	blx	r3
90010476:	68e0      	ldr	r0, [r4, #12]
90010478:	6803      	ldr	r3, [r0, #0]
9001047a:	689b      	ldr	r3, [r3, #8]
9001047c:	4798      	blx	r3
9001047e:	6823      	ldr	r3, [r4, #0]
90010480:	4620      	mov	r0, r4
90010482:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
90010484:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90010488:	4718      	bx	r3
	...

9001048c <_ZN8touchgfx3HAL4tickEv>:
9001048c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
9001048e:	6803      	ldr	r3, [r0, #0]
90010490:	4604      	mov	r4, r0
90010492:	4d62      	ldr	r5, [pc, #392]	@ (9001061c <_ZN8touchgfx3HAL4tickEv+0x190>)
90010494:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
90010498:	4798      	blx	r3
9001049a:	2800      	cmp	r0, #0
9001049c:	f000 809e 	beq.w	900105dc <_ZN8touchgfx3HAL4tickEv+0x150>
900104a0:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
900104a4:	2b02      	cmp	r3, #2
900104a6:	d002      	beq.n	900104ae <_ZN8touchgfx3HAL4tickEv+0x22>
900104a8:	2001      	movs	r0, #1
900104aa:	f7f0 fbf3 	bl	90000c94 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
900104ae:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
900104b2:	2600      	movs	r6, #0
900104b4:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
900104b8:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
900104bc:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
900104c0:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
900104c4:	b133      	cbz	r3, 900104d4 <_ZN8touchgfx3HAL4tickEv+0x48>
900104c6:	6823      	ldr	r3, [r4, #0]
900104c8:	4620      	mov	r0, r4
900104ca:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
900104ce:	4798      	blx	r3
900104d0:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
900104d4:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
900104d8:	2601      	movs	r6, #1
900104da:	6862      	ldr	r2, [r4, #4]
900104dc:	f083 0301 	eor.w	r3, r3, #1
900104e0:	702e      	strb	r6, [r5, #0]
900104e2:	7253      	strb	r3, [r2, #9]
900104e4:	f005 fe5a 	bl	9001619c <_ZN8touchgfx11Application11getInstanceEv>
900104e8:	6803      	ldr	r3, [r0, #0]
900104ea:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
900104ec:	4798      	blx	r3
900104ee:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
900104f2:	b90b      	cbnz	r3, 900104f8 <_ZN8touchgfx3HAL4tickEv+0x6c>
900104f4:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
900104f8:	f005 fe50 	bl	9001619c <_ZN8touchgfx11Application11getInstanceEv>
900104fc:	6803      	ldr	r3, [r0, #0]
900104fe:	695b      	ldr	r3, [r3, #20]
90010500:	4798      	blx	r3
90010502:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
90010504:	6803      	ldr	r3, [r0, #0]
90010506:	691b      	ldr	r3, [r3, #16]
90010508:	4798      	blx	r3
9001050a:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
9001050e:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
90010512:	3b01      	subs	r3, #1
90010514:	b2db      	uxtb	r3, r3
90010516:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
9001051a:	b10a      	cbz	r2, 90010520 <_ZN8touchgfx3HAL4tickEv+0x94>
9001051c:	2b00      	cmp	r3, #0
9001051e:	d1eb      	bne.n	900104f8 <_ZN8touchgfx3HAL4tickEv+0x6c>
90010520:	4a3f      	ldr	r2, [pc, #252]	@ (90010620 <_ZN8touchgfx3HAL4tickEv+0x194>)
90010522:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
90010526:	7813      	ldrb	r3, [r2, #0]
90010528:	3301      	adds	r3, #1
9001052a:	b25b      	sxtb	r3, r3
9001052c:	4299      	cmp	r1, r3
9001052e:	7013      	strb	r3, [r2, #0]
90010530:	dc10      	bgt.n	90010554 <_ZN8touchgfx3HAL4tickEv+0xc8>
90010532:	2300      	movs	r3, #0
90010534:	68e0      	ldr	r0, [r4, #12]
90010536:	a902      	add	r1, sp, #8
90010538:	7013      	strb	r3, [r2, #0]
9001053a:	aa03      	add	r2, sp, #12
9001053c:	6803      	ldr	r3, [r0, #0]
9001053e:	68db      	ldr	r3, [r3, #12]
90010540:	4798      	blx	r3
90010542:	6823      	ldr	r3, [r4, #0]
90010544:	2800      	cmp	r0, #0
90010546:	d059      	beq.n	900105fc <_ZN8touchgfx3HAL4tickEv+0x170>
90010548:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
9001054c:	4620      	mov	r0, r4
9001054e:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
90010552:	4798      	blx	r3
90010554:	2300      	movs	r3, #0
90010556:	6960      	ldr	r0, [r4, #20]
90010558:	f88d 3007 	strb.w	r3, [sp, #7]
9001055c:	b158      	cbz	r0, 90010576 <_ZN8touchgfx3HAL4tickEv+0xea>
9001055e:	6803      	ldr	r3, [r0, #0]
90010560:	f10d 0107 	add.w	r1, sp, #7
90010564:	68db      	ldr	r3, [r3, #12]
90010566:	4798      	blx	r3
90010568:	b128      	cbz	r0, 90010576 <_ZN8touchgfx3HAL4tickEv+0xea>
9001056a:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
9001056c:	f89d 1007 	ldrb.w	r1, [sp, #7]
90010570:	6803      	ldr	r3, [r0, #0]
90010572:	68db      	ldr	r3, [r3, #12]
90010574:	4798      	blx	r3
90010576:	f104 001c 	add.w	r0, r4, #28
9001057a:	f017 fe63 	bl	90028244 <_ZN8touchgfx8Gestures4tickEv>
9001057e:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
90010582:	b30b      	cbz	r3, 900105c8 <_ZN8touchgfx3HAL4tickEv+0x13c>
90010584:	6920      	ldr	r0, [r4, #16]
90010586:	6803      	ldr	r3, [r0, #0]
90010588:	691b      	ldr	r3, [r3, #16]
9001058a:	4798      	blx	r3
9001058c:	6f63      	ldr	r3, [r4, #116]	@ 0x74
9001058e:	4606      	mov	r6, r0
90010590:	b903      	cbnz	r3, 90010594 <_ZN8touchgfx3HAL4tickEv+0x108>
90010592:	6760      	str	r0, [r4, #116]	@ 0x74
90010594:	6f63      	ldr	r3, [r4, #116]	@ 0x74
90010596:	4a23      	ldr	r2, [pc, #140]	@ (90010624 <_ZN8touchgfx3HAL4tickEv+0x198>)
90010598:	1af3      	subs	r3, r6, r3
9001059a:	4293      	cmp	r3, r2
9001059c:	d914      	bls.n	900105c8 <_ZN8touchgfx3HAL4tickEv+0x13c>
9001059e:	6920      	ldr	r0, [r4, #16]
900105a0:	6803      	ldr	r3, [r0, #0]
900105a2:	699b      	ldr	r3, [r3, #24]
900105a4:	4798      	blx	r3
900105a6:	6f63      	ldr	r3, [r4, #116]	@ 0x74
900105a8:	2264      	movs	r2, #100	@ 0x64
900105aa:	1af3      	subs	r3, r6, r3
900105ac:	fbb3 f3f2 	udiv	r3, r3, r2
900105b0:	fbb0 f0f3 	udiv	r0, r0, r3
900105b4:	2800      	cmp	r0, #0
900105b6:	dc26      	bgt.n	90010606 <_ZN8touchgfx3HAL4tickEv+0x17a>
900105b8:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
900105bc:	6920      	ldr	r0, [r4, #16]
900105be:	2100      	movs	r1, #0
900105c0:	6803      	ldr	r3, [r0, #0]
900105c2:	69db      	ldr	r3, [r3, #28]
900105c4:	4798      	blx	r3
900105c6:	6766      	str	r6, [r4, #116]	@ 0x74
900105c8:	6823      	ldr	r3, [r4, #0]
900105ca:	4620      	mov	r0, r4
900105cc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
900105d0:	4798      	blx	r3
900105d2:	f005 fde3 	bl	9001619c <_ZN8touchgfx11Application11getInstanceEv>
900105d6:	6803      	ldr	r3, [r0, #0]
900105d8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900105da:	4798      	blx	r3
900105dc:	6823      	ldr	r3, [r4, #0]
900105de:	4620      	mov	r0, r4
900105e0:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
900105e4:	4798      	blx	r3
900105e6:	f894 3048 	ldrb.w	r3, [r4, #72]	@ 0x48
900105ea:	2b02      	cmp	r3, #2
900105ec:	d002      	beq.n	900105f4 <_ZN8touchgfx3HAL4tickEv+0x168>
900105ee:	2001      	movs	r0, #1
900105f0:	f7f0 fb84 	bl	90000cfc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
900105f4:	2300      	movs	r3, #0
900105f6:	702b      	strb	r3, [r5, #0]
900105f8:	b004      	add	sp, #16
900105fa:	bd70      	pop	{r4, r5, r6, pc}
900105fc:	f8d3 30d0 	ldr.w	r3, [r3, #208]	@ 0xd0
90010600:	4620      	mov	r0, r4
90010602:	4798      	blx	r3
90010604:	e7a6      	b.n	90010554 <_ZN8touchgfx3HAL4tickEv+0xc8>
90010606:	2863      	cmp	r0, #99	@ 0x63
90010608:	bfcb      	itete	gt
9001060a:	2300      	movgt	r3, #0
9001060c:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
90010610:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
90010614:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
90010618:	e7d0      	b.n	900105bc <_ZN8touchgfx3HAL4tickEv+0x130>
9001061a:	bf00      	nop
9001061c:	24021990 	.word	0x24021990
90010620:	24021991 	.word	0x24021991
90010624:	05f5e100 	.word	0x05f5e100

90010628 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
90010628:	b510      	push	{r4, lr}
9001062a:	4604      	mov	r4, r0
9001062c:	f7f1 feb6 	bl	9000239c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
90010630:	2200      	movs	r2, #0
90010632:	6863      	ldr	r3, [r4, #4]
90010634:	729a      	strb	r2, [r3, #10]
90010636:	bd10      	pop	{r4, pc}

90010638 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
90010638:	65c1      	str	r1, [r0, #92]	@ 0x5c
9001063a:	301c      	adds	r0, #28
9001063c:	f017 be00 	b.w	90028240 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

90010640 <_ZN8touchgfx3HAL5touchEll>:
90010640:	b530      	push	{r4, r5, lr}
90010642:	b087      	sub	sp, #28
90010644:	4604      	mov	r4, r0
90010646:	a804      	add	r0, sp, #16
90010648:	e9cd 1204 	strd	r1, r2, [sp, #16]
9001064c:	f005 fb8c 	bl	90015d68 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
90010650:	9b04      	ldr	r3, [sp, #16]
90010652:	a906      	add	r1, sp, #24
90010654:	a803      	add	r0, sp, #12
90010656:	f8ad 300c 	strh.w	r3, [sp, #12]
9001065a:	9b05      	ldr	r3, [sp, #20]
9001065c:	f821 3d0a 	strh.w	r3, [r1, #-10]!
90010660:	f005 fbd4 	bl	90015e0c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
90010664:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
90010668:	f104 001c 	add.w	r0, r4, #28
9001066c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90010670:	f8bd 300e 	ldrh.w	r3, [sp, #14]
90010674:	b189      	cbz	r1, 9001069a <_ZN8touchgfx3HAL5touchEll+0x5a>
90010676:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
9001067a:	9300      	str	r3, [sp, #0]
9001067c:	4613      	mov	r3, r2
9001067e:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
90010682:	462a      	mov	r2, r5
90010684:	f017 fdec 	bl	90028260 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
90010688:	b128      	cbz	r0, 90010696 <_ZN8touchgfx3HAL5touchEll+0x56>
9001068a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001068e:	6623      	str	r3, [r4, #96]	@ 0x60
90010690:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90010694:	6663      	str	r3, [r4, #100]	@ 0x64
90010696:	b007      	add	sp, #28
90010698:	bd30      	pop	{r4, r5, pc}
9001069a:	f017 fe21 	bl	900282e0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
9001069e:	2301      	movs	r3, #1
900106a0:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
900106a4:	e7f1      	b.n	9001068a <_ZN8touchgfx3HAL5touchEll+0x4a>

900106a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
900106a6:	b510      	push	{r4, lr}
900106a8:	2b00      	cmp	r3, #0
900106aa:	d046      	beq.n	9001073a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900106ac:	ea81 0002 	eor.w	r0, r1, r2
900106b0:	07c4      	lsls	r4, r0, #31
900106b2:	d508      	bpl.n	900106c6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
900106b4:	440b      	add	r3, r1
900106b6:	3a01      	subs	r2, #1
900106b8:	428b      	cmp	r3, r1
900106ba:	d93e      	bls.n	9001073a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
900106bc:	f812 0f01 	ldrb.w	r0, [r2, #1]!
900106c0:	f801 0b01 	strb.w	r0, [r1], #1
900106c4:	e7f8      	b.n	900106b8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
900106c6:	07d0      	lsls	r0, r2, #31
900106c8:	bf42      	ittt	mi
900106ca:	f812 0b01 	ldrbmi.w	r0, [r2], #1
900106ce:	f103 33ff 	addmi.w	r3, r3, #4294967295
900106d2:	f801 0b01 	strbmi.w	r0, [r1], #1
900106d6:	2b01      	cmp	r3, #1
900106d8:	d911      	bls.n	900106fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
900106da:	ea81 0402 	eor.w	r4, r1, r2
900106de:	4610      	mov	r0, r2
900106e0:	07a4      	lsls	r4, r4, #30
900106e2:	d022      	beq.n	9001072a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
900106e4:	f023 0401 	bic.w	r4, r3, #1
900106e8:	440c      	add	r4, r1
900106ea:	428c      	cmp	r4, r1
900106ec:	4602      	mov	r2, r0
900106ee:	d904      	bls.n	900106fa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
900106f0:	8812      	ldrh	r2, [r2, #0]
900106f2:	3002      	adds	r0, #2
900106f4:	f821 2b02 	strh.w	r2, [r1], #2
900106f8:	e7f7      	b.n	900106ea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
900106fa:	f003 0301 	and.w	r3, r3, #1
900106fe:	f023 0003 	bic.w	r0, r3, #3
90010702:	4408      	add	r0, r1
90010704:	4288      	cmp	r0, r1
90010706:	4614      	mov	r4, r2
90010708:	d904      	bls.n	90010714 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
9001070a:	6824      	ldr	r4, [r4, #0]
9001070c:	3204      	adds	r2, #4
9001070e:	f841 4b04 	str.w	r4, [r1], #4
90010712:	e7f7      	b.n	90010704 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
90010714:	f003 0303 	and.w	r3, r3, #3
90010718:	3a01      	subs	r2, #1
9001071a:	440b      	add	r3, r1
9001071c:	428b      	cmp	r3, r1
9001071e:	d90c      	bls.n	9001073a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
90010720:	f812 0f01 	ldrb.w	r0, [r2, #1]!
90010724:	f801 0b01 	strb.w	r0, [r1], #1
90010728:	e7f8      	b.n	9001071c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
9001072a:	0790      	lsls	r0, r2, #30
9001072c:	d0e7      	beq.n	900106fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
9001072e:	f832 0b02 	ldrh.w	r0, [r2], #2
90010732:	3b02      	subs	r3, #2
90010734:	f821 0b02 	strh.w	r0, [r1], #2
90010738:	e7e1      	b.n	900106fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
9001073a:	2001      	movs	r0, #1
9001073c:	bd10      	pop	{r4, pc}

9001073e <_ZN8touchgfx3HAL7noTouchEv>:
9001073e:	b510      	push	{r4, lr}
90010740:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
90010744:	4604      	mov	r4, r0
90010746:	b153      	cbz	r3, 9001075e <_ZN8touchgfx3HAL7noTouchEv+0x20>
90010748:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
9001074c:	2101      	movs	r1, #1
9001074e:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
90010752:	301c      	adds	r0, #28
90010754:	f017 fdc4 	bl	900282e0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
90010758:	2300      	movs	r3, #0
9001075a:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
9001075e:	bd10      	pop	{r4, pc}

90010760 <_ZN8touchgfx8Drawable5setXYEss>:
90010760:	b570      	push	{r4, r5, r6, lr}
90010762:	6803      	ldr	r3, [r0, #0]
90010764:	4604      	mov	r4, r0
90010766:	4615      	mov	r5, r2
90010768:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001076a:	4798      	blx	r3
9001076c:	6823      	ldr	r3, [r4, #0]
9001076e:	4629      	mov	r1, r5
90010770:	4620      	mov	r0, r4
90010772:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90010774:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010778:	4718      	bx	r3
	...

9001077c <_ZN8touchgfx3HAL3lcdEv>:
9001077c:	4b04      	ldr	r3, [pc, #16]	@ (90010790 <_ZN8touchgfx3HAL3lcdEv+0x14>)
9001077e:	681b      	ldr	r3, [r3, #0]
90010780:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
90010784:	b10a      	cbz	r2, 9001078a <_ZN8touchgfx3HAL3lcdEv+0xe>
90010786:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
90010788:	b900      	cbnz	r0, 9001078c <_ZN8touchgfx3HAL3lcdEv+0x10>
9001078a:	6898      	ldr	r0, [r3, #8]
9001078c:	4770      	bx	lr
9001078e:	bf00      	nop
90010790:	2402198c 	.word	0x2402198c

90010794 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
90010794:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010798:	b085      	sub	sp, #20
9001079a:	4604      	mov	r4, r0
9001079c:	2000      	movs	r0, #0
9001079e:	4699      	mov	r9, r3
900107a0:	ad04      	add	r5, sp, #16
900107a2:	460f      	mov	r7, r1
900107a4:	4690      	mov	r8, r2
900107a6:	f845 0d04 	str.w	r0, [r5, #-4]!
900107aa:	69a0      	ldr	r0, [r4, #24]
900107ac:	6806      	ldr	r6, [r0, #0]
900107ae:	9501      	str	r5, [sp, #4]
900107b0:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
900107b4:	9500      	str	r5, [sp, #0]
900107b6:	6835      	ldr	r5, [r6, #0]
900107b8:	47a8      	blx	r5
900107ba:	4d10      	ldr	r5, [pc, #64]	@ (900107fc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
900107bc:	4606      	mov	r6, r0
900107be:	f8a5 9000 	strh.w	r9, [r5]
900107c2:	f7ff ffdb 	bl	9001077c <_ZN8touchgfx3HAL3lcdEv>
900107c6:	6803      	ldr	r3, [r0, #0]
900107c8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900107ca:	4798      	blx	r3
900107cc:	b128      	cbz	r0, 900107da <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
900107ce:	2801      	cmp	r0, #1
900107d0:	d00b      	beq.n	900107ea <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
900107d2:	4630      	mov	r0, r6
900107d4:	b005      	add	sp, #20
900107d6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900107da:	882b      	ldrh	r3, [r5, #0]
900107dc:	fb08 7203 	mla	r2, r8, r3, r7
900107e0:	9b03      	ldr	r3, [sp, #12]
900107e2:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
900107e6:	63e3      	str	r3, [r4, #60]	@ 0x3c
900107e8:	e7f3      	b.n	900107d2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
900107ea:	882a      	ldrh	r2, [r5, #0]
900107ec:	9b03      	ldr	r3, [sp, #12]
900107ee:	fb08 7202 	mla	r2, r8, r2, r7
900107f2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900107f6:	1a9a      	subs	r2, r3, r2
900107f8:	63e2      	str	r2, [r4, #60]	@ 0x3c
900107fa:	e7ea      	b.n	900107d2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
900107fc:	24021986 	.word	0x24021986

90010800 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs>:
90010800:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90010802:	4b15      	ldr	r3, [pc, #84]	@ (90010858 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x58>)
90010804:	460f      	mov	r7, r1
90010806:	f890 407d 	ldrb.w	r4, [r0, #125]	@ 0x7d
9001080a:	4606      	mov	r6, r0
9001080c:	881b      	ldrh	r3, [r3, #0]
9001080e:	6bc5      	ldr	r5, [r0, #60]	@ 0x3c
90010810:	fb93 f4f4 	sdiv	r4, r3, r4
90010814:	f7ff ffb2 	bl	9001077c <_ZN8touchgfx3HAL3lcdEv>
90010818:	6803      	ldr	r3, [r0, #0]
9001081a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001081c:	4798      	blx	r3
9001081e:	2801      	cmp	r0, #1
90010820:	d00b      	beq.n	9001083a <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x3a>
90010822:	d303      	bcc.n	9001082c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x2c>
90010824:	2802      	cmp	r0, #2
90010826:	d010      	beq.n	9001084a <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x4a>
90010828:	63f5      	str	r5, [r6, #60]	@ 0x3c
9001082a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
9001082c:	4b0b      	ldr	r3, [pc, #44]	@ (9001085c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
9001082e:	437c      	muls	r4, r7
90010830:	8819      	ldrh	r1, [r3, #0]
90010832:	434c      	muls	r4, r1
90010834:	eba5 0544 	sub.w	r5, r5, r4, lsl #1
90010838:	e7f6      	b.n	90010828 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
9001083a:	4b08      	ldr	r3, [pc, #32]	@ (9001085c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
9001083c:	437c      	muls	r4, r7
9001083e:	8819      	ldrh	r1, [r3, #0]
90010840:	434c      	muls	r4, r1
90010842:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90010846:	1b2d      	subs	r5, r5, r4
90010848:	e7ee      	b.n	90010828 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
9001084a:	4b04      	ldr	r3, [pc, #16]	@ (9001085c <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x5c>)
9001084c:	437c      	muls	r4, r7
9001084e:	8819      	ldrh	r1, [r3, #0]
90010850:	434c      	muls	r4, r1
90010852:	eba5 0584 	sub.w	r5, r5, r4, lsl #2
90010856:	e7e7      	b.n	90010828 <_ZN8touchgfx3HAL31configurePartialFrameBufferLTDCEs+0x28>
90010858:	24021988 	.word	0x24021988
9001085c:	24021986 	.word	0x24021986

90010860 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
90010860:	b5f0      	push	{r4, r5, r6, r7, lr}
90010862:	b08b      	sub	sp, #44	@ 0x2c
90010864:	4617      	mov	r7, r2
90010866:	4604      	mov	r4, r0
90010868:	460e      	mov	r6, r1
9001086a:	461d      	mov	r5, r3
9001086c:	f7ff ff86 	bl	9001077c <_ZN8touchgfx3HAL3lcdEv>
90010870:	6803      	ldr	r3, [r0, #0]
90010872:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010874:	4798      	blx	r3
90010876:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
9001087a:	9007      	str	r0, [sp, #28]
9001087c:	4631      	mov	r1, r6
9001087e:	6822      	ldr	r2, [r4, #0]
90010880:	e9cd 0308 	strd	r0, r3, [sp, #32]
90010884:	4b0c      	ldr	r3, [pc, #48]	@ (900108b8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
90010886:	4620      	mov	r0, r4
90010888:	881b      	ldrh	r3, [r3, #0]
9001088a:	9306      	str	r3, [sp, #24]
9001088c:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90010890:	9305      	str	r3, [sp, #20]
90010892:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
90010896:	9304      	str	r3, [sp, #16]
90010898:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
9001089c:	9303      	str	r3, [sp, #12]
9001089e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
900108a2:	9302      	str	r3, [sp, #8]
900108a4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
900108a8:	e9cd 5300 	strd	r5, r3, [sp]
900108ac:	463b      	mov	r3, r7
900108ae:	6c15      	ldr	r5, [r2, #64]	@ 0x40
900108b0:	2200      	movs	r2, #0
900108b2:	47a8      	blx	r5
900108b4:	b00b      	add	sp, #44	@ 0x2c
900108b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
900108b8:	24021986 	.word	0x24021986

900108bc <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
900108bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900108c0:	4698      	mov	r8, r3
900108c2:	6803      	ldr	r3, [r0, #0]
900108c4:	b08b      	sub	sp, #44	@ 0x2c
900108c6:	4617      	mov	r7, r2
900108c8:	6c1d      	ldr	r5, [r3, #64]	@ 0x40
900108ca:	460e      	mov	r6, r1
900108cc:	4b13      	ldr	r3, [pc, #76]	@ (9001091c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
900108ce:	4604      	mov	r4, r0
900108d0:	f8b3 9000 	ldrh.w	r9, [r3]
900108d4:	f7ff ff52 	bl	9001077c <_ZN8touchgfx3HAL3lcdEv>
900108d8:	6803      	ldr	r3, [r0, #0]
900108da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900108dc:	4798      	blx	r3
900108de:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
900108e2:	2200      	movs	r2, #0
900108e4:	4631      	mov	r1, r6
900108e6:	e9cd 0308 	strd	r0, r3, [sp, #32]
900108ea:	2302      	movs	r3, #2
900108ec:	4620      	mov	r0, r4
900108ee:	e9cd 9306 	strd	r9, r3, [sp, #24]
900108f2:	2301      	movs	r3, #1
900108f4:	9305      	str	r3, [sp, #20]
900108f6:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
900108fa:	9304      	str	r3, [sp, #16]
900108fc:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
90010900:	9303      	str	r3, [sp, #12]
90010902:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90010906:	9302      	str	r3, [sp, #8]
90010908:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
9001090c:	e9cd 8300 	strd	r8, r3, [sp]
90010910:	463b      	mov	r3, r7
90010912:	47a8      	blx	r5
90010914:	b00b      	add	sp, #44	@ 0x2c
90010916:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001091a:	bf00      	nop
9001091c:	24021986 	.word	0x24021986

90010920 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
90010920:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010924:	4698      	mov	r8, r3
90010926:	6803      	ldr	r3, [r0, #0]
90010928:	b087      	sub	sp, #28
9001092a:	460e      	mov	r6, r1
9001092c:	6ddd      	ldr	r5, [r3, #92]	@ 0x5c
9001092e:	4617      	mov	r7, r2
90010930:	4b0f      	ldr	r3, [pc, #60]	@ (90010970 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
90010932:	4604      	mov	r4, r0
90010934:	f8b3 9000 	ldrh.w	r9, [r3]
90010938:	f7ff ff20 	bl	9001077c <_ZN8touchgfx3HAL3lcdEv>
9001093c:	6803      	ldr	r3, [r0, #0]
9001093e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010940:	4798      	blx	r3
90010942:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
90010946:	463a      	mov	r2, r7
90010948:	4631      	mov	r1, r6
9001094a:	f8cd 900c 	str.w	r9, [sp, #12]
9001094e:	e9cd 0304 	strd	r0, r3, [sp, #16]
90010952:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
90010956:	4620      	mov	r0, r4
90010958:	9302      	str	r3, [sp, #8]
9001095a:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
9001095e:	9301      	str	r3, [sp, #4]
90010960:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90010964:	9300      	str	r3, [sp, #0]
90010966:	4643      	mov	r3, r8
90010968:	47a8      	blx	r5
9001096a:	b007      	add	sp, #28
9001096c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90010970:	24021986 	.word	0x24021986

90010974 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
90010974:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010978:	4604      	mov	r4, r0
9001097a:	b08f      	sub	sp, #60	@ 0x3c
9001097c:	4610      	mov	r0, r2
9001097e:	460d      	mov	r5, r1
90010980:	4691      	mov	r9, r2
90010982:	461e      	mov	r6, r3
90010984:	f009 f938 	bl	90019bf8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
90010988:	2800      	cmp	r0, #0
9001098a:	f000 809d 	beq.w	90010ac8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
9001098e:	6823      	ldr	r3, [r4, #0]
90010990:	4620      	mov	r0, r4
90010992:	f8df b198 	ldr.w	fp, [pc, #408]	@ 90010b2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
90010996:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
9001099a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001099c:	4798      	blx	r3
9001099e:	6823      	ldr	r3, [r4, #0]
900109a0:	4620      	mov	r0, r4
900109a2:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 90010b30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
900109a6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900109a8:	4798      	blx	r3
900109aa:	f8bb 3000 	ldrh.w	r3, [fp]
900109ae:	4f5c      	ldr	r7, [pc, #368]	@ (90010b20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
900109b0:	9301      	str	r3, [sp, #4]
900109b2:	f8ba 3000 	ldrh.w	r3, [sl]
900109b6:	f828 9d1c 	strh.w	r9, [r8, #-28]!
900109ba:	4640      	mov	r0, r8
900109bc:	9302      	str	r3, [sp, #8]
900109be:	883b      	ldrh	r3, [r7, #0]
900109c0:	9303      	str	r3, [sp, #12]
900109c2:	4b58      	ldr	r3, [pc, #352]	@ (90010b24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
900109c4:	881a      	ldrh	r2, [r3, #0]
900109c6:	9305      	str	r3, [sp, #20]
900109c8:	9204      	str	r2, [sp, #16]
900109ca:	f009 f9a9 	bl	90019d20 <_ZNK8touchgfx6Bitmap8getWidthEv>
900109ce:	8038      	strh	r0, [r7, #0]
900109d0:	4640      	mov	r0, r8
900109d2:	f009 f9d9 	bl	90019d88 <_ZNK8touchgfx6Bitmap9getHeightEv>
900109d6:	9b05      	ldr	r3, [sp, #20]
900109d8:	b280      	uxth	r0, r0
900109da:	8018      	strh	r0, [r3, #0]
900109dc:	4b52      	ldr	r3, [pc, #328]	@ (90010b28 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
900109de:	781b      	ldrb	r3, [r3, #0]
900109e0:	2b00      	cmp	r3, #0
900109e2:	d174      	bne.n	90010ace <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
900109e4:	883b      	ldrh	r3, [r7, #0]
900109e6:	f8aa 0000 	strh.w	r0, [sl]
900109ea:	f8ab 3000 	strh.w	r3, [fp]
900109ee:	4648      	mov	r0, r9
900109f0:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
900109f4:	f009 f900 	bl	90019bf8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
900109f8:	2200      	movs	r2, #0
900109fa:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
900109fe:	4611      	mov	r1, r2
90010a00:	4628      	mov	r0, r5
90010a02:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
90010a06:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
90010a0a:	f7ff fea9 	bl	90010760 <_ZN8touchgfx8Drawable5setXYEss>
90010a0e:	2301      	movs	r3, #1
90010a10:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
90010a14:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
90010a18:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
90010a1c:	2b00      	cmp	r3, #0
90010a1e:	dd5c      	ble.n	90010ada <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90010a20:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
90010a24:	2b00      	cmp	r3, #0
90010a26:	dd58      	ble.n	90010ada <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
90010a28:	462a      	mov	r2, r5
90010a2a:	ab0a      	add	r3, sp, #40	@ 0x28
90010a2c:	f852 0f04 	ldr.w	r0, [r2, #4]!
90010a30:	6851      	ldr	r1, [r2, #4]
90010a32:	c303      	stmia	r3!, {r0, r1}
90010a34:	4631      	mov	r1, r6
90010a36:	a80a      	add	r0, sp, #40	@ 0x28
90010a38:	f7ff fbae 	bl	90010198 <_ZN8touchgfx4RectaNERKS0_>
90010a3c:	4b38      	ldr	r3, [pc, #224]	@ (90010b20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90010a3e:	2100      	movs	r1, #0
90010a40:	f9b3 2000 	ldrsh.w	r2, [r3]
90010a44:	4b37      	ldr	r3, [pc, #220]	@ (90010b24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90010a46:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90010a4a:	aa0a      	add	r2, sp, #40	@ 0x28
90010a4c:	f9b3 3000 	ldrsh.w	r3, [r3]
90010a50:	910c      	str	r1, [sp, #48]	@ 0x30
90010a52:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90010a56:	ab08      	add	r3, sp, #32
90010a58:	e892 0003 	ldmia.w	r2, {r0, r1}
90010a5c:	e883 0003 	stmia.w	r3, {r0, r1}
90010a60:	4618      	mov	r0, r3
90010a62:	a90c      	add	r1, sp, #48	@ 0x30
90010a64:	f7ff fb98 	bl	90010198 <_ZN8touchgfx4RectaNERKS0_>
90010a68:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
90010a6a:	2b00      	cmp	r3, #0
90010a6c:	d13c      	bne.n	90010ae8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
90010a6e:	2000      	movs	r0, #0
90010a70:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
90010a74:	2600      	movs	r6, #0
90010a76:	696b      	ldr	r3, [r5, #20]
90010a78:	a908      	add	r1, sp, #32
90010a7a:	682a      	ldr	r2, [r5, #0]
90010a7c:	4628      	mov	r0, r5
90010a7e:	9305      	str	r3, [sp, #20]
90010a80:	616e      	str	r6, [r5, #20]
90010a82:	6892      	ldr	r2, [r2, #8]
90010a84:	4790      	blx	r2
90010a86:	9b05      	ldr	r3, [sp, #20]
90010a88:	4652      	mov	r2, sl
90010a8a:	4649      	mov	r1, r9
90010a8c:	616b      	str	r3, [r5, #20]
90010a8e:	4628      	mov	r0, r5
90010a90:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
90010a94:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
90010a98:	f7ff fe62 	bl	90010760 <_ZN8touchgfx8Drawable5setXYEss>
90010a9c:	9a01      	ldr	r2, [sp, #4]
90010a9e:	4b23      	ldr	r3, [pc, #140]	@ (90010b2c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
90010aa0:	4620      	mov	r0, r4
90010aa2:	801a      	strh	r2, [r3, #0]
90010aa4:	9a02      	ldr	r2, [sp, #8]
90010aa6:	4b22      	ldr	r3, [pc, #136]	@ (90010b30 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
90010aa8:	801a      	strh	r2, [r3, #0]
90010aaa:	9a03      	ldr	r2, [sp, #12]
90010aac:	4b1c      	ldr	r3, [pc, #112]	@ (90010b20 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
90010aae:	801a      	strh	r2, [r3, #0]
90010ab0:	4b1c      	ldr	r3, [pc, #112]	@ (90010b24 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
90010ab2:	9a04      	ldr	r2, [sp, #16]
90010ab4:	801a      	strh	r2, [r3, #0]
90010ab6:	6823      	ldr	r3, [r4, #0]
90010ab8:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
90010abc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010abe:	4798      	blx	r3
90010ac0:	6823      	ldr	r3, [r4, #0]
90010ac2:	4620      	mov	r0, r4
90010ac4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90010ac6:	4798      	blx	r3
90010ac8:	b00f      	add	sp, #60	@ 0x3c
90010aca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90010ace:	883b      	ldrh	r3, [r7, #0]
90010ad0:	f8ab 0000 	strh.w	r0, [fp]
90010ad4:	f8aa 3000 	strh.w	r3, [sl]
90010ad8:	e789      	b.n	900109ee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
90010ada:	462a      	mov	r2, r5
90010adc:	ab0a      	add	r3, sp, #40	@ 0x28
90010ade:	f852 0f04 	ldr.w	r0, [r2, #4]!
90010ae2:	6851      	ldr	r1, [r2, #4]
90010ae4:	c303      	stmia	r3!, {r0, r1}
90010ae6:	e7a9      	b.n	90010a3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
90010ae8:	a807      	add	r0, sp, #28
90010aea:	f009 fa8f 	bl	9001a00c <_ZNK8touchgfx6Bitmap9getFormatEv>
90010aee:	4606      	mov	r6, r0
90010af0:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
90010af2:	6803      	ldr	r3, [r0, #0]
90010af4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010af6:	4798      	blx	r3
90010af8:	4286      	cmp	r6, r0
90010afa:	d1b8      	bne.n	90010a6e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
90010afc:	f7ff fe3e 	bl	9001077c <_ZN8touchgfx3HAL3lcdEv>
90010b00:	6803      	ldr	r3, [r0, #0]
90010b02:	4606      	mov	r6, r0
90010b04:	a807      	add	r0, sp, #28
90010b06:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90010b08:	9305      	str	r3, [sp, #20]
90010b0a:	f009 fa7f 	bl	9001a00c <_ZNK8touchgfx6Bitmap9getFormatEv>
90010b0e:	9b05      	ldr	r3, [sp, #20]
90010b10:	4601      	mov	r1, r0
90010b12:	4630      	mov	r0, r6
90010b14:	4798      	blx	r3
90010b16:	f080 0001 	eor.w	r0, r0, #1
90010b1a:	b2c0      	uxtb	r0, r0
90010b1c:	e7a8      	b.n	90010a70 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
90010b1e:	bf00      	nop
90010b20:	24021980 	.word	0x24021980
90010b24:	24021982 	.word	0x24021982
90010b28:	24021984 	.word	0x24021984
90010b2c:	24021986 	.word	0x24021986
90010b30:	24021988 	.word	0x24021988

90010b34 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
90010b34:	4b07      	ldr	r3, [pc, #28]	@ (90010b54 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
90010b36:	b510      	push	{r4, lr}
90010b38:	781b      	ldrb	r3, [r3, #0]
90010b3a:	4604      	mov	r4, r0
90010b3c:	b13b      	cbz	r3, 90010b4e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90010b3e:	6803      	ldr	r3, [r0, #0]
90010b40:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90010b42:	4798      	blx	r3
90010b44:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
90010b46:	4283      	cmp	r3, r0
90010b48:	d101      	bne.n	90010b4e <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
90010b4a:	6c20      	ldr	r0, [r4, #64]	@ 0x40
90010b4c:	bd10      	pop	{r4, pc}
90010b4e:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
90010b50:	e7fc      	b.n	90010b4c <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
90010b52:	bf00      	nop
90010b54:	2402198a 	.word	0x2402198a

90010b58 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
90010b58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010b5c:	461d      	mov	r5, r3
90010b5e:	b08a      	sub	sp, #40	@ 0x28
90010b60:	f44f 6380 	mov.w	r3, #1024	@ 0x400
90010b64:	4690      	mov	r8, r2
90010b66:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
90010b6a:	2400      	movs	r4, #0
90010b6c:	4607      	mov	r7, r0
90010b6e:	fb06 8505 	mla	r5, r6, r5, r8
90010b72:	9404      	str	r4, [sp, #16]
90010b74:	f88d 4020 	strb.w	r4, [sp, #32]
90010b78:	e9cd 3101 	strd	r3, r1, [sp, #4]
90010b7c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90010b80:	f8ad 3018 	strh.w	r3, [sp, #24]
90010b84:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90010b88:	f8ad 301a 	strh.w	r3, [sp, #26]
90010b8c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90010b90:	f8ad 301c 	strh.w	r3, [sp, #28]
90010b94:	f7ff ffce 	bl	90010b34 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010b98:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90010b9c:	6878      	ldr	r0, [r7, #4]
90010b9e:	f8ad 601e 	strh.w	r6, [sp, #30]
90010ba2:	a901      	add	r1, sp, #4
90010ba4:	9505      	str	r5, [sp, #20]
90010ba6:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90010baa:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
90010bae:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
90010bb2:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
90010bb6:	6803      	ldr	r3, [r0, #0]
90010bb8:	685b      	ldr	r3, [r3, #4]
90010bba:	4798      	blx	r3
90010bbc:	b00a      	add	sp, #40	@ 0x28
90010bbe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

90010bc2 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
90010bc2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90010bc6:	b08b      	sub	sp, #44	@ 0x2c
90010bc8:	2400      	movs	r4, #0
90010bca:	4691      	mov	r9, r2
90010bcc:	461d      	mov	r5, r3
90010bce:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
90010bd2:	f44f 6300 	mov.w	r3, #2048	@ 0x800
90010bd6:	4688      	mov	r8, r1
90010bd8:	4607      	mov	r7, r0
90010bda:	9404      	str	r4, [sp, #16]
90010bdc:	fb06 9505 	mla	r5, r6, r5, r9
90010be0:	e9cd 3401 	strd	r3, r4, [sp, #4]
90010be4:	f7ff ffa6 	bl	90010b34 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010be8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90010bec:	eb00 0545 	add.w	r5, r0, r5, lsl #1
90010bf0:	6878      	ldr	r0, [r7, #4]
90010bf2:	f8ad 3018 	strh.w	r3, [sp, #24]
90010bf6:	a901      	add	r1, sp, #4
90010bf8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90010bfc:	9505      	str	r5, [sp, #20]
90010bfe:	f8ad 301a 	strh.w	r3, [sp, #26]
90010c02:	f8ad 401c 	strh.w	r4, [sp, #28]
90010c06:	f8ad 601e 	strh.w	r6, [sp, #30]
90010c0a:	f8cd 8010 	str.w	r8, [sp, #16]
90010c0e:	f8ad 4020 	strh.w	r4, [sp, #32]
90010c12:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90010c16:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
90010c1a:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
90010c1e:	6803      	ldr	r3, [r0, #0]
90010c20:	685b      	ldr	r3, [r3, #4]
90010c22:	4798      	blx	r3
90010c24:	b00b      	add	sp, #44	@ 0x2c
90010c26:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

90010c2c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
90010c2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010c30:	b08a      	sub	sp, #40	@ 0x28
90010c32:	4698      	mov	r8, r3
90010c34:	2300      	movs	r3, #0
90010c36:	4606      	mov	r6, r0
90010c38:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
90010c3c:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
90010c40:	2d0b      	cmp	r5, #11
90010c42:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
90010c46:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
90010c4a:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
90010c4e:	9304      	str	r3, [sp, #16]
90010c50:	d137      	bne.n	90010cc2 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
90010c52:	2380      	movs	r3, #128	@ 0x80
90010c54:	f88d 0020 	strb.w	r0, [sp, #32]
90010c58:	4630      	mov	r0, r6
90010c5a:	9203      	str	r2, [sp, #12]
90010c5c:	e9cd 3101 	strd	r3, r1, [sp, #4]
90010c60:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90010c64:	f8ad 3018 	strh.w	r3, [sp, #24]
90010c68:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90010c6c:	f8ad 301a 	strh.w	r3, [sp, #26]
90010c70:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
90010c74:	f8ad 301c 	strh.w	r3, [sp, #28]
90010c78:	f7ff ff5c 	bl	90010b34 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010c7c:	2c0b      	cmp	r4, #11
90010c7e:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
90010c82:	f8ad 701e 	strh.w	r7, [sp, #30]
90010c86:	bf94      	ite	ls
90010c88:	4b19      	ldrls	r3, [pc, #100]	@ (90010cf0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
90010c8a:	2100      	movhi	r1, #0
90010c8c:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
90010c90:	bf98      	it	ls
90010c92:	5d19      	ldrbls	r1, [r3, r4]
90010c94:	fb02 8307 	mla	r3, r2, r7, r8
90010c98:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
90010c9c:	10c9      	asrs	r1, r1, #3
90010c9e:	fb01 0003 	mla	r0, r1, r3, r0
90010ca2:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
90010ca6:	a901      	add	r1, sp, #4
90010ca8:	9005      	str	r0, [sp, #20]
90010caa:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90010cae:	2300      	movs	r3, #0
90010cb0:	6870      	ldr	r0, [r6, #4]
90010cb2:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
90010cb6:	6803      	ldr	r3, [r0, #0]
90010cb8:	685b      	ldr	r3, [r3, #4]
90010cba:	4798      	blx	r3
90010cbc:	b00a      	add	sp, #40	@ 0x28
90010cbe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90010cc2:	2d02      	cmp	r5, #2
90010cc4:	d109      	bne.n	90010cda <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
90010cc6:	28ff      	cmp	r0, #255	@ 0xff
90010cc8:	d105      	bne.n	90010cd6 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
90010cca:	f1bc 0f00 	cmp.w	ip, #0
90010cce:	bf14      	ite	ne
90010cd0:	2340      	movne	r3, #64	@ 0x40
90010cd2:	2320      	moveq	r3, #32
90010cd4:	e7be      	b.n	90010c54 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010cd6:	2340      	movs	r3, #64	@ 0x40
90010cd8:	e7bc      	b.n	90010c54 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010cda:	28ff      	cmp	r0, #255	@ 0xff
90010cdc:	d105      	bne.n	90010cea <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
90010cde:	f1bc 0f00 	cmp.w	ip, #0
90010ce2:	bf14      	ite	ne
90010ce4:	2304      	movne	r3, #4
90010ce6:	2301      	moveq	r3, #1
90010ce8:	e7b4      	b.n	90010c54 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010cea:	2304      	movs	r3, #4
90010cec:	e7b2      	b.n	90010c54 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
90010cee:	bf00      	nop
90010cf0:	9002d1c4 	.word	0x9002d1c4

90010cf4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
90010cf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90010cf8:	b08b      	sub	sp, #44	@ 0x2c
90010cfa:	461d      	mov	r5, r3
90010cfc:	2400      	movs	r4, #0
90010cfe:	4688      	mov	r8, r1
90010d00:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
90010d04:	4693      	mov	fp, r2
90010d06:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
90010d0a:	4607      	mov	r7, r0
90010d0c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90010d10:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
90010d14:	9404      	str	r4, [sp, #16]
90010d16:	bf14      	ite	ne
90010d18:	2308      	movne	r3, #8
90010d1a:	2302      	moveq	r3, #2
90010d1c:	fb05 b50a 	mla	r5, r5, sl, fp
90010d20:	e9cd 3401 	strd	r3, r4, [sp, #4]
90010d24:	f7ff ff06 	bl	90010b34 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010d28:	2e0b      	cmp	r6, #11
90010d2a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
90010d2e:	a901      	add	r1, sp, #4
90010d30:	bf98      	it	ls
90010d32:	4b13      	ldrls	r3, [pc, #76]	@ (90010d80 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
90010d34:	f8ad a01e 	strh.w	sl, [sp, #30]
90010d38:	bf98      	it	ls
90010d3a:	5d9c      	ldrbls	r4, [r3, r6]
90010d3c:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
90010d40:	10e4      	asrs	r4, r4, #3
90010d42:	f8cd 8010 	str.w	r8, [sp, #16]
90010d46:	f8ad 3018 	strh.w	r3, [sp, #24]
90010d4a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
90010d4e:	fb04 0405 	mla	r4, r4, r5, r0
90010d52:	6878      	ldr	r0, [r7, #4]
90010d54:	f8ad 301a 	strh.w	r3, [sp, #26]
90010d58:	2300      	movs	r3, #0
90010d5a:	9405      	str	r4, [sp, #20]
90010d5c:	f8ad 301c 	strh.w	r3, [sp, #28]
90010d60:	f88d 9020 	strb.w	r9, [sp, #32]
90010d64:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
90010d68:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
90010d6c:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
90010d70:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
90010d74:	6803      	ldr	r3, [r0, #0]
90010d76:	685b      	ldr	r3, [r3, #4]
90010d78:	4798      	blx	r3
90010d7a:	b00b      	add	sp, #44	@ 0x2c
90010d7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90010d80:	9002d1c4 	.word	0x9002d1c4

90010d84 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
90010d84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010d88:	461e      	mov	r6, r3
90010d8a:	4b0a      	ldr	r3, [pc, #40]	@ (90010db4 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
90010d8c:	460f      	mov	r7, r1
90010d8e:	4690      	mov	r8, r2
90010d90:	881d      	ldrh	r5, [r3, #0]
90010d92:	f7ff fcf3 	bl	9001077c <_ZN8touchgfx3HAL3lcdEv>
90010d96:	6803      	ldr	r3, [r0, #0]
90010d98:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010d9a:	4798      	blx	r3
90010d9c:	280b      	cmp	r0, #11
90010d9e:	bf96      	itet	ls
90010da0:	4b05      	ldrls	r3, [pc, #20]	@ (90010db8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
90010da2:	2400      	movhi	r4, #0
90010da4:	5c1c      	ldrbls	r4, [r3, r0]
90010da6:	fb08 7005 	mla	r0, r8, r5, r7
90010daa:	10e4      	asrs	r4, r4, #3
90010dac:	fb04 6000 	mla	r0, r4, r0, r6
90010db0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90010db4:	24021986 	.word	0x24021986
90010db8:	9002d1c4 	.word	0x9002d1c4

90010dbc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
90010dbc:	b5f0      	push	{r4, r5, r6, r7, lr}
90010dbe:	b08b      	sub	sp, #44	@ 0x2c
90010dc0:	461f      	mov	r7, r3
90010dc2:	4604      	mov	r4, r0
90010dc4:	4616      	mov	r6, r2
90010dc6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
90010dca:	2500      	movs	r5, #0
90010dcc:	e9cd 3101 	strd	r3, r1, [sp, #4]
90010dd0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
90010dd4:	9504      	str	r5, [sp, #16]
90010dd6:	f8ad 3018 	strh.w	r3, [sp, #24]
90010dda:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90010dde:	f8ad 301a 	strh.w	r3, [sp, #26]
90010de2:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90010de6:	f8ad 301c 	strh.w	r3, [sp, #28]
90010dea:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90010dee:	f88d 3020 	strb.w	r3, [sp, #32]
90010df2:	f7ff fe9f 	bl	90010b34 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010df6:	463a      	mov	r2, r7
90010df8:	4631      	mov	r1, r6
90010dfa:	4603      	mov	r3, r0
90010dfc:	4620      	mov	r0, r4
90010dfe:	f7ff ffc1 	bl	90010d84 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010e02:	4b0e      	ldr	r3, [pc, #56]	@ (90010e3c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
90010e04:	9005      	str	r0, [sp, #20]
90010e06:	881b      	ldrh	r3, [r3, #0]
90010e08:	f8ad 301e 	strh.w	r3, [sp, #30]
90010e0c:	f7ff fcb6 	bl	9001077c <_ZN8touchgfx3HAL3lcdEv>
90010e10:	6803      	ldr	r3, [r0, #0]
90010e12:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010e14:	4798      	blx	r3
90010e16:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90010e18:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
90010e1c:	a901      	add	r1, sp, #4
90010e1e:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
90010e22:	9304      	str	r3, [sp, #16]
90010e24:	6860      	ldr	r0, [r4, #4]
90010e26:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
90010e2a:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
90010e2e:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
90010e32:	6803      	ldr	r3, [r0, #0]
90010e34:	685b      	ldr	r3, [r3, #4]
90010e36:	4798      	blx	r3
90010e38:	b00b      	add	sp, #44	@ 0x2c
90010e3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010e3c:	24021986 	.word	0x24021986

90010e40 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
90010e40:	b5f0      	push	{r4, r5, r6, r7, lr}
90010e42:	b08d      	sub	sp, #52	@ 0x34
90010e44:	2501      	movs	r5, #1
90010e46:	4604      	mov	r4, r0
90010e48:	466b      	mov	r3, sp
90010e4a:	9503      	str	r5, [sp, #12]
90010e4c:	e883 0006 	stmia.w	r3, {r1, r2}
90010e50:	2300      	movs	r3, #0
90010e52:	f8bd 6000 	ldrh.w	r6, [sp]
90010e56:	f8bd 7002 	ldrh.w	r7, [sp, #2]
90010e5a:	9306      	str	r3, [sp, #24]
90010e5c:	6803      	ldr	r3, [r0, #0]
90010e5e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90010e60:	4798      	blx	r3
90010e62:	463a      	mov	r2, r7
90010e64:	4631      	mov	r1, r6
90010e66:	4603      	mov	r3, r0
90010e68:	4620      	mov	r0, r4
90010e6a:	f7ff ff8b 	bl	90010d84 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010e6e:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90010e70:	9004      	str	r0, [sp, #16]
90010e72:	9307      	str	r3, [sp, #28]
90010e74:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90010e78:	f8ad 3020 	strh.w	r3, [sp, #32]
90010e7c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90010e80:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90010e84:	4b0e      	ldr	r3, [pc, #56]	@ (90010ec0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
90010e86:	881b      	ldrh	r3, [r3, #0]
90010e88:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90010e8c:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90010e90:	f7ff fc74 	bl	9001077c <_ZN8touchgfx3HAL3lcdEv>
90010e94:	6803      	ldr	r3, [r0, #0]
90010e96:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010e98:	4798      	blx	r3
90010e9a:	23ff      	movs	r3, #255	@ 0xff
90010e9c:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90010ea0:	a903      	add	r1, sp, #12
90010ea2:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
90010ea6:	6860      	ldr	r0, [r4, #4]
90010ea8:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90010eac:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90010eb0:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
90010eb4:	6803      	ldr	r3, [r0, #0]
90010eb6:	685b      	ldr	r3, [r3, #4]
90010eb8:	4798      	blx	r3
90010eba:	6c60      	ldr	r0, [r4, #68]	@ 0x44
90010ebc:	b00d      	add	sp, #52	@ 0x34
90010ebe:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010ec0:	24021986 	.word	0x24021986

90010ec4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
90010ec4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90010ec8:	b08c      	sub	sp, #48	@ 0x30
90010eca:	461e      	mov	r6, r3
90010ecc:	2300      	movs	r3, #0
90010ece:	4604      	mov	r4, r0
90010ed0:	466d      	mov	r5, sp
90010ed2:	9306      	str	r3, [sp, #24]
90010ed4:	6803      	ldr	r3, [r0, #0]
90010ed6:	e885 0006 	stmia.w	r5, {r1, r2}
90010eda:	2501      	movs	r5, #1
90010edc:	f8bd 7000 	ldrh.w	r7, [sp]
90010ee0:	f8bd 8002 	ldrh.w	r8, [sp, #2]
90010ee4:	9503      	str	r5, [sp, #12]
90010ee6:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90010ee8:	4798      	blx	r3
90010eea:	4642      	mov	r2, r8
90010eec:	4639      	mov	r1, r7
90010eee:	4603      	mov	r3, r0
90010ef0:	4620      	mov	r0, r4
90010ef2:	f7ff ff47 	bl	90010d84 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010ef6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90010efa:	9004      	str	r0, [sp, #16]
90010efc:	f8ad 3020 	strh.w	r3, [sp, #32]
90010f00:	f8bd 3006 	ldrh.w	r3, [sp, #6]
90010f04:	9607      	str	r6, [sp, #28]
90010f06:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
90010f0a:	4b10      	ldr	r3, [pc, #64]	@ (90010f4c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
90010f0c:	881b      	ldrh	r3, [r3, #0]
90010f0e:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
90010f12:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90010f14:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
90010f18:	f7ff fc30 	bl	9001077c <_ZN8touchgfx3HAL3lcdEv>
90010f1c:	6803      	ldr	r3, [r0, #0]
90010f1e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90010f20:	4798      	blx	r3
90010f22:	23ff      	movs	r3, #255	@ 0xff
90010f24:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
90010f28:	a903      	add	r1, sp, #12
90010f2a:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
90010f2e:	6860      	ldr	r0, [r4, #4]
90010f30:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
90010f34:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
90010f38:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
90010f3c:	6803      	ldr	r3, [r0, #0]
90010f3e:	685b      	ldr	r3, [r3, #4]
90010f40:	4798      	blx	r3
90010f42:	4630      	mov	r0, r6
90010f44:	b00c      	add	sp, #48	@ 0x30
90010f46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90010f4a:	bf00      	nop
90010f4c:	24021986 	.word	0x24021986

90010f50 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
90010f50:	b5f0      	push	{r4, r5, r6, r7, lr}
90010f52:	b085      	sub	sp, #20
90010f54:	4605      	mov	r5, r0
90010f56:	ac02      	add	r4, sp, #8
90010f58:	e884 0006 	stmia.w	r4, {r1, r2}
90010f5c:	f8bd 6008 	ldrh.w	r6, [sp, #8]
90010f60:	f8bd 700a 	ldrh.w	r7, [sp, #10]
90010f64:	f7ff fde6 	bl	90010b34 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010f68:	4631      	mov	r1, r6
90010f6a:	4603      	mov	r3, r0
90010f6c:	463a      	mov	r2, r7
90010f6e:	4628      	mov	r0, r5
90010f70:	f7ff ff08 	bl	90010d84 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
90010f74:	4a05      	ldr	r2, [pc, #20]	@ (90010f8c <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
90010f76:	682b      	ldr	r3, [r5, #0]
90010f78:	8812      	ldrh	r2, [r2, #0]
90010f7a:	9200      	str	r2, [sp, #0]
90010f7c:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
90010f7e:	4603      	mov	r3, r0
90010f80:	4628      	mov	r0, r5
90010f82:	e894 0006 	ldmia.w	r4, {r1, r2}
90010f86:	47b0      	blx	r6
90010f88:	b005      	add	sp, #20
90010f8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
90010f8c:	24021986 	.word	0x24021986

90010f90 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
90010f90:	b570      	push	{r4, r5, r6, lr}
90010f92:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
90010f96:	4604      	mov	r4, r0
90010f98:	b19b      	cbz	r3, 90010fc2 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
90010f9a:	2002      	movs	r0, #2
90010f9c:	f7ef fee2 	bl	90000d64 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
90010fa0:	2300      	movs	r3, #0
90010fa2:	4620      	mov	r0, r4
90010fa4:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
90010fa8:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
90010fac:	6823      	ldr	r3, [r4, #0]
90010fae:	f8d3 50c8 	ldr.w	r5, [r3, #200]	@ 0xc8
90010fb2:	f7ff fdbf 	bl	90010b34 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
90010fb6:	4601      	mov	r1, r0
90010fb8:	4620      	mov	r0, r4
90010fba:	462b      	mov	r3, r5
90010fbc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010fc0:	4718      	bx	r3
90010fc2:	bd70      	pop	{r4, r5, r6, pc}

90010fc4 <_ZN8touchgfx3HAL12setMCUActiveEb>:
90010fc4:	b570      	push	{r4, r5, r6, lr}
90010fc6:	4605      	mov	r5, r0
90010fc8:	460c      	mov	r4, r1
90010fca:	2003      	movs	r0, #3
90010fcc:	b149      	cbz	r1, 90010fe2 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
90010fce:	f7ef fe61 	bl	90000c94 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90010fd2:	6928      	ldr	r0, [r5, #16]
90010fd4:	b168      	cbz	r0, 90010ff2 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90010fd6:	6803      	ldr	r3, [r0, #0]
90010fd8:	2101      	movs	r1, #1
90010fda:	695b      	ldr	r3, [r3, #20]
90010fdc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90010fe0:	4718      	bx	r3
90010fe2:	f7ef fe8b 	bl	90000cfc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90010fe6:	6928      	ldr	r0, [r5, #16]
90010fe8:	b118      	cbz	r0, 90010ff2 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
90010fea:	6803      	ldr	r3, [r0, #0]
90010fec:	4621      	mov	r1, r4
90010fee:	695b      	ldr	r3, [r3, #20]
90010ff0:	e7f4      	b.n	90010fdc <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
90010ff2:	bd70      	pop	{r4, r5, r6, pc}

90010ff4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
90010ff4:	b538      	push	{r3, r4, r5, lr}
90010ff6:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
90010ffa:	4604      	mov	r4, r0
90010ffc:	460d      	mov	r5, r1
90010ffe:	428b      	cmp	r3, r1
90011000:	d006      	beq.n	90011010 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
90011002:	6803      	ldr	r3, [r0, #0]
90011004:	b929      	cbnz	r1, 90011012 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
90011006:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
9001100a:	4798      	blx	r3
9001100c:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
90011010:	bd38      	pop	{r3, r4, r5, pc}
90011012:	f8d3 30dc 	ldr.w	r3, [r3, #220]	@ 0xdc
90011016:	e7f8      	b.n	9001100a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

90011018 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
90011018:	4b0c      	ldr	r3, [pc, #48]	@ (9001104c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x34>)
9001101a:	b510      	push	{r4, lr}
9001101c:	781b      	ldrb	r3, [r3, #0]
9001101e:	4604      	mov	r4, r0
90011020:	b953      	cbnz	r3, 90011038 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
90011022:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
90011026:	b93b      	cbnz	r3, 90011038 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
90011028:	6840      	ldr	r0, [r0, #4]
9001102a:	f000 f919 	bl	90011260 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
9001102e:	b118      	cbz	r0, 90011038 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x20>
90011030:	6862      	ldr	r2, [r4, #4]
90011032:	7a53      	ldrb	r3, [r2, #9]
90011034:	2b00      	cmp	r3, #0
90011036:	d0fc      	beq.n	90011032 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1a>
90011038:	f7f1 f9a8 	bl	9000238c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
9001103c:	4620      	mov	r0, r4
9001103e:	2100      	movs	r1, #0
90011040:	f7ff ffd8 	bl	90010ff4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90011044:	4620      	mov	r0, r4
90011046:	f7ff fd75 	bl	90010b34 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
9001104a:	bd10      	pop	{r4, pc}
9001104c:	2402198a 	.word	0x2402198a

90011050 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
90011050:	b570      	push	{r4, r5, r6, lr}
90011052:	4604      	mov	r4, r0
90011054:	6803      	ldr	r3, [r0, #0]
90011056:	b919      	cbnz	r1, 90011060 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
90011058:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001105a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001105e:	4718      	bx	r3
90011060:	2200      	movs	r2, #0
90011062:	f890 607b 	ldrb.w	r6, [r0, #123]	@ 0x7b
90011066:	f880 207b 	strb.w	r2, [r0, #123]	@ 0x7b
9001106a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001106c:	4798      	blx	r3
9001106e:	6863      	ldr	r3, [r4, #4]
90011070:	2101      	movs	r1, #1
90011072:	4605      	mov	r5, r0
90011074:	4620      	mov	r0, r4
90011076:	7299      	strb	r1, [r3, #10]
90011078:	f884 607b 	strb.w	r6, [r4, #123]	@ 0x7b
9001107c:	f7ff ffba 	bl	90010ff4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
90011080:	4628      	mov	r0, r5
90011082:	bd70      	pop	{r4, r5, r6, pc}

90011084 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
90011084:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
90011088:	1a13      	subs	r3, r2, r0
9001108a:	4258      	negs	r0, r3
9001108c:	4158      	adcs	r0, r3
9001108e:	4770      	bx	lr

90011090 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
90011090:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
90011094:	1a9b      	subs	r3, r3, r2
90011096:	2b00      	cmp	r3, #0
90011098:	bfdc      	itt	le
9001109a:	6882      	ldrle	r2, [r0, #8]
9001109c:	189b      	addle	r3, r3, r2
9001109e:	2b01      	cmp	r3, #1
900110a0:	bfcc      	ite	gt
900110a2:	2000      	movgt	r0, #0
900110a4:	2001      	movle	r0, #1
900110a6:	4770      	bx	lr

900110a8 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
900110a8:	6902      	ldr	r2, [r0, #16]
900110aa:	6843      	ldr	r3, [r0, #4]
900110ac:	2024      	movs	r0, #36	@ 0x24
900110ae:	fb00 3002 	mla	r0, r0, r2, r3
900110b2:	4770      	bx	lr

900110b4 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
900110b4:	6803      	ldr	r3, [r0, #0]
900110b6:	691b      	ldr	r3, [r3, #16]
900110b8:	4718      	bx	r3

900110ba <_ZN8touchgfx13DMA_Interface7executeEv>:
900110ba:	2301      	movs	r3, #1
900110bc:	b570      	push	{r4, r5, r6, lr}
900110be:	7203      	strb	r3, [r0, #8]
900110c0:	4604      	mov	r4, r0
900110c2:	6840      	ldr	r0, [r0, #4]
900110c4:	6803      	ldr	r3, [r0, #0]
900110c6:	699b      	ldr	r3, [r3, #24]
900110c8:	4798      	blx	r3
900110ca:	6803      	ldr	r3, [r0, #0]
900110cc:	4605      	mov	r5, r0
900110ce:	2b40      	cmp	r3, #64	@ 0x40
900110d0:	d00c      	beq.n	900110ec <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900110d2:	d810      	bhi.n	900110f6 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
900110d4:	2b04      	cmp	r3, #4
900110d6:	d01d      	beq.n	90011114 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
900110d8:	d804      	bhi.n	900110e4 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
900110da:	2b01      	cmp	r3, #1
900110dc:	d006      	beq.n	900110ec <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900110de:	2b02      	cmp	r3, #2
900110e0:	d02c      	beq.n	9001113c <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
900110e2:	bd70      	pop	{r4, r5, r6, pc}
900110e4:	2b08      	cmp	r3, #8
900110e6:	d01d      	beq.n	90011124 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
900110e8:	2b20      	cmp	r3, #32
900110ea:	d1fa      	bne.n	900110e2 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
900110ec:	6823      	ldr	r3, [r4, #0]
900110ee:	4620      	mov	r0, r4
900110f0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900110f2:	4798      	blx	r3
900110f4:	e013      	b.n	9001111e <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
900110f6:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
900110fa:	d0f7      	beq.n	900110ec <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
900110fc:	d804      	bhi.n	90011108 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
900110fe:	2b80      	cmp	r3, #128	@ 0x80
90011100:	d0f4      	beq.n	900110ec <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
90011102:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
90011106:	e7f0      	b.n	900110ea <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
90011108:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001110c:	d0ee      	beq.n	900110ec <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
9001110e:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
90011112:	e7e5      	b.n	900110e0 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
90011114:	6823      	ldr	r3, [r4, #0]
90011116:	7f01      	ldrb	r1, [r0, #28]
90011118:	4620      	mov	r0, r4
9001111a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001111c:	4798      	blx	r3
9001111e:	6823      	ldr	r3, [r4, #0]
90011120:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90011122:	e006      	b.n	90011132 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
90011124:	6823      	ldr	r3, [r4, #0]
90011126:	7f01      	ldrb	r1, [r0, #28]
90011128:	4620      	mov	r0, r4
9001112a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001112c:	4798      	blx	r3
9001112e:	6823      	ldr	r3, [r4, #0]
90011130:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90011132:	4629      	mov	r1, r5
90011134:	4620      	mov	r0, r4
90011136:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001113a:	4718      	bx	r3
9001113c:	6823      	ldr	r3, [r4, #0]
9001113e:	4620      	mov	r0, r4
90011140:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90011142:	4798      	blx	r3
90011144:	e7f3      	b.n	9001112e <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

90011146 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
90011146:	4770      	bx	lr

90011148 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
90011148:	4770      	bx	lr

9001114a <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
9001114a:	4770      	bx	lr

9001114c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
9001114c:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
90011150:	b510      	push	{r4, lr}
90011152:	1ad2      	subs	r2, r2, r3
90011154:	2a00      	cmp	r2, #0
90011156:	bfdc      	itt	le
90011158:	6884      	ldrle	r4, [r0, #8]
9001115a:	1912      	addle	r2, r2, r4
9001115c:	2a01      	cmp	r2, #1
9001115e:	dd16      	ble.n	9001118e <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
90011160:	6842      	ldr	r2, [r0, #4]
90011162:	2424      	movs	r4, #36	@ 0x24
90011164:	fb04 2303 	mla	r3, r4, r3, r2
90011168:	f101 0220 	add.w	r2, r1, #32
9001116c:	f851 4b04 	ldr.w	r4, [r1], #4
90011170:	4291      	cmp	r1, r2
90011172:	f843 4b04 	str.w	r4, [r3], #4
90011176:	d1f9      	bne.n	9001116c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
90011178:	780a      	ldrb	r2, [r1, #0]
9001117a:	701a      	strb	r2, [r3, #0]
9001117c:	68c3      	ldr	r3, [r0, #12]
9001117e:	6882      	ldr	r2, [r0, #8]
90011180:	f3bf 8f5b 	dmb	ish
90011184:	3301      	adds	r3, #1
90011186:	429a      	cmp	r2, r3
90011188:	bfd8      	it	le
9001118a:	1a9b      	suble	r3, r3, r2
9001118c:	60c3      	str	r3, [r0, #12]
9001118e:	bd10      	pop	{r4, pc}

90011190 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
90011190:	6903      	ldr	r3, [r0, #16]
90011192:	6882      	ldr	r2, [r0, #8]
90011194:	f3bf 8f5b 	dmb	ish
90011198:	3301      	adds	r3, #1
9001119a:	429a      	cmp	r2, r3
9001119c:	bfd8      	it	le
9001119e:	1a9b      	suble	r3, r3, r2
900111a0:	6103      	str	r3, [r0, #16]
900111a2:	4770      	bx	lr

900111a4 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
900111a4:	b570      	push	{r4, r5, r6, lr}
900111a6:	4604      	mov	r4, r0
900111a8:	460e      	mov	r6, r1
900111aa:	6860      	ldr	r0, [r4, #4]
900111ac:	6803      	ldr	r3, [r0, #0]
900111ae:	685b      	ldr	r3, [r3, #4]
900111b0:	4798      	blx	r3
900111b2:	2800      	cmp	r0, #0
900111b4:	d1f9      	bne.n	900111aa <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
900111b6:	4d0d      	ldr	r5, [pc, #52]	@ (900111ec <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
900111b8:	6828      	ldr	r0, [r5, #0]
900111ba:	6803      	ldr	r3, [r0, #0]
900111bc:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
900111c0:	4798      	blx	r3
900111c2:	f7f1 f8f1 	bl	900023a8 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
900111c6:	6828      	ldr	r0, [r5, #0]
900111c8:	2101      	movs	r1, #1
900111ca:	f7ff ff13 	bl	90010ff4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
900111ce:	6860      	ldr	r0, [r4, #4]
900111d0:	4631      	mov	r1, r6
900111d2:	6803      	ldr	r3, [r0, #0]
900111d4:	689b      	ldr	r3, [r3, #8]
900111d6:	4798      	blx	r3
900111d8:	6823      	ldr	r3, [r4, #0]
900111da:	4620      	mov	r0, r4
900111dc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900111de:	4798      	blx	r3
900111e0:	6828      	ldr	r0, [r5, #0]
900111e2:	6803      	ldr	r3, [r0, #0]
900111e4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900111e8:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900111ea:	4718      	bx	r3
900111ec:	2402198c 	.word	0x2402198c

900111f0 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
900111f0:	b508      	push	{r3, lr}
900111f2:	f7f1 f8cb 	bl	9000238c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
900111f6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
900111fa:	f7f1 b8cf 	b.w	9000239c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

900111fe <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
900111fe:	b510      	push	{r4, lr}
90011200:	4604      	mov	r4, r0
90011202:	2114      	movs	r1, #20
90011204:	f017 fe3a 	bl	90028e7c <_ZdlPvj>
90011208:	4620      	mov	r0, r4
9001120a:	bd10      	pop	{r4, pc}

9001120c <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
9001120c:	b570      	push	{r4, r5, r6, lr}
9001120e:	4604      	mov	r4, r0
90011210:	6840      	ldr	r0, [r0, #4]
90011212:	6803      	ldr	r3, [r0, #0]
90011214:	681b      	ldr	r3, [r3, #0]
90011216:	4798      	blx	r3
90011218:	4605      	mov	r5, r0
9001121a:	b930      	cbnz	r0, 9001122a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
9001121c:	7a23      	ldrb	r3, [r4, #8]
9001121e:	b123      	cbz	r3, 9001122a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
90011220:	6860      	ldr	r0, [r4, #4]
90011222:	6803      	ldr	r3, [r0, #0]
90011224:	695b      	ldr	r3, [r3, #20]
90011226:	4798      	blx	r3
90011228:	7225      	strb	r5, [r4, #8]
9001122a:	6860      	ldr	r0, [r4, #4]
9001122c:	6803      	ldr	r3, [r0, #0]
9001122e:	681b      	ldr	r3, [r3, #0]
90011230:	4798      	blx	r3
90011232:	b928      	cbnz	r0, 90011240 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
90011234:	6823      	ldr	r3, [r4, #0]
90011236:	4620      	mov	r0, r4
90011238:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9001123a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001123e:	4718      	bx	r3
90011240:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90011244:	f7f1 b8b8 	b.w	900023b8 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

90011248 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
90011248:	b510      	push	{r4, lr}
9001124a:	6082      	str	r2, [r0, #8]
9001124c:	2200      	movs	r2, #0
9001124e:	4c03      	ldr	r4, [pc, #12]	@ (9001125c <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
90011250:	e9c0 2203 	strd	r2, r2, [r0, #12]
90011254:	e9c0 4100 	strd	r4, r1, [r0]
90011258:	bd10      	pop	{r4, pc}
9001125a:	bf00      	nop
9001125c:	9002d1d8 	.word	0x9002d1d8

90011260 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
90011260:	6840      	ldr	r0, [r0, #4]
90011262:	6803      	ldr	r3, [r0, #0]
90011264:	681b      	ldr	r3, [r3, #0]
90011266:	4718      	bx	r3

90011268 <_ZN8touchgfxL10applyNoiseEiihhh>:
90011268:	e92d 48f0 	stmdb	sp!, {r4, r5, r6, r7, fp, lr}
9001126c:	fb80 0101 	smull	r0, r1, r0, r1
90011270:	4f21      	ldr	r7, [pc, #132]	@ (900112f8 <_ZN8touchgfxL10applyNoiseEiihhh+0x90>)
90011272:	461c      	mov	r4, r3
90011274:	4616      	mov	r6, r2
90011276:	fba0 bc07 	umull	fp, ip, r0, r7
9001127a:	f89d 5018 	ldrb.w	r5, [sp, #24]
9001127e:	fb07 cc01 	mla	ip, r7, r1, ip
90011282:	fbab 010b 	umull	r0, r1, fp, fp
90011286:	fb0b f70c 	mul.w	r7, fp, ip
9001128a:	fb00 f30c 	mul.w	r3, r0, ip
9001128e:	eb01 0147 	add.w	r1, r1, r7, lsl #1
90011292:	fb0b 3301 	mla	r3, fp, r1, r3
90011296:	fba0 010b 	umull	r0, r1, r0, fp
9001129a:	4419      	add	r1, r3
9001129c:	a314      	add	r3, pc, #80	@ (adr r3, 900112f0 <_ZN8touchgfxL10applyNoiseEiihhh+0x88>)
9001129e:	e9d3 2300 	ldrd	r2, r3, [r3]
900112a2:	f7ef fa29 	bl	900006f8 <__aeabi_ldivmod>
900112a6:	2ef7      	cmp	r6, #247	@ 0xf7
900112a8:	b290      	uxth	r0, r2
900112aa:	bf9e      	ittt	ls
900112ac:	f002 0207 	andls.w	r2, r2, #7
900112b0:	18b6      	addls	r6, r6, r2
900112b2:	b2f6      	uxtbls	r6, r6
900112b4:	2cfb      	cmp	r4, #251	@ 0xfb
900112b6:	bf9e      	ittt	ls
900112b8:	f3c0 03c1 	ubfxls	r3, r0, #3, #2
900112bc:	18e4      	addls	r4, r4, r3
900112be:	b2e4      	uxtbls	r4, r4
900112c0:	2df7      	cmp	r5, #247	@ 0xf7
900112c2:	bf98      	it	ls
900112c4:	f3c0 1042 	ubfxls	r0, r0, #5, #3
900112c8:	ea4f 04c4 	mov.w	r4, r4, lsl #3
900112cc:	bf98      	it	ls
900112ce:	182d      	addls	r5, r5, r0
900112d0:	480a      	ldr	r0, [pc, #40]	@ (900112fc <_ZN8touchgfxL10applyNoiseEiihhh+0x94>)
900112d2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
900112d6:	ea00 2006 	and.w	r0, r0, r6, lsl #8
900112da:	bf98      	it	ls
900112dc:	b2ed      	uxtbls	r5, r5
900112de:	4304      	orrs	r4, r0
900112e0:	ea44 00d5 	orr.w	r0, r4, r5, lsr #3
900112e4:	b280      	uxth	r0, r0
900112e6:	e8bd 88f0 	ldmia.w	sp!, {r4, r5, r6, r7, fp, pc}
900112ea:	bf00      	nop
900112ec:	f3af 8000 	nop.w
900112f0:	797a8d77 	.word	0x797a8d77
900112f4:	00000000 	.word	0x00000000
900112f8:	00ec4ba7 	.word	0x00ec4ba7
900112fc:	fffff800 	.word	0xfffff800

90011300 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh>:
90011300:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90011304:	eb01 0442 	add.w	r4, r1, r2, lsl #1
90011308:	4605      	mov	r5, r0
9001130a:	ed2d 8b02 	vpush	{d8}
9001130e:	b087      	sub	sp, #28
90011310:	7c41      	ldrb	r1, [r0, #17]
90011312:	f9bd 9048 	ldrsh.w	r9, [sp, #72]	@ 0x48
90011316:	f9bd 604c 	ldrsh.w	r6, [sp, #76]	@ 0x4c
9001131a:	f89d a050 	ldrb.w	sl, [sp, #80]	@ 0x50
9001131e:	2900      	cmp	r1, #0
90011320:	f000 809a 	beq.w	90011458 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x158>
90011324:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
90011328:	ed90 7a08 	vldr	s14, [r0, #32]
9001132c:	454a      	cmp	r2, r9
9001132e:	68c0      	ldr	r0, [r0, #12]
90011330:	db25      	blt.n	9001137e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x7e>
90011332:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90011336:	f640 72fc 	movw	r2, #4092	@ 0xffc
9001133a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001133e:	bfc8      	it	gt
90011340:	2200      	movgt	r2, #0
90011342:	5882      	ldr	r2, [r0, r2]
90011344:	2100      	movs	r1, #0
90011346:	ea4f 2812 	mov.w	r8, r2, lsr #8
9001134a:	7c2d      	ldrb	r5, [r5, #16]
9001134c:	0950      	lsrs	r0, r2, #5
9001134e:	f3c2 0cc4 	ubfx	ip, r2, #3, #5
90011352:	f408 4e78 	and.w	lr, r8, #63488	@ 0xf800
90011356:	eb04 0746 	add.w	r7, r4, r6, lsl #1
9001135a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001135e:	2d00      	cmp	r5, #0
90011360:	d044      	beq.n	900113ec <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
90011362:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90011366:	d141      	bne.n	900113ec <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xec>
90011368:	bb61      	cbnz	r1, 900113c4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xc4>
9001136a:	ea4e 0000 	orr.w	r0, lr, r0
9001136e:	ea4c 0500 	orr.w	r5, ip, r0
90011372:	42bc      	cmp	r4, r7
90011374:	f080 8214 	bcs.w	900117a0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90011378:	f824 5b02 	strh.w	r5, [r4], #2
9001137c:	e7f9      	b.n	90011372 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x72>
9001137e:	f9b5 700a 	ldrsh.w	r7, [r5, #10]
90011382:	454f      	cmp	r7, r9
90011384:	dc08      	bgt.n	90011398 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x98>
90011386:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9001138a:	f640 72fc 	movw	r2, #4092	@ 0xffc
9001138e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011392:	bfd8      	it	le
90011394:	2200      	movle	r2, #0
90011396:	e7d4      	b.n	90011342 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42>
90011398:	eba9 0202 	sub.w	r2, r9, r2
9001139c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900113a0:	ee07 2a90 	vmov	s15, r2
900113a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900113a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900113ac:	ee67 7a87 	vmul.f32	s15, s15, s14
900113b0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
900113b4:	ee17 2a90 	vmov	r2, s15
900113b8:	bfd8      	it	le
900113ba:	f202 32ff 	addwle	r2, r2, #1023	@ 0x3ff
900113be:	0092      	lsls	r2, r2, #2
900113c0:	5882      	ldr	r2, [r0, r2]
900113c2:	e7c0      	b.n	90011346 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x46>
900113c4:	b2d5      	uxtb	r5, r2
900113c6:	f3c2 4a07 	ubfx	sl, r2, #16, #8
900113ca:	fa5f f888 	uxtb.w	r8, r8
900113ce:	461e      	mov	r6, r3
900113d0:	42bc      	cmp	r4, r7
900113d2:	f080 81e5 	bcs.w	900117a0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900113d6:	4630      	mov	r0, r6
900113d8:	9500      	str	r5, [sp, #0]
900113da:	4643      	mov	r3, r8
900113dc:	4652      	mov	r2, sl
900113de:	4649      	mov	r1, r9
900113e0:	3601      	adds	r6, #1
900113e2:	f7ff ff41 	bl	90011268 <_ZN8touchgfxL10applyNoiseEiihhh>
900113e6:	f824 0b02 	strh.w	r0, [r4], #2
900113ea:	e7f1      	b.n	900113d0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0xd0>
900113ec:	0e12      	lsrs	r2, r2, #24
900113ee:	26ff      	movs	r6, #255	@ 0xff
900113f0:	fb02 f20a 	mul.w	r2, r2, sl
900113f4:	1c53      	adds	r3, r2, #1
900113f6:	eb03 2222 	add.w	r2, r3, r2, asr #8
900113fa:	1212      	asrs	r2, r2, #8
900113fc:	fb02 f50c 	mul.w	r5, r2, ip
90011400:	f8df c3b0 	ldr.w	ip, [pc, #944]	@ 900117b4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90011404:	fb02 f10e 	mul.w	r1, r2, lr
90011408:	4350      	muls	r0, r2
9001140a:	43d2      	mvns	r2, r2
9001140c:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
90011410:	42bc      	cmp	r4, r7
90011412:	f080 81c5 	bcs.w	900117a0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
90011416:	f8b4 e000 	ldrh.w	lr, [r4]
9001141a:	ea0e 030c 	and.w	r3, lr, ip
9001141e:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
90011422:	f00e 0e1f 	and.w	lr, lr, #31
90011426:	fb02 1303 	mla	r3, r2, r3, r1
9001142a:	fb02 0808 	mla	r8, r2, r8, r0
9001142e:	fb02 5e0e 	mla	lr, r2, lr, r5
90011432:	fb93 f3f6 	sdiv	r3, r3, r6
90011436:	fb98 f8f6 	sdiv	r8, r8, r6
9001143a:	fb9e fef6 	sdiv	lr, lr, r6
9001143e:	ea03 030c 	and.w	r3, r3, ip
90011442:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
90011446:	f00e 0e1f 	and.w	lr, lr, #31
9001144a:	ea43 0308 	orr.w	r3, r3, r8
9001144e:	ea43 030e 	orr.w	r3, r3, lr
90011452:	f824 3b02 	strh.w	r3, [r4], #2
90011456:	e7db      	b.n	90011410 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x110>
90011458:	7c82      	ldrb	r2, [r0, #18]
9001145a:	2a00      	cmp	r2, #0
9001145c:	d04f      	beq.n	900114fe <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1fe>
9001145e:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
90011462:	ee07 2a90 	vmov	s15, r2
90011466:	eef8 7ae7 	vcvt.f32.s32	s15, s15
9001146a:	ee07 3a10 	vmov	s14, r3
9001146e:	461f      	mov	r7, r3
90011470:	eef8 6ac7 	vcvt.f32.s32	s13, s14
90011474:	eef4 6ae7 	vcmpe.f32	s13, s15
90011478:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001147c:	f200 8095 	bhi.w	900115aa <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2aa>
90011480:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90011484:	f640 71fc 	movw	r1, #4092	@ 0xffc
90011488:	68ea      	ldr	r2, [r5, #12]
9001148a:	f895 c010 	ldrb.w	ip, [r5, #16]
9001148e:	ee37 7a87 	vadd.f32	s14, s15, s14
90011492:	ee37 7a66 	vsub.f32	s14, s14, s13
90011496:	ee06 6a90 	vmov	s13, r6
9001149a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001149e:	eeb4 7ae6 	vcmpe.f32	s14, s13
900114a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900114a6:	bf4a      	itet	mi
900114a8:	eebd 7ac7 	vcvtmi.s32.f32	s14, s14
900114ac:	9602      	strpl	r6, [sp, #8]
900114ae:	ed8d 7a02 	vstrmi	s14, [sp, #8]
900114b2:	ed95 7a08 	vldr	s14, [r5, #32]
900114b6:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
900114ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900114be:	bfc8      	it	gt
900114c0:	2100      	movgt	r1, #0
900114c2:	5852      	ldr	r2, [r2, r1]
900114c4:	9902      	ldr	r1, [sp, #8]
900114c6:	ea4f 2b12 	mov.w	fp, r2, lsr #8
900114ca:	eb04 0141 	add.w	r1, r4, r1, lsl #1
900114ce:	0950      	lsrs	r0, r2, #5
900114d0:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
900114d4:	9103      	str	r1, [sp, #12]
900114d6:	f3c2 01c4 	ubfx	r1, r2, #3, #5
900114da:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900114de:	f1bc 0f00 	cmp.w	ip, #0
900114e2:	d024      	beq.n	9001152e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
900114e4:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
900114e8:	d121      	bne.n	9001152e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x22e>
900114ea:	ea4b 0b00 	orr.w	fp, fp, r0
900114ee:	ea41 010b 	orr.w	r1, r1, fp
900114f2:	9a03      	ldr	r2, [sp, #12]
900114f4:	4294      	cmp	r4, r2
900114f6:	d255      	bcs.n	900115a4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
900114f8:	f824 1b02 	strh.w	r1, [r4], #2
900114fc:	e7f9      	b.n	900114f2 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x1f2>
900114fe:	ee07 9a10 	vmov	s14, r9
90011502:	edd0 7a06 	vldr	s15, [r0, #24]
90011506:	edd0 6a05 	vldr	s13, [r0, #20]
9001150a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001150e:	ee37 7a67 	vsub.f32	s14, s14, s15
90011512:	eec7 7a26 	vdiv.f32	s15, s14, s13
90011516:	ed90 7a08 	vldr	s14, [r0, #32]
9001151a:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
9001151e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011522:	bf44      	itt	mi
90011524:	ed90 7a07 	vldrmi	s14, [r0, #28]
90011528:	ee77 7ac7 	vsubmi.f32	s15, s15, s14
9001152c:	e79d      	b.n	9001146a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x16a>
9001152e:	0e12      	lsrs	r2, r2, #24
90011530:	f8df 8280 	ldr.w	r8, [pc, #640]	@ 900117b4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90011534:	f04f 0eff 	mov.w	lr, #255	@ 0xff
90011538:	fb02 f20a 	mul.w	r2, r2, sl
9001153c:	f102 0c01 	add.w	ip, r2, #1
90011540:	eb0c 2222 	add.w	r2, ip, r2, asr #8
90011544:	1212      	asrs	r2, r2, #8
90011546:	4350      	muls	r0, r2
90011548:	4351      	muls	r1, r2
9001154a:	fb02 fb0b 	mul.w	fp, r2, fp
9001154e:	43d2      	mvns	r2, r2
90011550:	9004      	str	r0, [sp, #16]
90011552:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
90011556:	9105      	str	r1, [sp, #20]
90011558:	9903      	ldr	r1, [sp, #12]
9001155a:	428c      	cmp	r4, r1
9001155c:	d222      	bcs.n	900115a4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x2a4>
9001155e:	8820      	ldrh	r0, [r4, #0]
90011560:	f400 61fc 	and.w	r1, r0, #2016	@ 0x7e0
90011564:	ea00 0c08 	and.w	ip, r0, r8
90011568:	460f      	mov	r7, r1
9001156a:	9904      	ldr	r1, [sp, #16]
9001156c:	fb02 bc0c 	mla	ip, r2, ip, fp
90011570:	fb02 1107 	mla	r1, r2, r7, r1
90011574:	fb9c fcfe 	sdiv	ip, ip, lr
90011578:	fb91 f1fe 	sdiv	r1, r1, lr
9001157c:	ea0c 0c08 	and.w	ip, ip, r8
90011580:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90011584:	ea4c 0101 	orr.w	r1, ip, r1
90011588:	f000 0c1f 	and.w	ip, r0, #31
9001158c:	9805      	ldr	r0, [sp, #20]
9001158e:	fb02 0c0c 	mla	ip, r2, ip, r0
90011592:	fb9c fcfe 	sdiv	ip, ip, lr
90011596:	f00c 0c1f 	and.w	ip, ip, #31
9001159a:	ea41 010c 	orr.w	r1, r1, ip
9001159e:	f824 1b02 	strh.w	r1, [r4], #2
900115a2:	e7d9      	b.n	90011558 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x258>
900115a4:	9a02      	ldr	r2, [sp, #8]
900115a6:	441a      	add	r2, r3
900115a8:	4617      	mov	r7, r2
900115aa:	441e      	add	r6, r3
900115ac:	b236      	sxth	r6, r6
900115ae:	42be      	cmp	r6, r7
900115b0:	f340 80f6 	ble.w	900117a0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900115b4:	ed95 7a07 	vldr	s14, [r5, #28]
900115b8:	ee06 7a90 	vmov	s13, r7
900115bc:	ee37 7a87 	vadd.f32	s14, s15, s14
900115c0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900115c4:	eeb4 7ae6 	vcmpe.f32	s14, s13
900115c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900115cc:	f340 80b2 	ble.w	90011734 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x434>
900115d0:	ee06 6a10 	vmov	s12, r6
900115d4:	ee76 7ae7 	vsub.f32	s15, s13, s15
900115d8:	ed9f 8a74 	vldr	s16, [pc, #464]	@ 900117ac <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4ac>
900115dc:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
900115e0:	7c2b      	ldrb	r3, [r5, #16]
900115e2:	eeb4 7ac6 	vcmpe.f32	s14, s12
900115e6:	ed9f 6a72 	vldr	s12, [pc, #456]	@ 900117b0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b0>
900115ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900115ee:	bfd6      	itet	le
900115f0:	eebd 7ac7 	vcvtle.s32.f32	s14, s14
900115f4:	46b0      	movgt	r8, r6
900115f6:	ee17 8a10 	vmovle	r8, s14
900115fa:	ed95 7a08 	vldr	s14, [r5, #32]
900115fe:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90011602:	eba8 0707 	sub.w	r7, r8, r7
90011606:	eb04 0747 	add.w	r7, r4, r7, lsl #1
9001160a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001160e:	fe38 8a06 	vselgt.f32	s16, s16, s12
90011612:	eea7 8a27 	vfma.f32	s16, s14, s15
90011616:	b1db      	cbz	r3, 90011650 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
90011618:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001161c:	d118      	bne.n	90011650 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x350>
9001161e:	42bc      	cmp	r4, r7
90011620:	d262      	bcs.n	900116e8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
90011622:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90011626:	68eb      	ldr	r3, [r5, #12]
90011628:	4649      	mov	r1, r9
9001162a:	ee17 0a90 	vmov	r0, s15
9001162e:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
90011632:	b2d3      	uxtb	r3, r2
90011634:	9300      	str	r3, [sp, #0]
90011636:	f3c2 2307 	ubfx	r3, r2, #8, #8
9001163a:	f3c2 4207 	ubfx	r2, r2, #16, #8
9001163e:	f7ff fe13 	bl	90011268 <_ZN8touchgfxL10applyNoiseEiihhh>
90011642:	f824 0b02 	strh.w	r0, [r4], #2
90011646:	edd5 7a08 	vldr	s15, [r5, #32]
9001164a:	ee38 8a27 	vadd.f32	s16, s16, s15
9001164e:	e7e6      	b.n	9001161e <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x31e>
90011650:	f8df b160 	ldr.w	fp, [pc, #352]	@ 900117b4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
90011654:	f04f 09ff 	mov.w	r9, #255	@ 0xff
90011658:	42bc      	cmp	r4, r7
9001165a:	d245      	bcs.n	900116e8 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3e8>
9001165c:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90011660:	68eb      	ldr	r3, [r5, #12]
90011662:	f8b4 e000 	ldrh.w	lr, [r4]
90011666:	ee17 2a90 	vmov	r2, s15
9001166a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
9001166e:	0e13      	lsrs	r3, r2, #24
90011670:	ea0b 2112 	and.w	r1, fp, r2, lsr #8
90011674:	fb03 f30a 	mul.w	r3, r3, sl
90011678:	b289      	uxth	r1, r1
9001167a:	1c58      	adds	r0, r3, #1
9001167c:	eb00 2023 	add.w	r0, r0, r3, asr #8
90011680:	ea0e 030b 	and.w	r3, lr, fp
90011684:	1200      	asrs	r0, r0, #8
90011686:	ea6f 0c00 	mvn.w	ip, r0
9001168a:	fa5f fc8c 	uxtb.w	ip, ip
9001168e:	fb0c f303 	mul.w	r3, ip, r3
90011692:	fb00 3101 	mla	r1, r0, r1, r3
90011696:	fb91 f1f9 	sdiv	r1, r1, r9
9001169a:	ea01 030b 	and.w	r3, r1, fp
9001169e:	9302      	str	r3, [sp, #8]
900116a0:	0953      	lsrs	r3, r2, #5
900116a2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900116a6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900116aa:	4619      	mov	r1, r3
900116ac:	f40e 63fc 	and.w	r3, lr, #2016	@ 0x7e0
900116b0:	f00e 0e1f 	and.w	lr, lr, #31
900116b4:	fb0c f303 	mul.w	r3, ip, r3
900116b8:	fb0c fc0e 	mul.w	ip, ip, lr
900116bc:	fb00 3301 	mla	r3, r0, r1, r3
900116c0:	9902      	ldr	r1, [sp, #8]
900116c2:	fb00 c002 	mla	r0, r0, r2, ip
900116c6:	fb93 f3f9 	sdiv	r3, r3, r9
900116ca:	fb90 f0f9 	sdiv	r0, r0, r9
900116ce:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900116d2:	f000 001f 	and.w	r0, r0, #31
900116d6:	4319      	orrs	r1, r3
900116d8:	4301      	orrs	r1, r0
900116da:	f824 1b02 	strh.w	r1, [r4], #2
900116de:	edd5 7a08 	vldr	s15, [r5, #32]
900116e2:	ee38 8a27 	vadd.f32	s16, s16, s15
900116e6:	e7b7      	b.n	90011658 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x358>
900116e8:	4546      	cmp	r6, r8
900116ea:	dd59      	ble.n	900117a0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
900116ec:	edd5 7a08 	vldr	s15, [r5, #32]
900116f0:	f640 73fc 	movw	r3, #4092	@ 0xffc
900116f4:	68ea      	ldr	r2, [r5, #12]
900116f6:	eba6 0608 	sub.w	r6, r6, r8
900116fa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900116fe:	7c29      	ldrb	r1, [r5, #16]
90011700:	eb04 0646 	add.w	r6, r4, r6, lsl #1
90011704:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011708:	bfd8      	it	le
9001170a:	2300      	movle	r3, #0
9001170c:	58d2      	ldr	r2, [r2, r3]
9001170e:	0a10      	lsrs	r0, r2, #8
90011710:	f3c2 07c4 	ubfx	r7, r2, #3, #5
90011714:	0953      	lsrs	r3, r2, #5
90011716:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
9001171a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001171e:	b159      	cbz	r1, 90011738 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
90011720:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
90011724:	d108      	bne.n	90011738 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x438>
90011726:	4318      	orrs	r0, r3
90011728:	4338      	orrs	r0, r7
9001172a:	42b4      	cmp	r4, r6
9001172c:	d238      	bcs.n	900117a0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
9001172e:	f824 0b02 	strh.w	r0, [r4], #2
90011732:	e7fa      	b.n	9001172a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x42a>
90011734:	46b8      	mov	r8, r7
90011736:	e7d9      	b.n	900116ec <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x3ec>
90011738:	0e12      	lsrs	r2, r2, #24
9001173a:	f8df c078 	ldr.w	ip, [pc, #120]	@ 900117b4 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4b4>
9001173e:	fb02 f10a 	mul.w	r1, r2, sl
90011742:	1c4a      	adds	r2, r1, #1
90011744:	eb02 2221 	add.w	r2, r2, r1, asr #8
90011748:	1212      	asrs	r2, r2, #8
9001174a:	fb02 f507 	mul.w	r5, r2, r7
9001174e:	27ff      	movs	r7, #255	@ 0xff
90011750:	4350      	muls	r0, r2
90011752:	4353      	muls	r3, r2
90011754:	43d2      	mvns	r2, r2
90011756:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001175a:	42b4      	cmp	r4, r6
9001175c:	d220      	bcs.n	900117a0 <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x4a0>
9001175e:	f8b4 e000 	ldrh.w	lr, [r4]
90011762:	ea0e 010c 	and.w	r1, lr, ip
90011766:	f40e 68fc 	and.w	r8, lr, #2016	@ 0x7e0
9001176a:	f00e 0e1f 	and.w	lr, lr, #31
9001176e:	fb02 0101 	mla	r1, r2, r1, r0
90011772:	fb02 3808 	mla	r8, r2, r8, r3
90011776:	fb02 5e0e 	mla	lr, r2, lr, r5
9001177a:	fb91 f1f7 	sdiv	r1, r1, r7
9001177e:	fb98 f8f7 	sdiv	r8, r8, r7
90011782:	fb9e fef7 	sdiv	lr, lr, r7
90011786:	ea01 010c 	and.w	r1, r1, ip
9001178a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001178e:	f00e 0e1f 	and.w	lr, lr, #31
90011792:	ea41 0108 	orr.w	r1, r1, r8
90011796:	ea41 010e 	orr.w	r1, r1, lr
9001179a:	f824 1b02 	strh.w	r1, [r4], #2
9001179e:	e7dc      	b.n	9001175a <_ZNK8touchgfx27PainterRGB565LinearGradient5paintEPhssssh+0x45a>
900117a0:	b007      	add	sp, #28
900117a2:	ecbd 8b02 	vpop	{d8}
900117a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900117aa:	bf00      	nop
900117ac:	00000000 	.word	0x00000000
900117b0:	447ffffe 	.word	0x447ffffe
900117b4:	fffff800 	.word	0xfffff800

900117b8 <_ZNK8touchgfx27PainterRGB565LinearGradient8tearDownEv>:
900117b8:	4770      	bx	lr

900117ba <_ZN8touchgfx27PainterRGB565LinearGradientD1Ev>:
900117ba:	4770      	bx	lr

900117bc <_ZN8touchgfx27PainterRGB565LinearGradientD0Ev>:
900117bc:	b510      	push	{r4, lr}
900117be:	4604      	mov	r4, r0
900117c0:	2124      	movs	r1, #36	@ 0x24
900117c2:	f017 fb5b 	bl	90028e7c <_ZdlPvj>
900117c6:	4620      	mov	r0, r4
900117c8:	bd10      	pop	{r4, pc}
	...

900117cc <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
900117cc:	094a      	lsrs	r2, r1, #5
900117ce:	4b06      	ldr	r3, [pc, #24]	@ (900117e8 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
900117d0:	60c1      	str	r1, [r0, #12]
900117d2:	ea03 2311 	and.w	r3, r3, r1, lsr #8
900117d6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900117da:	f3c1 01c4 	ubfx	r1, r1, #3, #5
900117de:	4313      	orrs	r3, r2
900117e0:	4319      	orrs	r1, r3
900117e2:	8201      	strh	r1, [r0, #16]
900117e4:	4770      	bx	lr
900117e6:	bf00      	nop
900117e8:	fffff800 	.word	0xfffff800

900117ec <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
900117ec:	f1a0 0008 	sub.w	r0, r0, #8
900117f0:	e7ec      	b.n	900117cc <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
900117f2:	bf00      	nop

900117f4 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
900117f4:	b508      	push	{r3, lr}
900117f6:	4b05      	ldr	r3, [pc, #20]	@ (9001180c <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
900117f8:	6818      	ldr	r0, [r3, #0]
900117fa:	6803      	ldr	r3, [r0, #0]
900117fc:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
90011800:	4798      	blx	r3
90011802:	1e43      	subs	r3, r0, #1
90011804:	4258      	negs	r0, r3
90011806:	4158      	adcs	r0, r3
90011808:	bd08      	pop	{r3, pc}
9001180a:	bf00      	nop
9001180c:	2402198c 	.word	0x2402198c

90011810 <_ZN8touchgfx13PainterRGB565D1Ev>:
90011810:	4770      	bx	lr

90011812 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
90011812:	3808      	subs	r0, #8
90011814:	4770      	bx	lr

90011816 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
90011816:	b430      	push	{r4, r5}
90011818:	eb01 0442 	add.w	r4, r1, r2, lsl #1
9001181c:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
90011820:	8a02      	ldrh	r2, [r0, #16]
90011822:	f89d 3010 	ldrb.w	r3, [sp, #16]
90011826:	4629      	mov	r1, r5
90011828:	9202      	str	r2, [sp, #8]
9001182a:	68c2      	ldr	r2, [r0, #12]
9001182c:	4620      	mov	r0, r4
9001182e:	bc30      	pop	{r4, r5}
90011830:	f7f1 b8b6 	b.w	900029a0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

90011834 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
90011834:	f7f1 b890 	b.w	90002958 <_ZN8touchgfx5paint8tearDownEv>

90011838 <_ZN8touchgfx13PainterRGB565D0Ev>:
90011838:	b510      	push	{r4, lr}
9001183a:	4604      	mov	r4, r0
9001183c:	2114      	movs	r1, #20
9001183e:	f017 fb1d 	bl	90028e7c <_ZdlPvj>
90011842:	4620      	mov	r0, r4
90011844:	bd10      	pop	{r4, pc}

90011846 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
90011846:	f1a0 0008 	sub.w	r0, r0, #8
9001184a:	e7f5      	b.n	90011838 <_ZN8touchgfx13PainterRGB565D0Ev>

9001184c <_ZN8touchgfx17CWRVectorRenderer8tearDownEv>:
9001184c:	2300      	movs	r3, #0
9001184e:	84c3      	strh	r3, [r0, #38]	@ 0x26
90011850:	8503      	strh	r3, [r0, #40]	@ 0x28
90011852:	8543      	strh	r3, [r0, #42]	@ 0x2a
90011854:	8583      	strh	r3, [r0, #44]	@ 0x2c
90011856:	6980      	ldr	r0, [r0, #24]
90011858:	b110      	cbz	r0, 90011860 <_ZN8touchgfx17CWRVectorRenderer8tearDownEv+0x14>
9001185a:	6803      	ldr	r3, [r0, #0]
9001185c:	691b      	ldr	r3, [r3, #16]
9001185e:	4718      	bx	r3
90011860:	4770      	bx	lr

90011862 <_ZN8touchgfx17CWRVectorRenderer14setStrokeWidthEf>:
90011862:	ed80 0a0c 	vstr	s0, [r0, #48]	@ 0x30
90011866:	4770      	bx	lr

90011868 <_ZN8touchgfx17CWRVectorRenderer8setColorENS_9colortypeE>:
90011868:	b538      	push	{r3, r4, r5, lr}
9001186a:	0e0b      	lsrs	r3, r1, #24
9001186c:	4604      	mov	r4, r0
9001186e:	460d      	mov	r5, r1
90011870:	7783      	strb	r3, [r0, #30]
90011872:	6803      	ldr	r3, [r0, #0]
90011874:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90011876:	4798      	blx	r3
90011878:	6803      	ldr	r3, [r0, #0]
9001187a:	4629      	mov	r1, r5
9001187c:	689b      	ldr	r3, [r3, #8]
9001187e:	4798      	blx	r3
90011880:	6823      	ldr	r3, [r4, #0]
90011882:	4620      	mov	r0, r4
90011884:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90011886:	4798      	blx	r3
90011888:	61a0      	str	r0, [r4, #24]
9001188a:	bd38      	pop	{r3, r4, r5, pc}

9001188c <_ZN8touchgfx17CWRVectorRenderer8setAlphaEh>:
9001188c:	7741      	strb	r1, [r0, #29]
9001188e:	4770      	bx	lr

90011890 <_ZN8touchgfx17CWRVectorRenderer23setTransformationMatrixERKNS_9Matrix3x3E>:
90011890:	b530      	push	{r4, r5, lr}
90011892:	460d      	mov	r5, r1
90011894:	f100 0434 	add.w	r4, r0, #52	@ 0x34
90011898:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
9001189a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
9001189c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
9001189e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
900118a0:	682b      	ldr	r3, [r5, #0]
900118a2:	6023      	str	r3, [r4, #0]
900118a4:	bd30      	pop	{r4, r5, pc}

900118a6 <_ZN8touchgfx17CWRVectorRenderer5setupERKNS_4RectES3_>:
900118a6:	b538      	push	{r3, r4, r5, lr}
900118a8:	4604      	mov	r4, r0
900118aa:	1d03      	adds	r3, r0, #4
900118ac:	6808      	ldr	r0, [r1, #0]
900118ae:	2500      	movs	r5, #0
900118b0:	6849      	ldr	r1, [r1, #4]
900118b2:	c303      	stmia	r3!, {r0, r1}
900118b4:	6813      	ldr	r3, [r2, #0]
900118b6:	f104 0034 	add.w	r0, r4, #52	@ 0x34
900118ba:	f8c4 3026 	str.w	r3, [r4, #38]	@ 0x26
900118be:	6853      	ldr	r3, [r2, #4]
900118c0:	61a5      	str	r5, [r4, #24]
900118c2:	f8c4 302a 	str.w	r3, [r4, #42]	@ 0x2a
900118c6:	f006 f9f9 	bl	90017cbc <_ZN8touchgfx9Matrix3x35resetEv>
900118ca:	23ff      	movs	r3, #255	@ 0xff
900118cc:	f884 5025 	strb.w	r5, [r4, #37]	@ 0x25
900118d0:	7763      	strb	r3, [r4, #29]
900118d2:	77a3      	strb	r3, [r4, #30]
900118d4:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
900118d8:	6323      	str	r3, [r4, #48]	@ 0x30
900118da:	2301      	movs	r3, #1
900118dc:	f884 3024 	strb.w	r3, [r4, #36]	@ 0x24
900118e0:	bd38      	pop	{r3, r4, r5, pc}
	...

900118e4 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_>:
900118e4:	ee70 7a41 	vsub.f32	s15, s0, s2
900118e8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900118ec:	eef5 7a40 	vcmp.f32	s15, #0.0
900118f0:	4605      	mov	r5, r0
900118f2:	ed2d 8b0a 	vpush	{d8-d12}
900118f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900118fa:	b087      	sub	sp, #28
900118fc:	eef0 9a40 	vmov.f32	s19, s0
90011900:	6802      	ldr	r2, [r0, #0]
90011902:	eeb0 aa60 	vmov.f32	s20, s1
90011906:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
9001190a:	eeb0 9a41 	vmov.f32	s18, s2
9001190e:	9f19      	ldr	r7, [sp, #100]	@ 0x64
90011910:	eef0 8a61 	vmov.f32	s17, s3
90011914:	eeb0 ca42 	vmov.f32	s24, s4
90011918:	eef0 ca62 	vmov.f32	s25, s5
9001191c:	d112      	bne.n	90011944 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
9001191e:	ee70 7ae1 	vsub.f32	s15, s1, s3
90011922:	eef5 7a40 	vcmp.f32	s15, #0.0
90011926:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001192a:	d10b      	bne.n	90011944 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x60>
9001192c:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90011930:	6a92      	ldr	r2, [r2, #40]	@ 0x28
90011932:	3901      	subs	r1, #1
90011934:	f853 1021 	ldr.w	r1, [r3, r1, lsl #2]
90011938:	b007      	add	sp, #28
9001193a:	ecbd 8b0a 	vpop	{d8-d12}
9001193e:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
90011942:	4710      	bx	r2
90011944:	23ff      	movs	r3, #255	@ 0xff
90011946:	4628      	mov	r0, r5
90011948:	f105 0834 	add.w	r8, r5, #52	@ 0x34
9001194c:	f8df 92c4 	ldr.w	r9, [pc, #708]	@ 90011c14 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x330>
90011950:	77ab      	strb	r3, [r5, #30]
90011952:	6b93      	ldr	r3, [r2, #56]	@ 0x38
90011954:	4798      	blx	r3
90011956:	f9b5 3008 	ldrsh.w	r3, [r5, #8]
9001195a:	eeb0 0a69 	vmov.f32	s0, s19
9001195e:	4604      	mov	r4, r0
90011960:	80c3      	strh	r3, [r0, #6]
90011962:	eef0 0a4a 	vmov.f32	s1, s20
90011966:	4640      	mov	r0, r8
90011968:	f006 fa57 	bl	90017e1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001196c:	eeb0 ba40 	vmov.f32	s22, s0
90011970:	ed8d 0a00 	vstr	s0, [sp]
90011974:	eeb0 0a49 	vmov.f32	s0, s18
90011978:	eef0 ba60 	vmov.f32	s23, s1
9001197c:	edcd 0a01 	vstr	s1, [sp, #4]
90011980:	4640      	mov	r0, r8
90011982:	eef0 0a68 	vmov.f32	s1, s17
90011986:	f006 fa48 	bl	90017e1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001198a:	eeb4 ba40 	vcmp.f32	s22, s0
9001198e:	eeb0 8a40 	vmov.f32	s16, s0
90011992:	ed8d 0a02 	vstr	s0, [sp, #8]
90011996:	eef0 aa60 	vmov.f32	s21, s1
9001199a:	edcd 0a03 	vstr	s1, [sp, #12]
9001199e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900119a2:	eef4 ba60 	vcmp.f32	s23, s1
900119a6:	bf0c      	ite	eq
900119a8:	2301      	moveq	r3, #1
900119aa:	2300      	movne	r3, #0
900119ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900119b0:	eeb4 ba40 	vcmp.f32	s22, s0
900119b4:	7463      	strb	r3, [r4, #17]
900119b6:	bf0c      	ite	eq
900119b8:	2301      	moveq	r3, #1
900119ba:	2300      	movne	r3, #0
900119bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900119c0:	74a3      	strb	r3, [r4, #18]
900119c2:	d031      	beq.n	90011a28 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x144>
900119c4:	eef4 ba60 	vcmp.f32	s23, s1
900119c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900119cc:	d02c      	beq.n	90011a28 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x144>
900119ce:	ee39 9a69 	vsub.f32	s18, s18, s19
900119d2:	4640      	mov	r0, r8
900119d4:	ee78 8aca 	vsub.f32	s17, s17, s20
900119d8:	eef0 0a4a 	vmov.f32	s1, s20
900119dc:	ee89 7a0c 	vdiv.f32	s14, s18, s24
900119e0:	eec8 7aac 	vdiv.f32	s15, s17, s25
900119e4:	eeb0 0a69 	vmov.f32	s0, s19
900119e8:	eeec 0a87 	vfma.f32	s1, s25, s14
900119ec:	eea7 0acc 	vfms.f32	s0, s15, s24
900119f0:	f006 fa13 	bl	90017e1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900119f4:	f899 3000 	ldrb.w	r3, [r9]
900119f8:	edcd 0a05 	vstr	s1, [sp, #20]
900119fc:	ee70 0aeb 	vsub.f32	s1, s1, s23
90011a00:	2b01      	cmp	r3, #1
90011a02:	bf08      	it	eq
90011a04:	eef1 7a60 	vnegeq.f32	s15, s1
90011a08:	ed8d 0a04 	vstr	s0, [sp, #16]
90011a0c:	ee30 0a4b 	vsub.f32	s0, s0, s22
90011a10:	bf04      	itt	eq
90011a12:	eef0 0a40 	vmoveq.f32	s1, s0
90011a16:	eeb0 0a67 	vmoveq.f32	s0, s15
90011a1a:	eeb5 0a40 	vcmp.f32	s0, #0.0
90011a1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011a22:	d135      	bne.n	90011a90 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1ac>
90011a24:	2301      	movs	r3, #1
90011a26:	74a3      	strb	r3, [r4, #18]
90011a28:	f899 2000 	ldrb.w	r2, [r9]
90011a2c:	7c63      	ldrb	r3, [r4, #17]
90011a2e:	2a01      	cmp	r2, #1
90011a30:	f040 80a3 	bne.w	90011b7a <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x296>
90011a34:	2b00      	cmp	r3, #0
90011a36:	d073      	beq.n	90011b20 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x23c>
90011a38:	ee3a 7aeb 	vsub.f32	s14, s21, s23
90011a3c:	eddf 6a73 	vldr	s13, [pc, #460]	@ 90011c0c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
90011a40:	eef4 baea 	vcmpe.f32	s23, s21
90011a44:	eec6 7a87 	vdiv.f32	s15, s13, s14
90011a48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011a4c:	edc4 7a08 	vstr	s15, [r4, #32]
90011a50:	eefd 7aea 	vcvt.s32.f32	s15, s21
90011a54:	ee17 3a90 	vmov	r3, s15
90011a58:	eefd 7aeb 	vcvt.s32.f32	s15, s23
90011a5c:	b21a      	sxth	r2, r3
90011a5e:	ee17 3a90 	vmov	r3, s15
90011a62:	bf48      	it	mi
90011a64:	8162      	strhmi	r2, [r4, #10]
90011a66:	b21b      	sxth	r3, r3
90011a68:	bf56      	itet	pl
90011a6a:	8122      	strhpl	r2, [r4, #8]
90011a6c:	8123      	strhmi	r3, [r4, #8]
90011a6e:	8163      	strhpl	r3, [r4, #10]
90011a70:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90011a74:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90011a78:	1a9b      	subs	r3, r3, r2
90011a7a:	ee07 3a90 	vmov	s15, r3
90011a7e:	2300      	movs	r3, #0
90011a80:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90011a84:	7463      	strb	r3, [r4, #17]
90011a86:	2301      	movs	r3, #1
90011a88:	edc4 7a07 	vstr	s15, [r4, #28]
90011a8c:	74a3      	strb	r3, [r4, #18]
90011a8e:	e03f      	b.n	90011b10 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90011a90:	ee80 7a80 	vdiv.f32	s14, s1, s0
90011a94:	eeb5 7a40 	vcmp.f32	s14, #0.0
90011a98:	ed84 7a05 	vstr	s14, [r4, #20]
90011a9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011aa0:	d102      	bne.n	90011aa8 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1c4>
90011aa2:	2301      	movs	r3, #1
90011aa4:	7463      	strb	r3, [r4, #17]
90011aa6:	e7bf      	b.n	90011a28 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x144>
90011aa8:	2b01      	cmp	r3, #1
90011aaa:	ee38 8a4b 	vsub.f32	s16, s16, s22
90011aae:	ee7a aaeb 	vsub.f32	s21, s21, s23
90011ab2:	bf0b      	itete	eq
90011ab4:	f9b4 2006 	ldrsheq.w	r2, [r4, #6]
90011ab8:	eef0 7a6b 	vmovne.f32	s15, s23
90011abc:	ee07 2a90 	vmoveq	s15, r2
90011ac0:	eeeb 7a47 	vfmsne.f32	s15, s22, s14
90011ac4:	bf02      	ittt	eq
90011ac6:	eef8 7ae7 	vcvteq.f32.s32	s15, s15
90011aca:	ee77 7acb 	vsubeq.f32	s15, s15, s22
90011ace:	eeeb 7ac7 	vfmseq.f32	s15, s23, s14
90011ad2:	2b01      	cmp	r3, #1
90011ad4:	edc4 7a06 	vstr	s15, [r4, #24]
90011ad8:	bf02      	ittt	eq
90011ada:	eef1 7a48 	vnegeq.f32	s15, s16
90011ade:	eeb0 8a6a 	vmoveq.f32	s16, s21
90011ae2:	eef0 aa67 	vmoveq.f32	s21, s15
90011ae6:	eeca 7a87 	vdiv.f32	s15, s21, s14
90011aea:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 90011c10 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x32c>
90011aee:	ee38 8a67 	vsub.f32	s16, s16, s15
90011af2:	eec7 7a08 	vdiv.f32	s15, s14, s16
90011af6:	ed84 8a07 	vstr	s16, [r4, #28]
90011afa:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
90011afe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011b02:	edc4 7a08 	vstr	s15, [r4, #32]
90011b06:	d503      	bpl.n	90011b10 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90011b08:	eeb1 8a48 	vneg.f32	s16, s16
90011b0c:	ed84 8a07 	vstr	s16, [r4, #28]
90011b10:	60e7      	str	r7, [r4, #12]
90011b12:	7426      	strb	r6, [r4, #16]
90011b14:	61ac      	str	r4, [r5, #24]
90011b16:	b007      	add	sp, #28
90011b18:	ecbd 8b0a 	vpop	{d8-d12}
90011b1c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90011b20:	7ca3      	ldrb	r3, [r4, #18]
90011b22:	2b00      	cmp	r3, #0
90011b24:	d0f4      	beq.n	90011b10 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90011b26:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90011b2a:	eddf 6a38 	vldr	s13, [pc, #224]	@ 90011c0c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
90011b2e:	ee00 3a10 	vmov	s0, r3
90011b32:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
90011b36:	ee30 8a48 	vsub.f32	s16, s0, s16
90011b3a:	ee30 0a4b 	vsub.f32	s0, s0, s22
90011b3e:	ee38 7a40 	vsub.f32	s14, s16, s0
90011b42:	eeb4 8ac0 	vcmpe.f32	s16, s0
90011b46:	eec6 7a87 	vdiv.f32	s15, s13, s14
90011b4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011b4e:	edc4 7a08 	vstr	s15, [r4, #32]
90011b52:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90011b56:	ee17 3a90 	vmov	r3, s15
90011b5a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
90011b5e:	b21a      	sxth	r2, r3
90011b60:	ee17 3a90 	vmov	r3, s15
90011b64:	bfc8      	it	gt
90011b66:	8162      	strhgt	r2, [r4, #10]
90011b68:	b21b      	sxth	r3, r3
90011b6a:	bfd6      	itet	le
90011b6c:	8122      	strhle	r2, [r4, #8]
90011b6e:	8123      	strhgt	r3, [r4, #8]
90011b70:	8163      	strhle	r3, [r4, #10]
90011b72:	2301      	movs	r3, #1
90011b74:	7463      	strb	r3, [r4, #17]
90011b76:	2300      	movs	r3, #0
90011b78:	e788      	b.n	90011a8c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x1a8>
90011b7a:	b1e3      	cbz	r3, 90011bb6 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x2d2>
90011b7c:	ee3a 7aeb 	vsub.f32	s14, s21, s23
90011b80:	eddf 6a22 	vldr	s13, [pc, #136]	@ 90011c0c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
90011b84:	eef4 baea 	vcmpe.f32	s23, s21
90011b88:	eec6 7a87 	vdiv.f32	s15, s13, s14
90011b8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011b90:	edc4 7a08 	vstr	s15, [r4, #32]
90011b94:	eefd 7aea 	vcvt.s32.f32	s15, s21
90011b98:	ee17 3a90 	vmov	r3, s15
90011b9c:	eefd 7aeb 	vcvt.s32.f32	s15, s23
90011ba0:	b21a      	sxth	r2, r3
90011ba2:	ee17 3a90 	vmov	r3, s15
90011ba6:	bf48      	it	mi
90011ba8:	8162      	strhmi	r2, [r4, #10]
90011baa:	b21b      	sxth	r3, r3
90011bac:	bf56      	itet	pl
90011bae:	8122      	strhpl	r2, [r4, #8]
90011bb0:	8123      	strhmi	r3, [r4, #8]
90011bb2:	8163      	strhpl	r3, [r4, #10]
90011bb4:	e7ac      	b.n	90011b10 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90011bb6:	7ca3      	ldrb	r3, [r4, #18]
90011bb8:	2b00      	cmp	r3, #0
90011bba:	d0a9      	beq.n	90011b10 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90011bbc:	ee38 7a4b 	vsub.f32	s14, s16, s22
90011bc0:	eddf 6a12 	vldr	s13, [pc, #72]	@ 90011c0c <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x328>
90011bc4:	eeb4 bac8 	vcmpe.f32	s22, s16
90011bc8:	eec6 7a87 	vdiv.f32	s15, s13, s14
90011bcc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011bd0:	edc4 7a08 	vstr	s15, [r4, #32]
90011bd4:	eefd 7ac8 	vcvt.s32.f32	s15, s16
90011bd8:	ee17 3a90 	vmov	r3, s15
90011bdc:	eefd 7acb 	vcvt.s32.f32	s15, s22
90011be0:	b21a      	sxth	r2, r3
90011be2:	ee17 3a90 	vmov	r3, s15
90011be6:	bf48      	it	mi
90011be8:	8162      	strhmi	r2, [r4, #10]
90011bea:	b21b      	sxth	r3, r3
90011bec:	bf56      	itet	pl
90011bee:	8122      	strhpl	r2, [r4, #8]
90011bf0:	8123      	strhmi	r3, [r4, #8]
90011bf2:	8163      	strhpl	r3, [r4, #10]
90011bf4:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90011bf8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90011bfc:	1a9b      	subs	r3, r3, r2
90011bfe:	ee07 3a90 	vmov	s15, r3
90011c02:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90011c06:	edc4 7a07 	vstr	s15, [r4, #28]
90011c0a:	e781      	b.n	90011b10 <_ZN8touchgfx17CWRVectorRenderer17setLinearGradientEffffmPKfPKmffbS4_+0x22c>
90011c0c:	447ffffe 	.word	0x447ffffe
90011c10:	44800000 	.word	0x44800000
90011c14:	24021984 	.word	0x24021984

90011c18 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>:
90011c18:	b510      	push	{r4, lr}
90011c1a:	ed2d 8b02 	vpush	{d8}
90011c1e:	eef0 8a62 	vmov.f32	s17, s5
90011c22:	2100      	movs	r1, #0
90011c24:	4604      	mov	r4, r0
90011c26:	eeb0 8a42 	vmov.f32	s16, s4
90011c2a:	f016 fe99 	bl	90028960 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
90011c2e:	eef0 7a68 	vmov.f32	s15, s17
90011c32:	6823      	ldr	r3, [r4, #0]
90011c34:	4620      	mov	r0, r4
90011c36:	689b      	ldr	r3, [r3, #8]
90011c38:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011c3c:	ee17 2a90 	vmov	r2, s15
90011c40:	eef0 7a48 	vmov.f32	s15, s16
90011c44:	ecbd 8b02 	vpop	{d8}
90011c48:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011c4c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90011c50:	ee17 1a90 	vmov	r1, s15
90011c54:	4718      	bx	r3

90011c56 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>:
90011c56:	b510      	push	{r4, lr}
90011c58:	ed2d 8b02 	vpush	{d8}
90011c5c:	eef0 8a63 	vmov.f32	s17, s7
90011c60:	2100      	movs	r1, #0
90011c62:	4604      	mov	r4, r0
90011c64:	eeb0 8a43 	vmov.f32	s16, s6
90011c68:	f016 ff3c 	bl	90028ae4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
90011c6c:	eef0 7a68 	vmov.f32	s15, s17
90011c70:	6823      	ldr	r3, [r4, #0]
90011c72:	4620      	mov	r0, r4
90011c74:	689b      	ldr	r3, [r3, #8]
90011c76:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011c7a:	ee17 2a90 	vmov	r2, s15
90011c7e:	eef0 7a48 	vmov.f32	s15, s16
90011c82:	ecbd 8b02 	vpop	{d8}
90011c86:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011c8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90011c8e:	ee17 1a90 	vmov	r1, s15
90011c92:	4718      	bx	r3

90011c94 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>:
90011c94:	b513      	push	{r0, r1, r4, lr}
90011c96:	4604      	mov	r4, r0
90011c98:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90011c9a:	f006 f8be 	bl	90017e1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90011c9e:	eef0 7a60 	vmov.f32	s15, s1
90011ca2:	4620      	mov	r0, r4
90011ca4:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011ca8:	ee17 2a90 	vmov	r2, s15
90011cac:	eef0 7a40 	vmov.f32	s15, s0
90011cb0:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011cb4:	ee17 1a90 	vmov	r1, s15
90011cb8:	b002      	add	sp, #8
90011cba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90011cbe:	f016 bda9 	b.w	90028814 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>

90011cc2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>:
90011cc2:	b513      	push	{r0, r1, r4, lr}
90011cc4:	4604      	mov	r4, r0
90011cc6:	6f40      	ldr	r0, [r0, #116]	@ 0x74
90011cc8:	f006 f8a7 	bl	90017e1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90011ccc:	eef0 7a60 	vmov.f32	s15, s1
90011cd0:	4620      	mov	r0, r4
90011cd2:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011cd6:	ee17 2a90 	vmov	r2, s15
90011cda:	eef0 7a40 	vmov.f32	s15, s0
90011cde:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90011ce2:	ee17 1a90 	vmov	r1, s15
90011ce6:	b002      	add	sp, #8
90011ce8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90011cec:	f016 bddf 	b.w	900288ae <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>

90011cf0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>:
90011cf0:	b5f0      	push	{r4, r5, r6, r7, lr}
90011cf2:	2400      	movs	r4, #0
90011cf4:	9f07      	ldr	r7, [sp, #28]
90011cf6:	f04f 0e01 	mov.w	lr, #1
90011cfa:	4626      	mov	r6, r4
90011cfc:	e9dd 0c05 	ldrd	r0, ip, [sp, #20]
90011d00:	4463      	add	r3, ip
90011d02:	4563      	cmp	r3, ip
90011d04:	d02d      	beq.n	90011d62 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x72>
90011d06:	f813 5d01 	ldrb.w	r5, [r3, #-1]!
90011d0a:	2d06      	cmp	r5, #6
90011d0c:	d8f9      	bhi.n	90011d02 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90011d0e:	fa0e f505 	lsl.w	r5, lr, r5
90011d12:	f015 0f66 	tst.w	r5, #102	@ 0x66
90011d16:	d10d      	bne.n	90011d34 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x44>
90011d18:	f015 0f10 	tst.w	r5, #16
90011d1c:	d117      	bne.n	90011d4e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5e>
90011d1e:	072d      	lsls	r5, r5, #28
90011d20:	d5ef      	bpl.n	90011d02 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90011d22:	3801      	subs	r0, #1
90011d24:	b91e      	cbnz	r6, 90011d2e <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x3e>
90011d26:	eb07 0580 	add.w	r5, r7, r0, lsl #2
90011d2a:	682d      	ldr	r5, [r5, #0]
90011d2c:	600d      	str	r5, [r1, #0]
90011d2e:	b96c      	cbnz	r4, 90011d4c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90011d30:	2601      	movs	r6, #1
90011d32:	e7e6      	b.n	90011d02 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90011d34:	b926      	cbnz	r6, 90011d40 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x50>
90011d36:	eb07 0380 	add.w	r3, r7, r0, lsl #2
90011d3a:	f853 3c08 	ldr.w	r3, [r3, #-8]
90011d3e:	600b      	str	r3, [r1, #0]
90011d40:	b924      	cbnz	r4, 90011d4c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90011d42:	eb07 0080 	add.w	r0, r7, r0, lsl #2
90011d46:	f850 3c04 	ldr.w	r3, [r0, #-4]
90011d4a:	6013      	str	r3, [r2, #0]
90011d4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
90011d4e:	3801      	subs	r0, #1
90011d50:	b91c      	cbnz	r4, 90011d5a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x6a>
90011d52:	eb07 0480 	add.w	r4, r7, r0, lsl #2
90011d56:	6824      	ldr	r4, [r4, #0]
90011d58:	6014      	str	r4, [r2, #0]
90011d5a:	2e00      	cmp	r6, #0
90011d5c:	d1f6      	bne.n	90011d4c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90011d5e:	2401      	movs	r4, #1
90011d60:	e7cf      	b.n	90011d02 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x12>
90011d62:	b90e      	cbnz	r6, 90011d68 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x78>
90011d64:	2300      	movs	r3, #0
90011d66:	600b      	str	r3, [r1, #0]
90011d68:	2c00      	cmp	r4, #0
90011d6a:	d1ef      	bne.n	90011d4c <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5c>
90011d6c:	2300      	movs	r3, #0
90011d6e:	e7ec      	b.n	90011d4a <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf+0x5a>

90011d70 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>:
90011d70:	b538      	push	{r3, r4, r5, lr}
90011d72:	ed2d 8b0a 	vpush	{d8-d12}
90011d76:	eef0 ba40 	vmov.f32	s23, s0
90011d7a:	4604      	mov	r4, r0
90011d7c:	eeb0 ca60 	vmov.f32	s24, s1
90011d80:	460d      	mov	r5, r1
90011d82:	eef0 aa41 	vmov.f32	s21, s2
90011d86:	eeb0 ba61 	vmov.f32	s22, s3
90011d8a:	eeb0 9a42 	vmov.f32	s18, s4
90011d8e:	eef0 9a62 	vmov.f32	s19, s5
90011d92:	eeb6 aa00 	vmov.f32	s20, #96	@ 0x3f000000  0.5
90011d96:	ee7b 8a29 	vadd.f32	s17, s22, s19
90011d9a:	ee3a 8a89 	vadd.f32	s16, s21, s18
90011d9e:	ee68 8a8a 	vmul.f32	s17, s17, s20
90011da2:	ee28 8a0a 	vmul.f32	s16, s16, s20
90011da6:	ee3c 0a68 	vsub.f32	s0, s24, s17
90011daa:	ee7b 7ac8 	vsub.f32	s15, s23, s16
90011dae:	ee20 0a00 	vmul.f32	s0, s0, s0
90011db2:	eea7 0aa7 	vfma.f32	s0, s15, s15
90011db6:	f017 f88b 	bl	90028ed0 <sqrtf>
90011dba:	eeb5 0a40 	vcmp.f32	s0, #0.0
90011dbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011dc2:	d12e      	bne.n	90011e22 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xb2>
90011dc4:	ee79 7a6a 	vsub.f32	s15, s18, s21
90011dc8:	ee39 7acb 	vsub.f32	s14, s19, s22
90011dcc:	eeb0 8a6a 	vmov.f32	s16, s21
90011dd0:	eef0 8a4b 	vmov.f32	s17, s22
90011dd4:	eea7 8a8a 	vfma.f32	s16, s15, s20
90011dd8:	eee7 8a0a 	vfma.f32	s17, s14, s20
90011ddc:	eea7 8a0a 	vfma.f32	s16, s14, s20
90011de0:	eee7 8aca 	vfms.f32	s17, s15, s20
90011de4:	2d02      	cmp	r5, #2
90011de6:	dc2f      	bgt.n	90011e48 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0xd8>
90011de8:	3501      	adds	r5, #1
90011dea:	eef0 1a4b 	vmov.f32	s3, s22
90011dee:	eeb0 1a6a 	vmov.f32	s2, s21
90011df2:	4620      	mov	r0, r4
90011df4:	4629      	mov	r1, r5
90011df6:	eef0 2a68 	vmov.f32	s5, s17
90011dfa:	eeb0 2a48 	vmov.f32	s4, s16
90011dfe:	eef0 0a4c 	vmov.f32	s1, s24
90011e02:	eeb0 0a6b 	vmov.f32	s0, s23
90011e06:	f7ff ffb3 	bl	90011d70 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
90011e0a:	eef0 0a68 	vmov.f32	s1, s17
90011e0e:	eeb0 0a48 	vmov.f32	s0, s16
90011e12:	4620      	mov	r0, r4
90011e14:	f7ff ff55 	bl	90011cc2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011e18:	eeb0 ba68 	vmov.f32	s22, s17
90011e1c:	eef0 aa48 	vmov.f32	s21, s16
90011e20:	e7b9      	b.n	90011d96 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x26>
90011e22:	ee38 8a6b 	vsub.f32	s16, s16, s23
90011e26:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
90011e2a:	ee78 8acc 	vsub.f32	s17, s17, s24
90011e2e:	ee28 7a27 	vmul.f32	s14, s16, s15
90011e32:	ee68 7aa7 	vmul.f32	s15, s17, s15
90011e36:	ee87 8a00 	vdiv.f32	s16, s14, s0
90011e3a:	eec7 8a80 	vdiv.f32	s17, s15, s0
90011e3e:	ee3b 8a88 	vadd.f32	s16, s23, s16
90011e42:	ee7c 8a28 	vadd.f32	s17, s24, s17
90011e46:	e7cd      	b.n	90011de4 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi+0x74>
90011e48:	eef0 0a68 	vmov.f32	s1, s17
90011e4c:	4620      	mov	r0, r4
90011e4e:	eeb0 0a48 	vmov.f32	s0, s16
90011e52:	f7ff ff36 	bl	90011cc2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011e56:	ecbd 8b0a 	vpop	{d8-d12}
90011e5a:	bd38      	pop	{r3, r4, r5, pc}

90011e5c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>:
90011e5c:	b510      	push	{r4, lr}
90011e5e:	ed2d 8b0a 	vpush	{d8-d12}
90011e62:	f890 3084 	ldrb.w	r3, [r0, #132]	@ 0x84
90011e66:	4604      	mov	r4, r0
90011e68:	eeb0 ca40 	vmov.f32	s24, s0
90011e6c:	2b02      	cmp	r3, #2
90011e6e:	eeb0 9a60 	vmov.f32	s18, s1
90011e72:	eef0 9a41 	vmov.f32	s19, s2
90011e76:	eef0 8a61 	vmov.f32	s17, s3
90011e7a:	eeb0 ba42 	vmov.f32	s22, s4
90011e7e:	eef0 ba62 	vmov.f32	s23, s5
90011e82:	eeb0 aa43 	vmov.f32	s20, s6
90011e86:	eef0 aa63 	vmov.f32	s21, s7
90011e8a:	eeb0 8a44 	vmov.f32	s16, s8
90011e8e:	eef0 ca64 	vmov.f32	s25, s9
90011e92:	d12c      	bne.n	90011eee <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x92>
90011e94:	eef0 0a62 	vmov.f32	s1, s5
90011e98:	eeb0 0a42 	vmov.f32	s0, s4
90011e9c:	f7ff ff11 	bl	90011cc2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011ea0:	ee79 9acb 	vsub.f32	s19, s19, s22
90011ea4:	ee7a caec 	vsub.f32	s25, s21, s25
90011ea8:	ee78 8aeb 	vsub.f32	s17, s17, s23
90011eac:	ee3a 8a48 	vsub.f32	s16, s20, s16
90011eb0:	ee69 9aac 	vmul.f32	s19, s19, s25
90011eb4:	ee28 8a88 	vmul.f32	s16, s17, s16
90011eb8:	eef4 9ac8 	vcmpe.f32	s19, s16
90011ebc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011ec0:	db0f      	blt.n	90011ee2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>
90011ec2:	2101      	movs	r1, #1
90011ec4:	eef0 2a6a 	vmov.f32	s5, s21
90011ec8:	eeb0 2a4a 	vmov.f32	s4, s20
90011ecc:	4620      	mov	r0, r4
90011ece:	eef0 1a6b 	vmov.f32	s3, s23
90011ed2:	eeb0 1a4b 	vmov.f32	s2, s22
90011ed6:	eef0 0a49 	vmov.f32	s1, s18
90011eda:	eeb0 0a4c 	vmov.f32	s0, s24
90011ede:	f7ff ff47 	bl	90011d70 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawLineJoinRoundEffffffi>
90011ee2:	eef0 0a6a 	vmov.f32	s1, s21
90011ee6:	4620      	mov	r0, r4
90011ee8:	eeb0 0a4a 	vmov.f32	s0, s20
90011eec:	e035      	b.n	90011f5a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0xfe>
90011eee:	2b01      	cmp	r3, #1
90011ef0:	d138      	bne.n	90011f64 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90011ef2:	ee31 4ae2 	vsub.f32	s8, s3, s5
90011ef6:	ee33 6a48 	vsub.f32	s12, s6, s16
90011efa:	ee71 7a42 	vsub.f32	s15, s2, s4
90011efe:	ee73 6ae4 	vsub.f32	s13, s7, s9
90011f02:	ee26 7a44 	vnmul.f32	s14, s12, s8
90011f06:	eea7 7aa6 	vfma.f32	s14, s15, s13
90011f0a:	eeb5 7a40 	vcmp.f32	s14, #0.0
90011f0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011f12:	d027      	beq.n	90011f64 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90011f14:	ee28 8a63 	vnmul.f32	s16, s16, s7
90011f18:	ee61 8ac2 	vnmul.f32	s17, s3, s4
90011f1c:	eea4 8a83 	vfma.f32	s16, s9, s6
90011f20:	eee1 8a22 	vfma.f32	s17, s2, s5
90011f24:	ee68 7a67 	vnmul.f32	s15, s16, s15
90011f28:	ee28 8a44 	vnmul.f32	s16, s16, s8
90011f2c:	eee6 7a28 	vfma.f32	s15, s12, s17
90011f30:	eea6 8aa8 	vfma.f32	s16, s13, s17
90011f34:	ee87 0a87 	vdiv.f32	s0, s15, s14
90011f38:	edd0 7a20 	vldr	s15, [r0, #128]	@ 0x80
90011f3c:	eec8 0a07 	vdiv.f32	s1, s16, s14
90011f40:	ee3c ca40 	vsub.f32	s24, s24, s0
90011f44:	ee39 9a60 	vsub.f32	s18, s18, s1
90011f48:	ee29 9a09 	vmul.f32	s18, s18, s18
90011f4c:	eeac 9a0c 	vfma.f32	s18, s24, s24
90011f50:	eef4 7ac9 	vcmpe.f32	s15, s18
90011f54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90011f58:	db04      	blt.n	90011f64 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x108>
90011f5a:	f7ff feb2 	bl	90011cc2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011f5e:	ecbd 8b0a 	vpop	{d8-d12}
90011f62:	bd10      	pop	{r4, pc}
90011f64:	eef0 0a6b 	vmov.f32	s1, s23
90011f68:	4620      	mov	r0, r4
90011f6a:	eeb0 0a4b 	vmov.f32	s0, s22
90011f6e:	f7ff fea8 	bl	90011cc2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011f72:	e7b6      	b.n	90011ee2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff+0x86>

90011f74 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>:
90011f74:	b510      	push	{r4, lr}
90011f76:	ed2d 8b0c 	vpush	{d8-d13}
90011f7a:	f890 3085 	ldrb.w	r3, [r0, #133]	@ 0x85
90011f7e:	4604      	mov	r4, r0
90011f80:	eeb0 9a40 	vmov.f32	s18, s0
90011f84:	eef0 9a60 	vmov.f32	s19, s1
90011f88:	eef0 aa41 	vmov.f32	s21, s2
90011f8c:	eeb0 ba61 	vmov.f32	s22, s3
90011f90:	b933      	cbnz	r3, 90011fa0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x2c>
90011f92:	f7ff fe96 	bl	90011cc2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011f96:	eef0 0a4b 	vmov.f32	s1, s22
90011f9a:	eeb0 0a6a 	vmov.f32	s0, s21
90011f9e:	e015      	b.n	90011fcc <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x58>
90011fa0:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
90011fa4:	2b02      	cmp	r3, #2
90011fa6:	ee71 8a40 	vsub.f32	s17, s2, s0
90011faa:	ee31 8ae0 	vsub.f32	s16, s3, s1
90011fae:	ee68 8aa7 	vmul.f32	s17, s17, s15
90011fb2:	ee28 8a27 	vmul.f32	s16, s16, s15
90011fb6:	d10f      	bne.n	90011fd8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x64>
90011fb8:	ee70 0ae8 	vsub.f32	s1, s1, s17
90011fbc:	ee30 0a08 	vadd.f32	s0, s0, s16
90011fc0:	f7ff fe7f 	bl	90011cc2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011fc4:	ee7b 0a68 	vsub.f32	s1, s22, s17
90011fc8:	ee3a 0a88 	vadd.f32	s0, s21, s16
90011fcc:	4620      	mov	r0, r4
90011fce:	f7ff fe78 	bl	90011cc2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011fd2:	ecbd 8b0c 	vpop	{d8-d13}
90011fd6:	bd10      	pop	{r4, pc}
90011fd8:	f7ff fe73 	bl	90011cc2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90011fdc:	eef0 0a69 	vmov.f32	s1, s19
90011fe0:	eeb0 0a49 	vmov.f32	s0, s18
90011fe4:	eddf 7a4b 	vldr	s15, [pc, #300]	@ 90012114 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a0>
90011fe8:	eeb1 aa68 	vneg.f32	s20, s17
90011fec:	eddf ba4a 	vldr	s23, [pc, #296]	@ 90012118 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a4>
90011ff0:	eee8 0a27 	vfma.f32	s1, s16, s15
90011ff4:	4620      	mov	r0, r4
90011ff6:	eea8 0aa7 	vfma.f32	s0, s17, s15
90011ffa:	ed9f ca48 	vldr	s24, [pc, #288]	@ 9001211c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1a8>
90011ffe:	eddf ca48 	vldr	s25, [pc, #288]	@ 90012120 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1ac>
90012002:	ed9f da48 	vldr	s26, [pc, #288]	@ 90012124 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b0>
90012006:	eeea 0a2b 	vfma.f32	s1, s20, s23
9001200a:	eea8 0a2b 	vfma.f32	s0, s16, s23
9001200e:	f7ff fe58 	bl	90011cc2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012012:	eef0 0a69 	vmov.f32	s1, s19
90012016:	eeb0 0a49 	vmov.f32	s0, s18
9001201a:	eddf 7a43 	vldr	s15, [pc, #268]	@ 90012128 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b4>
9001201e:	4620      	mov	r0, r4
90012020:	eee8 0a27 	vfma.f32	s1, s16, s15
90012024:	eea8 0aa7 	vfma.f32	s0, s17, s15
90012028:	eeea 0a0c 	vfma.f32	s1, s20, s24
9001202c:	eea8 0a0c 	vfma.f32	s0, s16, s24
90012030:	f7ff fe47 	bl	90011cc2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012034:	eef0 0a69 	vmov.f32	s1, s19
90012038:	eeb0 0a49 	vmov.f32	s0, s18
9001203c:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 9001212c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1b8>
90012040:	4620      	mov	r0, r4
90012042:	eee8 0a27 	vfma.f32	s1, s16, s15
90012046:	eea8 0aa7 	vfma.f32	s0, s17, s15
9001204a:	eeea 0a2c 	vfma.f32	s1, s20, s25
9001204e:	eea8 0a2c 	vfma.f32	s0, s16, s25
90012052:	f7ff fe36 	bl	90011cc2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012056:	eef0 0a69 	vmov.f32	s1, s19
9001205a:	eeb0 0a49 	vmov.f32	s0, s18
9001205e:	eddf 7a34 	vldr	s15, [pc, #208]	@ 90012130 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1bc>
90012062:	4620      	mov	r0, r4
90012064:	eee8 0a27 	vfma.f32	s1, s16, s15
90012068:	eea8 0aa7 	vfma.f32	s0, s17, s15
9001206c:	eeea 0a0d 	vfma.f32	s1, s20, s26
90012070:	eea8 0a0d 	vfma.f32	s0, s16, s26
90012074:	f7ff fe25 	bl	90011cc2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
90012078:	ee79 0a88 	vadd.f32	s1, s19, s16
9001207c:	ee39 0a28 	vadd.f32	s0, s18, s17
90012080:	4620      	mov	r0, r4
90012082:	ee70 0ae8 	vsub.f32	s1, s1, s17
90012086:	ee30 0a08 	vadd.f32	s0, s0, s16
9001208a:	f7ff fe1a 	bl	90011cc2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
9001208e:	eef0 0a69 	vmov.f32	s1, s19
90012092:	eeb0 0a49 	vmov.f32	s0, s18
90012096:	eddf 7a27 	vldr	s15, [pc, #156]	@ 90012134 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c0>
9001209a:	4620      	mov	r0, r4
9001209c:	eee8 0a27 	vfma.f32	s1, s16, s15
900120a0:	eea8 0aa7 	vfma.f32	s0, s17, s15
900120a4:	eeea 0a0d 	vfma.f32	s1, s20, s26
900120a8:	eea8 0a0d 	vfma.f32	s0, s16, s26
900120ac:	f7ff fe09 	bl	90011cc2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900120b0:	eef0 0a69 	vmov.f32	s1, s19
900120b4:	eeb0 0a49 	vmov.f32	s0, s18
900120b8:	eddf 7a1f 	vldr	s15, [pc, #124]	@ 90012138 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c4>
900120bc:	4620      	mov	r0, r4
900120be:	eee8 0a27 	vfma.f32	s1, s16, s15
900120c2:	eea8 0aa7 	vfma.f32	s0, s17, s15
900120c6:	eeea 0a2c 	vfma.f32	s1, s20, s25
900120ca:	eea8 0a2c 	vfma.f32	s0, s16, s25
900120ce:	f7ff fdf8 	bl	90011cc2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900120d2:	eef0 0a69 	vmov.f32	s1, s19
900120d6:	eeb0 0a49 	vmov.f32	s0, s18
900120da:	eddf 7a18 	vldr	s15, [pc, #96]	@ 9001213c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1c8>
900120de:	4620      	mov	r0, r4
900120e0:	eee8 0a27 	vfma.f32	s1, s16, s15
900120e4:	eea8 0aa7 	vfma.f32	s0, s17, s15
900120e8:	eeea 0a0c 	vfma.f32	s1, s20, s24
900120ec:	eea8 0a0c 	vfma.f32	s0, s16, s24
900120f0:	f7ff fde7 	bl	90011cc2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19lineToWithTransformEff>
900120f4:	eef0 0a69 	vmov.f32	s1, s19
900120f8:	eeb0 0a49 	vmov.f32	s0, s18
900120fc:	eddf 7a10 	vldr	s15, [pc, #64]	@ 90012140 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1cc>
90012100:	4620      	mov	r0, r4
90012102:	eee8 0a27 	vfma.f32	s1, s16, s15
90012106:	eea8 0aa7 	vfma.f32	s0, s17, s15
9001210a:	eeea 0a2b 	vfma.f32	s1, s20, s23
9001210e:	eea8 0a2b 	vfma.f32	s0, s16, s23
90012112:	e73e      	b.n	90011f92 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff+0x1e>
90012114:	3d23d70a 	.word	0x3d23d70a
90012118:	3e8f5c29 	.word	0x3e8f5c29
9001211c:	3f19999a 	.word	0x3f19999a
90012120:	3f4ccccd 	.word	0x3f4ccccd
90012124:	3f75c28f 	.word	0x3f75c28f
90012128:	3e4ccccd 	.word	0x3e4ccccd
9001212c:	3ecccccd 	.word	0x3ecccccd
90012130:	3f3851ec 	.word	0x3f3851ec
90012134:	3fa3d70a 	.word	0x3fa3d70a
90012138:	3fcccccd 	.word	0x3fcccccd
9001213c:	3fe66666 	.word	0x3fe66666
90012140:	3ffae148 	.word	0x3ffae148

90012144 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>:
90012144:	b570      	push	{r4, r5, r6, lr}
90012146:	ed2d 8b06 	vpush	{d8-d10}
9001214a:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
9001214e:	eef0 aa40 	vmov.f32	s21, s0
90012152:	ed90 9a22 	vldr	s18, [r0, #136]	@ 0x88
90012156:	4604      	mov	r4, r0
90012158:	ee30 8ac8 	vsub.f32	s16, s1, s16
9001215c:	ee30 9a49 	vsub.f32	s18, s0, s18
90012160:	eeb0 aa60 	vmov.f32	s20, s1
90012164:	ee28 0a08 	vmul.f32	s0, s16, s16
90012168:	eea9 0a09 	vfma.f32	s0, s18, s18
9001216c:	f016 feb0 	bl	90028ed0 <sqrtf>
90012170:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90012174:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012178:	dd36      	ble.n	900121e8 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xa4>
9001217a:	edd4 7a1f 	vldr	s15, [r4, #124]	@ 0x7c
9001217e:	2600      	movs	r6, #0
90012180:	edd4 0a23 	vldr	s1, [r4, #140]	@ 0x8c
90012184:	eec0 6a27 	vdiv.f32	s13, s0, s15
90012188:	f894 5078 	ldrb.w	r5, [r4, #120]	@ 0x78
9001218c:	ed94 0a22 	vldr	s0, [r4, #136]	@ 0x88
90012190:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
90012194:	eec8 8a26 	vdiv.f32	s17, s16, s13
90012198:	ee89 8a26 	vdiv.f32	s16, s18, s13
9001219c:	ee70 9a28 	vadd.f32	s19, s0, s17
900121a0:	ee78 8aaa 	vadd.f32	s17, s17, s21
900121a4:	ee30 9ac8 	vsub.f32	s18, s1, s16
900121a8:	ee3a 8a48 	vsub.f32	s16, s20, s16
900121ac:	b1fd      	cbz	r5, 900121ee <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xaa>
900121ae:	edc4 9a24 	vstr	s19, [r4, #144]	@ 0x90
900121b2:	eef0 0a49 	vmov.f32	s1, s18
900121b6:	ed84 9a25 	vstr	s18, [r4, #148]	@ 0x94
900121ba:	eeb0 0a69 	vmov.f32	s0, s19
900121be:	edc4 8a26 	vstr	s17, [r4, #152]	@ 0x98
900121c2:	4620      	mov	r0, r4
900121c4:	ed84 8a27 	vstr	s16, [r4, #156]	@ 0x9c
900121c8:	f7ff fd64 	bl	90011c94 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
900121cc:	f884 6078 	strb.w	r6, [r4, #120]	@ 0x78
900121d0:	edc4 9a28 	vstr	s19, [r4, #160]	@ 0xa0
900121d4:	ed84 9a29 	vstr	s18, [r4, #164]	@ 0xa4
900121d8:	edc4 8a2a 	vstr	s17, [r4, #168]	@ 0xa8
900121dc:	ed84 8a2b 	vstr	s16, [r4, #172]	@ 0xac
900121e0:	edc4 aa22 	vstr	s21, [r4, #136]	@ 0x88
900121e4:	ed84 aa23 	vstr	s20, [r4, #140]	@ 0x8c
900121e8:	ecbd 8b06 	vpop	{d8-d10}
900121ec:	bd70      	pop	{r4, r5, r6, pc}
900121ee:	f894 307a 	ldrb.w	r3, [r4, #122]	@ 0x7a
900121f2:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
900121f6:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
900121fa:	b16b      	cbz	r3, 90012218 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0xd4>
900121fc:	eef0 1a49 	vmov.f32	s3, s18
90012200:	4620      	mov	r0, r4
90012202:	eeb0 1a69 	vmov.f32	s2, s19
90012206:	eef0 0a62 	vmov.f32	s1, s5
9001220a:	eeb0 0a42 	vmov.f32	s0, s4
9001220e:	f7ff feb1 	bl	90011f74 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
90012212:	f884 507a 	strb.w	r5, [r4, #122]	@ 0x7a
90012216:	e7db      	b.n	900121d0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>
90012218:	eef0 4a48 	vmov.f32	s9, s16
9001221c:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
90012220:	eeb0 4a68 	vmov.f32	s8, s17
90012224:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
90012228:	eef0 3a49 	vmov.f32	s7, s18
9001222c:	4620      	mov	r0, r4
9001222e:	eeb0 3a69 	vmov.f32	s6, s19
90012232:	f7ff fe13 	bl	90011e5c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
90012236:	e7cb      	b.n	900121d0 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff+0x8c>

90012238 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_>:
90012238:	ee07 2a90 	vmov	s15, r2
9001223c:	ee07 1a10 	vmov	s14, r1
90012240:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90012244:	eddf 7a04 	vldr	s15, [pc, #16]	@ 90012258 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas6lineToENS_7CWRUtil2Q5ES3_+0x20>
90012248:	eeb8 0ac7 	vcvt.f32.s32	s0, s14
9001224c:	ee60 0aa7 	vmul.f32	s1, s1, s15
90012250:	ee20 0a27 	vmul.f32	s0, s0, s15
90012254:	f7ff bf76 	b.w	90012144 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90012258:	3d000000 	.word	0x3d000000

9001225c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>:
9001225c:	b538      	push	{r3, r4, r5, lr}
9001225e:	ed2d 8b02 	vpush	{d8}
90012262:	f890 5079 	ldrb.w	r5, [r0, #121]	@ 0x79
90012266:	4604      	mov	r4, r0
90012268:	b31d      	cbz	r5, 900122b2 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv+0x56>
9001226a:	edd0 7a1f 	vldr	s15, [r0, #124]	@ 0x7c
9001226e:	ed90 8a23 	vldr	s16, [r0, #140]	@ 0x8c
90012272:	ed90 0a22 	vldr	s0, [r0, #136]	@ 0x88
90012276:	ee78 8a67 	vsub.f32	s17, s16, s15
9001227a:	ee38 8a27 	vadd.f32	s16, s16, s15
9001227e:	eef0 0a68 	vmov.f32	s1, s17
90012282:	f7ff fd07 	bl	90011c94 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas19moveToWithTransformEff>
90012286:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
9001228a:	eef0 1a48 	vmov.f32	s3, s16
9001228e:	4620      	mov	r0, r4
90012290:	eeb0 0a41 	vmov.f32	s0, s2
90012294:	eef0 0a68 	vmov.f32	s1, s17
90012298:	f7ff fe6c 	bl	90011f74 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
9001229c:	ed94 1a22 	vldr	s2, [r4, #136]	@ 0x88
900122a0:	eef0 1a68 	vmov.f32	s3, s17
900122a4:	4620      	mov	r0, r4
900122a6:	eef0 0a48 	vmov.f32	s1, s16
900122aa:	eeb0 0a41 	vmov.f32	s0, s2
900122ae:	f7ff fe61 	bl	90011f74 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
900122b2:	4628      	mov	r0, r5
900122b4:	ecbd 8b02 	vpop	{d8}
900122b8:	bd38      	pop	{r3, r4, r5, pc}

900122ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>:
900122ba:	b510      	push	{r4, lr}
900122bc:	ed2d 8b02 	vpush	{d8}
900122c0:	4604      	mov	r4, r0
900122c2:	eeb0 8a40 	vmov.f32	s16, s0
900122c6:	eef0 8a60 	vmov.f32	s17, s1
900122ca:	f7ff ffc7 	bl	9001225c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
900122ce:	b9d0      	cbnz	r0, 90012306 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x4c>
900122d0:	4620      	mov	r0, r4
900122d2:	edd4 4a27 	vldr	s9, [r4, #156]	@ 0x9c
900122d6:	ed94 4a26 	vldr	s8, [r4, #152]	@ 0x98
900122da:	eef0 0a68 	vmov.f32	s1, s17
900122de:	edd4 3a25 	vldr	s7, [r4, #148]	@ 0x94
900122e2:	eeb0 0a48 	vmov.f32	s0, s16
900122e6:	ed94 3a24 	vldr	s6, [r4, #144]	@ 0x90
900122ea:	edd4 2a2b 	vldr	s5, [r4, #172]	@ 0xac
900122ee:	ed94 2a2a 	vldr	s4, [r4, #168]	@ 0xa8
900122f2:	edd4 1a29 	vldr	s3, [r4, #164]	@ 0xa4
900122f6:	ed94 1a28 	vldr	s2, [r4, #160]	@ 0xa0
900122fa:	f7ff fdaf 	bl	90011e5c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas18strokeDrawLineJoinEffffffffff>
900122fe:	2001      	movs	r0, #1
90012300:	ecbd 8b02 	vpop	{d8}
90012304:	bd10      	pop	{r4, pc}
90012306:	2000      	movs	r0, #0
90012308:	e7fa      	b.n	90012300 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff+0x46>

9001230a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>:
9001230a:	edd0 1a25 	vldr	s3, [r0, #148]	@ 0x94
9001230e:	ed90 1a24 	vldr	s2, [r0, #144]	@ 0x90
90012312:	edd0 0a2b 	vldr	s1, [r0, #172]	@ 0xac
90012316:	ed90 0a2a 	vldr	s0, [r0, #168]	@ 0xa8
9001231a:	f7ff be2b 	b.w	90011f74 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas17strokeDrawLineCapEffff>
	...

90012320 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>:
90012320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012324:	b089      	sub	sp, #36	@ 0x24
90012326:	461c      	mov	r4, r3
90012328:	4682      	mov	sl, r0
9001232a:	4615      	mov	r5, r2
9001232c:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
90012330:	f10d 0820 	add.w	r8, sp, #32
90012334:	9e15      	ldr	r6, [sp, #84]	@ 0x54
90012336:	9304      	str	r3, [sp, #16]
90012338:	2300      	movs	r3, #0
9001233a:	9105      	str	r1, [sp, #20]
9001233c:	9306      	str	r3, [sp, #24]
9001233e:	f848 3d04 	str.w	r3, [r8, #-4]!
90012342:	9b04      	ldr	r3, [sp, #16]
90012344:	e9dd 9712 	ldrd	r9, r7, [sp, #72]	@ 0x48
90012348:	f886 307a 	strb.w	r3, [r6, #122]	@ 0x7a
9001234c:	9b05      	ldr	r3, [sp, #20]
9001234e:	429d      	cmp	r5, r3
90012350:	d96d      	bls.n	9001242e <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x10e>
90012352:	3d01      	subs	r5, #1
90012354:	f819 3005 	ldrb.w	r3, [r9, r5]
90012358:	2b06      	cmp	r3, #6
9001235a:	d8f7      	bhi.n	9001234c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
9001235c:	a201      	add	r2, pc, #4	@ (adr r2, 90012364 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x44>)
9001235e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
90012362:	bf00      	nop
90012364:	90012383 	.word	0x90012383
90012368:	9001234d 	.word	0x9001234d
9001236c:	90012381 	.word	0x90012381
90012370:	900123a5 	.word	0x900123a5
90012374:	900123a5 	.word	0x900123a5
90012378:	900123a9 	.word	0x900123a9
9001237c:	900123e9 	.word	0x900123e9
90012380:	3c02      	subs	r4, #2
90012382:	4650      	mov	r0, sl
90012384:	9400      	str	r4, [sp, #0]
90012386:	462b      	mov	r3, r5
90012388:	4642      	mov	r2, r8
9001238a:	a906      	add	r1, sp, #24
9001238c:	e9cd 9701 	strd	r9, r7, [sp, #4]
90012390:	f7ff fcae 	bl	90011cf0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90012394:	eddd 0a07 	vldr	s1, [sp, #28]
90012398:	ed9d 0a06 	vldr	s0, [sp, #24]
9001239c:	4630      	mov	r0, r6
9001239e:	f7ff fed1 	bl	90012144 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
900123a2:	e7d3      	b.n	9001234c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
900123a4:	3c01      	subs	r4, #1
900123a6:	e7ec      	b.n	90012382 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x62>
900123a8:	f1a4 0b04 	sub.w	fp, r4, #4
900123ac:	3c02      	subs	r4, #2
900123ae:	4650      	mov	r0, sl
900123b0:	462b      	mov	r3, r5
900123b2:	eb07 0484 	add.w	r4, r7, r4, lsl #2
900123b6:	f8cd b000 	str.w	fp, [sp]
900123ba:	4642      	mov	r2, r8
900123bc:	a906      	add	r1, sp, #24
900123be:	e9cd 9701 	strd	r9, r7, [sp, #4]
900123c2:	f7ff fc95 	bl	90011cf0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
900123c6:	eddd 2a07 	vldr	s5, [sp, #28]
900123ca:	ed9d 2a06 	vldr	s4, [sp, #24]
900123ce:	4630      	mov	r0, r6
900123d0:	ed54 1a01 	vldr	s3, [r4, #-4]
900123d4:	ed14 1a02 	vldr	s2, [r4, #-8]
900123d8:	edd4 0a01 	vldr	s1, [r4, #4]
900123dc:	ed94 0a00 	vldr	s0, [r4]
900123e0:	f7ff fc1a 	bl	90011c18 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
900123e4:	465c      	mov	r4, fp
900123e6:	e7b1      	b.n	9001234c <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x2c>
900123e8:	f1a4 0b06 	sub.w	fp, r4, #6
900123ec:	3c02      	subs	r4, #2
900123ee:	4650      	mov	r0, sl
900123f0:	462b      	mov	r3, r5
900123f2:	eb07 0484 	add.w	r4, r7, r4, lsl #2
900123f6:	f8cd b000 	str.w	fp, [sp]
900123fa:	4642      	mov	r2, r8
900123fc:	a906      	add	r1, sp, #24
900123fe:	e9cd 9701 	strd	r9, r7, [sp, #4]
90012402:	f7ff fc75 	bl	90011cf0 <_ZNK8touchgfx17CWRVectorRenderer22getPreviousDestinationERfS1_mmPKhPKf>
90012406:	eddd 3a07 	vldr	s7, [sp, #28]
9001240a:	ed9d 3a06 	vldr	s6, [sp, #24]
9001240e:	4630      	mov	r0, r6
90012410:	ed54 2a03 	vldr	s5, [r4, #-12]
90012414:	ed14 2a04 	vldr	s4, [r4, #-16]
90012418:	ed54 1a01 	vldr	s3, [r4, #-4]
9001241c:	ed14 1a02 	vldr	s2, [r4, #-8]
90012420:	edd4 0a01 	vldr	s1, [r4, #4]
90012424:	ed94 0a00 	vldr	s0, [r4]
90012428:	f7ff fc15 	bl	90011c56 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
9001242c:	e7da      	b.n	900123e4 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0xc4>
9001242e:	9b04      	ldr	r3, [sp, #16]
90012430:	b113      	cbz	r3, 90012438 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE+0x118>
90012432:	4630      	mov	r0, r6
90012434:	f7ff ff69 	bl	9001230a <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas16drawFinalLineCapEv>
90012438:	b009      	add	sp, #36	@ 0x24
9001243a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001243e:	bf00      	nop

90012440 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>:
90012440:	eef0 7a60 	vmov.f32	s15, s1
90012444:	6803      	ldr	r3, [r0, #0]
90012446:	689b      	ldr	r3, [r3, #8]
90012448:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
9001244c:	ee17 2a90 	vmov	r2, s15
90012450:	eef0 7a40 	vmov.f32	s15, s0
90012454:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
90012458:	ee17 1a90 	vmov	r1, s15
9001245c:	4718      	bx	r3
	...

90012460 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>:
90012460:	4b04      	ldr	r3, [pc, #16]	@ (90012474 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev+0x14>)
90012462:	b510      	push	{r4, lr}
90012464:	4604      	mov	r4, r0
90012466:	f840 3b14 	str.w	r3, [r0], #20
9001246a:	f001 fb29 	bl	90013ac0 <_ZN8touchgfx7OutlineD1Ev>
9001246e:	4620      	mov	r0, r4
90012470:	bd10      	pop	{r4, pc}
90012472:	bf00      	nop
90012474:	9002d9c4 	.word	0x9002d9c4

90012478 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>:
90012478:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001247c:	ed2d 8b04 	vpush	{d8-d9}
90012480:	edd0 7a0c 	vldr	s15, [r0, #48]	@ 0x30
90012484:	b0b5      	sub	sp, #212	@ 0xd4
90012486:	4605      	mov	r5, r0
90012488:	468b      	mov	fp, r1
9001248a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
9001248e:	9206      	str	r2, [sp, #24]
90012490:	461e      	mov	r6, r3
90012492:	2400      	movs	r4, #0
90012494:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90012498:	f240 814f 	bls.w	9001273a <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c2>
9001249c:	23ff      	movs	r3, #255	@ 0xff
9001249e:	1d02      	adds	r2, r0, #4
900124a0:	ed9f 9aa7 	vldr	s18, [pc, #668]	@ 90012740 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2c8>
900124a4:	f04f 0800 	mov.w	r8, #0
900124a8:	9300      	str	r3, [sp, #0]
900124aa:	af08      	add	r7, sp, #32
900124ac:	6981      	ldr	r1, [r0, #24]
900124ae:	a808      	add	r0, sp, #32
900124b0:	9b43      	ldr	r3, [sp, #268]	@ 0x10c
900124b2:	eef0 9a49 	vmov.f32	s19, s18
900124b6:	f016 f861 	bl	9002857c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
900124ba:	edd5 7a0c 	vldr	s15, [r5, #48]	@ 0x30
900124be:	4ba1      	ldr	r3, [pc, #644]	@ (90012744 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2cc>)
900124c0:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
900124c4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900124c8:	2201      	movs	r2, #1
900124ca:	9308      	str	r3, [sp, #32]
900124cc:	f105 0334 	add.w	r3, r5, #52	@ 0x34
900124d0:	edd5 6a08 	vldr	s13, [r5, #32]
900124d4:	eeb0 8a49 	vmov.f32	s16, s18
900124d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900124dc:	9325      	str	r3, [sp, #148]	@ 0x94
900124de:	f04f 0300 	mov.w	r3, #0
900124e2:	f88d 2099 	strb.w	r2, [sp, #153]	@ 0x99
900124e6:	7f6a      	ldrb	r2, [r5, #29]
900124e8:	eef0 8a49 	vmov.f32	s17, s18
900124ec:	bf48      	it	mi
900124ee:	eef1 7a67 	vnegmi.f32	s15, s15
900124f2:	f88d 3098 	strb.w	r3, [sp, #152]	@ 0x98
900124f6:	f88d 309a 	strb.w	r3, [sp, #154]	@ 0x9a
900124fa:	46c1      	mov	r9, r8
900124fc:	f88d 3064 	strb.w	r3, [sp, #100]	@ 0x64
90012500:	f04f 0a01 	mov.w	sl, #1
90012504:	ee67 7a87 	vmul.f32	s15, s15, s14
90012508:	7fab      	ldrb	r3, [r5, #30]
9001250a:	942a      	str	r4, [sp, #168]	@ 0xa8
9001250c:	435a      	muls	r2, r3
9001250e:	f895 0024 	ldrb.w	r0, [r5, #36]	@ 0x24
90012512:	ee26 7aa7 	vmul.f32	s14, s13, s15
90012516:	edcd 7a27 	vstr	s15, [sp, #156]	@ 0x9c
9001251a:	1c53      	adds	r3, r2, #1
9001251c:	942b      	str	r4, [sp, #172]	@ 0xac
9001251e:	942c      	str	r4, [sp, #176]	@ 0xb0
90012520:	ee27 7a26 	vmul.f32	s14, s14, s13
90012524:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90012528:	942d      	str	r4, [sp, #180]	@ 0xb4
9001252a:	942e      	str	r4, [sp, #184]	@ 0xb8
9001252c:	f3c3 2307 	ubfx	r3, r3, #8, #8
90012530:	ee67 7a27 	vmul.f32	s15, s14, s15
90012534:	942f      	str	r4, [sp, #188]	@ 0xbc
90012536:	9430      	str	r4, [sp, #192]	@ 0xc0
90012538:	9431      	str	r4, [sp, #196]	@ 0xc4
9001253a:	9432      	str	r4, [sp, #200]	@ 0xc8
9001253c:	9433      	str	r4, [sp, #204]	@ 0xcc
9001253e:	4644      	mov	r4, r8
90012540:	f895 1025 	ldrb.w	r1, [r5, #37]	@ 0x25
90012544:	edcd 7a28 	vstr	s15, [sp, #160]	@ 0xa0
90012548:	f88d 00a4 	strb.w	r0, [sp, #164]	@ 0xa4
9001254c:	f88d 10a5 	strb.w	r1, [sp, #165]	@ 0xa5
90012550:	f88d 30a6 	strb.w	r3, [sp, #166]	@ 0xa6
90012554:	9b06      	ldr	r3, [sp, #24]
90012556:	454b      	cmp	r3, r9
90012558:	f000 80cc 	beq.w	900126f4 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x27c>
9001255c:	f109 0301 	add.w	r3, r9, #1
90012560:	9305      	str	r3, [sp, #20]
90012562:	f81b 3009 	ldrb.w	r3, [fp, r9]
90012566:	2b06      	cmp	r3, #6
90012568:	d839      	bhi.n	900125de <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
9001256a:	e8df f003 	tbb	[pc, r3]
9001256e:	3b04      	.short	0x3b04
90012570:	817c6f60 	.word	0x817c6f60
90012574:	a0          	.byte	0xa0
90012575:	00          	.byte	0x00
90012576:	45c1      	cmp	r9, r8
90012578:	d92b      	bls.n	900125d2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
9001257a:	eef0 0a49 	vmov.f32	s1, s18
9001257e:	4638      	mov	r0, r7
90012580:	eeb0 0a69 	vmov.f32	s0, s19
90012584:	f7ff fdde 	bl	90012144 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90012588:	4638      	mov	r0, r7
9001258a:	f7ff fe67 	bl	9001225c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
9001258e:	4681      	mov	r9, r0
90012590:	b9f8      	cbnz	r0, 900125d2 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x15a>
90012592:	eef0 0a49 	vmov.f32	s1, s18
90012596:	4638      	mov	r0, r7
90012598:	eeb0 0a69 	vmov.f32	s0, s19
9001259c:	f7ff fe8d 	bl	900122ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
900125a0:	4628      	mov	r0, r5
900125a2:	4623      	mov	r3, r4
900125a4:	9a05      	ldr	r2, [sp, #20]
900125a6:	4641      	mov	r1, r8
900125a8:	edcd 9a2a 	vstr	s19, [sp, #168]	@ 0xa8
900125ac:	ed8d 9a2b 	vstr	s18, [sp, #172]	@ 0xac
900125b0:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
900125b4:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
900125b8:	e9cd 9702 	strd	r9, r7, [sp, #8]
900125bc:	e9cd b600 	strd	fp, r6, [sp]
900125c0:	f7ff feae 	bl	90012320 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
900125c4:	eef0 0a49 	vmov.f32	s1, s18
900125c8:	eeb0 0a69 	vmov.f32	s0, s19
900125cc:	4638      	mov	r0, r7
900125ce:	f7ff fe74 	bl	900122ba <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas11strokeCloseEff>
900125d2:	eeb0 8a49 	vmov.f32	s16, s18
900125d6:	f8dd 8014 	ldr.w	r8, [sp, #20]
900125da:	eef0 8a69 	vmov.f32	s17, s19
900125de:	f8dd 9014 	ldr.w	r9, [sp, #20]
900125e2:	e7b7      	b.n	90012554 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0xdc>
900125e4:	45c1      	cmp	r9, r8
900125e6:	d90d      	bls.n	90012604 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
900125e8:	4638      	mov	r0, r7
900125ea:	f7ff fe37 	bl	9001225c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
900125ee:	b948      	cbnz	r0, 90012604 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x18c>
900125f0:	4623      	mov	r3, r4
900125f2:	464a      	mov	r2, r9
900125f4:	4641      	mov	r1, r8
900125f6:	4628      	mov	r0, r5
900125f8:	e9cd a702 	strd	sl, r7, [sp, #8]
900125fc:	e9cd b600 	strd	fp, r6, [sp]
90012600:	f7ff fe8e 	bl	90012320 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
90012604:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90012608:	f88d a098 	strb.w	sl, [sp, #152]	@ 0x98
9001260c:	f88d a099 	strb.w	sl, [sp, #153]	@ 0x99
90012610:	3402      	adds	r4, #2
90012612:	edd3 8a00 	vldr	s17, [r3]
90012616:	46c8      	mov	r8, r9
90012618:	ed93 8a01 	vldr	s16, [r3, #4]
9001261c:	edcd 8a2a 	vstr	s17, [sp, #168]	@ 0xa8
90012620:	eef0 9a68 	vmov.f32	s19, s17
90012624:	ed8d 8a2b 	vstr	s16, [sp, #172]	@ 0xac
90012628:	eeb0 9a48 	vmov.f32	s18, s16
9001262c:	e7d7      	b.n	900125de <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
9001262e:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90012632:	4638      	mov	r0, r7
90012634:	3402      	adds	r4, #2
90012636:	edd3 8a00 	vldr	s17, [r3]
9001263a:	ed93 8a01 	vldr	s16, [r3, #4]
9001263e:	eeb0 0a68 	vmov.f32	s0, s17
90012642:	eef0 0a48 	vmov.f32	s1, s16
90012646:	f7ff fd7d 	bl	90012144 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
9001264a:	e7c8      	b.n	900125de <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
9001264c:	eb06 0384 	add.w	r3, r6, r4, lsl #2
90012650:	edd3 8a00 	vldr	s17, [r3]
90012654:	eef0 0a48 	vmov.f32	s1, s16
90012658:	4638      	mov	r0, r7
9001265a:	eeb0 0a68 	vmov.f32	s0, s17
9001265e:	3401      	adds	r4, #1
90012660:	f7ff fd70 	bl	90012144 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas12strokeLineToEff>
90012664:	e7bb      	b.n	900125de <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
90012666:	eb06 0384 	add.w	r3, r6, r4, lsl #2
9001266a:	ed93 8a00 	vldr	s16, [r3]
9001266e:	e7f1      	b.n	90012654 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x1dc>
90012670:	00a3      	lsls	r3, r4, #2
90012672:	eef0 0a48 	vmov.f32	s1, s16
90012676:	eeb0 0a68 	vmov.f32	s0, s17
9001267a:	4638      	mov	r0, r7
9001267c:	f103 0208 	add.w	r2, r3, #8
90012680:	f103 090c 	add.w	r9, r3, #12
90012684:	4433      	add	r3, r6
90012686:	3404      	adds	r4, #4
90012688:	4432      	add	r2, r6
9001268a:	44b1      	add	r9, r6
9001268c:	edd3 1a01 	vldr	s3, [r3, #4]
90012690:	ed92 2a00 	vldr	s4, [r2]
90012694:	edd9 2a00 	vldr	s5, [r9]
90012698:	ed93 1a00 	vldr	s2, [r3]
9001269c:	9207      	str	r2, [sp, #28]
9001269e:	f7ff fabb 	bl	90011c18 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
900126a2:	9a07      	ldr	r2, [sp, #28]
900126a4:	ed99 8a00 	vldr	s16, [r9]
900126a8:	edd2 8a00 	vldr	s17, [r2]
900126ac:	e797      	b.n	900125de <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900126ae:	00a3      	lsls	r3, r4, #2
900126b0:	eef0 0a48 	vmov.f32	s1, s16
900126b4:	eeb0 0a68 	vmov.f32	s0, s17
900126b8:	4638      	mov	r0, r7
900126ba:	f103 0210 	add.w	r2, r3, #16
900126be:	f103 0914 	add.w	r9, r3, #20
900126c2:	4433      	add	r3, r6
900126c4:	3406      	adds	r4, #6
900126c6:	4432      	add	r2, r6
900126c8:	44b1      	add	r9, r6
900126ca:	edd3 2a03 	vldr	s5, [r3, #12]
900126ce:	ed92 3a00 	vldr	s6, [r2]
900126d2:	edd9 3a00 	vldr	s7, [r9]
900126d6:	ed93 2a02 	vldr	s4, [r3, #8]
900126da:	edd3 1a01 	vldr	s3, [r3, #4]
900126de:	ed93 1a00 	vldr	s2, [r3]
900126e2:	9207      	str	r2, [sp, #28]
900126e4:	f7ff fab7 	bl	90011c56 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
900126e8:	9a07      	ldr	r2, [sp, #28]
900126ea:	ed99 8a00 	vldr	s16, [r9]
900126ee:	edd2 8a00 	vldr	s17, [r2]
900126f2:	e774      	b.n	900125de <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x166>
900126f4:	9b06      	ldr	r3, [sp, #24]
900126f6:	af08      	add	r7, sp, #32
900126f8:	4543      	cmp	r3, r8
900126fa:	d90f      	bls.n	9001271c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
900126fc:	4638      	mov	r0, r7
900126fe:	f7ff fdad 	bl	9001225c <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvas23strokeDrawDoubleLineCapEv>
90012702:	b958      	cbnz	r0, 9001271c <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2a4>
90012704:	2301      	movs	r3, #1
90012706:	9703      	str	r7, [sp, #12]
90012708:	f8cd b000 	str.w	fp, [sp]
9001270c:	4641      	mov	r1, r8
9001270e:	9a06      	ldr	r2, [sp, #24]
90012710:	4628      	mov	r0, r5
90012712:	e9cd 6301 	strd	r6, r3, [sp, #4]
90012716:	4623      	mov	r3, r4
90012718:	f7ff fe02 	bl	90012320 <_ZNK8touchgfx17CWRVectorRenderer19drawStrokeBackwardsEmmmPKhPKfbRNS0_12StrokeCanvasE>
9001271c:	f89d 10a6 	ldrb.w	r1, [sp, #166]	@ 0xa6
90012720:	4638      	mov	r0, r7
90012722:	f015 ffbf 	bl	900286a4 <_ZN8touchgfx6Canvas6renderEh>
90012726:	4604      	mov	r4, r0
90012728:	4638      	mov	r0, r7
9001272a:	f7ff fe99 	bl	90012460 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
9001272e:	4620      	mov	r0, r4
90012730:	b035      	add	sp, #212	@ 0xd4
90012732:	ecbd 8b04 	vpop	{d8-d9}
90012736:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001273a:	2401      	movs	r4, #1
9001273c:	e7f7      	b.n	9001272e <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE+0x2b6>
9001273e:	bf00      	nop
90012740:	00000000 	.word	0x00000000
90012744:	9002d254 	.word	0x9002d254

90012748 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD0Ev>:
90012748:	b510      	push	{r4, lr}
9001274a:	4604      	mov	r4, r0
9001274c:	f7ff fe88 	bl	90012460 <_ZN8touchgfx17CWRVectorRenderer12StrokeCanvasD1Ev>
90012750:	21b0      	movs	r1, #176	@ 0xb0
90012752:	4620      	mov	r0, r4
90012754:	f016 fb92 	bl	90028e7c <_ZdlPvj>
90012758:	4620      	mov	r0, r4
9001275a:	bd10      	pop	{r4, pc}

9001275c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>:
9001275c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90012760:	4698      	mov	r8, r3
90012762:	23ff      	movs	r3, #255	@ 0xff
90012764:	4607      	mov	r7, r0
90012766:	4689      	mov	r9, r1
90012768:	4692      	mov	sl, r2
9001276a:	1d02      	adds	r2, r0, #4
9001276c:	f107 0534 	add.w	r5, r7, #52	@ 0x34
90012770:	2400      	movs	r4, #0
90012772:	44ca      	add	sl, r9
90012774:	ed2d 8b06 	vpush	{d8-d10}
90012778:	b0aa      	sub	sp, #168	@ 0xa8
9001277a:	ed9f 8a81 	vldr	s16, [pc, #516]	@ 90012980 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
9001277e:	9300      	str	r3, [sp, #0]
90012780:	eef0 8a48 	vmov.f32	s17, s16
90012784:	6981      	ldr	r1, [r0, #24]
90012786:	a80d      	add	r0, sp, #52	@ 0x34
90012788:	9b39      	ldr	r3, [sp, #228]	@ 0xe4
9001278a:	f015 fef7 	bl	9002857c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>
9001278e:	7f3b      	ldrb	r3, [r7, #28]
90012790:	eddf 0a7b 	vldr	s1, [pc, #492]	@ 90012980 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x224>
90012794:	4628      	mov	r0, r5
90012796:	1e5a      	subs	r2, r3, #1
90012798:	eeb0 0a60 	vmov.f32	s0, s1
9001279c:	4253      	negs	r3, r2
9001279e:	4153      	adcs	r3, r2
900127a0:	f88d 3078 	strb.w	r3, [sp, #120]	@ 0x78
900127a4:	f005 fb39 	bl	90017e1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900127a8:	eeb0 9a40 	vmov.f32	s18, s0
900127ac:	eef0 9a60 	vmov.f32	s19, s1
900127b0:	45ca      	cmp	sl, r9
900127b2:	f000 80cd 	beq.w	90012950 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x1f4>
900127b6:	f819 3b01 	ldrb.w	r3, [r9], #1
900127ba:	2b06      	cmp	r3, #6
900127bc:	d8f8      	bhi.n	900127b0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900127be:	e8df f003 	tbb	[pc, r3]
900127c2:	0804      	.short	0x0804
900127c4:	58533f2a 	.word	0x58533f2a
900127c8:	8a          	.byte	0x8a
900127c9:	00          	.byte	0x00
900127ca:	a80d      	add	r0, sp, #52	@ 0x34
900127cc:	f015 ff48 	bl	90028660 <_ZN8touchgfx6Canvas5closeEv>
900127d0:	e7ee      	b.n	900127b0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900127d2:	eb08 0384 	add.w	r3, r8, r4, lsl #2
900127d6:	4628      	mov	r0, r5
900127d8:	ed93 8a01 	vldr	s16, [r3, #4]
900127dc:	edd3 8a00 	vldr	s17, [r3]
900127e0:	eef0 0a48 	vmov.f32	s1, s16
900127e4:	eeb0 0a68 	vmov.f32	s0, s17
900127e8:	f005 fb17 	bl	90017e1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900127ec:	a80d      	add	r0, sp, #52	@ 0x34
900127ee:	eef0 7a60 	vmov.f32	s15, s1
900127f2:	eeb0 9a40 	vmov.f32	s18, s0
900127f6:	eef0 9a60 	vmov.f32	s19, s1
900127fa:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
900127fe:	ee17 2a90 	vmov	r2, s15
90012802:	eef0 7a40 	vmov.f32	s15, s0
90012806:	eefe 7aed 	vcvt.s32.f32	s15, s15, #5
9001280a:	ee17 1a90 	vmov	r1, s15
9001280e:	f016 f801 	bl	90028814 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
90012812:	3402      	adds	r4, #2
90012814:	e7cc      	b.n	900127b0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90012816:	eb08 0384 	add.w	r3, r8, r4, lsl #2
9001281a:	4628      	mov	r0, r5
9001281c:	edd3 8a00 	vldr	s17, [r3]
90012820:	ed93 8a01 	vldr	s16, [r3, #4]
90012824:	eeb0 0a68 	vmov.f32	s0, s17
90012828:	eef0 0a48 	vmov.f32	s1, s16
9001282c:	f005 faf5 	bl	90017e1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012830:	a80d      	add	r0, sp, #52	@ 0x34
90012832:	eeb0 9a40 	vmov.f32	s18, s0
90012836:	eef0 9a60 	vmov.f32	s19, s1
9001283a:	f7ff fe01 	bl	90012440 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
9001283e:	e7e8      	b.n	90012812 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xb6>
90012840:	eb08 0384 	add.w	r3, r8, r4, lsl #2
90012844:	edd3 8a00 	vldr	s17, [r3]
90012848:	eef0 0a48 	vmov.f32	s1, s16
9001284c:	4628      	mov	r0, r5
9001284e:	eeb0 0a68 	vmov.f32	s0, s17
90012852:	3401      	adds	r4, #1
90012854:	f005 fae1 	bl	90017e1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012858:	a80d      	add	r0, sp, #52	@ 0x34
9001285a:	eef0 9a60 	vmov.f32	s19, s1
9001285e:	eeb0 9a40 	vmov.f32	s18, s0
90012862:	f7ff fded 	bl	90012440 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90012866:	e7a3      	b.n	900127b0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
90012868:	eb08 0384 	add.w	r3, r8, r4, lsl #2
9001286c:	ed93 8a00 	vldr	s16, [r3]
90012870:	e7ea      	b.n	90012848 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0xec>
90012872:	1ca3      	adds	r3, r4, #2
90012874:	4628      	mov	r0, r5
90012876:	3404      	adds	r4, #4
90012878:	eb08 0383 	add.w	r3, r8, r3, lsl #2
9001287c:	ed53 0a01 	vldr	s1, [r3, #-4]
90012880:	ed13 0a02 	vldr	s0, [r3, #-8]
90012884:	edd3 8a00 	vldr	s17, [r3]
90012888:	ed93 8a01 	vldr	s16, [r3, #4]
9001288c:	f005 fac5 	bl	90017e1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012890:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
90012894:	eeb0 0a68 	vmov.f32	s0, s17
90012898:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
9001289c:	eef0 0a48 	vmov.f32	s1, s16
900128a0:	4628      	mov	r0, r5
900128a2:	f005 faba 	bl	90017e1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900128a6:	eddd 1a0a 	vldr	s3, [sp, #40]	@ 0x28
900128aa:	eef0 2a60 	vmov.f32	s5, s1
900128ae:	ed9d 1a09 	vldr	s2, [sp, #36]	@ 0x24
900128b2:	eeb0 2a40 	vmov.f32	s4, s0
900128b6:	a80d      	add	r0, sp, #52	@ 0x34
900128b8:	eeb0 aa40 	vmov.f32	s20, s0
900128bc:	eef0 aa60 	vmov.f32	s21, s1
900128c0:	eeb0 0a49 	vmov.f32	s0, s18
900128c4:	eef0 0a69 	vmov.f32	s1, s19
900128c8:	f7ff f9a6 	bl	90011c18 <_ZN8touchgfx6Canvas17quadraticBezierToEffffff>
900128cc:	eef0 9a6a 	vmov.f32	s19, s21
900128d0:	eeb0 9a4a 	vmov.f32	s18, s20
900128d4:	e76c      	b.n	900127b0 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x54>
900128d6:	1d26      	adds	r6, r4, #4
900128d8:	4628      	mov	r0, r5
900128da:	3406      	adds	r4, #6
900128dc:	eb08 0686 	add.w	r6, r8, r6, lsl #2
900128e0:	ed56 0a03 	vldr	s1, [r6, #-12]
900128e4:	ed16 0a04 	vldr	s0, [r6, #-16]
900128e8:	edd6 8a00 	vldr	s17, [r6]
900128ec:	ed96 8a01 	vldr	s16, [r6, #4]
900128f0:	f005 fa93 	bl	90017e1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
900128f4:	ed8d 0a07 	vstr	s0, [sp, #28]
900128f8:	4628      	mov	r0, r5
900128fa:	ed16 0a02 	vldr	s0, [r6, #-8]
900128fe:	edcd 0a08 	vstr	s1, [sp, #32]
90012902:	ed56 0a01 	vldr	s1, [r6, #-4]
90012906:	f005 fa88 	bl	90017e1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
9001290a:	ed8d 0a09 	vstr	s0, [sp, #36]	@ 0x24
9001290e:	edcd 0a0a 	vstr	s1, [sp, #40]	@ 0x28
90012912:	eeb0 0a68 	vmov.f32	s0, s17
90012916:	eef0 0a48 	vmov.f32	s1, s16
9001291a:	4628      	mov	r0, r5
9001291c:	f005 fa7d 	bl	90017e1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>
90012920:	eddd 2a0a 	vldr	s5, [sp, #40]	@ 0x28
90012924:	eeb0 3a40 	vmov.f32	s6, s0
90012928:	ed9d 2a09 	vldr	s4, [sp, #36]	@ 0x24
9001292c:	eef0 3a60 	vmov.f32	s7, s1
90012930:	eddd 1a08 	vldr	s3, [sp, #32]
90012934:	eeb0 aa40 	vmov.f32	s20, s0
90012938:	ed9d 1a07 	vldr	s2, [sp, #28]
9001293c:	eef0 aa60 	vmov.f32	s21, s1
90012940:	a80d      	add	r0, sp, #52	@ 0x34
90012942:	eef0 0a69 	vmov.f32	s1, s19
90012946:	eeb0 0a49 	vmov.f32	s0, s18
9001294a:	f7ff f984 	bl	90011c56 <_ZN8touchgfx6Canvas13cubicBezierToEffffffff>
9001294e:	e7bd      	b.n	900128cc <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x170>
90012950:	7f7b      	ldrb	r3, [r7, #29]
90012952:	a80d      	add	r0, sp, #52	@ 0x34
90012954:	7fb9      	ldrb	r1, [r7, #30]
90012956:	4359      	muls	r1, r3
90012958:	1c4b      	adds	r3, r1, #1
9001295a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9001295e:	f3c1 2107 	ubfx	r1, r1, #8, #8
90012962:	f015 fe9f 	bl	900286a4 <_ZN8touchgfx6Canvas6renderEh>
90012966:	4b07      	ldr	r3, [pc, #28]	@ (90012984 <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE+0x228>)
90012968:	4604      	mov	r4, r0
9001296a:	a812      	add	r0, sp, #72	@ 0x48
9001296c:	930d      	str	r3, [sp, #52]	@ 0x34
9001296e:	f001 f8a7 	bl	90013ac0 <_ZN8touchgfx7OutlineD1Ev>
90012972:	4620      	mov	r0, r4
90012974:	b02a      	add	sp, #168	@ 0xa8
90012976:	ecbd 8b06 	vpop	{d8-d10}
9001297a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001297e:	bf00      	nop
90012980:	00000000 	.word	0x00000000
90012984:	9002d9c4 	.word	0x9002d9c4

90012988 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>:
90012988:	b410      	push	{r4}
9001298a:	7f04      	ldrb	r4, [r0, #28]
9001298c:	b11c      	cbz	r4, 90012996 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE+0xe>
9001298e:	f85d 4b04 	ldr.w	r4, [sp], #4
90012992:	f7ff bee3 	b.w	9001275c <_ZNK8touchgfx17CWRVectorRenderer8drawFillEPKhmPKfmRKNS_4RectE>
90012996:	f85d 4b04 	ldr.w	r4, [sp], #4
9001299a:	f7ff bd6d 	b.w	90012478 <_ZNK8touchgfx17CWRVectorRenderer10drawStrokeEPKhmPKfmRKNS_4RectE>
	...

900129a0 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_>:
900129a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900129a4:	4691      	mov	r9, r2
900129a6:	4602      	mov	r2, r0
900129a8:	b085      	sub	sp, #20
900129aa:	4605      	mov	r5, r0
900129ac:	f852 0f26 	ldr.w	r0, [r2, #38]!
900129b0:	4688      	mov	r8, r1
900129b2:	469a      	mov	sl, r3
900129b4:	ab02      	add	r3, sp, #8
900129b6:	6851      	ldr	r1, [r2, #4]
900129b8:	af02      	add	r7, sp, #8
900129ba:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
900129be:	c303      	stmia	r3!, {r0, r1}
900129c0:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
900129c4:	2b00      	cmp	r3, #0
900129c6:	dd08      	ble.n	900129da <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
900129c8:	f9bd 400e 	ldrsh.w	r4, [sp, #14]
900129cc:	2c00      	cmp	r4, #0
900129ce:	dd04      	ble.n	900129da <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
900129d0:	4a2e      	ldr	r2, [pc, #184]	@ (90012a8c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xec>)
900129d2:	7812      	ldrb	r2, [r2, #0]
900129d4:	b122      	cbz	r2, 900129e0 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x40>
900129d6:	2a01      	cmp	r2, #1
900129d8:	d02d      	beq.n	90012a36 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x96>
900129da:	b005      	add	sp, #20
900129dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900129e0:	f8bd 300a 	ldrh.w	r3, [sp, #10]
900129e4:	441c      	add	r4, r3
900129e6:	b2a4      	uxth	r4, r4
900129e8:	b226      	sxth	r6, r4
900129ea:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
900129ee:	42b3      	cmp	r3, r6
900129f0:	daf3      	bge.n	900129da <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
900129f2:	4653      	mov	r3, sl
900129f4:	464a      	mov	r2, r9
900129f6:	4641      	mov	r1, r8
900129f8:	4628      	mov	r0, r5
900129fa:	e9cd b700 	strd	fp, r7, [sp]
900129fe:	f7ff ffc3 	bl	90012988 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
90012a02:	b940      	cbnz	r0, 90012a16 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
90012a04:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90012a08:	2b01      	cmp	r3, #1
90012a0a:	d004      	beq.n	90012a16 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x76>
90012a0c:	3301      	adds	r3, #1
90012a0e:	105b      	asrs	r3, r3, #1
90012a10:	f8ad 300e 	strh.w	r3, [sp, #14]
90012a14:	e7ed      	b.n	900129f2 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x52>
90012a16:	f8bd 200e 	ldrh.w	r2, [sp, #14]
90012a1a:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90012a1e:	4413      	add	r3, r2
90012a20:	b29b      	uxth	r3, r3
90012a22:	441a      	add	r2, r3
90012a24:	f8ad 300a 	strh.w	r3, [sp, #10]
90012a28:	b212      	sxth	r2, r2
90012a2a:	4296      	cmp	r6, r2
90012a2c:	dadd      	bge.n	900129ea <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
90012a2e:	1ae3      	subs	r3, r4, r3
90012a30:	f8ad 300e 	strh.w	r3, [sp, #14]
90012a34:	e7d9      	b.n	900129ea <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x4a>
90012a36:	f8bd 4008 	ldrh.w	r4, [sp, #8]
90012a3a:	441c      	add	r4, r3
90012a3c:	b2a4      	uxth	r4, r4
90012a3e:	b226      	sxth	r6, r4
90012a40:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
90012a44:	42b3      	cmp	r3, r6
90012a46:	dac8      	bge.n	900129da <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0x3a>
90012a48:	4653      	mov	r3, sl
90012a4a:	464a      	mov	r2, r9
90012a4c:	4641      	mov	r1, r8
90012a4e:	4628      	mov	r0, r5
90012a50:	e9cd b700 	strd	fp, r7, [sp]
90012a54:	f7ff ff98 	bl	90012988 <_ZNK8touchgfx17CWRVectorRenderer12drawPathAreaEPKhmPKfmRKNS_4RectE>
90012a58:	b940      	cbnz	r0, 90012a6c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
90012a5a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
90012a5e:	2b01      	cmp	r3, #1
90012a60:	d004      	beq.n	90012a6c <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xcc>
90012a62:	3301      	adds	r3, #1
90012a64:	105b      	asrs	r3, r3, #1
90012a66:	f8ad 300c 	strh.w	r3, [sp, #12]
90012a6a:	e7ed      	b.n	90012a48 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa8>
90012a6c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
90012a70:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90012a74:	4413      	add	r3, r2
90012a76:	b29b      	uxth	r3, r3
90012a78:	441a      	add	r2, r3
90012a7a:	f8ad 3008 	strh.w	r3, [sp, #8]
90012a7e:	b212      	sxth	r2, r2
90012a80:	4296      	cmp	r6, r2
90012a82:	dadd      	bge.n	90012a40 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
90012a84:	1ae3      	subs	r3, r4, r3
90012a86:	f8ad 300c 	strh.w	r3, [sp, #12]
90012a8a:	e7d9      	b.n	90012a40 <_ZN8touchgfx17CWRVectorRenderer8drawPathEPKhmPKfmS4_+0xa0>
90012a8c:	24021984 	.word	0x24021984

90012a90 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
90012a90:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
90012a92:	6803      	ldr	r3, [r0, #0]
90012a94:	460d      	mov	r5, r1
90012a96:	4604      	mov	r4, r0
90012a98:	4601      	mov	r1, r0
90012a9a:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90012a9c:	a802      	add	r0, sp, #8
90012a9e:	4798      	blx	r3
90012aa0:	6828      	ldr	r0, [r5, #0]
90012aa2:	6869      	ldr	r1, [r5, #4]
90012aa4:	466b      	mov	r3, sp
90012aa6:	c303      	stmia	r3!, {r0, r1}
90012aa8:	4668      	mov	r0, sp
90012aaa:	4619      	mov	r1, r3
90012aac:	f7fd fb74 	bl	90010198 <_ZN8touchgfx4RectaNERKS0_>
90012ab0:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
90012ab2:	b188      	cbz	r0, 90012ad8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012ab4:	6803      	ldr	r3, [r0, #0]
90012ab6:	1d21      	adds	r1, r4, #4
90012ab8:	68db      	ldr	r3, [r3, #12]
90012aba:	4798      	blx	r3
90012abc:	b160      	cbz	r0, 90012ad8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012abe:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90012ac2:	2b00      	cmp	r3, #0
90012ac4:	dd08      	ble.n	90012ad8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012ac6:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
90012aca:	2d00      	cmp	r5, #0
90012acc:	dd04      	ble.n	90012ad8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012ace:	4a2b      	ldr	r2, [pc, #172]	@ (90012b7c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xec>)
90012ad0:	7812      	ldrb	r2, [r2, #0]
90012ad2:	b11a      	cbz	r2, 90012adc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x4c>
90012ad4:	2a01      	cmp	r2, #1
90012ad6:	d029      	beq.n	90012b2c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x9c>
90012ad8:	b004      	add	sp, #16
90012ada:	bd70      	pop	{r4, r5, r6, pc}
90012adc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90012ae0:	441d      	add	r5, r3
90012ae2:	b2ad      	uxth	r5, r5
90012ae4:	b22e      	sxth	r6, r5
90012ae6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90012aea:	42b3      	cmp	r3, r6
90012aec:	daf4      	bge.n	90012ad8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012aee:	6823      	ldr	r3, [r4, #0]
90012af0:	4669      	mov	r1, sp
90012af2:	4620      	mov	r0, r4
90012af4:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90012af6:	4798      	blx	r3
90012af8:	b940      	cbnz	r0, 90012b0c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90012afa:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90012afe:	2b01      	cmp	r3, #1
90012b00:	d004      	beq.n	90012b0c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x7c>
90012b02:	3301      	adds	r3, #1
90012b04:	105b      	asrs	r3, r3, #1
90012b06:	f8ad 3006 	strh.w	r3, [sp, #6]
90012b0a:	e7f0      	b.n	90012aee <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
90012b0c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
90012b10:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90012b14:	4413      	add	r3, r2
90012b16:	b29b      	uxth	r3, r3
90012b18:	441a      	add	r2, r3
90012b1a:	f8ad 3002 	strh.w	r3, [sp, #2]
90012b1e:	b212      	sxth	r2, r2
90012b20:	4296      	cmp	r6, r2
90012b22:	dae0      	bge.n	90012ae6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90012b24:	1aeb      	subs	r3, r5, r3
90012b26:	f8ad 3006 	strh.w	r3, [sp, #6]
90012b2a:	e7dc      	b.n	90012ae6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x56>
90012b2c:	f8bd 5000 	ldrh.w	r5, [sp]
90012b30:	441d      	add	r5, r3
90012b32:	b2ad      	uxth	r5, r5
90012b34:	b22e      	sxth	r6, r5
90012b36:	f9bd 3000 	ldrsh.w	r3, [sp]
90012b3a:	42b3      	cmp	r3, r6
90012b3c:	dacc      	bge.n	90012ad8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
90012b3e:	6823      	ldr	r3, [r4, #0]
90012b40:	4669      	mov	r1, sp
90012b42:	4620      	mov	r0, r4
90012b44:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
90012b46:	4798      	blx	r3
90012b48:	b940      	cbnz	r0, 90012b5c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90012b4a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
90012b4e:	2b01      	cmp	r3, #1
90012b50:	d004      	beq.n	90012b5c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xcc>
90012b52:	3301      	adds	r3, #1
90012b54:	105b      	asrs	r3, r3, #1
90012b56:	f8ad 3004 	strh.w	r3, [sp, #4]
90012b5a:	e7f0      	b.n	90012b3e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
90012b5c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
90012b60:	f8bd 3000 	ldrh.w	r3, [sp]
90012b64:	4413      	add	r3, r2
90012b66:	b29b      	uxth	r3, r3
90012b68:	441a      	add	r2, r3
90012b6a:	f8ad 3000 	strh.w	r3, [sp]
90012b6e:	b212      	sxth	r2, r2
90012b70:	4296      	cmp	r6, r2
90012b72:	dae0      	bge.n	90012b36 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90012b74:	1aeb      	subs	r3, r5, r3
90012b76:	f8ad 3004 	strh.w	r3, [sp, #4]
90012b7a:	e7dc      	b.n	90012b36 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa6>
90012b7c:	24021984 	.word	0x24021984

90012b80 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
90012b80:	b51f      	push	{r0, r1, r2, r3, r4, lr}
90012b82:	6803      	ldr	r3, [r0, #0]
90012b84:	4604      	mov	r4, r0
90012b86:	4601      	mov	r1, r0
90012b88:	4668      	mov	r0, sp
90012b8a:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
90012b8c:	4798      	blx	r3
90012b8e:	2100      	movs	r1, #0
90012b90:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90012b94:	4668      	mov	r0, sp
90012b96:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90012b9a:	9102      	str	r1, [sp, #8]
90012b9c:	a902      	add	r1, sp, #8
90012b9e:	f8ad 200c 	strh.w	r2, [sp, #12]
90012ba2:	f8ad 300e 	strh.w	r3, [sp, #14]
90012ba6:	f7fd faf7 	bl	90010198 <_ZN8touchgfx4RectaNERKS0_>
90012baa:	6823      	ldr	r3, [r4, #0]
90012bac:	4669      	mov	r1, sp
90012bae:	4620      	mov	r0, r4
90012bb0:	691b      	ldr	r3, [r3, #16]
90012bb2:	4798      	blx	r3
90012bb4:	b004      	add	sp, #16
90012bb6:	bd10      	pop	{r4, pc}

90012bb8 <_ZN8touchgfx12CanvasWidgetC1Ev>:
90012bb8:	2101      	movs	r1, #1
90012bba:	2200      	movs	r2, #0
90012bbc:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
90012bc0:	490a      	ldr	r1, [pc, #40]	@ (90012bec <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
90012bc2:	8082      	strh	r2, [r0, #4]
90012bc4:	6001      	str	r1, [r0, #0]
90012bc6:	21ff      	movs	r1, #255	@ 0xff
90012bc8:	80c2      	strh	r2, [r0, #6]
90012bca:	8102      	strh	r2, [r0, #8]
90012bcc:	8142      	strh	r2, [r0, #10]
90012bce:	8182      	strh	r2, [r0, #12]
90012bd0:	81c2      	strh	r2, [r0, #14]
90012bd2:	8202      	strh	r2, [r0, #16]
90012bd4:	8242      	strh	r2, [r0, #18]
90012bd6:	61c2      	str	r2, [r0, #28]
90012bd8:	8402      	strh	r2, [r0, #32]
90012bda:	8442      	strh	r2, [r0, #34]	@ 0x22
90012bdc:	f880 2024 	strb.w	r2, [r0, #36]	@ 0x24
90012be0:	f880 1026 	strb.w	r1, [r0, #38]	@ 0x26
90012be4:	6282      	str	r2, [r0, #40]	@ 0x28
90012be6:	e9c0 2205 	strd	r2, r2, [r0, #20]
90012bea:	4770      	bx	lr
90012bec:	9002d2b4 	.word	0x9002d2b4

90012bf0 <_ZN8touchgfx13AnimatedImage12setBitmapEndERKNS_6BitmapE>:
90012bf0:	880b      	ldrh	r3, [r1, #0]
90012bf2:	8643      	strh	r3, [r0, #50]	@ 0x32
90012bf4:	4770      	bx	lr

90012bf6 <_ZN8touchgfx13AnimatedImageD1Ev>:
90012bf6:	4770      	bx	lr

90012bf8 <_ZN8touchgfx13AnimatedImage9setBitmapERKNS_6BitmapE>:
90012bf8:	880b      	ldrh	r3, [r1, #0]
90012bfa:	8603      	strh	r3, [r0, #48]	@ 0x30
90012bfc:	f000 bdfb 	b.w	900137f6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>

90012c00 <_ZN8touchgfx13AnimatedImage13stopAnimationEv>:
90012c00:	b513      	push	{r0, r1, r4, lr}
90012c02:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
90012c06:	4604      	mov	r4, r0
90012c08:	b143      	cbz	r3, 90012c1c <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x1c>
90012c0a:	f003 fac7 	bl	9001619c <_ZN8touchgfx11Application11getInstanceEv>
90012c0e:	4621      	mov	r1, r4
90012c10:	3004      	adds	r0, #4
90012c12:	f003 fae8 	bl	900161e6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
90012c16:	2300      	movs	r3, #0
90012c18:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
90012c1c:	f894 3036 	ldrb.w	r3, [r4, #54]	@ 0x36
90012c20:	b163      	cbz	r3, 90012c3c <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x3c>
90012c22:	8e63      	ldrh	r3, [r4, #50]	@ 0x32
90012c24:	a901      	add	r1, sp, #4
90012c26:	4620      	mov	r0, r4
90012c28:	f8ad 3004 	strh.w	r3, [sp, #4]
90012c2c:	f000 fde3 	bl	900137f6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90012c30:	6823      	ldr	r3, [r4, #0]
90012c32:	4620      	mov	r0, r4
90012c34:	695b      	ldr	r3, [r3, #20]
90012c36:	4798      	blx	r3
90012c38:	b002      	add	sp, #8
90012c3a:	bd10      	pop	{r4, pc}
90012c3c:	8e23      	ldrh	r3, [r4, #48]	@ 0x30
90012c3e:	e7f1      	b.n	90012c24 <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x24>

90012c40 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>:
90012c40:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90012c42:	f64f 77ff 	movw	r7, #65535	@ 0xffff
90012c46:	8e05      	ldrh	r5, [r0, #48]	@ 0x30
90012c48:	4604      	mov	r4, r0
90012c4a:	42bd      	cmp	r5, r7
90012c4c:	d01a      	beq.n	90012c84 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x44>
90012c4e:	8e46      	ldrh	r6, [r0, #50]	@ 0x32
90012c50:	42be      	cmp	r6, r7
90012c52:	d017      	beq.n	90012c84 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x44>
90012c54:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
90012c58:	f880 3037 	strb.w	r3, [r0, #55]	@ 0x37
90012c5c:	b1a1      	cbz	r1, 90012c88 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x48>
90012c5e:	b142      	cbz	r2, 90012c72 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x32>
90012c60:	a902      	add	r1, sp, #8
90012c62:	f821 6d04 	strh.w	r6, [r1, #-4]!
90012c66:	f000 fdc6 	bl	900137f6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90012c6a:	6823      	ldr	r3, [r4, #0]
90012c6c:	4620      	mov	r0, r4
90012c6e:	695b      	ldr	r3, [r3, #20]
90012c70:	4798      	blx	r3
90012c72:	f003 fa93 	bl	9001619c <_ZN8touchgfx11Application11getInstanceEv>
90012c76:	4621      	mov	r1, r4
90012c78:	3004      	adds	r0, #4
90012c7a:	f003 fb5d 	bl	90016338 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
90012c7e:	2301      	movs	r3, #1
90012c80:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
90012c84:	b003      	add	sp, #12
90012c86:	bdf0      	pop	{r4, r5, r6, r7, pc}
90012c88:	2a00      	cmp	r2, #0
90012c8a:	d0f2      	beq.n	90012c72 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x32>
90012c8c:	a902      	add	r1, sp, #8
90012c8e:	f821 5d04 	strh.w	r5, [r1, #-4]!
90012c92:	e7e8      	b.n	90012c66 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x26>

90012c94 <_ZN8touchgfx13AnimatedImageD0Ev>:
90012c94:	b510      	push	{r4, lr}
90012c96:	4604      	mov	r4, r0
90012c98:	213c      	movs	r1, #60	@ 0x3c
90012c9a:	f016 f8ef 	bl	90028e7c <_ZdlPvj>
90012c9e:	4620      	mov	r0, r4
90012ca0:	bd10      	pop	{r4, pc}

90012ca2 <_ZN8touchgfx13AnimatedImage14pauseAnimationEv>:
90012ca2:	b510      	push	{r4, lr}
90012ca4:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
90012ca8:	4604      	mov	r4, r0
90012caa:	b14b      	cbz	r3, 90012cc0 <_ZN8touchgfx13AnimatedImage14pauseAnimationEv+0x1e>
90012cac:	f003 fa76 	bl	9001619c <_ZN8touchgfx11Application11getInstanceEv>
90012cb0:	4621      	mov	r1, r4
90012cb2:	3004      	adds	r0, #4
90012cb4:	f003 fa97 	bl	900161e6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
90012cb8:	2300      	movs	r3, #0
90012cba:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
90012cbe:	bd10      	pop	{r4, pc}
90012cc0:	f003 fa6c 	bl	9001619c <_ZN8touchgfx11Application11getInstanceEv>
90012cc4:	4621      	mov	r1, r4
90012cc6:	3004      	adds	r0, #4
90012cc8:	f003 fb36 	bl	90016338 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
90012ccc:	2301      	movs	r3, #1
90012cce:	e7f4      	b.n	90012cba <_ZN8touchgfx13AnimatedImage14pauseAnimationEv+0x18>

90012cd0 <_ZN8touchgfx13AnimatedImage15handleTickEventEv>:
90012cd0:	b537      	push	{r0, r1, r2, r4, r5, lr}
90012cd2:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
90012cd6:	4604      	mov	r4, r0
90012cd8:	2b00      	cmp	r3, #0
90012cda:	d042      	beq.n	90012d62 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
90012cdc:	f890 3035 	ldrb.w	r3, [r0, #53]	@ 0x35
90012ce0:	f890 2034 	ldrb.w	r2, [r0, #52]	@ 0x34
90012ce4:	3301      	adds	r3, #1
90012ce6:	b2db      	uxtb	r3, r3
90012ce8:	429a      	cmp	r2, r3
90012cea:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
90012cee:	d138      	bne.n	90012d62 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
90012cf0:	2300      	movs	r3, #0
90012cf2:	8e41      	ldrh	r1, [r0, #50]	@ 0x32
90012cf4:	f890 2036 	ldrb.w	r2, [r0, #54]	@ 0x36
90012cf8:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
90012cfc:	8cc3      	ldrh	r3, [r0, #38]	@ 0x26
90012cfe:	4299      	cmp	r1, r3
90012d00:	d100      	bne.n	90012d04 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x34>
90012d02:	b122      	cbz	r2, 90012d0e <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x3e>
90012d04:	8e21      	ldrh	r1, [r4, #48]	@ 0x30
90012d06:	4299      	cmp	r1, r3
90012d08:	d12f      	bne.n	90012d6a <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x9a>
90012d0a:	2a00      	cmp	r2, #0
90012d0c:	d034      	beq.n	90012d78 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xa8>
90012d0e:	f894 5037 	ldrb.w	r5, [r4, #55]	@ 0x37
90012d12:	b93d      	cbnz	r5, 90012d24 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x54>
90012d14:	f003 fa42 	bl	9001619c <_ZN8touchgfx11Application11getInstanceEv>
90012d18:	4621      	mov	r1, r4
90012d1a:	3004      	adds	r0, #4
90012d1c:	f003 fa63 	bl	900161e6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
90012d20:	f884 5038 	strb.w	r5, [r4, #56]	@ 0x38
90012d24:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90012d26:	b140      	cbz	r0, 90012d3a <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x6a>
90012d28:	6803      	ldr	r3, [r0, #0]
90012d2a:	68db      	ldr	r3, [r3, #12]
90012d2c:	4798      	blx	r3
90012d2e:	b120      	cbz	r0, 90012d3a <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x6a>
90012d30:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
90012d32:	4621      	mov	r1, r4
90012d34:	6803      	ldr	r3, [r0, #0]
90012d36:	689b      	ldr	r3, [r3, #8]
90012d38:	4798      	blx	r3
90012d3a:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90012d3e:	b183      	cbz	r3, 90012d62 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
90012d40:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
90012d44:	b16b      	cbz	r3, 90012d62 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
90012d46:	f894 3036 	ldrb.w	r3, [r4, #54]	@ 0x36
90012d4a:	b163      	cbz	r3, 90012d66 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x96>
90012d4c:	8e63      	ldrh	r3, [r4, #50]	@ 0x32
90012d4e:	a901      	add	r1, sp, #4
90012d50:	f8ad 3004 	strh.w	r3, [sp, #4]
90012d54:	4620      	mov	r0, r4
90012d56:	f000 fd4e 	bl	900137f6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
90012d5a:	6823      	ldr	r3, [r4, #0]
90012d5c:	4620      	mov	r0, r4
90012d5e:	695b      	ldr	r3, [r3, #20]
90012d60:	4798      	blx	r3
90012d62:	b003      	add	sp, #12
90012d64:	bd30      	pop	{r4, r5, pc}
90012d66:	8e23      	ldrh	r3, [r4, #48]	@ 0x30
90012d68:	e7f1      	b.n	90012d4e <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x7e>
90012d6a:	b12a      	cbz	r2, 90012d78 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xa8>
90012d6c:	3b01      	subs	r3, #1
90012d6e:	b29b      	uxth	r3, r3
90012d70:	a902      	add	r1, sp, #8
90012d72:	f821 3d04 	strh.w	r3, [r1, #-4]!
90012d76:	e7ed      	b.n	90012d54 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x84>
90012d78:	3301      	adds	r3, #1
90012d7a:	e7f8      	b.n	90012d6e <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x9e>

90012d7c <_ZNK8touchgfx5Image17invalidateContentEv>:
90012d7c:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
90012d80:	b12a      	cbz	r2, 90012d8e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
90012d82:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90012d86:	b112      	cbz	r2, 90012d8e <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
90012d88:	6803      	ldr	r3, [r0, #0]
90012d8a:	695b      	ldr	r3, [r3, #20]
90012d8c:	4718      	bx	r3
90012d8e:	4770      	bx	lr

90012d90 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>:
90012d90:	b573      	push	{r0, r1, r4, r5, r6, lr}
90012d92:	ac02      	add	r4, sp, #8
90012d94:	6803      	ldr	r3, [r0, #0]
90012d96:	4605      	mov	r5, r0
90012d98:	4616      	mov	r6, r2
90012d9a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90012d9c:	f824 1d04 	strh.w	r1, [r4, #-4]!
90012da0:	4621      	mov	r1, r4
90012da2:	4798      	blx	r3
90012da4:	682b      	ldr	r3, [r5, #0]
90012da6:	4621      	mov	r1, r4
90012da8:	4628      	mov	r0, r5
90012daa:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
90012dac:	f8ad 6004 	strh.w	r6, [sp, #4]
90012db0:	4798      	blx	r3
90012db2:	b002      	add	sp, #8
90012db4:	bd70      	pop	{r4, r5, r6, pc}

90012db6 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>:
90012db6:	2300      	movs	r3, #0
90012db8:	f880 1034 	strb.w	r1, [r0, #52]	@ 0x34
90012dbc:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
90012dc0:	4770      	bx	lr

90012dc2 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
90012dc2:	2000      	movs	r0, #0
90012dc4:	4770      	bx	lr
	...

90012dc8 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
90012dc8:	4b07      	ldr	r3, [pc, #28]	@ (90012de8 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
90012dca:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90012dcc:	881b      	ldrh	r3, [r3, #0]
90012dce:	4293      	cmp	r3, r2
90012dd0:	bf81      	itttt	hi
90012dd2:	4b06      	ldrhi	r3, [pc, #24]	@ (90012dec <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
90012dd4:	681b      	ldrhi	r3, [r3, #0]
90012dd6:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
90012dda:	7858      	ldrbhi	r0, [r3, #1]
90012ddc:	bf8c      	ite	hi
90012dde:	f000 0003 	andhi.w	r0, r0, #3
90012de2:	2000      	movls	r0, #0
90012de4:	4770      	bx	lr
90012de6:	bf00      	nop
90012de8:	240219e8 	.word	0x240219e8
90012dec:	240219e4 	.word	0x240219e4

90012df0 <_ZN8touchgfx8TextAreaD1Ev>:
90012df0:	4770      	bx	lr
	...

90012df4 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
90012df4:	4b11      	ldr	r3, [pc, #68]	@ (90012e3c <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
90012df6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90012dfa:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
90012dfc:	4604      	mov	r4, r0
90012dfe:	881b      	ldrh	r3, [r3, #0]
90012e00:	428b      	cmp	r3, r1
90012e02:	d918      	bls.n	90012e36 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
90012e04:	6803      	ldr	r3, [r0, #0]
90012e06:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
90012e08:	4b0d      	ldr	r3, [pc, #52]	@ (90012e40 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
90012e0a:	6818      	ldr	r0, [r3, #0]
90012e0c:	f7f2 fdcc 	bl	900059a8 <_ZNK8touchgfx5Texts7getTextEt>
90012e10:	6823      	ldr	r3, [r4, #0]
90012e12:	4606      	mov	r6, r0
90012e14:	4620      	mov	r0, r4
90012e16:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90012e18:	4798      	blx	r3
90012e1a:	6823      	ldr	r3, [r4, #0]
90012e1c:	4607      	mov	r7, r0
90012e1e:	4620      	mov	r0, r4
90012e20:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90012e24:	4798      	blx	r3
90012e26:	463a      	mov	r2, r7
90012e28:	4603      	mov	r3, r0
90012e2a:	4631      	mov	r1, r6
90012e2c:	4620      	mov	r0, r4
90012e2e:	46ac      	mov	ip, r5
90012e30:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90012e34:	4760      	bx	ip
90012e36:	2000      	movs	r0, #0
90012e38:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90012e3c:	240219e8 	.word	0x240219e8
90012e40:	240219f0 	.word	0x240219f0

90012e44 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
90012e44:	4b18      	ldr	r3, [pc, #96]	@ (90012ea8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
90012e46:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
90012e4a:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
90012e4c:	4604      	mov	r4, r0
90012e4e:	881b      	ldrh	r3, [r3, #0]
90012e50:	428b      	cmp	r3, r1
90012e52:	d926      	bls.n	90012ea2 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
90012e54:	4b15      	ldr	r3, [pc, #84]	@ (90012eac <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
90012e56:	681b      	ldr	r3, [r3, #0]
90012e58:	eb03 0241 	add.w	r2, r3, r1, lsl #1
90012e5c:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
90012e60:	4b13      	ldr	r3, [pc, #76]	@ (90012eb0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
90012e62:	7855      	ldrb	r5, [r2, #1]
90012e64:	681b      	ldr	r3, [r3, #0]
90012e66:	f3c5 0581 	ubfx	r5, r5, #2, #2
90012e6a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
90012e6e:	6833      	ldr	r3, [r6, #0]
90012e70:	69df      	ldr	r7, [r3, #28]
90012e72:	4b10      	ldr	r3, [pc, #64]	@ (90012eb4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
90012e74:	6818      	ldr	r0, [r3, #0]
90012e76:	f7f2 fd97 	bl	900059a8 <_ZNK8touchgfx5Texts7getTextEt>
90012e7a:	6823      	ldr	r3, [r4, #0]
90012e7c:	4680      	mov	r8, r0
90012e7e:	4620      	mov	r0, r4
90012e80:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90012e82:	4798      	blx	r3
90012e84:	6823      	ldr	r3, [r4, #0]
90012e86:	4681      	mov	r9, r0
90012e88:	4620      	mov	r0, r4
90012e8a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90012e8e:	4798      	blx	r3
90012e90:	464b      	mov	r3, r9
90012e92:	9000      	str	r0, [sp, #0]
90012e94:	4642      	mov	r2, r8
90012e96:	4629      	mov	r1, r5
90012e98:	4630      	mov	r0, r6
90012e9a:	47b8      	blx	r7
90012e9c:	b003      	add	sp, #12
90012e9e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90012ea2:	2000      	movs	r0, #0
90012ea4:	e7fa      	b.n	90012e9c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
90012ea6:	bf00      	nop
90012ea8:	240219e8 	.word	0x240219e8
90012eac:	240219e4 	.word	0x240219e4
90012eb0:	240219ec 	.word	0x240219ec
90012eb4:	240219f0 	.word	0x240219f0

90012eb8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
90012eb8:	b40e      	push	{r1, r2, r3}
90012eba:	4b30      	ldr	r3, [pc, #192]	@ (90012f7c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
90012ebc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90012ec0:	881a      	ldrh	r2, [r3, #0]
90012ec2:	b09d      	sub	sp, #116	@ 0x74
90012ec4:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
90012ec6:	4604      	mov	r4, r0
90012ec8:	429a      	cmp	r2, r3
90012eca:	d954      	bls.n	90012f76 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
90012ecc:	aa26      	add	r2, sp, #152	@ 0x98
90012ece:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 90012f80 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
90012ed2:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 90012f84 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
90012ed6:	9202      	str	r2, [sp, #8]
90012ed8:	f8d9 2000 	ldr.w	r2, [r9]
90012edc:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
90012ee0:	f8d8 3000 	ldr.w	r3, [r8]
90012ee4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90012ee8:	682b      	ldr	r3, [r5, #0]
90012eea:	4628      	mov	r0, r5
90012eec:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90012eee:	4798      	blx	r3
90012ef0:	4606      	mov	r6, r0
90012ef2:	b207      	sxth	r7, r0
90012ef4:	a803      	add	r0, sp, #12
90012ef6:	f005 fb59 	bl	900185ac <_ZN8touchgfx12TextProviderC1Ev>
90012efa:	682b      	ldr	r3, [r5, #0]
90012efc:	4628      	mov	r0, r5
90012efe:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90012f00:	4798      	blx	r3
90012f02:	682b      	ldr	r3, [r5, #0]
90012f04:	4682      	mov	sl, r0
90012f06:	4628      	mov	r0, r5
90012f08:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90012f0a:	4798      	blx	r3
90012f0c:	4653      	mov	r3, sl
90012f0e:	9000      	str	r0, [sp, #0]
90012f10:	a803      	add	r0, sp, #12
90012f12:	9a02      	ldr	r2, [sp, #8]
90012f14:	9925      	ldr	r1, [sp, #148]	@ 0x94
90012f16:	f005 fba4 	bl	90018662 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90012f1a:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90012f1c:	f8d9 3000 	ldr.w	r3, [r9]
90012f20:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
90012f24:	8925      	ldrh	r5, [r4, #8]
90012f26:	eb03 0142 	add.w	r1, r3, r2, lsl #1
90012f2a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
90012f2e:	eba5 050c 	sub.w	r5, r5, ip
90012f32:	784a      	ldrb	r2, [r1, #1]
90012f34:	f8d8 3000 	ldr.w	r3, [r8]
90012f38:	b22d      	sxth	r5, r5
90012f3a:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
90012f3e:	f3c2 0281 	ubfx	r2, r2, #2, #2
90012f42:	9500      	str	r5, [sp, #0]
90012f44:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
90012f48:	a803      	add	r0, sp, #12
90012f4a:	f002 fc93 	bl	90015874 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
90012f4e:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
90012f52:	b203      	sxth	r3, r0
90012f54:	18b9      	adds	r1, r7, r2
90012f56:	2900      	cmp	r1, #0
90012f58:	dd0b      	ble.n	90012f72 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
90012f5a:	3b01      	subs	r3, #1
90012f5c:	fb13 f302 	smulbb	r3, r3, r2
90012f60:	fb16 3300 	smlabb	r3, r6, r0, r3
90012f64:	b21f      	sxth	r7, r3
90012f66:	4638      	mov	r0, r7
90012f68:	b01d      	add	sp, #116	@ 0x74
90012f6a:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90012f6e:	b003      	add	sp, #12
90012f70:	4770      	bx	lr
90012f72:	2b00      	cmp	r3, #0
90012f74:	dcf7      	bgt.n	90012f66 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90012f76:	2700      	movs	r7, #0
90012f78:	e7f5      	b.n	90012f66 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
90012f7a:	bf00      	nop
90012f7c:	240219e8 	.word	0x240219e8
90012f80:	240219e4 	.word	0x240219e4
90012f84:	240219ec 	.word	0x240219ec

90012f88 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
90012f88:	4bbd      	ldr	r3, [pc, #756]	@ (90013280 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
90012f8a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90012f8e:	460c      	mov	r4, r1
90012f90:	881b      	ldrh	r3, [r3, #0]
90012f92:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
90012f94:	b0a9      	sub	sp, #164	@ 0xa4
90012f96:	4680      	mov	r8, r0
90012f98:	428b      	cmp	r3, r1
90012f9a:	d809      	bhi.n	90012fb0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
90012f9c:	2300      	movs	r3, #0
90012f9e:	f04f 32ff 	mov.w	r2, #4294967295
90012fa2:	6083      	str	r3, [r0, #8]
90012fa4:	e9c0 3200 	strd	r3, r2, [r0]
90012fa8:	4640      	mov	r0, r8
90012faa:	b029      	add	sp, #164	@ 0xa4
90012fac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90012fb0:	4eb4      	ldr	r6, [pc, #720]	@ (90013284 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
90012fb2:	6833      	ldr	r3, [r6, #0]
90012fb4:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
90012fb8:	4bb3      	ldr	r3, [pc, #716]	@ (90013288 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
90012fba:	681b      	ldr	r3, [r3, #0]
90012fbc:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90012fc0:	4bb2      	ldr	r3, [pc, #712]	@ (9001328c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90012fc2:	6818      	ldr	r0, [r3, #0]
90012fc4:	f7f2 fcf0 	bl	900059a8 <_ZNK8touchgfx5Texts7getTextEt>
90012fc8:	682b      	ldr	r3, [r5, #0]
90012fca:	4681      	mov	r9, r0
90012fcc:	4628      	mov	r0, r5
90012fce:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90012fd0:	4798      	blx	r3
90012fd2:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
90012fd4:	b203      	sxth	r3, r0
90012fd6:	4682      	mov	sl, r0
90012fd8:	4407      	add	r7, r0
90012fda:	a80f      	add	r0, sp, #60	@ 0x3c
90012fdc:	9304      	str	r3, [sp, #16]
90012fde:	b2bb      	uxth	r3, r7
90012fe0:	9303      	str	r3, [sp, #12]
90012fe2:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
90012fe6:	2b00      	cmp	r3, #0
90012fe8:	f040 80a5 	bne.w	90013136 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1ae>
90012fec:	f005 fade 	bl	900185ac <_ZN8touchgfx12TextProviderC1Ev>
90012ff0:	682b      	ldr	r3, [r5, #0]
90012ff2:	4628      	mov	r0, r5
90012ff4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90012ff6:	4798      	blx	r3
90012ff8:	682b      	ldr	r3, [r5, #0]
90012ffa:	4606      	mov	r6, r0
90012ffc:	4628      	mov	r0, r5
90012ffe:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90013000:	4798      	blx	r3
90013002:	6823      	ldr	r3, [r4, #0]
90013004:	4607      	mov	r7, r0
90013006:	4620      	mov	r0, r4
90013008:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
9001300a:	4798      	blx	r3
9001300c:	6823      	ldr	r3, [r4, #0]
9001300e:	4683      	mov	fp, r0
90013010:	4620      	mov	r0, r4
90013012:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90013016:	4798      	blx	r3
90013018:	463b      	mov	r3, r7
9001301a:	4649      	mov	r1, r9
9001301c:	4632      	mov	r2, r6
9001301e:	2600      	movs	r6, #0
90013020:	e9cd b000 	strd	fp, r0, [sp]
90013024:	a80f      	add	r0, sp, #60	@ 0x3c
90013026:	4637      	mov	r7, r6
90013028:	f005 fb30 	bl	9001868c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
9001302c:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90013030:	f8df b250 	ldr.w	fp, [pc, #592]	@ 90013284 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
90013034:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
90013038:	bf0c      	ite	eq
9001303a:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
9001303e:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
90013042:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
90013044:	4629      	mov	r1, r5
90013046:	f8db 3000 	ldr.w	r3, [fp]
9001304a:	a80f      	add	r0, sp, #60	@ 0x3c
9001304c:	3701      	adds	r7, #1
9001304e:	eb03 0342 	add.w	r3, r3, r2, lsl #1
90013052:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90013056:	b2bf      	uxth	r7, r7
90013058:	785b      	ldrb	r3, [r3, #1]
9001305a:	f3c3 0381 	ubfx	r3, r3, #2, #2
9001305e:	f002 f910 	bl	90015282 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90013062:	9b03      	ldr	r3, [sp, #12]
90013064:	4286      	cmp	r6, r0
90013066:	eba9 0903 	sub.w	r9, r9, r3
9001306a:	bfb8      	it	lt
9001306c:	4606      	movlt	r6, r0
9001306e:	a80f      	add	r0, sp, #60	@ 0x3c
90013070:	fa0f f989 	sxth.w	r9, r9
90013074:	b236      	sxth	r6, r6
90013076:	f005 fac0 	bl	900185fa <_ZN8touchgfx12TextProvider11endOfStringEv>
9001307a:	b918      	cbnz	r0, 90013084 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
9001307c:	7a2b      	ldrb	r3, [r5, #8]
9001307e:	444b      	add	r3, r9
90013080:	2b00      	cmp	r3, #0
90013082:	dcde      	bgt.n	90013042 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xba>
90013084:	9b03      	ldr	r3, [sp, #12]
90013086:	4620      	mov	r0, r4
90013088:	9a04      	ldr	r2, [sp, #16]
9001308a:	fb13 f707 	smulbb	r7, r3, r7
9001308e:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
90013090:	f895 9009 	ldrb.w	r9, [r5, #9]
90013094:	1aff      	subs	r7, r7, r3
90013096:	b2bf      	uxth	r7, r7
90013098:	b23b      	sxth	r3, r7
9001309a:	429a      	cmp	r2, r3
9001309c:	bfa8      	it	ge
9001309e:	4657      	movge	r7, sl
900130a0:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
900130a4:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
900130a8:	6823      	ldr	r3, [r4, #0]
900130aa:	444f      	add	r7, r9
900130ac:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
900130ae:	bf08      	it	eq
900130b0:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
900130b4:	fa1f f987 	uxth.w	r9, r7
900130b8:	bf18      	it	ne
900130ba:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
900130be:	4798      	blx	r3
900130c0:	2801      	cmp	r0, #1
900130c2:	fa0f f789 	sxth.w	r7, r9
900130c6:	b2b3      	uxth	r3, r6
900130c8:	f000 80e2 	beq.w	90013290 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
900130cc:	2802      	cmp	r0, #2
900130ce:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
900130d2:	f000 80e3 	beq.w	9001329c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
900130d6:	7aea      	ldrb	r2, [r5, #11]
900130d8:	b236      	sxth	r6, r6
900130da:	7b2d      	ldrb	r5, [r5, #12]
900130dc:	1ab6      	subs	r6, r6, r2
900130de:	442a      	add	r2, r5
900130e0:	fa1f fa86 	uxth.w	sl, r6
900130e4:	4413      	add	r3, r2
900130e6:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
900130ea:	fa0f fb8a 	sxth.w	fp, sl
900130ee:	b29b      	uxth	r3, r3
900130f0:	2a02      	cmp	r2, #2
900130f2:	b21e      	sxth	r6, r3
900130f4:	f000 80d6 	beq.w	900132a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
900130f8:	2a03      	cmp	r2, #3
900130fa:	f000 80de 	beq.w	900132ba <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
900130fe:	2a01      	cmp	r2, #1
90013100:	f040 80e6 	bne.w	900132d0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
90013104:	8925      	ldrh	r5, [r4, #8]
90013106:	4633      	mov	r3, r6
90013108:	463e      	mov	r6, r7
9001310a:	eba5 0909 	sub.w	r9, r5, r9
9001310e:	461f      	mov	r7, r3
90013110:	465d      	mov	r5, fp
90013112:	fa0f fb89 	sxth.w	fp, r9
90013116:	4b5d      	ldr	r3, [pc, #372]	@ (9001328c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
90013118:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
9001311a:	6818      	ldr	r0, [r3, #0]
9001311c:	f7f2 fc44 	bl	900059a8 <_ZNK8touchgfx5Texts7getTextEt>
90013120:	f8a8 b000 	strh.w	fp, [r8]
90013124:	f8a8 5002 	strh.w	r5, [r8, #2]
90013128:	f8a8 6004 	strh.w	r6, [r8, #4]
9001312c:	f8a8 7006 	strh.w	r7, [r8, #6]
90013130:	f8c8 0008 	str.w	r0, [r8, #8]
90013134:	e738      	b.n	90012fa8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
90013136:	f005 fa39 	bl	900185ac <_ZN8touchgfx12TextProviderC1Ev>
9001313a:	682b      	ldr	r3, [r5, #0]
9001313c:	4628      	mov	r0, r5
9001313e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90013140:	4798      	blx	r3
90013142:	682b      	ldr	r3, [r5, #0]
90013144:	4607      	mov	r7, r0
90013146:	4628      	mov	r0, r5
90013148:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001314a:	4798      	blx	r3
9001314c:	6823      	ldr	r3, [r4, #0]
9001314e:	4683      	mov	fp, r0
90013150:	4620      	mov	r0, r4
90013152:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
90013154:	4798      	blx	r3
90013156:	6822      	ldr	r2, [r4, #0]
90013158:	9005      	str	r0, [sp, #20]
9001315a:	4620      	mov	r0, r4
9001315c:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
90013160:	4790      	blx	r2
90013162:	9b05      	ldr	r3, [sp, #20]
90013164:	463a      	mov	r2, r7
90013166:	4649      	mov	r1, r9
90013168:	9001      	str	r0, [sp, #4]
9001316a:	a80f      	add	r0, sp, #60	@ 0x3c
9001316c:	9300      	str	r3, [sp, #0]
9001316e:	465b      	mov	r3, fp
90013170:	f005 fa8c 	bl	9001868c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
90013174:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90013178:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
9001317c:	af0f      	add	r7, sp, #60	@ 0x3c
9001317e:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
90013182:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
90013186:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
90013188:	bf0a      	itet	eq
9001318a:	464a      	moveq	r2, r9
9001318c:	461a      	movne	r2, r3
9001318e:	4699      	moveq	r9, r3
90013190:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
90013194:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
90013198:	1ad2      	subs	r2, r2, r3
9001319a:	6833      	ldr	r3, [r6, #0]
9001319c:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
900131a0:	eb03 0341 	add.w	r3, r3, r1, lsl #1
900131a4:	7859      	ldrb	r1, [r3, #1]
900131a6:	2300      	movs	r3, #0
900131a8:	9707      	str	r7, [sp, #28]
900131aa:	f3c1 0181 	ubfx	r1, r1, #2, #2
900131ae:	f8ad 3018 	strh.w	r3, [sp, #24]
900131b2:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
900131b6:	f88d 1020 	strb.w	r1, [sp, #32]
900131ba:	9509      	str	r5, [sp, #36]	@ 0x24
900131bc:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
900131c0:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
900131c4:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
900131c8:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
900131cc:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
900131d0:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
900131d4:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
900131d8:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
900131dc:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
900131e0:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
900131e4:	b350      	cbz	r0, 9001323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900131e6:	682b      	ldr	r3, [r5, #0]
900131e8:	4628      	mov	r0, r5
900131ea:	695b      	ldr	r3, [r3, #20]
900131ec:	4798      	blx	r3
900131ee:	4607      	mov	r7, r0
900131f0:	b320      	cbz	r0, 9001323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
900131f2:	9809      	ldr	r0, [sp, #36]	@ 0x24
900131f4:	4639      	mov	r1, r7
900131f6:	6803      	ldr	r3, [r0, #0]
900131f8:	68db      	ldr	r3, [r3, #12]
900131fa:	4798      	blx	r3
900131fc:	4606      	mov	r6, r0
900131fe:	b1e8      	cbz	r0, 9001323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90013200:	7b43      	ldrb	r3, [r0, #13]
90013202:	7a82      	ldrb	r2, [r0, #10]
90013204:	005b      	lsls	r3, r3, #1
90013206:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9001320a:	4313      	orrs	r3, r2
9001320c:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
90013210:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
90013214:	2b06      	cmp	r3, #6
90013216:	d111      	bne.n	9001323c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b4>
90013218:	9809      	ldr	r0, [sp, #36]	@ 0x24
9001321a:	4632      	mov	r2, r6
9001321c:	4639      	mov	r1, r7
9001321e:	6803      	ldr	r3, [r0, #0]
90013220:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90013222:	4798      	blx	r3
90013224:	7b73      	ldrb	r3, [r6, #13]
90013226:	005b      	lsls	r3, r3, #1
90013228:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001322c:	7ab3      	ldrb	r3, [r6, #10]
9001322e:	4313      	orrs	r3, r2
90013230:	4418      	add	r0, r3
90013232:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90013236:	4418      	add	r0, r3
90013238:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
9001323c:	2600      	movs	r6, #0
9001323e:	4637      	mov	r7, r6
90013240:	a806      	add	r0, sp, #24
90013242:	3701      	adds	r7, #1
90013244:	f002 fa13 	bl	9001566e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90013248:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
9001324c:	9b03      	ldr	r3, [sp, #12]
9001324e:	b2bf      	uxth	r7, r7
90013250:	4286      	cmp	r6, r0
90013252:	eba9 0903 	sub.w	r9, r9, r3
90013256:	f8bd 3018 	ldrh.w	r3, [sp, #24]
9001325a:	bfb8      	it	lt
9001325c:	4606      	movlt	r6, r0
9001325e:	fa0f f989 	sxth.w	r9, r9
90013262:	b236      	sxth	r6, r6
90013264:	2b00      	cmp	r3, #0
90013266:	f43f af0d 	beq.w	90013084 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
9001326a:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
9001326e:	2b00      	cmp	r3, #0
90013270:	f47f af08 	bne.w	90013084 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
90013274:	7a2b      	ldrb	r3, [r5, #8]
90013276:	444b      	add	r3, r9
90013278:	2b00      	cmp	r3, #0
9001327a:	dce1      	bgt.n	90013240 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b8>
9001327c:	e702      	b.n	90013084 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfc>
9001327e:	bf00      	nop
90013280:	240219e8 	.word	0x240219e8
90013284:	240219e4 	.word	0x240219e4
90013288:	240219ec 	.word	0x240219ec
9001328c:	240219f0 	.word	0x240219f0
90013290:	ebaa 0606 	sub.w	r6, sl, r6
90013294:	2002      	movs	r0, #2
90013296:	fb96 f6f0 	sdiv	r6, r6, r0
9001329a:	e71c      	b.n	900130d6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
9001329c:	441e      	add	r6, r3
9001329e:	ebaa 0606 	sub.w	r6, sl, r6
900132a2:	e718      	b.n	900130d6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x14e>
900132a4:	8925      	ldrh	r5, [r4, #8]
900132a6:	1aed      	subs	r5, r5, r3
900132a8:	eba5 050a 	sub.w	r5, r5, sl
900132ac:	fa0f fb85 	sxth.w	fp, r5
900132b0:	8965      	ldrh	r5, [r4, #10]
900132b2:	eba5 0509 	sub.w	r5, r5, r9
900132b6:	b22d      	sxth	r5, r5
900132b8:	e72d      	b.n	90013116 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
900132ba:	8965      	ldrh	r5, [r4, #10]
900132bc:	f04f 0b00 	mov.w	fp, #0
900132c0:	1aed      	subs	r5, r5, r3
900132c2:	4633      	mov	r3, r6
900132c4:	463e      	mov	r6, r7
900132c6:	eba5 050a 	sub.w	r5, r5, sl
900132ca:	461f      	mov	r7, r3
900132cc:	b22d      	sxth	r5, r5
900132ce:	e722      	b.n	90013116 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>
900132d0:	2500      	movs	r5, #0
900132d2:	e720      	b.n	90013116 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x18e>

900132d4 <_ZN8touchgfx8TextAreaD0Ev>:
900132d4:	b510      	push	{r4, lr}
900132d6:	4604      	mov	r4, r0
900132d8:	2148      	movs	r1, #72	@ 0x48
900132da:	f015 fdcf 	bl	90028e7c <_ZdlPvj>
900132de:	4620      	mov	r0, r4
900132e0:	bd10      	pop	{r4, pc}
	...

900132e4 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
900132e4:	b513      	push	{r0, r1, r4, lr}
900132e6:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
900132ea:	4604      	mov	r4, r0
900132ec:	b1fb      	cbz	r3, 9001332e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900132ee:	4b16      	ldr	r3, [pc, #88]	@ (90013348 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
900132f0:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
900132f2:	881b      	ldrh	r3, [r3, #0]
900132f4:	428b      	cmp	r3, r1
900132f6:	d91a      	bls.n	9001332e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
900132f8:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
900132fc:	2b00      	cmp	r3, #0
900132fe:	dd16      	ble.n	9001332e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90013300:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
90013304:	2b00      	cmp	r3, #0
90013306:	dd12      	ble.n	9001332e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90013308:	4b10      	ldr	r3, [pc, #64]	@ (9001334c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
9001330a:	6818      	ldr	r0, [r3, #0]
9001330c:	f7f2 fb4c 	bl	900059a8 <_ZNK8touchgfx5Texts7getTextEt>
90013310:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
90013314:	6822      	ldr	r2, [r4, #0]
90013316:	2b00      	cmp	r3, #0
90013318:	db06      	blt.n	90013328 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
9001331a:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
9001331e:	2b00      	cmp	r3, #0
90013320:	db02      	blt.n	90013328 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
90013322:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90013324:	4298      	cmp	r0, r3
90013326:	d004      	beq.n	90013332 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
90013328:	6953      	ldr	r3, [r2, #20]
9001332a:	4620      	mov	r0, r4
9001332c:	4798      	blx	r3
9001332e:	b002      	add	sp, #8
90013330:	bd10      	pop	{r4, pc}
90013332:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
90013336:	466b      	mov	r3, sp
90013338:	6912      	ldr	r2, [r2, #16]
9001333a:	c903      	ldmia	r1, {r0, r1}
9001333c:	e883 0003 	stmia.w	r3, {r0, r1}
90013340:	4619      	mov	r1, r3
90013342:	4620      	mov	r0, r4
90013344:	4790      	blx	r2
90013346:	e7f2      	b.n	9001332e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
90013348:	240219e8 	.word	0x240219e8
9001334c:	240219f0 	.word	0x240219f0

90013350 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
90013350:	4b45      	ldr	r3, [pc, #276]	@ (90013468 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
90013352:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90013356:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90013358:	b08e      	sub	sp, #56	@ 0x38
9001335a:	881b      	ldrh	r3, [r3, #0]
9001335c:	4604      	mov	r4, r0
9001335e:	4293      	cmp	r3, r2
90013360:	d97e      	bls.n	90013460 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
90013362:	6808      	ldr	r0, [r1, #0]
90013364:	ab05      	add	r3, sp, #20
90013366:	6849      	ldr	r1, [r1, #4]
90013368:	4d40      	ldr	r5, [pc, #256]	@ (9001346c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
9001336a:	c303      	stmia	r3!, {r0, r1}
9001336c:	4611      	mov	r1, r2
9001336e:	6828      	ldr	r0, [r5, #0]
90013370:	f7f2 fb1a 	bl	900059a8 <_ZNK8touchgfx5Texts7getTextEt>
90013374:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
90013378:	2b00      	cmp	r3, #0
9001337a:	db11      	blt.n	900133a0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
9001337c:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
90013380:	2b00      	cmp	r3, #0
90013382:	db0d      	blt.n	900133a0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
90013384:	6c63      	ldr	r3, [r4, #68]	@ 0x44
90013386:	4298      	cmp	r0, r3
90013388:	d10a      	bne.n	900133a0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
9001338a:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
9001338e:	ab09      	add	r3, sp, #36	@ 0x24
90013390:	e892 0003 	ldmia.w	r2, {r0, r1}
90013394:	e883 0003 	stmia.w	r3, {r0, r1}
90013398:	4619      	mov	r1, r3
9001339a:	a805      	add	r0, sp, #20
9001339c:	f7fc fefc 	bl	90010198 <_ZN8touchgfx4RectaNERKS0_>
900133a0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
900133a4:	2b00      	cmp	r3, #0
900133a6:	dd5b      	ble.n	90013460 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
900133a8:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
900133ac:	2b00      	cmp	r3, #0
900133ae:	dd57      	ble.n	90013460 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
900133b0:	4f2f      	ldr	r7, [pc, #188]	@ (90013470 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
900133b2:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
900133b4:	683b      	ldr	r3, [r7, #0]
900133b6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
900133ba:	4b2e      	ldr	r3, [pc, #184]	@ (90013474 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
900133bc:	681b      	ldr	r3, [r3, #0]
900133be:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
900133c2:	2e00      	cmp	r6, #0
900133c4:	d04c      	beq.n	90013460 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
900133c6:	6823      	ldr	r3, [r4, #0]
900133c8:	4620      	mov	r0, r4
900133ca:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
900133ce:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
900133d0:	4798      	blx	r3
900133d2:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
900133d4:	683b      	ldr	r3, [r7, #0]
900133d6:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
900133da:	eb03 0342 	add.w	r3, r3, r2, lsl #1
900133de:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
900133e2:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
900133e6:	785b      	ldrb	r3, [r3, #1]
900133e8:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
900133ec:	f3c3 0381 	ubfx	r3, r3, #2, #2
900133f0:	6b21      	ldr	r1, [r4, #48]	@ 0x30
900133f2:	9609      	str	r6, [sp, #36]	@ 0x24
900133f4:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
900133f8:	4b1f      	ldr	r3, [pc, #124]	@ (90013478 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
900133fa:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
900133fe:	681b      	ldr	r3, [r3, #0]
90013400:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
90013404:	910b      	str	r1, [sp, #44]	@ 0x2c
90013406:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
9001340a:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
9001340e:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
90013412:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
90013416:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
9001341a:	b10a      	cbz	r2, 90013420 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
9001341c:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
9001341e:	b906      	cbnz	r6, 90013422 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
90013420:	689e      	ldr	r6, [r3, #8]
90013422:	af07      	add	r7, sp, #28
90013424:	4621      	mov	r1, r4
90013426:	4638      	mov	r0, r7
90013428:	f004 f956 	bl	900176d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001342c:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
9001342e:	6828      	ldr	r0, [r5, #0]
90013430:	f7f2 faba 	bl	900059a8 <_ZNK8touchgfx5Texts7getTextEt>
90013434:	6823      	ldr	r3, [r4, #0]
90013436:	4605      	mov	r5, r0
90013438:	4620      	mov	r0, r4
9001343a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
9001343c:	4798      	blx	r3
9001343e:	6823      	ldr	r3, [r4, #0]
90013440:	4680      	mov	r8, r0
90013442:	4620      	mov	r0, r4
90013444:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
90013448:	4798      	blx	r3
9001344a:	ab09      	add	r3, sp, #36	@ 0x24
9001344c:	9501      	str	r5, [sp, #4]
9001344e:	9300      	str	r3, [sp, #0]
90013450:	ab05      	add	r3, sp, #20
90013452:	e9cd 8002 	strd	r8, r0, [sp, #8]
90013456:	4630      	mov	r0, r6
90013458:	e897 0006 	ldmia.w	r7, {r1, r2}
9001345c:	f7f2 fa54 	bl	90005908 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90013460:	b00e      	add	sp, #56	@ 0x38
90013462:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90013466:	bf00      	nop
90013468:	240219e8 	.word	0x240219e8
9001346c:	240219f0 	.word	0x240219f0
90013470:	240219e4 	.word	0x240219e4
90013474:	240219ec 	.word	0x240219ec
90013478:	2402198c 	.word	0x2402198c

9001347c <_ZN8touchgfx8Drawable14setWidthHeightEss>:
9001347c:	b570      	push	{r4, r5, r6, lr}
9001347e:	6803      	ldr	r3, [r0, #0]
90013480:	4604      	mov	r4, r0
90013482:	4615      	mov	r5, r2
90013484:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90013486:	4798      	blx	r3
90013488:	6823      	ldr	r3, [r4, #0]
9001348a:	4629      	mov	r1, r5
9001348c:	4620      	mov	r0, r4
9001348e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90013490:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013494:	4718      	bx	r3
	...

90013498 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
90013498:	b538      	push	{r3, r4, r5, lr}
9001349a:	4b0e      	ldr	r3, [pc, #56]	@ (900134d4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
9001349c:	4604      	mov	r4, r0
9001349e:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
900134a0:	881b      	ldrh	r3, [r3, #0]
900134a2:	429a      	cmp	r2, r3
900134a4:	d214      	bcs.n	900134d0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
900134a6:	6803      	ldr	r3, [r0, #0]
900134a8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
900134aa:	4798      	blx	r3
900134ac:	6823      	ldr	r3, [r4, #0]
900134ae:	4605      	mov	r5, r0
900134b0:	4620      	mov	r0, r4
900134b2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
900134b4:	4798      	blx	r3
900134b6:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
900134ba:	b22d      	sxth	r5, r5
900134bc:	4601      	mov	r1, r0
900134be:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
900134c2:	bf06      	itte	eq
900134c4:	4602      	moveq	r2, r0
900134c6:	4629      	moveq	r1, r5
900134c8:	462a      	movne	r2, r5
900134ca:	4620      	mov	r0, r4
900134cc:	f7ff ffd6 	bl	9001347c <_ZN8touchgfx8Drawable14setWidthHeightEss>
900134d0:	bd38      	pop	{r3, r4, r5, pc}
900134d2:	bf00      	nop
900134d4:	240219e8 	.word	0x240219e8

900134d8 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
900134d8:	b530      	push	{r4, r5, lr}
900134da:	888b      	ldrh	r3, [r1, #4]
900134dc:	b085      	sub	sp, #20
900134de:	4604      	mov	r4, r0
900134e0:	8583      	strh	r3, [r0, #44]	@ 0x2c
900134e2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
900134e6:	b923      	cbnz	r3, 900134f2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
900134e8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
900134ec:	b90b      	cbnz	r3, 900134f2 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
900134ee:	f7ff ffd3 	bl	90013498 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
900134f2:	6823      	ldr	r3, [r4, #0]
900134f4:	466d      	mov	r5, sp
900134f6:	4621      	mov	r1, r4
900134f8:	343c      	adds	r4, #60	@ 0x3c
900134fa:	4628      	mov	r0, r5
900134fc:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
90013500:	4798      	blx	r3
90013502:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
90013506:	e884 0007 	stmia.w	r4, {r0, r1, r2}
9001350a:	b005      	add	sp, #20
9001350c:	bd30      	pop	{r4, r5, pc}

9001350e <_ZNK8touchgfx3Box12getSolidRectEv>:
9001350e:	2300      	movs	r3, #0
90013510:	8083      	strh	r3, [r0, #4]
90013512:	80c3      	strh	r3, [r0, #6]
90013514:	8003      	strh	r3, [r0, #0]
90013516:	8043      	strh	r3, [r0, #2]
90013518:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
9001351c:	2bff      	cmp	r3, #255	@ 0xff
9001351e:	bf01      	itttt	eq
90013520:	890b      	ldrheq	r3, [r1, #8]
90013522:	8083      	strheq	r3, [r0, #4]
90013524:	894b      	ldrheq	r3, [r1, #10]
90013526:	80c3      	strheq	r3, [r0, #6]
90013528:	4770      	bx	lr
	...

9001352c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
9001352c:	b537      	push	{r0, r1, r2, r4, r5, lr}
9001352e:	4604      	mov	r4, r0
90013530:	466b      	mov	r3, sp
90013532:	6808      	ldr	r0, [r1, #0]
90013534:	6849      	ldr	r1, [r1, #4]
90013536:	c303      	stmia	r3!, {r0, r1}
90013538:	6823      	ldr	r3, [r4, #0]
9001353a:	4669      	mov	r1, sp
9001353c:	4620      	mov	r0, r4
9001353e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013540:	4798      	blx	r3
90013542:	4b08      	ldr	r3, [pc, #32]	@ (90013564 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
90013544:	681b      	ldr	r3, [r3, #0]
90013546:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
9001354a:	b10a      	cbz	r2, 90013550 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
9001354c:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
9001354e:	b900      	cbnz	r0, 90013552 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
90013550:	6898      	ldr	r0, [r3, #8]
90013552:	6803      	ldr	r3, [r0, #0]
90013554:	4669      	mov	r1, sp
90013556:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
90013558:	6a1d      	ldr	r5, [r3, #32]
9001355a:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
9001355e:	47a8      	blx	r5
90013560:	b003      	add	sp, #12
90013562:	bd30      	pop	{r4, r5, pc}
90013564:	2402198c 	.word	0x2402198c

90013568 <_ZN8touchgfx3BoxD1Ev>:
90013568:	4770      	bx	lr

9001356a <_ZN8touchgfx3BoxD0Ev>:
9001356a:	b510      	push	{r4, lr}
9001356c:	4604      	mov	r4, r0
9001356e:	212c      	movs	r1, #44	@ 0x2c
90013570:	f015 fc84 	bl	90028e7c <_ZdlPvj>
90013574:	4620      	mov	r0, r4
90013576:	bd10      	pop	{r4, pc}

90013578 <_ZNK8touchgfx3Box17invalidateContentEv>:
90013578:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
9001357c:	b12a      	cbz	r2, 9001358a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
9001357e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90013582:	b112      	cbz	r2, 9001358a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
90013584:	6803      	ldr	r3, [r0, #0]
90013586:	695b      	ldr	r3, [r3, #20]
90013588:	4718      	bx	r3
9001358a:	4770      	bx	lr

9001358c <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
9001358c:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
90013590:	4770      	bx	lr

90013592 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
90013592:	b570      	push	{r4, r5, r6, lr}
90013594:	880b      	ldrh	r3, [r1, #0]
90013596:	4605      	mov	r5, r0
90013598:	4604      	mov	r4, r0
9001359a:	85c3      	strh	r3, [r0, #46]	@ 0x2e
9001359c:	8813      	ldrh	r3, [r2, #0]
9001359e:	f825 3f30 	strh.w	r3, [r5, #48]!
900135a2:	4628      	mov	r0, r5
900135a4:	f006 fbbc 	bl	90019d20 <_ZNK8touchgfx6Bitmap8getWidthEv>
900135a8:	4606      	mov	r6, r0
900135aa:	4628      	mov	r0, r5
900135ac:	f006 fbec 	bl	90019d88 <_ZNK8touchgfx6Bitmap9getHeightEv>
900135b0:	6823      	ldr	r3, [r4, #0]
900135b2:	4605      	mov	r5, r0
900135b4:	4631      	mov	r1, r6
900135b6:	4620      	mov	r0, r4
900135b8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
900135ba:	4798      	blx	r3
900135bc:	6823      	ldr	r3, [r4, #0]
900135be:	4629      	mov	r1, r5
900135c0:	4620      	mov	r0, r4
900135c2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900135c4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900135c8:	4718      	bx	r3

900135ca <_ZN8touchgfx14AbstractButton13executeActionEv>:
900135ca:	b510      	push	{r4, lr}
900135cc:	4604      	mov	r4, r0
900135ce:	6a80      	ldr	r0, [r0, #40]	@ 0x28
900135d0:	b150      	cbz	r0, 900135e8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
900135d2:	6803      	ldr	r3, [r0, #0]
900135d4:	68db      	ldr	r3, [r3, #12]
900135d6:	4798      	blx	r3
900135d8:	b130      	cbz	r0, 900135e8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
900135da:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
900135dc:	4621      	mov	r1, r4
900135de:	6803      	ldr	r3, [r0, #0]
900135e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900135e4:	689b      	ldr	r3, [r3, #8]
900135e6:	4718      	bx	r3
900135e8:	bd10      	pop	{r4, pc}

900135ea <_ZNK8touchgfx6Button12getSolidRectEv>:
900135ea:	b510      	push	{r4, lr}
900135ec:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
900135f0:	4604      	mov	r4, r0
900135f2:	2bff      	cmp	r3, #255	@ 0xff
900135f4:	d006      	beq.n	90013604 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
900135f6:	2300      	movs	r3, #0
900135f8:	8003      	strh	r3, [r0, #0]
900135fa:	8043      	strh	r3, [r0, #2]
900135fc:	8083      	strh	r3, [r0, #4]
900135fe:	80c3      	strh	r3, [r0, #6]
90013600:	4620      	mov	r0, r4
90013602:	bd10      	pop	{r4, pc}
90013604:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
90013608:	b11b      	cbz	r3, 90013612 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
9001360a:	3130      	adds	r1, #48	@ 0x30
9001360c:	f006 fbf0 	bl	90019df0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90013610:	e7f6      	b.n	90013600 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
90013612:	312e      	adds	r1, #46	@ 0x2e
90013614:	e7fa      	b.n	9001360c <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

90013618 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
90013618:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001361c:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
90013620:	b08a      	sub	sp, #40	@ 0x28
90013622:	4604      	mov	r4, r0
90013624:	4688      	mov	r8, r1
90013626:	2b00      	cmp	r3, #0
90013628:	d066      	beq.n	900136f8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
9001362a:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
9001362c:	a805      	add	r0, sp, #20
9001362e:	f8ad 3014 	strh.w	r3, [sp, #20]
90013632:	f006 fb75 	bl	90019d20 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013636:	4607      	mov	r7, r0
90013638:	a805      	add	r0, sp, #20
9001363a:	f006 fba5 	bl	90019d88 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001363e:	f9b8 6000 	ldrsh.w	r6, [r8]
90013642:	f8b8 2004 	ldrh.w	r2, [r8, #4]
90013646:	2300      	movs	r3, #0
90013648:	4432      	add	r2, r6
9001364a:	9306      	str	r3, [sp, #24]
9001364c:	b292      	uxth	r2, r2
9001364e:	fa0f fc82 	sxth.w	ip, r2
90013652:	459c      	cmp	ip, r3
90013654:	dd52      	ble.n	900136fc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90013656:	42b7      	cmp	r7, r6
90013658:	dd50      	ble.n	900136fc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
9001365a:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
9001365e:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90013662:	442b      	add	r3, r5
90013664:	b29b      	uxth	r3, r3
90013666:	b219      	sxth	r1, r3
90013668:	2900      	cmp	r1, #0
9001366a:	dd47      	ble.n	900136fc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
9001366c:	42a8      	cmp	r0, r5
9001366e:	dd45      	ble.n	900136fc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
90013670:	4567      	cmp	r7, ip
90013672:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
90013676:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
9001367a:	bfb8      	it	lt
9001367c:	b2ba      	uxthlt	r2, r7
9001367e:	4288      	cmp	r0, r1
90013680:	f8ad 6018 	strh.w	r6, [sp, #24]
90013684:	bfb8      	it	lt
90013686:	b283      	uxthlt	r3, r0
90013688:	1b92      	subs	r2, r2, r6
9001368a:	f8ad 501a 	strh.w	r5, [sp, #26]
9001368e:	1b5b      	subs	r3, r3, r5
90013690:	f8ad 201c 	strh.w	r2, [sp, #28]
90013694:	f8ad 301e 	strh.w	r3, [sp, #30]
90013698:	f8bd 2014 	ldrh.w	r2, [sp, #20]
9001369c:	f64f 73ff 	movw	r3, #65535	@ 0xffff
900136a0:	429a      	cmp	r2, r3
900136a2:	d026      	beq.n	900136f2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
900136a4:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
900136a8:	2b00      	cmp	r3, #0
900136aa:	dd22      	ble.n	900136f2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
900136ac:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
900136b0:	2b00      	cmp	r3, #0
900136b2:	dd1e      	ble.n	900136f2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
900136b4:	2300      	movs	r3, #0
900136b6:	a908      	add	r1, sp, #32
900136b8:	4620      	mov	r0, r4
900136ba:	e9cd 3308 	strd	r3, r3, [sp, #32]
900136be:	6823      	ldr	r3, [r4, #0]
900136c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900136c2:	4798      	blx	r3
900136c4:	4b0f      	ldr	r3, [pc, #60]	@ (90013704 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
900136c6:	681b      	ldr	r3, [r3, #0]
900136c8:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900136cc:	b10a      	cbz	r2, 900136d2 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
900136ce:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900136d0:	b900      	cbnz	r0, 900136d4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
900136d2:	6898      	ldr	r0, [r3, #8]
900136d4:	2501      	movs	r5, #1
900136d6:	6801      	ldr	r1, [r0, #0]
900136d8:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
900136dc:	9502      	str	r5, [sp, #8]
900136de:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
900136e2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
900136e6:	9401      	str	r4, [sp, #4]
900136e8:	ac06      	add	r4, sp, #24
900136ea:	9400      	str	r4, [sp, #0]
900136ec:	688c      	ldr	r4, [r1, #8]
900136ee:	a905      	add	r1, sp, #20
900136f0:	47a0      	blx	r4
900136f2:	b00a      	add	sp, #40	@ 0x28
900136f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900136f8:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
900136fa:	e797      	b.n	9001362c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
900136fc:	2300      	movs	r3, #0
900136fe:	9307      	str	r3, [sp, #28]
90013700:	e7ca      	b.n	90013698 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
90013702:	bf00      	nop
90013704:	2402198c 	.word	0x2402198c

90013708 <_ZNK8touchgfx6Button17invalidateContentEv>:
90013708:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
9001370c:	b12a      	cbz	r2, 9001371a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
9001370e:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
90013712:	b112      	cbz	r2, 9001371a <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
90013714:	6803      	ldr	r3, [r0, #0]
90013716:	695b      	ldr	r3, [r3, #20]
90013718:	4718      	bx	r3
9001371a:	4770      	bx	lr

9001371c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
9001371c:	4b30      	ldr	r3, [pc, #192]	@ (900137e0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
9001371e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90013722:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
90013724:	b08d      	sub	sp, #52	@ 0x34
90013726:	881b      	ldrh	r3, [r3, #0]
90013728:	4604      	mov	r4, r0
9001372a:	460f      	mov	r7, r1
9001372c:	4293      	cmp	r3, r2
9001372e:	d954      	bls.n	900137da <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90013730:	4b2c      	ldr	r3, [pc, #176]	@ (900137e4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
90013732:	6819      	ldr	r1, [r3, #0]
90013734:	eb01 0342 	add.w	r3, r1, r2, lsl #1
90013738:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
9001373c:	4a2a      	ldr	r2, [pc, #168]	@ (900137e8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
9001373e:	6812      	ldr	r2, [r2, #0]
90013740:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
90013744:	2900      	cmp	r1, #0
90013746:	d048      	beq.n	900137da <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
90013748:	785a      	ldrb	r2, [r3, #1]
9001374a:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
9001374e:	f3c2 0801 	ubfx	r8, r2, #0, #2
90013752:	f3c2 0281 	ubfx	r2, r2, #2, #2
90013756:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
9001375a:	4b24      	ldr	r3, [pc, #144]	@ (900137ec <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
9001375c:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
90013760:	681a      	ldr	r2, [r3, #0]
90013762:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
90013766:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
9001376a:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
9001376e:	6b26      	ldr	r6, [r4, #48]	@ 0x30
90013770:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
90013774:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
90013778:	9107      	str	r1, [sp, #28]
9001377a:	f88d 8020 	strb.w	r8, [sp, #32]
9001377e:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
90013782:	9609      	str	r6, [sp, #36]	@ 0x24
90013784:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
90013788:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
9001378c:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
90013790:	b10b      	cbz	r3, 90013796 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
90013792:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
90013794:	b905      	cbnz	r5, 90013798 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
90013796:	6895      	ldr	r5, [r2, #8]
90013798:	ae05      	add	r6, sp, #20
9001379a:	4621      	mov	r1, r4
9001379c:	4630      	mov	r0, r6
9001379e:	f003 ff9b 	bl	900176d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900137a2:	4b13      	ldr	r3, [pc, #76]	@ (900137f0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
900137a4:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
900137a6:	6818      	ldr	r0, [r3, #0]
900137a8:	f7f2 f8fe 	bl	900059a8 <_ZNK8touchgfx5Texts7getTextEt>
900137ac:	6823      	ldr	r3, [r4, #0]
900137ae:	4680      	mov	r8, r0
900137b0:	4620      	mov	r0, r4
900137b2:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
900137b4:	4798      	blx	r3
900137b6:	6823      	ldr	r3, [r4, #0]
900137b8:	4681      	mov	r9, r0
900137ba:	4620      	mov	r0, r4
900137bc:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
900137c0:	4798      	blx	r3
900137c2:	ab07      	add	r3, sp, #28
900137c4:	f8cd 8004 	str.w	r8, [sp, #4]
900137c8:	9300      	str	r3, [sp, #0]
900137ca:	463b      	mov	r3, r7
900137cc:	e9cd 9002 	strd	r9, r0, [sp, #8]
900137d0:	4628      	mov	r0, r5
900137d2:	e896 0006 	ldmia.w	r6, {r1, r2}
900137d6:	f7f2 f897 	bl	90005908 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
900137da:	b00d      	add	sp, #52	@ 0x34
900137dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900137e0:	240219e8 	.word	0x240219e8
900137e4:	240219e4 	.word	0x240219e4
900137e8:	240219ec 	.word	0x240219ec
900137ec:	2402198c 	.word	0x2402198c
900137f0:	240219f0 	.word	0x240219f0

900137f4 <_ZN8touchgfx5ImageD1Ev>:
900137f4:	4770      	bx	lr

900137f6 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
900137f6:	b570      	push	{r4, r5, r6, lr}
900137f8:	880b      	ldrh	r3, [r1, #0]
900137fa:	460d      	mov	r5, r1
900137fc:	4604      	mov	r4, r0
900137fe:	84c3      	strh	r3, [r0, #38]	@ 0x26
90013800:	4608      	mov	r0, r1
90013802:	f006 fa8d 	bl	90019d20 <_ZNK8touchgfx6Bitmap8getWidthEv>
90013806:	4606      	mov	r6, r0
90013808:	4628      	mov	r0, r5
9001380a:	f006 fabd 	bl	90019d88 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001380e:	6823      	ldr	r3, [r4, #0]
90013810:	4605      	mov	r5, r0
90013812:	4631      	mov	r1, r6
90013814:	4620      	mov	r0, r4
90013816:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90013818:	4798      	blx	r3
9001381a:	6823      	ldr	r3, [r4, #0]
9001381c:	4629      	mov	r1, r5
9001381e:	4620      	mov	r0, r4
90013820:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90013822:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90013826:	4718      	bx	r3

90013828 <_ZN8touchgfx5ImageD0Ev>:
90013828:	b510      	push	{r4, lr}
9001382a:	4604      	mov	r4, r0
9001382c:	212c      	movs	r1, #44	@ 0x2c
9001382e:	f015 fb25 	bl	90028e7c <_ZdlPvj>
90013832:	4620      	mov	r0, r4
90013834:	bd10      	pop	{r4, pc}

90013836 <_ZNK8touchgfx5Image12getSolidRectEv>:
90013836:	b510      	push	{r4, lr}
90013838:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
9001383c:	4604      	mov	r4, r0
9001383e:	2bff      	cmp	r3, #255	@ 0xff
90013840:	d006      	beq.n	90013850 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
90013842:	2300      	movs	r3, #0
90013844:	8003      	strh	r3, [r0, #0]
90013846:	8043      	strh	r3, [r0, #2]
90013848:	8083      	strh	r3, [r0, #4]
9001384a:	80c3      	strh	r3, [r0, #6]
9001384c:	4620      	mov	r0, r4
9001384e:	bd10      	pop	{r4, pc}
90013850:	3126      	adds	r1, #38	@ 0x26
90013852:	f006 facd 	bl	90019df0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
90013856:	e7f9      	b.n	9001384c <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

90013858 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
90013858:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9001385c:	4604      	mov	r4, r0
9001385e:	b088      	sub	sp, #32
90013860:	2500      	movs	r5, #0
90013862:	460f      	mov	r7, r1
90013864:	f854 3b26 	ldr.w	r3, [r4], #38
90013868:	a904      	add	r1, sp, #16
9001386a:	4606      	mov	r6, r0
9001386c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001386e:	e9cd 5504 	strd	r5, r5, [sp, #16]
90013872:	4798      	blx	r3
90013874:	4620      	mov	r0, r4
90013876:	f006 fa53 	bl	90019d20 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001387a:	4680      	mov	r8, r0
9001387c:	4620      	mov	r0, r4
9001387e:	f006 fa83 	bl	90019d88 <_ZNK8touchgfx6Bitmap9getHeightEv>
90013882:	9506      	str	r5, [sp, #24]
90013884:	ad06      	add	r5, sp, #24
90013886:	f8ad 001e 	strh.w	r0, [sp, #30]
9001388a:	4639      	mov	r1, r7
9001388c:	f8ad 801c 	strh.w	r8, [sp, #28]
90013890:	4628      	mov	r0, r5
90013892:	f7fc fc81 	bl	90010198 <_ZN8touchgfx4RectaNERKS0_>
90013896:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001389a:	2b00      	cmp	r3, #0
9001389c:	dd19      	ble.n	900138d2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
9001389e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
900138a2:	2b00      	cmp	r3, #0
900138a4:	dd15      	ble.n	900138d2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
900138a6:	4b0c      	ldr	r3, [pc, #48]	@ (900138d8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
900138a8:	681b      	ldr	r3, [r3, #0]
900138aa:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900138ae:	b10a      	cbz	r2, 900138b4 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
900138b0:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
900138b2:	b900      	cbnz	r0, 900138b6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
900138b4:	6898      	ldr	r0, [r3, #8]
900138b6:	2701      	movs	r7, #1
900138b8:	6801      	ldr	r1, [r0, #0]
900138ba:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
900138be:	9702      	str	r7, [sp, #8]
900138c0:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
900138c4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
900138c8:	e9cd 5600 	strd	r5, r6, [sp]
900138cc:	688d      	ldr	r5, [r1, #8]
900138ce:	4621      	mov	r1, r4
900138d0:	47a8      	blx	r5
900138d2:	b008      	add	sp, #32
900138d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900138d8:	2402198c 	.word	0x2402198c

900138dc <_ZN8touchgfx15ButtonWithLabelD1Ev>:
900138dc:	4770      	bx	lr

900138de <_ZN8touchgfx15ButtonWithLabelD0Ev>:
900138de:	b510      	push	{r4, lr}
900138e0:	4604      	mov	r4, r0
900138e2:	2148      	movs	r1, #72	@ 0x48
900138e4:	f015 faca 	bl	90028e7c <_ZdlPvj>
900138e8:	4620      	mov	r0, r4
900138ea:	bd10      	pop	{r4, pc}

900138ec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
900138ec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900138f0:	b08d      	sub	sp, #52	@ 0x34
900138f2:	4604      	mov	r4, r0
900138f4:	460f      	mov	r7, r1
900138f6:	f7ff fe8f 	bl	90013618 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
900138fa:	4a55      	ldr	r2, [pc, #340]	@ (90013a50 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
900138fc:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
900138fe:	8812      	ldrh	r2, [r2, #0]
90013900:	429a      	cmp	r2, r3
90013902:	f240 8082 	bls.w	90013a0a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90013906:	4d53      	ldr	r5, [pc, #332]	@ (90013a54 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
90013908:	682a      	ldr	r2, [r5, #0]
9001390a:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
9001390e:	4b52      	ldr	r3, [pc, #328]	@ (90013a58 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
90013910:	681b      	ldr	r3, [r3, #0]
90013912:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90013916:	2200      	movs	r2, #0
90013918:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	@ 0x46
9001391c:	e9cd 2203 	strd	r2, r2, [sp, #12]
90013920:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
90013924:	2a03      	cmp	r2, #3
90013926:	d811      	bhi.n	9001394c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
90013928:	e8df f002 	tbb	[pc, r2]
9001392c:	89727902 	.word	0x89727902
90013930:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90013934:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90013938:	1ad2      	subs	r2, r2, r3
9001393a:	2002      	movs	r0, #2
9001393c:	f8ad 1010 	strh.w	r1, [sp, #16]
90013940:	f8ad 3012 	strh.w	r3, [sp, #18]
90013944:	fb92 f2f0 	sdiv	r2, r2, r0
90013948:	f8ad 200e 	strh.w	r2, [sp, #14]
9001394c:	f10d 080c 	add.w	r8, sp, #12
90013950:	f10d 0914 	add.w	r9, sp, #20
90013954:	e898 0003 	ldmia.w	r8, {r0, r1}
90013958:	e889 0003 	stmia.w	r9, {r0, r1}
9001395c:	4639      	mov	r1, r7
9001395e:	4648      	mov	r0, r9
90013960:	f7fc fc1a 	bl	90010198 <_ZN8touchgfx4RectaNERKS0_>
90013964:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90013968:	2b00      	cmp	r3, #0
9001396a:	dd4e      	ble.n	90013a0a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
9001396c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
90013970:	2b00      	cmp	r3, #0
90013972:	dd4a      	ble.n	90013a0a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
90013974:	f8bd 3014 	ldrh.w	r3, [sp, #20]
90013978:	4641      	mov	r1, r8
9001397a:	f8bd 200c 	ldrh.w	r2, [sp, #12]
9001397e:	4620      	mov	r0, r4
90013980:	1a9b      	subs	r3, r3, r2
90013982:	f8bd 200e 	ldrh.w	r2, [sp, #14]
90013986:	f8ad 3014 	strh.w	r3, [sp, #20]
9001398a:	f8bd 3016 	ldrh.w	r3, [sp, #22]
9001398e:	1a9b      	subs	r3, r3, r2
90013990:	f8ad 3016 	strh.w	r3, [sp, #22]
90013994:	6823      	ldr	r3, [r4, #0]
90013996:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90013998:	4798      	blx	r3
9001399a:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
9001399e:	2b00      	cmp	r3, #0
900139a0:	d053      	beq.n	90013a4a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
900139a2:	6c22      	ldr	r2, [r4, #64]	@ 0x40
900139a4:	8f21      	ldrh	r1, [r4, #56]	@ 0x38
900139a6:	682b      	ldr	r3, [r5, #0]
900139a8:	f894 0032 	ldrb.w	r0, [r4, #50]	@ 0x32
900139ac:	eb03 0341 	add.w	r3, r3, r1, lsl #1
900139b0:	f894 4044 	ldrb.w	r4, [r4, #68]	@ 0x44
900139b4:	785b      	ldrb	r3, [r3, #1]
900139b6:	9209      	str	r2, [sp, #36]	@ 0x24
900139b8:	f3c3 0501 	ubfx	r5, r3, #0, #2
900139bc:	f3c3 0381 	ubfx	r3, r3, #2, #2
900139c0:	9607      	str	r6, [sp, #28]
900139c2:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
900139c6:	2300      	movs	r3, #0
900139c8:	f88d 5020 	strb.w	r5, [sp, #32]
900139cc:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
900139d0:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
900139d4:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
900139d8:	4b20      	ldr	r3, [pc, #128]	@ (90013a5c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
900139da:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
900139de:	681b      	ldr	r3, [r3, #0]
900139e0:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
900139e4:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
900139e8:	b10a      	cbz	r2, 900139ee <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
900139ea:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
900139ec:	b904      	cbnz	r4, 900139f0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
900139ee:	689c      	ldr	r4, [r3, #8]
900139f0:	4b1b      	ldr	r3, [pc, #108]	@ (90013a60 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
900139f2:	6818      	ldr	r0, [r3, #0]
900139f4:	f7f1 ffd8 	bl	900059a8 <_ZNK8touchgfx5Texts7getTextEt>
900139f8:	ab07      	add	r3, sp, #28
900139fa:	9001      	str	r0, [sp, #4]
900139fc:	4620      	mov	r0, r4
900139fe:	9300      	str	r3, [sp, #0]
90013a00:	464b      	mov	r3, r9
90013a02:	e898 0006 	ldmia.w	r8, {r1, r2}
90013a06:	f7f1 ff7f 	bl	90005908 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
90013a0a:	b00d      	add	sp, #52	@ 0x34
90013a0c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90013a10:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
90013a14:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
90013a18:	1ad2      	subs	r2, r2, r3
90013a1a:	3201      	adds	r2, #1
90013a1c:	e78d      	b.n	9001393a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
90013a1e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90013a22:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
90013a26:	1ad2      	subs	r2, r2, r3
90013a28:	3201      	adds	r2, #1
90013a2a:	2002      	movs	r0, #2
90013a2c:	f8ad 3010 	strh.w	r3, [sp, #16]
90013a30:	f8ad 1012 	strh.w	r1, [sp, #18]
90013a34:	fb92 f2f0 	sdiv	r2, r2, r0
90013a38:	f8ad 200c 	strh.w	r2, [sp, #12]
90013a3c:	e786      	b.n	9001394c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
90013a3e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
90013a42:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
90013a46:	1ad2      	subs	r2, r2, r3
90013a48:	e7ef      	b.n	90013a2a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
90013a4a:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
90013a4c:	e7aa      	b.n	900139a4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
90013a4e:	bf00      	nop
90013a50:	240219e8 	.word	0x240219e8
90013a54:	240219e4 	.word	0x240219e4
90013a58:	240219ec 	.word	0x240219ec
90013a5c:	2402198c 	.word	0x2402198c
90013a60:	240219f0 	.word	0x240219f0

90013a64 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
90013a64:	2101      	movs	r1, #1
90013a66:	2200      	movs	r2, #0
90013a68:	b510      	push	{r4, lr}
90013a6a:	4c13      	ldr	r4, [pc, #76]	@ (90013ab8 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
90013a6c:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
90013a70:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
90013a74:	f64f 71ff 	movw	r1, #65535	@ 0xffff
90013a78:	6004      	str	r4, [r0, #0]
90013a7a:	4c10      	ldr	r4, [pc, #64]	@ (90013abc <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
90013a7c:	8082      	strh	r2, [r0, #4]
90013a7e:	80c2      	strh	r2, [r0, #6]
90013a80:	8102      	strh	r2, [r0, #8]
90013a82:	8142      	strh	r2, [r0, #10]
90013a84:	8182      	strh	r2, [r0, #12]
90013a86:	81c2      	strh	r2, [r0, #14]
90013a88:	8202      	strh	r2, [r0, #16]
90013a8a:	8242      	strh	r2, [r0, #18]
90013a8c:	61c2      	str	r2, [r0, #28]
90013a8e:	8402      	strh	r2, [r0, #32]
90013a90:	8442      	strh	r2, [r0, #34]	@ 0x22
90013a92:	6282      	str	r2, [r0, #40]	@ 0x28
90013a94:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
90013a98:	85c1      	strh	r1, [r0, #46]	@ 0x2e
90013a9a:	8601      	strh	r1, [r0, #48]	@ 0x30
90013a9c:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
90013aa0:	6344      	str	r4, [r0, #52]	@ 0x34
90013aa2:	8701      	strh	r1, [r0, #56]	@ 0x38
90013aa4:	f880 2044 	strb.w	r2, [r0, #68]	@ 0x44
90013aa8:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
90013aac:	e9c0 2205 	strd	r2, r2, [r0, #20]
90013ab0:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
90013ab4:	bd10      	pop	{r4, pc}
90013ab6:	bf00      	nop
90013ab8:	9002d50c 	.word	0x9002d50c
90013abc:	9002c708 	.word	0x9002c708

90013ac0 <_ZN8touchgfx7OutlineD1Ev>:
90013ac0:	4770      	bx	lr

90013ac2 <_ZN8touchgfx7OutlineD0Ev>:
90013ac2:	b510      	push	{r4, lr}
90013ac4:	4604      	mov	r4, r0
90013ac6:	2130      	movs	r1, #48	@ 0x30
90013ac8:	f015 f9d8 	bl	90028e7c <_ZdlPvj>
90013acc:	4620      	mov	r0, r4
90013ace:	bd10      	pop	{r4, pc}

90013ad0 <_ZN8touchgfx7Outline5resetEv>:
90013ad0:	b510      	push	{r4, lr}
90013ad2:	4604      	mov	r4, r0
90013ad4:	f000 fe72 	bl	900147bc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
90013ad8:	60e0      	str	r0, [r4, #12]
90013ada:	f000 fe75 	bl	900147c8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
90013ade:	68e3      	ldr	r3, [r4, #12]
90013ae0:	08c0      	lsrs	r0, r0, #3
90013ae2:	2200      	movs	r2, #0
90013ae4:	f647 71ff 	movw	r1, #32767	@ 0x7fff
90013ae8:	6123      	str	r3, [r4, #16]
90013aea:	3801      	subs	r0, #1
90013aec:	60a2      	str	r2, [r4, #8]
90013aee:	6060      	str	r0, [r4, #4]
90013af0:	8019      	strh	r1, [r3, #0]
90013af2:	8059      	strh	r1, [r3, #2]
90013af4:	809a      	strh	r2, [r3, #4]
90013af6:	80da      	strh	r2, [r3, #6]
90013af8:	6a63      	ldr	r3, [r4, #36]	@ 0x24
90013afa:	f023 0301 	bic.w	r3, r3, #1
90013afe:	f043 0302 	orr.w	r3, r3, #2
90013b02:	6263      	str	r3, [r4, #36]	@ 0x24
90013b04:	bd10      	pop	{r4, pc}
	...

90013b08 <_ZN8touchgfx7OutlineC1Ev>:
90013b08:	4b0a      	ldr	r3, [pc, #40]	@ (90013b34 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
90013b0a:	b510      	push	{r4, lr}
90013b0c:	6003      	str	r3, [r0, #0]
90013b0e:	2300      	movs	r3, #0
90013b10:	4604      	mov	r4, r0
90013b12:	6243      	str	r3, [r0, #36]	@ 0x24
90013b14:	e9c0 3301 	strd	r3, r3, [r0, #4]
90013b18:	e9c0 3303 	strd	r3, r3, [r0, #12]
90013b1c:	e9c0 3305 	strd	r3, r3, [r0, #20]
90013b20:	e9c0 3307 	strd	r3, r3, [r0, #28]
90013b24:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
90013b28:	e9c0 330a 	strd	r3, r3, [r0, #40]	@ 0x28
90013b2c:	f7ff ffd0 	bl	90013ad0 <_ZN8touchgfx7Outline5resetEv>
90013b30:	4620      	mov	r0, r4
90013b32:	bd10      	pop	{r4, pc}
90013b34:	9002d580 	.word	0x9002d580

90013b38 <_ZN8touchgfx7Outline10renderLineEiiii>:
90013b38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90013b3c:	b093      	sub	sp, #76	@ 0x4c
90013b3e:	1156      	asrs	r6, r2, #5
90013b40:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
90013b42:	9305      	str	r3, [sp, #20]
90013b44:	1153      	asrs	r3, r2, #5
90013b46:	f004 051f 	and.w	r5, r4, #31
90013b4a:	9303      	str	r3, [sp, #12]
90013b4c:	1163      	asrs	r3, r4, #5
90013b4e:	9504      	str	r5, [sp, #16]
90013b50:	1165      	asrs	r5, r4, #5
90013b52:	9306      	str	r3, [sp, #24]
90013b54:	f002 031f 	and.w	r3, r2, #31
90013b58:	42ae      	cmp	r6, r5
90013b5a:	f040 80f4 	bne.w	90013d46 <_ZN8touchgfx7Outline10renderLineEiiii+0x20e>
90013b5e:	9c04      	ldr	r4, [sp, #16]
90013b60:	9a05      	ldr	r2, [sp, #20]
90013b62:	42a3      	cmp	r3, r4
90013b64:	ea4f 1e62 	mov.w	lr, r2, asr #5
90013b68:	6902      	ldr	r2, [r0, #16]
90013b6a:	d125      	bne.n	90013bb8 <_ZN8touchgfx7Outline10renderLineEiiii+0x80>
90013b6c:	f9b2 3000 	ldrsh.w	r3, [r2]
90013b70:	459e      	cmp	lr, r3
90013b72:	d103      	bne.n	90013b7c <_ZN8touchgfx7Outline10renderLineEiiii+0x44>
90013b74:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90013b78:	429e      	cmp	r6, r3
90013b7a:	d035      	beq.n	90013be8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013b7c:	88d1      	ldrh	r1, [r2, #6]
90013b7e:	8893      	ldrh	r3, [r2, #4]
90013b80:	430b      	orrs	r3, r1
90013b82:	d010      	beq.n	90013ba6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90013b84:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
90013b88:	2b00      	cmp	r3, #0
90013b8a:	db0c      	blt.n	90013ba6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90013b8c:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
90013b8e:	428b      	cmp	r3, r1
90013b90:	da09      	bge.n	90013ba6 <_ZN8touchgfx7Outline10renderLineEiiii+0x6e>
90013b92:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90013b96:	428b      	cmp	r3, r1
90013b98:	f103 0301 	add.w	r3, r3, #1
90013b9c:	bf38      	it	cc
90013b9e:	3208      	addcc	r2, #8
90013ba0:	6083      	str	r3, [r0, #8]
90013ba2:	bf38      	it	cc
90013ba4:	6102      	strcc	r2, [r0, #16]
90013ba6:	6903      	ldr	r3, [r0, #16]
90013ba8:	9a03      	ldr	r2, [sp, #12]
90013baa:	f8a3 e000 	strh.w	lr, [r3]
90013bae:	805a      	strh	r2, [r3, #2]
90013bb0:	2200      	movs	r2, #0
90013bb2:	809a      	strh	r2, [r3, #4]
90013bb4:	80da      	strh	r2, [r3, #6]
90013bb6:	e017      	b.n	90013be8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013bb8:	9c05      	ldr	r4, [sp, #20]
90013bba:	114e      	asrs	r6, r1, #5
90013bbc:	f001 0c1f 	and.w	ip, r1, #31
90013bc0:	f8b2 8004 	ldrh.w	r8, [r2, #4]
90013bc4:	f004 041f 	and.w	r4, r4, #31
90013bc8:	4576      	cmp	r6, lr
90013bca:	f8b2 a006 	ldrh.w	sl, [r2, #6]
90013bce:	9402      	str	r4, [sp, #8]
90013bd0:	9c04      	ldr	r4, [sp, #16]
90013bd2:	eba4 0403 	sub.w	r4, r4, r3
90013bd6:	d10a      	bne.n	90013bee <_ZN8touchgfx7Outline10renderLineEiiii+0xb6>
90013bd8:	9b02      	ldr	r3, [sp, #8]
90013bda:	44a0      	add	r8, r4
90013bdc:	449c      	add	ip, r3
90013bde:	f8a2 8004 	strh.w	r8, [r2, #4]
90013be2:	fb04 a40c 	mla	r4, r4, ip, sl
90013be6:	80d4      	strh	r4, [r2, #6]
90013be8:	b013      	add	sp, #76	@ 0x4c
90013bea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90013bee:	9d05      	ldr	r5, [sp, #20]
90013bf0:	1a69      	subs	r1, r5, r1
90013bf2:	bf51      	iteee	pl
90013bf4:	f1cc 0520 	rsbpl	r5, ip, #32
90013bf8:	fb04 f40c 	mulmi.w	r4, r4, ip
90013bfc:	4249      	negmi	r1, r1
90013bfe:	2500      	movmi	r5, #0
90013c00:	bf5d      	ittte	pl
90013c02:	436c      	mulpl	r4, r5
90013c04:	2520      	movpl	r5, #32
90013c06:	f04f 0901 	movpl.w	r9, #1
90013c0a:	f04f 39ff 	movmi.w	r9, #4294967295
90013c0e:	9501      	str	r5, [sp, #4]
90013c10:	9f01      	ldr	r7, [sp, #4]
90013c12:	444e      	add	r6, r9
90013c14:	fb94 f5f1 	sdiv	r5, r4, r1
90013c18:	fb01 4415 	mls	r4, r1, r5, r4
90013c1c:	44bc      	add	ip, r7
90013c1e:	2c00      	cmp	r4, #0
90013c20:	bfbc      	itt	lt
90013c22:	f105 35ff 	addlt.w	r5, r5, #4294967295
90013c26:	1864      	addlt	r4, r4, r1
90013c28:	44a8      	add	r8, r5
90013c2a:	fb05 ac0c 	mla	ip, r5, ip, sl
90013c2e:	f8a2 8004 	strh.w	r8, [r2, #4]
90013c32:	f8a2 c006 	strh.w	ip, [r2, #6]
90013c36:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013c3a:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90013c3e:	f8bc 2004 	ldrh.w	r2, [ip, #4]
90013c42:	ea58 0202 	orrs.w	r2, r8, r2
90013c46:	d011      	beq.n	90013c6c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90013c48:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90013c4c:	f1b8 0f00 	cmp.w	r8, #0
90013c50:	db0c      	blt.n	90013c6c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90013c52:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90013c54:	4590      	cmp	r8, r2
90013c56:	da09      	bge.n	90013c6c <_ZN8touchgfx7Outline10renderLineEiiii+0x134>
90013c58:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
90013c5c:	4590      	cmp	r8, r2
90013c5e:	bf3c      	itt	cc
90013c60:	f10c 0208 	addcc.w	r2, ip, #8
90013c64:	6102      	strcc	r2, [r0, #16]
90013c66:	f108 0201 	add.w	r2, r8, #1
90013c6a:	6082      	str	r2, [r0, #8]
90013c6c:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013c70:	2700      	movs	r7, #0
90013c72:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
90013c76:	45b6      	cmp	lr, r6
90013c78:	f8ac 6000 	strh.w	r6, [ip]
90013c7c:	442b      	add	r3, r5
90013c7e:	f8ac 2002 	strh.w	r2, [ip, #2]
90013c82:	f8ac 7004 	strh.w	r7, [ip, #4]
90013c86:	f8ac 7006 	strh.w	r7, [ip, #6]
90013c8a:	d04b      	beq.n	90013d24 <_ZN8touchgfx7Outline10renderLineEiiii+0x1ec>
90013c8c:	9f04      	ldr	r7, [sp, #16]
90013c8e:	1a64      	subs	r4, r4, r1
90013c90:	f04f 0a00 	mov.w	sl, #0
90013c94:	1aff      	subs	r7, r7, r3
90013c96:	443d      	add	r5, r7
90013c98:	016d      	lsls	r5, r5, #5
90013c9a:	fb95 f8f1 	sdiv	r8, r5, r1
90013c9e:	fb01 5518 	mls	r5, r1, r8, r5
90013ca2:	2d00      	cmp	r5, #0
90013ca4:	bfbc      	itt	lt
90013ca6:	f108 38ff 	addlt.w	r8, r8, #4294967295
90013caa:	186d      	addlt	r5, r5, r1
90013cac:	f108 0701 	add.w	r7, r8, #1
90013cb0:	9703      	str	r7, [sp, #12]
90013cb2:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013cb6:	1964      	adds	r4, r4, r5
90013cb8:	444e      	add	r6, r9
90013cba:	bf54      	ite	pl
90013cbc:	9f03      	ldrpl	r7, [sp, #12]
90013cbe:	4647      	movmi	r7, r8
90013cc0:	f8bc b004 	ldrh.w	fp, [ip, #4]
90013cc4:	bf58      	it	pl
90013cc6:	1a64      	subpl	r4, r4, r1
90013cc8:	443b      	add	r3, r7
90013cca:	44bb      	add	fp, r7
90013ccc:	f8ac b004 	strh.w	fp, [ip, #4]
90013cd0:	f8bc b006 	ldrh.w	fp, [ip, #6]
90013cd4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90013cd8:	f8ac b006 	strh.w	fp, [ip, #6]
90013cdc:	f8d0 c010 	ldr.w	ip, [r0, #16]
90013ce0:	f8bc b006 	ldrh.w	fp, [ip, #6]
90013ce4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
90013ce8:	ea5b 0707 	orrs.w	r7, fp, r7
90013cec:	d011      	beq.n	90013d12 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90013cee:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90013cf2:	f1bb 0f00 	cmp.w	fp, #0
90013cf6:	db0c      	blt.n	90013d12 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90013cf8:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90013cfa:	45bb      	cmp	fp, r7
90013cfc:	da09      	bge.n	90013d12 <_ZN8touchgfx7Outline10renderLineEiiii+0x1da>
90013cfe:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90013d02:	45bb      	cmp	fp, r7
90013d04:	bf3c      	itt	cc
90013d06:	f10c 0708 	addcc.w	r7, ip, #8
90013d0a:	6107      	strcc	r7, [r0, #16]
90013d0c:	f10b 0701 	add.w	r7, fp, #1
90013d10:	6087      	str	r7, [r0, #8]
90013d12:	6907      	ldr	r7, [r0, #16]
90013d14:	45b6      	cmp	lr, r6
90013d16:	803e      	strh	r6, [r7, #0]
90013d18:	807a      	strh	r2, [r7, #2]
90013d1a:	f8a7 a004 	strh.w	sl, [r7, #4]
90013d1e:	f8a7 a006 	strh.w	sl, [r7, #6]
90013d22:	d1c6      	bne.n	90013cb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x17a>
90013d24:	9a04      	ldr	r2, [sp, #16]
90013d26:	1ad3      	subs	r3, r2, r3
90013d28:	6902      	ldr	r2, [r0, #16]
90013d2a:	8891      	ldrh	r1, [r2, #4]
90013d2c:	88d6      	ldrh	r6, [r2, #6]
90013d2e:	4419      	add	r1, r3
90013d30:	8091      	strh	r1, [r2, #4]
90013d32:	9902      	ldr	r1, [sp, #8]
90013d34:	f101 0c20 	add.w	ip, r1, #32
90013d38:	9901      	ldr	r1, [sp, #4]
90013d3a:	ebac 0c01 	sub.w	ip, ip, r1
90013d3e:	fb03 630c 	mla	r3, r3, ip, r6
90013d42:	80d3      	strh	r3, [r2, #6]
90013d44:	e750      	b.n	90013be8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013d46:	9d05      	ldr	r5, [sp, #20]
90013d48:	1aa2      	subs	r2, r4, r2
90013d4a:	eba5 0501 	sub.w	r5, r5, r1
90013d4e:	9202      	str	r2, [sp, #8]
90013d50:	9508      	str	r5, [sp, #32]
90013d52:	f140 8128 	bpl.w	90013fa6 <_ZN8touchgfx7Outline10renderLineEiiii+0x46e>
90013d56:	9a03      	ldr	r2, [sp, #12]
90013d58:	2a00      	cmp	r2, #0
90013d5a:	f6ff af45 	blt.w	90013be8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013d5e:	9a02      	ldr	r2, [sp, #8]
90013d60:	f04f 34ff 	mov.w	r4, #4294967295
90013d64:	4252      	negs	r2, r2
90013d66:	940b      	str	r4, [sp, #44]	@ 0x2c
90013d68:	2400      	movs	r4, #0
90013d6a:	9202      	str	r2, [sp, #8]
90013d6c:	9a06      	ldr	r2, [sp, #24]
90013d6e:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
90013d72:	9206      	str	r2, [sp, #24]
90013d74:	462a      	mov	r2, r5
90013d76:	435a      	muls	r2, r3
90013d78:	9401      	str	r4, [sp, #4]
90013d7a:	9c02      	ldr	r4, [sp, #8]
90013d7c:	9d02      	ldr	r5, [sp, #8]
90013d7e:	fb92 f4f4 	sdiv	r4, r2, r4
90013d82:	fb05 2214 	mls	r2, r5, r4, r2
90013d86:	2a00      	cmp	r2, #0
90013d88:	9207      	str	r2, [sp, #28]
90013d8a:	bfbc      	itt	lt
90013d8c:	1952      	addlt	r2, r2, r5
90013d8e:	f104 34ff 	addlt.w	r4, r4, #4294967295
90013d92:	6905      	ldr	r5, [r0, #16]
90013d94:	bfb8      	it	lt
90013d96:	9207      	strlt	r2, [sp, #28]
90013d98:	eb04 0901 	add.w	r9, r4, r1
90013d9c:	9a01      	ldr	r2, [sp, #4]
90013d9e:	ea4f 1669 	mov.w	r6, r9, asr #5
90013da2:	429a      	cmp	r2, r3
90013da4:	f040 8111 	bne.w	90013fca <_ZN8touchgfx7Outline10renderLineEiiii+0x492>
90013da8:	f9b5 3000 	ldrsh.w	r3, [r5]
90013dac:	429e      	cmp	r6, r3
90013dae:	d104      	bne.n	90013dba <_ZN8touchgfx7Outline10renderLineEiiii+0x282>
90013db0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90013db4:	9a03      	ldr	r2, [sp, #12]
90013db6:	429a      	cmp	r2, r3
90013db8:	d01b      	beq.n	90013df2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90013dba:	88ea      	ldrh	r2, [r5, #6]
90013dbc:	88ab      	ldrh	r3, [r5, #4]
90013dbe:	4313      	orrs	r3, r2
90013dc0:	d010      	beq.n	90013de4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90013dc2:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90013dc6:	2a00      	cmp	r2, #0
90013dc8:	db0c      	blt.n	90013de4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90013dca:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90013dcc:	429a      	cmp	r2, r3
90013dce:	da09      	bge.n	90013de4 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ac>
90013dd0:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
90013dd4:	429a      	cmp	r2, r3
90013dd6:	f102 0201 	add.w	r2, r2, #1
90013dda:	bf38      	it	cc
90013ddc:	3508      	addcc	r5, #8
90013dde:	6082      	str	r2, [r0, #8]
90013de0:	bf38      	it	cc
90013de2:	6105      	strcc	r5, [r0, #16]
90013de4:	6903      	ldr	r3, [r0, #16]
90013de6:	9a03      	ldr	r2, [sp, #12]
90013de8:	801e      	strh	r6, [r3, #0]
90013dea:	805a      	strh	r2, [r3, #2]
90013dec:	2200      	movs	r2, #0
90013dee:	809a      	strh	r2, [r3, #4]
90013df0:	80da      	strh	r2, [r3, #6]
90013df2:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90013df4:	9a03      	ldr	r2, [sp, #12]
90013df6:	6901      	ldr	r1, [r0, #16]
90013df8:	441a      	add	r2, r3
90013dfa:	f9b1 3000 	ldrsh.w	r3, [r1]
90013dfe:	42b3      	cmp	r3, r6
90013e00:	d103      	bne.n	90013e0a <_ZN8touchgfx7Outline10renderLineEiiii+0x2d2>
90013e02:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90013e06:	429a      	cmp	r2, r3
90013e08:	d01a      	beq.n	90013e40 <_ZN8touchgfx7Outline10renderLineEiiii+0x308>
90013e0a:	88cc      	ldrh	r4, [r1, #6]
90013e0c:	888b      	ldrh	r3, [r1, #4]
90013e0e:	4323      	orrs	r3, r4
90013e10:	d010      	beq.n	90013e34 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90013e12:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90013e16:	2c00      	cmp	r4, #0
90013e18:	db0c      	blt.n	90013e34 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90013e1a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90013e1c:	429c      	cmp	r4, r3
90013e1e:	da09      	bge.n	90013e34 <_ZN8touchgfx7Outline10renderLineEiiii+0x2fc>
90013e20:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90013e24:	429c      	cmp	r4, r3
90013e26:	f104 0401 	add.w	r4, r4, #1
90013e2a:	bf38      	it	cc
90013e2c:	3108      	addcc	r1, #8
90013e2e:	6084      	str	r4, [r0, #8]
90013e30:	bf38      	it	cc
90013e32:	6101      	strcc	r1, [r0, #16]
90013e34:	6903      	ldr	r3, [r0, #16]
90013e36:	2100      	movs	r1, #0
90013e38:	801e      	strh	r6, [r3, #0]
90013e3a:	805a      	strh	r2, [r3, #2]
90013e3c:	8099      	strh	r1, [r3, #4]
90013e3e:	80d9      	strh	r1, [r3, #6]
90013e40:	9b06      	ldr	r3, [sp, #24]
90013e42:	4293      	cmp	r3, r2
90013e44:	f000 8082 	beq.w	90013f4c <_ZN8touchgfx7Outline10renderLineEiiii+0x414>
90013e48:	9b08      	ldr	r3, [sp, #32]
90013e4a:	9902      	ldr	r1, [sp, #8]
90013e4c:	015b      	lsls	r3, r3, #5
90013e4e:	9c02      	ldr	r4, [sp, #8]
90013e50:	fb93 f1f1 	sdiv	r1, r3, r1
90013e54:	fb04 3311 	mls	r3, r4, r1, r3
90013e58:	9103      	str	r1, [sp, #12]
90013e5a:	2b00      	cmp	r3, #0
90013e5c:	9308      	str	r3, [sp, #32]
90013e5e:	da04      	bge.n	90013e6a <_ZN8touchgfx7Outline10renderLineEiiii+0x332>
90013e60:	1e4b      	subs	r3, r1, #1
90013e62:	9303      	str	r3, [sp, #12]
90013e64:	9b08      	ldr	r3, [sp, #32]
90013e66:	4423      	add	r3, r4
90013e68:	9308      	str	r3, [sp, #32]
90013e6a:	9b07      	ldr	r3, [sp, #28]
90013e6c:	464f      	mov	r7, r9
90013e6e:	9902      	ldr	r1, [sp, #8]
90013e70:	2600      	movs	r6, #0
90013e72:	1a5b      	subs	r3, r3, r1
90013e74:	9307      	str	r3, [sp, #28]
90013e76:	9b01      	ldr	r3, [sp, #4]
90013e78:	f1c3 0320 	rsb	r3, r3, #32
90013e7c:	930e      	str	r3, [sp, #56]	@ 0x38
90013e7e:	990e      	ldr	r1, [sp, #56]	@ 0x38
90013e80:	9b01      	ldr	r3, [sp, #4]
90013e82:	1a5b      	subs	r3, r3, r1
90013e84:	930a      	str	r3, [sp, #40]	@ 0x28
90013e86:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
90013e8a:	185b      	adds	r3, r3, r1
90013e8c:	bf58      	it	pl
90013e8e:	9902      	ldrpl	r1, [sp, #8]
90013e90:	9307      	str	r3, [sp, #28]
90013e92:	bf57      	itett	pl
90013e94:	1a5b      	subpl	r3, r3, r1
90013e96:	9903      	ldrmi	r1, [sp, #12]
90013e98:	9307      	strpl	r3, [sp, #28]
90013e9a:	9b03      	ldrpl	r3, [sp, #12]
90013e9c:	bf58      	it	pl
90013e9e:	1c59      	addpl	r1, r3, #1
90013ea0:	2a00      	cmp	r2, #0
90013ea2:	4489      	add	r9, r1
90013ea4:	ea4f 1a69 	mov.w	sl, r9, asr #5
90013ea8:	db2e      	blt.n	90013f08 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90013eaa:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90013eac:	4293      	cmp	r3, r2
90013eae:	dd2b      	ble.n	90013f08 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90013eb0:	9c01      	ldr	r4, [sp, #4]
90013eb2:	6905      	ldr	r5, [r0, #16]
90013eb4:	46a0      	mov	r8, r4
90013eb6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90013eb8:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
90013ebc:	45a0      	cmp	r8, r4
90013ebe:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
90013ec2:	f040 814c 	bne.w	9001415e <_ZN8touchgfx7Outline10renderLineEiiii+0x626>
90013ec6:	f9b5 1000 	ldrsh.w	r1, [r5]
90013eca:	4551      	cmp	r1, sl
90013ecc:	d103      	bne.n	90013ed6 <_ZN8touchgfx7Outline10renderLineEiiii+0x39e>
90013ece:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90013ed2:	4291      	cmp	r1, r2
90013ed4:	d018      	beq.n	90013f08 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
90013ed6:	ea5c 010e 	orrs.w	r1, ip, lr
90013eda:	d00f      	beq.n	90013efc <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90013edc:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
90013ee0:	2900      	cmp	r1, #0
90013ee2:	db0b      	blt.n	90013efc <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90013ee4:	428b      	cmp	r3, r1
90013ee6:	dd09      	ble.n	90013efc <_ZN8touchgfx7Outline10renderLineEiiii+0x3c4>
90013ee8:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
90013eec:	4299      	cmp	r1, r3
90013eee:	f101 0101 	add.w	r1, r1, #1
90013ef2:	bf38      	it	cc
90013ef4:	3508      	addcc	r5, #8
90013ef6:	6081      	str	r1, [r0, #8]
90013ef8:	bf38      	it	cc
90013efa:	6105      	strcc	r5, [r0, #16]
90013efc:	6903      	ldr	r3, [r0, #16]
90013efe:	f8a3 a000 	strh.w	sl, [r3]
90013f02:	805a      	strh	r2, [r3, #2]
90013f04:	809e      	strh	r6, [r3, #4]
90013f06:	80de      	strh	r6, [r3, #6]
90013f08:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90013f0a:	6901      	ldr	r1, [r0, #16]
90013f0c:	441a      	add	r2, r3
90013f0e:	88cc      	ldrh	r4, [r1, #6]
90013f10:	888b      	ldrh	r3, [r1, #4]
90013f12:	4323      	orrs	r3, r4
90013f14:	d010      	beq.n	90013f38 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90013f16:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
90013f1a:	2c00      	cmp	r4, #0
90013f1c:	db0c      	blt.n	90013f38 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90013f1e:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
90013f20:	429c      	cmp	r4, r3
90013f22:	da09      	bge.n	90013f38 <_ZN8touchgfx7Outline10renderLineEiiii+0x400>
90013f24:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
90013f28:	429c      	cmp	r4, r3
90013f2a:	f104 0401 	add.w	r4, r4, #1
90013f2e:	bf38      	it	cc
90013f30:	3108      	addcc	r1, #8
90013f32:	6084      	str	r4, [r0, #8]
90013f34:	bf38      	it	cc
90013f36:	6101      	strcc	r1, [r0, #16]
90013f38:	6903      	ldr	r3, [r0, #16]
90013f3a:	464f      	mov	r7, r9
90013f3c:	f8a3 a000 	strh.w	sl, [r3]
90013f40:	805a      	strh	r2, [r3, #2]
90013f42:	809e      	strh	r6, [r3, #4]
90013f44:	80de      	strh	r6, [r3, #6]
90013f46:	9b06      	ldr	r3, [sp, #24]
90013f48:	4293      	cmp	r3, r2
90013f4a:	d19c      	bne.n	90013e86 <_ZN8touchgfx7Outline10renderLineEiiii+0x34e>
90013f4c:	9b01      	ldr	r3, [sp, #4]
90013f4e:	6907      	ldr	r7, [r0, #16]
90013f50:	f1c3 0620 	rsb	r6, r3, #32
90013f54:	9b05      	ldr	r3, [sp, #20]
90013f56:	ea4f 1e63 	mov.w	lr, r3, asr #5
90013f5a:	9b04      	ldr	r3, [sp, #16]
90013f5c:	429e      	cmp	r6, r3
90013f5e:	f040 81c7 	bne.w	900142f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7b8>
90013f62:	f9b7 3000 	ldrsh.w	r3, [r7]
90013f66:	459e      	cmp	lr, r3
90013f68:	d104      	bne.n	90013f74 <_ZN8touchgfx7Outline10renderLineEiiii+0x43c>
90013f6a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90013f6e:	429a      	cmp	r2, r3
90013f70:	f43f ae3a 	beq.w	90013be8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013f74:	88f9      	ldrh	r1, [r7, #6]
90013f76:	88bb      	ldrh	r3, [r7, #4]
90013f78:	430b      	orrs	r3, r1
90013f7a:	d010      	beq.n	90013f9e <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90013f7c:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
90013f80:	2b00      	cmp	r3, #0
90013f82:	db0c      	blt.n	90013f9e <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90013f84:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
90013f86:	428b      	cmp	r3, r1
90013f88:	da09      	bge.n	90013f9e <_ZN8touchgfx7Outline10renderLineEiiii+0x466>
90013f8a:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
90013f8e:	428b      	cmp	r3, r1
90013f90:	f103 0301 	add.w	r3, r3, #1
90013f94:	bf38      	it	cc
90013f96:	3708      	addcc	r7, #8
90013f98:	6083      	str	r3, [r0, #8]
90013f9a:	bf38      	it	cc
90013f9c:	6107      	strcc	r7, [r0, #16]
90013f9e:	6903      	ldr	r3, [r0, #16]
90013fa0:	f8a3 e000 	strh.w	lr, [r3]
90013fa4:	e603      	b.n	90013bae <_ZN8touchgfx7Outline10renderLineEiiii+0x76>
90013fa6:	6ac2      	ldr	r2, [r0, #44]	@ 0x2c
90013fa8:	9c03      	ldr	r4, [sp, #12]
90013faa:	42a2      	cmp	r2, r4
90013fac:	f6ff ae1c 	blt.w	90013be8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90013fb0:	9c06      	ldr	r4, [sp, #24]
90013fb2:	42a2      	cmp	r2, r4
90013fb4:	9c08      	ldr	r4, [sp, #32]
90013fb6:	bfbc      	itt	lt
90013fb8:	3201      	addlt	r2, #1
90013fba:	9206      	strlt	r2, [sp, #24]
90013fbc:	f1c3 0220 	rsb	r2, r3, #32
90013fc0:	4362      	muls	r2, r4
90013fc2:	2401      	movs	r4, #1
90013fc4:	940b      	str	r4, [sp, #44]	@ 0x2c
90013fc6:	2420      	movs	r4, #32
90013fc8:	e6d6      	b.n	90013d78 <_ZN8touchgfx7Outline10renderLineEiiii+0x240>
90013fca:	ea4f 1861 	mov.w	r8, r1, asr #5
90013fce:	f009 021f 	and.w	r2, r9, #31
90013fd2:	f001 011f 	and.w	r1, r1, #31
90013fd6:	f8b5 e004 	ldrh.w	lr, [r5, #4]
90013fda:	920c      	str	r2, [sp, #48]	@ 0x30
90013fdc:	45b0      	cmp	r8, r6
90013fde:	9a01      	ldr	r2, [sp, #4]
90013fe0:	f8b5 a006 	ldrh.w	sl, [r5, #6]
90013fe4:	eba2 0203 	sub.w	r2, r2, r3
90013fe8:	d108      	bne.n	90013ffc <_ZN8touchgfx7Outline10renderLineEiiii+0x4c4>
90013fea:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90013fec:	4496      	add	lr, r2
90013fee:	4419      	add	r1, r3
90013ff0:	f8a5 e004 	strh.w	lr, [r5, #4]
90013ff4:	fb02 a101 	mla	r1, r2, r1, sl
90013ff8:	80e9      	strh	r1, [r5, #6]
90013ffa:	e6fa      	b.n	90013df2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90013ffc:	2c00      	cmp	r4, #0
90013ffe:	f2c0 80a7 	blt.w	90014150 <_ZN8touchgfx7Outline10renderLineEiiii+0x618>
90014002:	2701      	movs	r7, #1
90014004:	f1c1 0c20 	rsb	ip, r1, #32
90014008:	970a      	str	r7, [sp, #40]	@ 0x28
9001400a:	2720      	movs	r7, #32
9001400c:	fb02 f20c 	mul.w	r2, r2, ip
90014010:	9709      	str	r7, [sp, #36]	@ 0x24
90014012:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90014014:	fb92 fcf4 	sdiv	ip, r2, r4
90014018:	fb04 221c 	mls	r2, r4, ip, r2
9001401c:	4439      	add	r1, r7
9001401e:	2a00      	cmp	r2, #0
90014020:	bfbc      	itt	lt
90014022:	f10c 3cff 	addlt.w	ip, ip, #4294967295
90014026:	1912      	addlt	r2, r2, r4
90014028:	fb0c a101 	mla	r1, ip, r1, sl
9001402c:	44e6      	add	lr, ip
9001402e:	80e9      	strh	r1, [r5, #6]
90014030:	990a      	ldr	r1, [sp, #40]	@ 0x28
90014032:	f8a5 e004 	strh.w	lr, [r5, #4]
90014036:	eb08 0501 	add.w	r5, r8, r1
9001403a:	6901      	ldr	r1, [r0, #16]
9001403c:	f8b1 8006 	ldrh.w	r8, [r1, #6]
90014040:	f8b1 e004 	ldrh.w	lr, [r1, #4]
90014044:	ea58 070e 	orrs.w	r7, r8, lr
90014048:	d010      	beq.n	9001406c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
9001404a:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
9001404e:	f1be 0f00 	cmp.w	lr, #0
90014052:	db0b      	blt.n	9001406c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
90014054:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90014056:	45be      	cmp	lr, r7
90014058:	da08      	bge.n	9001406c <_ZN8touchgfx7Outline10renderLineEiiii+0x534>
9001405a:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
9001405e:	45be      	cmp	lr, r7
90014060:	bf3c      	itt	cc
90014062:	3108      	addcc	r1, #8
90014064:	6101      	strcc	r1, [r0, #16]
90014066:	f10e 0101 	add.w	r1, lr, #1
9001406a:	6081      	str	r1, [r0, #8]
9001406c:	6901      	ldr	r1, [r0, #16]
9001406e:	f04f 0e00 	mov.w	lr, #0
90014072:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
90014076:	42ae      	cmp	r6, r5
90014078:	800d      	strh	r5, [r1, #0]
9001407a:	4463      	add	r3, ip
9001407c:	f8a1 8002 	strh.w	r8, [r1, #2]
90014080:	f8a1 e004 	strh.w	lr, [r1, #4]
90014084:	f8a1 e006 	strh.w	lr, [r1, #6]
90014088:	d053      	beq.n	90014132 <_ZN8touchgfx7Outline10renderLineEiiii+0x5fa>
9001408a:	9901      	ldr	r1, [sp, #4]
9001408c:	1b12      	subs	r2, r2, r4
9001408e:	1ac9      	subs	r1, r1, r3
90014090:	4461      	add	r1, ip
90014092:	0149      	lsls	r1, r1, #5
90014094:	fb91 fef4 	sdiv	lr, r1, r4
90014098:	fb04 111e 	mls	r1, r4, lr, r1
9001409c:	2900      	cmp	r1, #0
9001409e:	bfbc      	itt	lt
900140a0:	f10e 3eff 	addlt.w	lr, lr, #4294967295
900140a4:	1909      	addlt	r1, r1, r4
900140a6:	f10e 0701 	add.w	r7, lr, #1
900140aa:	970d      	str	r7, [sp, #52]	@ 0x34
900140ac:	f8d0 a010 	ldr.w	sl, [r0, #16]
900140b0:	1852      	adds	r2, r2, r1
900140b2:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
900140b4:	bf54      	ite	pl
900140b6:	f8dd c034 	ldrpl.w	ip, [sp, #52]	@ 0x34
900140ba:	46f4      	movmi	ip, lr
900140bc:	f8ba b004 	ldrh.w	fp, [sl, #4]
900140c0:	bf58      	it	pl
900140c2:	1b12      	subpl	r2, r2, r4
900140c4:	4463      	add	r3, ip
900140c6:	443d      	add	r5, r7
900140c8:	44e3      	add	fp, ip
900140ca:	f8aa b004 	strh.w	fp, [sl, #4]
900140ce:	f8ba b006 	ldrh.w	fp, [sl, #6]
900140d2:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
900140d6:	f8aa b006 	strh.w	fp, [sl, #6]
900140da:	f8d0 c010 	ldr.w	ip, [r0, #16]
900140de:	f8bc b006 	ldrh.w	fp, [ip, #6]
900140e2:	f8bc a004 	ldrh.w	sl, [ip, #4]
900140e6:	ea5b 070a 	orrs.w	r7, fp, sl
900140ea:	d014      	beq.n	90014116 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
900140ec:	f9bc a002 	ldrsh.w	sl, [ip, #2]
900140f0:	f1ba 0f00 	cmp.w	sl, #0
900140f4:	db0f      	blt.n	90014116 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
900140f6:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900140f8:	45ba      	cmp	sl, r7
900140fa:	da0c      	bge.n	90014116 <_ZN8touchgfx7Outline10renderLineEiiii+0x5de>
900140fc:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
90014100:	45ba      	cmp	sl, r7
90014102:	f10a 0a01 	add.w	sl, sl, #1
90014106:	bf38      	it	cc
90014108:	f10c 0c08 	addcc.w	ip, ip, #8
9001410c:	f8c0 a008 	str.w	sl, [r0, #8]
90014110:	bf38      	it	cc
90014112:	f8c0 c010 	strcc.w	ip, [r0, #16]
90014116:	f8d0 c010 	ldr.w	ip, [r0, #16]
9001411a:	f04f 0700 	mov.w	r7, #0
9001411e:	42ae      	cmp	r6, r5
90014120:	f8ac 5000 	strh.w	r5, [ip]
90014124:	f8ac 8002 	strh.w	r8, [ip, #2]
90014128:	f8ac 7004 	strh.w	r7, [ip, #4]
9001412c:	f8ac 7006 	strh.w	r7, [ip, #6]
90014130:	d1bc      	bne.n	900140ac <_ZN8touchgfx7Outline10renderLineEiiii+0x574>
90014132:	6904      	ldr	r4, [r0, #16]
90014134:	9a01      	ldr	r2, [sp, #4]
90014136:	990c      	ldr	r1, [sp, #48]	@ 0x30
90014138:	1ad3      	subs	r3, r2, r3
9001413a:	88a2      	ldrh	r2, [r4, #4]
9001413c:	3120      	adds	r1, #32
9001413e:	441a      	add	r2, r3
90014140:	80a2      	strh	r2, [r4, #4]
90014142:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90014144:	1a89      	subs	r1, r1, r2
90014146:	88e2      	ldrh	r2, [r4, #6]
90014148:	fb03 2301 	mla	r3, r3, r1, r2
9001414c:	80e3      	strh	r3, [r4, #6]
9001414e:	e650      	b.n	90013df2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2ba>
90014150:	f04f 37ff 	mov.w	r7, #4294967295
90014154:	434a      	muls	r2, r1
90014156:	4264      	negs	r4, r4
90014158:	970a      	str	r7, [sp, #40]	@ 0x28
9001415a:	2700      	movs	r7, #0
9001415c:	e758      	b.n	90014010 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d8>
9001415e:	ea4f 1867 	mov.w	r8, r7, asr #5
90014162:	f009 031f 	and.w	r3, r9, #31
90014166:	f007 071f 	and.w	r7, r7, #31
9001416a:	fa1f fc8c 	uxth.w	ip, ip
9001416e:	45d0      	cmp	r8, sl
90014170:	930f      	str	r3, [sp, #60]	@ 0x3c
90014172:	fa1f fe8e 	uxth.w	lr, lr
90014176:	d10a      	bne.n	9001418e <_ZN8touchgfx7Outline10renderLineEiiii+0x656>
90014178:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001417a:	449c      	add	ip, r3
9001417c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9001417e:	441f      	add	r7, r3
90014180:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90014182:	f8a5 c004 	strh.w	ip, [r5, #4]
90014186:	fb03 e707 	mla	r7, r3, r7, lr
9001418a:	80ef      	strh	r7, [r5, #6]
9001418c:	e6bc      	b.n	90013f08 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
9001418e:	2900      	cmp	r1, #0
90014190:	f2c0 80a6 	blt.w	900142e0 <_ZN8touchgfx7Outline10renderLineEiiii+0x7a8>
90014194:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90014196:	f1c7 0320 	rsb	r3, r7, #32
9001419a:	4363      	muls	r3, r4
9001419c:	2401      	movs	r4, #1
9001419e:	940d      	str	r4, [sp, #52]	@ 0x34
900141a0:	2420      	movs	r4, #32
900141a2:	940c      	str	r4, [sp, #48]	@ 0x30
900141a4:	fb93 f4f1 	sdiv	r4, r3, r1
900141a8:	fb01 3b14 	mls	fp, r1, r4, r3
900141ac:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900141ae:	f1bb 0f00 	cmp.w	fp, #0
900141b2:	441f      	add	r7, r3
900141b4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900141b6:	bfbc      	itt	lt
900141b8:	f104 34ff 	addlt.w	r4, r4, #4294967295
900141bc:	448b      	addlt	fp, r1
900141be:	fb04 e707 	mla	r7, r4, r7, lr
900141c2:	44a4      	add	ip, r4
900141c4:	80ef      	strh	r7, [r5, #6]
900141c6:	f8a5 c004 	strh.w	ip, [r5, #4]
900141ca:	eb08 0503 	add.w	r5, r8, r3
900141ce:	f8d0 c010 	ldr.w	ip, [r0, #16]
900141d2:	f8bc e006 	ldrh.w	lr, [ip, #6]
900141d6:	f8bc 7004 	ldrh.w	r7, [ip, #4]
900141da:	ea5e 0307 	orrs.w	r3, lr, r7
900141de:	d011      	beq.n	90014204 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900141e0:	f9bc e002 	ldrsh.w	lr, [ip, #2]
900141e4:	f1be 0f00 	cmp.w	lr, #0
900141e8:	db0c      	blt.n	90014204 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900141ea:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
900141ec:	45be      	cmp	lr, r7
900141ee:	da09      	bge.n	90014204 <_ZN8touchgfx7Outline10renderLineEiiii+0x6cc>
900141f0:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
900141f4:	45be      	cmp	lr, r7
900141f6:	bf3c      	itt	cc
900141f8:	f10c 0708 	addcc.w	r7, ip, #8
900141fc:	6107      	strcc	r7, [r0, #16]
900141fe:	f10e 0701 	add.w	r7, lr, #1
90014202:	6087      	str	r7, [r0, #8]
90014204:	6907      	ldr	r7, [r0, #16]
90014206:	b213      	sxth	r3, r2
90014208:	4555      	cmp	r5, sl
9001420a:	9310      	str	r3, [sp, #64]	@ 0x40
9001420c:	807b      	strh	r3, [r7, #2]
9001420e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90014210:	803d      	strh	r5, [r7, #0]
90014212:	80be      	strh	r6, [r7, #4]
90014214:	eb04 0c03 	add.w	ip, r4, r3
90014218:	80fe      	strh	r6, [r7, #6]
9001421a:	d050      	beq.n	900142be <_ZN8touchgfx7Outline10renderLineEiiii+0x786>
9001421c:	9b01      	ldr	r3, [sp, #4]
9001421e:	eba3 070c 	sub.w	r7, r3, ip
90014222:	ebab 0301 	sub.w	r3, fp, r1
90014226:	443c      	add	r4, r7
90014228:	9309      	str	r3, [sp, #36]	@ 0x24
9001422a:	0164      	lsls	r4, r4, #5
9001422c:	fb94 f8f1 	sdiv	r8, r4, r1
90014230:	fb01 4418 	mls	r4, r1, r8, r4
90014234:	2c00      	cmp	r4, #0
90014236:	bfbc      	itt	lt
90014238:	f108 38ff 	addlt.w	r8, r8, #4294967295
9001423c:	1864      	addlt	r4, r4, r1
9001423e:	f108 0701 	add.w	r7, r8, #1
90014242:	9711      	str	r7, [sp, #68]	@ 0x44
90014244:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90014246:	f8d0 e010 	ldr.w	lr, [r0, #16]
9001424a:	191b      	adds	r3, r3, r4
9001424c:	f8be b004 	ldrh.w	fp, [lr, #4]
90014250:	bf54      	ite	pl
90014252:	9f11      	ldrpl	r7, [sp, #68]	@ 0x44
90014254:	4647      	movmi	r7, r8
90014256:	9309      	str	r3, [sp, #36]	@ 0x24
90014258:	bf58      	it	pl
9001425a:	1a5b      	subpl	r3, r3, r1
9001425c:	44bb      	add	fp, r7
9001425e:	44bc      	add	ip, r7
90014260:	bf58      	it	pl
90014262:	9309      	strpl	r3, [sp, #36]	@ 0x24
90014264:	f8ae b004 	strh.w	fp, [lr, #4]
90014268:	f8be b006 	ldrh.w	fp, [lr, #6]
9001426c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
90014270:	9f0d      	ldr	r7, [sp, #52]	@ 0x34
90014272:	f8ae b006 	strh.w	fp, [lr, #6]
90014276:	443d      	add	r5, r7
90014278:	f8d0 e010 	ldr.w	lr, [r0, #16]
9001427c:	f8be b006 	ldrh.w	fp, [lr, #6]
90014280:	f8be 7004 	ldrh.w	r7, [lr, #4]
90014284:	ea5b 0307 	orrs.w	r3, fp, r7
90014288:	d011      	beq.n	900142ae <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
9001428a:	f9be b002 	ldrsh.w	fp, [lr, #2]
9001428e:	f1bb 0f00 	cmp.w	fp, #0
90014292:	db0c      	blt.n	900142ae <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
90014294:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
90014296:	45bb      	cmp	fp, r7
90014298:	da09      	bge.n	900142ae <_ZN8touchgfx7Outline10renderLineEiiii+0x776>
9001429a:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
9001429e:	45bb      	cmp	fp, r7
900142a0:	bf3c      	itt	cc
900142a2:	f10e 0708 	addcc.w	r7, lr, #8
900142a6:	6107      	strcc	r7, [r0, #16]
900142a8:	f10b 0701 	add.w	r7, fp, #1
900142ac:	6087      	str	r7, [r0, #8]
900142ae:	6907      	ldr	r7, [r0, #16]
900142b0:	4555      	cmp	r5, sl
900142b2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900142b4:	803d      	strh	r5, [r7, #0]
900142b6:	807b      	strh	r3, [r7, #2]
900142b8:	80be      	strh	r6, [r7, #4]
900142ba:	80fe      	strh	r6, [r7, #6]
900142bc:	d1c2      	bne.n	90014244 <_ZN8touchgfx7Outline10renderLineEiiii+0x70c>
900142be:	9b01      	ldr	r3, [sp, #4]
900142c0:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
900142c2:	eba3 0c0c 	sub.w	ip, r3, ip
900142c6:	6903      	ldr	r3, [r0, #16]
900142c8:	3720      	adds	r7, #32
900142ca:	8899      	ldrh	r1, [r3, #4]
900142cc:	4461      	add	r1, ip
900142ce:	8099      	strh	r1, [r3, #4]
900142d0:	990c      	ldr	r1, [sp, #48]	@ 0x30
900142d2:	1a7f      	subs	r7, r7, r1
900142d4:	88d9      	ldrh	r1, [r3, #6]
900142d6:	fb0c 1c07 	mla	ip, ip, r7, r1
900142da:	f8a3 c006 	strh.w	ip, [r3, #6]
900142de:	e613      	b.n	90013f08 <_ZN8touchgfx7Outline10renderLineEiiii+0x3d0>
900142e0:	f04f 34ff 	mov.w	r4, #4294967295
900142e4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900142e6:	4249      	negs	r1, r1
900142e8:	940d      	str	r4, [sp, #52]	@ 0x34
900142ea:	2400      	movs	r4, #0
900142ec:	437b      	muls	r3, r7
900142ee:	e758      	b.n	900141a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x66a>
900142f0:	9905      	ldr	r1, [sp, #20]
900142f2:	ea4f 1b69 	mov.w	fp, r9, asr #5
900142f6:	f009 0c1f 	and.w	ip, r9, #31
900142fa:	f8b7 8004 	ldrh.w	r8, [r7, #4]
900142fe:	f001 011f 	and.w	r1, r1, #31
90014302:	45f3      	cmp	fp, lr
90014304:	f8b7 a006 	ldrh.w	sl, [r7, #6]
90014308:	9102      	str	r1, [sp, #8]
9001430a:	9904      	ldr	r1, [sp, #16]
9001430c:	eba1 0406 	sub.w	r4, r1, r6
90014310:	d108      	bne.n	90014324 <_ZN8touchgfx7Outline10renderLineEiiii+0x7ec>
90014312:	9b02      	ldr	r3, [sp, #8]
90014314:	44a0      	add	r8, r4
90014316:	449c      	add	ip, r3
90014318:	f8a7 8004 	strh.w	r8, [r7, #4]
9001431c:	fb04 a40c 	mla	r4, r4, ip, sl
90014320:	80fc      	strh	r4, [r7, #6]
90014322:	e461      	b.n	90013be8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>
90014324:	9905      	ldr	r1, [sp, #20]
90014326:	ebb1 0109 	subs.w	r1, r1, r9
9001432a:	bf51      	iteee	pl
9001432c:	f1cc 0520 	rsbpl	r5, ip, #32
90014330:	fb04 f40c 	mulmi.w	r4, r4, ip
90014334:	4249      	negmi	r1, r1
90014336:	2500      	movmi	r5, #0
90014338:	bf5d      	ittte	pl
9001433a:	436c      	mulpl	r4, r5
9001433c:	2520      	movpl	r5, #32
9001433e:	f04f 0901 	movpl.w	r9, #1
90014342:	f04f 39ff 	movmi.w	r9, #4294967295
90014346:	9501      	str	r5, [sp, #4]
90014348:	9b01      	ldr	r3, [sp, #4]
9001434a:	fb94 f5f1 	sdiv	r5, r4, r1
9001434e:	fb01 4415 	mls	r4, r1, r5, r4
90014352:	449c      	add	ip, r3
90014354:	eb0b 0309 	add.w	r3, fp, r9
90014358:	2c00      	cmp	r4, #0
9001435a:	bfbc      	itt	lt
9001435c:	f105 35ff 	addlt.w	r5, r5, #4294967295
90014360:	1864      	addlt	r4, r4, r1
90014362:	44a8      	add	r8, r5
90014364:	fb05 ac0c 	mla	ip, r5, ip, sl
90014368:	f8a7 8004 	strh.w	r8, [r7, #4]
9001436c:	f8a7 c006 	strh.w	ip, [r7, #6]
90014370:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014374:	f8bc 8006 	ldrh.w	r8, [ip, #6]
90014378:	f8bc 7004 	ldrh.w	r7, [ip, #4]
9001437c:	ea58 0707 	orrs.w	r7, r8, r7
90014380:	d011      	beq.n	900143a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90014382:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
90014386:	f1b8 0f00 	cmp.w	r8, #0
9001438a:	db0c      	blt.n	900143a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
9001438c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
9001438e:	45b8      	cmp	r8, r7
90014390:	da09      	bge.n	900143a6 <_ZN8touchgfx7Outline10renderLineEiiii+0x86e>
90014392:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
90014396:	45b8      	cmp	r8, r7
90014398:	bf3c      	itt	cc
9001439a:	f10c 0708 	addcc.w	r7, ip, #8
9001439e:	6107      	strcc	r7, [r0, #16]
900143a0:	f108 0701 	add.w	r7, r8, #1
900143a4:	6087      	str	r7, [r0, #8]
900143a6:	6907      	ldr	r7, [r0, #16]
900143a8:	f04f 0c00 	mov.w	ip, #0
900143ac:	b212      	sxth	r2, r2
900143ae:	459e      	cmp	lr, r3
900143b0:	803b      	strh	r3, [r7, #0]
900143b2:	442e      	add	r6, r5
900143b4:	807a      	strh	r2, [r7, #2]
900143b6:	f8a7 c004 	strh.w	ip, [r7, #4]
900143ba:	f8a7 c006 	strh.w	ip, [r7, #6]
900143be:	d04b      	beq.n	90014458 <_ZN8touchgfx7Outline10renderLineEiiii+0x920>
900143c0:	9f04      	ldr	r7, [sp, #16]
900143c2:	1a64      	subs	r4, r4, r1
900143c4:	f04f 0a00 	mov.w	sl, #0
900143c8:	1bbf      	subs	r7, r7, r6
900143ca:	443d      	add	r5, r7
900143cc:	016d      	lsls	r5, r5, #5
900143ce:	fb95 f8f1 	sdiv	r8, r5, r1
900143d2:	fb01 5518 	mls	r5, r1, r8, r5
900143d6:	4565      	cmp	r5, ip
900143d8:	bfbc      	itt	lt
900143da:	f108 38ff 	addlt.w	r8, r8, #4294967295
900143de:	186d      	addlt	r5, r5, r1
900143e0:	f108 0701 	add.w	r7, r8, #1
900143e4:	9703      	str	r7, [sp, #12]
900143e6:	f8d0 c010 	ldr.w	ip, [r0, #16]
900143ea:	1964      	adds	r4, r4, r5
900143ec:	444b      	add	r3, r9
900143ee:	bf54      	ite	pl
900143f0:	9f03      	ldrpl	r7, [sp, #12]
900143f2:	4647      	movmi	r7, r8
900143f4:	f8bc b004 	ldrh.w	fp, [ip, #4]
900143f8:	bf58      	it	pl
900143fa:	1a64      	subpl	r4, r4, r1
900143fc:	443e      	add	r6, r7
900143fe:	44bb      	add	fp, r7
90014400:	f8ac b004 	strh.w	fp, [ip, #4]
90014404:	f8bc b006 	ldrh.w	fp, [ip, #6]
90014408:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
9001440c:	f8ac b006 	strh.w	fp, [ip, #6]
90014410:	f8d0 c010 	ldr.w	ip, [r0, #16]
90014414:	f8bc b006 	ldrh.w	fp, [ip, #6]
90014418:	f8bc 7004 	ldrh.w	r7, [ip, #4]
9001441c:	ea5b 0707 	orrs.w	r7, fp, r7
90014420:	d011      	beq.n	90014446 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90014422:	f9bc b002 	ldrsh.w	fp, [ip, #2]
90014426:	f1bb 0f00 	cmp.w	fp, #0
9001442a:	db0c      	blt.n	90014446 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
9001442c:	6ac7      	ldr	r7, [r0, #44]	@ 0x2c
9001442e:	45bb      	cmp	fp, r7
90014430:	da09      	bge.n	90014446 <_ZN8touchgfx7Outline10renderLineEiiii+0x90e>
90014432:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
90014436:	45bb      	cmp	fp, r7
90014438:	bf3c      	itt	cc
9001443a:	f10c 0708 	addcc.w	r7, ip, #8
9001443e:	6107      	strcc	r7, [r0, #16]
90014440:	f10b 0701 	add.w	r7, fp, #1
90014444:	6087      	str	r7, [r0, #8]
90014446:	6907      	ldr	r7, [r0, #16]
90014448:	459e      	cmp	lr, r3
9001444a:	803b      	strh	r3, [r7, #0]
9001444c:	807a      	strh	r2, [r7, #2]
9001444e:	f8a7 a004 	strh.w	sl, [r7, #4]
90014452:	f8a7 a006 	strh.w	sl, [r7, #6]
90014456:	d1c6      	bne.n	900143e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x8ae>
90014458:	9b04      	ldr	r3, [sp, #16]
9001445a:	1b9e      	subs	r6, r3, r6
9001445c:	6903      	ldr	r3, [r0, #16]
9001445e:	889a      	ldrh	r2, [r3, #4]
90014460:	4432      	add	r2, r6
90014462:	809a      	strh	r2, [r3, #4]
90014464:	9a02      	ldr	r2, [sp, #8]
90014466:	f102 0c20 	add.w	ip, r2, #32
9001446a:	9a01      	ldr	r2, [sp, #4]
9001446c:	ebac 0c02 	sub.w	ip, ip, r2
90014470:	88da      	ldrh	r2, [r3, #6]
90014472:	fb06 260c 	mla	r6, r6, ip, r2
90014476:	80de      	strh	r6, [r3, #6]
90014478:	f7ff bbb6 	b.w	90013be8 <_ZN8touchgfx7Outline10renderLineEiiii+0xb0>

9001447c <_ZN8touchgfx7Outline6lineToEii>:
9001447c:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001447e:	079b      	lsls	r3, r3, #30
90014480:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
90014482:	460e      	mov	r6, r1
90014484:	4615      	mov	r5, r2
90014486:	d511      	bpl.n	900144ac <_ZN8touchgfx7Outline6lineToEii+0x30>
90014488:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
9001448c:	ea86 0701 	eor.w	r7, r6, r1
90014490:	ea85 0302 	eor.w	r3, r5, r2
90014494:	433b      	orrs	r3, r7
90014496:	d009      	beq.n	900144ac <_ZN8touchgfx7Outline6lineToEii+0x30>
90014498:	4633      	mov	r3, r6
9001449a:	9500      	str	r5, [sp, #0]
9001449c:	f7ff fb4c 	bl	90013b38 <_ZN8touchgfx7Outline10renderLineEiiii>
900144a0:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900144a2:	f043 0301 	orr.w	r3, r3, #1
900144a6:	e9c0 6505 	strd	r6, r5, [r0, #20]
900144aa:	6243      	str	r3, [r0, #36]	@ 0x24
900144ac:	b003      	add	sp, #12
900144ae:	bdf0      	pop	{r4, r5, r6, r7, pc}

900144b0 <_ZN8touchgfx7Outline6moveToEii>:
900144b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900144b2:	6a43      	ldr	r3, [r0, #36]	@ 0x24
900144b4:	4615      	mov	r5, r2
900144b6:	4604      	mov	r4, r0
900144b8:	460e      	mov	r6, r1
900144ba:	079a      	lsls	r2, r3, #30
900144bc:	d401      	bmi.n	900144c2 <_ZN8touchgfx7Outline6moveToEii+0x12>
900144be:	f7ff fb07 	bl	90013ad0 <_ZN8touchgfx7Outline5resetEv>
900144c2:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900144c4:	07db      	lsls	r3, r3, #31
900144c6:	d504      	bpl.n	900144d2 <_ZN8touchgfx7Outline6moveToEii+0x22>
900144c8:	4620      	mov	r0, r4
900144ca:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
900144ce:	f7ff ffd5 	bl	9001447c <_ZN8touchgfx7Outline6lineToEii>
900144d2:	6923      	ldr	r3, [r4, #16]
900144d4:	1170      	asrs	r0, r6, #5
900144d6:	1169      	asrs	r1, r5, #5
900144d8:	f9b3 2000 	ldrsh.w	r2, [r3]
900144dc:	4290      	cmp	r0, r2
900144de:	d103      	bne.n	900144e8 <_ZN8touchgfx7Outline6moveToEii+0x38>
900144e0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900144e4:	4291      	cmp	r1, r2
900144e6:	d01a      	beq.n	9001451e <_ZN8touchgfx7Outline6moveToEii+0x6e>
900144e8:	88df      	ldrh	r7, [r3, #6]
900144ea:	889a      	ldrh	r2, [r3, #4]
900144ec:	433a      	orrs	r2, r7
900144ee:	d010      	beq.n	90014512 <_ZN8touchgfx7Outline6moveToEii+0x62>
900144f0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
900144f4:	2a00      	cmp	r2, #0
900144f6:	db0c      	blt.n	90014512 <_ZN8touchgfx7Outline6moveToEii+0x62>
900144f8:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
900144fa:	42ba      	cmp	r2, r7
900144fc:	da09      	bge.n	90014512 <_ZN8touchgfx7Outline6moveToEii+0x62>
900144fe:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
90014502:	42ba      	cmp	r2, r7
90014504:	f102 0201 	add.w	r2, r2, #1
90014508:	bf38      	it	cc
9001450a:	3308      	addcc	r3, #8
9001450c:	60a2      	str	r2, [r4, #8]
9001450e:	bf38      	it	cc
90014510:	6123      	strcc	r3, [r4, #16]
90014512:	6923      	ldr	r3, [r4, #16]
90014514:	2200      	movs	r2, #0
90014516:	8018      	strh	r0, [r3, #0]
90014518:	8059      	strh	r1, [r3, #2]
9001451a:	809a      	strh	r2, [r3, #4]
9001451c:	80da      	strh	r2, [r3, #6]
9001451e:	6166      	str	r6, [r4, #20]
90014520:	6225      	str	r5, [r4, #32]
90014522:	e9c4 5606 	strd	r5, r6, [r4, #24]
90014526:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90014528 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
90014528:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001452c:	b0d0      	sub	sp, #320	@ 0x140
9001452e:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
90014532:	466c      	mov	r4, sp
90014534:	4627      	mov	r7, r4
90014536:	1a0d      	subs	r5, r1, r0
90014538:	f100 0308 	add.w	r3, r0, #8
9001453c:	2d48      	cmp	r5, #72	@ 0x48
9001453e:	f340 80d5 	ble.w	900146ec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90014542:	112d      	asrs	r5, r5, #4
90014544:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
90014548:	f9b0 9000 	ldrsh.w	r9, [r0]
9001454c:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
90014550:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
90014554:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
90014558:	6816      	ldr	r6, [r2, #0]
9001455a:	6006      	str	r6, [r0, #0]
9001455c:	6856      	ldr	r6, [r2, #4]
9001455e:	6046      	str	r6, [r0, #4]
90014560:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90014564:	f8a2 8002 	strh.w	r8, [r2, #2]
90014568:	f8a2 e004 	strh.w	lr, [r2, #4]
9001456c:	f8a2 c006 	strh.w	ip, [r2, #6]
90014570:	f1a1 0208 	sub.w	r2, r1, #8
90014574:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
90014578:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
9001457c:	4565      	cmp	r5, ip
9001457e:	db06      	blt.n	9001458e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
90014580:	d119      	bne.n	900145b6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
90014582:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
90014586:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
9001458a:	42ae      	cmp	r6, r5
9001458c:	dd13      	ble.n	900145b6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
9001458e:	460e      	mov	r6, r1
90014590:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
90014594:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
90014598:	f856 5d08 	ldr.w	r5, [r6, #-8]!
9001459c:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
900145a0:	601d      	str	r5, [r3, #0]
900145a2:	6875      	ldr	r5, [r6, #4]
900145a4:	605d      	str	r5, [r3, #4]
900145a6:	f821 9c08 	strh.w	r9, [r1, #-8]
900145aa:	f821 cc06 	strh.w	ip, [r1, #-6]
900145ae:	f821 8c04 	strh.w	r8, [r1, #-4]
900145b2:	f821 ec02 	strh.w	lr, [r1, #-2]
900145b6:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
900145ba:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
900145be:	42ae      	cmp	r6, r5
900145c0:	db06      	blt.n	900145d0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
900145c2:	d116      	bne.n	900145f2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
900145c4:	f9b0 c000 	ldrsh.w	ip, [r0]
900145c8:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
900145cc:	45ac      	cmp	ip, r5
900145ce:	da10      	bge.n	900145f2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
900145d0:	681d      	ldr	r5, [r3, #0]
900145d2:	f9b0 8000 	ldrsh.w	r8, [r0]
900145d6:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
900145da:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
900145de:	6005      	str	r5, [r0, #0]
900145e0:	685d      	ldr	r5, [r3, #4]
900145e2:	f8a0 8008 	strh.w	r8, [r0, #8]
900145e6:	6045      	str	r5, [r0, #4]
900145e8:	8146      	strh	r6, [r0, #10]
900145ea:	f8a0 e00c 	strh.w	lr, [r0, #12]
900145ee:	f8a0 c00e 	strh.w	ip, [r0, #14]
900145f2:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
900145f6:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
900145fa:	4565      	cmp	r5, ip
900145fc:	db06      	blt.n	9001460c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
900145fe:	d119      	bne.n	90014634 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90014600:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
90014604:	f9b0 5000 	ldrsh.w	r5, [r0]
90014608:	42ae      	cmp	r6, r5
9001460a:	da13      	bge.n	90014634 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
9001460c:	460e      	mov	r6, r1
9001460e:	f9b0 9000 	ldrsh.w	r9, [r0]
90014612:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
90014616:	f856 5d08 	ldr.w	r5, [r6, #-8]!
9001461a:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
9001461e:	6005      	str	r5, [r0, #0]
90014620:	6875      	ldr	r5, [r6, #4]
90014622:	6045      	str	r5, [r0, #4]
90014624:	f821 9c08 	strh.w	r9, [r1, #-8]
90014628:	f821 cc06 	strh.w	ip, [r1, #-6]
9001462c:	f821 8c04 	strh.w	r8, [r1, #-4]
90014630:	f821 ec02 	strh.w	lr, [r1, #-2]
90014634:	3308      	adds	r3, #8
90014636:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
9001463a:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
9001463e:	45e6      	cmp	lr, ip
90014640:	dbf8      	blt.n	90014634 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90014642:	d105      	bne.n	90014650 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
90014644:	f9b3 6000 	ldrsh.w	r6, [r3]
90014648:	f9b0 5000 	ldrsh.w	r5, [r0]
9001464c:	42ae      	cmp	r6, r5
9001464e:	dbf1      	blt.n	90014634 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
90014650:	4615      	mov	r5, r2
90014652:	3a08      	subs	r2, #8
90014654:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
90014658:	45b4      	cmp	ip, r6
9001465a:	dbf9      	blt.n	90014650 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
9001465c:	d105      	bne.n	9001466a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
9001465e:	f9b0 8000 	ldrsh.w	r8, [r0]
90014662:	f9b2 6000 	ldrsh.w	r6, [r2]
90014666:	45b0      	cmp	r8, r6
90014668:	dbf2      	blt.n	90014650 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
9001466a:	4293      	cmp	r3, r2
9001466c:	f1a5 0608 	sub.w	r6, r5, #8
90014670:	d816      	bhi.n	900146a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
90014672:	f8d6 c000 	ldr.w	ip, [r6]
90014676:	f9b3 a000 	ldrsh.w	sl, [r3]
9001467a:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
9001467e:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
90014682:	f8c3 c000 	str.w	ip, [r3]
90014686:	f8d6 c004 	ldr.w	ip, [r6, #4]
9001468a:	f8c3 c004 	str.w	ip, [r3, #4]
9001468e:	f825 ac08 	strh.w	sl, [r5, #-8]
90014692:	f825 ec06 	strh.w	lr, [r5, #-6]
90014696:	f825 9c04 	strh.w	r9, [r5, #-4]
9001469a:	f825 8c02 	strh.w	r8, [r5, #-2]
9001469e:	e7c9      	b.n	90014634 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
900146a0:	f8d6 e000 	ldr.w	lr, [r6]
900146a4:	f9b0 a000 	ldrsh.w	sl, [r0]
900146a8:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
900146ac:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
900146b0:	f8c0 e000 	str.w	lr, [r0]
900146b4:	f8d6 e004 	ldr.w	lr, [r6, #4]
900146b8:	1a16      	subs	r6, r2, r0
900146ba:	f8c0 e004 	str.w	lr, [r0, #4]
900146be:	f825 ac08 	strh.w	sl, [r5, #-8]
900146c2:	f825 cc06 	strh.w	ip, [r5, #-6]
900146c6:	f825 9c04 	strh.w	r9, [r5, #-4]
900146ca:	f825 8c02 	strh.w	r8, [r5, #-2]
900146ce:	1acd      	subs	r5, r1, r3
900146d0:	10ed      	asrs	r5, r5, #3
900146d2:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
900146d6:	bfb5      	itete	lt
900146d8:	e9c4 0200 	strdlt	r0, r2, [r4]
900146dc:	e9c4 3100 	strdge	r3, r1, [r4]
900146e0:	460a      	movlt	r2, r1
900146e2:	4603      	movge	r3, r0
900146e4:	3408      	adds	r4, #8
900146e6:	4618      	mov	r0, r3
900146e8:	4611      	mov	r1, r2
900146ea:	e724      	b.n	90014536 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
900146ec:	4299      	cmp	r1, r3
900146ee:	d927      	bls.n	90014740 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x218>
900146f0:	f1a3 0210 	sub.w	r2, r3, #16
900146f4:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
900146f8:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
900146fc:	45ac      	cmp	ip, r5
900146fe:	db06      	blt.n	9001470e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
90014700:	d11c      	bne.n	9001473c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
90014702:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
90014706:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
9001470a:	42ae      	cmp	r6, r5
9001470c:	da16      	bge.n	9001473c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x214>
9001470e:	4615      	mov	r5, r2
90014710:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
90014714:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
90014718:	3a08      	subs	r2, #8
9001471a:	f855 6f08 	ldr.w	r6, [r5, #8]!
9001471e:	f9b2 e01e 	ldrsh.w	lr, [r2, #30]
90014722:	6196      	str	r6, [r2, #24]
90014724:	42a8      	cmp	r0, r5
90014726:	686e      	ldr	r6, [r5, #4]
90014728:	f8a2 9010 	strh.w	r9, [r2, #16]
9001472c:	61d6      	str	r6, [r2, #28]
9001472e:	f8a2 c012 	strh.w	ip, [r2, #18]
90014732:	f8a2 8014 	strh.w	r8, [r2, #20]
90014736:	f8a2 e016 	strh.w	lr, [r2, #22]
9001473a:	d1db      	bne.n	900146f4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
9001473c:	3308      	adds	r3, #8
9001473e:	e7d5      	b.n	900146ec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
90014740:	42bc      	cmp	r4, r7
90014742:	d903      	bls.n	9001474c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x224>
90014744:	e954 0102 	ldrd	r0, r1, [r4, #-8]
90014748:	3c08      	subs	r4, #8
9001474a:	e6f4      	b.n	90014536 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
9001474c:	b050      	add	sp, #320	@ 0x140
9001474e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

90014752 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
90014752:	b510      	push	{r4, lr}
90014754:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90014756:	4604      	mov	r4, r0
90014758:	07da      	lsls	r2, r3, #31
9001475a:	d507      	bpl.n	9001476c <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
9001475c:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
90014760:	f7ff fe8c 	bl	9001447c <_ZN8touchgfx7Outline6lineToEii>
90014764:	6a43      	ldr	r3, [r0, #36]	@ 0x24
90014766:	f023 0301 	bic.w	r3, r3, #1
9001476a:	6243      	str	r3, [r0, #36]	@ 0x24
9001476c:	6a63      	ldr	r3, [r4, #36]	@ 0x24
9001476e:	079b      	lsls	r3, r3, #30
90014770:	d521      	bpl.n	900147b6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
90014772:	6923      	ldr	r3, [r4, #16]
90014774:	88d9      	ldrh	r1, [r3, #6]
90014776:	889a      	ldrh	r2, [r3, #4]
90014778:	430a      	orrs	r2, r1
9001477a:	d010      	beq.n	9001479e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
9001477c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90014780:	2a00      	cmp	r2, #0
90014782:	db0c      	blt.n	9001479e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
90014784:	6ae1      	ldr	r1, [r4, #44]	@ 0x2c
90014786:	428a      	cmp	r2, r1
90014788:	da09      	bge.n	9001479e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
9001478a:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
9001478e:	4291      	cmp	r1, r2
90014790:	f102 0201 	add.w	r2, r2, #1
90014794:	bf88      	it	hi
90014796:	3308      	addhi	r3, #8
90014798:	60a2      	str	r2, [r4, #8]
9001479a:	bf88      	it	hi
9001479c:	6123      	strhi	r3, [r4, #16]
9001479e:	68a1      	ldr	r1, [r4, #8]
900147a0:	b129      	cbz	r1, 900147ae <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
900147a2:	6863      	ldr	r3, [r4, #4]
900147a4:	4299      	cmp	r1, r3
900147a6:	d802      	bhi.n	900147ae <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
900147a8:	68e0      	ldr	r0, [r4, #12]
900147aa:	f7ff febd 	bl	90014528 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
900147ae:	6a63      	ldr	r3, [r4, #36]	@ 0x24
900147b0:	f023 0302 	bic.w	r3, r3, #2
900147b4:	6263      	str	r3, [r4, #36]	@ 0x24
900147b6:	68e0      	ldr	r0, [r4, #12]
900147b8:	bd10      	pop	{r4, pc}
	...

900147bc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
900147bc:	4b01      	ldr	r3, [pc, #4]	@ (900147c4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
900147be:	6818      	ldr	r0, [r3, #0]
900147c0:	4770      	bx	lr
900147c2:	bf00      	nop
900147c4:	24021994 	.word	0x24021994

900147c8 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
900147c8:	4b01      	ldr	r3, [pc, #4]	@ (900147d0 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
900147ca:	6818      	ldr	r0, [r3, #0]
900147cc:	4770      	bx	lr
900147ce:	bf00      	nop
900147d0:	24021998 	.word	0x24021998

900147d4 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
900147d4:	b510      	push	{r4, lr}
900147d6:	6803      	ldr	r3, [r0, #0]
900147d8:	460c      	mov	r4, r1
900147da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900147dc:	4798      	blx	r3
900147de:	1b03      	subs	r3, r0, r4
900147e0:	4258      	negs	r0, r3
900147e2:	4158      	adcs	r0, r3
900147e4:	bd10      	pop	{r4, pc}
	...

900147e8 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
900147e8:	4b01      	ldr	r3, [pc, #4]	@ (900147f0 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
900147ea:	6019      	str	r1, [r3, #0]
900147ec:	4770      	bx	lr
900147ee:	bf00      	nop
900147f0:	2402199c 	.word	0x2402199c

900147f4 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
900147f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900147f8:	4696      	mov	lr, r2
900147fa:	b097      	sub	sp, #92	@ 0x5c
900147fc:	4605      	mov	r5, r0
900147fe:	4614      	mov	r4, r2
90014800:	460e      	mov	r6, r1
90014802:	461f      	mov	r7, r3
90014804:	f10d 0c1c 	add.w	ip, sp, #28
90014808:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
9001480c:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
90014810:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
90014814:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90014818:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9001481c:	f8de 3000 	ldr.w	r3, [lr]
90014820:	f104 0e14 	add.w	lr, r4, #20
90014824:	f8cc 3000 	str.w	r3, [ip]
90014828:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
9001482c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90014830:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90014834:	f8de 3000 	ldr.w	r3, [lr]
90014838:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
9001483c:	f8cc 3000 	str.w	r3, [ip]
90014840:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
90014844:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90014848:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9001484c:	f8de 3000 	ldr.w	r3, [lr]
90014850:	4631      	mov	r1, r6
90014852:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90014854:	4628      	mov	r0, r5
90014856:	f8cc 3000 	str.w	r3, [ip]
9001485a:	682b      	ldr	r3, [r5, #0]
9001485c:	9201      	str	r2, [sp, #4]
9001485e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90014860:	f8cd 8008 	str.w	r8, [sp, #8]
90014864:	9200      	str	r2, [sp, #0]
90014866:	aa07      	add	r2, sp, #28
90014868:	e9cd 9a03 	strd	r9, sl, [sp, #12]
9001486c:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
90014870:	463b      	mov	r3, r7
90014872:	47d8      	blx	fp
90014874:	46a6      	mov	lr, r4
90014876:	f10d 0c1c 	add.w	ip, sp, #28
9001487a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
9001487e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
90014882:	f8de 3000 	ldr.w	r3, [lr]
90014886:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
9001488a:	343c      	adds	r4, #60	@ 0x3c
9001488c:	f8cc 3000 	str.w	r3, [ip]
90014890:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90014894:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
90014898:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
9001489c:	f8de 3000 	ldr.w	r3, [lr]
900148a0:	f8cc 3000 	str.w	r3, [ip]
900148a4:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
900148a8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
900148aa:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
900148ae:	6823      	ldr	r3, [r4, #0]
900148b0:	4631      	mov	r1, r6
900148b2:	4628      	mov	r0, r5
900148b4:	f8cc 3000 	str.w	r3, [ip]
900148b8:	682b      	ldr	r3, [r5, #0]
900148ba:	e9cd 9a03 	strd	r9, sl, [sp, #12]
900148be:	9a21      	ldr	r2, [sp, #132]	@ 0x84
900148c0:	f8cd 8008 	str.w	r8, [sp, #8]
900148c4:	9201      	str	r2, [sp, #4]
900148c6:	9a20      	ldr	r2, [sp, #128]	@ 0x80
900148c8:	9200      	str	r2, [sp, #0]
900148ca:	aa07      	add	r2, sp, #28
900148cc:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
900148ce:	463b      	mov	r3, r7
900148d0:	47a0      	blx	r4
900148d2:	b017      	add	sp, #92	@ 0x5c
900148d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900148d8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
900148d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900148dc:	b08d      	sub	sp, #52	@ 0x34
900148de:	4688      	mov	r8, r1
900148e0:	f8d3 c000 	ldr.w	ip, [r3]
900148e4:	9916      	ldr	r1, [sp, #88]	@ 0x58
900148e6:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
900148ea:	680f      	ldr	r7, [r1, #0]
900148ec:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
900148f0:	eba7 070c 	sub.w	r7, r7, ip
900148f4:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
900148f8:	edd3 6a07 	vldr	s13, [r3, #28]
900148fc:	42bc      	cmp	r4, r7
900148fe:	9918      	ldr	r1, [sp, #96]	@ 0x60
90014900:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
90014904:	bfa8      	it	ge
90014906:	463c      	movge	r4, r7
90014908:	f9b1 9000 	ldrsh.w	r9, [r1]
9001490c:	f9ba 1000 	ldrsh.w	r1, [sl]
90014910:	ee07 4a90 	vmov	s15, r4
90014914:	eb09 0e0c 	add.w	lr, r9, ip
90014918:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
9001491c:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90014920:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
90014924:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
90014928:	4571      	cmp	r1, lr
9001492a:	ee25 4a04 	vmul.f32	s8, s10, s8
9001492e:	ee65 4a24 	vmul.f32	s9, s10, s9
90014932:	ee25 5a27 	vmul.f32	s10, s10, s15
90014936:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
9001493a:	ee71 0aa4 	vadd.f32	s1, s3, s9
9001493e:	ee32 1a05 	vadd.f32	s2, s4, s10
90014942:	ee87 7aa6 	vdiv.f32	s14, s15, s13
90014946:	ee36 0a84 	vadd.f32	s0, s13, s8
9001494a:	ee61 1a87 	vmul.f32	s3, s3, s14
9001494e:	ee22 2a07 	vmul.f32	s4, s4, s14
90014952:	f340 808c 	ble.w	90014a6e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
90014956:	eba1 060e 	sub.w	r6, r1, lr
9001495a:	fb96 f5f4 	sdiv	r5, r6, r4
9001495e:	ee07 5a10 	vmov	s14, r5
90014962:	2d00      	cmp	r5, #0
90014964:	fb04 6615 	mls	r6, r4, r5, r6
90014968:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001496c:	eea7 0a04 	vfma.f32	s0, s14, s8
90014970:	eee7 0a24 	vfma.f32	s1, s14, s9
90014974:	eea7 1a05 	vfma.f32	s2, s14, s10
90014978:	dd12      	ble.n	900149a0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
9001497a:	ee70 6a44 	vsub.f32	s13, s0, s8
9001497e:	ee70 1ae4 	vsub.f32	s3, s1, s9
90014982:	ee31 2a45 	vsub.f32	s4, s2, s10
90014986:	eef5 6a40 	vcmp.f32	s13, #0.0
9001498a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001498e:	bf14      	ite	ne
90014990:	ee87 7aa6 	vdivne.f32	s14, s15, s13
90014994:	eeb0 7a67 	vmoveq.f32	s14, s15
90014998:	ee61 1a87 	vmul.f32	s3, s3, s14
9001499c:	ee22 2a07 	vmul.f32	s4, s4, s14
900149a0:	fb05 f204 	mul.w	r2, r5, r4
900149a4:	1abf      	subs	r7, r7, r2
900149a6:	4494      	add	ip, r2
900149a8:	f8ba 2004 	ldrh.w	r2, [sl, #4]
900149ac:	4411      	add	r1, r2
900149ae:	eb09 020c 	add.w	r2, r9, ip
900149b2:	b209      	sxth	r1, r1
900149b4:	443a      	add	r2, r7
900149b6:	428a      	cmp	r2, r1
900149b8:	bfc4      	itt	gt
900149ba:	eba1 0209 	subgt.w	r2, r1, r9
900149be:	eba2 070c 	subgt.w	r7, r2, ip
900149c2:	2f00      	cmp	r7, #0
900149c4:	dd50      	ble.n	90014a68 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
900149c6:	fb97 f1f4 	sdiv	r1, r7, r4
900149ca:	fb04 7211 	mls	r2, r4, r1, r7
900149ce:	b90a      	cbnz	r2, 900149d4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
900149d0:	3901      	subs	r1, #1
900149d2:	4622      	mov	r2, r4
900149d4:	eec7 3a80 	vdiv.f32	s7, s15, s0
900149d8:	6840      	ldr	r0, [r0, #4]
900149da:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
900149de:	44b6      	add	lr, r6
900149e0:	f8d0 a000 	ldr.w	sl, [r0]
900149e4:	2900      	cmp	r1, #0
900149e6:	bfcc      	ite	gt
900149e8:	46a1      	movgt	r9, r4
900149ea:	4691      	movle	r9, r2
900149ec:	900b      	str	r0, [sp, #44]	@ 0x2c
900149ee:	9817      	ldr	r0, [sp, #92]	@ 0x5c
900149f0:	fb04 e505 	mla	r5, r4, r5, lr
900149f4:	eef0 6a42 	vmov.f32	s13, s4
900149f8:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
900149fc:	9008      	str	r0, [sp, #32]
900149fe:	eeb0 7a61 	vmov.f32	s14, s3
90014a02:	9818      	ldr	r0, [sp, #96]	@ 0x60
90014a04:	695b      	ldr	r3, [r3, #20]
90014a06:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90014a0a:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
90014a0e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
90014a12:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90014a14:	445b      	add	r3, fp
90014a16:	9307      	str	r3, [sp, #28]
90014a18:	ee16 3a90 	vmov	r3, s13
90014a1c:	e9cd 8505 	strd	r8, r5, [sp, #20]
90014a20:	ee60 2aa3 	vmul.f32	s5, s1, s7
90014a24:	ee21 3a23 	vmul.f32	s6, s2, s7
90014a28:	ee72 7ae1 	vsub.f32	s15, s5, s3
90014a2c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90014a30:	ee17 7a90 	vmov	r7, s15
90014a34:	ee73 7a42 	vsub.f32	s15, s6, s4
90014a38:	fb97 f7f4 	sdiv	r7, r7, r4
90014a3c:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
90014a40:	ee17 ca90 	vmov	ip, s15
90014a44:	fb9c fcf4 	sdiv	ip, ip, r4
90014a48:	fb0c 3306 	mla	r3, ip, r6, r3
90014a4c:	9302      	str	r3, [sp, #8]
90014a4e:	ee17 3a10 	vmov	r3, s14
90014a52:	e9cd 7c03 	strd	r7, ip, [sp, #12]
90014a56:	fb07 3706 	mla	r7, r7, r6, r3
90014a5a:	eba9 0306 	sub.w	r3, r9, r6
90014a5e:	e9cd 4700 	strd	r4, r7, [sp]
90014a62:	f8da 4008 	ldr.w	r4, [sl, #8]
90014a66:	47a0      	blx	r4
90014a68:	b00d      	add	sp, #52	@ 0x34
90014a6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90014a6e:	2500      	movs	r5, #0
90014a70:	462e      	mov	r6, r5
90014a72:	e799      	b.n	900149a8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

90014a74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
90014a74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90014a78:	b0db      	sub	sp, #364	@ 0x16c
90014a7a:	461d      	mov	r5, r3
90014a7c:	4614      	mov	r4, r2
90014a7e:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
90014a82:	910f      	str	r1, [sp, #60]	@ 0x3c
90014a84:	4629      	mov	r1, r5
90014a86:	930a      	str	r3, [sp, #40]	@ 0x28
90014a88:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
90014a8c:	9009      	str	r0, [sp, #36]	@ 0x24
90014a8e:	930b      	str	r3, [sp, #44]	@ 0x2c
90014a90:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
90014a94:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
90014a98:	9310      	str	r3, [sp, #64]	@ 0x40
90014a9a:	6803      	ldr	r3, [r0, #0]
90014a9c:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
90014a9e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
90014aa2:	47b8      	blx	r7
90014aa4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90014aa6:	6058      	str	r0, [r3, #4]
90014aa8:	2800      	cmp	r0, #0
90014aaa:	f000 83a1 	beq.w	900151f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014aae:	682b      	ldr	r3, [r5, #0]
90014ab0:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
90014ab4:	ed94 7a02 	vldr	s14, [r4, #8]
90014ab8:	9314      	str	r3, [sp, #80]	@ 0x50
90014aba:	686b      	ldr	r3, [r5, #4]
90014abc:	eeb4 7ae7 	vcmpe.f32	s14, s15
90014ac0:	9315      	str	r3, [sp, #84]	@ 0x54
90014ac2:	4bc1      	ldr	r3, [pc, #772]	@ (90014dc8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
90014ac4:	7819      	ldrb	r1, [r3, #0]
90014ac6:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
90014aca:	2900      	cmp	r1, #0
90014acc:	bf16      	itet	ne
90014ace:	4619      	movne	r1, r3
90014ad0:	4611      	moveq	r1, r2
90014ad2:	4613      	movne	r3, r2
90014ad4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014ad8:	9116      	str	r1, [sp, #88]	@ 0x58
90014ada:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
90014ade:	f240 8387 	bls.w	900151f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014ae2:	ed94 7a07 	vldr	s14, [r4, #28]
90014ae6:	eeb4 7ae7 	vcmpe.f32	s14, s15
90014aea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014aee:	f240 837f 	bls.w	900151f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014af2:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
90014af6:	eeb4 7ae7 	vcmpe.f32	s14, s15
90014afa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90014afe:	f240 8377 	bls.w	900151f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014b02:	6822      	ldr	r2, [r4, #0]
90014b04:	4bb1      	ldr	r3, [pc, #708]	@ (90014dcc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
90014b06:	429a      	cmp	r2, r3
90014b08:	f2c0 8372 	blt.w	900151f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014b0c:	49b0      	ldr	r1, [pc, #704]	@ (90014dd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
90014b0e:	6963      	ldr	r3, [r4, #20]
90014b10:	428a      	cmp	r2, r1
90014b12:	f300 836d 	bgt.w	900151f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014b16:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90014b1a:	48ae      	ldr	r0, [pc, #696]	@ (90014dd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
90014b1c:	33ff      	adds	r3, #255	@ 0xff
90014b1e:	4283      	cmp	r3, r0
90014b20:	f200 8366 	bhi.w	900151f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014b24:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
90014b26:	4dac      	ldr	r5, [pc, #688]	@ (90014dd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
90014b28:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
90014b2c:	33ff      	adds	r3, #255	@ 0xff
90014b2e:	42ab      	cmp	r3, r5
90014b30:	f200 835e 	bhi.w	900151f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014b34:	6862      	ldr	r2, [r4, #4]
90014b36:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
90014b3a:	33ff      	adds	r3, #255	@ 0xff
90014b3c:	4283      	cmp	r3, r0
90014b3e:	f200 8357 	bhi.w	900151f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014b42:	69a1      	ldr	r1, [r4, #24]
90014b44:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
90014b48:	33ff      	adds	r3, #255	@ 0xff
90014b4a:	4283      	cmp	r3, r0
90014b4c:	f200 8350 	bhi.w	900151f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014b50:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
90014b52:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
90014b56:	30ff      	adds	r0, #255	@ 0xff
90014b58:	42a8      	cmp	r0, r5
90014b5a:	f200 8349 	bhi.w	900151f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
90014b5e:	428a      	cmp	r2, r1
90014b60:	f280 8110 	bge.w	90014d84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
90014b64:	429a      	cmp	r2, r3
90014b66:	f300 8119 	bgt.w	90014d9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
90014b6a:	4299      	cmp	r1, r3
90014b6c:	f280 811d 	bge.w	90014daa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
90014b70:	2502      	movs	r5, #2
90014b72:	2701      	movs	r7, #1
90014b74:	46a9      	mov	r9, r5
90014b76:	46b8      	mov	r8, r7
90014b78:	f04f 0a00 	mov.w	sl, #0
90014b7c:	4621      	mov	r1, r4
90014b7e:	a849      	add	r0, sp, #292	@ 0x124
90014b80:	f004 fa8c 	bl	9001909c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
90014b84:	4622      	mov	r2, r4
90014b86:	4653      	mov	r3, sl
90014b88:	a949      	add	r1, sp, #292	@ 0x124
90014b8a:	f8cd 9000 	str.w	r9, [sp]
90014b8e:	a819      	add	r0, sp, #100	@ 0x64
90014b90:	f004 fbb4 	bl	900192fc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90014b94:	4622      	mov	r2, r4
90014b96:	4653      	mov	r3, sl
90014b98:	a949      	add	r1, sp, #292	@ 0x124
90014b9a:	f8cd 8000 	str.w	r8, [sp]
90014b9e:	a829      	add	r0, sp, #164	@ 0xa4
90014ba0:	f004 fbac 	bl	900192fc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90014ba4:	4643      	mov	r3, r8
90014ba6:	4622      	mov	r2, r4
90014ba8:	a949      	add	r1, sp, #292	@ 0x124
90014baa:	f8cd 9000 	str.w	r9, [sp]
90014bae:	a839      	add	r0, sp, #228	@ 0xe4
90014bb0:	f004 fba4 	bl	900192fc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
90014bb4:	42af      	cmp	r7, r5
90014bb6:	af12      	add	r7, sp, #72	@ 0x48
90014bb8:	bfb7      	itett	lt
90014bba:	2300      	movlt	r3, #0
90014bbc:	2301      	movge	r3, #1
90014bbe:	ad29      	addlt	r5, sp, #164	@ 0xa4
90014bc0:	ac19      	addlt	r4, sp, #100	@ 0x64
90014bc2:	bfb1      	iteee	lt
90014bc4:	930e      	strlt	r3, [sp, #56]	@ 0x38
90014bc6:	ad19      	addge	r5, sp, #100	@ 0x64
90014bc8:	930e      	strge	r3, [sp, #56]	@ 0x38
90014bca:	ac29      	addge	r4, sp, #164	@ 0xa4
90014bcc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90014bce:	e893 0003 	ldmia.w	r3, {r0, r1}
90014bd2:	e887 0003 	stmia.w	r7, {r0, r1}
90014bd6:	b928      	cbnz	r0, 90014be4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
90014bd8:	4b80      	ldr	r3, [pc, #512]	@ (90014ddc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
90014bda:	6818      	ldr	r0, [r3, #0]
90014bdc:	6803      	ldr	r3, [r0, #0]
90014bde:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90014be0:	4798      	blx	r3
90014be2:	6038      	str	r0, [r7, #0]
90014be4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90014be6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90014bea:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90014bee:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
90014bf0:	930c      	str	r3, [sp, #48]	@ 0x30
90014bf2:	990c      	ldr	r1, [sp, #48]	@ 0x30
90014bf4:	6963      	ldr	r3, [r4, #20]
90014bf6:	440b      	add	r3, r1
90014bf8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90014bfc:	4408      	add	r0, r1
90014bfe:	b200      	sxth	r0, r0
90014c00:	4283      	cmp	r3, r0
90014c02:	900d      	str	r0, [sp, #52]	@ 0x34
90014c04:	f280 80dd 	bge.w	90014dc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
90014c08:	428b      	cmp	r3, r1
90014c0a:	da08      	bge.n	90014c1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90014c0c:	2a00      	cmp	r2, #0
90014c0e:	dd06      	ble.n	90014c1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90014c10:	1acb      	subs	r3, r1, r3
90014c12:	429a      	cmp	r2, r3
90014c14:	f2c0 80e4 	blt.w	90014de0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
90014c18:	2b00      	cmp	r3, #0
90014c1a:	f300 80e2 	bgt.w	90014de2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
90014c1e:	6967      	ldr	r7, [r4, #20]
90014c20:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
90014c24:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90014c26:	443b      	add	r3, r7
90014c28:	461f      	mov	r7, r3
90014c2a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90014c2c:	1bdf      	subs	r7, r3, r7
90014c2e:	4297      	cmp	r7, r2
90014c30:	bfa8      	it	ge
90014c32:	4617      	movge	r7, r2
90014c34:	2f00      	cmp	r7, #0
90014c36:	f340 8166 	ble.w	90014f06 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
90014c3a:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90014c3c:	6829      	ldr	r1, [r5, #0]
90014c3e:	f9b3 2000 	ldrsh.w	r2, [r3]
90014c42:	f9bb 3000 	ldrsh.w	r3, [fp]
90014c46:	4411      	add	r1, r2
90014c48:	6820      	ldr	r0, [r4, #0]
90014c4a:	4299      	cmp	r1, r3
90014c4c:	dd1a      	ble.n	90014c84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90014c4e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90014c52:	4402      	add	r2, r0
90014c54:	440b      	add	r3, r1
90014c56:	b21b      	sxth	r3, r3
90014c58:	429a      	cmp	r2, r3
90014c5a:	dc13      	bgt.n	90014c84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
90014c5c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90014c5e:	a912      	add	r1, sp, #72	@ 0x48
90014c60:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90014c62:	9809      	ldr	r0, [sp, #36]	@ 0x24
90014c64:	681b      	ldr	r3, [r3, #0]
90014c66:	9206      	str	r2, [sp, #24]
90014c68:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90014c6a:	9500      	str	r5, [sp, #0]
90014c6c:	9205      	str	r2, [sp, #20]
90014c6e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90014c70:	e9cd b203 	strd	fp, r2, [sp, #12]
90014c74:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90014c76:	e9cd 8201 	strd	r8, r2, [sp, #4]
90014c7a:	aa49      	add	r2, sp, #292	@ 0x124
90014c7c:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90014c80:	4623      	mov	r3, r4
90014c82:	47c8      	blx	r9
90014c84:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
90014c88:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
90014c8c:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90014c90:	ee37 7a27 	vadd.f32	s14, s14, s15
90014c94:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
90014c98:	68a1      	ldr	r1, [r4, #8]
90014c9a:	ee77 7aa6 	vadd.f32	s15, s15, s13
90014c9e:	ed94 6a08 	vldr	s12, [r4, #32]
90014ca2:	edd4 6a07 	vldr	s13, [r4, #28]
90014ca6:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90014caa:	ee76 6a86 	vadd.f32	s13, s13, s12
90014cae:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90014cb2:	e9d4 2300 	ldrd	r2, r3, [r4]
90014cb6:	edc4 6a07 	vstr	s13, [r4, #28]
90014cba:	441a      	add	r2, r3
90014cbc:	6963      	ldr	r3, [r4, #20]
90014cbe:	3301      	adds	r3, #1
90014cc0:	6022      	str	r2, [r4, #0]
90014cc2:	6163      	str	r3, [r4, #20]
90014cc4:	69a3      	ldr	r3, [r4, #24]
90014cc6:	3b01      	subs	r3, #1
90014cc8:	61a3      	str	r3, [r4, #24]
90014cca:	6923      	ldr	r3, [r4, #16]
90014ccc:	440b      	add	r3, r1
90014cce:	68e1      	ldr	r1, [r4, #12]
90014cd0:	428b      	cmp	r3, r1
90014cd2:	6123      	str	r3, [r4, #16]
90014cd4:	db15      	blt.n	90014d02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
90014cd6:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
90014cda:	3201      	adds	r2, #1
90014cdc:	1a5b      	subs	r3, r3, r1
90014cde:	ee76 6a26 	vadd.f32	s13, s12, s13
90014ce2:	6022      	str	r2, [r4, #0]
90014ce4:	6123      	str	r3, [r4, #16]
90014ce6:	edc4 6a07 	vstr	s13, [r4, #28]
90014cea:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
90014cee:	ee36 7a87 	vadd.f32	s14, s13, s14
90014cf2:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90014cf6:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
90014cfa:	ee77 7a27 	vadd.f32	s15, s14, s15
90014cfe:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90014d02:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
90014d06:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
90014d0a:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
90014d0e:	ee37 7a27 	vadd.f32	s14, s14, s15
90014d12:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
90014d16:	68a9      	ldr	r1, [r5, #8]
90014d18:	ee77 7aa6 	vadd.f32	s15, s15, s13
90014d1c:	ed95 6a08 	vldr	s12, [r5, #32]
90014d20:	edd5 6a07 	vldr	s13, [r5, #28]
90014d24:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90014d28:	ee76 6a86 	vadd.f32	s13, s13, s12
90014d2c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90014d30:	e9d5 2300 	ldrd	r2, r3, [r5]
90014d34:	edc5 6a07 	vstr	s13, [r5, #28]
90014d38:	441a      	add	r2, r3
90014d3a:	696b      	ldr	r3, [r5, #20]
90014d3c:	3301      	adds	r3, #1
90014d3e:	602a      	str	r2, [r5, #0]
90014d40:	616b      	str	r3, [r5, #20]
90014d42:	69ab      	ldr	r3, [r5, #24]
90014d44:	3b01      	subs	r3, #1
90014d46:	61ab      	str	r3, [r5, #24]
90014d48:	692b      	ldr	r3, [r5, #16]
90014d4a:	440b      	add	r3, r1
90014d4c:	68e9      	ldr	r1, [r5, #12]
90014d4e:	428b      	cmp	r3, r1
90014d50:	612b      	str	r3, [r5, #16]
90014d52:	db15      	blt.n	90014d80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
90014d54:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
90014d58:	3201      	adds	r2, #1
90014d5a:	1a5b      	subs	r3, r3, r1
90014d5c:	ee76 6a26 	vadd.f32	s13, s12, s13
90014d60:	602a      	str	r2, [r5, #0]
90014d62:	612b      	str	r3, [r5, #16]
90014d64:	edc5 6a07 	vstr	s13, [r5, #28]
90014d68:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
90014d6c:	ee36 7a87 	vadd.f32	s14, s13, s14
90014d70:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90014d74:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
90014d78:	ee77 7a27 	vadd.f32	s15, s14, s15
90014d7c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
90014d80:	3f01      	subs	r7, #1
90014d82:	e757      	b.n	90014c34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
90014d84:	4299      	cmp	r1, r3
90014d86:	dc13      	bgt.n	90014db0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
90014d88:	429a      	cmp	r2, r3
90014d8a:	da14      	bge.n	90014db6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
90014d8c:	2502      	movs	r5, #2
90014d8e:	2703      	movs	r7, #3
90014d90:	f04f 0800 	mov.w	r8, #0
90014d94:	46a9      	mov	r9, r5
90014d96:	f04f 0a01 	mov.w	sl, #1
90014d9a:	e6ef      	b.n	90014b7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90014d9c:	2501      	movs	r5, #1
90014d9e:	2700      	movs	r7, #0
90014da0:	46a9      	mov	r9, r5
90014da2:	46b8      	mov	r8, r7
90014da4:	f04f 0a02 	mov.w	sl, #2
90014da8:	e6e8      	b.n	90014b7c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
90014daa:	2501      	movs	r5, #1
90014dac:	2702      	movs	r7, #2
90014dae:	e6e1      	b.n	90014b74 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
90014db0:	2500      	movs	r5, #0
90014db2:	2701      	movs	r7, #1
90014db4:	e7f4      	b.n	90014da0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
90014db6:	2702      	movs	r7, #2
90014db8:	2503      	movs	r5, #3
90014dba:	f04f 0900 	mov.w	r9, #0
90014dbe:	46b8      	mov	r8, r7
90014dc0:	e7e9      	b.n	90014d96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
90014dc2:	4613      	mov	r3, r2
90014dc4:	e728      	b.n	90014c18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
90014dc6:	bf00      	nop
90014dc8:	24021984 	.word	0x24021984
90014dcc:	fffd8f01 	.word	0xfffd8f01
90014dd0:	00027100 	.word	0x00027100
90014dd4:	0004e1ff 	.word	0x0004e1ff
90014dd8:	0004e1fe 	.word	0x0004e1fe
90014ddc:	2402198c 	.word	0x2402198c
90014de0:	4613      	mov	r3, r2
90014de2:	992b      	ldr	r1, [sp, #172]	@ 0xac
90014de4:	469e      	mov	lr, r3
90014de6:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
90014de8:	469c      	mov	ip, r3
90014dea:	9111      	str	r1, [sp, #68]	@ 0x44
90014dec:	f04f 0900 	mov.w	r9, #0
90014df0:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
90014df4:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
90014df8:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
90014dfc:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
90014e00:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
90014e04:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
90014e08:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
90014e0c:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
90014e10:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
90014e14:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
90014e18:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
90014e1c:	f1bc 0f00 	cmp.w	ip, #0
90014e20:	d147      	bne.n	90014eb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
90014e22:	eb03 0c07 	add.w	ip, r3, r7
90014e26:	1ad7      	subs	r7, r2, r3
90014e28:	f1b9 0f00 	cmp.w	r9, #0
90014e2c:	d009      	beq.n	90014e42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
90014e2e:	9029      	str	r0, [sp, #164]	@ 0xa4
90014e30:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
90014e34:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
90014e38:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
90014e3c:	912d      	str	r1, [sp, #180]	@ 0xb4
90014e3e:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
90014e42:	991b      	ldr	r1, [sp, #108]	@ 0x6c
90014e44:	f04f 0800 	mov.w	r8, #0
90014e48:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
90014e4c:	9111      	str	r1, [sp, #68]	@ 0x44
90014e4e:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
90014e52:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
90014e56:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
90014e5a:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
90014e5e:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
90014e62:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
90014e66:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
90014e6a:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
90014e6e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
90014e72:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
90014e76:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
90014e7a:	f1be 0f00 	cmp.w	lr, #0
90014e7e:	d031      	beq.n	90014ee4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
90014e80:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90014e82:	4450      	add	r0, sl
90014e84:	ee76 6aa4 	vadd.f32	s13, s13, s9
90014e88:	4431      	add	r1, r6
90014e8a:	ee37 7a04 	vadd.f32	s14, s14, s8
90014e8e:	ee77 7aa3 	vadd.f32	s15, s15, s7
90014e92:	4549      	cmp	r1, r9
90014e94:	db08      	blt.n	90014ea8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
90014e96:	ee77 7a85 	vadd.f32	s15, s15, s10
90014e9a:	3001      	adds	r0, #1
90014e9c:	ee76 6aa5 	vadd.f32	s13, s13, s11
90014ea0:	eba1 0109 	sub.w	r1, r1, r9
90014ea4:	ee37 7a06 	vadd.f32	s14, s14, s12
90014ea8:	f10e 3eff 	add.w	lr, lr, #4294967295
90014eac:	f04f 0801 	mov.w	r8, #1
90014eb0:	e7e3      	b.n	90014e7a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
90014eb2:	9e11      	ldr	r6, [sp, #68]	@ 0x44
90014eb4:	4450      	add	r0, sl
90014eb6:	ee37 7a24 	vadd.f32	s14, s14, s9
90014eba:	4431      	add	r1, r6
90014ebc:	ee77 7a84 	vadd.f32	s15, s15, s8
90014ec0:	ee76 6aa3 	vadd.f32	s13, s13, s7
90014ec4:	4541      	cmp	r1, r8
90014ec6:	db08      	blt.n	90014eda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
90014ec8:	ee76 6a85 	vadd.f32	s13, s13, s10
90014ecc:	3001      	adds	r0, #1
90014ece:	ee37 7a25 	vadd.f32	s14, s14, s11
90014ed2:	eba1 0108 	sub.w	r1, r1, r8
90014ed6:	ee77 7a86 	vadd.f32	s15, s15, s12
90014eda:	f10c 3cff 	add.w	ip, ip, #4294967295
90014ede:	f04f 0901 	mov.w	r9, #1
90014ee2:	e79b      	b.n	90014e1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
90014ee4:	449c      	add	ip, r3
90014ee6:	1aff      	subs	r7, r7, r3
90014ee8:	f1b8 0f00 	cmp.w	r8, #0
90014eec:	d009      	beq.n	90014f02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
90014eee:	9019      	str	r0, [sp, #100]	@ 0x64
90014ef0:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
90014ef4:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
90014ef8:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
90014efc:	911d      	str	r1, [sp, #116]	@ 0x74
90014efe:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
90014f02:	1ad2      	subs	r2, r2, r3
90014f04:	e68b      	b.n	90014c1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
90014f06:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90014f08:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
90014f0a:	2b00      	cmp	r3, #0
90014f0c:	f000 80d1 	beq.w	900150b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
90014f10:	ad19      	add	r5, sp, #100	@ 0x64
90014f12:	ac39      	add	r4, sp, #228	@ 0xe4
90014f14:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90014f16:	f8bb 0006 	ldrh.w	r0, [fp, #6]
90014f1a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
90014f1e:	930c      	str	r3, [sp, #48]	@ 0x30
90014f20:	990c      	ldr	r1, [sp, #48]	@ 0x30
90014f22:	6963      	ldr	r3, [r4, #20]
90014f24:	440b      	add	r3, r1
90014f26:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
90014f2a:	4408      	add	r0, r1
90014f2c:	b200      	sxth	r0, r0
90014f2e:	4283      	cmp	r3, r0
90014f30:	900d      	str	r0, [sp, #52]	@ 0x34
90014f32:	f280 80c1 	bge.w	900150b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
90014f36:	428b      	cmp	r3, r1
90014f38:	da08      	bge.n	90014f4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90014f3a:	2a00      	cmp	r2, #0
90014f3c:	dd06      	ble.n	90014f4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
90014f3e:	1acb      	subs	r3, r1, r3
90014f40:	429a      	cmp	r2, r3
90014f42:	f2c0 80bb 	blt.w	900150bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
90014f46:	2b00      	cmp	r3, #0
90014f48:	f300 80b9 	bgt.w	900150be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
90014f4c:	6967      	ldr	r7, [r4, #20]
90014f4e:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
90014f52:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90014f54:	443b      	add	r3, r7
90014f56:	461f      	mov	r7, r3
90014f58:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90014f5a:	1bdf      	subs	r7, r3, r7
90014f5c:	4297      	cmp	r7, r2
90014f5e:	bfa8      	it	ge
90014f60:	4617      	movge	r7, r2
90014f62:	2f00      	cmp	r7, #0
90014f64:	f340 813c 	ble.w	900151e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
90014f68:	9b64      	ldr	r3, [sp, #400]	@ 0x190
90014f6a:	6829      	ldr	r1, [r5, #0]
90014f6c:	f9b3 2000 	ldrsh.w	r2, [r3]
90014f70:	f9bb 3000 	ldrsh.w	r3, [fp]
90014f74:	4411      	add	r1, r2
90014f76:	6820      	ldr	r0, [r4, #0]
90014f78:	4299      	cmp	r1, r3
90014f7a:	dd1a      	ble.n	90014fb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90014f7c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
90014f80:	4402      	add	r2, r0
90014f82:	440b      	add	r3, r1
90014f84:	b21b      	sxth	r3, r3
90014f86:	429a      	cmp	r2, r3
90014f88:	dc13      	bgt.n	90014fb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
90014f8a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90014f8c:	a912      	add	r1, sp, #72	@ 0x48
90014f8e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90014f90:	9809      	ldr	r0, [sp, #36]	@ 0x24
90014f92:	681b      	ldr	r3, [r3, #0]
90014f94:	9206      	str	r2, [sp, #24]
90014f96:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90014f98:	9500      	str	r5, [sp, #0]
90014f9a:	9205      	str	r2, [sp, #20]
90014f9c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90014f9e:	e9cd b203 	strd	fp, r2, [sp, #12]
90014fa2:	9a64      	ldr	r2, [sp, #400]	@ 0x190
90014fa4:	e9cd 8201 	strd	r8, r2, [sp, #4]
90014fa8:	aa49      	add	r2, sp, #292	@ 0x124
90014faa:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
90014fae:	4623      	mov	r3, r4
90014fb0:	47c8      	blx	r9
90014fb2:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
90014fb6:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
90014fba:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
90014fbe:	ee37 7a27 	vadd.f32	s14, s14, s15
90014fc2:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
90014fc6:	68a1      	ldr	r1, [r4, #8]
90014fc8:	ee77 7aa6 	vadd.f32	s15, s15, s13
90014fcc:	ed94 6a08 	vldr	s12, [r4, #32]
90014fd0:	edd4 6a07 	vldr	s13, [r4, #28]
90014fd4:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90014fd8:	ee76 6a86 	vadd.f32	s13, s13, s12
90014fdc:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90014fe0:	e9d4 2300 	ldrd	r2, r3, [r4]
90014fe4:	edc4 6a07 	vstr	s13, [r4, #28]
90014fe8:	441a      	add	r2, r3
90014fea:	6963      	ldr	r3, [r4, #20]
90014fec:	3301      	adds	r3, #1
90014fee:	6022      	str	r2, [r4, #0]
90014ff0:	6163      	str	r3, [r4, #20]
90014ff2:	69a3      	ldr	r3, [r4, #24]
90014ff4:	3b01      	subs	r3, #1
90014ff6:	61a3      	str	r3, [r4, #24]
90014ff8:	6923      	ldr	r3, [r4, #16]
90014ffa:	440b      	add	r3, r1
90014ffc:	68e1      	ldr	r1, [r4, #12]
90014ffe:	428b      	cmp	r3, r1
90015000:	6123      	str	r3, [r4, #16]
90015002:	db15      	blt.n	90015030 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
90015004:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
90015008:	3201      	adds	r2, #1
9001500a:	1a5b      	subs	r3, r3, r1
9001500c:	ee76 6a26 	vadd.f32	s13, s12, s13
90015010:	6022      	str	r2, [r4, #0]
90015012:	6123      	str	r3, [r4, #16]
90015014:	edc4 6a07 	vstr	s13, [r4, #28]
90015018:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
9001501c:	ee36 7a87 	vadd.f32	s14, s13, s14
90015020:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
90015024:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
90015028:	ee77 7a27 	vadd.f32	s15, s14, s15
9001502c:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
90015030:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
90015034:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
90015038:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
9001503c:	ee37 7a27 	vadd.f32	s14, s14, s15
90015040:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
90015044:	68a9      	ldr	r1, [r5, #8]
90015046:	ee77 7aa6 	vadd.f32	s15, s15, s13
9001504a:	ed95 6a08 	vldr	s12, [r5, #32]
9001504e:	edd5 6a07 	vldr	s13, [r5, #28]
90015052:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
90015056:	ee76 6a86 	vadd.f32	s13, s13, s12
9001505a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
9001505e:	e9d5 2300 	ldrd	r2, r3, [r5]
90015062:	edc5 6a07 	vstr	s13, [r5, #28]
90015066:	441a      	add	r2, r3
90015068:	696b      	ldr	r3, [r5, #20]
9001506a:	3301      	adds	r3, #1
9001506c:	602a      	str	r2, [r5, #0]
9001506e:	616b      	str	r3, [r5, #20]
90015070:	69ab      	ldr	r3, [r5, #24]
90015072:	3b01      	subs	r3, #1
90015074:	61ab      	str	r3, [r5, #24]
90015076:	692b      	ldr	r3, [r5, #16]
90015078:	440b      	add	r3, r1
9001507a:	68e9      	ldr	r1, [r5, #12]
9001507c:	428b      	cmp	r3, r1
9001507e:	612b      	str	r3, [r5, #16]
90015080:	db15      	blt.n	900150ae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
90015082:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
90015086:	3201      	adds	r2, #1
90015088:	1a5b      	subs	r3, r3, r1
9001508a:	ee76 6a26 	vadd.f32	s13, s12, s13
9001508e:	602a      	str	r2, [r5, #0]
90015090:	612b      	str	r3, [r5, #16]
90015092:	edc5 6a07 	vstr	s13, [r5, #28]
90015096:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
9001509a:	ee36 7a87 	vadd.f32	s14, s13, s14
9001509e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
900150a2:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
900150a6:	ee77 7a27 	vadd.f32	s15, s14, s15
900150aa:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
900150ae:	3f01      	subs	r7, #1
900150b0:	e757      	b.n	90014f62 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
900150b2:	ad39      	add	r5, sp, #228	@ 0xe4
900150b4:	ac19      	add	r4, sp, #100	@ 0x64
900150b6:	e72d      	b.n	90014f14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
900150b8:	4613      	mov	r3, r2
900150ba:	e744      	b.n	90014f46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
900150bc:	4613      	mov	r3, r2
900150be:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
900150c0:	469e      	mov	lr, r3
900150c2:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
900150c6:	461f      	mov	r7, r3
900150c8:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
900150cc:	f04f 0900 	mov.w	r9, #0
900150d0:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
900150d4:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
900150d8:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
900150dc:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
900150e0:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
900150e4:	993d      	ldr	r1, [sp, #244]	@ 0xf4
900150e6:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
900150ea:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
900150ee:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
900150f2:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
900150f6:	960e      	str	r6, [sp, #56]	@ 0x38
900150f8:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
900150fc:	2f00      	cmp	r7, #0
900150fe:	d146      	bne.n	9001518e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
90015100:	449c      	add	ip, r3
90015102:	1ad7      	subs	r7, r2, r3
90015104:	f1b9 0f00 	cmp.w	r9, #0
90015108:	d009      	beq.n	9001511e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
9001510a:	9039      	str	r0, [sp, #228]	@ 0xe4
9001510c:	913d      	str	r1, [sp, #244]	@ 0xf4
9001510e:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
90015112:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
90015116:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
9001511a:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
9001511e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
90015120:	f04f 0800 	mov.w	r8, #0
90015124:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
90015128:	910e      	str	r1, [sp, #56]	@ 0x38
9001512a:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
9001512e:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
90015132:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
90015136:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
9001513a:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
9001513e:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
90015142:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
90015146:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
9001514a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
9001514e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
90015152:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
90015156:	f1be 0f00 	cmp.w	lr, #0
9001515a:	d030      	beq.n	900151be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
9001515c:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
9001515e:	4450      	add	r0, sl
90015160:	ee76 6aa4 	vadd.f32	s13, s13, s9
90015164:	4431      	add	r1, r6
90015166:	ee37 7a04 	vadd.f32	s14, s14, s8
9001516a:	ee77 7aa3 	vadd.f32	s15, s15, s7
9001516e:	4549      	cmp	r1, r9
90015170:	db08      	blt.n	90015184 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
90015172:	ee77 7a85 	vadd.f32	s15, s15, s10
90015176:	3001      	adds	r0, #1
90015178:	ee76 6aa5 	vadd.f32	s13, s13, s11
9001517c:	eba1 0109 	sub.w	r1, r1, r9
90015180:	ee37 7a06 	vadd.f32	s14, s14, s12
90015184:	f10e 3eff 	add.w	lr, lr, #4294967295
90015188:	f04f 0801 	mov.w	r8, #1
9001518c:	e7e3      	b.n	90015156 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
9001518e:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
90015190:	4450      	add	r0, sl
90015192:	ee37 7a24 	vadd.f32	s14, s14, s9
90015196:	4431      	add	r1, r6
90015198:	ee77 7a84 	vadd.f32	s15, s15, s8
9001519c:	ee76 6aa3 	vadd.f32	s13, s13, s7
900151a0:	4541      	cmp	r1, r8
900151a2:	db08      	blt.n	900151b6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
900151a4:	ee76 6a85 	vadd.f32	s13, s13, s10
900151a8:	3001      	adds	r0, #1
900151aa:	ee37 7a25 	vadd.f32	s14, s14, s11
900151ae:	eba1 0108 	sub.w	r1, r1, r8
900151b2:	ee77 7a86 	vadd.f32	s15, s15, s12
900151b6:	3f01      	subs	r7, #1
900151b8:	f04f 0901 	mov.w	r9, #1
900151bc:	e79e      	b.n	900150fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
900151be:	449c      	add	ip, r3
900151c0:	1aff      	subs	r7, r7, r3
900151c2:	f1b8 0f00 	cmp.w	r8, #0
900151c6:	d009      	beq.n	900151dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
900151c8:	9019      	str	r0, [sp, #100]	@ 0x64
900151ca:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
900151ce:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
900151d2:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
900151d6:	911d      	str	r1, [sp, #116]	@ 0x74
900151d8:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
900151dc:	1ad2      	subs	r2, r2, r3
900151de:	e6b5      	b.n	90014f4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
900151e0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900151e2:	681b      	ldr	r3, [r3, #0]
900151e4:	b923      	cbnz	r3, 900151f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
900151e6:	4b04      	ldr	r3, [pc, #16]	@ (900151f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
900151e8:	6818      	ldr	r0, [r3, #0]
900151ea:	6803      	ldr	r3, [r0, #0]
900151ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900151ee:	4798      	blx	r3
900151f0:	b05b      	add	sp, #364	@ 0x16c
900151f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900151f6:	bf00      	nop
900151f8:	2402198c 	.word	0x2402198c

900151fc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
900151fc:	b570      	push	{r4, r5, r6, lr}
900151fe:	4604      	mov	r4, r0
90015200:	2500      	movs	r5, #0
90015202:	9805      	ldr	r0, [sp, #20]
90015204:	f89d 601c 	ldrb.w	r6, [sp, #28]
90015208:	6061      	str	r1, [r4, #4]
9001520a:	8263      	strh	r3, [r4, #18]
9001520c:	f89d 1010 	ldrb.w	r1, [sp, #16]
90015210:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
90015214:	8025      	strh	r5, [r4, #0]
90015216:	7221      	strb	r1, [r4, #8]
90015218:	7266      	strb	r6, [r4, #9]
9001521a:	60e0      	str	r0, [r4, #12]
9001521c:	8222      	strh	r2, [r4, #16]
9001521e:	82a3      	strh	r3, [r4, #20]
90015220:	82e5      	strh	r5, [r4, #22]
90015222:	8325      	strh	r5, [r4, #24]
90015224:	8365      	strh	r5, [r4, #26]
90015226:	83a5      	strh	r5, [r4, #28]
90015228:	83e5      	strh	r5, [r4, #30]
9001522a:	8425      	strh	r5, [r4, #32]
9001522c:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
90015230:	b32e      	cbz	r6, 9001527e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
90015232:	6803      	ldr	r3, [r0, #0]
90015234:	695b      	ldr	r3, [r3, #20]
90015236:	4798      	blx	r3
90015238:	4606      	mov	r6, r0
9001523a:	b300      	cbz	r0, 9001527e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
9001523c:	68e0      	ldr	r0, [r4, #12]
9001523e:	4631      	mov	r1, r6
90015240:	6803      	ldr	r3, [r0, #0]
90015242:	68db      	ldr	r3, [r3, #12]
90015244:	4798      	blx	r3
90015246:	4605      	mov	r5, r0
90015248:	b1c8      	cbz	r0, 9001527e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
9001524a:	7b43      	ldrb	r3, [r0, #13]
9001524c:	7a82      	ldrb	r2, [r0, #10]
9001524e:	005b      	lsls	r3, r3, #1
90015250:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90015254:	4313      	orrs	r3, r2
90015256:	8423      	strh	r3, [r4, #32]
90015258:	7a63      	ldrb	r3, [r4, #9]
9001525a:	2b06      	cmp	r3, #6
9001525c:	d10f      	bne.n	9001527e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
9001525e:	68e0      	ldr	r0, [r4, #12]
90015260:	462a      	mov	r2, r5
90015262:	4631      	mov	r1, r6
90015264:	6803      	ldr	r3, [r0, #0]
90015266:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90015268:	4798      	blx	r3
9001526a:	7b6b      	ldrb	r3, [r5, #13]
9001526c:	005b      	lsls	r3, r3, #1
9001526e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90015272:	7aab      	ldrb	r3, [r5, #10]
90015274:	4313      	orrs	r3, r2
90015276:	4418      	add	r0, r3
90015278:	8c23      	ldrh	r3, [r4, #32]
9001527a:	4418      	add	r0, r3
9001527c:	8420      	strh	r0, [r4, #32]
9001527e:	4620      	mov	r0, r4
90015280:	bd70      	pop	{r4, r5, r6, pc}

90015282 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
90015282:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015286:	2400      	movs	r4, #0
90015288:	b085      	sub	sp, #20
9001528a:	4681      	mov	r9, r0
9001528c:	4688      	mov	r8, r1
9001528e:	4692      	mov	sl, r2
90015290:	469b      	mov	fp, r3
90015292:	4627      	mov	r7, r4
90015294:	4625      	mov	r5, r4
90015296:	4626      	mov	r6, r4
90015298:	4554      	cmp	r4, sl
9001529a:	da2a      	bge.n	900152f2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
9001529c:	2300      	movs	r3, #0
9001529e:	9303      	str	r3, [sp, #12]
900152a0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
900152a4:	429d      	cmp	r5, r3
900152a6:	d004      	beq.n	900152b2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
900152a8:	f242 030b 	movw	r3, #8203	@ 0x200b
900152ac:	429d      	cmp	r5, r3
900152ae:	bf18      	it	ne
900152b0:	462f      	movne	r7, r5
900152b2:	ab03      	add	r3, sp, #12
900152b4:	4642      	mov	r2, r8
900152b6:	4659      	mov	r1, fp
900152b8:	4648      	mov	r0, r9
900152ba:	f003 fd05 	bl	90018cc8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900152be:	4605      	mov	r5, r0
900152c0:	b1b8      	cbz	r0, 900152f2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
900152c2:	280a      	cmp	r0, #10
900152c4:	d015      	beq.n	900152f2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
900152c6:	9a03      	ldr	r2, [sp, #12]
900152c8:	b18a      	cbz	r2, 900152ee <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
900152ca:	7b50      	ldrb	r0, [r2, #13]
900152cc:	4639      	mov	r1, r7
900152ce:	7a93      	ldrb	r3, [r2, #10]
900152d0:	0040      	lsls	r0, r0, #1
900152d2:	8895      	ldrh	r5, [r2, #4]
900152d4:	f400 7080 	and.w	r0, r0, #256	@ 0x100
900152d8:	4303      	orrs	r3, r0
900152da:	4640      	mov	r0, r8
900152dc:	9301      	str	r3, [sp, #4]
900152de:	f8d8 3000 	ldr.w	r3, [r8]
900152e2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900152e4:	4798      	blx	r3
900152e6:	9b01      	ldr	r3, [sp, #4]
900152e8:	4418      	add	r0, r3
900152ea:	4406      	add	r6, r0
900152ec:	b2b6      	uxth	r6, r6
900152ee:	3401      	adds	r4, #1
900152f0:	e7d2      	b.n	90015298 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
900152f2:	4630      	mov	r0, r6
900152f4:	b005      	add	sp, #20
900152f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900152fa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
900152fa:	2a02      	cmp	r2, #2
900152fc:	b530      	push	{r4, r5, lr}
900152fe:	d011      	beq.n	90015324 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
90015300:	2a03      	cmp	r2, #3
90015302:	d01c      	beq.n	9001533e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
90015304:	2a01      	cmp	r2, #1
90015306:	d10c      	bne.n	90015322 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
90015308:	888b      	ldrh	r3, [r1, #4]
9001530a:	8801      	ldrh	r1, [r0, #0]
9001530c:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
90015310:	1a5b      	subs	r3, r3, r1
90015312:	8844      	ldrh	r4, [r0, #2]
90015314:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90015318:	1a9b      	subs	r3, r3, r2
9001531a:	8004      	strh	r4, [r0, #0]
9001531c:	8081      	strh	r1, [r0, #4]
9001531e:	8043      	strh	r3, [r0, #2]
90015320:	80c2      	strh	r2, [r0, #6]
90015322:	bd30      	pop	{r4, r5, pc}
90015324:	88cb      	ldrh	r3, [r1, #6]
90015326:	8842      	ldrh	r2, [r0, #2]
90015328:	1a9b      	subs	r3, r3, r2
9001532a:	88c2      	ldrh	r2, [r0, #6]
9001532c:	1a9b      	subs	r3, r3, r2
9001532e:	888a      	ldrh	r2, [r1, #4]
90015330:	8801      	ldrh	r1, [r0, #0]
90015332:	8043      	strh	r3, [r0, #2]
90015334:	1a52      	subs	r2, r2, r1
90015336:	8881      	ldrh	r1, [r0, #4]
90015338:	1a52      	subs	r2, r2, r1
9001533a:	8002      	strh	r2, [r0, #0]
9001533c:	e7f1      	b.n	90015322 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
9001533e:	88cb      	ldrh	r3, [r1, #6]
90015340:	8841      	ldrh	r1, [r0, #2]
90015342:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
90015346:	1a5b      	subs	r3, r3, r1
90015348:	f9b0 5000 	ldrsh.w	r5, [r0]
9001534c:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
90015350:	1a9b      	subs	r3, r3, r2
90015352:	8045      	strh	r5, [r0, #2]
90015354:	8082      	strh	r2, [r0, #4]
90015356:	8003      	strh	r3, [r0, #0]
90015358:	80c4      	strh	r4, [r0, #6]
9001535a:	e7e2      	b.n	90015322 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

9001535c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
9001535c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015360:	b09f      	sub	sp, #124	@ 0x7c
90015362:	920f      	str	r2, [sp, #60]	@ 0x3c
90015364:	9312      	str	r3, [sp, #72]	@ 0x48
90015366:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90015368:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9001536a:	8812      	ldrh	r2, [r2, #0]
9001536c:	889b      	ldrh	r3, [r3, #4]
9001536e:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90015370:	4413      	add	r3, r2
90015372:	900e      	str	r0, [sp, #56]	@ 0x38
90015374:	6828      	ldr	r0, [r5, #0]
90015376:	b21b      	sxth	r3, r3
90015378:	9117      	str	r1, [sp, #92]	@ 0x5c
9001537a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
9001537e:	9311      	str	r3, [sp, #68]	@ 0x44
90015380:	6803      	ldr	r3, [r0, #0]
90015382:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
90015386:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
90015388:	4798      	blx	r3
9001538a:	682b      	ldr	r3, [r5, #0]
9001538c:	9013      	str	r0, [sp, #76]	@ 0x4c
9001538e:	7b1a      	ldrb	r2, [r3, #12]
90015390:	7adb      	ldrb	r3, [r3, #11]
90015392:	9215      	str	r2, [sp, #84]	@ 0x54
90015394:	9316      	str	r3, [sp, #88]	@ 0x58
90015396:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
9001539a:	2c00      	cmp	r4, #0
9001539c:	d067      	beq.n	9001546e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
9001539e:	7c2b      	ldrb	r3, [r5, #16]
900153a0:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
900153a2:	2b06      	cmp	r3, #6
900153a4:	bf14      	ite	ne
900153a6:	2301      	movne	r3, #1
900153a8:	2302      	moveq	r3, #2
900153aa:	4413      	add	r3, r2
900153ac:	f04f 0900 	mov.w	r9, #0
900153b0:	9310      	str	r3, [sp, #64]	@ 0x40
900153b2:	464c      	mov	r4, r9
900153b4:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
900153b8:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
900153bc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900153be:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900153c0:	4293      	cmp	r3, r2
900153c2:	f280 808b 	bge.w	900154dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
900153c6:	2300      	movs	r3, #0
900153c8:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
900153cc:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
900153d0:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
900153d4:	429c      	cmp	r4, r3
900153d6:	d006      	beq.n	900153e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
900153d8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900153da:	f242 020b 	movw	r2, #8203	@ 0x200b
900153de:	4294      	cmp	r4, r2
900153e0:	bf18      	it	ne
900153e2:	4623      	movne	r3, r4
900153e4:	930c      	str	r3, [sp, #48]	@ 0x30
900153e6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900153e8:	992d      	ldr	r1, [sp, #180]	@ 0xb4
900153ea:	682a      	ldr	r2, [r5, #0]
900153ec:	428b      	cmp	r3, r1
900153ee:	db40      	blt.n	90015472 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
900153f0:	6813      	ldr	r3, [r2, #0]
900153f2:	4610      	mov	r0, r2
900153f4:	695b      	ldr	r3, [r3, #20]
900153f6:	4798      	blx	r3
900153f8:	4604      	mov	r4, r0
900153fa:	6828      	ldr	r0, [r5, #0]
900153fc:	aa1d      	add	r2, sp, #116	@ 0x74
900153fe:	4621      	mov	r1, r4
90015400:	6803      	ldr	r3, [r0, #0]
90015402:	689f      	ldr	r7, [r3, #8]
90015404:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
90015408:	47b8      	blx	r7
9001540a:	901c      	str	r0, [sp, #112]	@ 0x70
9001540c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90015410:	429c      	cmp	r4, r3
90015412:	f000 80eb 	beq.w	900155ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90015416:	f242 030b 	movw	r3, #8203	@ 0x200b
9001541a:	429c      	cmp	r4, r3
9001541c:	f000 80e6 	beq.w	900155ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90015420:	2c00      	cmp	r4, #0
90015422:	f000 810d 	beq.w	90015640 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
90015426:	2c0a      	cmp	r4, #10
90015428:	d05e      	beq.n	900154e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
9001542a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
9001542c:	b36a      	cbz	r2, 9001548a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
9001542e:	8894      	ldrh	r4, [r2, #4]
90015430:	f1bb 0f00 	cmp.w	fp, #0
90015434:	d03a      	beq.n	900154ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
90015436:	f892 900d 	ldrb.w	r9, [r2, #13]
9001543a:	f1bb 0f01 	cmp.w	fp, #1
9001543e:	ea4f 0949 	mov.w	r9, r9, lsl #1
90015442:	f409 7380 	and.w	r3, r9, #256	@ 0x100
90015446:	f892 900a 	ldrb.w	r9, [r2, #10]
9001544a:	ea49 0903 	orr.w	r9, r9, r3
9001544e:	d133      	bne.n	900154b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
90015450:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90015452:	eba6 0609 	sub.w	r6, r6, r9
90015456:	2b00      	cmp	r3, #0
90015458:	d14d      	bne.n	900154f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
9001545a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
9001545c:	eb09 0306 	add.w	r3, r9, r6
90015460:	4413      	add	r3, r2
90015462:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90015464:	f9b2 2000 	ldrsh.w	r2, [r2]
90015468:	4293      	cmp	r3, r2
9001546a:	da4e      	bge.n	9001550a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
9001546c:	e036      	b.n	900154dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
9001546e:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
90015470:	e79c      	b.n	900153ac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
90015472:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
90015476:	4659      	mov	r1, fp
90015478:	982c      	ldr	r0, [sp, #176]	@ 0xb0
9001547a:	9301      	str	r3, [sp, #4]
9001547c:	ab1d      	add	r3, sp, #116	@ 0x74
9001547e:	9300      	str	r3, [sp, #0]
90015480:	ab1c      	add	r3, sp, #112	@ 0x70
90015482:	f003 fc6a 	bl	90018d5a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
90015486:	4604      	mov	r4, r0
90015488:	e7c0      	b.n	9001540c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
9001548a:	6828      	ldr	r0, [r5, #0]
9001548c:	6803      	ldr	r3, [r0, #0]
9001548e:	691b      	ldr	r3, [r3, #16]
90015490:	4798      	blx	r3
90015492:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90015496:	4298      	cmp	r0, r3
90015498:	f000 80a8 	beq.w	900155ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001549c:	f242 030b 	movw	r3, #8203	@ 0x200b
900154a0:	4298      	cmp	r0, r3
900154a2:	f000 80a3 	beq.w	900155ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900154a6:	f1bb 0f00 	cmp.w	fp, #0
900154aa:	d100      	bne.n	900154ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
900154ac:	444e      	add	r6, r9
900154ae:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
900154b0:	2a00      	cmp	r2, #0
900154b2:	d1c0      	bne.n	90015436 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
900154b4:	4691      	mov	r9, r2
900154b6:	e099      	b.n	900155ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
900154b8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900154ba:	2b00      	cmp	r3, #0
900154bc:	f000 80c2 	beq.w	90015644 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
900154c0:	f1bb 0f00 	cmp.w	fp, #0
900154c4:	d117      	bne.n	900154f6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
900154c6:	6828      	ldr	r0, [r5, #0]
900154c8:	990c      	ldr	r1, [sp, #48]	@ 0x30
900154ca:	6803      	ldr	r3, [r0, #0]
900154cc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900154ce:	4798      	blx	r3
900154d0:	4406      	add	r6, r0
900154d2:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900154d4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900154d6:	1af3      	subs	r3, r6, r3
900154d8:	4293      	cmp	r3, r2
900154da:	dd16      	ble.n	9001550a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
900154dc:	2c00      	cmp	r4, #0
900154de:	f000 80af 	beq.w	90015640 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
900154e2:	2c0a      	cmp	r4, #10
900154e4:	f040 809d 	bne.w	90015622 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
900154e8:	240a      	movs	r4, #10
900154ea:	fab4 f084 	clz	r0, r4
900154ee:	0940      	lsrs	r0, r0, #5
900154f0:	b01f      	add	sp, #124	@ 0x7c
900154f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900154f6:	6828      	ldr	r0, [r5, #0]
900154f8:	990c      	ldr	r1, [sp, #48]	@ 0x30
900154fa:	6803      	ldr	r3, [r0, #0]
900154fc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900154fe:	4798      	blx	r3
90015500:	f1bb 0f01 	cmp.w	fp, #1
90015504:	eba6 0600 	sub.w	r6, r6, r0
90015508:	d0a7      	beq.n	9001545a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
9001550a:	981c      	ldr	r0, [sp, #112]	@ 0x70
9001550c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9001550e:	f990 1009 	ldrsb.w	r1, [r0, #9]
90015512:	f9b3 8000 	ldrsh.w	r8, [r3]
90015516:	7b43      	ldrb	r3, [r0, #13]
90015518:	4431      	add	r1, r6
9001551a:	015b      	lsls	r3, r3, #5
9001551c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90015520:	7983      	ldrb	r3, [r0, #6]
90015522:	4313      	orrs	r3, r2
90015524:	440b      	add	r3, r1
90015526:	4543      	cmp	r3, r8
90015528:	db60      	blt.n	900155ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001552a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
9001552c:	4299      	cmp	r1, r3
9001552e:	da5d      	bge.n	900155ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90015530:	6828      	ldr	r0, [r5, #0]
90015532:	45b0      	cmp	r8, r6
90015534:	6803      	ldr	r3, [r0, #0]
90015536:	bfcc      	ite	gt
90015538:	eba8 0806 	subgt.w	r8, r8, r6
9001553c:	f04f 0800 	movle.w	r8, #0
90015540:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90015542:	bfc8      	it	gt
90015544:	fa1f f888 	uxthgt.w	r8, r8
90015548:	4798      	blx	r3
9001554a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
9001554c:	7b53      	ldrb	r3, [r2, #13]
9001554e:	00d9      	lsls	r1, r3, #3
90015550:	f401 7780 	and.w	r7, r1, #256	@ 0x100
90015554:	7a11      	ldrb	r1, [r2, #8]
90015556:	4339      	orrs	r1, r7
90015558:	065f      	lsls	r7, r3, #25
9001555a:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001555c:	bf48      	it	mi
9001555e:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
90015562:	4407      	add	r7, r0
90015564:	bf48      	it	mi
90015566:	b209      	sxthmi	r1, r1
90015568:	1a7f      	subs	r7, r7, r1
9001556a:	9929      	ldr	r1, [sp, #164]	@ 0xa4
9001556c:	b2bf      	uxth	r7, r7
9001556e:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
90015572:	fa0f fa87 	sxth.w	sl, r7
90015576:	4551      	cmp	r1, sl
90015578:	dd3c      	ble.n	900155f4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
9001557a:	011b      	lsls	r3, r3, #4
9001557c:	79d0      	ldrb	r0, [r2, #7]
9001557e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90015582:	4303      	orrs	r3, r0
90015584:	449a      	add	sl, r3
90015586:	4551      	cmp	r1, sl
90015588:	dc30      	bgt.n	900155ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
9001558a:	1bcf      	subs	r7, r1, r7
9001558c:	468a      	mov	sl, r1
9001558e:	b23f      	sxth	r7, r7
90015590:	9219      	str	r2, [sp, #100]	@ 0x64
90015592:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
90015594:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90015596:	6828      	ldr	r0, [r5, #0]
90015598:	2a00      	cmp	r2, #0
9001559a:	d12d      	bne.n	900155f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
9001559c:	9318      	str	r3, [sp, #96]	@ 0x60
9001559e:	b2bf      	uxth	r7, r7
900155a0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900155a2:	6819      	ldr	r1, [r3, #0]
900155a4:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
900155a6:	6801      	ldr	r1, [r0, #0]
900155a8:	9314      	str	r3, [sp, #80]	@ 0x50
900155aa:	6c09      	ldr	r1, [r1, #64]	@ 0x40
900155ac:	4788      	blx	r1
900155ae:	79a9      	ldrb	r1, [r5, #6]
900155b0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900155b2:	910b      	str	r1, [sp, #44]	@ 0x2c
900155b4:	7ba9      	ldrb	r1, [r5, #14]
900155b6:	9a19      	ldr	r2, [sp, #100]	@ 0x64
900155b8:	910a      	str	r1, [sp, #40]	@ 0x28
900155ba:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
900155be:	9109      	str	r1, [sp, #36]	@ 0x24
900155c0:	68a9      	ldr	r1, [r5, #8]
900155c2:	9306      	str	r3, [sp, #24]
900155c4:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900155c6:	9205      	str	r2, [sp, #20]
900155c8:	9304      	str	r3, [sp, #16]
900155ca:	f8cd a004 	str.w	sl, [sp, #4]
900155ce:	e9cd 8702 	strd	r8, r7, [sp, #8]
900155d2:	44b0      	add	r8, r6
900155d4:	9f14      	ldr	r7, [sp, #80]	@ 0x50
900155d6:	fa0f f388 	sxth.w	r3, r8
900155da:	9300      	str	r3, [sp, #0]
900155dc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900155de:	e9cd 0107 	strd	r0, r1, [sp, #28]
900155e2:	9917      	ldr	r1, [sp, #92]	@ 0x5c
900155e4:	681a      	ldr	r2, [r3, #0]
900155e6:	980e      	ldr	r0, [sp, #56]	@ 0x38
900155e8:	685b      	ldr	r3, [r3, #4]
900155ea:	47b8      	blx	r7
900155ec:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900155ee:	3301      	adds	r3, #1
900155f0:	930d      	str	r3, [sp, #52]	@ 0x34
900155f2:	e6e3      	b.n	900153bc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
900155f4:	2700      	movs	r7, #0
900155f6:	e7cb      	b.n	90015590 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
900155f8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
900155fa:	f8d2 c008 	ldr.w	ip, [r2, #8]
900155fe:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90015600:	f8dc 1000 	ldr.w	r1, [ip]
90015604:	e9cd 6204 	strd	r6, r2, [sp, #16]
90015608:	79aa      	ldrb	r2, [r5, #6]
9001560a:	9203      	str	r2, [sp, #12]
9001560c:	7baa      	ldrb	r2, [r5, #14]
9001560e:	9202      	str	r2, [sp, #8]
90015610:	68aa      	ldr	r2, [r5, #8]
90015612:	e9cd 0200 	strd	r0, r2, [sp]
90015616:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90015618:	4660      	mov	r0, ip
9001561a:	688f      	ldr	r7, [r1, #8]
9001561c:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001561e:	47b8      	blx	r7
90015620:	e7e4      	b.n	900155ec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
90015622:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90015624:	3501      	adds	r5, #1
90015626:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
90015628:	429d      	cmp	r5, r3
9001562a:	f6bf af5e 	bge.w	900154ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
9001562e:	4659      	mov	r1, fp
90015630:	982c      	ldr	r0, [sp, #176]	@ 0xb0
90015632:	f7f0 f917 	bl	90005864 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90015636:	4604      	mov	r4, r0
90015638:	b110      	cbz	r0, 90015640 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
9001563a:	280a      	cmp	r0, #10
9001563c:	d1f2      	bne.n	90015624 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
9001563e:	e753      	b.n	900154e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
90015640:	2400      	movs	r4, #0
90015642:	e752      	b.n	900154ea <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
90015644:	f1bb 0f00 	cmp.w	fp, #0
90015648:	f43f af43 	beq.w	900154d2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
9001564c:	e75d      	b.n	9001550a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

9001564e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
9001564e:	b530      	push	{r4, r5, lr}
90015650:	8ac4      	ldrh	r4, [r0, #22]
90015652:	8b45      	ldrh	r5, [r0, #26]
90015654:	8343      	strh	r3, [r0, #26]
90015656:	442c      	add	r4, r5
90015658:	1ae4      	subs	r4, r4, r3
9001565a:	8b83      	ldrh	r3, [r0, #28]
9001565c:	82c4      	strh	r4, [r0, #22]
9001565e:	8b04      	ldrh	r4, [r0, #24]
90015660:	4422      	add	r2, r4
90015662:	440c      	add	r4, r1
90015664:	1a59      	subs	r1, r3, r1
90015666:	83c2      	strh	r2, [r0, #30]
90015668:	8304      	strh	r4, [r0, #24]
9001566a:	8381      	strh	r1, [r0, #28]
9001566c:	bd30      	pop	{r4, r5, pc}

9001566e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
9001566e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015672:	4604      	mov	r4, r0
90015674:	8a47      	ldrh	r7, [r0, #18]
90015676:	68c0      	ldr	r0, [r0, #12]
90015678:	b085      	sub	sp, #20
9001567a:	6803      	ldr	r3, [r0, #0]
9001567c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001567e:	4798      	blx	r3
90015680:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
90015684:	7a63      	ldrb	r3, [r4, #9]
90015686:	eb06 0640 	add.w	r6, r6, r0, lsl #1
9001568a:	3b01      	subs	r3, #1
9001568c:	42b7      	cmp	r7, r6
9001568e:	bfac      	ite	ge
90015690:	f04f 0900 	movge.w	r9, #0
90015694:	f04f 0901 	movlt.w	r9, #1
90015698:	2b05      	cmp	r3, #5
9001569a:	d804      	bhi.n	900156a6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
9001569c:	e8df f003 	tbb	[pc, r3]
900156a0:	470f0854 	.word	0x470f0854
900156a4:	4c4c      	.short	0x4c4c
900156a6:	2500      	movs	r5, #0
900156a8:	46a9      	mov	r9, r5
900156aa:	462e      	mov	r6, r5
900156ac:	462f      	mov	r7, r5
900156ae:	e00e      	b.n	900156ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
900156b0:	42b7      	cmp	r7, r6
900156b2:	f04f 0500 	mov.w	r5, #0
900156b6:	bfb4      	ite	lt
900156b8:	2600      	movlt	r6, #0
900156ba:	2601      	movge	r6, #1
900156bc:	e7f6      	b.n	900156ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
900156be:	42b7      	cmp	r7, r6
900156c0:	464d      	mov	r5, r9
900156c2:	f04f 0900 	mov.w	r9, #0
900156c6:	bfb4      	ite	lt
900156c8:	2600      	movlt	r6, #0
900156ca:	2601      	movge	r6, #1
900156cc:	464f      	mov	r7, r9
900156ce:	f04f 0800 	mov.w	r8, #0
900156d2:	f8a4 8016 	strh.w	r8, [r4, #22]
900156d6:	f8a4 8018 	strh.w	r8, [r4, #24]
900156da:	f8cd 8004 	str.w	r8, [sp, #4]
900156de:	2300      	movs	r3, #0
900156e0:	9303      	str	r3, [sp, #12]
900156e2:	8823      	ldrh	r3, [r4, #0]
900156e4:	2b20      	cmp	r3, #32
900156e6:	d033      	beq.n	90015750 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
900156e8:	f242 010b 	movw	r1, #8203	@ 0x200b
900156ec:	1a5a      	subs	r2, r3, r1
900156ee:	f1d2 0a00 	rsbs	sl, r2, #0
900156f2:	eb4a 0a02 	adc.w	sl, sl, r2
900156f6:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
900156fa:	4293      	cmp	r3, r2
900156fc:	d008      	beq.n	90015710 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
900156fe:	428b      	cmp	r3, r1
90015700:	9a01      	ldr	r2, [sp, #4]
90015702:	bf0e      	itee	eq
90015704:	f04f 0a01 	moveq.w	sl, #1
90015708:	461a      	movne	r2, r3
9001570a:	f04f 0a00 	movne.w	sl, #0
9001570e:	9201      	str	r2, [sp, #4]
90015710:	ab03      	add	r3, sp, #12
90015712:	68e2      	ldr	r2, [r4, #12]
90015714:	7a21      	ldrb	r1, [r4, #8]
90015716:	6860      	ldr	r0, [r4, #4]
90015718:	f003 fad6 	bl	90018cc8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001571c:	8020      	strh	r0, [r4, #0]
9001571e:	b9d8      	cbnz	r0, 90015758 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
90015720:	8ba2      	ldrh	r2, [r4, #28]
90015722:	2300      	movs	r3, #0
90015724:	4611      	mov	r1, r2
90015726:	4620      	mov	r0, r4
90015728:	f7ff ff91 	bl	9001564e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
9001572c:	e06e      	b.n	9001580c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
9001572e:	2500      	movs	r5, #0
90015730:	2701      	movs	r7, #1
90015732:	46a9      	mov	r9, r5
90015734:	462e      	mov	r6, r5
90015736:	e7ca      	b.n	900156ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90015738:	42b7      	cmp	r7, r6
9001573a:	f04f 0500 	mov.w	r5, #0
9001573e:	bfb4      	ite	lt
90015740:	2700      	movlt	r7, #0
90015742:	2701      	movge	r7, #1
90015744:	462e      	mov	r6, r5
90015746:	e7c2      	b.n	900156ce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
90015748:	2500      	movs	r5, #0
9001574a:	2601      	movs	r6, #1
9001574c:	46a9      	mov	r9, r5
9001574e:	e7ad      	b.n	900156ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
90015750:	9301      	str	r3, [sp, #4]
90015752:	f04f 0a01 	mov.w	sl, #1
90015756:	e7db      	b.n	90015710 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
90015758:	8b63      	ldrh	r3, [r4, #26]
9001575a:	280a      	cmp	r0, #10
9001575c:	f103 0301 	add.w	r3, r3, #1
90015760:	8363      	strh	r3, [r4, #26]
90015762:	d0dd      	beq.n	90015720 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
90015764:	9a03      	ldr	r2, [sp, #12]
90015766:	bb62      	cbnz	r2, 900157c2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
90015768:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
9001576c:	4298      	cmp	r0, r3
9001576e:	d003      	beq.n	90015778 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
90015770:	f242 030b 	movw	r3, #8203	@ 0x200b
90015774:	4298      	cmp	r0, r3
90015776:	d1b2      	bne.n	900156de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015778:	8823      	ldrh	r3, [r4, #0]
9001577a:	8ba1      	ldrh	r1, [r4, #28]
9001577c:	2b20      	cmp	r3, #32
9001577e:	d003      	beq.n	90015788 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
90015780:	f242 000b 	movw	r0, #8203	@ 0x200b
90015784:	4283      	cmp	r3, r0
90015786:	d131      	bne.n	900157ec <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
90015788:	f1ba 0f00 	cmp.w	sl, #0
9001578c:	bf0a      	itet	eq
9001578e:	4688      	moveq	r8, r1
90015790:	4650      	movne	r0, sl
90015792:	2001      	moveq	r0, #1
90015794:	440a      	add	r2, r1
90015796:	8b23      	ldrh	r3, [r4, #24]
90015798:	f8b4 c010 	ldrh.w	ip, [r4, #16]
9001579c:	b292      	uxth	r2, r2
9001579e:	83a2      	strh	r2, [r4, #28]
900157a0:	4413      	add	r3, r2
900157a2:	f1b9 0f00 	cmp.w	r9, #0
900157a6:	d102      	bne.n	900157ae <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
900157a8:	2d00      	cmp	r5, #0
900157aa:	d042      	beq.n	90015832 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
900157ac:	b300      	cbz	r0, 900157f0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
900157ae:	8c21      	ldrh	r1, [r4, #32]
900157b0:	4419      	add	r1, r3
900157b2:	458c      	cmp	ip, r1
900157b4:	da37      	bge.n	90015826 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
900157b6:	8ae1      	ldrh	r1, [r4, #22]
900157b8:	2900      	cmp	r1, #0
900157ba:	d034      	beq.n	90015826 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
900157bc:	4563      	cmp	r3, ip
900157be:	dd8e      	ble.n	900156de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900157c0:	e01d      	b.n	900157fe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
900157c2:	8893      	ldrh	r3, [r2, #4]
900157c4:	9901      	ldr	r1, [sp, #4]
900157c6:	8023      	strh	r3, [r4, #0]
900157c8:	f892 b00d 	ldrb.w	fp, [r2, #13]
900157cc:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
900157d0:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
900157d4:	f892 b00a 	ldrb.w	fp, [r2, #10]
900157d8:	ea4b 0b00 	orr.w	fp, fp, r0
900157dc:	68e0      	ldr	r0, [r4, #12]
900157de:	6803      	ldr	r3, [r0, #0]
900157e0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900157e2:	4798      	blx	r3
900157e4:	eb0b 0200 	add.w	r2, fp, r0
900157e8:	b292      	uxth	r2, r2
900157ea:	e7c5      	b.n	90015778 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
900157ec:	2000      	movs	r0, #0
900157ee:	e7d1      	b.n	90015794 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
900157f0:	4563      	cmp	r3, ip
900157f2:	f77f af74 	ble.w	900156de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900157f6:	8ae3      	ldrh	r3, [r4, #22]
900157f8:	2b00      	cmp	r3, #0
900157fa:	f43f af70 	beq.w	900156de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
900157fe:	2301      	movs	r3, #1
90015800:	8c22      	ldrh	r2, [r4, #32]
90015802:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
90015806:	8be3      	ldrh	r3, [r4, #30]
90015808:	4413      	add	r3, r2
9001580a:	83e3      	strh	r3, [r4, #30]
9001580c:	68e0      	ldr	r0, [r4, #12]
9001580e:	6803      	ldr	r3, [r0, #0]
90015810:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90015812:	4798      	blx	r3
90015814:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
90015818:	4418      	add	r0, r3
9001581a:	8a63      	ldrh	r3, [r4, #18]
9001581c:	1a18      	subs	r0, r3, r0
9001581e:	8260      	strh	r0, [r4, #18]
90015820:	b005      	add	sp, #20
90015822:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015826:	2300      	movs	r3, #0
90015828:	4611      	mov	r1, r2
9001582a:	4620      	mov	r0, r4
9001582c:	f7ff ff0f 	bl	9001564e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
90015830:	e755      	b.n	900156de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015832:	4563      	cmp	r3, ip
90015834:	dd14      	ble.n	90015860 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
90015836:	b117      	cbz	r7, 9001583e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
90015838:	2301      	movs	r3, #1
9001583a:	460a      	mov	r2, r1
9001583c:	e772      	b.n	90015724 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
9001583e:	2e00      	cmp	r6, #0
90015840:	f43f af4d 	beq.w	900156de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015844:	2800      	cmp	r0, #0
90015846:	f47f af4a 	bne.w	900156de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001584a:	f1ba 0f00 	cmp.w	sl, #0
9001584e:	d002      	beq.n	90015856 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
90015850:	2301      	movs	r3, #1
90015852:	4642      	mov	r2, r8
90015854:	e767      	b.n	90015726 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
90015856:	8ae3      	ldrh	r3, [r4, #22]
90015858:	2b00      	cmp	r3, #0
9001585a:	f43f af40 	beq.w	900156de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001585e:	e7d5      	b.n	9001580c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
90015860:	2800      	cmp	r0, #0
90015862:	f47f af3c 	bne.w	900156de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
90015866:	f1ba 0f00 	cmp.w	sl, #0
9001586a:	f43f af38 	beq.w	900156de <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
9001586e:	2301      	movs	r3, #1
90015870:	4642      	mov	r2, r8
90015872:	e7da      	b.n	9001582a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

90015874 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
90015874:	b5f0      	push	{r4, r5, r6, r7, lr}
90015876:	4605      	mov	r5, r0
90015878:	b08f      	sub	sp, #60	@ 0x3c
9001587a:	4617      	mov	r7, r2
9001587c:	461c      	mov	r4, r3
9001587e:	460e      	mov	r6, r1
90015880:	b1d1      	cbz	r1, 900158b8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
90015882:	681b      	ldr	r3, [r3, #0]
90015884:	4620      	mov	r0, r4
90015886:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
90015888:	4798      	blx	r3
9001588a:	4240      	negs	r0, r0
9001588c:	9603      	str	r6, [sp, #12]
9001588e:	f64f 73ff 	movw	r3, #65535	@ 0xffff
90015892:	b200      	sxth	r0, r0
90015894:	9700      	str	r7, [sp, #0]
90015896:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
9001589a:	4629      	mov	r1, r5
9001589c:	e9cd 4001 	strd	r4, r0, [sp, #4]
900158a0:	2401      	movs	r4, #1
900158a2:	a805      	add	r0, sp, #20
900158a4:	f7ff fcaa 	bl	900151fc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
900158a8:	a805      	add	r0, sp, #20
900158aa:	f7ff fee0 	bl	9001566e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900158ae:	f8bd 3014 	ldrh.w	r3, [sp, #20]
900158b2:	b163      	cbz	r3, 900158ce <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
900158b4:	3401      	adds	r4, #1
900158b6:	e7f7      	b.n	900158a8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
900158b8:	2401      	movs	r4, #1
900158ba:	f003 fad1 	bl	90018e60 <_ZN8touchgfx12TextProvider11getNextCharEv>
900158be:	280a      	cmp	r0, #10
900158c0:	4628      	mov	r0, r5
900158c2:	bf08      	it	eq
900158c4:	3401      	addeq	r4, #1
900158c6:	f003 facb 	bl	90018e60 <_ZN8touchgfx12TextProvider11getNextCharEv>
900158ca:	2800      	cmp	r0, #0
900158cc:	d1f7      	bne.n	900158be <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
900158ce:	b2a0      	uxth	r0, r4
900158d0:	b00f      	add	sp, #60	@ 0x3c
900158d2:	bdf0      	pop	{r4, r5, r6, r7, pc}

900158d4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
900158d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900158d8:	b0e3      	sub	sp, #396	@ 0x18c
900158da:	461c      	mov	r4, r3
900158dc:	4683      	mov	fp, r0
900158de:	4688      	mov	r8, r1
900158e0:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
900158e2:	2b00      	cmp	r3, #0
900158e4:	f000 8112 	beq.w	90015b0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900158e8:	6823      	ldr	r3, [r4, #0]
900158ea:	2b00      	cmp	r3, #0
900158ec:	f000 810e 	beq.w	90015b0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900158f0:	7ba3      	ldrb	r3, [r4, #14]
900158f2:	2b00      	cmp	r3, #0
900158f4:	f000 810a 	beq.w	90015b0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
900158f8:	ad0a      	add	r5, sp, #40	@ 0x28
900158fa:	6810      	ldr	r0, [r2, #0]
900158fc:	6851      	ldr	r1, [r2, #4]
900158fe:	462b      	mov	r3, r5
90015900:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
90015904:	c303      	stmia	r3!, {r0, r1}
90015906:	2100      	movs	r1, #0
90015908:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
9001590c:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90015910:	4628      	mov	r0, r5
90015912:	910c      	str	r1, [sp, #48]	@ 0x30
90015914:	a90c      	add	r1, sp, #48	@ 0x30
90015916:	79a2      	ldrb	r2, [r4, #6]
90015918:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001591c:	f7ff fced 	bl	900152fa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
90015920:	a90c      	add	r1, sp, #48	@ 0x30
90015922:	79a2      	ldrb	r2, [r4, #6]
90015924:	4608      	mov	r0, r1
90015926:	f7ff fce8 	bl	900152fa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
9001592a:	a817      	add	r0, sp, #92	@ 0x5c
9001592c:	f002 fe3e 	bl	900185ac <_ZN8touchgfx12TextProviderC1Ev>
90015930:	6820      	ldr	r0, [r4, #0]
90015932:	6803      	ldr	r3, [r0, #0]
90015934:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90015936:	4798      	blx	r3
90015938:	4606      	mov	r6, r0
9001593a:	6820      	ldr	r0, [r4, #0]
9001593c:	6803      	ldr	r3, [r0, #0]
9001593e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90015940:	4798      	blx	r3
90015942:	4633      	mov	r3, r6
90015944:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
90015946:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90015948:	9000      	str	r0, [sp, #0]
9001594a:	a817      	add	r0, sp, #92	@ 0x5c
9001594c:	f002 fe89 	bl	90018662 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015950:	6820      	ldr	r0, [r4, #0]
90015952:	f894 a004 	ldrb.w	sl, [r4, #4]
90015956:	6803      	ldr	r3, [r0, #0]
90015958:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
9001595a:	4798      	blx	r3
9001595c:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
90015960:	6823      	ldr	r3, [r4, #0]
90015962:	4607      	mov	r7, r0
90015964:	4406      	add	r6, r0
90015966:	a830      	add	r0, sp, #192	@ 0xc0
90015968:	f893 9009 	ldrb.w	r9, [r3, #9]
9001596c:	f002 fe1e 	bl	900185ac <_ZN8touchgfx12TextProviderC1Ev>
90015970:	7c23      	ldrb	r3, [r4, #16]
90015972:	b17b      	cbz	r3, 90015994 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
90015974:	6820      	ldr	r0, [r4, #0]
90015976:	6803      	ldr	r3, [r0, #0]
90015978:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001597a:	4798      	blx	r3
9001597c:	9009      	str	r0, [sp, #36]	@ 0x24
9001597e:	6820      	ldr	r0, [r4, #0]
90015980:	6802      	ldr	r2, [r0, #0]
90015982:	6d12      	ldr	r2, [r2, #80]	@ 0x50
90015984:	4790      	blx	r2
90015986:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90015988:	9000      	str	r0, [sp, #0]
9001598a:	a830      	add	r0, sp, #192	@ 0xc0
9001598c:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
9001598e:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
90015990:	f002 fe67 	bl	90018662 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90015994:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
90015998:	a80e      	add	r0, sp, #56	@ 0x38
9001599a:	7be2      	ldrb	r2, [r4, #15]
9001599c:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
900159a0:	1a8a      	subs	r2, r1, r2
900159a2:	7c21      	ldrb	r1, [r4, #16]
900159a4:	9103      	str	r1, [sp, #12]
900159a6:	b292      	uxth	r2, r2
900159a8:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
900159ac:	9102      	str	r1, [sp, #8]
900159ae:	6821      	ldr	r1, [r4, #0]
900159b0:	9101      	str	r1, [sp, #4]
900159b2:	7961      	ldrb	r1, [r4, #5]
900159b4:	9100      	str	r1, [sp, #0]
900159b6:	a930      	add	r1, sp, #192	@ 0xc0
900159b8:	f7ff fc20 	bl	900151fc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
900159bc:	2e00      	cmp	r6, #0
900159be:	dc5b      	bgt.n	90015a78 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
900159c0:	af17      	add	r7, sp, #92	@ 0x5c
900159c2:	f04f 0900 	mov.w	r9, #0
900159c6:	7c23      	ldrb	r3, [r4, #16]
900159c8:	2b00      	cmp	r3, #0
900159ca:	f000 80b1 	beq.w	90015b30 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
900159ce:	a80e      	add	r0, sp, #56	@ 0x38
900159d0:	f7ff fe4d 	bl	9001566e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
900159d4:	f1ba 0f00 	cmp.w	sl, #0
900159d8:	f000 80a5 	beq.w	90015b26 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
900159dc:	7c23      	ldrb	r3, [r4, #16]
900159de:	2264      	movs	r2, #100	@ 0x64
900159e0:	4639      	mov	r1, r7
900159e2:	a849      	add	r0, sp, #292	@ 0x124
900159e4:	9309      	str	r3, [sp, #36]	@ 0x24
900159e6:	f014 f93c 	bl	90029c62 <memcpy>
900159ea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900159ec:	2b00      	cmp	r3, #0
900159ee:	f000 80a7 	beq.w	90015b40 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
900159f2:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
900159f6:	7922      	ldrb	r2, [r4, #4]
900159f8:	2a01      	cmp	r2, #1
900159fa:	f040 808a 	bne.w	90015b12 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
900159fe:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
90015a02:	1ac0      	subs	r0, r0, r3
90015a04:	2302      	movs	r3, #2
90015a06:	fb90 f0f3 	sdiv	r0, r0, r3
90015a0a:	b200      	sxth	r0, r0
90015a0c:	7c23      	ldrb	r3, [r4, #16]
90015a0e:	2b00      	cmp	r3, #0
90015a10:	f000 808b 	beq.w	90015b2a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
90015a14:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
90015a18:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
90015a1c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90015a20:	e9cd 2105 	strd	r2, r1, [sp, #20]
90015a24:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
90015a28:	2100      	movs	r1, #0
90015a2a:	4410      	add	r0, r2
90015a2c:	4642      	mov	r2, r8
90015a2e:	b200      	sxth	r0, r0
90015a30:	e9cd 9703 	strd	r9, r7, [sp, #12]
90015a34:	9000      	str	r0, [sp, #0]
90015a36:	4658      	mov	r0, fp
90015a38:	e9cd 5401 	strd	r5, r4, [sp, #4]
90015a3c:	f7ff fc8e 	bl	9001535c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
90015a40:	2800      	cmp	r0, #0
90015a42:	d163      	bne.n	90015b0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015a44:	b2b2      	uxth	r2, r6
90015a46:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90015a4a:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90015a4e:	4413      	add	r3, r2
90015a50:	1a8a      	subs	r2, r1, r2
90015a52:	b21b      	sxth	r3, r3
90015a54:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
90015a58:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
90015a5c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90015a60:	2a00      	cmp	r2, #0
90015a62:	d153      	bne.n	90015b0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015a64:	6822      	ldr	r2, [r4, #0]
90015a66:	8869      	ldrh	r1, [r5, #2]
90015a68:	7a12      	ldrb	r2, [r2, #8]
90015a6a:	1a9b      	subs	r3, r3, r2
90015a6c:	88ea      	ldrh	r2, [r5, #6]
90015a6e:	440a      	add	r2, r1
90015a70:	b212      	sxth	r2, r2
90015a72:	4293      	cmp	r3, r2
90015a74:	dda7      	ble.n	900159c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
90015a76:	e049      	b.n	90015b0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015a78:	7c23      	ldrb	r3, [r4, #16]
90015a7a:	444f      	add	r7, r9
90015a7c:	b1c3      	cbz	r3, 90015ab0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
90015a7e:	f64f 79ff 	movw	r9, #65535	@ 0xffff
90015a82:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90015a86:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90015a8a:	443b      	add	r3, r7
90015a8c:	4293      	cmp	r3, r2
90015a8e:	da97      	bge.n	900159c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90015a90:	a80e      	add	r0, sp, #56	@ 0x38
90015a92:	f7ff fdec 	bl	9001566e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
90015a96:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
90015a9a:	3b01      	subs	r3, #1
90015a9c:	b29b      	uxth	r3, r3
90015a9e:	454b      	cmp	r3, r9
90015aa0:	9309      	str	r3, [sp, #36]	@ 0x24
90015aa2:	d021      	beq.n	90015ae8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
90015aa4:	7961      	ldrb	r1, [r4, #5]
90015aa6:	a817      	add	r0, sp, #92	@ 0x5c
90015aa8:	f7ef fedc 	bl	90005864 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90015aac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90015aae:	e7f4      	b.n	90015a9a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
90015ab0:	fa1f f986 	uxth.w	r9, r6
90015ab4:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
90015ab8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90015abc:	443b      	add	r3, r7
90015abe:	4293      	cmp	r3, r2
90015ac0:	f6bf af7e 	bge.w	900159c0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
90015ac4:	a817      	add	r0, sp, #92	@ 0x5c
90015ac6:	f003 f9cb 	bl	90018e60 <_ZN8touchgfx12TextProvider11getNextCharEv>
90015aca:	b1f8      	cbz	r0, 90015b0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015acc:	280a      	cmp	r0, #10
90015ace:	d1f1      	bne.n	90015ab4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90015ad0:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90015ad4:	444b      	add	r3, r9
90015ad6:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90015ada:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
90015ade:	eba3 0309 	sub.w	r3, r3, r9
90015ae2:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90015ae6:	e7e5      	b.n	90015ab4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
90015ae8:	b2b3      	uxth	r3, r6
90015aea:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
90015aee:	441a      	add	r2, r3
90015af0:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
90015af4:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
90015af8:	1ad3      	subs	r3, r2, r3
90015afa:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
90015afe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90015b02:	b11b      	cbz	r3, 90015b0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
90015b04:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
90015b08:	2b00      	cmp	r3, #0
90015b0a:	d0ba      	beq.n	90015a82 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
90015b0c:	b063      	add	sp, #396	@ 0x18c
90015b0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015b12:	2a02      	cmp	r2, #2
90015b14:	d105      	bne.n	90015b22 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
90015b16:	7be2      	ldrb	r2, [r4, #15]
90015b18:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90015b1c:	1a80      	subs	r0, r0, r2
90015b1e:	1ac0      	subs	r0, r0, r3
90015b20:	e773      	b.n	90015a0a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
90015b22:	2000      	movs	r0, #0
90015b24:	e772      	b.n	90015a0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90015b26:	7be0      	ldrb	r0, [r4, #15]
90015b28:	e770      	b.n	90015a0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
90015b2a:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90015b2e:	e773      	b.n	90015a18 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
90015b30:	f1ba 0f00 	cmp.w	sl, #0
90015b34:	d0f7      	beq.n	90015b26 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
90015b36:	2264      	movs	r2, #100	@ 0x64
90015b38:	4639      	mov	r1, r7
90015b3a:	a849      	add	r0, sp, #292	@ 0x124
90015b3c:	f014 f891 	bl	90029c62 <memcpy>
90015b40:	2300      	movs	r3, #0
90015b42:	f647 72ff 	movw	r2, #32767	@ 0x7fff
90015b46:	6821      	ldr	r1, [r4, #0]
90015b48:	a849      	add	r0, sp, #292	@ 0x124
90015b4a:	f7ff fb9a 	bl	90015282 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
90015b4e:	b203      	sxth	r3, r0
90015b50:	e751      	b.n	900159f6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

90015b52 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
90015b52:	2b03      	cmp	r3, #3
90015b54:	d818      	bhi.n	90015b88 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
90015b56:	e8df f003 	tbb	[pc, r3]
90015b5a:	0602      	.short	0x0602
90015b5c:	130d      	.short	0x130d
90015b5e:	f9b0 2000 	ldrsh.w	r2, [r0]
90015b62:	1850      	adds	r0, r2, r1
90015b64:	4770      	bx	lr
90015b66:	8803      	ldrh	r3, [r0, #0]
90015b68:	8880      	ldrh	r0, [r0, #4]
90015b6a:	4418      	add	r0, r3
90015b6c:	b200      	sxth	r0, r0
90015b6e:	1a80      	subs	r0, r0, r2
90015b70:	3801      	subs	r0, #1
90015b72:	4770      	bx	lr
90015b74:	8803      	ldrh	r3, [r0, #0]
90015b76:	8880      	ldrh	r0, [r0, #4]
90015b78:	4418      	add	r0, r3
90015b7a:	b200      	sxth	r0, r0
90015b7c:	1a40      	subs	r0, r0, r1
90015b7e:	e7f7      	b.n	90015b70 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
90015b80:	f9b0 0000 	ldrsh.w	r0, [r0]
90015b84:	4410      	add	r0, r2
90015b86:	4770      	bx	lr
90015b88:	2000      	movs	r0, #0
90015b8a:	4770      	bx	lr

90015b8c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
90015b8c:	2b03      	cmp	r3, #3
90015b8e:	d817      	bhi.n	90015bc0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
90015b90:	e8df f003 	tbb	[pc, r3]
90015b94:	10090602 	.word	0x10090602
90015b98:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
90015b9c:	1850      	adds	r0, r2, r1
90015b9e:	4770      	bx	lr
90015ba0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90015ba4:	e7fa      	b.n	90015b9c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
90015ba6:	8843      	ldrh	r3, [r0, #2]
90015ba8:	88c0      	ldrh	r0, [r0, #6]
90015baa:	4418      	add	r0, r3
90015bac:	b200      	sxth	r0, r0
90015bae:	1a80      	subs	r0, r0, r2
90015bb0:	3801      	subs	r0, #1
90015bb2:	4770      	bx	lr
90015bb4:	8843      	ldrh	r3, [r0, #2]
90015bb6:	88c0      	ldrh	r0, [r0, #6]
90015bb8:	4418      	add	r0, r3
90015bba:	b200      	sxth	r0, r0
90015bbc:	1a40      	subs	r0, r0, r1
90015bbe:	e7f7      	b.n	90015bb0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
90015bc0:	2000      	movs	r0, #0
90015bc2:	4770      	bx	lr

90015bc4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
90015bc4:	4b01      	ldr	r3, [pc, #4]	@ (90015bcc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
90015bc6:	2200      	movs	r2, #0
90015bc8:	601a      	str	r2, [r3, #0]
90015bca:	4770      	bx	lr
90015bcc:	2402199c 	.word	0x2402199c

90015bd0 <_ZN8touchgfx16TouchCalibration4clzuEm>:
90015bd0:	4603      	mov	r3, r0
90015bd2:	b1c8      	cbz	r0, 90015c08 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
90015bd4:	0c02      	lsrs	r2, r0, #16
90015bd6:	0412      	lsls	r2, r2, #16
90015bd8:	b9a2      	cbnz	r2, 90015c04 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
90015bda:	0403      	lsls	r3, r0, #16
90015bdc:	2010      	movs	r0, #16
90015bde:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
90015be2:	bf04      	itt	eq
90015be4:	021b      	lsleq	r3, r3, #8
90015be6:	3008      	addeq	r0, #8
90015be8:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
90015bec:	bf04      	itt	eq
90015bee:	011b      	lsleq	r3, r3, #4
90015bf0:	3004      	addeq	r0, #4
90015bf2:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
90015bf6:	bf04      	itt	eq
90015bf8:	009b      	lsleq	r3, r3, #2
90015bfa:	3002      	addeq	r0, #2
90015bfc:	2b00      	cmp	r3, #0
90015bfe:	db04      	blt.n	90015c0a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
90015c00:	3001      	adds	r0, #1
90015c02:	4770      	bx	lr
90015c04:	2000      	movs	r0, #0
90015c06:	e7ea      	b.n	90015bde <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
90015c08:	2020      	movs	r0, #32
90015c0a:	4770      	bx	lr

90015c0c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
90015c0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90015c10:	b087      	sub	sp, #28
90015c12:	460d      	mov	r5, r1
90015c14:	4616      	mov	r6, r2
90015c16:	4698      	mov	r8, r3
90015c18:	4601      	mov	r1, r0
90015c1a:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
90015c1e:	b120      	cbz	r0, 90015c2a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90015c20:	b11a      	cbz	r2, 90015c2a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90015c22:	2d1f      	cmp	r5, #31
90015c24:	d801      	bhi.n	90015c2a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
90015c26:	2b1f      	cmp	r3, #31
90015c28:	d904      	bls.n	90015c34 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
90015c2a:	2000      	movs	r0, #0
90015c2c:	6038      	str	r0, [r7, #0]
90015c2e:	b007      	add	sp, #28
90015c30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90015c34:	b97d      	cbnz	r5, 90015c56 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
90015c36:	b143      	cbz	r3, 90015c4a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
90015c38:	4602      	mov	r2, r0
90015c3a:	462b      	mov	r3, r5
90015c3c:	4641      	mov	r1, r8
90015c3e:	4630      	mov	r0, r6
90015c40:	e9cd 4700 	strd	r4, r7, [sp]
90015c44:	f7ff ffe2 	bl	90015c0c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90015c48:	e7f1      	b.n	90015c2e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90015c4a:	f04f 33ff 	mov.w	r3, #4294967295
90015c4e:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
90015c52:	603b      	str	r3, [r7, #0]
90015c54:	e7eb      	b.n	90015c2e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90015c56:	fa32 fa05 	lsrs.w	sl, r2, r5
90015c5a:	d106      	bne.n	90015c6a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
90015c5c:	4346      	muls	r6, r0
90015c5e:	fbb6 f0f4 	udiv	r0, r6, r4
90015c62:	fb04 6610 	mls	r6, r4, r0, r6
90015c66:	603e      	str	r6, [r7, #0]
90015c68:	e7e1      	b.n	90015c2e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
90015c6a:	2201      	movs	r2, #1
90015c6c:	fa00 fb05 	lsl.w	fp, r0, r5
90015c70:	40aa      	lsls	r2, r5
90015c72:	fbbb f9f4 	udiv	r9, fp, r4
90015c76:	3a01      	subs	r2, #1
90015c78:	fb0a f309 	mul.w	r3, sl, r9
90015c7c:	fb04 b919 	mls	r9, r4, r9, fp
90015c80:	4016      	ands	r6, r2
90015c82:	9303      	str	r3, [sp, #12]
90015c84:	4630      	mov	r0, r6
90015c86:	f7ff ffa3 	bl	90015bd0 <_ZN8touchgfx16TouchCalibration4clzuEm>
90015c8a:	462b      	mov	r3, r5
90015c8c:	460a      	mov	r2, r1
90015c8e:	4601      	mov	r1, r0
90015c90:	4630      	mov	r0, r6
90015c92:	e9cd 4700 	strd	r4, r7, [sp]
90015c96:	f7ff ffb9 	bl	90015c0c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90015c9a:	4606      	mov	r6, r0
90015c9c:	4648      	mov	r0, r9
90015c9e:	eb05 0108 	add.w	r1, r5, r8
90015ca2:	f7ff ff95 	bl	90015bd0 <_ZN8touchgfx16TouchCalibration4clzuEm>
90015ca6:	ab05      	add	r3, sp, #20
90015ca8:	464a      	mov	r2, r9
90015caa:	e9cd 4300 	strd	r4, r3, [sp]
90015cae:	4603      	mov	r3, r0
90015cb0:	4650      	mov	r0, sl
90015cb2:	f7ff ffab 	bl	90015c0c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90015cb6:	6839      	ldr	r1, [r7, #0]
90015cb8:	9a05      	ldr	r2, [sp, #20]
90015cba:	9b03      	ldr	r3, [sp, #12]
90015cbc:	4411      	add	r1, r2
90015cbe:	fbb1 f2f4 	udiv	r2, r1, r4
90015cc2:	18d3      	adds	r3, r2, r3
90015cc4:	fb04 1412 	mls	r4, r4, r2, r1
90015cc8:	441e      	add	r6, r3
90015cca:	603c      	str	r4, [r7, #0]
90015ccc:	4430      	add	r0, r6
90015cce:	e7ae      	b.n	90015c2e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

90015cd0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
90015cd0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90015cd4:	b085      	sub	sp, #20
90015cd6:	f1b0 0900 	subs.w	r9, r0, #0
90015cda:	461d      	mov	r5, r3
90015cdc:	4617      	mov	r7, r2
90015cde:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90015ce0:	bfbb      	ittet	lt
90015ce2:	f1c9 0900 	rsblt	r9, r9, #0
90015ce6:	f04f 36ff 	movlt.w	r6, #4294967295
90015cea:	2601      	movge	r6, #1
90015cec:	6823      	ldrlt	r3, [r4, #0]
90015cee:	bfbc      	itt	lt
90015cf0:	425b      	neglt	r3, r3
90015cf2:	6023      	strlt	r3, [r4, #0]
90015cf4:	2a00      	cmp	r2, #0
90015cf6:	da04      	bge.n	90015d02 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
90015cf8:	6823      	ldr	r3, [r4, #0]
90015cfa:	4257      	negs	r7, r2
90015cfc:	4276      	negs	r6, r6
90015cfe:	425b      	negs	r3, r3
90015d00:	6023      	str	r3, [r4, #0]
90015d02:	2d00      	cmp	r5, #0
90015d04:	4638      	mov	r0, r7
90015d06:	bfba      	itte	lt
90015d08:	426d      	neglt	r5, r5
90015d0a:	f04f 38ff 	movlt.w	r8, #4294967295
90015d0e:	f04f 0801 	movge.w	r8, #1
90015d12:	f7ff ff5d 	bl	90015bd0 <_ZN8touchgfx16TouchCalibration4clzuEm>
90015d16:	ab03      	add	r3, sp, #12
90015d18:	463a      	mov	r2, r7
90015d1a:	e9cd 5300 	strd	r5, r3, [sp]
90015d1e:	4603      	mov	r3, r0
90015d20:	4648      	mov	r0, r9
90015d22:	f7ff ff73 	bl	90015c0c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
90015d26:	6823      	ldr	r3, [r4, #0]
90015d28:	9a03      	ldr	r2, [sp, #12]
90015d2a:	4546      	cmp	r6, r8
90015d2c:	441a      	add	r2, r3
90015d2e:	fb92 f3f5 	sdiv	r3, r2, r5
90015d32:	4418      	add	r0, r3
90015d34:	fb05 2313 	mls	r3, r5, r3, r2
90015d38:	bf18      	it	ne
90015d3a:	4240      	negne	r0, r0
90015d3c:	1c72      	adds	r2, r6, #1
90015d3e:	6023      	str	r3, [r4, #0]
90015d40:	d105      	bne.n	90015d4e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
90015d42:	2b00      	cmp	r3, #0
90015d44:	f1c3 0200 	rsb	r2, r3, #0
90015d48:	db0b      	blt.n	90015d62 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
90015d4a:	6022      	str	r2, [r4, #0]
90015d4c:	e006      	b.n	90015d5c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90015d4e:	2e01      	cmp	r6, #1
90015d50:	d104      	bne.n	90015d5c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90015d52:	2b00      	cmp	r3, #0
90015d54:	da02      	bge.n	90015d5c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
90015d56:	442b      	add	r3, r5
90015d58:	3801      	subs	r0, #1
90015d5a:	6023      	str	r3, [r4, #0]
90015d5c:	b005      	add	sp, #20
90015d5e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90015d62:	3801      	subs	r0, #1
90015d64:	1b52      	subs	r2, r2, r5
90015d66:	e7f0      	b.n	90015d4a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

90015d68 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
90015d68:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90015d6c:	4c1c      	ldr	r4, [pc, #112]	@ (90015de0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
90015d6e:	4605      	mov	r5, r0
90015d70:	6807      	ldr	r7, [r0, #0]
90015d72:	69a3      	ldr	r3, [r4, #24]
90015d74:	b92b      	cbnz	r3, 90015d82 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
90015d76:	6840      	ldr	r0, [r0, #4]
90015d78:	e9c5 7000 	strd	r7, r0, [r5]
90015d7c:	b004      	add	sp, #16
90015d7e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90015d82:	f04f 0802 	mov.w	r8, #2
90015d86:	68a2      	ldr	r2, [r4, #8]
90015d88:	ae04      	add	r6, sp, #16
90015d8a:	6820      	ldr	r0, [r4, #0]
90015d8c:	fb93 f1f8 	sdiv	r1, r3, r8
90015d90:	440a      	add	r2, r1
90015d92:	69e1      	ldr	r1, [r4, #28]
90015d94:	f846 2d04 	str.w	r2, [r6, #-4]!
90015d98:	463a      	mov	r2, r7
90015d9a:	9600      	str	r6, [sp, #0]
90015d9c:	f7ff ff98 	bl	90015cd0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90015da0:	69a3      	ldr	r3, [r4, #24]
90015da2:	4607      	mov	r7, r0
90015da4:	686a      	ldr	r2, [r5, #4]
90015da6:	6a21      	ldr	r1, [r4, #32]
90015da8:	9600      	str	r6, [sp, #0]
90015daa:	6860      	ldr	r0, [r4, #4]
90015dac:	f7ff ff90 	bl	90015cd0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90015db0:	69a3      	ldr	r3, [r4, #24]
90015db2:	6962      	ldr	r2, [r4, #20]
90015db4:	4407      	add	r7, r0
90015db6:	6a61      	ldr	r1, [r4, #36]	@ 0x24
90015db8:	9600      	str	r6, [sp, #0]
90015dba:	68e0      	ldr	r0, [r4, #12]
90015dbc:	fb93 f8f8 	sdiv	r8, r3, r8
90015dc0:	4442      	add	r2, r8
90015dc2:	9203      	str	r2, [sp, #12]
90015dc4:	682a      	ldr	r2, [r5, #0]
90015dc6:	f7ff ff83 	bl	90015cd0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90015dca:	4680      	mov	r8, r0
90015dcc:	9600      	str	r6, [sp, #0]
90015dce:	69a3      	ldr	r3, [r4, #24]
90015dd0:	686a      	ldr	r2, [r5, #4]
90015dd2:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
90015dd4:	6920      	ldr	r0, [r4, #16]
90015dd6:	f7ff ff7b 	bl	90015cd0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
90015dda:	4440      	add	r0, r8
90015ddc:	e7cc      	b.n	90015d78 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
90015dde:	bf00      	nop
90015de0:	240219a0 	.word	0x240219a0

90015de4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
90015de4:	4b07      	ldr	r3, [pc, #28]	@ (90015e04 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
90015de6:	781b      	ldrb	r3, [r3, #0]
90015de8:	2b01      	cmp	r3, #1
90015dea:	d109      	bne.n	90015e00 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
90015dec:	f9b1 3000 	ldrsh.w	r3, [r1]
90015df0:	f9b0 2000 	ldrsh.w	r2, [r0]
90015df4:	8003      	strh	r3, [r0, #0]
90015df6:	4b04      	ldr	r3, [pc, #16]	@ (90015e08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
90015df8:	881b      	ldrh	r3, [r3, #0]
90015dfa:	3b01      	subs	r3, #1
90015dfc:	1a9b      	subs	r3, r3, r2
90015dfe:	800b      	strh	r3, [r1, #0]
90015e00:	4770      	bx	lr
90015e02:	bf00      	nop
90015e04:	24021984 	.word	0x24021984
90015e08:	24021980 	.word	0x24021980

90015e0c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
90015e0c:	4b07      	ldr	r3, [pc, #28]	@ (90015e2c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
90015e0e:	b510      	push	{r4, lr}
90015e10:	781b      	ldrb	r3, [r3, #0]
90015e12:	2b01      	cmp	r3, #1
90015e14:	d108      	bne.n	90015e28 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
90015e16:	4b06      	ldr	r3, [pc, #24]	@ (90015e30 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
90015e18:	880c      	ldrh	r4, [r1, #0]
90015e1a:	881b      	ldrh	r3, [r3, #0]
90015e1c:	f9b0 2000 	ldrsh.w	r2, [r0]
90015e20:	3b01      	subs	r3, #1
90015e22:	1b1b      	subs	r3, r3, r4
90015e24:	8003      	strh	r3, [r0, #0]
90015e26:	800a      	strh	r2, [r1, #0]
90015e28:	bd10      	pop	{r4, pc}
90015e2a:	bf00      	nop
90015e2c:	24021984 	.word	0x24021984
90015e30:	24021980 	.word	0x24021980

90015e34 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
90015e34:	4b0a      	ldr	r3, [pc, #40]	@ (90015e60 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
90015e36:	b510      	push	{r4, lr}
90015e38:	781b      	ldrb	r3, [r3, #0]
90015e3a:	2b01      	cmp	r3, #1
90015e3c:	d10e      	bne.n	90015e5c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
90015e3e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
90015e42:	8843      	ldrh	r3, [r0, #2]
90015e44:	f9b0 4000 	ldrsh.w	r4, [r0]
90015e48:	18ca      	adds	r2, r1, r3
90015e4a:	4b06      	ldr	r3, [pc, #24]	@ (90015e64 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
90015e4c:	8044      	strh	r4, [r0, #2]
90015e4e:	881b      	ldrh	r3, [r3, #0]
90015e50:	1a9b      	subs	r3, r3, r2
90015e52:	8003      	strh	r3, [r0, #0]
90015e54:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90015e58:	8081      	strh	r1, [r0, #4]
90015e5a:	80c3      	strh	r3, [r0, #6]
90015e5c:	bd10      	pop	{r4, pc}
90015e5e:	bf00      	nop
90015e60:	24021984 	.word	0x24021984
90015e64:	24021980 	.word	0x24021980

90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
90015e68:	4b08      	ldr	r3, [pc, #32]	@ (90015e8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
90015e6a:	781b      	ldrb	r3, [r3, #0]
90015e6c:	2b01      	cmp	r3, #1
90015e6e:	d10c      	bne.n	90015e8a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
90015e70:	8803      	ldrh	r3, [r0, #0]
90015e72:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
90015e76:	8842      	ldrh	r2, [r0, #2]
90015e78:	8002      	strh	r2, [r0, #0]
90015e7a:	185a      	adds	r2, r3, r1
90015e7c:	4b04      	ldr	r3, [pc, #16]	@ (90015e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
90015e7e:	881b      	ldrh	r3, [r3, #0]
90015e80:	1a9b      	subs	r3, r3, r2
90015e82:	8043      	strh	r3, [r0, #2]
90015e84:	88c3      	ldrh	r3, [r0, #6]
90015e86:	80c1      	strh	r1, [r0, #6]
90015e88:	8083      	strh	r3, [r0, #4]
90015e8a:	4770      	bx	lr
90015e8c:	24021984 	.word	0x24021984
90015e90:	24021980 	.word	0x24021980

90015e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
90015e94:	4b07      	ldr	r3, [pc, #28]	@ (90015eb4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
90015e96:	b510      	push	{r4, lr}
90015e98:	781b      	ldrb	r3, [r3, #0]
90015e9a:	2b01      	cmp	r3, #1
90015e9c:	d108      	bne.n	90015eb0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
90015e9e:	f9b1 3000 	ldrsh.w	r3, [r1]
90015ea2:	f9b0 4000 	ldrsh.w	r4, [r0]
90015ea6:	8003      	strh	r3, [r0, #0]
90015ea8:	8893      	ldrh	r3, [r2, #4]
90015eaa:	3b01      	subs	r3, #1
90015eac:	1b1b      	subs	r3, r3, r4
90015eae:	800b      	strh	r3, [r1, #0]
90015eb0:	bd10      	pop	{r4, pc}
90015eb2:	bf00      	nop
90015eb4:	24021984 	.word	0x24021984

90015eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
90015eb8:	4b0a      	ldr	r3, [pc, #40]	@ (90015ee4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
90015eba:	460a      	mov	r2, r1
90015ebc:	b510      	push	{r4, lr}
90015ebe:	781b      	ldrb	r3, [r3, #0]
90015ec0:	2b01      	cmp	r3, #1
90015ec2:	d10d      	bne.n	90015ee0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
90015ec4:	8881      	ldrh	r1, [r0, #4]
90015ec6:	8803      	ldrh	r3, [r0, #0]
90015ec8:	440b      	add	r3, r1
90015eca:	4601      	mov	r1, r0
90015ecc:	3b01      	subs	r3, #1
90015ece:	f821 3b02 	strh.w	r3, [r1], #2
90015ed2:	f7ff ffdf 	bl	90015e94 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
90015ed6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
90015eda:	88c2      	ldrh	r2, [r0, #6]
90015edc:	80c3      	strh	r3, [r0, #6]
90015ede:	8082      	strh	r2, [r0, #4]
90015ee0:	bd10      	pop	{r4, pc}
90015ee2:	bf00      	nop
90015ee4:	24021984 	.word	0x24021984

90015ee8 <_ZN8touchgfx11Application19changeToStartScreenEv>:
90015ee8:	4770      	bx	lr
	...

90015eec <_ZN8touchgfx11Application13requestRedrawEv>:
90015eec:	4b06      	ldr	r3, [pc, #24]	@ (90015f08 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
90015eee:	2100      	movs	r1, #0
90015ef0:	f9b3 2000 	ldrsh.w	r2, [r3]
90015ef4:	4b05      	ldr	r3, [pc, #20]	@ (90015f0c <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
90015ef6:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
90015efa:	f9b3 3000 	ldrsh.w	r3, [r3]
90015efe:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
90015f02:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
90015f06:	4770      	bx	lr
90015f08:	24021980 	.word	0x24021980
90015f0c:	24021982 	.word	0x24021982

90015f10 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
90015f10:	4b03      	ldr	r3, [pc, #12]	@ (90015f20 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
90015f12:	6818      	ldr	r0, [r3, #0]
90015f14:	b110      	cbz	r0, 90015f1c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
90015f16:	6803      	ldr	r3, [r0, #0]
90015f18:	699b      	ldr	r3, [r3, #24]
90015f1a:	4718      	bx	r3
90015f1c:	4770      	bx	lr
90015f1e:	bf00      	nop
90015f20:	240219d0 	.word	0x240219d0

90015f24 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
90015f24:	4770      	bx	lr
	...

90015f28 <_ZN8touchgfx11Application4drawEv>:
90015f28:	4b09      	ldr	r3, [pc, #36]	@ (90015f50 <_ZN8touchgfx11Application4drawEv+0x28>)
90015f2a:	b507      	push	{r0, r1, r2, lr}
90015f2c:	f9b3 2000 	ldrsh.w	r2, [r3]
90015f30:	2100      	movs	r1, #0
90015f32:	4b08      	ldr	r3, [pc, #32]	@ (90015f54 <_ZN8touchgfx11Application4drawEv+0x2c>)
90015f34:	9100      	str	r1, [sp, #0]
90015f36:	4669      	mov	r1, sp
90015f38:	f9b3 3000 	ldrsh.w	r3, [r3]
90015f3c:	f8ad 2004 	strh.w	r2, [sp, #4]
90015f40:	f8ad 3006 	strh.w	r3, [sp, #6]
90015f44:	6803      	ldr	r3, [r0, #0]
90015f46:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90015f48:	4798      	blx	r3
90015f4a:	b003      	add	sp, #12
90015f4c:	f85d fb04 	ldr.w	pc, [sp], #4
90015f50:	24021980 	.word	0x24021980
90015f54:	24021982 	.word	0x24021982

90015f58 <_ZN8touchgfx11Application10invalidateEv>:
90015f58:	4b09      	ldr	r3, [pc, #36]	@ (90015f80 <_ZN8touchgfx11Application10invalidateEv+0x28>)
90015f5a:	b082      	sub	sp, #8
90015f5c:	2100      	movs	r1, #0
90015f5e:	f9b3 2000 	ldrsh.w	r2, [r3]
90015f62:	4b08      	ldr	r3, [pc, #32]	@ (90015f84 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
90015f64:	f8ad 2004 	strh.w	r2, [sp, #4]
90015f68:	aa02      	add	r2, sp, #8
90015f6a:	f9b3 3000 	ldrsh.w	r3, [r3]
90015f6e:	9100      	str	r1, [sp, #0]
90015f70:	f8ad 3006 	strh.w	r3, [sp, #6]
90015f74:	6803      	ldr	r3, [r0, #0]
90015f76:	e912 0006 	ldmdb	r2, {r1, r2}
90015f7a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90015f7c:	b002      	add	sp, #8
90015f7e:	4718      	bx	r3
90015f80:	24021980 	.word	0x24021980
90015f84:	24021982 	.word	0x24021982

90015f88 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
90015f88:	4b03      	ldr	r3, [pc, #12]	@ (90015f98 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
90015f8a:	6818      	ldr	r0, [r3, #0]
90015f8c:	b110      	cbz	r0, 90015f94 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
90015f8e:	6803      	ldr	r3, [r0, #0]
90015f90:	69db      	ldr	r3, [r3, #28]
90015f92:	4718      	bx	r3
90015f94:	4770      	bx	lr
90015f96:	bf00      	nop
90015f98:	240219d0 	.word	0x240219d0

90015f9c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
90015f9c:	4b03      	ldr	r3, [pc, #12]	@ (90015fac <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
90015f9e:	6818      	ldr	r0, [r3, #0]
90015fa0:	b110      	cbz	r0, 90015fa8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
90015fa2:	6803      	ldr	r3, [r0, #0]
90015fa4:	6a1b      	ldr	r3, [r3, #32]
90015fa6:	4718      	bx	r3
90015fa8:	4770      	bx	lr
90015faa:	bf00      	nop
90015fac:	240219d0 	.word	0x240219d0

90015fb0 <_ZN8touchgfx11Application16clearCachedAreasEv>:
90015fb0:	2300      	movs	r3, #0
90015fb2:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
90015fb6:	4770      	bx	lr

90015fb8 <_ZN8touchgfx11Application14handleKeyEventEh>:
90015fb8:	4b03      	ldr	r3, [pc, #12]	@ (90015fc8 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
90015fba:	6818      	ldr	r0, [r3, #0]
90015fbc:	b110      	cbz	r0, 90015fc4 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
90015fbe:	6803      	ldr	r3, [r0, #0]
90015fc0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90015fc2:	4718      	bx	r3
90015fc4:	4770      	bx	lr
90015fc6:	bf00      	nop
90015fc8:	240219d0 	.word	0x240219d0

90015fcc <_ZN8touchgfx11ApplicationD1Ev>:
90015fcc:	4770      	bx	lr

90015fce <_ZN8touchgfx11ApplicationD0Ev>:
90015fce:	b510      	push	{r4, lr}
90015fd0:	4604      	mov	r4, r0
90015fd2:	f44f 719e 	mov.w	r1, #316	@ 0x13c
90015fd6:	f012 ff51 	bl	90028e7c <_ZdlPvj>
90015fda:	4620      	mov	r0, r4
90015fdc:	bd10      	pop	{r4, pc}

90015fde <_ZNK8touchgfx4Rect9intersectERKS0_>:
90015fde:	b510      	push	{r4, lr}
90015fe0:	f9b1 4000 	ldrsh.w	r4, [r1]
90015fe4:	888a      	ldrh	r2, [r1, #4]
90015fe6:	f9b0 3000 	ldrsh.w	r3, [r0]
90015fea:	4422      	add	r2, r4
90015fec:	b212      	sxth	r2, r2
90015fee:	4293      	cmp	r3, r2
90015ff0:	da15      	bge.n	9001601e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90015ff2:	8882      	ldrh	r2, [r0, #4]
90015ff4:	4413      	add	r3, r2
90015ff6:	b21b      	sxth	r3, r3
90015ff8:	429c      	cmp	r4, r3
90015ffa:	da10      	bge.n	9001601e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
90015ffc:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
90016000:	88c9      	ldrh	r1, [r1, #6]
90016002:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
90016006:	4419      	add	r1, r3
90016008:	b209      	sxth	r1, r1
9001600a:	428a      	cmp	r2, r1
9001600c:	da07      	bge.n	9001601e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
9001600e:	88c0      	ldrh	r0, [r0, #6]
90016010:	4410      	add	r0, r2
90016012:	b200      	sxth	r0, r0
90016014:	4283      	cmp	r3, r0
90016016:	bfac      	ite	ge
90016018:	2000      	movge	r0, #0
9001601a:	2001      	movlt	r0, #1
9001601c:	bd10      	pop	{r4, pc}
9001601e:	2000      	movs	r0, #0
90016020:	e7fc      	b.n	9001601c <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

90016022 <_ZN8touchgfx4Rect10restrictToEss>:
90016022:	f9b0 3000 	ldrsh.w	r3, [r0]
90016026:	2b00      	cmp	r3, #0
90016028:	b510      	push	{r4, lr}
9001602a:	da04      	bge.n	90016036 <_ZN8touchgfx4Rect10restrictToEss+0x14>
9001602c:	8884      	ldrh	r4, [r0, #4]
9001602e:	4423      	add	r3, r4
90016030:	8083      	strh	r3, [r0, #4]
90016032:	2300      	movs	r3, #0
90016034:	8003      	strh	r3, [r0, #0]
90016036:	f9b0 4000 	ldrsh.w	r4, [r0]
9001603a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
9001603e:	1b09      	subs	r1, r1, r4
90016040:	428b      	cmp	r3, r1
90016042:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90016046:	bfc8      	it	gt
90016048:	8081      	strhgt	r1, [r0, #4]
9001604a:	2b00      	cmp	r3, #0
9001604c:	da04      	bge.n	90016058 <_ZN8touchgfx4Rect10restrictToEss+0x36>
9001604e:	88c1      	ldrh	r1, [r0, #6]
90016050:	440b      	add	r3, r1
90016052:	80c3      	strh	r3, [r0, #6]
90016054:	2300      	movs	r3, #0
90016056:	8043      	strh	r3, [r0, #2]
90016058:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
9001605c:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
90016060:	1a52      	subs	r2, r2, r1
90016062:	4293      	cmp	r3, r2
90016064:	bfc8      	it	gt
90016066:	80c2      	strhgt	r2, [r0, #6]
90016068:	bd10      	pop	{r4, pc}
	...

9001606c <_ZN8touchgfx11Application4drawERNS_4RectE>:
9001606c:	4b10      	ldr	r3, [pc, #64]	@ (900160b0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
9001606e:	b510      	push	{r4, lr}
90016070:	460c      	mov	r4, r1
90016072:	f9b3 2000 	ldrsh.w	r2, [r3]
90016076:	4b0f      	ldr	r3, [pc, #60]	@ (900160b4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
90016078:	4620      	mov	r0, r4
9001607a:	f9b3 1000 	ldrsh.w	r1, [r3]
9001607e:	f7ff ffd0 	bl	90016022 <_ZN8touchgfx4Rect10restrictToEss>
90016082:	4b0d      	ldr	r3, [pc, #52]	@ (900160b8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
90016084:	6818      	ldr	r0, [r3, #0]
90016086:	b190      	cbz	r0, 900160ae <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
90016088:	6803      	ldr	r3, [r0, #0]
9001608a:	4621      	mov	r1, r4
9001608c:	689b      	ldr	r3, [r3, #8]
9001608e:	4798      	blx	r3
90016090:	4b0a      	ldr	r3, [pc, #40]	@ (900160bc <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
90016092:	6818      	ldr	r0, [r3, #0]
90016094:	b118      	cbz	r0, 9001609e <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
90016096:	6803      	ldr	r3, [r0, #0]
90016098:	4621      	mov	r1, r4
9001609a:	689b      	ldr	r3, [r3, #8]
9001609c:	4798      	blx	r3
9001609e:	4b08      	ldr	r3, [pc, #32]	@ (900160c0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
900160a0:	4621      	mov	r1, r4
900160a2:	6818      	ldr	r0, [r3, #0]
900160a4:	6803      	ldr	r3, [r0, #0]
900160a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900160aa:	69db      	ldr	r3, [r3, #28]
900160ac:	4718      	bx	r3
900160ae:	bd10      	pop	{r4, pc}
900160b0:	24021982 	.word	0x24021982
900160b4:	24021980 	.word	0x24021980
900160b8:	240219d0 	.word	0x240219d0
900160bc:	240219cc 	.word	0x240219cc
900160c0:	2402198c 	.word	0x2402198c

900160c4 <_ZNK8touchgfx4Rect8includesERKS0_>:
900160c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900160c6:	4606      	mov	r6, r0
900160c8:	4608      	mov	r0, r1
900160ca:	460f      	mov	r7, r1
900160cc:	f7fa f8a7 	bl	9001021e <_ZNK8touchgfx4Rect7isEmptyEv>
900160d0:	b9e8      	cbnz	r0, 9001610e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900160d2:	f9b7 5000 	ldrsh.w	r5, [r7]
900160d6:	f9b6 4000 	ldrsh.w	r4, [r6]
900160da:	42a5      	cmp	r5, r4
900160dc:	db17      	blt.n	9001610e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900160de:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
900160e2:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
900160e6:	429a      	cmp	r2, r3
900160e8:	db11      	blt.n	9001610e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900160ea:	88b9      	ldrh	r1, [r7, #4]
900160ec:	440d      	add	r5, r1
900160ee:	88b1      	ldrh	r1, [r6, #4]
900160f0:	440c      	add	r4, r1
900160f2:	b22d      	sxth	r5, r5
900160f4:	b224      	sxth	r4, r4
900160f6:	42a5      	cmp	r5, r4
900160f8:	dc09      	bgt.n	9001610e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
900160fa:	88f8      	ldrh	r0, [r7, #6]
900160fc:	4410      	add	r0, r2
900160fe:	88f2      	ldrh	r2, [r6, #6]
90016100:	4413      	add	r3, r2
90016102:	b200      	sxth	r0, r0
90016104:	b21b      	sxth	r3, r3
90016106:	4298      	cmp	r0, r3
90016108:	bfcc      	ite	gt
9001610a:	2000      	movgt	r0, #0
9001610c:	2001      	movle	r0, #1
9001610e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

90016110 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
90016110:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90016112:	4604      	mov	r4, r0
90016114:	4608      	mov	r0, r1
90016116:	460d      	mov	r5, r1
90016118:	f7fa f881 	bl	9001021e <_ZNK8touchgfx4Rect7isEmptyEv>
9001611c:	b978      	cbnz	r0, 9001613e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
9001611e:	4620      	mov	r0, r4
90016120:	f7fa f87d 	bl	9001021e <_ZNK8touchgfx4Rect7isEmptyEv>
90016124:	f9b5 6000 	ldrsh.w	r6, [r5]
90016128:	b150      	cbz	r0, 90016140 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
9001612a:	8026      	strh	r6, [r4, #0]
9001612c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
90016130:	8063      	strh	r3, [r4, #2]
90016132:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
90016136:	80a3      	strh	r3, [r4, #4]
90016138:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
9001613c:	80e3      	strh	r3, [r4, #6]
9001613e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90016140:	f9b4 1000 	ldrsh.w	r1, [r4]
90016144:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
90016148:	42b1      	cmp	r1, r6
9001614a:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
9001614e:	f8b5 c004 	ldrh.w	ip, [r5, #4]
90016152:	460f      	mov	r7, r1
90016154:	88ed      	ldrh	r5, [r5, #6]
90016156:	bfa8      	it	ge
90016158:	4637      	movge	r7, r6
9001615a:	4293      	cmp	r3, r2
9001615c:	4618      	mov	r0, r3
9001615e:	4466      	add	r6, ip
90016160:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90016164:	bfa8      	it	ge
90016166:	4610      	movge	r0, r2
90016168:	442a      	add	r2, r5
9001616a:	88e5      	ldrh	r5, [r4, #6]
9001616c:	4461      	add	r1, ip
9001616e:	b236      	sxth	r6, r6
90016170:	8027      	strh	r7, [r4, #0]
90016172:	442b      	add	r3, r5
90016174:	b209      	sxth	r1, r1
90016176:	b212      	sxth	r2, r2
90016178:	8060      	strh	r0, [r4, #2]
9001617a:	b21b      	sxth	r3, r3
9001617c:	428e      	cmp	r6, r1
9001617e:	bfac      	ite	ge
90016180:	ebc7 0106 	rsbge	r1, r7, r6
90016184:	ebc7 0101 	rsblt	r1, r7, r1
90016188:	429a      	cmp	r2, r3
9001618a:	bfac      	ite	ge
9001618c:	ebc0 0202 	rsbge	r2, r0, r2
90016190:	ebc0 0203 	rsblt	r2, r0, r3
90016194:	80a1      	strh	r1, [r4, #4]
90016196:	80e2      	strh	r2, [r4, #6]
90016198:	e7d1      	b.n	9001613e <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

9001619c <_ZN8touchgfx11Application11getInstanceEv>:
9001619c:	4b01      	ldr	r3, [pc, #4]	@ (900161a4 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
9001619e:	6818      	ldr	r0, [r3, #0]
900161a0:	4770      	bx	lr
900161a2:	bf00      	nop
900161a4:	240219e0 	.word	0x240219e0

900161a8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
900161a8:	2300      	movs	r3, #0
900161aa:	b510      	push	{r4, lr}
900161ac:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
900161b0:	4604      	mov	r4, r0
900161b2:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
900161b6:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
900161ba:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
900161be:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
900161c2:	429a      	cmp	r2, r3
900161c4:	d90e      	bls.n	900161e4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
900161c6:	18e2      	adds	r2, r4, r3
900161c8:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
900161cc:	b122      	cbz	r2, 900161d8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
900161ce:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
900161d2:	6803      	ldr	r3, [r0, #0]
900161d4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900161d6:	4798      	blx	r3
900161d8:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
900161dc:	3301      	adds	r3, #1
900161de:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
900161e2:	e7ea      	b.n	900161ba <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
900161e4:	bd10      	pop	{r4, pc}

900161e6 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
900161e6:	b530      	push	{r4, r5, lr}
900161e8:	2200      	movs	r2, #0
900161ea:	f8b0 5080 	ldrh.w	r5, [r0, #128]	@ 0x80
900161ee:	b293      	uxth	r3, r2
900161f0:	429d      	cmp	r5, r3
900161f2:	d90e      	bls.n	90016212 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
900161f4:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
900161f8:	428b      	cmp	r3, r1
900161fa:	d10b      	bne.n	90016214 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
900161fc:	1884      	adds	r4, r0, r2
900161fe:	f894 3084 	ldrb.w	r3, [r4, #132]	@ 0x84
90016202:	b13b      	cbz	r3, 90016214 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
90016204:	3b01      	subs	r3, #1
90016206:	b2db      	uxtb	r3, r3
90016208:	f884 3084 	strb.w	r3, [r4, #132]	@ 0x84
9001620c:	b90b      	cbnz	r3, 90016212 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
9001620e:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
90016212:	bd30      	pop	{r4, r5, pc}
90016214:	3201      	adds	r2, #1
90016216:	e7ea      	b.n	900161ee <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

90016218 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
90016218:	2300      	movs	r3, #0
9001621a:	f100 0284 	add.w	r2, r0, #132	@ 0x84
9001621e:	30a4      	adds	r0, #164	@ 0xa4
90016220:	f820 3c24 	strh.w	r3, [r0, #-36]
90016224:	f802 3b01 	strb.w	r3, [r2], #1
90016228:	4282      	cmp	r2, r0
9001622a:	d1fb      	bne.n	90016224 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
9001622c:	4770      	bx	lr
	...

90016230 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
90016230:	b570      	push	{r4, r5, r6, lr}
90016232:	4c0b      	ldr	r4, [pc, #44]	@ (90016260 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
90016234:	4605      	mov	r5, r0
90016236:	460e      	mov	r6, r1
90016238:	6820      	ldr	r0, [r4, #0]
9001623a:	b110      	cbz	r0, 90016242 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
9001623c:	6803      	ldr	r3, [r0, #0]
9001623e:	695b      	ldr	r3, [r3, #20]
90016240:	4798      	blx	r3
90016242:	1d28      	adds	r0, r5, #4
90016244:	f7ff ffe8 	bl	90016218 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
90016248:	6026      	str	r6, [r4, #0]
9001624a:	6833      	ldr	r3, [r6, #0]
9001624c:	4630      	mov	r0, r6
9001624e:	68db      	ldr	r3, [r3, #12]
90016250:	4798      	blx	r3
90016252:	682b      	ldr	r3, [r5, #0]
90016254:	4628      	mov	r0, r5
90016256:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90016258:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001625c:	4718      	bx	r3
9001625e:	bf00      	nop
90016260:	240219d0 	.word	0x240219d0

90016264 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
90016264:	2300      	movs	r3, #0
90016266:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
9001626a:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
9001626e:	461a      	mov	r2, r3
90016270:	b5f0      	push	{r4, r5, r6, r7, lr}
90016272:	461c      	mov	r4, r3
90016274:	461d      	mov	r5, r3
90016276:	459c      	cmp	ip, r3
90016278:	dd1a      	ble.n	900162b0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
9001627a:	18c6      	adds	r6, r0, r3
9001627c:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
90016280:	b16e      	cbz	r6, 9001629e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
90016282:	429a      	cmp	r2, r3
90016284:	d008      	beq.n	90016298 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
90016286:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
9001628a:	fa1f fe82 	uxth.w	lr, r2
9001628e:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
90016292:	1887      	adds	r7, r0, r2
90016294:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
90016298:	3201      	adds	r2, #1
9001629a:	3301      	adds	r3, #1
9001629c:	e7eb      	b.n	90016276 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
9001629e:	4299      	cmp	r1, r3
900162a0:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
900162a4:	bfa8      	it	ge
900162a6:	3501      	addge	r5, #1
900162a8:	429e      	cmp	r6, r3
900162aa:	bfc8      	it	gt
900162ac:	3401      	addgt	r4, #1
900162ae:	e7f4      	b.n	9001629a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
900162b0:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
900162b4:	1b49      	subs	r1, r1, r5
900162b6:	1b1b      	subs	r3, r3, r4
900162b8:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
900162bc:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
900162c0:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
900162c4:	4293      	cmp	r3, r2
900162c6:	dd03      	ble.n	900162d0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
900162c8:	3b01      	subs	r3, #1
900162ca:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
900162ce:	e7f7      	b.n	900162c0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
900162d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

900162d4 <_ZN8touchgfx11Application15handleTickEventEv>:
900162d4:	b570      	push	{r4, r5, r6, lr}
900162d6:	4d16      	ldr	r5, [pc, #88]	@ (90016330 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
900162d8:	4604      	mov	r4, r0
900162da:	6828      	ldr	r0, [r5, #0]
900162dc:	b140      	cbz	r0, 900162f0 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
900162de:	7a03      	ldrb	r3, [r0, #8]
900162e0:	b933      	cbnz	r3, 900162f0 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
900162e2:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
900162e6:	6803      	ldr	r3, [r0, #0]
900162e8:	689b      	ldr	r3, [r3, #8]
900162ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900162ee:	4718      	bx	r3
900162f0:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
900162f4:	4e0f      	ldr	r6, [pc, #60]	@ (90016334 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
900162f6:	b973      	cbnz	r3, 90016316 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900162f8:	b168      	cbz	r0, 90016316 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900162fa:	7a03      	ldrb	r3, [r0, #8]
900162fc:	b15b      	cbz	r3, 90016316 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
900162fe:	6830      	ldr	r0, [r6, #0]
90016300:	b110      	cbz	r0, 90016308 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
90016302:	6803      	ldr	r3, [r0, #0]
90016304:	691b      	ldr	r3, [r3, #16]
90016306:	4798      	blx	r3
90016308:	6828      	ldr	r0, [r5, #0]
9001630a:	6803      	ldr	r3, [r0, #0]
9001630c:	68db      	ldr	r3, [r3, #12]
9001630e:	4798      	blx	r3
90016310:	2301      	movs	r3, #1
90016312:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
90016316:	3404      	adds	r4, #4
90016318:	4620      	mov	r0, r4
9001631a:	f7ff ff45 	bl	900161a8 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
9001631e:	4620      	mov	r0, r4
90016320:	f7ff ffa0 	bl	90016264 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
90016324:	6830      	ldr	r0, [r6, #0]
90016326:	b110      	cbz	r0, 9001632e <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
90016328:	6803      	ldr	r3, [r0, #0]
9001632a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
9001632c:	e7dd      	b.n	900162ea <_ZN8touchgfx11Application15handleTickEventEv+0x16>
9001632e:	bd70      	pop	{r4, r5, r6, pc}
90016330:	240219d4 	.word	0x240219d4
90016334:	240219d0 	.word	0x240219d0

90016338 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
90016338:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9001633a:	2300      	movs	r3, #0
9001633c:	4604      	mov	r4, r0
9001633e:	460d      	mov	r5, r1
90016340:	f8b0 1080 	ldrh.w	r1, [r0, #128]	@ 0x80
90016344:	4618      	mov	r0, r3
90016346:	b29a      	uxth	r2, r3
90016348:	4291      	cmp	r1, r2
9001634a:	d912      	bls.n	90016372 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x3a>
9001634c:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
90016350:	18e6      	adds	r6, r4, r3
90016352:	42af      	cmp	r7, r5
90016354:	f896 2084 	ldrb.w	r2, [r6, #132]	@ 0x84
90016358:	d105      	bne.n	90016366 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
9001635a:	2aff      	cmp	r2, #255	@ 0xff
9001635c:	d002      	beq.n	90016364 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
9001635e:	3201      	adds	r2, #1
90016360:	f886 2084 	strb.w	r2, [r6, #132]	@ 0x84
90016364:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90016366:	2a00      	cmp	r2, #0
90016368:	f103 0301 	add.w	r3, r3, #1
9001636c:	bf08      	it	eq
9001636e:	2001      	moveq	r0, #1
90016370:	e7e9      	b.n	90016346 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
90016372:	b120      	cbz	r0, 9001637e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x46>
90016374:	2920      	cmp	r1, #32
90016376:	d102      	bne.n	9001637e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x46>
90016378:	4620      	mov	r0, r4
9001637a:	f7ff ff73 	bl	90016264 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
9001637e:	f8b4 3080 	ldrh.w	r3, [r4, #128]	@ 0x80
90016382:	2b1f      	cmp	r3, #31
90016384:	d8ee      	bhi.n	90016364 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
90016386:	18e2      	adds	r2, r4, r3
90016388:	2101      	movs	r1, #1
9001638a:	f882 1084 	strb.w	r1, [r2, #132]	@ 0x84
9001638e:	185a      	adds	r2, r3, r1
90016390:	f8a4 2080 	strh.w	r2, [r4, #128]	@ 0x80
90016394:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
90016398:	e7e4      	b.n	90016364 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

9001639a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
9001639a:	4603      	mov	r3, r0
9001639c:	f100 0140 	add.w	r1, r0, #64	@ 0x40
900163a0:	2200      	movs	r2, #0
900163a2:	801a      	strh	r2, [r3, #0]
900163a4:	3308      	adds	r3, #8
900163a6:	f823 2c06 	strh.w	r2, [r3, #-6]
900163aa:	f823 2c04 	strh.w	r2, [r3, #-4]
900163ae:	f823 2c02 	strh.w	r2, [r3, #-2]
900163b2:	428b      	cmp	r3, r1
900163b4:	d1f5      	bne.n	900163a2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
900163b6:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
900163ba:	4770      	bx	lr

900163bc <_ZN8touchgfx11ApplicationC1Ev>:
900163bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
900163be:	4b1d      	ldr	r3, [pc, #116]	@ (90016434 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
900163c0:	4606      	mov	r6, r0
900163c2:	4604      	mov	r4, r0
900163c4:	2500      	movs	r5, #0
900163c6:	f846 3b04 	str.w	r3, [r6], #4
900163ca:	22a8      	movs	r2, #168	@ 0xa8
900163cc:	2100      	movs	r1, #0
900163ce:	4630      	mov	r0, r6
900163d0:	f013 fb66 	bl	90029aa0 <memset>
900163d4:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
900163d8:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
900163dc:	4f16      	ldr	r7, [pc, #88]	@ (90016438 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
900163de:	f7ff ffdc 	bl	9001639a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900163e2:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
900163e6:	f7ff ffd8 	bl	9001639a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
900163ea:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
900163ee:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
900163f2:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
900163f6:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
900163fa:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
900163fe:	490f      	ldr	r1, [pc, #60]	@ (9001643c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
90016400:	480f      	ldr	r0, [pc, #60]	@ (90016440 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
90016402:	f011 feab 	bl	9002815c <CRC_Lock>
90016406:	4b0f      	ldr	r3, [pc, #60]	@ (90016444 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
90016408:	b158      	cbz	r0, 90016422 <_ZN8touchgfx11ApplicationC1Ev+0x66>
9001640a:	801d      	strh	r5, [r3, #0]
9001640c:	2300      	movs	r3, #0
9001640e:	4a0e      	ldr	r2, [pc, #56]	@ (90016448 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
90016410:	4630      	mov	r0, r6
90016412:	6013      	str	r3, [r2, #0]
90016414:	4a0d      	ldr	r2, [pc, #52]	@ (9001644c <_ZN8touchgfx11ApplicationC1Ev+0x90>)
90016416:	603b      	str	r3, [r7, #0]
90016418:	6013      	str	r3, [r2, #0]
9001641a:	f7ff fefd 	bl	90016218 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
9001641e:	4620      	mov	r0, r4
90016420:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90016422:	f44f 6280 	mov.w	r2, #1024	@ 0x400
90016426:	2002      	movs	r0, #2
90016428:	801a      	strh	r2, [r3, #0]
9001642a:	6038      	str	r0, [r7, #0]
9001642c:	f001 ff44 	bl	900182b8 <_ZN8touchgfx6Screen4drawEv>
90016430:	e7ec      	b.n	9001640c <_ZN8touchgfx11ApplicationC1Ev+0x50>
90016432:	bf00      	nop
90016434:	9002d590 	.word	0x9002d590
90016438:	240219d0 	.word	0x240219d0
9001643c:	b5e8b5cd 	.word	0xb5e8b5cd
90016440:	f407a5c2 	.word	0xf407a5c2
90016444:	24000088 	.word	0x24000088
90016448:	240219e0 	.word	0x240219e0
9001644c:	240219d4 	.word	0x240219d4

90016450 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
90016450:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
90016454:	3b01      	subs	r3, #1
90016456:	b29b      	uxth	r3, r3
90016458:	428b      	cmp	r3, r1
9001645a:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
9001645e:	b510      	push	{r4, lr}
90016460:	d908      	bls.n	90016474 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
90016462:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
90016466:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
9001646a:	681a      	ldr	r2, [r3, #0]
9001646c:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
90016470:	685a      	ldr	r2, [r3, #4]
90016472:	6062      	str	r2, [r4, #4]
90016474:	bd10      	pop	{r4, pc}
	...

90016478 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
90016478:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001647c:	b08f      	sub	sp, #60	@ 0x3c
9001647e:	4b92      	ldr	r3, [pc, #584]	@ (900166c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x250>)
90016480:	4683      	mov	fp, r0
90016482:	ac0a      	add	r4, sp, #40	@ 0x28
90016484:	e884 0006 	stmia.w	r4, {r1, r2}
90016488:	f9b3 2000 	ldrsh.w	r2, [r3]
9001648c:	4620      	mov	r0, r4
9001648e:	4b8f      	ldr	r3, [pc, #572]	@ (900166cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x254>)
90016490:	f9b3 1000 	ldrsh.w	r1, [r3]
90016494:	f7ff fdc5 	bl	90016022 <_ZN8touchgfx4Rect10restrictToEss>
90016498:	4620      	mov	r0, r4
9001649a:	f7f9 fec0 	bl	9001021e <_ZNK8touchgfx4Rect7isEmptyEv>
9001649e:	2800      	cmp	r0, #0
900164a0:	d170      	bne.n	90016584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
900164a2:	4b8b      	ldr	r3, [pc, #556]	@ (900166d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
900164a4:	681b      	ldr	r3, [r3, #0]
900164a6:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
900164aa:	2b02      	cmp	r3, #2
900164ac:	d06a      	beq.n	90016584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
900164ae:	9403      	str	r4, [sp, #12]
900164b0:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
900164b4:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
900164b8:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
900164bc:	9301      	str	r3, [sp, #4]
900164be:	35a4      	adds	r5, #164	@ 0xa4
900164c0:	b15c      	cbz	r4, 900164da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
900164c2:	4629      	mov	r1, r5
900164c4:	9803      	ldr	r0, [sp, #12]
900164c6:	f7ff fdfd 	bl	900160c4 <_ZNK8touchgfx4Rect8includesERKS0_>
900164ca:	3c01      	subs	r4, #1
900164cc:	b118      	cbz	r0, 900164d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
900164ce:	b2a1      	uxth	r1, r4
900164d0:	9801      	ldr	r0, [sp, #4]
900164d2:	f7ff ffbd 	bl	90016450 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900164d6:	3d08      	subs	r5, #8
900164d8:	e7f2      	b.n	900164c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
900164da:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
900164de:	f10a 33ff 	add.w	r3, sl, #4294967295
900164e2:	f8cd a010 	str.w	sl, [sp, #16]
900164e6:	9302      	str	r3, [sp, #8]
900164e8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
900164ec:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
900164f0:	9306      	str	r3, [sp, #24]
900164f2:	445c      	add	r4, fp
900164f4:	2500      	movs	r5, #0
900164f6:	4626      	mov	r6, r4
900164f8:	f8cd a014 	str.w	sl, [sp, #20]
900164fc:	462f      	mov	r7, r5
900164fe:	9b05      	ldr	r3, [sp, #20]
90016500:	2b00      	cmp	r3, #0
90016502:	d073      	beq.n	900165ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x174>
90016504:	9903      	ldr	r1, [sp, #12]
90016506:	4630      	mov	r0, r6
90016508:	f7ff fd69 	bl	90015fde <_ZNK8touchgfx4Rect9intersectERKS0_>
9001650c:	b350      	cbz	r0, 90016564 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
9001650e:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
90016512:	f9b6 c000 	ldrsh.w	ip, [r6]
90016516:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
9001651a:	45e6      	cmp	lr, ip
9001651c:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
90016520:	db33      	blt.n	9001658a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
90016522:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90016526:	88b3      	ldrh	r3, [r6, #4]
90016528:	4472      	add	r2, lr
9001652a:	4463      	add	r3, ip
9001652c:	b212      	sxth	r2, r2
9001652e:	b21b      	sxth	r3, r3
90016530:	429a      	cmp	r2, r3
90016532:	dc2a      	bgt.n	9001658a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x112>
90016534:	fa1f f289 	uxth.w	r2, r9
90016538:	88f3      	ldrh	r3, [r6, #6]
9001653a:	45c8      	cmp	r8, r9
9001653c:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
90016540:	4413      	add	r3, r2
90016542:	fa1f fc88 	uxth.w	ip, r8
90016546:	b29b      	uxth	r3, r3
90016548:	fa0f fe83 	sxth.w	lr, r3
9001654c:	db0f      	blt.n	9001656e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf6>
9001654e:	eba3 030c 	sub.w	r3, r3, ip
90016552:	1ac9      	subs	r1, r1, r3
90016554:	b209      	sxth	r1, r1
90016556:	2900      	cmp	r1, #0
90016558:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
9001655c:	dd12      	ble.n	90016584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
9001655e:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
90016562:	4605      	mov	r5, r0
90016564:	9b05      	ldr	r3, [sp, #20]
90016566:	3e08      	subs	r6, #8
90016568:	3b01      	subs	r3, #1
9001656a:	9305      	str	r3, [sp, #20]
9001656c:	e7c7      	b.n	900164fe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x86>
9001656e:	4461      	add	r1, ip
90016570:	b209      	sxth	r1, r1
90016572:	4571      	cmp	r1, lr
90016574:	dc38      	bgt.n	900165e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
90016576:	eba2 020c 	sub.w	r2, r2, ip
9001657a:	b212      	sxth	r2, r2
9001657c:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
90016580:	2a00      	cmp	r2, #0
90016582:	dcee      	bgt.n	90016562 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
90016584:	b00f      	add	sp, #60	@ 0x3c
90016586:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001658a:	45c8      	cmp	r8, r9
9001658c:	db2c      	blt.n	900165e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
9001658e:	88f3      	ldrh	r3, [r6, #6]
90016590:	4499      	add	r9, r3
90016592:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
90016596:	4498      	add	r8, r3
90016598:	fa0f f989 	sxth.w	r9, r9
9001659c:	fa0f f888 	sxth.w	r8, r8
900165a0:	45c1      	cmp	r9, r8
900165a2:	db21      	blt.n	900165e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
900165a4:	fa1f f28c 	uxth.w	r2, ip
900165a8:	88b3      	ldrh	r3, [r6, #4]
900165aa:	45e6      	cmp	lr, ip
900165ac:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
900165b0:	4413      	add	r3, r2
900165b2:	fa1f f88e 	uxth.w	r8, lr
900165b6:	b29b      	uxth	r3, r3
900165b8:	fa0f f983 	sxth.w	r9, r3
900165bc:	db0a      	blt.n	900165d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15c>
900165be:	eba3 0308 	sub.w	r3, r3, r8
900165c2:	1ac9      	subs	r1, r1, r3
900165c4:	b209      	sxth	r1, r1
900165c6:	2900      	cmp	r1, #0
900165c8:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
900165cc:	ddda      	ble.n	90016584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
900165ce:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
900165d2:	e7c6      	b.n	90016562 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
900165d4:	4441      	add	r1, r8
900165d6:	b209      	sxth	r1, r1
900165d8:	4549      	cmp	r1, r9
900165da:	dc05      	bgt.n	900165e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x170>
900165dc:	eba2 0208 	sub.w	r2, r2, r8
900165e0:	b212      	sxth	r2, r2
900165e2:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
900165e6:	e7cb      	b.n	90016580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x108>
900165e8:	4607      	mov	r7, r0
900165ea:	e7bb      	b.n	90016564 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xec>
900165ec:	2d00      	cmp	r5, #0
900165ee:	d181      	bne.n	900164f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7c>
900165f0:	2f00      	cmp	r7, #0
900165f2:	f000 81df 	beq.w	900169b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
900165f6:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
900165fa:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
900165fe:	b2b3      	uxth	r3, r6
90016600:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
90016604:	9305      	str	r3, [sp, #20]
90016606:	9a05      	ldr	r2, [sp, #20]
90016608:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
9001660c:	4413      	add	r3, r2
9001660e:	b2ba      	uxth	r2, r7
90016610:	4492      	add	sl, r2
90016612:	b29b      	uxth	r3, r3
90016614:	fa1f fa8a 	uxth.w	sl, sl
90016618:	fa0f f883 	sxth.w	r8, r3
9001661c:	fa0f f98a 	sxth.w	r9, sl
90016620:	e9cd 2307 	strd	r2, r3, [sp, #28]
90016624:	9b04      	ldr	r3, [sp, #16]
90016626:	2b00      	cmp	r3, #0
90016628:	d054      	beq.n	900166d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>
9001662a:	9903      	ldr	r1, [sp, #12]
9001662c:	4620      	mov	r0, r4
9001662e:	f7ff fcd6 	bl	90015fde <_ZNK8touchgfx4Rect9intersectERKS0_>
90016632:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
90016636:	b1c0      	cbz	r0, 9001666a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
90016638:	f9b4 e000 	ldrsh.w	lr, [r4]
9001663c:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
90016640:	4576      	cmp	r6, lr
90016642:	dc22      	bgt.n	9001668a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
90016644:	f8b4 c004 	ldrh.w	ip, [r4, #4]
90016648:	44f4      	add	ip, lr
9001664a:	fa0f fc8c 	sxth.w	ip, ip
9001664e:	45e0      	cmp	r8, ip
90016650:	db1b      	blt.n	9001668a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x212>
90016652:	428f      	cmp	r7, r1
90016654:	fa1f fc81 	uxth.w	ip, r1
90016658:	88e1      	ldrh	r1, [r4, #6]
9001665a:	dc0d      	bgt.n	90016678 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x200>
9001665c:	ebaa 0c0c 	sub.w	ip, sl, ip
90016660:	f8a4 9002 	strh.w	r9, [r4, #2]
90016664:	eba1 010c 	sub.w	r1, r1, ip
90016668:	80e1      	strh	r1, [r4, #6]
9001666a:	4628      	mov	r0, r5
9001666c:	9904      	ldr	r1, [sp, #16]
9001666e:	3c08      	subs	r4, #8
90016670:	4605      	mov	r5, r0
90016672:	3901      	subs	r1, #1
90016674:	9104      	str	r1, [sp, #16]
90016676:	e7d3      	b.n	90016620 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a8>
90016678:	4461      	add	r1, ip
9001667a:	b209      	sxth	r1, r1
9001667c:	4549      	cmp	r1, r9
9001667e:	dcf5      	bgt.n	9001666c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
90016680:	eba2 0c0c 	sub.w	ip, r2, ip
90016684:	f8a4 c006 	strh.w	ip, [r4, #6]
90016688:	e7ef      	b.n	9001666a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
9001668a:	428f      	cmp	r7, r1
9001668c:	dcee      	bgt.n	9001666c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
9001668e:	f8b4 c006 	ldrh.w	ip, [r4, #6]
90016692:	4461      	add	r1, ip
90016694:	b209      	sxth	r1, r1
90016696:	4589      	cmp	r9, r1
90016698:	dbe8      	blt.n	9001666c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
9001669a:	4576      	cmp	r6, lr
9001669c:	fa1f fc8e 	uxth.w	ip, lr
900166a0:	88a1      	ldrh	r1, [r4, #4]
900166a2:	dc07      	bgt.n	900166b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x23c>
900166a4:	eba3 0c0c 	sub.w	ip, r3, ip
900166a8:	f8a4 8000 	strh.w	r8, [r4]
900166ac:	eba1 010c 	sub.w	r1, r1, ip
900166b0:	80a1      	strh	r1, [r4, #4]
900166b2:	e7da      	b.n	9001666a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
900166b4:	4461      	add	r1, ip
900166b6:	b209      	sxth	r1, r1
900166b8:	4588      	cmp	r8, r1
900166ba:	dbd7      	blt.n	9001666c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
900166bc:	9905      	ldr	r1, [sp, #20]
900166be:	eba1 0c0c 	sub.w	ip, r1, ip
900166c2:	f8a4 c004 	strh.w	ip, [r4, #4]
900166c6:	e7d0      	b.n	9001666a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
900166c8:	24021982 	.word	0x24021982
900166cc:	24021980 	.word	0x24021980
900166d0:	2402198c 	.word	0x2402198c
900166d4:	2d00      	cmp	r5, #0
900166d6:	f000 816d 	beq.w	900169b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
900166da:	9b06      	ldr	r3, [sp, #24]
900166dc:	445b      	add	r3, fp
900166de:	461c      	mov	r4, r3
900166e0:	9b02      	ldr	r3, [sp, #8]
900166e2:	3301      	adds	r3, #1
900166e4:	f000 8166 	beq.w	900169b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
900166e8:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
900166ec:	9803      	ldr	r0, [sp, #12]
900166ee:	4629      	mov	r1, r5
900166f0:	f7ff fce8 	bl	900160c4 <_ZNK8touchgfx4Rect8includesERKS0_>
900166f4:	b120      	cbz	r0, 90016700 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x288>
900166f6:	f8bd 1008 	ldrh.w	r1, [sp, #8]
900166fa:	9801      	ldr	r0, [sp, #4]
900166fc:	f7ff fea8 	bl	90016450 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90016700:	9903      	ldr	r1, [sp, #12]
90016702:	4628      	mov	r0, r5
90016704:	f7ff fc6b 	bl	90015fde <_ZNK8touchgfx4Rect9intersectERKS0_>
90016708:	2800      	cmp	r0, #0
9001670a:	f000 809c 	beq.w	90016846 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
9001670e:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
90016712:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90016716:	fa1f f189 	uxth.w	r1, r9
9001671a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
9001671e:	9309      	str	r3, [sp, #36]	@ 0x24
90016720:	eb01 0c03 	add.w	ip, r1, r3
90016724:	b283      	uxth	r3, r0
90016726:	4548      	cmp	r0, r9
90016728:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
9001672c:	fa1f fa8c 	uxth.w	sl, ip
90016730:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
90016734:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
90016738:	eb03 050c 	add.w	r5, r3, ip
9001673c:	b2ad      	uxth	r5, r5
9001673e:	9505      	str	r5, [sp, #20]
90016740:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
90016744:	9504      	str	r5, [sp, #16]
90016746:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
9001674a:	f340 8099 	ble.w	90016880 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x408>
9001674e:	1a5b      	subs	r3, r3, r1
90016750:	4596      	cmp	lr, r2
90016752:	fa0f f08a 	sxth.w	r0, sl
90016756:	b29b      	uxth	r3, r3
90016758:	b21e      	sxth	r6, r3
9001675a:	dd2e      	ble.n	900167ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x342>
9001675c:	9f02      	ldr	r7, [sp, #8]
9001675e:	fa1f fe8e 	uxth.w	lr, lr
90016762:	b292      	uxth	r2, r2
90016764:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
90016768:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
9001676c:	9f04      	ldr	r7, [sp, #16]
9001676e:	ebae 0102 	sub.w	r1, lr, r2
90016772:	44a6      	add	lr, r4
90016774:	1a3f      	subs	r7, r7, r0
90016776:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
9001677a:	b289      	uxth	r1, r1
9001677c:	4402      	add	r2, r0
9001677e:	fa0f fe8e 	sxth.w	lr, lr
90016782:	b20d      	sxth	r5, r1
90016784:	b212      	sxth	r2, r2
90016786:	436f      	muls	r7, r5
90016788:	ebae 0202 	sub.w	r2, lr, r2
9001678c:	4372      	muls	r2, r6
9001678e:	4297      	cmp	r7, r2
90016790:	db09      	blt.n	900167a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32e>
90016792:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
90016796:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
9001679a:	449c      	add	ip, r3
9001679c:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
900167a0:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
900167a4:	e684      	b.n	900164b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
900167a6:	4421      	add	r1, r4
900167a8:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
900167ac:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
900167b0:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
900167b4:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
900167b8:	e67a      	b.n	900164b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
900167ba:	9f04      	ldr	r7, [sp, #16]
900167bc:	42b8      	cmp	r0, r7
900167be:	da27      	bge.n	90016810 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x398>
900167c0:	9902      	ldr	r1, [sp, #8]
900167c2:	1a3f      	subs	r7, r7, r0
900167c4:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
900167c8:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
900167cc:	eb05 010e 	add.w	r1, r5, lr
900167d0:	fa1f f881 	uxth.w	r8, r1
900167d4:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
900167d8:	4411      	add	r1, r2
900167da:	fa0f f988 	sxth.w	r9, r8
900167de:	eba2 020e 	sub.w	r2, r2, lr
900167e2:	eba1 0108 	sub.w	r1, r1, r8
900167e6:	4372      	muls	r2, r6
900167e8:	b289      	uxth	r1, r1
900167ea:	fa0f f881 	sxth.w	r8, r1
900167ee:	fb08 f707 	mul.w	r7, r8, r7
900167f2:	42ba      	cmp	r2, r7
900167f4:	dc06      	bgt.n	90016804 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38c>
900167f6:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
900167fa:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
900167fe:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
90016802:	e7ca      	b.n	9001679a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
90016804:	4429      	add	r1, r5
90016806:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
9001680a:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
9001680e:	e64f      	b.n	900164b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90016810:	9805      	ldr	r0, [sp, #20]
90016812:	2d06      	cmp	r5, #6
90016814:	ebaa 0000 	sub.w	r0, sl, r0
90016818:	b280      	uxth	r0, r0
9001681a:	fa0f fe80 	sxth.w	lr, r0
9001681e:	d817      	bhi.n	90016850 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d8>
90016820:	9b04      	ldr	r3, [sp, #16]
90016822:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
90016826:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
9001682a:	1c6b      	adds	r3, r5, #1
9001682c:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
90016830:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
90016834:	9b01      	ldr	r3, [sp, #4]
90016836:	9801      	ldr	r0, [sp, #4]
90016838:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
9001683c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
90016840:	805a      	strh	r2, [r3, #2]
90016842:	809e      	strh	r6, [r3, #4]
90016844:	80d9      	strh	r1, [r3, #6]
90016846:	9b02      	ldr	r3, [sp, #8]
90016848:	3c08      	subs	r4, #8
9001684a:	3b01      	subs	r3, #1
9001684c:	9302      	str	r3, [sp, #8]
9001684e:	e747      	b.n	900166e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x268>
90016850:	9a02      	ldr	r2, [sp, #8]
90016852:	45b6      	cmp	lr, r6
90016854:	ea4f 02c2 	mov.w	r2, r2, lsl #3
90016858:	db0d      	blt.n	90016876 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fe>
9001685a:	449c      	add	ip, r3
9001685c:	445a      	add	r2, fp
9001685e:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
90016862:	fa1f fc8c 	uxth.w	ip, ip
90016866:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
9001686a:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
9001686e:	448c      	add	ip, r1
90016870:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
90016874:	e61c      	b.n	900164b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90016876:	445a      	add	r2, fp
90016878:	4484      	add	ip, r0
9001687a:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
9001687e:	e78f      	b.n	900167a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
90016880:	fa1f f18e 	uxth.w	r1, lr
90016884:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
90016888:	b293      	uxth	r3, r2
9001688a:	4596      	cmp	lr, r2
9001688c:	eb01 0806 	add.w	r8, r1, r6
90016890:	9306      	str	r3, [sp, #24]
90016892:	fa1f f888 	uxth.w	r8, r8
90016896:	9f06      	ldr	r7, [sp, #24]
90016898:	fa0f f388 	sxth.w	r3, r8
9001689c:	9307      	str	r3, [sp, #28]
9001689e:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
900168a2:	443b      	add	r3, r7
900168a4:	b29b      	uxth	r3, r3
900168a6:	9308      	str	r3, [sp, #32]
900168a8:	da24      	bge.n	900168f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
900168aa:	9905      	ldr	r1, [sp, #20]
900168ac:	eba3 0308 	sub.w	r3, r3, r8
900168b0:	eba2 020e 	sub.w	r2, r2, lr
900168b4:	eba9 0000 	sub.w	r0, r9, r0
900168b8:	ebaa 0401 	sub.w	r4, sl, r1
900168bc:	b29b      	uxth	r3, r3
900168be:	b2a4      	uxth	r4, r4
900168c0:	b219      	sxth	r1, r3
900168c2:	b225      	sxth	r5, r4
900168c4:	4348      	muls	r0, r1
900168c6:	436a      	muls	r2, r5
900168c8:	4282      	cmp	r2, r0
900168ca:	9a02      	ldr	r2, [sp, #8]
900168cc:	ea4f 02c2 	mov.w	r2, r2, lsl #3
900168d0:	445a      	add	r2, fp
900168d2:	dc06      	bgt.n	900168e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
900168d4:	9b07      	ldr	r3, [sp, #28]
900168d6:	44a4      	add	ip, r4
900168d8:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
900168dc:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
900168e0:	e75e      	b.n	900167a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
900168e2:	9904      	ldr	r1, [sp, #16]
900168e4:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
900168e8:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
900168ec:	4433      	add	r3, r6
900168ee:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
900168f2:	e5dd      	b.n	900164b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
900168f4:	9f06      	ldr	r7, [sp, #24]
900168f6:	9b04      	ldr	r3, [sp, #16]
900168f8:	1bc9      	subs	r1, r1, r7
900168fa:	fa0f f78a 	sxth.w	r7, sl
900168fe:	b289      	uxth	r1, r1
90016900:	429f      	cmp	r7, r3
90016902:	fa0f fe81 	sxth.w	lr, r1
90016906:	dd23      	ble.n	90016950 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d8>
90016908:	9a05      	ldr	r2, [sp, #20]
9001690a:	eba9 0000 	sub.w	r0, r9, r0
9001690e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
90016912:	ebaa 0202 	sub.w	r2, sl, r2
90016916:	9d07      	ldr	r5, [sp, #28]
90016918:	fb0e f000 	mul.w	r0, lr, r0
9001691c:	b292      	uxth	r2, r2
9001691e:	eba5 0a03 	sub.w	sl, r5, r3
90016922:	9b02      	ldr	r3, [sp, #8]
90016924:	b214      	sxth	r4, r2
90016926:	00db      	lsls	r3, r3, #3
90016928:	fb04 fa0a 	mul.w	sl, r4, sl
9001692c:	445b      	add	r3, fp
9001692e:	4550      	cmp	r0, sl
90016930:	db03      	blt.n	9001693a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c2>
90016932:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
90016936:	4494      	add	ip, r2
90016938:	e732      	b.n	900167a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x328>
9001693a:	9a04      	ldr	r2, [sp, #16]
9001693c:	4431      	add	r1, r6
9001693e:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
90016942:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
90016946:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
9001694a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001694e:	e75c      	b.n	9001680a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x392>
90016950:	9b08      	ldr	r3, [sp, #32]
90016952:	2d06      	cmp	r5, #6
90016954:	eba3 0308 	sub.w	r3, r3, r8
90016958:	b29b      	uxth	r3, r3
9001695a:	b218      	sxth	r0, r3
9001695c:	d813      	bhi.n	90016986 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50e>
9001695e:	9b07      	ldr	r3, [sp, #28]
90016960:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
90016964:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
90016968:	1c6b      	adds	r3, r5, #1
9001696a:	9901      	ldr	r1, [sp, #4]
9001696c:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
90016970:	9b01      	ldr	r3, [sp, #4]
90016972:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
90016976:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
9001697a:	805a      	strh	r2, [r3, #2]
9001697c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001697e:	f8a3 e006 	strh.w	lr, [r3, #6]
90016982:	809a      	strh	r2, [r3, #4]
90016984:	e75f      	b.n	90016846 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ce>
90016986:	9c02      	ldr	r4, [sp, #8]
90016988:	4570      	cmp	r0, lr
9001698a:	ea4f 04c4 	mov.w	r4, r4, lsl #3
9001698e:	db0d      	blt.n	900169ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x534>
90016990:	4431      	add	r1, r6
90016992:	9b06      	ldr	r3, [sp, #24]
90016994:	445c      	add	r4, fp
90016996:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
9001699a:	b289      	uxth	r1, r1
9001699c:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
900169a0:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
900169a4:	4419      	add	r1, r3
900169a6:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
900169aa:	e581      	b.n	900164b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
900169ac:	445c      	add	r4, fp
900169ae:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
900169b2:	e79b      	b.n	900168ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
900169b4:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
900169b8:	f64f 76ff 	movw	r6, #65535	@ 0xffff
900169bc:	1e65      	subs	r5, r4, #1
900169be:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
900169c2:	b2ad      	uxth	r5, r5
900169c4:	42b5      	cmp	r5, r6
900169c6:	d044      	beq.n	90016a52 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5da>
900169c8:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
900169cc:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
900169d0:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
900169d4:	4282      	cmp	r2, r0
900169d6:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
900169da:	d11f      	bne.n	90016a1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
900169dc:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
900169e0:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
900169e4:	459c      	cmp	ip, r3
900169e6:	d119      	bne.n	90016a1c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a4>
900169e8:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
900169ec:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
900169f0:	19d8      	adds	r0, r3, r7
900169f2:	b200      	sxth	r0, r0
900169f4:	4288      	cmp	r0, r1
900169f6:	d109      	bne.n	90016a0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
900169f8:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
900169fc:	4413      	add	r3, r2
900169fe:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
90016a02:	4629      	mov	r1, r5
90016a04:	9801      	ldr	r0, [sp, #4]
90016a06:	f7ff fd23 	bl	90016450 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90016a0a:	e003      	b.n	90016a14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
90016a0c:	4411      	add	r1, r2
90016a0e:	b209      	sxth	r1, r1
90016a10:	42b9      	cmp	r1, r7
90016a12:	d0f3      	beq.n	900169fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
90016a14:	3d01      	subs	r5, #1
90016a16:	3c08      	subs	r4, #8
90016a18:	b2ad      	uxth	r5, r5
90016a1a:	e7d3      	b.n	900169c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54c>
90016a1c:	42b9      	cmp	r1, r7
90016a1e:	d1f9      	bne.n	90016a14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
90016a20:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
90016a24:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90016a28:	4299      	cmp	r1, r3
90016a2a:	d1f3      	bne.n	90016a14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
90016a2c:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
90016a30:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
90016a34:	181f      	adds	r7, r3, r0
90016a36:	b23f      	sxth	r7, r7
90016a38:	42ba      	cmp	r2, r7
90016a3a:	d105      	bne.n	90016a48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5d0>
90016a3c:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
90016a40:	440b      	add	r3, r1
90016a42:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90016a46:	e7dc      	b.n	90016a02 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58a>
90016a48:	440a      	add	r2, r1
90016a4a:	b212      	sxth	r2, r2
90016a4c:	4290      	cmp	r0, r2
90016a4e:	d1e1      	bne.n	90016a14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x59c>
90016a50:	e7f6      	b.n	90016a40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c8>
90016a52:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
90016a56:	2e07      	cmp	r6, #7
90016a58:	ea4f 04c6 	mov.w	r4, r6, lsl #3
90016a5c:	d812      	bhi.n	90016a84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x60c>
90016a5e:	1c75      	adds	r5, r6, #1
90016a60:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
90016a64:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
90016a68:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
90016a6c:	9d01      	ldr	r5, [sp, #4]
90016a6e:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
90016a72:	442c      	add	r4, r5
90016a74:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
90016a78:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
90016a7c:	8061      	strh	r1, [r4, #2]
90016a7e:	80a2      	strh	r2, [r4, #4]
90016a80:	80e3      	strh	r3, [r4, #6]
90016a82:	e57f      	b.n	90016584 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x10c>
90016a84:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
90016a88:	3e01      	subs	r6, #1
90016a8a:	445c      	add	r4, fp
90016a8c:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
90016a90:	f04f 37ff 	mov.w	r7, #4294967295
90016a94:	2500      	movs	r5, #0
90016a96:	9305      	str	r3, [sp, #20]
90016a98:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
90016a9c:	1e72      	subs	r2, r6, #1
90016a9e:	9302      	str	r3, [sp, #8]
90016aa0:	4691      	mov	r9, r2
90016aa2:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
90016aa6:	9304      	str	r3, [sp, #16]
90016aa8:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
90016aac:	f1b9 3fff 	cmp.w	r9, #4294967295
90016ab0:	6818      	ldr	r0, [r3, #0]
90016ab2:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
90016ab6:	9207      	str	r2, [sp, #28]
90016ab8:	bf16      	itet	ne
90016aba:	9905      	ldrne	r1, [sp, #20]
90016abc:	f8dd e00c 	ldreq.w	lr, [sp, #12]
90016ac0:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
90016ac4:	9306      	str	r3, [sp, #24]
90016ac6:	f8be 1006 	ldrh.w	r1, [lr, #6]
90016aca:	f8be 8004 	ldrh.w	r8, [lr, #4]
90016ace:	fb18 f801 	smulbb	r8, r8, r1
90016ad2:	6859      	ldr	r1, [r3, #4]
90016ad4:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90016ad8:	4671      	mov	r1, lr
90016ada:	a80c      	add	r0, sp, #48	@ 0x30
90016adc:	f7ff fb18 	bl	90016110 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90016ae0:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
90016ae4:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
90016ae8:	f04f 0c08 	mov.w	ip, #8
90016aec:	9b04      	ldr	r3, [sp, #16]
90016aee:	9a02      	ldr	r2, [sp, #8]
90016af0:	fb10 f001 	smulbb	r0, r0, r1
90016af4:	fb02 8803 	mla	r8, r2, r3, r8
90016af8:	eba0 0108 	sub.w	r1, r0, r8
90016afc:	fb90 f0fc 	sdiv	r0, r0, ip
90016b00:	4288      	cmp	r0, r1
90016b02:	dc20      	bgt.n	90016b46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6ce>
90016b04:	4551      	cmp	r1, sl
90016b06:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
90016b0a:	da03      	bge.n	90016b14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x69c>
90016b0c:	b1d9      	cbz	r1, 90016b46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6ce>
90016b0e:	468a      	mov	sl, r1
90016b10:	464f      	mov	r7, r9
90016b12:	4635      	mov	r5, r6
90016b14:	f109 39ff 	add.w	r9, r9, #4294967295
90016b18:	f119 0f02 	cmn.w	r9, #2
90016b1c:	d1c6      	bne.n	90016aac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x634>
90016b1e:	4616      	mov	r6, r2
90016b20:	3201      	adds	r2, #1
90016b22:	f1a4 0408 	sub.w	r4, r4, #8
90016b26:	d1b7      	bne.n	90016a98 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x620>
90016b28:	9b01      	ldr	r3, [sp, #4]
90016b2a:	b2ac      	uxth	r4, r5
90016b2c:	00ed      	lsls	r5, r5, #3
90016b2e:	1958      	adds	r0, r3, r5
90016b30:	1c7b      	adds	r3, r7, #1
90016b32:	d10b      	bne.n	90016b4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6d4>
90016b34:	4601      	mov	r1, r0
90016b36:	9803      	ldr	r0, [sp, #12]
90016b38:	f7ff faea 	bl	90016110 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90016b3c:	4621      	mov	r1, r4
90016b3e:	9801      	ldr	r0, [sp, #4]
90016b40:	f7ff fc86 	bl	90016450 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
90016b44:	e4b4      	b.n	900164b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38>
90016b46:	464f      	mov	r7, r9
90016b48:	4635      	mov	r5, r6
90016b4a:	e7ed      	b.n	90016b28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b0>
90016b4c:	9b01      	ldr	r3, [sp, #4]
90016b4e:	00ff      	lsls	r7, r7, #3
90016b50:	445d      	add	r5, fp
90016b52:	19d9      	adds	r1, r3, r7
90016b54:	445f      	add	r7, fp
90016b56:	f7ff fadb 	bl	90016110 <_ZN8touchgfx4Rect11expandToFitERKS0_>
90016b5a:	9b03      	ldr	r3, [sp, #12]
90016b5c:	cb03      	ldmia	r3!, {r0, r1}
90016b5e:	9b03      	ldr	r3, [sp, #12]
90016b60:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
90016b64:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
90016b68:	f855 0fac 	ldr.w	r0, [r5, #172]!
90016b6c:	6869      	ldr	r1, [r5, #4]
90016b6e:	c303      	stmia	r3!, {r0, r1}
90016b70:	e7e4      	b.n	90016b3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
90016b72:	bf00      	nop

90016b74 <_ZN8touchgfx11Application15drawCachedAreasEv>:
90016b74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90016b78:	f500 7698 	add.w	r6, r0, #304	@ 0x130
90016b7c:	b0a1      	sub	sp, #132	@ 0x84
90016b7e:	4604      	mov	r4, r0
90016b80:	4630      	mov	r0, r6
90016b82:	f7f9 fb4c 	bl	9001021e <_ZNK8touchgfx4Rect7isEmptyEv>
90016b86:	4605      	mov	r5, r0
90016b88:	b948      	cbnz	r0, 90016b9e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
90016b8a:	6823      	ldr	r3, [r4, #0]
90016b8c:	4620      	mov	r0, r4
90016b8e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90016b90:	e896 0006 	ldmia.w	r6, {r1, r2}
90016b94:	4798      	blx	r3
90016b96:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
90016b9a:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
90016b9e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90016ba2:	2b00      	cmp	r3, #0
90016ba4:	d149      	bne.n	90016c3a <_ZN8touchgfx11Application15drawCachedAreasEv+0xc6>
90016ba6:	4bb2      	ldr	r3, [pc, #712]	@ (90016e70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
90016ba8:	681b      	ldr	r3, [r3, #0]
90016baa:	f893 7048 	ldrb.w	r7, [r3, #72]	@ 0x48
90016bae:	1ebb      	subs	r3, r7, #2
90016bb0:	425f      	negs	r7, r3
90016bb2:	415f      	adcs	r7, r3
90016bb4:	4baf      	ldr	r3, [pc, #700]	@ (90016e74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x300>)
90016bb6:	681b      	ldr	r3, [r3, #0]
90016bb8:	2b00      	cmp	r3, #0
90016bba:	d040      	beq.n	90016c3e <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
90016bbc:	4dae      	ldr	r5, [pc, #696]	@ (90016e78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x304>)
90016bbe:	4628      	mov	r0, r5
90016bc0:	f7f9 fb2d 	bl	9001021e <_ZNK8touchgfx4Rect7isEmptyEv>
90016bc4:	4606      	mov	r6, r0
90016bc6:	2800      	cmp	r0, #0
90016bc8:	d139      	bne.n	90016c3e <_ZN8touchgfx11Application15drawCachedAreasEv+0xca>
90016bca:	4628      	mov	r0, r5
90016bcc:	f7ff f932 	bl	90015e34 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
90016bd0:	6823      	ldr	r3, [r4, #0]
90016bd2:	6829      	ldr	r1, [r5, #0]
90016bd4:	4620      	mov	r0, r4
90016bd6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90016bd8:	686a      	ldr	r2, [r5, #4]
90016bda:	4798      	blx	r3
90016bdc:	802e      	strh	r6, [r5, #0]
90016bde:	806e      	strh	r6, [r5, #2]
90016be0:	80ae      	strh	r6, [r5, #4]
90016be2:	80ee      	strh	r6, [r5, #6]
90016be4:	af0f      	add	r7, sp, #60	@ 0x3c
90016be6:	4ea5      	ldr	r6, [pc, #660]	@ (90016e7c <_ZN8touchgfx11Application15drawCachedAreasEv+0x308>)
90016be8:	4638      	mov	r0, r7
90016bea:	f7ff fbd6 	bl	9001639a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
90016bee:	8835      	ldrh	r5, [r6, #0]
90016bf0:	f8b4 c0ec 	ldrh.w	ip, [r4, #236]	@ 0xec
90016bf4:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
90016bf8:	462b      	mov	r3, r5
90016bfa:	4563      	cmp	r3, ip
90016bfc:	d224      	bcs.n	90016c48 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
90016bfe:	f8bd 107c 	ldrh.w	r1, [sp, #124]	@ 0x7c
90016c02:	2907      	cmp	r1, #7
90016c04:	d816      	bhi.n	90016c34 <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
90016c06:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
90016c0a:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
90016c0e:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
90016c12:	f9b2 8004 	ldrsh.w	r8, [r2, #4]
90016c16:	f9b2 e006 	ldrsh.w	lr, [r2, #6]
90016c1a:	1c4a      	adds	r2, r1, #1
90016c1c:	f8ad 207c 	strh.w	r2, [sp, #124]	@ 0x7c
90016c20:	eb07 02c1 	add.w	r2, r7, r1, lsl #3
90016c24:	f827 9031 	strh.w	r9, [r7, r1, lsl #3]
90016c28:	f8a2 a002 	strh.w	sl, [r2, #2]
90016c2c:	f8a2 8004 	strh.w	r8, [r2, #4]
90016c30:	f8a2 e006 	strh.w	lr, [r2, #6]
90016c34:	3301      	adds	r3, #1
90016c36:	b29b      	uxth	r3, r3
90016c38:	e7df      	b.n	90016bfa <_ZN8touchgfx11Application15drawCachedAreasEv+0x86>
90016c3a:	2701      	movs	r7, #1
90016c3c:	e7ba      	b.n	90016bb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40>
90016c3e:	2f00      	cmp	r7, #0
90016c40:	d1d0      	bne.n	90016be4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x70>
90016c42:	b021      	add	sp, #132	@ 0x84
90016c44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90016c48:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
90016c4c:	42ab      	cmp	r3, r5
90016c4e:	d90c      	bls.n	90016c6a <_ZN8touchgfx11Application15drawCachedAreasEv+0xf6>
90016c50:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
90016c54:	6822      	ldr	r2, [r4, #0]
90016c56:	3501      	adds	r5, #1
90016c58:	4620      	mov	r0, r4
90016c5a:	6c17      	ldr	r7, [r2, #64]	@ 0x40
90016c5c:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
90016c60:	b2ad      	uxth	r5, r5
90016c62:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
90016c66:	47b8      	blx	r7
90016c68:	e7ee      	b.n	90016c48 <_ZN8touchgfx11Application15drawCachedAreasEv+0xd4>
90016c6a:	4d81      	ldr	r5, [pc, #516]	@ (90016e70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2fc>)
90016c6c:	6828      	ldr	r0, [r5, #0]
90016c6e:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
90016c72:	2b01      	cmp	r3, #1
90016c74:	f040 813d 	bne.w	90016ef2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x37e>
90016c78:	4a81      	ldr	r2, [pc, #516]	@ (90016e80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x30c>)
90016c7a:	8833      	ldrh	r3, [r6, #0]
90016c7c:	7812      	ldrb	r2, [r2, #0]
90016c7e:	f8b4 00ec 	ldrh.w	r0, [r4, #236]	@ 0xec
90016c82:	2a01      	cmp	r2, #1
90016c84:	d014      	beq.n	90016cb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
90016c86:	eb04 02c3 	add.w	r2, r4, r3, lsl #3
90016c8a:	f04f 0900 	mov.w	r9, #0
90016c8e:	32ae      	adds	r2, #174	@ 0xae
90016c90:	4283      	cmp	r3, r0
90016c92:	f102 0208 	add.w	r2, r2, #8
90016c96:	f280 8083 	bge.w	90016da0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
90016c9a:	f832 1c04 	ldrh.w	r1, [r2, #-4]
90016c9e:	3301      	adds	r3, #1
90016ca0:	f832 7c08 	ldrh.w	r7, [r2, #-8]
90016ca4:	4439      	add	r1, r7
90016ca6:	b209      	sxth	r1, r1
90016ca8:	4589      	cmp	r9, r1
90016caa:	bfb8      	it	lt
90016cac:	4689      	movlt	r9, r1
90016cae:	e7ef      	b.n	90016c90 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11c>
90016cb0:	4f74      	ldr	r7, [pc, #464]	@ (90016e84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>)
90016cb2:	883a      	ldrh	r2, [r7, #0]
90016cb4:	4693      	mov	fp, r2
90016cb6:	4283      	cmp	r3, r0
90016cb8:	da08      	bge.n	90016ccc <_ZN8touchgfx11Application15drawCachedAreasEv+0x158>
90016cba:	eb04 01c3 	add.w	r1, r4, r3, lsl #3
90016cbe:	3301      	adds	r3, #1
90016cc0:	f9b1 10ac 	ldrsh.w	r1, [r1, #172]	@ 0xac
90016cc4:	458b      	cmp	fp, r1
90016cc6:	bfa8      	it	ge
90016cc8:	468b      	movge	fp, r1
90016cca:	e7f4      	b.n	90016cb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x142>
90016ccc:	2a0f      	cmp	r2, #15
90016cce:	f04f 0300 	mov.w	r3, #0
90016cd2:	f8df 91b4 	ldr.w	r9, [pc, #436]	@ 90016e88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>
90016cd6:	bf8c      	ite	hi
90016cd8:	ea4f 08d2 	movhi.w	r8, r2, lsr #3
90016cdc:	f04f 0801 	movls.w	r8, #1
90016ce0:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
90016ce4:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90016ce8:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
90016cec:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90016cf0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90016cf4:	6828      	ldr	r0, [r5, #0]
90016cf6:	455b      	cmp	r3, fp
90016cf8:	f340 80c8 	ble.w	90016e8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90016cfc:	6803      	ldr	r3, [r0, #0]
90016cfe:	f8b7 a000 	ldrh.w	sl, [r7]
90016d02:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90016d06:	4798      	blx	r3
90016d08:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
90016d0c:	ebaa 0000 	sub.w	r0, sl, r0
90016d10:	682b      	ldr	r3, [r5, #0]
90016d12:	ebac 0e08 	sub.w	lr, ip, r8
90016d16:	b280      	uxth	r0, r0
90016d18:	f893 107c 	ldrb.w	r1, [r3, #124]	@ 0x7c
90016d1c:	f893 206a 	ldrb.w	r2, [r3, #106]	@ 0x6a
90016d20:	4570      	cmp	r0, lr
90016d22:	dd05      	ble.n	90016d30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1bc>
90016d24:	4558      	cmp	r0, fp
90016d26:	dd03      	ble.n	90016d30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x1bc>
90016d28:	b901      	cbnz	r1, 90016d2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
90016d2a:	b392      	cbz	r2, 90016d92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x21e>
90016d2c:	4658      	mov	r0, fp
90016d2e:	e006      	b.n	90016d3e <_ZN8touchgfx11Application15drawCachedAreasEv+0x1ca>
90016d30:	2900      	cmp	r1, #0
90016d32:	d1fb      	bne.n	90016d2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
90016d34:	2a00      	cmp	r2, #0
90016d36:	d1f9      	bne.n	90016d2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x1b8>
90016d38:	4558      	cmp	r0, fp
90016d3a:	bfb8      	it	lt
90016d3c:	4658      	movlt	r0, fp
90016d3e:	f9b9 3000 	ldrsh.w	r3, [r9]
90016d42:	2200      	movs	r2, #0
90016d44:	f8ad 002c 	strh.w	r0, [sp, #44]	@ 0x2c
90016d48:	ebac 0000 	sub.w	r0, ip, r0
90016d4c:	f8b6 a000 	ldrh.w	sl, [r6]
90016d50:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
90016d54:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
90016d58:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90016d5c:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90016d60:	4553      	cmp	r3, sl
90016d62:	ddc5      	ble.n	90016cf0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
90016d64:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
90016d68:	ab0d      	add	r3, sp, #52	@ 0x34
90016d6a:	f852 0fac 	ldr.w	r0, [r2, #172]!
90016d6e:	6851      	ldr	r1, [r2, #4]
90016d70:	c303      	stmia	r3!, {r0, r1}
90016d72:	a80d      	add	r0, sp, #52	@ 0x34
90016d74:	a90b      	add	r1, sp, #44	@ 0x2c
90016d76:	f7f9 fa0f 	bl	90010198 <_ZN8touchgfx4RectaNERKS0_>
90016d7a:	a80d      	add	r0, sp, #52	@ 0x34
90016d7c:	f7f9 fa4f 	bl	9001021e <_ZNK8touchgfx4Rect7isEmptyEv>
90016d80:	b920      	cbnz	r0, 90016d8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x218>
90016d82:	6823      	ldr	r3, [r4, #0]
90016d84:	a90d      	add	r1, sp, #52	@ 0x34
90016d86:	4620      	mov	r0, r4
90016d88:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90016d8a:	4798      	blx	r3
90016d8c:	f10a 0a01 	add.w	sl, sl, #1
90016d90:	e7e4      	b.n	90016d5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x1e8>
90016d92:	681a      	ldr	r2, [r3, #0]
90016d94:	2101      	movs	r1, #1
90016d96:	4618      	mov	r0, r3
90016d98:	f8d2 20a4 	ldr.w	r2, [r2, #164]	@ 0xa4
90016d9c:	4790      	blx	r2
90016d9e:	e7a7      	b.n	90016cf0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
90016da0:	4b39      	ldr	r3, [pc, #228]	@ (90016e88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x314>)
90016da2:	f8df 80e0 	ldr.w	r8, [pc, #224]	@ 90016e84 <_ZN8touchgfx11Application15drawCachedAreasEv+0x310>
90016da6:	881f      	ldrh	r7, [r3, #0]
90016da8:	2300      	movs	r3, #0
90016daa:	2f0f      	cmp	r7, #15
90016dac:	bf8c      	ite	hi
90016dae:	08ff      	lsrhi	r7, r7, #3
90016db0:	2701      	movls	r7, #1
90016db2:	e9cd 330b 	strd	r3, r3, [sp, #44]	@ 0x2c
90016db6:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90016dba:	f8bd 202e 	ldrh.w	r2, [sp, #46]	@ 0x2e
90016dbe:	6828      	ldr	r0, [r5, #0]
90016dc0:	4413      	add	r3, r2
90016dc2:	b21b      	sxth	r3, r3
90016dc4:	454b      	cmp	r3, r9
90016dc6:	da61      	bge.n	90016e8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
90016dc8:	6803      	ldr	r3, [r0, #0]
90016dca:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90016dce:	4798      	blx	r3
90016dd0:	f8bd e02e 	ldrh.w	lr, [sp, #46]	@ 0x2e
90016dd4:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
90016dd8:	682a      	ldr	r2, [r5, #0]
90016dda:	4473      	add	r3, lr
90016ddc:	f892 c07c 	ldrb.w	ip, [r2, #124]	@ 0x7c
90016de0:	b21b      	sxth	r3, r3
90016de2:	f892 106a 	ldrb.w	r1, [r2, #106]	@ 0x6a
90016de6:	eb03 0e07 	add.w	lr, r3, r7
90016dea:	4570      	cmp	r0, lr
90016dec:	da0d      	bge.n	90016e0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x296>
90016dee:	4548      	cmp	r0, r9
90016df0:	da0b      	bge.n	90016e0a <_ZN8touchgfx11Application15drawCachedAreasEv+0x296>
90016df2:	f1bc 0f00 	cmp.w	ip, #0
90016df6:	d138      	bne.n	90016e6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90016df8:	2900      	cmp	r1, #0
90016dfa:	d136      	bne.n	90016e6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90016dfc:	6813      	ldr	r3, [r2, #0]
90016dfe:	2101      	movs	r1, #1
90016e00:	4610      	mov	r0, r2
90016e02:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
90016e06:	4798      	blx	r3
90016e08:	e7d5      	b.n	90016db6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x242>
90016e0a:	f1bc 0f00 	cmp.w	ip, #0
90016e0e:	d12c      	bne.n	90016e6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90016e10:	bb59      	cbnz	r1, 90016e6a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
90016e12:	4548      	cmp	r0, r9
90016e14:	bfa8      	it	ge
90016e16:	4648      	movge	r0, r9
90016e18:	f9b8 2000 	ldrsh.w	r2, [r8]
90016e1c:	2100      	movs	r1, #0
90016e1e:	1ac0      	subs	r0, r0, r3
90016e20:	f8b6 a000 	ldrh.w	sl, [r6]
90016e24:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
90016e28:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
90016e2c:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90016e30:	f8ad 0032 	strh.w	r0, [sp, #50]	@ 0x32
90016e34:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90016e38:	4553      	cmp	r3, sl
90016e3a:	ddbc      	ble.n	90016db6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x242>
90016e3c:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
90016e40:	ab0d      	add	r3, sp, #52	@ 0x34
90016e42:	f852 0fac 	ldr.w	r0, [r2, #172]!
90016e46:	6851      	ldr	r1, [r2, #4]
90016e48:	c303      	stmia	r3!, {r0, r1}
90016e4a:	a80d      	add	r0, sp, #52	@ 0x34
90016e4c:	a90b      	add	r1, sp, #44	@ 0x2c
90016e4e:	f7f9 f9a3 	bl	90010198 <_ZN8touchgfx4RectaNERKS0_>
90016e52:	a80d      	add	r0, sp, #52	@ 0x34
90016e54:	f7f9 f9e3 	bl	9001021e <_ZNK8touchgfx4Rect7isEmptyEv>
90016e58:	b920      	cbnz	r0, 90016e64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f0>
90016e5a:	6823      	ldr	r3, [r4, #0]
90016e5c:	a90d      	add	r1, sp, #52	@ 0x34
90016e5e:	4620      	mov	r0, r4
90016e60:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90016e62:	4798      	blx	r3
90016e64:	f10a 0a01 	add.w	sl, sl, #1
90016e68:	e7e4      	b.n	90016e34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c0>
90016e6a:	4648      	mov	r0, r9
90016e6c:	e7d4      	b.n	90016e18 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a4>
90016e6e:	bf00      	nop
90016e70:	2402198c 	.word	0x2402198c
90016e74:	240219cc 	.word	0x240219cc
90016e78:	240219d8 	.word	0x240219d8
90016e7c:	24000088 	.word	0x24000088
90016e80:	24021984 	.word	0x24021984
90016e84:	24021980 	.word	0x24021980
90016e88:	24021982 	.word	0x24021982
90016e8c:	6828      	ldr	r0, [r5, #0]
90016e8e:	6803      	ldr	r3, [r0, #0]
90016e90:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
90016e92:	4798      	blx	r3
90016e94:	4ba4      	ldr	r3, [pc, #656]	@ (90017128 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b4>)
90016e96:	781b      	ldrb	r3, [r3, #0]
90016e98:	2b00      	cmp	r3, #0
90016e9a:	f43f aed2 	beq.w	90016c42 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
90016e9e:	2300      	movs	r3, #0
90016ea0:	f8bd 607c 	ldrh.w	r6, [sp, #124]	@ 0x7c
90016ea4:	a80f      	add	r0, sp, #60	@ 0x3c
90016ea6:	f104 05ee 	add.w	r5, r4, #238	@ 0xee
90016eaa:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
90016eae:	4b9f      	ldr	r3, [pc, #636]	@ (9001712c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5b8>)
90016eb0:	881b      	ldrh	r3, [r3, #0]
90016eb2:	42b3      	cmp	r3, r6
90016eb4:	f4bf aec5 	bcs.w	90016c42 <_ZN8touchgfx11Application15drawCachedAreasEv+0xce>
90016eb8:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
90016ebc:	2907      	cmp	r1, #7
90016ebe:	d815      	bhi.n	90016eec <_ZN8touchgfx11Application15drawCachedAreasEv+0x378>
90016ec0:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
90016ec4:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
90016ec8:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
90016ecc:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
90016ed0:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
90016ed4:	1c4a      	adds	r2, r1, #1
90016ed6:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
90016eda:	eb05 02c1 	add.w	r2, r5, r1, lsl #3
90016ede:	f825 8031 	strh.w	r8, [r5, r1, lsl #3]
90016ee2:	f8a2 e002 	strh.w	lr, [r2, #2]
90016ee6:	f8a2 c004 	strh.w	ip, [r2, #4]
90016eea:	80d7      	strh	r7, [r2, #6]
90016eec:	3301      	adds	r3, #1
90016eee:	b29b      	uxth	r3, r3
90016ef0:	e7df      	b.n	90016eb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33e>
90016ef2:	2b02      	cmp	r3, #2
90016ef4:	f040 80ce 	bne.w	90017094 <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
90016ef8:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
90016efc:	f890 b07d 	ldrb.w	fp, [r0, #125]	@ 0x7d
90016f00:	9308      	str	r3, [sp, #32]
90016f02:	f8b0 307e 	ldrh.w	r3, [r0, #126]	@ 0x7e
90016f06:	f10b 37ff 	add.w	r7, fp, #4294967295
90016f0a:	9307      	str	r3, [sp, #28]
90016f0c:	b2bf      	uxth	r7, r7
90016f0e:	6803      	ldr	r3, [r0, #0]
90016f10:	fa0f f887 	sxth.w	r8, r7
90016f14:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90016f18:	4798      	blx	r3
90016f1a:	4b85      	ldr	r3, [pc, #532]	@ (90017130 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5bc>)
90016f1c:	4682      	mov	sl, r0
90016f1e:	2000      	movs	r0, #0
90016f20:	881b      	ldrh	r3, [r3, #0]
90016f22:	9302      	str	r3, [sp, #8]
90016f24:	4b83      	ldr	r3, [pc, #524]	@ (90017134 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c0>)
90016f26:	881e      	ldrh	r6, [r3, #0]
90016f28:	4b83      	ldr	r3, [pc, #524]	@ (90017138 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
90016f2a:	781b      	ldrb	r3, [r3, #0]
90016f2c:	2b01      	cmp	r3, #1
90016f2e:	bf1e      	ittt	ne
90016f30:	9b02      	ldrne	r3, [sp, #8]
90016f32:	9602      	strne	r6, [sp, #8]
90016f34:	461e      	movne	r6, r3
90016f36:	f7e9 fead 	bl	90000c94 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90016f3a:	fb96 fbfb 	sdiv	fp, r6, fp
90016f3e:	fb0b f808 	mul.w	r8, fp, r8
90016f42:	45c2      	cmp	sl, r8
90016f44:	da0c      	bge.n	90016f60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ec>
90016f46:	6828      	ldr	r0, [r5, #0]
90016f48:	210a      	movs	r1, #10
90016f4a:	6803      	ldr	r3, [r0, #0]
90016f4c:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
90016f50:	4798      	blx	r3
90016f52:	6828      	ldr	r0, [r5, #0]
90016f54:	6803      	ldr	r3, [r0, #0]
90016f56:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90016f5a:	4798      	blx	r3
90016f5c:	4682      	mov	sl, r0
90016f5e:	e7f0      	b.n	90016f42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3ce>
90016f60:	2000      	movs	r0, #0
90016f62:	f04f 0800 	mov.w	r8, #0
90016f66:	f7e9 fec9 	bl	90000cfc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90016f6a:	fa1f f38b 	uxth.w	r3, fp
90016f6e:	4645      	mov	r5, r8
90016f70:	fb17 f703 	smulbb	r7, r7, r3
90016f74:	9304      	str	r3, [sp, #16]
90016f76:	b2bb      	uxth	r3, r7
90016f78:	4f70      	ldr	r7, [pc, #448]	@ (9001713c <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c8>)
90016f7a:	9305      	str	r3, [sp, #20]
90016f7c:	0973      	lsrs	r3, r6, #5
90016f7e:	9306      	str	r3, [sp, #24]
90016f80:	42b5      	cmp	r5, r6
90016f82:	d087      	beq.n	90016e94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
90016f84:	6838      	ldr	r0, [r7, #0]
90016f86:	6803      	ldr	r3, [r0, #0]
90016f88:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
90016f8c:	4798      	blx	r3
90016f8e:	4582      	cmp	sl, r0
90016f90:	4681      	mov	r9, r0
90016f92:	d907      	bls.n	90016fa4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x430>
90016f94:	f1b8 0f00 	cmp.w	r8, #0
90016f98:	d007      	beq.n	90016faa <_ZN8touchgfx11Application15drawCachedAreasEv+0x436>
90016f9a:	6838      	ldr	r0, [r7, #0]
90016f9c:	6803      	ldr	r3, [r0, #0]
90016f9e:	f8d3 30b8 	ldr.w	r3, [r3, #184]	@ 0xb8
90016fa2:	e776      	b.n	90016e92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
90016fa4:	f1b8 0f00 	cmp.w	r8, #0
90016fa8:	d003      	beq.n	90016fb2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x43e>
90016faa:	454d      	cmp	r5, r9
90016fac:	d3f5      	bcc.n	90016f9a <_ZN8touchgfx11Application15drawCachedAreasEv+0x426>
90016fae:	f04f 0801 	mov.w	r8, #1
90016fb2:	9a04      	ldr	r2, [sp, #16]
90016fb4:	fb95 f3fb 	sdiv	r3, r5, fp
90016fb8:	9303      	str	r3, [sp, #12]
90016fba:	3301      	adds	r3, #1
90016fbc:	fb13 f302 	smulbb	r3, r3, r2
90016fc0:	b299      	uxth	r1, r3
90016fc2:	f1b8 0f00 	cmp.w	r8, #0
90016fc6:	d04d      	beq.n	90017064 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f0>
90016fc8:	eb09 030b 	add.w	r3, r9, fp
90016fcc:	42b3      	cmp	r3, r6
90016fce:	bfa8      	it	ge
90016fd0:	4633      	movge	r3, r6
90016fd2:	b29b      	uxth	r3, r3
90016fd4:	9807      	ldr	r0, [sp, #28]
90016fd6:	428b      	cmp	r3, r1
90016fd8:	bf94      	ite	ls
90016fda:	ebc5 0203 	rsbls	r2, r5, r3
90016fde:	ebc5 0201 	rsbhi	r2, r5, r1
90016fe2:	4282      	cmp	r2, r0
90016fe4:	bfa8      	it	ge
90016fe6:	4602      	movge	r2, r0
90016fe8:	9808      	ldr	r0, [sp, #32]
90016fea:	fa1f fa82 	uxth.w	sl, r2
90016fee:	4582      	cmp	sl, r0
90016ff0:	d205      	bcs.n	90016ffe <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
90016ff2:	fa15 f082 	uxtah	r0, r5, r2
90016ff6:	4286      	cmp	r6, r0
90016ff8:	d001      	beq.n	90016ffe <_ZN8touchgfx11Application15drawCachedAreasEv+0x48a>
90016ffa:	4299      	cmp	r1, r3
90016ffc:	d23f      	bcs.n	9001707e <_ZN8touchgfx11Application15drawCachedAreasEv+0x50a>
90016ffe:	2001      	movs	r0, #1
90017000:	9209      	str	r2, [sp, #36]	@ 0x24
90017002:	f7e9 fe47 	bl	90000c94 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
90017006:	6838      	ldr	r0, [r7, #0]
90017008:	f9bd 100c 	ldrsh.w	r1, [sp, #12]
9001700c:	6803      	ldr	r3, [r0, #0]
9001700e:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
90017012:	4798      	blx	r3
90017014:	4b48      	ldr	r3, [pc, #288]	@ (90017138 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
90017016:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90017018:	2000      	movs	r0, #0
9001701a:	781b      	ldrb	r3, [r3, #0]
9001701c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
90017020:	b212      	sxth	r2, r2
90017022:	2b01      	cmp	r3, #1
90017024:	d122      	bne.n	9001706c <_ZN8touchgfx11Application15drawCachedAreasEv+0x4f8>
90017026:	1b73      	subs	r3, r6, r5
90017028:	f8ad 0036 	strh.w	r0, [sp, #54]	@ 0x36
9001702c:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
90017030:	eba3 030a 	sub.w	r3, r3, sl
90017034:	f8ad 103a 	strh.w	r1, [sp, #58]	@ 0x3a
90017038:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
9001703c:	6823      	ldr	r3, [r4, #0]
9001703e:	a90d      	add	r1, sp, #52	@ 0x34
90017040:	4620      	mov	r0, r4
90017042:	4455      	add	r5, sl
90017044:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90017046:	4798      	blx	r3
90017048:	6838      	ldr	r0, [r7, #0]
9001704a:	9b03      	ldr	r3, [sp, #12]
9001704c:	b2ad      	uxth	r5, r5
9001704e:	4259      	negs	r1, r3
90017050:	6803      	ldr	r3, [r0, #0]
90017052:	b209      	sxth	r1, r1
90017054:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
90017058:	4798      	blx	r3
9001705a:	2001      	movs	r0, #1
9001705c:	f7e9 fe4e 	bl	90000cfc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
90017060:	46ca      	mov	sl, r9
90017062:	e78d      	b.n	90016f80 <_ZN8touchgfx11Application15drawCachedAreasEv+0x40c>
90017064:	9b05      	ldr	r3, [sp, #20]
90017066:	eba9 0303 	sub.w	r3, r9, r3
9001706a:	e7b2      	b.n	90016fd2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
9001706c:	f8ad 0034 	strh.w	r0, [sp, #52]	@ 0x34
90017070:	f8ad 5036 	strh.w	r5, [sp, #54]	@ 0x36
90017074:	f8ad 1038 	strh.w	r1, [sp, #56]	@ 0x38
90017078:	f8ad 203a 	strh.w	r2, [sp, #58]	@ 0x3a
9001707c:	e7de      	b.n	9001703c <_ZN8touchgfx11Application15drawCachedAreasEv+0x4c8>
9001707e:	6838      	ldr	r0, [r7, #0]
90017080:	6803      	ldr	r3, [r0, #0]
90017082:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90017084:	4798      	blx	r3
90017086:	6838      	ldr	r0, [r7, #0]
90017088:	9906      	ldr	r1, [sp, #24]
9001708a:	6803      	ldr	r3, [r0, #0]
9001708c:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
90017090:	4798      	blx	r3
90017092:	e7e5      	b.n	90017060 <_ZN8touchgfx11Application15drawCachedAreasEv+0x4ec>
90017094:	2b03      	cmp	r3, #3
90017096:	f040 8133 	bne.w	90017300 <_ZN8touchgfx11Application15drawCachedAreasEv+0x78c>
9001709a:	4b27      	ldr	r3, [pc, #156]	@ (90017138 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5c4>)
9001709c:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
900170a0:	f9b0 9082 	ldrsh.w	r9, [r0, #130]	@ 0x82
900170a4:	781b      	ldrb	r3, [r3, #0]
900170a6:	2b01      	cmp	r3, #1
900170a8:	f000 8095 	beq.w	900171d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x662>
900170ac:	8832      	ldrh	r2, [r6, #0]
900170ae:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
900170b2:	3201      	adds	r2, #1
900170b4:	b292      	uxth	r2, r2
900170b6:	2900      	cmp	r1, #0
900170b8:	f43f aeec 	beq.w	90016e94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
900170bc:	f8b4 50b2 	ldrh.w	r5, [r4, #178]	@ 0xb2
900170c0:	4694      	mov	ip, r2
900170c2:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	@ 0xae
900170c6:	f04f 0800 	mov.w	r8, #0
900170ca:	441d      	add	r5, r3
900170cc:	b22d      	sxth	r5, r5
900170ce:	fa1f f38c 	uxth.w	r3, ip
900170d2:	ea4f 07c8 	mov.w	r7, r8, lsl #3
900170d6:	4299      	cmp	r1, r3
900170d8:	f240 80bc 	bls.w	90017254 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e0>
900170dc:	4427      	add	r7, r4
900170de:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
900170e2:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
900170e6:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
900170ea:	4283      	cmp	r3, r0
900170ec:	f340 809e 	ble.w	9001722c <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b8>
900170f0:	f8be 50b2 	ldrh.w	r5, [lr, #178]	@ 0xb2
900170f4:	46e0      	mov	r8, ip
900170f6:	4405      	add	r5, r0
900170f8:	b22d      	sxth	r5, r5
900170fa:	429d      	cmp	r5, r3
900170fc:	bfa8      	it	ge
900170fe:	461d      	movge	r5, r3
90017100:	f10c 0c01 	add.w	ip, ip, #1
90017104:	e7e3      	b.n	900170ce <_ZN8touchgfx11Application15drawCachedAreasEv+0x55a>
90017106:	d10a      	bne.n	9001711e <_ZN8touchgfx11Application15drawCachedAreasEv+0x5aa>
90017108:	4562      	cmp	r2, ip
9001710a:	f9b7 00b2 	ldrsh.w	r0, [r7, #178]	@ 0xb2
9001710e:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
90017112:	bfb8      	it	lt
90017114:	4662      	movlt	r2, ip
90017116:	4288      	cmp	r0, r1
90017118:	bfb8      	it	lt
9001711a:	4698      	movlt	r8, r3
9001711c:	e084      	b.n	90017228 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b4>
9001711e:	428a      	cmp	r2, r1
90017120:	bfb8      	it	lt
90017122:	460a      	movlt	r2, r1
90017124:	e080      	b.n	90017228 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6b4>
90017126:	bf00      	nop
90017128:	2402198a 	.word	0x2402198a
9001712c:	24000088 	.word	0x24000088
90017130:	24021982 	.word	0x24021982
90017134:	24021980 	.word	0x24021980
90017138:	24021984 	.word	0x24021984
9001713c:	2402198c 	.word	0x2402198c
90017140:	19e1      	adds	r1, r4, r7
90017142:	ab0d      	add	r3, sp, #52	@ 0x34
90017144:	f851 0fac 	ldr.w	r0, [r1, #172]!
90017148:	6849      	ldr	r1, [r1, #4]
9001714a:	c303      	stmia	r3!, {r0, r1}
9001714c:	f9bd 3038 	ldrsh.w	r3, [sp, #56]	@ 0x38
90017150:	a80d      	add	r0, sp, #52	@ 0x34
90017152:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
90017156:	454b      	cmp	r3, r9
90017158:	440b      	add	r3, r1
9001715a:	bfb8      	it	lt
9001715c:	f9bd 2034 	ldrshlt.w	r2, [sp, #52]	@ 0x34
90017160:	1a9b      	subs	r3, r3, r2
90017162:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
90017166:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
9001716a:	f7fe fe7d 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001716e:	a80d      	add	r0, sp, #52	@ 0x34
90017170:	f7f9 f855 	bl	9001021e <_ZNK8touchgfx4Rect7isEmptyEv>
90017174:	bb78      	cbnz	r0, 900171d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x662>
90017176:	f9bd c03a 	ldrsh.w	ip, [sp, #58]	@ 0x3a
9001717a:	4427      	add	r7, r4
9001717c:	6828      	ldr	r0, [r5, #0]
9001717e:	45cc      	cmp	ip, r9
90017180:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
90017184:	f8d0 e000 	ldr.w	lr, [r0]
90017188:	bfd8      	it	le
9001718a:	fa1f fc8c 	uxthle.w	ip, ip
9001718e:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
90017192:	bfc8      	it	gt
90017194:	fa1f fc89 	uxthgt.w	ip, r9
90017198:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
9001719c:	f8cd c000 	str.w	ip, [sp]
900171a0:	f8de b094 	ldr.w	fp, [lr, #148]	@ 0x94
900171a4:	47d8      	blx	fp
900171a6:	4683      	mov	fp, r0
900171a8:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
900171ac:	a80d      	add	r0, sp, #52	@ 0x34
900171ae:	f7fe fe41 	bl	90015e34 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
900171b2:	6823      	ldr	r3, [r4, #0]
900171b4:	4620      	mov	r0, r4
900171b6:	a90d      	add	r1, sp, #52	@ 0x34
900171b8:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900171ba:	4798      	blx	r3
900171bc:	f8b7 00b0 	ldrh.w	r0, [r7, #176]	@ 0xb0
900171c0:	eba0 000b 	sub.w	r0, r0, fp
900171c4:	b200      	sxth	r0, r0
900171c6:	f8a7 00b0 	strh.w	r0, [r7, #176]	@ 0xb0
900171ca:	b920      	cbnz	r0, 900171d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x662>
900171cc:	fa1f f188 	uxth.w	r1, r8
900171d0:	4650      	mov	r0, sl
900171d2:	f7ff f93d 	bl	90016450 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900171d6:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
900171da:	f1bb 0f00 	cmp.w	fp, #0
900171de:	f43f ae59 	beq.w	90016e94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
900171e2:	8833      	ldrh	r3, [r6, #0]
900171e4:	f04f 0800 	mov.w	r8, #0
900171e8:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
900171ec:	3301      	adds	r3, #1
900171ee:	b29b      	uxth	r3, r3
900171f0:	b299      	uxth	r1, r3
900171f2:	ea4f 07c8 	mov.w	r7, r8, lsl #3
900171f6:	458b      	cmp	fp, r1
900171f8:	d9a2      	bls.n	90017140 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5cc>
900171fa:	4427      	add	r7, r4
900171fc:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
90017200:	f8b7 10b0 	ldrh.w	r1, [r7, #176]	@ 0xb0
90017204:	f8b7 00ac 	ldrh.w	r0, [r7, #172]	@ 0xac
90017208:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
9001720c:	4408      	add	r0, r1
9001720e:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
90017212:	4461      	add	r1, ip
90017214:	b200      	sxth	r0, r0
90017216:	b209      	sxth	r1, r1
90017218:	4288      	cmp	r0, r1
9001721a:	f6bf af74 	bge.w	90017106 <_ZN8touchgfx11Application15drawCachedAreasEv+0x592>
9001721e:	4584      	cmp	ip, r0
90017220:	4662      	mov	r2, ip
90017222:	4698      	mov	r8, r3
90017224:	bfb8      	it	lt
90017226:	4602      	movlt	r2, r0
90017228:	3301      	adds	r3, #1
9001722a:	e7e1      	b.n	900171f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x67c>
9001722c:	d10e      	bne.n	9001724c <_ZN8touchgfx11Application15drawCachedAreasEv+0x6d8>
9001722e:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
90017232:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
90017236:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
9001723a:	4473      	add	r3, lr
9001723c:	b21b      	sxth	r3, r3
9001723e:	429d      	cmp	r5, r3
90017240:	bfa8      	it	ge
90017242:	461d      	movge	r5, r3
90017244:	4287      	cmp	r7, r0
90017246:	bfb8      	it	lt
90017248:	46e0      	movlt	r8, ip
9001724a:	e759      	b.n	90017100 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58c>
9001724c:	4285      	cmp	r5, r0
9001724e:	bfa8      	it	ge
90017250:	4605      	movge	r5, r0
90017252:	e755      	b.n	90017100 <_ZN8touchgfx11Application15drawCachedAreasEv+0x58c>
90017254:	eb0a 0007 	add.w	r0, sl, r7
90017258:	4427      	add	r7, r4
9001725a:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
9001725e:	45cb      	cmp	fp, r9
90017260:	bfbc      	itt	lt
90017262:	f8b7 50ae 	ldrhlt.w	r5, [r7, #174]	@ 0xae
90017266:	445d      	addlt	r5, fp
90017268:	e9cd 2102 	strd	r2, r1, [sp, #8]
9001726c:	bfb8      	it	lt
9001726e:	b22d      	sxthlt	r5, r5
90017270:	f7f8 ffd5 	bl	9001021e <_ZNK8touchgfx4Rect7isEmptyEv>
90017274:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
90017278:	2800      	cmp	r0, #0
9001727a:	f47f af1c 	bne.w	900170b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x542>
9001727e:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
90017282:	fa1f fb8b 	uxth.w	fp, fp
90017286:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
9001728a:	1aad      	subs	r5, r5, r2
9001728c:	4829      	ldr	r0, [pc, #164]	@ (90017334 <_ZN8touchgfx11Application15drawCachedAreasEv+0x7c0>)
9001728e:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
90017292:	454d      	cmp	r5, r9
90017294:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
90017298:	6800      	ldr	r0, [r0, #0]
9001729a:	bfa8      	it	ge
9001729c:	464d      	movge	r5, r9
9001729e:	f8ad 1034 	strh.w	r1, [sp, #52]	@ 0x34
900172a2:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
900172a6:	b289      	uxth	r1, r1
900172a8:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
900172ac:	b2ad      	uxth	r5, r5
900172ae:	f8d0 c000 	ldr.w	ip, [r0]
900172b2:	b292      	uxth	r2, r2
900172b4:	455d      	cmp	r5, fp
900172b6:	bf94      	ite	ls
900172b8:	9500      	strls	r5, [sp, #0]
900172ba:	f8cd b000 	strhi.w	fp, [sp]
900172be:	b29b      	uxth	r3, r3
900172c0:	f8dc 5094 	ldr.w	r5, [ip, #148]	@ 0x94
900172c4:	47a8      	blx	r5
900172c6:	6823      	ldr	r3, [r4, #0]
900172c8:	f8ad 003a 	strh.w	r0, [sp, #58]	@ 0x3a
900172cc:	a90d      	add	r1, sp, #52	@ 0x34
900172ce:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
900172d0:	4620      	mov	r0, r4
900172d2:	4798      	blx	r3
900172d4:	f8bd 103a 	ldrh.w	r1, [sp, #58]	@ 0x3a
900172d8:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
900172dc:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
900172e0:	1a5b      	subs	r3, r3, r1
900172e2:	440a      	add	r2, r1
900172e4:	b21b      	sxth	r3, r3
900172e6:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
900172ea:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
900172ee:	2b00      	cmp	r3, #0
900172f0:	f47f aedc 	bne.w	900170ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x538>
900172f4:	fa1f f188 	uxth.w	r1, r8
900172f8:	4650      	mov	r0, sl
900172fa:	f7ff f8a9 	bl	90016450 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
900172fe:	e6d5      	b.n	900170ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x538>
90017300:	8835      	ldrh	r5, [r6, #0]
90017302:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
90017306:	42ab      	cmp	r3, r5
90017308:	f67f adc4 	bls.w	90016e94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
9001730c:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
90017310:	ab0d      	add	r3, sp, #52	@ 0x34
90017312:	f852 0fac 	ldr.w	r0, [r2, #172]!
90017316:	6851      	ldr	r1, [r2, #4]
90017318:	c303      	stmia	r3!, {r0, r1}
9001731a:	a80d      	add	r0, sp, #52	@ 0x34
9001731c:	f7f8 ff7f 	bl	9001021e <_ZNK8touchgfx4Rect7isEmptyEv>
90017320:	b920      	cbnz	r0, 9001732c <_ZN8touchgfx11Application15drawCachedAreasEv+0x7b8>
90017322:	6823      	ldr	r3, [r4, #0]
90017324:	a90d      	add	r1, sp, #52	@ 0x34
90017326:	4620      	mov	r0, r4
90017328:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
9001732a:	4798      	blx	r3
9001732c:	3501      	adds	r5, #1
9001732e:	b2ad      	uxth	r5, r5
90017330:	e7e7      	b.n	90017302 <_ZN8touchgfx11Application15drawCachedAreasEv+0x78e>
90017332:	bf00      	nop
90017334:	2402198c 	.word	0x2402198c

90017338 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
90017338:	4b03      	ldr	r3, [pc, #12]	@ (90017348 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
9001733a:	2200      	movs	r2, #0
9001733c:	801a      	strh	r2, [r3, #0]
9001733e:	805a      	strh	r2, [r3, #2]
90017340:	809a      	strh	r2, [r3, #4]
90017342:	80da      	strh	r2, [r3, #6]
90017344:	4770      	bx	lr
90017346:	bf00      	nop
90017348:	240219d8 	.word	0x240219d8

9001734c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
9001734c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017350:	b09d      	sub	sp, #116	@ 0x74
90017352:	4606      	mov	r6, r0
90017354:	4614      	mov	r4, r2
90017356:	468a      	mov	sl, r1
90017358:	a803      	add	r0, sp, #12
9001735a:	461d      	mov	r5, r3
9001735c:	f001 f926 	bl	900185ac <_ZN8touchgfx12TextProviderC1Ev>
90017360:	6833      	ldr	r3, [r6, #0]
90017362:	4630      	mov	r0, r6
90017364:	f242 0b0b 	movw	fp, #8203	@ 0x200b
90017368:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001736a:	4798      	blx	r3
9001736c:	6833      	ldr	r3, [r6, #0]
9001736e:	4607      	mov	r7, r0
90017370:	4630      	mov	r0, r6
90017372:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90017374:	4798      	blx	r3
90017376:	462a      	mov	r2, r5
90017378:	2500      	movs	r5, #0
9001737a:	4621      	mov	r1, r4
9001737c:	9000      	str	r0, [sp, #0]
9001737e:	463b      	mov	r3, r7
90017380:	462c      	mov	r4, r5
90017382:	46a9      	mov	r9, r5
90017384:	46a8      	mov	r8, r5
90017386:	a803      	add	r0, sp, #12
90017388:	f001 f96b 	bl	90018662 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
9001738c:	2300      	movs	r3, #0
9001738e:	9302      	str	r3, [sp, #8]
90017390:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
90017394:	429c      	cmp	r4, r3
90017396:	d002      	beq.n	9001739e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
90017398:	455c      	cmp	r4, fp
9001739a:	bf18      	it	ne
9001739c:	4625      	movne	r5, r4
9001739e:	ab02      	add	r3, sp, #8
900173a0:	4632      	mov	r2, r6
900173a2:	4651      	mov	r1, sl
900173a4:	a803      	add	r0, sp, #12
900173a6:	f001 fc8f 	bl	90018cc8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
900173aa:	4604      	mov	r4, r0
900173ac:	b108      	cbz	r0, 900173b2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
900173ae:	280a      	cmp	r0, #10
900173b0:	d10a      	bne.n	900173c8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
900173b2:	45c1      	cmp	r9, r8
900173b4:	bf38      	it	cc
900173b6:	46c1      	movcc	r9, r8
900173b8:	f04f 0800 	mov.w	r8, #0
900173bc:	2c00      	cmp	r4, #0
900173be:	d1e5      	bne.n	9001738c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
900173c0:	4648      	mov	r0, r9
900173c2:	b01d      	add	sp, #116	@ 0x74
900173c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900173c8:	9a02      	ldr	r2, [sp, #8]
900173ca:	2a00      	cmp	r2, #0
900173cc:	d0de      	beq.n	9001738c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
900173ce:	7b57      	ldrb	r7, [r2, #13]
900173d0:	4629      	mov	r1, r5
900173d2:	6833      	ldr	r3, [r6, #0]
900173d4:	007f      	lsls	r7, r7, #1
900173d6:	8894      	ldrh	r4, [r2, #4]
900173d8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900173da:	f407 7080 	and.w	r0, r7, #256	@ 0x100
900173de:	7a97      	ldrb	r7, [r2, #10]
900173e0:	4307      	orrs	r7, r0
900173e2:	4630      	mov	r0, r6
900173e4:	4798      	blx	r3
900173e6:	4438      	add	r0, r7
900173e8:	4480      	add	r8, r0
900173ea:	fa1f f888 	uxth.w	r8, r8
900173ee:	e7e5      	b.n	900173bc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

900173f0 <_ZNK8touchgfx4Font12getCharWidthEt>:
900173f0:	b508      	push	{r3, lr}
900173f2:	6803      	ldr	r3, [r0, #0]
900173f4:	68db      	ldr	r3, [r3, #12]
900173f6:	4798      	blx	r3
900173f8:	b128      	cbz	r0, 90017406 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
900173fa:	7b43      	ldrb	r3, [r0, #13]
900173fc:	7a80      	ldrb	r0, [r0, #10]
900173fe:	005b      	lsls	r3, r3, #1
90017400:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90017404:	4318      	orrs	r0, r3
90017406:	bd08      	pop	{r3, pc}

90017408 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
90017408:	b40e      	push	{r1, r2, r3}
9001740a:	b5f0      	push	{r4, r5, r6, r7, lr}
9001740c:	b09e      	sub	sp, #120	@ 0x78
9001740e:	4605      	mov	r5, r0
90017410:	ab23      	add	r3, sp, #140	@ 0x8c
90017412:	a805      	add	r0, sp, #20
90017414:	f853 4b04 	ldr.w	r4, [r3], #4
90017418:	9303      	str	r3, [sp, #12]
9001741a:	f001 f8c7 	bl	900185ac <_ZN8touchgfx12TextProviderC1Ev>
9001741e:	682b      	ldr	r3, [r5, #0]
90017420:	4628      	mov	r0, r5
90017422:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
90017424:	4798      	blx	r3
90017426:	682b      	ldr	r3, [r5, #0]
90017428:	4606      	mov	r6, r0
9001742a:	4628      	mov	r0, r5
9001742c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
9001742e:	4798      	blx	r3
90017430:	4633      	mov	r3, r6
90017432:	4621      	mov	r1, r4
90017434:	ae1e      	add	r6, sp, #120	@ 0x78
90017436:	2400      	movs	r4, #0
90017438:	9000      	str	r0, [sp, #0]
9001743a:	9a03      	ldr	r2, [sp, #12]
9001743c:	a805      	add	r0, sp, #20
9001743e:	f001 f910 	bl	90018662 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017442:	f846 4d68 	str.w	r4, [r6, #-104]!
90017446:	462a      	mov	r2, r5
90017448:	4633      	mov	r3, r6
9001744a:	4621      	mov	r1, r4
9001744c:	a805      	add	r0, sp, #20
9001744e:	f001 fc3b 	bl	90018cc8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90017452:	b300      	cbz	r0, 90017496 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
90017454:	280a      	cmp	r0, #10
90017456:	d01a      	beq.n	9001748e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
90017458:	9f04      	ldr	r7, [sp, #16]
9001745a:	b1c7      	cbz	r7, 9001748e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
9001745c:	7b78      	ldrb	r0, [r7, #13]
9001745e:	7a3b      	ldrb	r3, [r7, #8]
90017460:	00c1      	lsls	r1, r0, #3
90017462:	88ea      	ldrh	r2, [r5, #6]
90017464:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90017468:	4319      	orrs	r1, r3
9001746a:	0643      	lsls	r3, r0, #25
9001746c:	ea4f 1000 	mov.w	r0, r0, lsl #4
90017470:	bf48      	it	mi
90017472:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
90017476:	f400 7080 	and.w	r0, r0, #256	@ 0x100
9001747a:	bf48      	it	mi
9001747c:	b219      	sxthmi	r1, r3
9001747e:	79fb      	ldrb	r3, [r7, #7]
90017480:	4303      	orrs	r3, r0
90017482:	4413      	add	r3, r2
90017484:	1a5b      	subs	r3, r3, r1
90017486:	b21b      	sxth	r3, r3
90017488:	429c      	cmp	r4, r3
9001748a:	bfb8      	it	lt
9001748c:	461c      	movlt	r4, r3
9001748e:	4633      	mov	r3, r6
90017490:	462a      	mov	r2, r5
90017492:	2100      	movs	r1, #0
90017494:	e7da      	b.n	9001744c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
90017496:	b2a0      	uxth	r0, r4
90017498:	b01e      	add	sp, #120	@ 0x78
9001749a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001749e:	b003      	add	sp, #12
900174a0:	4770      	bx	lr

900174a2 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
900174a2:	7a43      	ldrb	r3, [r0, #9]
900174a4:	8880      	ldrh	r0, [r0, #4]
900174a6:	4418      	add	r0, r3
900174a8:	b280      	uxth	r0, r0
900174aa:	4770      	bx	lr

900174ac <_ZNK8touchgfx4Font13getFontHeightEv>:
900174ac:	6803      	ldr	r3, [r0, #0]
900174ae:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900174b0:	4718      	bx	r3

900174b2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
900174b2:	b40e      	push	{r1, r2, r3}
900174b4:	b570      	push	{r4, r5, r6, lr}
900174b6:	b09d      	sub	sp, #116	@ 0x74
900174b8:	4604      	mov	r4, r0
900174ba:	ab21      	add	r3, sp, #132	@ 0x84
900174bc:	a803      	add	r0, sp, #12
900174be:	f853 5b04 	ldr.w	r5, [r3], #4
900174c2:	9302      	str	r3, [sp, #8]
900174c4:	f001 f872 	bl	900185ac <_ZN8touchgfx12TextProviderC1Ev>
900174c8:	6823      	ldr	r3, [r4, #0]
900174ca:	4620      	mov	r0, r4
900174cc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900174ce:	4798      	blx	r3
900174d0:	6823      	ldr	r3, [r4, #0]
900174d2:	4606      	mov	r6, r0
900174d4:	4620      	mov	r0, r4
900174d6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
900174d8:	2401      	movs	r4, #1
900174da:	4798      	blx	r3
900174dc:	4633      	mov	r3, r6
900174de:	9000      	str	r0, [sp, #0]
900174e0:	4629      	mov	r1, r5
900174e2:	9a02      	ldr	r2, [sp, #8]
900174e4:	a803      	add	r0, sp, #12
900174e6:	f001 f8bc 	bl	90018662 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900174ea:	a803      	add	r0, sp, #12
900174ec:	f001 fcb8 	bl	90018e60 <_ZN8touchgfx12TextProvider11getNextCharEv>
900174f0:	b2a3      	uxth	r3, r4
900174f2:	b138      	cbz	r0, 90017504 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
900174f4:	280a      	cmp	r0, #10
900174f6:	a803      	add	r0, sp, #12
900174f8:	bf04      	itt	eq
900174fa:	3301      	addeq	r3, #1
900174fc:	b21c      	sxtheq	r4, r3
900174fe:	f001 fcaf 	bl	90018e60 <_ZN8touchgfx12TextProvider11getNextCharEv>
90017502:	e7f5      	b.n	900174f0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
90017504:	4618      	mov	r0, r3
90017506:	b01d      	add	sp, #116	@ 0x74
90017508:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001750c:	b003      	add	sp, #12
9001750e:	4770      	bx	lr

90017510 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
90017510:	b40e      	push	{r1, r2, r3}
90017512:	b5f0      	push	{r4, r5, r6, r7, lr}
90017514:	b09e      	sub	sp, #120	@ 0x78
90017516:	4604      	mov	r4, r0
90017518:	ab23      	add	r3, sp, #140	@ 0x8c
9001751a:	a805      	add	r0, sp, #20
9001751c:	f853 5b04 	ldr.w	r5, [r3], #4
90017520:	9303      	str	r3, [sp, #12]
90017522:	f001 f843 	bl	900185ac <_ZN8touchgfx12TextProviderC1Ev>
90017526:	6823      	ldr	r3, [r4, #0]
90017528:	4620      	mov	r0, r4
9001752a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
9001752c:	4798      	blx	r3
9001752e:	6823      	ldr	r3, [r4, #0]
90017530:	4606      	mov	r6, r0
90017532:	4620      	mov	r0, r4
90017534:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
90017536:	4798      	blx	r3
90017538:	4633      	mov	r3, r6
9001753a:	4629      	mov	r1, r5
9001753c:	9000      	str	r0, [sp, #0]
9001753e:	9a03      	ldr	r2, [sp, #12]
90017540:	a805      	add	r0, sp, #20
90017542:	f001 f88e 	bl	90018662 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
90017546:	ad1e      	add	r5, sp, #120	@ 0x78
90017548:	2100      	movs	r1, #0
9001754a:	f647 76ff 	movw	r6, #32767	@ 0x7fff
9001754e:	4622      	mov	r2, r4
90017550:	a805      	add	r0, sp, #20
90017552:	f845 1d68 	str.w	r1, [r5, #-104]!
90017556:	462b      	mov	r3, r5
90017558:	f001 fbb6 	bl	90018cc8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
9001755c:	b1d8      	cbz	r0, 90017596 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
9001755e:	280a      	cmp	r0, #10
90017560:	d012      	beq.n	90017588 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
90017562:	9804      	ldr	r0, [sp, #16]
90017564:	b180      	cbz	r0, 90017588 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
90017566:	7b47      	ldrb	r7, [r0, #13]
90017568:	88e2      	ldrh	r2, [r4, #6]
9001756a:	00fb      	lsls	r3, r7, #3
9001756c:	f403 7180 	and.w	r1, r3, #256	@ 0x100
90017570:	7a03      	ldrb	r3, [r0, #8]
90017572:	430b      	orrs	r3, r1
90017574:	0679      	lsls	r1, r7, #25
90017576:	bf44      	itt	mi
90017578:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001757c:	b21b      	sxthmi	r3, r3
9001757e:	1ad3      	subs	r3, r2, r3
90017580:	b21b      	sxth	r3, r3
90017582:	429e      	cmp	r6, r3
90017584:	bfa8      	it	ge
90017586:	461e      	movge	r6, r3
90017588:	462b      	mov	r3, r5
9001758a:	4622      	mov	r2, r4
9001758c:	2100      	movs	r1, #0
9001758e:	a805      	add	r0, sp, #20
90017590:	f001 fb9a 	bl	90018cc8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
90017594:	e7e2      	b.n	9001755c <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
90017596:	4630      	mov	r0, r6
90017598:	b01e      	add	sp, #120	@ 0x78
9001759a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
9001759e:	b003      	add	sp, #12
900175a0:	4770      	bx	lr

900175a2 <_ZNK8touchgfx8Drawable10invalidateEv>:
900175a2:	b513      	push	{r0, r1, r4, lr}
900175a4:	6803      	ldr	r3, [r0, #0]
900175a6:	2400      	movs	r4, #0
900175a8:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
900175ac:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900175b0:	f8ad 1004 	strh.w	r1, [sp, #4]
900175b4:	4669      	mov	r1, sp
900175b6:	691b      	ldr	r3, [r3, #16]
900175b8:	9400      	str	r4, [sp, #0]
900175ba:	f8ad 2006 	strh.w	r2, [sp, #6]
900175be:	4798      	blx	r3
900175c0:	b002      	add	sp, #8
900175c2:	bd10      	pop	{r4, pc}

900175c4 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
900175c4:	b538      	push	{r3, r4, r5, lr}
900175c6:	680b      	ldr	r3, [r1, #0]
900175c8:	460c      	mov	r4, r1
900175ca:	4605      	mov	r5, r0
900175cc:	68db      	ldr	r3, [r3, #12]
900175ce:	4798      	blx	r3
900175d0:	6823      	ldr	r3, [r4, #0]
900175d2:	4620      	mov	r0, r4
900175d4:	4629      	mov	r1, r5
900175d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900175d8:	4798      	blx	r3
900175da:	4628      	mov	r0, r5
900175dc:	bd38      	pop	{r3, r4, r5, pc}

900175de <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
900175de:	b410      	push	{r4}
900175e0:	880a      	ldrh	r2, [r1, #0]
900175e2:	8884      	ldrh	r4, [r0, #4]
900175e4:	4422      	add	r2, r4
900175e6:	800a      	strh	r2, [r1, #0]
900175e8:	884a      	ldrh	r2, [r1, #2]
900175ea:	88c4      	ldrh	r4, [r0, #6]
900175ec:	4422      	add	r2, r4
900175ee:	804a      	strh	r2, [r1, #2]
900175f0:	6940      	ldr	r0, [r0, #20]
900175f2:	b120      	cbz	r0, 900175fe <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
900175f4:	6803      	ldr	r3, [r0, #0]
900175f6:	f85d 4b04 	ldr.w	r4, [sp], #4
900175fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900175fc:	4718      	bx	r3
900175fe:	f85d 4b04 	ldr.w	r4, [sp], #4
90017602:	4770      	bx	lr

90017604 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
90017604:	b570      	push	{r4, r5, r6, lr}
90017606:	8882      	ldrh	r2, [r0, #4]
90017608:	460c      	mov	r4, r1
9001760a:	880b      	ldrh	r3, [r1, #0]
9001760c:	4605      	mov	r5, r0
9001760e:	4413      	add	r3, r2
90017610:	800b      	strh	r3, [r1, #0]
90017612:	884b      	ldrh	r3, [r1, #2]
90017614:	88c2      	ldrh	r2, [r0, #6]
90017616:	4413      	add	r3, r2
90017618:	804b      	strh	r3, [r1, #2]
9001761a:	1d01      	adds	r1, r0, #4
9001761c:	4620      	mov	r0, r4
9001761e:	f7f8 fdbb 	bl	90010198 <_ZN8touchgfx4RectaNERKS0_>
90017622:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90017626:	2b00      	cmp	r3, #0
90017628:	dd0b      	ble.n	90017642 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
9001762a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001762e:	2b00      	cmp	r3, #0
90017630:	dd07      	ble.n	90017642 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90017632:	6968      	ldr	r0, [r5, #20]
90017634:	b128      	cbz	r0, 90017642 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
90017636:	6803      	ldr	r3, [r0, #0]
90017638:	4621      	mov	r1, r4
9001763a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
9001763c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017640:	4718      	bx	r3
90017642:	bd70      	pop	{r4, r5, r6, pc}

90017644 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
90017644:	b570      	push	{r4, r5, r6, lr}
90017646:	8882      	ldrh	r2, [r0, #4]
90017648:	460c      	mov	r4, r1
9001764a:	880b      	ldrh	r3, [r1, #0]
9001764c:	4605      	mov	r5, r0
9001764e:	4413      	add	r3, r2
90017650:	800b      	strh	r3, [r1, #0]
90017652:	884b      	ldrh	r3, [r1, #2]
90017654:	88c2      	ldrh	r2, [r0, #6]
90017656:	4413      	add	r3, r2
90017658:	804b      	strh	r3, [r1, #2]
9001765a:	1d01      	adds	r1, r0, #4
9001765c:	4620      	mov	r0, r4
9001765e:	f7f8 fd9b 	bl	90010198 <_ZN8touchgfx4RectaNERKS0_>
90017662:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90017666:	2b00      	cmp	r3, #0
90017668:	dd19      	ble.n	9001769e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
9001766a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9001766e:	2b00      	cmp	r3, #0
90017670:	dd15      	ble.n	9001769e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
90017672:	6968      	ldr	r0, [r5, #20]
90017674:	b128      	cbz	r0, 90017682 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
90017676:	6803      	ldr	r3, [r0, #0]
90017678:	4621      	mov	r1, r4
9001767a:	691b      	ldr	r3, [r3, #16]
9001767c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90017680:	4718      	bx	r3
90017682:	4b07      	ldr	r3, [pc, #28]	@ (900176a0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
90017684:	681b      	ldr	r3, [r3, #0]
90017686:	3304      	adds	r3, #4
90017688:	429d      	cmp	r5, r3
9001768a:	d108      	bne.n	9001769e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
9001768c:	f7fe fd86 	bl	9001619c <_ZN8touchgfx11Application11getInstanceEv>
90017690:	6803      	ldr	r3, [r0, #0]
90017692:	6821      	ldr	r1, [r4, #0]
90017694:	6862      	ldr	r2, [r4, #4]
90017696:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
90017698:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
9001769c:	4718      	bx	r3
9001769e:	bd70      	pop	{r4, r5, r6, pc}
900176a0:	240219d0 	.word	0x240219d0

900176a4 <_ZN8touchgfx8Drawable12moveRelativeEss>:
900176a4:	b570      	push	{r4, r5, r6, lr}
900176a6:	4604      	mov	r4, r0
900176a8:	4616      	mov	r6, r2
900176aa:	460d      	mov	r5, r1
900176ac:	b901      	cbnz	r1, 900176b0 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
900176ae:	b192      	cbz	r2, 900176d6 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
900176b0:	6823      	ldr	r3, [r4, #0]
900176b2:	4620      	mov	r0, r4
900176b4:	699b      	ldr	r3, [r3, #24]
900176b6:	4798      	blx	r3
900176b8:	88e2      	ldrh	r2, [r4, #6]
900176ba:	88a1      	ldrh	r1, [r4, #4]
900176bc:	4620      	mov	r0, r4
900176be:	4432      	add	r2, r6
900176c0:	4429      	add	r1, r5
900176c2:	b212      	sxth	r2, r2
900176c4:	b209      	sxth	r1, r1
900176c6:	f7f9 f84b 	bl	90010760 <_ZN8touchgfx8Drawable5setXYEss>
900176ca:	6823      	ldr	r3, [r4, #0]
900176cc:	4620      	mov	r0, r4
900176ce:	699b      	ldr	r3, [r3, #24]
900176d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
900176d4:	4718      	bx	r3
900176d6:	bd70      	pop	{r4, r5, r6, pc}

900176d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
900176d8:	b510      	push	{r4, lr}
900176da:	2300      	movs	r3, #0
900176dc:	4604      	mov	r4, r0
900176de:	4608      	mov	r0, r1
900176e0:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
900176e4:	8023      	strh	r3, [r4, #0]
900176e6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900176ea:	8063      	strh	r3, [r4, #2]
900176ec:	6803      	ldr	r3, [r0, #0]
900176ee:	80a1      	strh	r1, [r4, #4]
900176f0:	4621      	mov	r1, r4
900176f2:	80e2      	strh	r2, [r4, #6]
900176f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900176f6:	4798      	blx	r3
900176f8:	4620      	mov	r0, r4
900176fa:	bd10      	pop	{r4, pc}

900176fc <_ZN8touchgfx22VectorFontRendererImplD1Ev>:
900176fc:	4770      	bx	lr

900176fe <_ZN8touchgfx22VectorFontRendererImplD0Ev>:
900176fe:	b510      	push	{r4, lr}
90017700:	4604      	mov	r4, r0
90017702:	211c      	movs	r1, #28
90017704:	f011 fbba 	bl	90028e7c <_ZdlPvj>
90017708:	4620      	mov	r0, r4
9001770a:	bd10      	pop	{r4, pc}

9001770c <_ZN8touchgfx22VectorFontRendererImplC1Ev>:
9001770c:	4a04      	ldr	r2, [pc, #16]	@ (90017720 <_ZN8touchgfx22VectorFontRendererImplC1Ev+0x14>)
9001770e:	6002      	str	r2, [r0, #0]
90017710:	2200      	movs	r2, #0
90017712:	e9c0 2201 	strd	r2, r2, [r0, #4]
90017716:	e9c0 2203 	strd	r2, r2, [r0, #12]
9001771a:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001771e:	4770      	bx	lr
90017720:	9002d5e4 	.word	0x9002d5e4

90017724 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>:
90017724:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90017728:	4604      	mov	r4, r0
9001772a:	b087      	sub	sp, #28
9001772c:	8b45      	ldrh	r5, [r0, #26]
9001772e:	f8b2 c000 	ldrh.w	ip, [r2]
90017732:	9105      	str	r1, [sp, #20]
90017734:	1c68      	adds	r0, r5, #1
90017736:	68e1      	ldr	r1, [r4, #12]
90017738:	9203      	str	r2, [sp, #12]
9001773a:	b280      	uxth	r0, r0
9001773c:	eb01 0185 	add.w	r1, r1, r5, lsl #2
90017740:	f01c 0501 	ands.w	r5, ip, #1
90017744:	f9b3 2000 	ldrsh.w	r2, [r3]
90017748:	9502      	str	r5, [sp, #8]
9001774a:	d07d      	beq.n	90017848 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x124>
9001774c:	ee07 2a90 	vmov	s15, r2
90017750:	8360      	strh	r0, [r4, #26]
90017752:	f04f 0e00 	mov.w	lr, #0
90017756:	eef8 6ae7 	vcvt.f32.s32	s13, s15
9001775a:	ee06 ea10 	vmov	s12, lr
9001775e:	edc1 6a00 	vstr	s13, [r1]
90017762:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
90017766:	8b61      	ldrh	r1, [r4, #26]
90017768:	ee07 2a10 	vmov	s14, r2
9001776c:	68e2      	ldr	r2, [r4, #12]
9001776e:	1c48      	adds	r0, r1, #1
90017770:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90017774:	eb02 0281 	add.w	r2, r2, r1, lsl #2
90017778:	8360      	strh	r0, [r4, #26]
9001777a:	ed82 7a00 	vstr	s14, [r2]
9001777e:	8b21      	ldrh	r1, [r4, #24]
90017780:	2501      	movs	r5, #1
90017782:	68a2      	ldr	r2, [r4, #8]
90017784:	3304      	adds	r3, #4
90017786:	1c48      	adds	r0, r1, #1
90017788:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
9001778c:	9300      	str	r3, [sp, #0]
9001778e:	46aa      	mov	sl, r5
90017790:	8320      	strh	r0, [r4, #24]
90017792:	462e      	mov	r6, r5
90017794:	5455      	strb	r5, [r2, r1]
90017796:	2200      	movs	r2, #0
90017798:	ee07 2a90 	vmov	s15, r2
9001779c:	4613      	mov	r3, r2
9001779e:	4611      	mov	r1, r2
900177a0:	9201      	str	r2, [sp, #4]
900177a2:	f8b4 8018 	ldrh.w	r8, [r4, #24]
900177a6:	9805      	ldr	r0, [sp, #20]
900177a8:	f108 0701 	add.w	r7, r8, #1
900177ac:	f8d4 b008 	ldr.w	fp, [r4, #8]
900177b0:	42a8      	cmp	r0, r5
900177b2:	b2bf      	uxth	r7, r7
900177b4:	eb0b 0908 	add.w	r9, fp, r8
900177b8:	f340 80db 	ble.w	90017972 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x24e>
900177bc:	fa4c f906 	asr.w	r9, ip, r6
900177c0:	f009 0901 	and.w	r9, r9, #1
900177c4:	fa5f f389 	uxtb.w	r3, r9
900177c8:	9304      	str	r3, [sp, #16]
900177ca:	9b00      	ldr	r3, [sp, #0]
900177cc:	f9b3 1000 	ldrsh.w	r1, [r3]
900177d0:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
900177d4:	f1b9 0f00 	cmp.w	r9, #0
900177d8:	d07d      	beq.n	900178d6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x1b2>
900177da:	ee05 1a10 	vmov	s10, r1
900177de:	8327      	strh	r7, [r4, #24]
900177e0:	eef8 4ac5 	vcvt.f32.s32	s9, s10
900177e4:	ee05 3a10 	vmov	s10, r3
900177e8:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
900177ec:	f1ba 0f00 	cmp.w	sl, #0
900177f0:	d050      	beq.n	90017894 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x170>
900177f2:	f04f 0002 	mov.w	r0, #2
900177f6:	f80b 0008 	strb.w	r0, [fp, r8]
900177fa:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900177fe:	68e7      	ldr	r7, [r4, #12]
90017800:	f108 0901 	add.w	r9, r8, #1
90017804:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90017808:	f8a4 901a 	strh.w	r9, [r4, #26]
9001780c:	edc7 4a00 	vstr	s9, [r7]
90017810:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90017814:	68e7      	ldr	r7, [r4, #12]
90017816:	f108 0901 	add.w	r9, r8, #1
9001781a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001781e:	f8a4 901a 	strh.w	r9, [r4, #26]
90017822:	ed87 5a00 	vstr	s10, [r7]
90017826:	3601      	adds	r6, #1
90017828:	2e10      	cmp	r6, #16
9001782a:	d106      	bne.n	9001783a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x116>
9001782c:	9e01      	ldr	r6, [sp, #4]
9001782e:	9803      	ldr	r0, [sp, #12]
90017830:	3601      	adds	r6, #1
90017832:	9601      	str	r6, [sp, #4]
90017834:	f830 c016 	ldrh.w	ip, [r0, r6, lsl #1]
90017838:	2600      	movs	r6, #0
9001783a:	9800      	ldr	r0, [sp, #0]
9001783c:	3501      	adds	r5, #1
9001783e:	f8dd a010 	ldr.w	sl, [sp, #16]
90017842:	3004      	adds	r0, #4
90017844:	9000      	str	r0, [sp, #0]
90017846:	e7ac      	b.n	900177a2 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x7e>
90017848:	ee06 2a10 	vmov	s12, r2
9001784c:	f9b3 2004 	ldrsh.w	r2, [r3, #4]
90017850:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
90017854:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
90017858:	ee16 5a10 	vmov	r5, s12
9001785c:	442a      	add	r2, r5
9001785e:	ee06 2a90 	vmov	s13, r2
90017862:	f9b3 2006 	ldrsh.w	r2, [r3, #6]
90017866:	8360      	strh	r0, [r4, #26]
90017868:	4472      	add	r2, lr
9001786a:	eef8 6ae6 	vcvt.f32.s32	s13, s13
9001786e:	ee07 2a10 	vmov	s14, r2
90017872:	ee66 6aa7 	vmul.f32	s13, s13, s15
90017876:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
9001787a:	edc1 6a00 	vstr	s13, [r1]
9001787e:	8b61      	ldrh	r1, [r4, #26]
90017880:	ee27 7a27 	vmul.f32	s14, s14, s15
90017884:	68e2      	ldr	r2, [r4, #12]
90017886:	1c48      	adds	r0, r1, #1
90017888:	eb02 0281 	add.w	r2, r2, r1, lsl #2
9001788c:	8360      	strh	r0, [r4, #26]
9001788e:	ed82 7a00 	vstr	s14, [r2]
90017892:	e774      	b.n	9001777e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x5a>
90017894:	f04f 0005 	mov.w	r0, #5
90017898:	eeb8 4ae7 	vcvt.f32.s32	s8, s15
9001789c:	f80b 0008 	strb.w	r0, [fp, r8]
900178a0:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900178a4:	68e7      	ldr	r7, [r4, #12]
900178a6:	f108 0901 	add.w	r9, r8, #1
900178aa:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900178ae:	f8a4 901a 	strh.w	r9, [r4, #26]
900178b2:	ed87 4a00 	vstr	s8, [r7]
900178b6:	ee04 2a10 	vmov	s8, r2
900178ba:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900178be:	68e7      	ldr	r7, [r4, #12]
900178c0:	eeb8 4ac4 	vcvt.f32.s32	s8, s8
900178c4:	f108 0901 	add.w	r9, r8, #1
900178c8:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900178cc:	f8a4 901a 	strh.w	r9, [r4, #26]
900178d0:	ed87 4a00 	vstr	s8, [r7]
900178d4:	e791      	b.n	900177fa <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0xd6>
900178d6:	f1ba 0f00 	cmp.w	sl, #0
900178da:	d146      	bne.n	9001796a <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x246>
900178dc:	f04f 0005 	mov.w	r0, #5
900178e0:	8327      	strh	r7, [r4, #24]
900178e2:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
900178e6:	f80b 0008 	strb.w	r0, [fp, r8]
900178ea:	ee17 0a90 	vmov	r0, s15
900178ee:	f8b4 801a 	ldrh.w	r8, [r4, #26]
900178f2:	68e7      	ldr	r7, [r4, #12]
900178f4:	4408      	add	r0, r1
900178f6:	f108 0901 	add.w	r9, r8, #1
900178fa:	eb07 0788 	add.w	r7, r7, r8, lsl #2
900178fe:	ee07 0a90 	vmov	s15, r0
90017902:	f8a4 901a 	strh.w	r9, [r4, #26]
90017906:	ed87 5a00 	vstr	s10, [r7]
9001790a:	ee05 2a10 	vmov	s10, r2
9001790e:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90017912:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017916:	68e7      	ldr	r7, [r4, #12]
90017918:	eeb8 5ac5 	vcvt.f32.s32	s10, s10
9001791c:	f108 0901 	add.w	r9, r8, #1
90017920:	441a      	add	r2, r3
90017922:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90017926:	ee67 7aa5 	vmul.f32	s15, s15, s11
9001792a:	f8a4 901a 	strh.w	r9, [r4, #26]
9001792e:	ed87 5a00 	vstr	s10, [r7]
90017932:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90017936:	68e7      	ldr	r7, [r4, #12]
90017938:	f108 0901 	add.w	r9, r8, #1
9001793c:	eb07 0788 	add.w	r7, r7, r8, lsl #2
90017940:	f8a4 901a 	strh.w	r9, [r4, #26]
90017944:	edc7 7a00 	vstr	s15, [r7]
90017948:	ee07 2a90 	vmov	s15, r2
9001794c:	f8b4 801a 	ldrh.w	r8, [r4, #26]
90017950:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017954:	68e7      	ldr	r7, [r4, #12]
90017956:	f108 0901 	add.w	r9, r8, #1
9001795a:	eb07 0788 	add.w	r7, r7, r8, lsl #2
9001795e:	ee67 7aa5 	vmul.f32	s15, s15, s11
90017962:	f8a4 901a 	strh.w	r9, [r4, #26]
90017966:	edc7 7a00 	vstr	s15, [r7]
9001796a:	461a      	mov	r2, r3
9001796c:	ee07 1a90 	vmov	s15, r1
90017970:	e759      	b.n	90017826 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x102>
90017972:	f1ba 0f00 	cmp.w	sl, #0
90017976:	d045      	beq.n	90017a04 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
90017978:	ee05 1a90 	vmov	s11, r1
9001797c:	eef8 5ae5 	vcvt.f32.s32	s11, s11
90017980:	eef4 5a66 	vcmp.f32	s11, s13
90017984:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90017988:	d108      	bne.n	9001799c <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x278>
9001798a:	ee05 3a90 	vmov	s11, r3
9001798e:	eef8 5ae5 	vcvt.f32.s32	s11, s11
90017992:	eef4 5a47 	vcmp.f32	s11, s14
90017996:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
9001799a:	d033      	beq.n	90017a04 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2e0>
9001799c:	9b02      	ldr	r3, [sp, #8]
9001799e:	8327      	strh	r7, [r4, #24]
900179a0:	b1b3      	cbz	r3, 900179d0 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2ac>
900179a2:	2302      	movs	r3, #2
900179a4:	f889 3000 	strb.w	r3, [r9]
900179a8:	8b62      	ldrh	r2, [r4, #26]
900179aa:	68e3      	ldr	r3, [r4, #12]
900179ac:	1c51      	adds	r1, r2, #1
900179ae:	eb03 0382 	add.w	r3, r3, r2, lsl #2
900179b2:	8361      	strh	r1, [r4, #26]
900179b4:	edc3 6a00 	vstr	s13, [r3]
900179b8:	8b62      	ldrh	r2, [r4, #26]
900179ba:	68e3      	ldr	r3, [r4, #12]
900179bc:	1c51      	adds	r1, r2, #1
900179be:	eb03 0382 	add.w	r3, r3, r2, lsl #2
900179c2:	8361      	strh	r1, [r4, #26]
900179c4:	ed83 7a00 	vstr	s14, [r3]
900179c8:	9800      	ldr	r0, [sp, #0]
900179ca:	b007      	add	sp, #28
900179cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900179d0:	2305      	movs	r3, #5
900179d2:	f889 3000 	strb.w	r3, [r9]
900179d6:	8b62      	ldrh	r2, [r4, #26]
900179d8:	eeb8 6ac6 	vcvt.f32.s32	s12, s12
900179dc:	68e3      	ldr	r3, [r4, #12]
900179de:	ee07 ea90 	vmov	s15, lr
900179e2:	1c51      	adds	r1, r2, #1
900179e4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
900179e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900179ec:	8361      	strh	r1, [r4, #26]
900179ee:	ed83 6a00 	vstr	s12, [r3]
900179f2:	8b62      	ldrh	r2, [r4, #26]
900179f4:	68e3      	ldr	r3, [r4, #12]
900179f6:	1c51      	adds	r1, r2, #1
900179f8:	eb03 0382 	add.w	r3, r3, r2, lsl #2
900179fc:	8361      	strh	r1, [r4, #26]
900179fe:	edc3 7a00 	vstr	s15, [r3]
90017a02:	e7d1      	b.n	900179a8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
90017a04:	ee05 2a90 	vmov	s11, r2
90017a08:	2305      	movs	r3, #5
90017a0a:	9902      	ldr	r1, [sp, #8]
90017a0c:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
90017a10:	8327      	strh	r7, [r4, #24]
90017a12:	eef8 5ae5 	vcvt.f32.s32	s11, s11
90017a16:	f889 3000 	strb.w	r3, [r9]
90017a1a:	b181      	cbz	r1, 90017a3e <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x31a>
90017a1c:	8b62      	ldrh	r2, [r4, #26]
90017a1e:	68e3      	ldr	r3, [r4, #12]
90017a20:	1c51      	adds	r1, r2, #1
90017a22:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90017a26:	8361      	strh	r1, [r4, #26]
90017a28:	ed83 5a00 	vstr	s10, [r3]
90017a2c:	8b62      	ldrh	r2, [r4, #26]
90017a2e:	68e3      	ldr	r3, [r4, #12]
90017a30:	1c51      	adds	r1, r2, #1
90017a32:	eb03 0382 	add.w	r3, r3, r2, lsl #2
90017a36:	8361      	strh	r1, [r4, #26]
90017a38:	edc3 5a00 	vstr	s11, [r3]
90017a3c:	e7b4      	b.n	900179a8 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x284>
90017a3e:	8b65      	ldrh	r5, [r4, #26]
90017a40:	ee17 0a90 	vmov	r0, s15
90017a44:	68e1      	ldr	r1, [r4, #12]
90017a46:	4472      	add	r2, lr
90017a48:	1c6e      	adds	r6, r5, #1
90017a4a:	eb01 0185 	add.w	r1, r1, r5, lsl #2
90017a4e:	8366      	strh	r6, [r4, #26]
90017a50:	ed81 5a00 	vstr	s10, [r1]
90017a54:	8b65      	ldrh	r5, [r4, #26]
90017a56:	68e1      	ldr	r1, [r4, #12]
90017a58:	1c6e      	adds	r6, r5, #1
90017a5a:	eb01 0185 	add.w	r1, r1, r5, lsl #2
90017a5e:	8366      	strh	r6, [r4, #26]
90017a60:	edc1 5a00 	vstr	s11, [r1]
90017a64:	eef6 5a00 	vmov.f32	s11, #96	@ 0x3f000000  0.5
90017a68:	8b65      	ldrh	r5, [r4, #26]
90017a6a:	68e1      	ldr	r1, [r4, #12]
90017a6c:	1c6e      	adds	r6, r5, #1
90017a6e:	eb01 0185 	add.w	r1, r1, r5, lsl #2
90017a72:	ee16 5a10 	vmov	r5, s12
90017a76:	8366      	strh	r6, [r4, #26]
90017a78:	4428      	add	r0, r5
90017a7a:	ee07 0a90 	vmov	s15, r0
90017a7e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017a82:	ee67 7aa5 	vmul.f32	s15, s15, s11
90017a86:	edc1 7a00 	vstr	s15, [r1]
90017a8a:	ee07 2a90 	vmov	s15, r2
90017a8e:	8b61      	ldrh	r1, [r4, #26]
90017a90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90017a94:	68e5      	ldr	r5, [r4, #12]
90017a96:	1c4e      	adds	r6, r1, #1
90017a98:	eb05 0181 	add.w	r1, r5, r1, lsl #2
90017a9c:	ee67 7aa5 	vmul.f32	s15, s15, s11
90017aa0:	8366      	strh	r6, [r4, #26]
90017aa2:	edc1 7a00 	vstr	s15, [r1]
90017aa6:	8b22      	ldrh	r2, [r4, #24]
90017aa8:	68a1      	ldr	r1, [r4, #8]
90017aaa:	1c55      	adds	r5, r2, #1
90017aac:	8325      	strh	r5, [r4, #24]
90017aae:	548b      	strb	r3, [r1, r2]
90017ab0:	e791      	b.n	900179d6 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs+0x2b2>
	...

90017ab4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii>:
90017ab4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90017ab8:	4604      	mov	r4, r0
90017aba:	b08e      	sub	sp, #56	@ 0x38
90017abc:	4699      	mov	r9, r3
90017abe:	4688      	mov	r8, r1
90017ac0:	4615      	mov	r5, r2
90017ac2:	9e16      	ldr	r6, [sp, #88]	@ 0x58
90017ac4:	f89d a064 	ldrb.w	sl, [sp, #100]	@ 0x64
90017ac8:	9f1a      	ldr	r7, [sp, #104]	@ 0x68
90017aca:	f7eb fd51 	bl	90003570 <_ZN8touchgfx14VectorRenderer11getInstanceEv>
90017ace:	6060      	str	r0, [r4, #4]
90017ad0:	f1b9 0f00 	cmp.w	r9, #0
90017ad4:	f000 80e8 	beq.w	90017ca8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
90017ad8:	2800      	cmp	r0, #0
90017ada:	f000 80e5 	beq.w	90017ca8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1f4>
90017ade:	a805      	add	r0, sp, #20
90017ae0:	f000 f8f9 	bl	90017cd6 <_ZN8touchgfx9Matrix3x3C1Ev>
90017ae4:	6833      	ldr	r3, [r6, #0]
90017ae6:	4630      	mov	r0, r6
90017ae8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
90017aea:	4798      	blx	r3
90017aec:	a805      	add	r0, sp, #20
90017aee:	eef0 0a40 	vmov.f32	s1, s0
90017af2:	f000 f8f4 	bl	90017cde <_ZN8touchgfx9Matrix3x35scaleEff>
90017af6:	6860      	ldr	r0, [r4, #4]
90017af8:	f1ba 0f03 	cmp.w	sl, #3
90017afc:	d83b      	bhi.n	90017b76 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xc2>
90017afe:	e8df f00a 	tbb	[pc, sl]
90017b02:	1002      	.short	0x1002
90017b04:	9f71      	.short	0x9f71
90017b06:	6803      	ldr	r3, [r0, #0]
90017b08:	462a      	mov	r2, r5
90017b0a:	4641      	mov	r1, r8
90017b0c:	689b      	ldr	r3, [r3, #8]
90017b0e:	4798      	blx	r3
90017b10:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
90017b14:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90017b18:	ee07 7a90 	vmov	s15, r7
90017b1c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
90017b20:	e026      	b.n	90017b70 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xbc>
90017b22:	f9b5 2006 	ldrsh.w	r2, [r5, #6]
90017b26:	f8b8 3004 	ldrh.w	r3, [r8, #4]
90017b2a:	8869      	ldrh	r1, [r5, #2]
90017b2c:	1a9b      	subs	r3, r3, r2
90017b2e:	f8ad 2010 	strh.w	r2, [sp, #16]
90017b32:	aa03      	add	r2, sp, #12
90017b34:	1a5b      	subs	r3, r3, r1
90017b36:	4641      	mov	r1, r8
90017b38:	f8ad 300c 	strh.w	r3, [sp, #12]
90017b3c:	882b      	ldrh	r3, [r5, #0]
90017b3e:	f8ad 300e 	strh.w	r3, [sp, #14]
90017b42:	88ab      	ldrh	r3, [r5, #4]
90017b44:	f8ad 3012 	strh.w	r3, [sp, #18]
90017b48:	6803      	ldr	r3, [r0, #0]
90017b4a:	689b      	ldr	r3, [r3, #8]
90017b4c:	4798      	blx	r3
90017b4e:	ed9f 0a58 	vldr	s0, [pc, #352]	@ 90017cb0 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1fc>
90017b52:	a805      	add	r0, sp, #20
90017b54:	f000 f8e8 	bl	90017d28 <_ZN8touchgfx9Matrix3x36rotateEf>
90017b58:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
90017b5c:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90017b5e:	ee07 7a90 	vmov	s15, r7
90017b62:	1a9b      	subs	r3, r3, r2
90017b64:	eef8 0ae7 	vcvt.f32.s32	s1, s15
90017b68:	ee00 3a10 	vmov	s0, r3
90017b6c:	eeb8 0ac0 	vcvt.f32.s32	s0, s0
90017b70:	a805      	add	r0, sp, #20
90017b72:	f000 f927 	bl	90017dc4 <_ZN8touchgfx9Matrix3x39translateEff>
90017b76:	6860      	ldr	r0, [r4, #4]
90017b78:	a905      	add	r1, sp, #20
90017b7a:	2500      	movs	r5, #0
90017b7c:	f109 0602 	add.w	r6, r9, #2
90017b80:	6803      	ldr	r3, [r0, #0]
90017b82:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
90017b84:	4798      	blx	r3
90017b86:	6860      	ldr	r0, [r4, #4]
90017b88:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90017b8a:	6803      	ldr	r3, [r0, #0]
90017b8c:	f041 417f 	orr.w	r1, r1, #4278190080	@ 0xff000000
90017b90:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
90017b92:	4798      	blx	r3
90017b94:	6860      	ldr	r0, [r4, #4]
90017b96:	f89d 1060 	ldrb.w	r1, [sp, #96]	@ 0x60
90017b9a:	6803      	ldr	r3, [r0, #0]
90017b9c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90017b9e:	4798      	blx	r3
90017ba0:	6860      	ldr	r0, [r4, #4]
90017ba2:	2101      	movs	r1, #1
90017ba4:	6803      	ldr	r3, [r0, #0]
90017ba6:	68db      	ldr	r3, [r3, #12]
90017ba8:	4798      	blx	r3
90017baa:	f8b9 7000 	ldrh.w	r7, [r9]
90017bae:	f104 0310 	add.w	r3, r4, #16
90017bb2:	61a5      	str	r5, [r4, #24]
90017bb4:	f104 0208 	add.w	r2, r4, #8
90017bb8:	f104 0114 	add.w	r1, r4, #20
90017bbc:	f104 000c 	add.w	r0, r4, #12
90017bc0:	f7ed ff1a 	bl	900059f8 <_ZN8touchgfx22VectorFontRendererImpl20getVectorFontBuffersERPfRiRPhS3_>
90017bc4:	42af      	cmp	r7, r5
90017bc6:	dd60      	ble.n	90017c8a <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x1d6>
90017bc8:	8831      	ldrh	r1, [r6, #0]
90017bca:	1cb2      	adds	r2, r6, #2
90017bcc:	4620      	mov	r0, r4
90017bce:	3501      	adds	r5, #1
90017bd0:	f101 030f 	add.w	r3, r1, #15
90017bd4:	f3c3 1307 	ubfx	r3, r3, #4, #8
90017bd8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90017bdc:	f7ff fda2 	bl	90017724 <_ZN8touchgfx22VectorFontRendererImpl11drawContourEtPKtPKs>
90017be0:	4606      	mov	r6, r0
90017be2:	e7ef      	b.n	90017bc4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x110>
90017be4:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90017be8:	f8b8 3004 	ldrh.w	r3, [r8, #4]
90017bec:	8829      	ldrh	r1, [r5, #0]
90017bee:	1a9b      	subs	r3, r3, r2
90017bf0:	f8ad 2010 	strh.w	r2, [sp, #16]
90017bf4:	aa03      	add	r2, sp, #12
90017bf6:	1a5b      	subs	r3, r3, r1
90017bf8:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90017bfc:	886d      	ldrh	r5, [r5, #2]
90017bfe:	f8ad 300c 	strh.w	r3, [sp, #12]
90017c02:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90017c06:	f8ad 1012 	strh.w	r1, [sp, #18]
90017c0a:	1a5b      	subs	r3, r3, r1
90017c0c:	4641      	mov	r1, r8
90017c0e:	1b5b      	subs	r3, r3, r5
90017c10:	f8ad 300e 	strh.w	r3, [sp, #14]
90017c14:	6803      	ldr	r3, [r0, #0]
90017c16:	689b      	ldr	r3, [r3, #8]
90017c18:	4798      	blx	r3
90017c1a:	ed9f 0a26 	vldr	s0, [pc, #152]	@ 90017cb4 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x200>
90017c1e:	a805      	add	r0, sp, #20
90017c20:	f000 f882 	bl	90017d28 <_ZN8touchgfx9Matrix3x36rotateEf>
90017c24:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90017c28:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90017c2a:	1a9b      	subs	r3, r3, r2
90017c2c:	ee00 3a90 	vmov	s1, r3
90017c30:	f9b8 3004 	ldrsh.w	r3, [r8, #4]
90017c34:	1bdb      	subs	r3, r3, r7
90017c36:	eef8 0ae0 	vcvt.f32.s32	s1, s1
90017c3a:	ee00 3a10 	vmov	s0, r3
90017c3e:	e795      	b.n	90017b6c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0xb8>
90017c40:	886b      	ldrh	r3, [r5, #2]
90017c42:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
90017c46:	f8ad 300c 	strh.w	r3, [sp, #12]
90017c4a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
90017c4e:	8829      	ldrh	r1, [r5, #0]
90017c50:	1a9b      	subs	r3, r3, r2
90017c52:	f8ad 2012 	strh.w	r2, [sp, #18]
90017c56:	aa03      	add	r2, sp, #12
90017c58:	1a5b      	subs	r3, r3, r1
90017c5a:	4641      	mov	r1, r8
90017c5c:	f8ad 300e 	strh.w	r3, [sp, #14]
90017c60:	88eb      	ldrh	r3, [r5, #6]
90017c62:	f8ad 3010 	strh.w	r3, [sp, #16]
90017c66:	6803      	ldr	r3, [r0, #0]
90017c68:	689b      	ldr	r3, [r3, #8]
90017c6a:	4798      	blx	r3
90017c6c:	ed9f 0a12 	vldr	s0, [pc, #72]	@ 90017cb8 <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x204>
90017c70:	a805      	add	r0, sp, #20
90017c72:	f000 f859 	bl	90017d28 <_ZN8touchgfx9Matrix3x36rotateEf>
90017c76:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
90017c7a:	eddd 7a1b 	vldr	s15, [sp, #108]	@ 0x6c
90017c7e:	1bdb      	subs	r3, r3, r7
90017c80:	ee00 3a90 	vmov	s1, r3
90017c84:	eef8 0ae0 	vcvt.f32.s32	s1, s1
90017c88:	e748      	b.n	90017b1c <_ZN8touchgfx22VectorFontRendererImpl9drawGlyphERKNS_4RectES3_PKtPKNS_4FontENS_9colortypeEhNS_12TextRotationEii+0x68>
90017c8a:	6860      	ldr	r0, [r4, #4]
90017c8c:	2100      	movs	r1, #0
90017c8e:	8b22      	ldrh	r2, [r4, #24]
90017c90:	6803      	ldr	r3, [r0, #0]
90017c92:	9101      	str	r1, [sp, #4]
90017c94:	8b61      	ldrh	r1, [r4, #26]
90017c96:	9100      	str	r1, [sp, #0]
90017c98:	6a1d      	ldr	r5, [r3, #32]
90017c9a:	e9d4 1302 	ldrd	r1, r3, [r4, #8]
90017c9e:	47a8      	blx	r5
90017ca0:	6860      	ldr	r0, [r4, #4]
90017ca2:	6803      	ldr	r3, [r0, #0]
90017ca4:	69db      	ldr	r3, [r3, #28]
90017ca6:	4798      	blx	r3
90017ca8:	b00e      	add	sp, #56	@ 0x38
90017caa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90017cae:	bf00      	nop
90017cb0:	42b40000 	.word	0x42b40000
90017cb4:	43340000 	.word	0x43340000
90017cb8:	43870000 	.word	0x43870000

90017cbc <_ZN8touchgfx9Matrix3x35resetEv>:
90017cbc:	2300      	movs	r3, #0
90017cbe:	f04f 527e 	mov.w	r2, #1065353216	@ 0x3f800000
90017cc2:	6043      	str	r3, [r0, #4]
90017cc4:	6002      	str	r2, [r0, #0]
90017cc6:	6083      	str	r3, [r0, #8]
90017cc8:	60c3      	str	r3, [r0, #12]
90017cca:	6102      	str	r2, [r0, #16]
90017ccc:	6143      	str	r3, [r0, #20]
90017cce:	6183      	str	r3, [r0, #24]
90017cd0:	61c3      	str	r3, [r0, #28]
90017cd2:	6202      	str	r2, [r0, #32]
90017cd4:	4770      	bx	lr

90017cd6 <_ZN8touchgfx9Matrix3x3C1Ev>:
90017cd6:	b508      	push	{r3, lr}
90017cd8:	f7ff fff0 	bl	90017cbc <_ZN8touchgfx9Matrix3x35resetEv>
90017cdc:	bd08      	pop	{r3, pc}

90017cde <_ZN8touchgfx9Matrix3x35scaleEff>:
90017cde:	edd0 7a00 	vldr	s15, [r0]
90017ce2:	ee67 7a80 	vmul.f32	s15, s15, s0
90017ce6:	edc0 7a00 	vstr	s15, [r0]
90017cea:	edd0 7a01 	vldr	s15, [r0, #4]
90017cee:	ee67 7a80 	vmul.f32	s15, s15, s0
90017cf2:	edc0 7a01 	vstr	s15, [r0, #4]
90017cf6:	edd0 7a02 	vldr	s15, [r0, #8]
90017cfa:	ee27 0a80 	vmul.f32	s0, s15, s0
90017cfe:	edd0 7a03 	vldr	s15, [r0, #12]
90017d02:	ee67 7aa0 	vmul.f32	s15, s15, s1
90017d06:	ed80 0a02 	vstr	s0, [r0, #8]
90017d0a:	edc0 7a03 	vstr	s15, [r0, #12]
90017d0e:	edd0 7a04 	vldr	s15, [r0, #16]
90017d12:	ee67 7aa0 	vmul.f32	s15, s15, s1
90017d16:	edc0 7a04 	vstr	s15, [r0, #16]
90017d1a:	edd0 7a05 	vldr	s15, [r0, #20]
90017d1e:	ee67 0aa0 	vmul.f32	s1, s15, s1
90017d22:	edc0 0a05 	vstr	s1, [r0, #20]
90017d26:	4770      	bx	lr

90017d28 <_ZN8touchgfx9Matrix3x36rotateEf>:
90017d28:	eddf 7a24 	vldr	s15, [pc, #144]	@ 90017dbc <_ZN8touchgfx9Matrix3x36rotateEf+0x94>
90017d2c:	ee20 0a27 	vmul.f32	s0, s0, s15
90017d30:	eddf 7a23 	vldr	s15, [pc, #140]	@ 90017dc0 <_ZN8touchgfx9Matrix3x36rotateEf+0x98>
90017d34:	b510      	push	{r4, lr}
90017d36:	ed2d 8b02 	vpush	{d8}
90017d3a:	eec0 8a27 	vdiv.f32	s17, s0, s15
90017d3e:	4604      	mov	r4, r0
90017d40:	eeb0 0a68 	vmov.f32	s0, s17
90017d44:	f011 f9d0 	bl	900290e8 <cosf>
90017d48:	eeb0 8a40 	vmov.f32	s16, s0
90017d4c:	eeb0 0a68 	vmov.f32	s0, s17
90017d50:	f011 f906 	bl	90028f60 <sinf>
90017d54:	edd4 6a03 	vldr	s13, [r4, #12]
90017d58:	edd4 4a00 	vldr	s9, [r4]
90017d5c:	ee60 7a66 	vnmul.f32	s15, s0, s13
90017d60:	ed94 7a04 	vldr	s14, [r4, #16]
90017d64:	ed94 5a01 	vldr	s10, [r4, #4]
90017d68:	ee66 6a88 	vmul.f32	s13, s13, s16
90017d6c:	edd4 5a02 	vldr	s11, [r4, #8]
90017d70:	eee8 7a24 	vfma.f32	s15, s16, s9
90017d74:	eee0 6a24 	vfma.f32	s13, s0, s9
90017d78:	edc4 7a00 	vstr	s15, [r4]
90017d7c:	ee60 7a47 	vnmul.f32	s15, s0, s14
90017d80:	ee27 7a08 	vmul.f32	s14, s14, s16
90017d84:	edc4 6a03 	vstr	s13, [r4, #12]
90017d88:	eee8 7a05 	vfma.f32	s15, s16, s10
90017d8c:	eea0 7a05 	vfma.f32	s14, s0, s10
90017d90:	edc4 7a01 	vstr	s15, [r4, #4]
90017d94:	edd4 7a05 	vldr	s15, [r4, #20]
90017d98:	ed84 7a04 	vstr	s14, [r4, #16]
90017d9c:	ee20 6a67 	vnmul.f32	s12, s0, s15
90017da0:	ee67 7a88 	vmul.f32	s15, s15, s16
90017da4:	eea8 6a25 	vfma.f32	s12, s16, s11
90017da8:	eee0 7a25 	vfma.f32	s15, s0, s11
90017dac:	ecbd 8b02 	vpop	{d8}
90017db0:	ed84 6a02 	vstr	s12, [r4, #8]
90017db4:	edc4 7a05 	vstr	s15, [r4, #20]
90017db8:	bd10      	pop	{r4, pc}
90017dba:	bf00      	nop
90017dbc:	40490fdb 	.word	0x40490fdb
90017dc0:	43340000 	.word	0x43340000

90017dc4 <_ZN8touchgfx9Matrix3x39translateEff>:
90017dc4:	ed90 6a06 	vldr	s12, [r0, #24]
90017dc8:	edd0 7a00 	vldr	s15, [r0]
90017dcc:	edd0 6a07 	vldr	s13, [r0, #28]
90017dd0:	eee6 7a00 	vfma.f32	s15, s12, s0
90017dd4:	ed90 7a08 	vldr	s14, [r0, #32]
90017dd8:	edc0 7a00 	vstr	s15, [r0]
90017ddc:	edd0 7a01 	vldr	s15, [r0, #4]
90017de0:	eee6 7a80 	vfma.f32	s15, s13, s0
90017de4:	edc0 7a01 	vstr	s15, [r0, #4]
90017de8:	edd0 7a02 	vldr	s15, [r0, #8]
90017dec:	eee7 7a00 	vfma.f32	s15, s14, s0
90017df0:	edc0 7a02 	vstr	s15, [r0, #8]
90017df4:	edd0 7a03 	vldr	s15, [r0, #12]
90017df8:	eee6 7a20 	vfma.f32	s15, s12, s1
90017dfc:	edc0 7a03 	vstr	s15, [r0, #12]
90017e00:	edd0 7a04 	vldr	s15, [r0, #16]
90017e04:	eee6 7aa0 	vfma.f32	s15, s13, s1
90017e08:	edc0 7a04 	vstr	s15, [r0, #16]
90017e0c:	edd0 7a05 	vldr	s15, [r0, #20]
90017e10:	eee7 7a20 	vfma.f32	s15, s14, s1
90017e14:	edc0 7a05 	vstr	s15, [r0, #20]
90017e18:	4770      	bx	lr

90017e1a <_ZNK8touchgfx9Matrix3x315affineTransformEff>:
90017e1a:	edd0 6a01 	vldr	s13, [r0, #4]
90017e1e:	b084      	sub	sp, #16
90017e20:	edd0 7a04 	vldr	s15, [r0, #16]
90017e24:	ed90 7a03 	vldr	s14, [r0, #12]
90017e28:	ee60 7aa7 	vmul.f32	s15, s1, s15
90017e2c:	ee60 0aa6 	vmul.f32	s1, s1, s13
90017e30:	edd0 6a00 	vldr	s13, [r0]
90017e34:	eee7 7a00 	vfma.f32	s15, s14, s0
90017e38:	ed90 7a05 	vldr	s14, [r0, #20]
90017e3c:	eee6 0a80 	vfma.f32	s1, s13, s0
90017e40:	ed90 0a02 	vldr	s0, [r0, #8]
90017e44:	ee30 0a80 	vadd.f32	s0, s1, s0
90017e48:	ee77 0a87 	vadd.f32	s1, s15, s14
90017e4c:	b004      	add	sp, #16
90017e4e:	4770      	bx	lr

90017e50 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
90017e50:	b530      	push	{r4, r5, lr}
90017e52:	8083      	strh	r3, [r0, #4]
90017e54:	f8bd 300c 	ldrh.w	r3, [sp, #12]
90017e58:	f89d 5018 	ldrb.w	r5, [sp, #24]
90017e5c:	80c3      	strh	r3, [r0, #6]
90017e5e:	f89d 3010 	ldrb.w	r3, [sp, #16]
90017e62:	6141      	str	r1, [r0, #20]
90017e64:	7203      	strb	r3, [r0, #8]
90017e66:	f89d 3014 	ldrb.w	r3, [sp, #20]
90017e6a:	8302      	strh	r2, [r0, #24]
90017e6c:	7243      	strb	r3, [r0, #9]
90017e6e:	7a83      	ldrb	r3, [r0, #10]
90017e70:	f365 0306 	bfi	r3, r5, #0, #7
90017e74:	f89d 501c 	ldrb.w	r5, [sp, #28]
90017e78:	f365 13c7 	bfi	r3, r5, #7, #1
90017e7c:	7283      	strb	r3, [r0, #10]
90017e7e:	f89d 3020 	ldrb.w	r3, [sp, #32]
90017e82:	72c3      	strb	r3, [r0, #11]
90017e84:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
90017e88:	7303      	strb	r3, [r0, #12]
90017e8a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90017e8e:	81c3      	strh	r3, [r0, #14]
90017e90:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
90017e94:	8203      	strh	r3, [r0, #16]
90017e96:	4b01      	ldr	r3, [pc, #4]	@ (90017e9c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
90017e98:	6003      	str	r3, [r0, #0]
90017e9a:	bd30      	pop	{r4, r5, pc}
90017e9c:	9002d5f8 	.word	0x9002d5f8

90017ea0 <_ZNK8touchgfx9ConstFont4findEt>:
90017ea0:	b5f0      	push	{r4, r5, r6, r7, lr}
90017ea2:	6944      	ldr	r4, [r0, #20]
90017ea4:	b3bc      	cbz	r4, 90017f16 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017ea6:	88a3      	ldrh	r3, [r4, #4]
90017ea8:	8b02      	ldrh	r2, [r0, #24]
90017eaa:	1acb      	subs	r3, r1, r3
90017eac:	f102 32ff 	add.w	r2, r2, #4294967295
90017eb0:	d431      	bmi.n	90017f16 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017eb2:	4293      	cmp	r3, r2
90017eb4:	dd0c      	ble.n	90017ed0 <_ZNK8touchgfx9ConstFont4findEt+0x30>
90017eb6:	230e      	movs	r3, #14
90017eb8:	fb03 4302 	mla	r3, r3, r2, r4
90017ebc:	889b      	ldrh	r3, [r3, #4]
90017ebe:	1a5b      	subs	r3, r3, r1
90017ec0:	1ad3      	subs	r3, r2, r3
90017ec2:	429a      	cmp	r2, r3
90017ec4:	db27      	blt.n	90017f16 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017ec6:	2b00      	cmp	r3, #0
90017ec8:	bfbc      	itt	lt
90017eca:	2302      	movlt	r3, #2
90017ecc:	fb92 f3f3 	sdivlt	r3, r2, r3
90017ed0:	2500      	movs	r5, #0
90017ed2:	260e      	movs	r6, #14
90017ed4:	4295      	cmp	r5, r2
90017ed6:	dc1e      	bgt.n	90017f16 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017ed8:	fb06 4003 	mla	r0, r6, r3, r4
90017edc:	8887      	ldrh	r7, [r0, #4]
90017ede:	42b9      	cmp	r1, r7
90017ee0:	d01a      	beq.n	90017f18 <_ZNK8touchgfx9ConstFont4findEt+0x78>
90017ee2:	d20d      	bcs.n	90017f00 <_ZNK8touchgfx9ConstFont4findEt+0x60>
90017ee4:	1e5a      	subs	r2, r3, #1
90017ee6:	4295      	cmp	r5, r2
90017ee8:	dc15      	bgt.n	90017f16 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017eea:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
90017eee:	1a5b      	subs	r3, r3, r1
90017ef0:	1ad3      	subs	r3, r2, r3
90017ef2:	429a      	cmp	r2, r3
90017ef4:	db0f      	blt.n	90017f16 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017ef6:	429d      	cmp	r5, r3
90017ef8:	ddec      	ble.n	90017ed4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90017efa:	1953      	adds	r3, r2, r5
90017efc:	105b      	asrs	r3, r3, #1
90017efe:	e7e9      	b.n	90017ed4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90017f00:	1c5d      	adds	r5, r3, #1
90017f02:	42aa      	cmp	r2, r5
90017f04:	db07      	blt.n	90017f16 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017f06:	8a43      	ldrh	r3, [r0, #18]
90017f08:	1acb      	subs	r3, r1, r3
90017f0a:	442b      	add	r3, r5
90017f0c:	429d      	cmp	r5, r3
90017f0e:	dc02      	bgt.n	90017f16 <_ZNK8touchgfx9ConstFont4findEt+0x76>
90017f10:	429a      	cmp	r2, r3
90017f12:	dadf      	bge.n	90017ed4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
90017f14:	e7f1      	b.n	90017efa <_ZNK8touchgfx9ConstFont4findEt+0x5a>
90017f16:	2000      	movs	r0, #0
90017f18:	bdf0      	pop	{r4, r5, r6, r7, pc}

90017f1a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
90017f1a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90017f1c:	4604      	mov	r4, r0
90017f1e:	4617      	mov	r7, r2
90017f20:	461e      	mov	r6, r3
90017f22:	b911      	cbnz	r1, 90017f2a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
90017f24:	2500      	movs	r5, #0
90017f26:	4628      	mov	r0, r5
90017f28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
90017f2a:	290a      	cmp	r1, #10
90017f2c:	d0fa      	beq.n	90017f24 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90017f2e:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
90017f32:	4291      	cmp	r1, r2
90017f34:	d0f6      	beq.n	90017f24 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90017f36:	f242 020b 	movw	r2, #8203	@ 0x200b
90017f3a:	4291      	cmp	r1, r2
90017f3c:	d0f2      	beq.n	90017f24 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90017f3e:	f7ff ffaf 	bl	90017ea0 <_ZNK8touchgfx9ConstFont4findEt>
90017f42:	4605      	mov	r5, r0
90017f44:	b950      	cbnz	r0, 90017f5c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
90017f46:	6823      	ldr	r3, [r4, #0]
90017f48:	4620      	mov	r0, r4
90017f4a:	691b      	ldr	r3, [r3, #16]
90017f4c:	4798      	blx	r3
90017f4e:	4601      	mov	r1, r0
90017f50:	4620      	mov	r0, r4
90017f52:	f7ff ffa5 	bl	90017ea0 <_ZNK8touchgfx9ConstFont4findEt>
90017f56:	4605      	mov	r5, r0
90017f58:	2800      	cmp	r0, #0
90017f5a:	d0e3      	beq.n	90017f24 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
90017f5c:	6823      	ldr	r3, [r4, #0]
90017f5e:	4629      	mov	r1, r5
90017f60:	4620      	mov	r0, r4
90017f62:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
90017f64:	4798      	blx	r3
90017f66:	6038      	str	r0, [r7, #0]
90017f68:	6823      	ldr	r3, [r4, #0]
90017f6a:	4620      	mov	r0, r4
90017f6c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
90017f6e:	4798      	blx	r3
90017f70:	7030      	strb	r0, [r6, #0]
90017f72:	e7d8      	b.n	90017f26 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

90017f74 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
90017f74:	2000      	movs	r0, #0
90017f76:	4770      	bx	lr

90017f78 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
90017f78:	2001      	movs	r0, #1
90017f7a:	4770      	bx	lr

90017f7c <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
90017f7c:	2002      	movs	r0, #2
90017f7e:	4770      	bx	lr

90017f80 <_ZN8touchgfx6ScreenD1Ev>:
90017f80:	4770      	bx	lr

90017f82 <_ZN8touchgfx6Screen11setupScreenEv>:
90017f82:	4770      	bx	lr

90017f84 <_ZN8touchgfx12GestureEventD1Ev>:
90017f84:	4770      	bx	lr

90017f86 <_ZN8touchgfx9DragEventD1Ev>:
90017f86:	4770      	bx	lr

90017f88 <_ZN8touchgfx10ClickEventD1Ev>:
90017f88:	4770      	bx	lr

90017f8a <_ZN8touchgfx10ClickEventD0Ev>:
90017f8a:	b510      	push	{r4, lr}
90017f8c:	4604      	mov	r4, r0
90017f8e:	210c      	movs	r1, #12
90017f90:	f010 ff74 	bl	90028e7c <_ZdlPvj>
90017f94:	4620      	mov	r0, r4
90017f96:	bd10      	pop	{r4, pc}

90017f98 <_ZN8touchgfx9DragEventD0Ev>:
90017f98:	b510      	push	{r4, lr}
90017f9a:	4604      	mov	r4, r0
90017f9c:	2110      	movs	r1, #16
90017f9e:	f010 ff6d 	bl	90028e7c <_ZdlPvj>
90017fa2:	4620      	mov	r0, r4
90017fa4:	bd10      	pop	{r4, pc}

90017fa6 <_ZN8touchgfx12GestureEventD0Ev>:
90017fa6:	b510      	push	{r4, lr}
90017fa8:	4604      	mov	r4, r0
90017faa:	210c      	movs	r1, #12
90017fac:	f010 ff66 	bl	90028e7c <_ZdlPvj>
90017fb0:	4620      	mov	r0, r4
90017fb2:	bd10      	pop	{r4, pc}

90017fb4 <_ZN8touchgfx6ScreenD0Ev>:
90017fb4:	b510      	push	{r4, lr}
90017fb6:	4604      	mov	r4, r0
90017fb8:	213c      	movs	r1, #60	@ 0x3c
90017fba:	f010 ff5f 	bl	90028e7c <_ZdlPvj>
90017fbe:	4620      	mov	r0, r4
90017fc0:	bd10      	pop	{r4, pc}
	...

90017fc4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
90017fc4:	b530      	push	{r4, r5, lr}
90017fc6:	460d      	mov	r5, r1
90017fc8:	6b01      	ldr	r1, [r0, #48]	@ 0x30
90017fca:	b087      	sub	sp, #28
90017fcc:	4604      	mov	r4, r0
90017fce:	b301      	cbz	r1, 90018012 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
90017fd0:	a801      	add	r0, sp, #4
90017fd2:	f7ff fb81 	bl	900176d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90017fd6:	892a      	ldrh	r2, [r5, #8]
90017fd8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
90017fdc:	7928      	ldrb	r0, [r5, #4]
90017fde:	1ad2      	subs	r2, r2, r3
90017fe0:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
90017fe2:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
90017fe6:	441a      	add	r2, r3
90017fe8:	896b      	ldrh	r3, [r5, #10]
90017fea:	f8bd 5006 	ldrh.w	r5, [sp, #6]
90017fee:	f88d 0010 	strb.w	r0, [sp, #16]
90017ff2:	1b5b      	subs	r3, r3, r5
90017ff4:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
90017ff6:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90017ff8:	442b      	add	r3, r5
90017ffa:	4d07      	ldr	r5, [pc, #28]	@ (90018018 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
90017ffc:	f8ad 1012 	strh.w	r1, [sp, #18]
90018000:	a903      	add	r1, sp, #12
90018002:	9503      	str	r5, [sp, #12]
90018004:	f8ad 2014 	strh.w	r2, [sp, #20]
90018008:	f8ad 3016 	strh.w	r3, [sp, #22]
9001800c:	6803      	ldr	r3, [r0, #0]
9001800e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
90018010:	4798      	blx	r3
90018012:	b007      	add	sp, #28
90018014:	bd30      	pop	{r4, r5, pc}
90018016:	bf00      	nop
90018018:	9002d688 	.word	0x9002d688

9001801c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
9001801c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90018020:	6b03      	ldr	r3, [r0, #48]	@ 0x30
90018022:	b08a      	sub	sp, #40	@ 0x28
90018024:	4604      	mov	r4, r0
90018026:	460d      	mov	r5, r1
90018028:	b113      	cbz	r3, 90018030 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
9001802a:	790b      	ldrb	r3, [r1, #4]
9001802c:	2b00      	cmp	r3, #0
9001802e:	d044      	beq.n	900180ba <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
90018030:	f104 0804 	add.w	r8, r4, #4
90018034:	a803      	add	r0, sp, #12
90018036:	4641      	mov	r1, r8
90018038:	f7ff fb4e 	bl	900176d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001803c:	792b      	ldrb	r3, [r5, #4]
9001803e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
90018042:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
90018046:	b983      	cbnz	r3, 9001806a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
90018048:	f104 0336 	add.w	r3, r4, #54	@ 0x36
9001804c:	892a      	ldrh	r2, [r5, #8]
9001804e:	88e9      	ldrh	r1, [r5, #6]
90018050:	4640      	mov	r0, r8
90018052:	1b92      	subs	r2, r2, r6
90018054:	9301      	str	r3, [sp, #4]
90018056:	1bc9      	subs	r1, r1, r7
90018058:	f104 0334 	add.w	r3, r4, #52	@ 0x34
9001805c:	b212      	sxth	r2, r2
9001805e:	9300      	str	r3, [sp, #0]
90018060:	b209      	sxth	r1, r1
90018062:	f104 0330 	add.w	r3, r4, #48	@ 0x30
90018066:	f7f7 ffb5 	bl	9000ffd4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
9001806a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
9001806c:	b329      	cbz	r1, 900180ba <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
9001806e:	a805      	add	r0, sp, #20
90018070:	f7ff fb32 	bl	900176d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018074:	f8bd 2014 	ldrh.w	r2, [sp, #20]
90018078:	792b      	ldrb	r3, [r5, #4]
9001807a:	a907      	add	r1, sp, #28
9001807c:	1abf      	subs	r7, r7, r2
9001807e:	88ea      	ldrh	r2, [r5, #6]
90018080:	6b20      	ldr	r0, [r4, #48]	@ 0x30
90018082:	4417      	add	r7, r2
90018084:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
90018086:	f88d 3020 	strb.w	r3, [sp, #32]
9001808a:	4417      	add	r7, r2
9001808c:	f8bd 2016 	ldrh.w	r2, [sp, #22]
90018090:	1ab6      	subs	r6, r6, r2
90018092:	892a      	ldrh	r2, [r5, #8]
90018094:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
90018098:	4416      	add	r6, r2
9001809a:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
9001809c:	4416      	add	r6, r2
9001809e:	4a08      	ldr	r2, [pc, #32]	@ (900180c0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
900180a0:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
900180a4:	2600      	movs	r6, #0
900180a6:	9207      	str	r2, [sp, #28]
900180a8:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
900180ac:	6803      	ldr	r3, [r0, #0]
900180ae:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
900180b0:	4798      	blx	r3
900180b2:	792b      	ldrb	r3, [r5, #4]
900180b4:	b10b      	cbz	r3, 900180ba <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
900180b6:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
900180ba:	b00a      	add	sp, #40	@ 0x28
900180bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900180c0:	9002d660 	.word	0x9002d660

900180c4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
900180c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
900180c8:	460c      	mov	r4, r1
900180ca:	6b01      	ldr	r1, [r0, #48]	@ 0x30
900180cc:	b088      	sub	sp, #32
900180ce:	4605      	mov	r5, r0
900180d0:	2900      	cmp	r1, #0
900180d2:	d06d      	beq.n	900181b0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
900180d4:	4668      	mov	r0, sp
900180d6:	f7ff faff 	bl	900176d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
900180da:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
900180dc:	88e3      	ldrh	r3, [r4, #6]
900180de:	f9bd 8000 	ldrsh.w	r8, [sp]
900180e2:	440b      	add	r3, r1
900180e4:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
900180e8:	b21b      	sxth	r3, r3
900180ea:	4543      	cmp	r3, r8
900180ec:	db31      	blt.n	90018152 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900180ee:	f8bd c004 	ldrh.w	ip, [sp, #4]
900180f2:	44c4      	add	ip, r8
900180f4:	fa0f fc8c 	sxth.w	ip, ip
900180f8:	4563      	cmp	r3, ip
900180fa:	da2a      	bge.n	90018152 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
900180fc:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
900180fe:	8926      	ldrh	r6, [r4, #8]
90018100:	4416      	add	r6, r2
90018102:	b236      	sxth	r6, r6
90018104:	42be      	cmp	r6, r7
90018106:	db24      	blt.n	90018152 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90018108:	f8bd 0006 	ldrh.w	r0, [sp, #6]
9001810c:	4438      	add	r0, r7
9001810e:	b200      	sxth	r0, r0
90018110:	4286      	cmp	r6, r0
90018112:	da1e      	bge.n	90018152 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90018114:	8963      	ldrh	r3, [r4, #10]
90018116:	4419      	add	r1, r3
90018118:	b209      	sxth	r1, r1
9001811a:	4541      	cmp	r1, r8
9001811c:	db08      	blt.n	90018130 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001811e:	4561      	cmp	r1, ip
90018120:	da06      	bge.n	90018130 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
90018122:	89a3      	ldrh	r3, [r4, #12]
90018124:	441a      	add	r2, r3
90018126:	b212      	sxth	r2, r2
90018128:	42ba      	cmp	r2, r7
9001812a:	db01      	blt.n	90018130 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
9001812c:	4282      	cmp	r2, r0
9001812e:	db10      	blt.n	90018152 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
90018130:	4b21      	ldr	r3, [pc, #132]	@ (900181b8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
90018132:	a904      	add	r1, sp, #16
90018134:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90018136:	9304      	str	r3, [sp, #16]
90018138:	2302      	movs	r3, #2
9001813a:	f88d 3014 	strb.w	r3, [sp, #20]
9001813e:	2300      	movs	r3, #0
90018140:	f8ad 3016 	strh.w	r3, [sp, #22]
90018144:	f8ad 3018 	strh.w	r3, [sp, #24]
90018148:	f8ad 301a 	strh.w	r3, [sp, #26]
9001814c:	6803      	ldr	r3, [r0, #0]
9001814e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
90018150:	4798      	blx	r3
90018152:	1d29      	adds	r1, r5, #4
90018154:	a802      	add	r0, sp, #8
90018156:	f7ff fabf 	bl	900176d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001815a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001815e:	88e0      	ldrh	r0, [r4, #6]
90018160:	eba3 0808 	sub.w	r8, r3, r8
90018164:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90018168:	7921      	ldrb	r1, [r4, #4]
9001816a:	fa1f f888 	uxth.w	r8, r8
9001816e:	1bdf      	subs	r7, r3, r7
90018170:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
90018174:	b2bb      	uxth	r3, r7
90018176:	4440      	add	r0, r8
90018178:	8922      	ldrh	r2, [r4, #8]
9001817a:	8967      	ldrh	r7, [r4, #10]
9001817c:	4460      	add	r0, ip
9001817e:	89a4      	ldrh	r4, [r4, #12]
90018180:	441a      	add	r2, r3
90018182:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
90018184:	44b8      	add	r8, r7
90018186:	4423      	add	r3, r4
90018188:	f8ad 0016 	strh.w	r0, [sp, #22]
9001818c:	4432      	add	r2, r6
9001818e:	44e0      	add	r8, ip
90018190:	4433      	add	r3, r6
90018192:	4c0a      	ldr	r4, [pc, #40]	@ (900181bc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
90018194:	6b28      	ldr	r0, [r5, #48]	@ 0x30
90018196:	f88d 1014 	strb.w	r1, [sp, #20]
9001819a:	a904      	add	r1, sp, #16
9001819c:	9404      	str	r4, [sp, #16]
9001819e:	f8ad 2018 	strh.w	r2, [sp, #24]
900181a2:	f8ad 801a 	strh.w	r8, [sp, #26]
900181a6:	f8ad 301c 	strh.w	r3, [sp, #28]
900181aa:	6803      	ldr	r3, [r0, #0]
900181ac:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
900181ae:	4798      	blx	r3
900181b0:	b008      	add	sp, #32
900181b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900181b6:	bf00      	nop
900181b8:	9002d660 	.word	0x9002d660
900181bc:	9002d674 	.word	0x9002d674

900181c0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
900181c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
900181c2:	4604      	mov	r4, r0
900181c4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
900181c8:	3201      	adds	r2, #1
900181ca:	d112      	bne.n	900181f2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
900181cc:	2500      	movs	r5, #0
900181ce:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
900181d2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900181d6:	6803      	ldr	r3, [r0, #0]
900181d8:	9500      	str	r5, [sp, #0]
900181da:	466d      	mov	r5, sp
900181dc:	f8ad 1004 	strh.w	r1, [sp, #4]
900181e0:	f8ad 2006 	strh.w	r2, [sp, #6]
900181e4:	4629      	mov	r1, r5
900181e6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
900181e8:	4798      	blx	r3
900181ea:	e895 0003 	ldmia.w	r5, {r0, r1}
900181ee:	e884 0003 	stmia.w	r4, {r0, r1}
900181f2:	4620      	mov	r0, r4
900181f4:	b003      	add	sp, #12
900181f6:	bd30      	pop	{r4, r5, pc}

900181f8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
900181f8:	b513      	push	{r0, r1, r4, lr}
900181fa:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
900181fe:	4604      	mov	r4, r0
90018200:	3301      	adds	r3, #1
90018202:	d109      	bne.n	90018218 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
90018204:	4601      	mov	r1, r0
90018206:	4668      	mov	r0, sp
90018208:	f7ff fa66 	bl	900176d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001820c:	f8bd 3000 	ldrh.w	r3, [sp]
90018210:	8423      	strh	r3, [r4, #32]
90018212:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90018216:	8463      	strh	r3, [r4, #34]	@ 0x22
90018218:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
9001821c:	b002      	add	sp, #8
9001821e:	bd10      	pop	{r4, pc}

90018220 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
90018220:	b513      	push	{r0, r1, r4, lr}
90018222:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
90018226:	4604      	mov	r4, r0
90018228:	3301      	adds	r3, #1
9001822a:	d109      	bne.n	90018240 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
9001822c:	4601      	mov	r1, r0
9001822e:	4668      	mov	r0, sp
90018230:	f7ff fa52 	bl	900176d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018234:	f8bd 3000 	ldrh.w	r3, [sp]
90018238:	8423      	strh	r3, [r4, #32]
9001823a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
9001823e:	8463      	strh	r3, [r4, #34]	@ 0x22
90018240:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
90018244:	b002      	add	sp, #8
90018246:	bd10      	pop	{r4, pc}

90018248 <_ZN8touchgfx6ScreenC1Ev>:
90018248:	b570      	push	{r4, r5, r6, lr}
9001824a:	4b17      	ldr	r3, [pc, #92]	@ (900182a8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
9001824c:	4605      	mov	r5, r0
9001824e:	4a17      	ldr	r2, [pc, #92]	@ (900182ac <_ZN8touchgfx6ScreenC1Ev+0x64>)
90018250:	2101      	movs	r1, #1
90018252:	f845 3b04 	str.w	r3, [r5], #4
90018256:	2300      	movs	r3, #0
90018258:	6042      	str	r2, [r0, #4]
9001825a:	4604      	mov	r4, r0
9001825c:	8103      	strh	r3, [r0, #8]
9001825e:	8143      	strh	r3, [r0, #10]
90018260:	8183      	strh	r3, [r0, #12]
90018262:	81c3      	strh	r3, [r0, #14]
90018264:	8203      	strh	r3, [r0, #16]
90018266:	8243      	strh	r3, [r0, #18]
90018268:	8283      	strh	r3, [r0, #20]
9001826a:	82c3      	strh	r3, [r0, #22]
9001826c:	6203      	str	r3, [r0, #32]
9001826e:	8483      	strh	r3, [r0, #36]	@ 0x24
90018270:	84c3      	strh	r3, [r0, #38]	@ 0x26
90018272:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
90018276:	6343      	str	r3, [r0, #52]	@ 0x34
90018278:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
9001827c:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
90018280:	e9c0 3306 	strd	r3, r3, [r0, #24]
90018284:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
90018288:	4b09      	ldr	r3, [pc, #36]	@ (900182b0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
9001828a:	4628      	mov	r0, r5
9001828c:	f9b3 6000 	ldrsh.w	r6, [r3]
90018290:	6b93      	ldr	r3, [r2, #56]	@ 0x38
90018292:	4a08      	ldr	r2, [pc, #32]	@ (900182b4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
90018294:	f9b2 1000 	ldrsh.w	r1, [r2]
90018298:	4798      	blx	r3
9001829a:	6863      	ldr	r3, [r4, #4]
9001829c:	4628      	mov	r0, r5
9001829e:	4631      	mov	r1, r6
900182a0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900182a2:	4798      	blx	r3
900182a4:	4620      	mov	r0, r4
900182a6:	bd70      	pop	{r4, r5, r6, pc}
900182a8:	9002d69c 	.word	0x9002d69c
900182ac:	9002d13c 	.word	0x9002d13c
900182b0:	24021982 	.word	0x24021982
900182b4:	24021980 	.word	0x24021980

900182b8 <_ZN8touchgfx6Screen4drawEv>:
900182b8:	4b09      	ldr	r3, [pc, #36]	@ (900182e0 <_ZN8touchgfx6Screen4drawEv+0x28>)
900182ba:	b507      	push	{r0, r1, r2, lr}
900182bc:	f9b3 2000 	ldrsh.w	r2, [r3]
900182c0:	2100      	movs	r1, #0
900182c2:	4b08      	ldr	r3, [pc, #32]	@ (900182e4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
900182c4:	9100      	str	r1, [sp, #0]
900182c6:	4669      	mov	r1, sp
900182c8:	f9b3 3000 	ldrsh.w	r3, [r3]
900182cc:	f8ad 2004 	strh.w	r2, [sp, #4]
900182d0:	f8ad 3006 	strh.w	r3, [sp, #6]
900182d4:	6803      	ldr	r3, [r0, #0]
900182d6:	689b      	ldr	r3, [r3, #8]
900182d8:	4798      	blx	r3
900182da:	b003      	add	sp, #12
900182dc:	f85d fb04 	ldr.w	pc, [sp], #4
900182e0:	24021980 	.word	0x24021980
900182e4:	24021982 	.word	0x24021982

900182e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
900182e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900182ec:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
900182f0:	b089      	sub	sp, #36	@ 0x24
900182f2:	4680      	mov	r8, r0
900182f4:	460c      	mov	r4, r1
900182f6:	2b00      	cmp	r3, #0
900182f8:	4615      	mov	r5, r2
900182fa:	dd0e      	ble.n	9001831a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900182fc:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
90018300:	2b00      	cmp	r3, #0
90018302:	dd0a      	ble.n	9001831a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
90018304:	4628      	mov	r0, r5
90018306:	f7ff ff5b 	bl	900181c0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
9001830a:	4621      	mov	r1, r4
9001830c:	f7fd fe67 	bl	90015fde <_ZNK8touchgfx4Rect9intersectERKS0_>
90018310:	69eb      	ldr	r3, [r5, #28]
90018312:	b928      	cbnz	r0, 90018320 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
90018314:	461d      	mov	r5, r3
90018316:	2b00      	cmp	r3, #0
90018318:	d1f4      	bne.n	90018304 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
9001831a:	b009      	add	sp, #36	@ 0x24
9001831c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90018320:	ae04      	add	r6, sp, #16
90018322:	2b00      	cmp	r3, #0
90018324:	f000 80b5 	beq.w	90018492 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90018328:	682b      	ldr	r3, [r5, #0]
9001832a:	4629      	mov	r1, r5
9001832c:	a802      	add	r0, sp, #8
9001832e:	68db      	ldr	r3, [r3, #12]
90018330:	4798      	blx	r3
90018332:	4628      	mov	r0, r5
90018334:	f7ff ff60 	bl	900181f8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
90018338:	f8bd 7008 	ldrh.w	r7, [sp, #8]
9001833c:	4407      	add	r7, r0
9001833e:	4628      	mov	r0, r5
90018340:	f7ff ff6e 	bl	90018220 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
90018344:	f8bd 300a 	ldrh.w	r3, [sp, #10]
90018348:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
9001834c:	b23f      	sxth	r7, r7
9001834e:	4418      	add	r0, r3
90018350:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
90018354:	4621      	mov	r1, r4
90018356:	f8ad 2014 	strh.w	r2, [sp, #20]
9001835a:	f8ad 0012 	strh.w	r0, [sp, #18]
9001835e:	4630      	mov	r0, r6
90018360:	f8ad 3016 	strh.w	r3, [sp, #22]
90018364:	f8ad 7010 	strh.w	r7, [sp, #16]
90018368:	f7f7 ff16 	bl	90010198 <_ZN8touchgfx4RectaNERKS0_>
9001836c:	4628      	mov	r0, r5
9001836e:	f7ff ff27 	bl	900181c0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90018372:	ab06      	add	r3, sp, #24
90018374:	4602      	mov	r2, r0
90018376:	e896 0003 	ldmia.w	r6, {r0, r1}
9001837a:	e883 0003 	stmia.w	r3, {r0, r1}
9001837e:	4611      	mov	r1, r2
90018380:	4618      	mov	r0, r3
90018382:	f7f7 ff09 	bl	90010198 <_ZN8touchgfx4RectaNERKS0_>
90018386:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9001838a:	f9b4 1000 	ldrsh.w	r1, [r4]
9001838e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
90018392:	4299      	cmp	r1, r3
90018394:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
90018398:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
9001839c:	d10b      	bne.n	900183b6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
9001839e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
900183a2:	4552      	cmp	r2, sl
900183a4:	d107      	bne.n	900183b6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
900183a6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
900183aa:	455a      	cmp	r2, fp
900183ac:	d103      	bne.n	900183b6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
900183ae:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
900183b2:	454a      	cmp	r2, r9
900183b4:	d06d      	beq.n	90018492 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
900183b6:	f1bb 0f00 	cmp.w	fp, #0
900183ba:	dd65      	ble.n	90018488 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
900183bc:	f1b9 0f00 	cmp.w	r9, #0
900183c0:	dd62      	ble.n	90018488 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
900183c2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
900183c6:	fa1f f08a 	uxth.w	r0, sl
900183ca:	4552      	cmp	r2, sl
900183cc:	9000      	str	r0, [sp, #0]
900183ce:	da12      	bge.n	900183f6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
900183d0:	9301      	str	r3, [sp, #4]
900183d2:	9b00      	ldr	r3, [sp, #0]
900183d4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
900183d8:	f8ad 2012 	strh.w	r2, [sp, #18]
900183dc:	1a9a      	subs	r2, r3, r2
900183de:	f8ad 1010 	strh.w	r1, [sp, #16]
900183e2:	4631      	mov	r1, r6
900183e4:	f8ad 0014 	strh.w	r0, [sp, #20]
900183e8:	4640      	mov	r0, r8
900183ea:	f8ad 2016 	strh.w	r2, [sp, #22]
900183ee:	69ea      	ldr	r2, [r5, #28]
900183f0:	f7ff ff7a 	bl	900182e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
900183f4:	9b01      	ldr	r3, [sp, #4]
900183f6:	f9b4 2000 	ldrsh.w	r2, [r4]
900183fa:	b29f      	uxth	r7, r3
900183fc:	429a      	cmp	r2, r3
900183fe:	da0d      	bge.n	9001841c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
90018400:	f8ad 2010 	strh.w	r2, [sp, #16]
90018404:	1aba      	subs	r2, r7, r2
90018406:	f8ad a012 	strh.w	sl, [sp, #18]
9001840a:	4631      	mov	r1, r6
9001840c:	f8ad 2014 	strh.w	r2, [sp, #20]
90018410:	4640      	mov	r0, r8
90018412:	f8ad 9016 	strh.w	r9, [sp, #22]
90018416:	69ea      	ldr	r2, [r5, #28]
90018418:	f7ff ff66 	bl	900182e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001841c:	8822      	ldrh	r2, [r4, #0]
9001841e:	445f      	add	r7, fp
90018420:	88a3      	ldrh	r3, [r4, #4]
90018422:	b2bf      	uxth	r7, r7
90018424:	4413      	add	r3, r2
90018426:	b23a      	sxth	r2, r7
90018428:	b29b      	uxth	r3, r3
9001842a:	b219      	sxth	r1, r3
9001842c:	4291      	cmp	r1, r2
9001842e:	dd0d      	ble.n	9001844c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
90018430:	1bdb      	subs	r3, r3, r7
90018432:	f8ad 2010 	strh.w	r2, [sp, #16]
90018436:	f8ad a012 	strh.w	sl, [sp, #18]
9001843a:	4631      	mov	r1, r6
9001843c:	f8ad 3014 	strh.w	r3, [sp, #20]
90018440:	4640      	mov	r0, r8
90018442:	f8ad 9016 	strh.w	r9, [sp, #22]
90018446:	69ea      	ldr	r2, [r5, #28]
90018448:	f7ff ff4e 	bl	900182e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001844c:	88e2      	ldrh	r2, [r4, #6]
9001844e:	8863      	ldrh	r3, [r4, #2]
90018450:	4413      	add	r3, r2
90018452:	9a00      	ldr	r2, [sp, #0]
90018454:	444a      	add	r2, r9
90018456:	b29b      	uxth	r3, r3
90018458:	fa1f f982 	uxth.w	r9, r2
9001845c:	b219      	sxth	r1, r3
9001845e:	fa0f f289 	sxth.w	r2, r9
90018462:	428a      	cmp	r2, r1
90018464:	da15      	bge.n	90018492 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
90018466:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001846a:	eba3 0309 	sub.w	r3, r3, r9
9001846e:	f9b4 0000 	ldrsh.w	r0, [r4]
90018472:	f8ad 1014 	strh.w	r1, [sp, #20]
90018476:	4631      	mov	r1, r6
90018478:	f8ad 0010 	strh.w	r0, [sp, #16]
9001847c:	f8ad 2012 	strh.w	r2, [sp, #18]
90018480:	f8ad 3016 	strh.w	r3, [sp, #22]
90018484:	69ea      	ldr	r2, [r5, #28]
90018486:	e001      	b.n	9001848c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
90018488:	69ea      	ldr	r2, [r5, #28]
9001848a:	4621      	mov	r1, r4
9001848c:	4640      	mov	r0, r8
9001848e:	f7ff ff2b 	bl	900182e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
90018492:	4628      	mov	r0, r5
90018494:	f7ff fe94 	bl	900181c0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
90018498:	6861      	ldr	r1, [r4, #4]
9001849a:	4602      	mov	r2, r0
9001849c:	4633      	mov	r3, r6
9001849e:	6820      	ldr	r0, [r4, #0]
900184a0:	c303      	stmia	r3!, {r0, r1}
900184a2:	4611      	mov	r1, r2
900184a4:	4630      	mov	r0, r6
900184a6:	f7f7 fe77 	bl	90010198 <_ZN8touchgfx4RectaNERKS0_>
900184aa:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
900184ae:	2b00      	cmp	r3, #0
900184b0:	f77f af33 	ble.w	9001831a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900184b4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
900184b8:	2b00      	cmp	r3, #0
900184ba:	f77f af2e 	ble.w	9001831a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
900184be:	4628      	mov	r0, r5
900184c0:	f7ff fe9a 	bl	900181f8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
900184c4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
900184c8:	1a18      	subs	r0, r3, r0
900184ca:	f8ad 0010 	strh.w	r0, [sp, #16]
900184ce:	4628      	mov	r0, r5
900184d0:	f7ff fea6 	bl	90018220 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
900184d4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
900184d8:	4631      	mov	r1, r6
900184da:	1a18      	subs	r0, r3, r0
900184dc:	f8ad 0012 	strh.w	r0, [sp, #18]
900184e0:	4628      	mov	r0, r5
900184e2:	682b      	ldr	r3, [r5, #0]
900184e4:	689b      	ldr	r3, [r3, #8]
900184e6:	4798      	blx	r3
900184e8:	e717      	b.n	9001831a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

900184ea <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
900184ea:	b570      	push	{r4, r5, r6, lr}
900184ec:	1d06      	adds	r6, r0, #4
900184ee:	b086      	sub	sp, #24
900184f0:	460c      	mov	r4, r1
900184f2:	2300      	movs	r3, #0
900184f4:	4631      	mov	r1, r6
900184f6:	4605      	mov	r5, r0
900184f8:	a802      	add	r0, sp, #8
900184fa:	9301      	str	r3, [sp, #4]
900184fc:	f7ff f8ec 	bl	900176d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
90018500:	f8bd 3008 	ldrh.w	r3, [sp, #8]
90018504:	8822      	ldrh	r2, [r4, #0]
90018506:	f8bd 100a 	ldrh.w	r1, [sp, #10]
9001850a:	1ad2      	subs	r2, r2, r3
9001850c:	8863      	ldrh	r3, [r4, #2]
9001850e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90018512:	1a5b      	subs	r3, r3, r1
90018514:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90018518:	f8ad 2010 	strh.w	r2, [sp, #16]
9001851c:	aa01      	add	r2, sp, #4
9001851e:	f8ad 0014 	strh.w	r0, [sp, #20]
90018522:	4630      	mov	r0, r6
90018524:	f8ad 1016 	strh.w	r1, [sp, #22]
90018528:	a904      	add	r1, sp, #16
9001852a:	f8ad 3012 	strh.w	r3, [sp, #18]
9001852e:	f7f7 ff0b 	bl	90010348 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
90018532:	9a01      	ldr	r2, [sp, #4]
90018534:	b11a      	cbz	r2, 9001853e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
90018536:	4621      	mov	r1, r4
90018538:	4628      	mov	r0, r5
9001853a:	f7ff fed5 	bl	900182e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
9001853e:	b006      	add	sp, #24
90018540:	bd70      	pop	{r4, r5, r6, pc}

90018542 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
90018542:	4602      	mov	r2, r0
90018544:	b530      	push	{r4, r5, lr}
90018546:	4604      	mov	r4, r0
90018548:	b085      	sub	sp, #20
9001854a:	f852 0f08 	ldr.w	r0, [r2, #8]!
9001854e:	460d      	mov	r5, r1
90018550:	466b      	mov	r3, sp
90018552:	6851      	ldr	r1, [r2, #4]
90018554:	c303      	stmia	r3!, {r0, r1}
90018556:	4629      	mov	r1, r5
90018558:	4668      	mov	r0, sp
9001855a:	f7f7 fe1d 	bl	90010198 <_ZN8touchgfx4RectaNERKS0_>
9001855e:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
90018562:	b12b      	cbz	r3, 90018570 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
90018564:	4669      	mov	r1, sp
90018566:	4620      	mov	r0, r4
90018568:	f7ff ffbf 	bl	900184ea <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
9001856c:	b005      	add	sp, #20
9001856e:	bd30      	pop	{r4, r5, pc}
90018570:	3404      	adds	r4, #4
90018572:	a802      	add	r0, sp, #8
90018574:	4621      	mov	r1, r4
90018576:	f7ff f8af 	bl	900176d8 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
9001857a:	f8bd 3000 	ldrh.w	r3, [sp]
9001857e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
90018582:	4669      	mov	r1, sp
90018584:	4620      	mov	r0, r4
90018586:	1a9b      	subs	r3, r3, r2
90018588:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001858c:	f8ad 3000 	strh.w	r3, [sp]
90018590:	f8bd 3002 	ldrh.w	r3, [sp, #2]
90018594:	1a9b      	subs	r3, r3, r2
90018596:	f8ad 3002 	strh.w	r3, [sp, #2]
9001859a:	f7f7 fe9c 	bl	900102d6 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
9001859e:	e7e5      	b.n	9001856c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

900185a0 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
900185a0:	460b      	mov	r3, r1
900185a2:	680a      	ldr	r2, [r1, #0]
900185a4:	1d01      	adds	r1, r0, #4
900185a6:	6992      	ldr	r2, [r2, #24]
900185a8:	4618      	mov	r0, r3
900185aa:	4710      	bx	r2

900185ac <_ZN8touchgfx12TextProviderC1Ev>:
900185ac:	b538      	push	{r3, r4, r5, lr}
900185ae:	2500      	movs	r5, #0
900185b0:	2302      	movs	r3, #2
900185b2:	4604      	mov	r4, r0
900185b4:	220e      	movs	r2, #14
900185b6:	7403      	strb	r3, [r0, #16]
900185b8:	4629      	mov	r1, r5
900185ba:	6145      	str	r5, [r0, #20]
900185bc:	7605      	strb	r5, [r0, #24]
900185be:	83c5      	strh	r5, [r0, #30]
900185c0:	8405      	strh	r5, [r0, #32]
900185c2:	86c5      	strh	r5, [r0, #54]	@ 0x36
900185c4:	8705      	strh	r5, [r0, #56]	@ 0x38
900185c6:	87c5      	strh	r5, [r0, #62]	@ 0x3e
900185c8:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
900185cc:	e9c0 5500 	strd	r5, r5, [r0]
900185d0:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
900185d4:	304c      	adds	r0, #76	@ 0x4c
900185d6:	f011 fa63 	bl	90029aa0 <memset>
900185da:	2301      	movs	r3, #1
900185dc:	4620      	mov	r0, r4
900185de:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
900185e2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
900185e6:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
900185ea:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
900185ee:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
900185f2:	f7ed f987 	bl	90005904 <_ZN8touchgfx12TextProvider18initializeInternalEv>
900185f6:	4620      	mov	r0, r4
900185f8:	bd38      	pop	{r3, r4, r5, pc}

900185fa <_ZN8touchgfx12TextProvider11endOfStringEv>:
900185fa:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
900185fc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
90018600:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
90018602:	fab0 f080 	clz	r0, r0
90018606:	0940      	lsrs	r0, r0, #5
90018608:	4770      	bx	lr

9001860a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
9001860a:	b530      	push	{r4, r5, lr}
9001860c:	2500      	movs	r5, #0
9001860e:	2401      	movs	r4, #1
90018610:	6843      	ldr	r3, [r0, #4]
90018612:	b913      	cbnz	r3, 9001861a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
90018614:	6803      	ldr	r3, [r0, #0]
90018616:	b313      	cbz	r3, 9001865e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90018618:	6043      	str	r3, [r0, #4]
9001861a:	7e03      	ldrb	r3, [r0, #24]
9001861c:	b143      	cbz	r3, 90018630 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
9001861e:	6943      	ldr	r3, [r0, #20]
90018620:	b12b      	cbz	r3, 9001862e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90018622:	881a      	ldrh	r2, [r3, #0]
90018624:	b11a      	cbz	r2, 9001862e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
90018626:	1c9a      	adds	r2, r3, #2
90018628:	6142      	str	r2, [r0, #20]
9001862a:	8818      	ldrh	r0, [r3, #0]
9001862c:	bd30      	pop	{r4, r5, pc}
9001862e:	7605      	strb	r5, [r0, #24]
90018630:	6843      	ldr	r3, [r0, #4]
90018632:	8819      	ldrh	r1, [r3, #0]
90018634:	b199      	cbz	r1, 9001865e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
90018636:	1c9a      	adds	r2, r3, #2
90018638:	2902      	cmp	r1, #2
9001863a:	6042      	str	r2, [r0, #4]
9001863c:	d1f5      	bne.n	9001862a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
9001863e:	7c03      	ldrb	r3, [r0, #16]
90018640:	2b01      	cmp	r3, #1
90018642:	d8e5      	bhi.n	90018610 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90018644:	1c5a      	adds	r2, r3, #1
90018646:	3302      	adds	r3, #2
90018648:	7402      	strb	r2, [r0, #16]
9001864a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
9001864e:	6143      	str	r3, [r0, #20]
90018650:	2b00      	cmp	r3, #0
90018652:	d0dd      	beq.n	90018610 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
90018654:	881b      	ldrh	r3, [r3, #0]
90018656:	2b00      	cmp	r3, #0
90018658:	d0da      	beq.n	90018610 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001865a:	7604      	strb	r4, [r0, #24]
9001865c:	e7d8      	b.n	90018610 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
9001865e:	2000      	movs	r0, #0
90018660:	e7e4      	b.n	9001862c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

90018662 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
90018662:	6001      	str	r1, [r0, #0]
90018664:	2100      	movs	r1, #0
90018666:	b430      	push	{r4, r5}
90018668:	6041      	str	r1, [r0, #4]
9001866a:	6815      	ldr	r5, [r2, #0]
9001866c:	6085      	str	r5, [r0, #8]
9001866e:	6852      	ldr	r2, [r2, #4]
90018670:	6443      	str	r3, [r0, #68]	@ 0x44
90018672:	9b02      	ldr	r3, [sp, #8]
90018674:	60c2      	str	r2, [r0, #12]
90018676:	7401      	strb	r1, [r0, #16]
90018678:	6141      	str	r1, [r0, #20]
9001867a:	7601      	strb	r1, [r0, #24]
9001867c:	8701      	strh	r1, [r0, #56]	@ 0x38
9001867e:	8401      	strh	r1, [r0, #32]
90018680:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
90018684:	6483      	str	r3, [r0, #72]	@ 0x48
90018686:	bc30      	pop	{r4, r5}
90018688:	f7ed b93c 	b.w	90005904 <_ZN8touchgfx12TextProvider18initializeInternalEv>

9001868c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
9001868c:	b408      	push	{r3}
9001868e:	b510      	push	{r4, lr}
90018690:	b085      	sub	sp, #20
90018692:	ac07      	add	r4, sp, #28
90018694:	f854 3b04 	ldr.w	r3, [r4], #4
90018698:	9300      	str	r3, [sp, #0]
9001869a:	4613      	mov	r3, r2
9001869c:	4622      	mov	r2, r4
9001869e:	9403      	str	r4, [sp, #12]
900186a0:	f7ff ffdf 	bl	90018662 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
900186a4:	b005      	add	sp, #20
900186a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900186aa:	b001      	add	sp, #4
900186ac:	4770      	bx	lr

900186ae <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
900186ae:	b5f0      	push	{r4, r5, r6, r7, lr}
900186b0:	4605      	mov	r5, r0
900186b2:	4608      	mov	r0, r1
900186b4:	b1f1      	cbz	r1, 900186f4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
900186b6:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
900186ba:	460b      	mov	r3, r1
900186bc:	f101 0708 	add.w	r7, r1, #8
900186c0:	4622      	mov	r2, r4
900186c2:	6818      	ldr	r0, [r3, #0]
900186c4:	3308      	adds	r3, #8
900186c6:	f853 1c04 	ldr.w	r1, [r3, #-4]
900186ca:	4626      	mov	r6, r4
900186cc:	42bb      	cmp	r3, r7
900186ce:	c603      	stmia	r6!, {r0, r1}
900186d0:	4634      	mov	r4, r6
900186d2:	d1f6      	bne.n	900186c2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
900186d4:	6818      	ldr	r0, [r3, #0]
900186d6:	6030      	str	r0, [r6, #0]
900186d8:	4610      	mov	r0, r2
900186da:	889b      	ldrh	r3, [r3, #4]
900186dc:	80b3      	strh	r3, [r6, #4]
900186de:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
900186e2:	015b      	lsls	r3, r3, #5
900186e4:	f403 7180 	and.w	r1, r3, #256	@ 0x100
900186e8:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
900186ec:	430b      	orrs	r3, r1
900186ee:	425b      	negs	r3, r3
900186f0:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
900186f4:	bdf0      	pop	{r4, r5, r6, r7, pc}

900186f6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
900186f6:	b538      	push	{r3, r4, r5, lr}
900186f8:	460c      	mov	r4, r1
900186fa:	6811      	ldr	r1, [r2, #0]
900186fc:	4610      	mov	r0, r2
900186fe:	68cd      	ldr	r5, [r1, #12]
90018700:	4619      	mov	r1, r3
90018702:	47a8      	blx	r5
90018704:	2800      	cmp	r0, #0
90018706:	bf08      	it	eq
90018708:	4620      	moveq	r0, r4
9001870a:	bd38      	pop	{r3, r4, r5, pc}

9001870c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
9001870c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90018710:	468c      	mov	ip, r1
90018712:	4605      	mov	r5, r0
90018714:	4614      	mov	r4, r2
90018716:	b942      	cbnz	r2, 9001872a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
90018718:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
9001871c:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
90018720:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
90018724:	4620      	mov	r0, r4
90018726:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9001872a:	7b50      	ldrb	r0, [r2, #13]
9001872c:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
90018730:	8893      	ldrh	r3, [r2, #4]
90018732:	0106      	lsls	r6, r0, #4
90018734:	f406 7280 	and.w	r2, r6, #256	@ 0x100
90018738:	79e6      	ldrb	r6, [r4, #7]
9001873a:	4316      	orrs	r6, r2
9001873c:	185a      	adds	r2, r3, r1
9001873e:	b291      	uxth	r1, r2
90018740:	b2b7      	uxth	r7, r6
90018742:	291d      	cmp	r1, #29
90018744:	d87f      	bhi.n	90018846 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
90018746:	2201      	movs	r2, #1
90018748:	10f6      	asrs	r6, r6, #3
9001874a:	408a      	lsls	r2, r1
9001874c:	498b      	ldr	r1, [pc, #556]	@ (9001897c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x270>)
9001874e:	420a      	tst	r2, r1
90018750:	d12e      	bne.n	900187b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
90018752:	f412 7f60 	tst.w	r2, #896	@ 0x380
90018756:	d076      	beq.n	90018846 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
90018758:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
9001875c:	4623      	mov	r3, r4
9001875e:	f104 0e08 	add.w	lr, r4, #8
90018762:	4614      	mov	r4, r2
90018764:	6818      	ldr	r0, [r3, #0]
90018766:	3308      	adds	r3, #8
90018768:	f853 1c04 	ldr.w	r1, [r3, #-4]
9001876c:	4694      	mov	ip, r2
9001876e:	4573      	cmp	r3, lr
90018770:	e8ac 0003 	stmia.w	ip!, {r0, r1}
90018774:	4662      	mov	r2, ip
90018776:	d1f5      	bne.n	90018764 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
90018778:	6818      	ldr	r0, [r3, #0]
9001877a:	f8cc 0000 	str.w	r0, [ip]
9001877e:	889b      	ldrh	r3, [r3, #4]
90018780:	f8ac 3004 	strh.w	r3, [ip, #4]
90018784:	b2b3      	uxth	r3, r6
90018786:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
9001878a:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
9001878e:	1aca      	subs	r2, r1, r3
90018790:	1bcf      	subs	r7, r1, r7
90018792:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
90018796:	b292      	uxth	r2, r2
90018798:	1afb      	subs	r3, r7, r3
9001879a:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
9001879e:	10d2      	asrs	r2, r2, #3
900187a0:	f002 0260 	and.w	r2, r2, #96	@ 0x60
900187a4:	4302      	orrs	r2, r0
900187a6:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
900187aa:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
900187ae:	e7b9      	b.n	90018724 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
900187b0:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
900187b4:	4623      	mov	r3, r4
900187b6:	f104 0808 	add.w	r8, r4, #8
900187ba:	4614      	mov	r4, r2
900187bc:	6818      	ldr	r0, [r3, #0]
900187be:	3308      	adds	r3, #8
900187c0:	f853 1c04 	ldr.w	r1, [r3, #-4]
900187c4:	4696      	mov	lr, r2
900187c6:	4543      	cmp	r3, r8
900187c8:	e8ae 0003 	stmia.w	lr!, {r0, r1}
900187cc:	4672      	mov	r2, lr
900187ce:	d1f5      	bne.n	900187bc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
900187d0:	6818      	ldr	r0, [r3, #0]
900187d2:	f8ce 0000 	str.w	r0, [lr]
900187d6:	889b      	ldrh	r3, [r3, #4]
900187d8:	f8ae 3004 	strh.w	r3, [lr, #4]
900187dc:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
900187de:	eb05 0343 	add.w	r3, r5, r3, lsl #1
900187e2:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
900187e4:	f640 6333 	movw	r3, #3635	@ 0xe33
900187e8:	4299      	cmp	r1, r3
900187ea:	d111      	bne.n	90018810 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x104>
900187ec:	f8dc 3000 	ldr.w	r3, [ip]
900187f0:	4660      	mov	r0, ip
900187f2:	68db      	ldr	r3, [r3, #12]
900187f4:	4798      	blx	r3
900187f6:	7b41      	ldrb	r1, [r0, #13]
900187f8:	00cb      	lsls	r3, r1, #3
900187fa:	f403 7280 	and.w	r2, r3, #256	@ 0x100
900187fe:	7a03      	ldrb	r3, [r0, #8]
90018800:	4313      	orrs	r3, r2
90018802:	064a      	lsls	r2, r1, #25
90018804:	bf44      	itt	mi
90018806:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
9001880a:	b21b      	sxthmi	r3, r3
9001880c:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
90018810:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
90018814:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
90018818:	443b      	add	r3, r7
9001881a:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
9001881e:	4433      	add	r3, r6
90018820:	b29b      	uxth	r3, r3
90018822:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
90018826:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
9001882a:	10db      	asrs	r3, r3, #3
9001882c:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90018830:	4313      	orrs	r3, r2
90018832:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
90018836:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
9001883a:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
9001883e:	1a9b      	subs	r3, r3, r2
90018840:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
90018844:	e76e      	b.n	90018724 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
90018846:	f023 0204 	bic.w	r2, r3, #4
9001884a:	f640 611b 	movw	r1, #3611	@ 0xe1b
9001884e:	428a      	cmp	r2, r1
90018850:	d003      	beq.n	9001885a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14e>
90018852:	f640 621d 	movw	r2, #3613	@ 0xe1d
90018856:	4293      	cmp	r3, r2
90018858:	d138      	bne.n	900188cc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1c0>
9001885a:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
9001885e:	4622      	mov	r2, r4
90018860:	f104 0808 	add.w	r8, r4, #8
90018864:	4634      	mov	r4, r6
90018866:	6810      	ldr	r0, [r2, #0]
90018868:	3208      	adds	r2, #8
9001886a:	f852 1c04 	ldr.w	r1, [r2, #-4]
9001886e:	46b6      	mov	lr, r6
90018870:	4542      	cmp	r2, r8
90018872:	e8ae 0003 	stmia.w	lr!, {r0, r1}
90018876:	4676      	mov	r6, lr
90018878:	d1f5      	bne.n	90018866 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x15a>
9001887a:	6810      	ldr	r0, [r2, #0]
9001887c:	3b01      	subs	r3, #1
9001887e:	4621      	mov	r1, r4
90018880:	f8ce 0000 	str.w	r0, [lr]
90018884:	b29b      	uxth	r3, r3
90018886:	8892      	ldrh	r2, [r2, #4]
90018888:	4628      	mov	r0, r5
9001888a:	f8ae 2004 	strh.w	r2, [lr, #4]
9001888e:	4662      	mov	r2, ip
90018890:	f7ff ff31 	bl	900186f6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
90018894:	7b41      	ldrb	r1, [r0, #13]
90018896:	00cb      	lsls	r3, r1, #3
90018898:	f403 7280 	and.w	r2, r3, #256	@ 0x100
9001889c:	7a03      	ldrb	r3, [r0, #8]
9001889e:	0648      	lsls	r0, r1, #25
900188a0:	ea43 0302 	orr.w	r3, r3, r2
900188a4:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
900188a8:	bf44      	itt	mi
900188aa:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
900188ae:	b21b      	sxthmi	r3, r3
900188b0:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
900188b4:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
900188b8:	005b      	lsls	r3, r3, #1
900188ba:	f403 7380 	and.w	r3, r3, #256	@ 0x100
900188be:	4313      	orrs	r3, r2
900188c0:	115a      	asrs	r2, r3, #5
900188c2:	eb02 0393 	add.w	r3, r2, r3, lsr #2
900188c6:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
900188ca:	e047      	b.n	9001895c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x250>
900188cc:	00c2      	lsls	r2, r0, #3
900188ce:	f402 7180 	and.w	r1, r2, #256	@ 0x100
900188d2:	7a22      	ldrb	r2, [r4, #8]
900188d4:	430a      	orrs	r2, r1
900188d6:	0641      	lsls	r1, r0, #25
900188d8:	f640 6109 	movw	r1, #3593	@ 0xe09
900188dc:	bf44      	itt	mi
900188de:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
900188e2:	b212      	sxthmi	r2, r2
900188e4:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
900188e8:	f023 0210 	bic.w	r2, r3, #16
900188ec:	428a      	cmp	r2, r1
900188ee:	d003      	beq.n	900188f8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ec>
900188f0:	f640 6213 	movw	r2, #3603	@ 0xe13
900188f4:	4293      	cmp	r3, r2
900188f6:	d13e      	bne.n	90018976 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x26a>
900188f8:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
900188fc:	f104 0808 	add.w	r8, r4, #8
90018900:	4696      	mov	lr, r2
90018902:	6820      	ldr	r0, [r4, #0]
90018904:	3408      	adds	r4, #8
90018906:	f854 1c04 	ldr.w	r1, [r4, #-4]
9001890a:	4616      	mov	r6, r2
9001890c:	4544      	cmp	r4, r8
9001890e:	c603      	stmia	r6!, {r0, r1}
90018910:	4632      	mov	r2, r6
90018912:	d1f6      	bne.n	90018902 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f6>
90018914:	6820      	ldr	r0, [r4, #0]
90018916:	6030      	str	r0, [r6, #0]
90018918:	4628      	mov	r0, r5
9001891a:	88a1      	ldrh	r1, [r4, #4]
9001891c:	4674      	mov	r4, lr
9001891e:	80b1      	strh	r1, [r6, #4]
90018920:	4671      	mov	r1, lr
90018922:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
90018926:	0076      	lsls	r6, r6, #1
90018928:	f406 7280 	and.w	r2, r6, #256	@ 0x100
9001892c:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
90018930:	4316      	orrs	r6, r2
90018932:	f640 6213 	movw	r2, #3603	@ 0xe13
90018936:	4293      	cmp	r3, r2
90018938:	4662      	mov	r2, ip
9001893a:	bf16      	itet	ne
9001893c:	f103 33ff 	addne.w	r3, r3, #4294967295
90018940:	f640 630c 	movweq	r3, #3596	@ 0xe0c
90018944:	b29b      	uxthne	r3, r3
90018946:	f7ff fed6 	bl	900186f6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
9001894a:	7b43      	ldrb	r3, [r0, #13]
9001894c:	7a82      	ldrb	r2, [r0, #10]
9001894e:	005b      	lsls	r3, r3, #1
90018950:	f403 7380 	and.w	r3, r3, #256	@ 0x100
90018954:	4313      	orrs	r3, r2
90018956:	1af6      	subs	r6, r6, r3
90018958:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
9001895c:	7b61      	ldrb	r1, [r4, #13]
9001895e:	00cb      	lsls	r3, r1, #3
90018960:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90018964:	7a23      	ldrb	r3, [r4, #8]
90018966:	4313      	orrs	r3, r2
90018968:	064a      	lsls	r2, r1, #25
9001896a:	bf44      	itt	mi
9001896c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90018970:	b21b      	sxthmi	r3, r3
90018972:	1bdb      	subs	r3, r3, r7
90018974:	e719      	b.n	900187aa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
90018976:	2300      	movs	r3, #0
90018978:	e7a5      	b.n	900188c6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ba>
9001897a:	bf00      	nop
9001897c:	3fc00079 	.word	0x3fc00079

90018980 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
90018980:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
90018984:	4604      	mov	r4, r0
90018986:	b942      	cbnz	r2, 9001899a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
90018988:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001898c:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
90018990:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
90018994:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
90018998:	e047      	b.n	90018a2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
9001899a:	7b51      	ldrb	r1, [r2, #13]
9001899c:	8893      	ldrh	r3, [r2, #4]
9001899e:	010d      	lsls	r5, r1, #4
900189a0:	f405 7080 	and.w	r0, r5, #256	@ 0x100
900189a4:	79d5      	ldrb	r5, [r2, #7]
900189a6:	4305      	orrs	r5, r0
900189a8:	2d04      	cmp	r5, #4
900189aa:	bfcc      	ite	gt
900189ac:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
900189b0:	f04f 0e01 	movle.w	lr, #1
900189b4:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
900189b8:	f200 80ab 	bhi.w	90018b12 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
900189bc:	f240 60e7 	movw	r0, #1767	@ 0x6e7
900189c0:	4283      	cmp	r3, r0
900189c2:	d216      	bcs.n	900189f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900189c4:	f240 605b 	movw	r0, #1627	@ 0x65b
900189c8:	4283      	cmp	r3, r0
900189ca:	d859      	bhi.n	90018a80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
900189cc:	f240 6057 	movw	r0, #1623	@ 0x657
900189d0:	4283      	cmp	r3, r0
900189d2:	d20e      	bcs.n	900189f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900189d4:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
900189d8:	d24a      	bcs.n	90018a70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
900189da:	f240 604e 	movw	r0, #1614	@ 0x64e
900189de:	4283      	cmp	r3, r0
900189e0:	d207      	bcs.n	900189f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
900189e2:	f240 601a 	movw	r0, #1562	@ 0x61a
900189e6:	4283      	cmp	r3, r0
900189e8:	d02a      	beq.n	90018a40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
900189ea:	d821      	bhi.n	90018a30 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
900189ec:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
900189f0:	d35b      	bcc.n	90018aaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
900189f2:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
900189f6:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
900189fa:	f040 80d0 	bne.w	90018b9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
900189fe:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
90018a02:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90018a06:	f040 80ca 	bne.w	90018b9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
90018a0a:	00cb      	lsls	r3, r1, #3
90018a0c:	0649      	lsls	r1, r1, #25
90018a0e:	f403 7080 	and.w	r0, r3, #256	@ 0x100
90018a12:	7a13      	ldrb	r3, [r2, #8]
90018a14:	ea43 0300 	orr.w	r3, r3, r0
90018a18:	bf44      	itt	mi
90018a1a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90018a1e:	b21b      	sxthmi	r3, r3
90018a20:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90018a24:	1b5d      	subs	r5, r3, r5
90018a26:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90018a2a:	4610      	mov	r0, r2
90018a2c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90018a30:	f240 604b 	movw	r0, #1611	@ 0x64b
90018a34:	4283      	cmp	r3, r0
90018a36:	d338      	bcc.n	90018aaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90018a38:	f240 604c 	movw	r0, #1612	@ 0x64c
90018a3c:	4283      	cmp	r3, r0
90018a3e:	d9d8      	bls.n	900189f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018a40:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
90018a44:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
90018a48:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90018a4c:	f040 80f3 	bne.w	90018c36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90018a50:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90018a54:	f040 80ef 	bne.w	90018c36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
90018a58:	00cb      	lsls	r3, r1, #3
90018a5a:	064e      	lsls	r6, r1, #25
90018a5c:	f403 7080 	and.w	r0, r3, #256	@ 0x100
90018a60:	7a13      	ldrb	r3, [r2, #8]
90018a62:	ea43 0300 	orr.w	r3, r3, r0
90018a66:	bf44      	itt	mi
90018a68:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90018a6c:	b21b      	sxthmi	r3, r3
90018a6e:	e7d9      	b.n	90018a24 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
90018a70:	f240 6054 	movw	r0, #1620	@ 0x654
90018a74:	4283      	cmp	r3, r0
90018a76:	d8e3      	bhi.n	90018a40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018a78:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
90018a7c:	d9e0      	bls.n	90018a40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018a7e:	e7b8      	b.n	900189f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018a80:	f240 6074 	movw	r0, #1652	@ 0x674
90018a84:	4283      	cmp	r3, r0
90018a86:	d0b4      	beq.n	900189f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018a88:	d82d      	bhi.n	90018ae6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
90018a8a:	f240 605e 	movw	r0, #1630	@ 0x65e
90018a8e:	4283      	cmp	r3, r0
90018a90:	d804      	bhi.n	90018a9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
90018a92:	f240 605d 	movw	r0, #1629	@ 0x65d
90018a96:	4283      	cmp	r3, r0
90018a98:	d3d2      	bcc.n	90018a40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018a9a:	e7aa      	b.n	900189f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018a9c:	f240 605f 	movw	r0, #1631	@ 0x65f
90018aa0:	4283      	cmp	r3, r0
90018aa2:	d0cd      	beq.n	90018a40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018aa4:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
90018aa8:	d0a3      	beq.n	900189f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018aaa:	00cb      	lsls	r3, r1, #3
90018aac:	0649      	lsls	r1, r1, #25
90018aae:	f403 7080 	and.w	r0, r3, #256	@ 0x100
90018ab2:	7a13      	ldrb	r3, [r2, #8]
90018ab4:	ea43 0300 	orr.w	r3, r3, r0
90018ab8:	bf44      	itt	mi
90018aba:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90018abe:	b21b      	sxthmi	r3, r3
90018ac0:	1b5d      	subs	r5, r3, r5
90018ac2:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90018ac6:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90018aca:	7b53      	ldrb	r3, [r2, #13]
90018acc:	015b      	lsls	r3, r3, #5
90018ace:	f403 7180 	and.w	r1, r3, #256	@ 0x100
90018ad2:	7993      	ldrb	r3, [r2, #6]
90018ad4:	430b      	orrs	r3, r1
90018ad6:	2105      	movs	r1, #5
90018ad8:	005b      	lsls	r3, r3, #1
90018ada:	fb93 f3f1 	sdiv	r3, r3, r1
90018ade:	f992 1009 	ldrsb.w	r1, [r2, #9]
90018ae2:	440b      	add	r3, r1
90018ae4:	e756      	b.n	90018994 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
90018ae6:	f240 60e2 	movw	r0, #1762	@ 0x6e2
90018aea:	4283      	cmp	r3, r0
90018aec:	d809      	bhi.n	90018b02 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
90018aee:	f240 60df 	movw	r0, #1759	@ 0x6df
90018af2:	4283      	cmp	r3, r0
90018af4:	f4bf af7d 	bcs.w	900189f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018af8:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
90018afc:	2b05      	cmp	r3, #5
90018afe:	d8d4      	bhi.n	90018aaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90018b00:	e777      	b.n	900189f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018b02:	f240 60e3 	movw	r0, #1763	@ 0x6e3
90018b06:	4283      	cmp	r3, r0
90018b08:	d09a      	beq.n	90018a40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018b0a:	f240 60e4 	movw	r0, #1764	@ 0x6e4
90018b0e:	4283      	cmp	r3, r0
90018b10:	e7ca      	b.n	90018aa8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
90018b12:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
90018b16:	d22b      	bcs.n	90018b70 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
90018b18:	f640 00ed 	movw	r0, #2285	@ 0x8ed
90018b1c:	4283      	cmp	r3, r0
90018b1e:	d28f      	bcs.n	90018a40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018b20:	f640 00e5 	movw	r0, #2277	@ 0x8e5
90018b24:	4283      	cmp	r3, r0
90018b26:	d816      	bhi.n	90018b56 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
90018b28:	f640 00e4 	movw	r0, #2276	@ 0x8e4
90018b2c:	4283      	cmp	r3, r0
90018b2e:	f4bf af60 	bcs.w	900189f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018b32:	f240 60ec 	movw	r0, #1772	@ 0x6ec
90018b36:	4283      	cmp	r3, r0
90018b38:	d80a      	bhi.n	90018b50 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
90018b3a:	f240 60eb 	movw	r0, #1771	@ 0x6eb
90018b3e:	4283      	cmp	r3, r0
90018b40:	f4bf af57 	bcs.w	900189f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018b44:	f240 60ea 	movw	r0, #1770	@ 0x6ea
90018b48:	4283      	cmp	r3, r0
90018b4a:	f43f af79 	beq.w	90018a40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018b4e:	e7ac      	b.n	90018aaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
90018b50:	f240 60ed 	movw	r0, #1773	@ 0x6ed
90018b54:	e7f8      	b.n	90018b48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
90018b56:	f640 00e8 	movw	r0, #2280	@ 0x8e8
90018b5a:	4283      	cmp	r3, r0
90018b5c:	d802      	bhi.n	90018b64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
90018b5e:	f640 00e7 	movw	r0, #2279	@ 0x8e7
90018b62:	e798      	b.n	90018a96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
90018b64:	f640 00e9 	movw	r0, #2281	@ 0x8e9
90018b68:	4283      	cmp	r3, r0
90018b6a:	f47f af42 	bne.w	900189f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018b6e:	e767      	b.n	90018a40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018b70:	f640 00f6 	movw	r0, #2294	@ 0x8f6
90018b74:	4283      	cmp	r3, r0
90018b76:	f43f af63 	beq.w	90018a40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018b7a:	d802      	bhi.n	90018b82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
90018b7c:	f640 00f2 	movw	r0, #2290	@ 0x8f2
90018b80:	e7f2      	b.n	90018b68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
90018b82:	f640 00fa 	movw	r0, #2298	@ 0x8fa
90018b86:	4283      	cmp	r3, r0
90018b88:	d805      	bhi.n	90018b96 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
90018b8a:	f640 00f9 	movw	r0, #2297	@ 0x8f9
90018b8e:	4283      	cmp	r3, r0
90018b90:	f4ff af2f 	bcc.w	900189f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
90018b94:	e754      	b.n	90018a40 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
90018b96:	f640 00fe 	movw	r0, #2302	@ 0x8fe
90018b9a:	4283      	cmp	r3, r0
90018b9c:	e7af      	b.n	90018afe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
90018b9e:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
90018ba2:	4617      	mov	r7, r2
90018ba4:	f102 0808 	add.w	r8, r2, #8
90018ba8:	4666      	mov	r6, ip
90018baa:	6838      	ldr	r0, [r7, #0]
90018bac:	3708      	adds	r7, #8
90018bae:	f857 1c04 	ldr.w	r1, [r7, #-4]
90018bb2:	46e6      	mov	lr, ip
90018bb4:	4547      	cmp	r7, r8
90018bb6:	e8ae 0003 	stmia.w	lr!, {r0, r1}
90018bba:	46f4      	mov	ip, lr
90018bbc:	d1f5      	bne.n	90018baa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
90018bbe:	6838      	ldr	r0, [r7, #0]
90018bc0:	f8ce 0000 	str.w	r0, [lr]
90018bc4:	88b9      	ldrh	r1, [r7, #4]
90018bc6:	f8ae 1004 	strh.w	r1, [lr, #4]
90018bca:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
90018bce:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90018bd2:	d009      	beq.n	90018be8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
90018bd4:	7b51      	ldrb	r1, [r2, #13]
90018bd6:	7992      	ldrb	r2, [r2, #6]
90018bd8:	0149      	lsls	r1, r1, #5
90018bda:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90018bde:	4311      	orrs	r1, r2
90018be0:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90018be4:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
90018be8:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90018bec:	b2ad      	uxth	r5, r5
90018bee:	d00d      	beq.n	90018c0c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
90018bf0:	442b      	add	r3, r5
90018bf2:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
90018bf6:	b29b      	uxth	r3, r3
90018bf8:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90018bfc:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
90018c00:	10db      	asrs	r3, r3, #3
90018c02:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90018c06:	4313      	orrs	r3, r2
90018c08:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
90018c0c:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
90018c10:	00cb      	lsls	r3, r1, #3
90018c12:	064f      	lsls	r7, r1, #25
90018c14:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90018c18:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
90018c1c:	ea43 0302 	orr.w	r3, r3, r2
90018c20:	bf44      	itt	mi
90018c22:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90018c26:	b21b      	sxthmi	r3, r3
90018c28:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
90018c2c:	1b5b      	subs	r3, r3, r5
90018c2e:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
90018c32:	4632      	mov	r2, r6
90018c34:	e6f9      	b.n	90018a2a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
90018c36:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
90018c3a:	4617      	mov	r7, r2
90018c3c:	f102 0908 	add.w	r9, r2, #8
90018c40:	4666      	mov	r6, ip
90018c42:	6838      	ldr	r0, [r7, #0]
90018c44:	3708      	adds	r7, #8
90018c46:	f857 1c04 	ldr.w	r1, [r7, #-4]
90018c4a:	46e0      	mov	r8, ip
90018c4c:	454f      	cmp	r7, r9
90018c4e:	e8a8 0003 	stmia.w	r8!, {r0, r1}
90018c52:	46c4      	mov	ip, r8
90018c54:	d1f5      	bne.n	90018c42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
90018c56:	6838      	ldr	r0, [r7, #0]
90018c58:	f8c8 0000 	str.w	r0, [r8]
90018c5c:	88b9      	ldrh	r1, [r7, #4]
90018c5e:	f8a8 1004 	strh.w	r1, [r8, #4]
90018c62:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
90018c66:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
90018c6a:	d009      	beq.n	90018c80 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
90018c6c:	7b51      	ldrb	r1, [r2, #13]
90018c6e:	7992      	ldrb	r2, [r2, #6]
90018c70:	0149      	lsls	r1, r1, #5
90018c72:	f401 7180 	and.w	r1, r1, #256	@ 0x100
90018c76:	4311      	orrs	r1, r2
90018c78:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
90018c7c:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
90018c80:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
90018c84:	d00e      	beq.n	90018ca4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
90018c86:	eba3 030e 	sub.w	r3, r3, lr
90018c8a:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
90018c8e:	b29b      	uxth	r3, r3
90018c90:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
90018c94:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
90018c98:	10db      	asrs	r3, r3, #3
90018c9a:	f003 0360 	and.w	r3, r3, #96	@ 0x60
90018c9e:	4313      	orrs	r3, r2
90018ca0:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
90018ca4:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
90018ca8:	00cb      	lsls	r3, r1, #3
90018caa:	0648      	lsls	r0, r1, #25
90018cac:	f403 7280 	and.w	r2, r3, #256	@ 0x100
90018cb0:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
90018cb4:	ea43 0302 	orr.w	r3, r3, r2
90018cb8:	bf44      	itt	mi
90018cba:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
90018cbe:	b21b      	sxthmi	r3, r3
90018cc0:	1b5d      	subs	r5, r3, r5
90018cc2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
90018cc6:	e7b4      	b.n	90018c32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

90018cc8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
90018cc8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90018ccc:	461e      	mov	r6, r3
90018cce:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90018cd0:	4604      	mov	r4, r0
90018cd2:	4617      	mov	r7, r2
90018cd4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90018cd8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
90018cdc:	f7ec fdc2 	bl	90005864 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90018ce0:	4605      	mov	r5, r0
90018ce2:	b918      	cbnz	r0, 90018cec <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
90018ce4:	6030      	str	r0, [r6, #0]
90018ce6:	4628      	mov	r0, r5
90018ce8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90018cec:	683b      	ldr	r3, [r7, #0]
90018cee:	4601      	mov	r1, r0
90018cf0:	4638      	mov	r0, r7
90018cf2:	68db      	ldr	r3, [r3, #12]
90018cf4:	4798      	blx	r3
90018cf6:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
90018cfa:	4602      	mov	r2, r0
90018cfc:	6030      	str	r0, [r6, #0]
90018cfe:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
90018d02:	d213      	bcs.n	90018d2c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
90018d04:	4643      	mov	r3, r8
90018d06:	4639      	mov	r1, r7
90018d08:	4620      	mov	r0, r4
90018d0a:	f7ff fe39 	bl	90018980 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90018d0e:	6030      	str	r0, [r6, #0]
90018d10:	6833      	ldr	r3, [r6, #0]
90018d12:	b143      	cbz	r3, 90018d26 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
90018d14:	7b5a      	ldrb	r2, [r3, #13]
90018d16:	7a9b      	ldrb	r3, [r3, #10]
90018d18:	0052      	lsls	r2, r2, #1
90018d1a:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90018d1e:	4313      	orrs	r3, r2
90018d20:	bf0c      	ite	eq
90018d22:	2301      	moveq	r3, #1
90018d24:	2300      	movne	r3, #0
90018d26:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
90018d2a:	e7dc      	b.n	90018ce6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
90018d2c:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
90018d30:	b29b      	uxth	r3, r3
90018d32:	2b7f      	cmp	r3, #127	@ 0x7f
90018d34:	d804      	bhi.n	90018d40 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
90018d36:	4639      	mov	r1, r7
90018d38:	4620      	mov	r0, r4
90018d3a:	f7ff fce7 	bl	9001870c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90018d3e:	e7e6      	b.n	90018d0e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
90018d40:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
90018d44:	2b00      	cmp	r3, #0
90018d46:	d0e3      	beq.n	90018d10 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90018d48:	f640 1302 	movw	r3, #2306	@ 0x902
90018d4c:	429d      	cmp	r5, r3
90018d4e:	d1df      	bne.n	90018d10 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
90018d50:	4601      	mov	r1, r0
90018d52:	4620      	mov	r0, r4
90018d54:	f7ff fcab 	bl	900186ae <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90018d58:	e7d9      	b.n	90018d0e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

90018d5a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
90018d5a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90018d5e:	461e      	mov	r6, r3
90018d60:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90018d62:	4604      	mov	r4, r0
90018d64:	4617      	mov	r7, r2
90018d66:	eb00 0343 	add.w	r3, r0, r3, lsl #1
90018d6a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
90018d6e:	f7ec fd79 	bl	90005864 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
90018d72:	4605      	mov	r5, r0
90018d74:	b918      	cbnz	r0, 90018d7e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
90018d76:	6030      	str	r0, [r6, #0]
90018d78:	4628      	mov	r0, r5
90018d7a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90018d7e:	683b      	ldr	r3, [r7, #0]
90018d80:	4601      	mov	r1, r0
90018d82:	4638      	mov	r0, r7
90018d84:	f8d3 9008 	ldr.w	r9, [r3, #8]
90018d88:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
90018d8c:	47c8      	blx	r9
90018d8e:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
90018d92:	4602      	mov	r2, r0
90018d94:	6030      	str	r0, [r6, #0]
90018d96:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
90018d9a:	d213      	bcs.n	90018dc4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
90018d9c:	4643      	mov	r3, r8
90018d9e:	4639      	mov	r1, r7
90018da0:	4620      	mov	r0, r4
90018da2:	f7ff fded 	bl	90018980 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
90018da6:	6030      	str	r0, [r6, #0]
90018da8:	6833      	ldr	r3, [r6, #0]
90018daa:	b143      	cbz	r3, 90018dbe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
90018dac:	7b5a      	ldrb	r2, [r3, #13]
90018dae:	7a9b      	ldrb	r3, [r3, #10]
90018db0:	0052      	lsls	r2, r2, #1
90018db2:	f402 7280 	and.w	r2, r2, #256	@ 0x100
90018db6:	4313      	orrs	r3, r2
90018db8:	bf0c      	ite	eq
90018dba:	2301      	moveq	r3, #1
90018dbc:	2300      	movne	r3, #0
90018dbe:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
90018dc2:	e7d9      	b.n	90018d78 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
90018dc4:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
90018dc8:	b29b      	uxth	r3, r3
90018dca:	2b7f      	cmp	r3, #127	@ 0x7f
90018dcc:	d804      	bhi.n	90018dd8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
90018dce:	4639      	mov	r1, r7
90018dd0:	4620      	mov	r0, r4
90018dd2:	f7ff fc9b 	bl	9001870c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
90018dd6:	e7e6      	b.n	90018da6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
90018dd8:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
90018ddc:	2b00      	cmp	r3, #0
90018dde:	d0e3      	beq.n	90018da8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90018de0:	f640 1302 	movw	r3, #2306	@ 0x902
90018de4:	429d      	cmp	r5, r3
90018de6:	d1df      	bne.n	90018da8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
90018de8:	4601      	mov	r1, r0
90018dea:	4620      	mov	r0, r4
90018dec:	f7ff fc5f 	bl	900186ae <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
90018df0:	e7d9      	b.n	90018da6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

90018df2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
90018df2:	b510      	push	{r4, lr}
90018df4:	4604      	mov	r4, r0
90018df6:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
90018dfa:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90018dfc:	b1e1      	cbz	r1, 90018e38 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90018dfe:	2b0a      	cmp	r3, #10
90018e00:	d02d      	beq.n	90018e5e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
90018e02:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
90018e04:	3901      	subs	r1, #1
90018e06:	eb04 0042 	add.w	r0, r4, r2, lsl #1
90018e0a:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
90018e0c:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
90018e10:	1c51      	adds	r1, r2, #1
90018e12:	b289      	uxth	r1, r1
90018e14:	2901      	cmp	r1, #1
90018e16:	bf8a      	itet	hi
90018e18:	f102 32ff 	addhi.w	r2, r2, #4294967295
90018e1c:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
90018e1e:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
90018e20:	1c5a      	adds	r2, r3, #1
90018e22:	8722      	strh	r2, [r4, #56]	@ 0x38
90018e24:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90018e26:	4413      	add	r3, r2
90018e28:	b29b      	uxth	r3, r3
90018e2a:	2b09      	cmp	r3, #9
90018e2c:	bf88      	it	hi
90018e2e:	3b0a      	subhi	r3, #10
90018e30:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90018e34:	8458      	strh	r0, [r3, #34]	@ 0x22
90018e36:	e7de      	b.n	90018df6 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
90018e38:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90018e3a:	2b0a      	cmp	r3, #10
90018e3c:	d00f      	beq.n	90018e5e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
90018e3e:	4620      	mov	r0, r4
90018e40:	f7ff fbe3 	bl	9001860a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
90018e44:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
90018e46:	1c5a      	adds	r2, r3, #1
90018e48:	8722      	strh	r2, [r4, #56]	@ 0x38
90018e4a:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
90018e4c:	4413      	add	r3, r2
90018e4e:	b29b      	uxth	r3, r3
90018e50:	2b09      	cmp	r3, #9
90018e52:	bf88      	it	hi
90018e54:	3b0a      	subhi	r3, #10
90018e56:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90018e5a:	8458      	strh	r0, [r3, #34]	@ 0x22
90018e5c:	e7ec      	b.n	90018e38 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
90018e5e:	bd10      	pop	{r4, pc}

90018e60 <_ZN8touchgfx12TextProvider11getNextCharEv>:
90018e60:	b538      	push	{r3, r4, r5, lr}
90018e62:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
90018e64:	4604      	mov	r4, r0
90018e66:	eb00 0243 	add.w	r2, r0, r3, lsl #1
90018e6a:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
90018e6c:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
90018e6e:	3a01      	subs	r2, #1
90018e70:	8702      	strh	r2, [r0, #56]	@ 0x38
90018e72:	1c5a      	adds	r2, r3, #1
90018e74:	b292      	uxth	r2, r2
90018e76:	2a09      	cmp	r2, #9
90018e78:	bf8a      	itet	hi
90018e7a:	3b09      	subhi	r3, #9
90018e7c:	86c2      	strhls	r2, [r0, #54]	@ 0x36
90018e7e:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
90018e80:	f7ff ffb7 	bl	90018df2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
90018e84:	8c23      	ldrh	r3, [r4, #32]
90018e86:	2b01      	cmp	r3, #1
90018e88:	bf9c      	itt	ls
90018e8a:	3301      	addls	r3, #1
90018e8c:	8423      	strhls	r3, [r4, #32]
90018e8e:	8be3      	ldrh	r3, [r4, #30]
90018e90:	b90b      	cbnz	r3, 90018e96 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
90018e92:	2302      	movs	r3, #2
90018e94:	83e3      	strh	r3, [r4, #30]
90018e96:	8be3      	ldrh	r3, [r4, #30]
90018e98:	4628      	mov	r0, r5
90018e9a:	3b01      	subs	r3, #1
90018e9c:	b29b      	uxth	r3, r3
90018e9e:	83e3      	strh	r3, [r4, #30]
90018ea0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90018ea4:	8365      	strh	r5, [r4, #26]
90018ea6:	bd38      	pop	{r3, r4, r5, pc}

90018ea8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
90018ea8:	428a      	cmp	r2, r1
90018eaa:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90018eae:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
90018eb0:	d932      	bls.n	90018f18 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
90018eb2:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
90018eb4:	1a54      	subs	r4, r2, r1
90018eb6:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
90018eba:	19ee      	adds	r6, r5, r7
90018ebc:	fa1f fe84 	uxth.w	lr, r4
90018ec0:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
90018ec4:	3e01      	subs	r6, #1
90018ec6:	b2b4      	uxth	r4, r6
90018ec8:	eba4 090e 	sub.w	r9, r4, lr
90018ecc:	fa1f f989 	uxth.w	r9, r9
90018ed0:	2c09      	cmp	r4, #9
90018ed2:	4626      	mov	r6, r4
90018ed4:	bf88      	it	hi
90018ed6:	f1a4 060a 	subhi.w	r6, r4, #10
90018eda:	f1bc 0f00 	cmp.w	ip, #0
90018ede:	f104 34ff 	add.w	r4, r4, #4294967295
90018ee2:	bf08      	it	eq
90018ee4:	f04f 0c02 	moveq.w	ip, #2
90018ee8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
90018eec:	b2a4      	uxth	r4, r4
90018eee:	f10c 3cff 	add.w	ip, ip, #4294967295
90018ef2:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
90018ef6:	454c      	cmp	r4, r9
90018ef8:	fa1f fc8c 	uxth.w	ip, ip
90018efc:	eb00 064c 	add.w	r6, r0, ip, lsl #1
90018f00:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
90018f04:	d1e4      	bne.n	90018ed0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
90018f06:	eba5 050e 	sub.w	r5, r5, lr
90018f0a:	eb0e 0408 	add.w	r4, lr, r8
90018f0e:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
90018f12:	8705      	strh	r5, [r0, #56]	@ 0x38
90018f14:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
90018f18:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
90018f1a:	250a      	movs	r5, #10
90018f1c:	1a64      	subs	r4, r4, r1
90018f1e:	4439      	add	r1, r7
90018f20:	b289      	uxth	r1, r1
90018f22:	8704      	strh	r4, [r0, #56]	@ 0x38
90018f24:	2909      	cmp	r1, #9
90018f26:	bf88      	it	hi
90018f28:	390a      	subhi	r1, #10
90018f2a:	86c1      	strh	r1, [r0, #54]	@ 0x36
90018f2c:	b18a      	cbz	r2, 90018f52 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
90018f2e:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
90018f30:	3a01      	subs	r2, #1
90018f32:	3101      	adds	r1, #1
90018f34:	b292      	uxth	r2, r2
90018f36:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
90018f3a:	8701      	strh	r1, [r0, #56]	@ 0x38
90018f3c:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
90018f3e:	b901      	cbnz	r1, 90018f42 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
90018f40:	86c5      	strh	r5, [r0, #54]	@ 0x36
90018f42:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
90018f44:	3901      	subs	r1, #1
90018f46:	b289      	uxth	r1, r1
90018f48:	86c1      	strh	r1, [r0, #54]	@ 0x36
90018f4a:	eb00 0141 	add.w	r1, r0, r1, lsl #1
90018f4e:	844c      	strh	r4, [r1, #34]	@ 0x22
90018f50:	e7ec      	b.n	90018f2c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
90018f52:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90018f56:	f7ff bf4c 	b.w	90018df2 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

90018f5a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
90018f5a:	b570      	push	{r4, r5, r6, lr}
90018f5c:	2500      	movs	r5, #0
90018f5e:	4295      	cmp	r5, r2
90018f60:	d011      	beq.n	90018f86 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
90018f62:	8bc4      	ldrh	r4, [r0, #30]
90018f64:	f831 6b02 	ldrh.w	r6, [r1], #2
90018f68:	4414      	add	r4, r2
90018f6a:	3c01      	subs	r4, #1
90018f6c:	1b64      	subs	r4, r4, r5
90018f6e:	b2a4      	uxth	r4, r4
90018f70:	2c01      	cmp	r4, #1
90018f72:	bf88      	it	hi
90018f74:	3c02      	subhi	r4, #2
90018f76:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90018f7a:	8b64      	ldrh	r4, [r4, #26]
90018f7c:	42b4      	cmp	r4, r6
90018f7e:	d117      	bne.n	90018fb0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
90018f80:	3501      	adds	r5, #1
90018f82:	b2ad      	uxth	r5, r5
90018f84:	e7eb      	b.n	90018f5e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
90018f86:	f8bd 2010 	ldrh.w	r2, [sp, #16]
90018f8a:	2400      	movs	r4, #0
90018f8c:	4413      	add	r3, r2
90018f8e:	b2a2      	uxth	r2, r4
90018f90:	429a      	cmp	r2, r3
90018f92:	da0f      	bge.n	90018fb4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
90018f94:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
90018f96:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
90018f9a:	3401      	adds	r4, #1
90018f9c:	4432      	add	r2, r6
90018f9e:	b292      	uxth	r2, r2
90018fa0:	2a09      	cmp	r2, #9
90018fa2:	bf88      	it	hi
90018fa4:	3a0a      	subhi	r2, #10
90018fa6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90018faa:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
90018fac:	42aa      	cmp	r2, r5
90018fae:	d0ee      	beq.n	90018f8e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
90018fb0:	2000      	movs	r0, #0
90018fb2:	bd70      	pop	{r4, r5, r6, pc}
90018fb4:	2001      	movs	r0, #1
90018fb6:	e7fc      	b.n	90018fb2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

90018fb8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
90018fb8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90018fbc:	4605      	mov	r5, r0
90018fbe:	4616      	mov	r6, r2
90018fc0:	1c8c      	adds	r4, r1, #2
90018fc2:	8809      	ldrh	r1, [r1, #0]
90018fc4:	ea4f 3a11 	mov.w	sl, r1, lsr #12
90018fc8:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
90018fcc:	42b3      	cmp	r3, r6
90018fce:	d124      	bne.n	9001901a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
90018fd0:	f3c1 2903 	ubfx	r9, r1, #8, #4
90018fd4:	f3c1 1803 	ubfx	r8, r1, #4, #4
90018fd8:	f001 070f 	and.w	r7, r1, #15
90018fdc:	4652      	mov	r2, sl
90018fde:	f8cd 8000 	str.w	r8, [sp]
90018fe2:	464b      	mov	r3, r9
90018fe4:	4621      	mov	r1, r4
90018fe6:	4628      	mov	r0, r5
90018fe8:	f7ff ffb7 	bl	90018f5a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
90018fec:	4683      	mov	fp, r0
90018fee:	b168      	cbz	r0, 9001900c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
90018ff0:	eb0a 0109 	add.w	r1, sl, r9
90018ff4:	463a      	mov	r2, r7
90018ff6:	4628      	mov	r0, r5
90018ff8:	4441      	add	r1, r8
90018ffa:	eb04 0341 	add.w	r3, r4, r1, lsl #1
90018ffe:	4649      	mov	r1, r9
90019000:	f7ff ff52 	bl	90018ea8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
90019004:	4658      	mov	r0, fp
90019006:	b003      	add	sp, #12
90019008:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001900c:	eb07 010a 	add.w	r1, r7, sl
90019010:	4449      	add	r1, r9
90019012:	4441      	add	r1, r8
90019014:	eb04 0141 	add.w	r1, r4, r1, lsl #1
90019018:	e7d2      	b.n	90018fc0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
9001901a:	f04f 0b00 	mov.w	fp, #0
9001901e:	e7f1      	b.n	90019004 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

90019020 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
90019020:	b570      	push	{r4, r5, r6, lr}
90019022:	8810      	ldrh	r0, [r2, #0]
90019024:	4298      	cmp	r0, r3
90019026:	d817      	bhi.n	90019058 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90019028:	1e48      	subs	r0, r1, #1
9001902a:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
9001902e:	4298      	cmp	r0, r3
90019030:	d312      	bcc.n	90019058 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90019032:	2400      	movs	r4, #0
90019034:	428c      	cmp	r4, r1
90019036:	d20f      	bcs.n	90019058 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
90019038:	1860      	adds	r0, r4, r1
9001903a:	1040      	asrs	r0, r0, #1
9001903c:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
90019040:	0085      	lsls	r5, r0, #2
90019042:	42b3      	cmp	r3, r6
90019044:	d902      	bls.n	9001904c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
90019046:	3001      	adds	r0, #1
90019048:	b284      	uxth	r4, r0
9001904a:	e7f3      	b.n	90019034 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
9001904c:	d201      	bcs.n	90019052 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
9001904e:	b281      	uxth	r1, r0
90019050:	e7f0      	b.n	90019034 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
90019052:	442a      	add	r2, r5
90019054:	8850      	ldrh	r0, [r2, #2]
90019056:	bd70      	pop	{r4, r5, r6, pc}
90019058:	2000      	movs	r0, #0
9001905a:	e7fc      	b.n	90019056 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

9001905c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
9001905c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90019060:	6c45      	ldr	r5, [r0, #68]	@ 0x44
90019062:	4604      	mov	r4, r0
90019064:	260b      	movs	r6, #11
90019066:	886f      	ldrh	r7, [r5, #2]
90019068:	087f      	lsrs	r7, r7, #1
9001906a:	3e01      	subs	r6, #1
9001906c:	d013      	beq.n	90019096 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
9001906e:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
90019070:	462a      	mov	r2, r5
90019072:	4639      	mov	r1, r7
90019074:	4620      	mov	r0, r4
90019076:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001907a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
9001907e:	4643      	mov	r3, r8
90019080:	f7ff ffce 	bl	90019020 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
90019084:	b138      	cbz	r0, 90019096 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
90019086:	eb05 0140 	add.w	r1, r5, r0, lsl #1
9001908a:	4642      	mov	r2, r8
9001908c:	4620      	mov	r0, r4
9001908e:	f7ff ff93 	bl	90018fb8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
90019092:	2800      	cmp	r0, #0
90019094:	d1e9      	bne.n	9001906a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
90019096:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

9001909c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
9001909c:	b570      	push	{r4, r5, r6, lr}
9001909e:	694a      	ldr	r2, [r1, #20]
900190a0:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
900190a2:	684b      	ldr	r3, [r1, #4]
900190a4:	1b54      	subs	r4, r2, r5
900190a6:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
900190a8:	f000 8106 	beq.w	900192b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
900190ac:	1b9b      	subs	r3, r3, r6
900190ae:	d003      	beq.n	900190b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
900190b0:	4363      	muls	r3, r4
900190b2:	2210      	movs	r2, #16
900190b4:	fb93 f3f2 	sdiv	r3, r3, r2
900190b8:	680c      	ldr	r4, [r1, #0]
900190ba:	698a      	ldr	r2, [r1, #24]
900190bc:	1b65      	subs	r5, r4, r5
900190be:	f000 80fd 	beq.w	900192bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
900190c2:	1b92      	subs	r2, r2, r6
900190c4:	d003      	beq.n	900190ce <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
900190c6:	436a      	muls	r2, r5
900190c8:	2410      	movs	r4, #16
900190ca:	fb92 f2f4 	sdiv	r2, r2, r4
900190ce:	1a9b      	subs	r3, r3, r2
900190d0:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 900192f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
900190d4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900190d8:	460a      	mov	r2, r1
900190da:	ee07 3a90 	vmov	s15, r3
900190de:	f100 040c 	add.w	r4, r0, #12
900190e2:	4603      	mov	r3, r0
900190e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900190e8:	ee67 7a84 	vmul.f32	s15, s15, s8
900190ec:	ee87 3a27 	vdiv.f32	s6, s14, s15
900190f0:	eeb1 6a43 	vneg.f32	s12, s6
900190f4:	edd2 7a02 	vldr	s15, [r2, #8]
900190f8:	3214      	adds	r2, #20
900190fa:	eec7 6a27 	vdiv.f32	s13, s14, s15
900190fe:	ece3 6a01 	vstmia	r3!, {s13}
90019102:	429c      	cmp	r4, r3
90019104:	ed52 7a02 	vldr	s15, [r2, #-8]
90019108:	ee67 7aa6 	vmul.f32	s15, s15, s13
9001910c:	edc3 7a02 	vstr	s15, [r3, #8]
90019110:	ed52 7a01 	vldr	s15, [r2, #-4]
90019114:	ee67 7aa6 	vmul.f32	s15, s15, s13
90019118:	edc3 7a05 	vstr	s15, [r3, #20]
9001911c:	d1ea      	bne.n	900190f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
9001911e:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90019120:	698b      	ldr	r3, [r1, #24]
90019122:	edd0 4a02 	vldr	s9, [r0, #8]
90019126:	1a9b      	subs	r3, r3, r2
90019128:	edd0 3a00 	vldr	s7, [r0]
9001912c:	edd0 6a01 	vldr	s13, [r0, #4]
90019130:	ee07 3a90 	vmov	s15, r3
90019134:	684b      	ldr	r3, [r1, #4]
90019136:	ee76 6ae4 	vsub.f32	s13, s13, s9
9001913a:	ed90 5a05 	vldr	s10, [r0, #20]
9001913e:	1a9b      	subs	r3, r3, r2
90019140:	eef8 7ae7 	vcvt.f32.s32	s15, s15
90019144:	ee73 4ae4 	vsub.f32	s9, s7, s9
90019148:	ed90 2a03 	vldr	s4, [r0, #12]
9001914c:	ee07 3a10 	vmov	s14, r3
90019150:	edd0 5a04 	vldr	s11, [r0, #16]
90019154:	ee67 7a84 	vmul.f32	s15, s15, s8
90019158:	ed90 1a07 	vldr	s2, [r0, #28]
9001915c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019160:	edd0 2a06 	vldr	s5, [r0, #24]
90019164:	ee75 5ac5 	vsub.f32	s11, s11, s10
90019168:	ee64 7ae7 	vnmul.f32	s15, s9, s15
9001916c:	ee27 7a04 	vmul.f32	s14, s14, s8
90019170:	ee32 5a45 	vsub.f32	s10, s4, s10
90019174:	eee6 7a87 	vfma.f32	s15, s13, s14
90019178:	ee67 7a83 	vmul.f32	s15, s15, s6
9001917c:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
90019180:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
90019182:	694a      	ldr	r2, [r1, #20]
90019184:	1b13      	subs	r3, r2, r4
90019186:	ee07 3a10 	vmov	s14, r3
9001918a:	680b      	ldr	r3, [r1, #0]
9001918c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019190:	1b1b      	subs	r3, r3, r4
90019192:	ee27 7a04 	vmul.f32	s14, s14, s8
90019196:	ee64 4ac7 	vnmul.f32	s9, s9, s14
9001919a:	ee07 3a10 	vmov	s14, r3
9001919e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900191a2:	ee27 7a04 	vmul.f32	s14, s14, s8
900191a6:	eee6 4a87 	vfma.f32	s9, s13, s14
900191aa:	ee64 4a86 	vmul.f32	s9, s9, s12
900191ae:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
900191b2:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
900191b4:	698b      	ldr	r3, [r1, #24]
900191b6:	1a9b      	subs	r3, r3, r2
900191b8:	ee06 3a90 	vmov	s13, r3
900191bc:	684b      	ldr	r3, [r1, #4]
900191be:	1a9b      	subs	r3, r3, r2
900191c0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900191c4:	ee07 3a10 	vmov	s14, r3
900191c8:	ee66 6a84 	vmul.f32	s13, s13, s8
900191cc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900191d0:	ee65 6a66 	vnmul.f32	s13, s10, s13
900191d4:	ee27 7a04 	vmul.f32	s14, s14, s8
900191d8:	eee5 6a87 	vfma.f32	s13, s11, s14
900191dc:	ee66 6a83 	vmul.f32	s13, s13, s6
900191e0:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
900191e4:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
900191e6:	694a      	ldr	r2, [r1, #20]
900191e8:	1b13      	subs	r3, r2, r4
900191ea:	ee07 3a10 	vmov	s14, r3
900191ee:	680b      	ldr	r3, [r1, #0]
900191f0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900191f4:	1b1b      	subs	r3, r3, r4
900191f6:	ee27 7a04 	vmul.f32	s14, s14, s8
900191fa:	ee25 5a47 	vnmul.f32	s10, s10, s14
900191fe:	ee07 3a10 	vmov	s14, r3
90019202:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019206:	ee27 7a04 	vmul.f32	s14, s14, s8
9001920a:	eea5 5a87 	vfma.f32	s10, s11, s14
9001920e:	edd0 5a08 	vldr	s11, [r0, #32]
90019212:	ee31 1a65 	vsub.f32	s2, s2, s11
90019216:	ee72 5ae5 	vsub.f32	s11, s5, s11
9001921a:	ee25 5a06 	vmul.f32	s10, s10, s12
9001921e:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
90019222:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90019224:	698b      	ldr	r3, [r1, #24]
90019226:	1a9b      	subs	r3, r3, r2
90019228:	ee07 3a10 	vmov	s14, r3
9001922c:	684b      	ldr	r3, [r1, #4]
9001922e:	1a9b      	subs	r3, r3, r2
90019230:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
90019234:	ee01 3a90 	vmov	s3, r3
90019238:	ee27 7a04 	vmul.f32	s14, s14, s8
9001923c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
90019240:	ee25 7ac7 	vnmul.f32	s14, s11, s14
90019244:	ee61 1a84 	vmul.f32	s3, s3, s8
90019248:	eea1 7a21 	vfma.f32	s14, s2, s3
9001924c:	ee27 7a03 	vmul.f32	s14, s14, s6
90019250:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
90019254:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
90019256:	694a      	ldr	r2, [r1, #20]
90019258:	1b13      	subs	r3, r2, r4
9001925a:	ee03 3a10 	vmov	s6, r3
9001925e:	680b      	ldr	r3, [r1, #0]
90019260:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
90019264:	1b1b      	subs	r3, r3, r4
90019266:	ee23 3a04 	vmul.f32	s6, s6, s8
9001926a:	ee65 5ac3 	vnmul.f32	s11, s11, s6
9001926e:	ee03 3a10 	vmov	s6, r3
90019272:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
90019276:	ee23 4a04 	vmul.f32	s8, s6, s8
9001927a:	eee1 5a04 	vfma.f32	s11, s2, s8
9001927e:	ee25 6a86 	vmul.f32	s12, s11, s12
90019282:	ee62 5a67 	vnmul.f32	s11, s4, s15
90019286:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
9001928a:	eee3 5aa6 	vfma.f32	s11, s7, s13
9001928e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
90019292:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90019296:	dd13      	ble.n	900192c0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
90019298:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
9001929c:	ee62 7ae7 	vnmul.f32	s15, s5, s15
900192a0:	63c3      	str	r3, [r0, #60]	@ 0x3c
900192a2:	eee3 7a87 	vfma.f32	s15, s7, s14
900192a6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900192aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900192ae:	dd15      	ble.n	900192dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
900192b0:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
900192b4:	6403      	str	r3, [r0, #64]	@ 0x40
900192b6:	bd70      	pop	{r4, r5, r6, pc}
900192b8:	4623      	mov	r3, r4
900192ba:	e6fd      	b.n	900190b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
900192bc:	462a      	mov	r2, r5
900192be:	e706      	b.n	900190ce <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
900192c0:	d502      	bpl.n	900192c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
900192c2:	f647 73ff 	movw	r3, #32767	@ 0x7fff
900192c6:	e7e9      	b.n	9001929c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
900192c8:	ee22 2a64 	vnmul.f32	s4, s4, s9
900192cc:	eea3 2a85 	vfma.f32	s4, s7, s10
900192d0:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
900192d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900192d8:	dade      	bge.n	90019298 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
900192da:	e7f2      	b.n	900192c2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
900192dc:	d502      	bpl.n	900192e4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
900192de:	f647 73ff 	movw	r3, #32767	@ 0x7fff
900192e2:	e7e7      	b.n	900192b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
900192e4:	ee62 4ae4 	vnmul.f32	s9, s5, s9
900192e8:	eee3 4a86 	vfma.f32	s9, s7, s12
900192ec:	eef5 4ac0 	vcmpe.f32	s9, #0.0
900192f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900192f4:	dadc      	bge.n	900192b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
900192f6:	e7f2      	b.n	900192de <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
900192f8:	3d800000 	.word	0x3d800000

900192fc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
900192fc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90019300:	2714      	movs	r7, #20
90019302:	435f      	muls	r7, r3
90019304:	eb02 0c07 	add.w	ip, r2, r7
90019308:	f8dc 5004 	ldr.w	r5, [ip, #4]
9001930c:	f115 0e0f 	adds.w	lr, r5, #15
90019310:	f100 80a2 	bmi.w	90019458 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
90019314:	ea4f 1e2e 	mov.w	lr, lr, asr #4
90019318:	9c08      	ldr	r4, [sp, #32]
9001931a:	2614      	movs	r6, #20
9001931c:	f8c0 e014 	str.w	lr, [r0, #20]
90019320:	4366      	muls	r6, r4
90019322:	eb02 0806 	add.w	r8, r2, r6
90019326:	f8d8 5004 	ldr.w	r5, [r8, #4]
9001932a:	f115 040f 	adds.w	r4, r5, #15
9001932e:	f100 809f 	bmi.w	90019470 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
90019332:	1124      	asrs	r4, r4, #4
90019334:	eba4 040e 	sub.w	r4, r4, lr
90019338:	6184      	str	r4, [r0, #24]
9001933a:	2c00      	cmp	r4, #0
9001933c:	f000 808a 	beq.w	90019454 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
90019340:	f8dc 9004 	ldr.w	r9, [ip, #4]
90019344:	f8d8 4004 	ldr.w	r4, [r8, #4]
90019348:	5995      	ldr	r5, [r2, r6]
9001934a:	eba4 0809 	sub.w	r8, r4, r9
9001934e:	59d4      	ldr	r4, [r2, r7]
90019350:	eba5 0a04 	sub.w	sl, r5, r4
90019354:	ea4f 1608 	mov.w	r6, r8, lsl #4
90019358:	ea4f 150a 	mov.w	r5, sl, lsl #4
9001935c:	fb0e fe05 	mul.w	lr, lr, r5
90019360:	fb0a ee19 	mls	lr, sl, r9, lr
90019364:	fb08 e404 	mla	r4, r8, r4, lr
90019368:	3c01      	subs	r4, #1
9001936a:	19a4      	adds	r4, r4, r6
9001936c:	f100 808c 	bmi.w	90019488 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
90019370:	fb94 fef6 	sdiv	lr, r4, r6
90019374:	fb06 441e 	mls	r4, r6, lr, r4
90019378:	f8c0 e000 	str.w	lr, [r0]
9001937c:	6104      	str	r4, [r0, #16]
9001937e:	2d00      	cmp	r5, #0
90019380:	f2c0 8095 	blt.w	900194ae <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
90019384:	fb95 f4f6 	sdiv	r4, r5, r6
90019388:	fb06 5514 	mls	r5, r6, r4, r5
9001938c:	6044      	str	r4, [r0, #4]
9001938e:	6085      	str	r5, [r0, #8]
90019390:	60c6      	str	r6, [r0, #12]
90019392:	eb01 0383 	add.w	r3, r1, r3, lsl #2
90019396:	f8dc 4004 	ldr.w	r4, [ip, #4]
9001939a:	6945      	ldr	r5, [r0, #20]
9001939c:	59d2      	ldr	r2, [r2, r7]
9001939e:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
900193a2:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 900194d0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
900193a6:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
900193aa:	ee07 4a10 	vmov	s14, r4
900193ae:	6804      	ldr	r4, [r0, #0]
900193b0:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
900193b4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
900193b8:	ee07 2a90 	vmov	s15, r2
900193bc:	ee27 7a26 	vmul.f32	s14, s14, s13
900193c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
900193c4:	ee67 7aa6 	vmul.f32	s15, s15, s13
900193c8:	edd3 6a00 	vldr	s13, [r3]
900193cc:	eee6 6a07 	vfma.f32	s13, s12, s14
900193d0:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
900193d4:	eee6 6a27 	vfma.f32	s13, s12, s15
900193d8:	edc0 6a07 	vstr	s13, [r0, #28]
900193dc:	edd0 6a01 	vldr	s13, [r0, #4]
900193e0:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
900193e4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
900193e8:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
900193ec:	eea6 6aa5 	vfma.f32	s12, s13, s11
900193f0:	ed80 6a08 	vstr	s12, [r0, #32]
900193f4:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
900193f6:	6242      	str	r2, [r0, #36]	@ 0x24
900193f8:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
900193fc:	ed93 6a03 	vldr	s12, [r3, #12]
90019400:	eea5 6a87 	vfma.f32	s12, s11, s14
90019404:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
90019408:	eea5 6aa7 	vfma.f32	s12, s11, s15
9001940c:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
90019410:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
90019414:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
90019418:	eea6 6aa5 	vfma.f32	s12, s13, s11
9001941c:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
90019420:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
90019422:	6302      	str	r2, [r0, #48]	@ 0x30
90019424:	ed93 6a06 	vldr	s12, [r3, #24]
90019428:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
9001942c:	eea5 6a87 	vfma.f32	s12, s11, s14
90019430:	eeb0 7a46 	vmov.f32	s14, s12
90019434:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
90019438:	eea6 7a27 	vfma.f32	s14, s12, s15
9001943c:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
90019440:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
90019444:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
90019448:	eee6 7a87 	vfma.f32	s15, s13, s14
9001944c:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
90019450:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
90019452:	63c3      	str	r3, [r0, #60]	@ 0x3c
90019454:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90019458:	2410      	movs	r4, #16
9001945a:	f1c5 0501 	rsb	r5, r5, #1
9001945e:	fb9e fef4 	sdiv	lr, lr, r4
90019462:	f015 050f 	ands.w	r5, r5, #15
90019466:	bf18      	it	ne
90019468:	2501      	movne	r5, #1
9001946a:	ebae 0e05 	sub.w	lr, lr, r5
9001946e:	e753      	b.n	90019318 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
90019470:	f04f 0910 	mov.w	r9, #16
90019474:	f1c5 0501 	rsb	r5, r5, #1
90019478:	fb94 f4f9 	sdiv	r4, r4, r9
9001947c:	f015 050f 	ands.w	r5, r5, #15
90019480:	bf18      	it	ne
90019482:	2501      	movne	r5, #1
90019484:	1b64      	subs	r4, r4, r5
90019486:	e755      	b.n	90019334 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
90019488:	4264      	negs	r4, r4
9001948a:	fb94 fef6 	sdiv	lr, r4, r6
9001948e:	f1ce 0800 	rsb	r8, lr, #0
90019492:	fb06 441e 	mls	r4, r6, lr, r4
90019496:	f8c0 8000 	str.w	r8, [r0]
9001949a:	6104      	str	r4, [r0, #16]
9001949c:	2c00      	cmp	r4, #0
9001949e:	f43f af6e 	beq.w	9001937e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
900194a2:	ea6f 0e0e 	mvn.w	lr, lr
900194a6:	1b34      	subs	r4, r6, r4
900194a8:	f8c0 e000 	str.w	lr, [r0]
900194ac:	e766      	b.n	9001937c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
900194ae:	426d      	negs	r5, r5
900194b0:	fb95 f4f6 	sdiv	r4, r5, r6
900194b4:	f1c4 0e00 	rsb	lr, r4, #0
900194b8:	fb06 5514 	mls	r5, r6, r4, r5
900194bc:	f8c0 e004 	str.w	lr, [r0, #4]
900194c0:	6085      	str	r5, [r0, #8]
900194c2:	2d00      	cmp	r5, #0
900194c4:	f43f af64 	beq.w	90019390 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
900194c8:	43e4      	mvns	r4, r4
900194ca:	1b75      	subs	r5, r6, r5
900194cc:	6044      	str	r4, [r0, #4]
900194ce:	e75e      	b.n	9001938e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
900194d0:	3d800000 	.word	0x3d800000

900194d4 <_ZN8touchgfx7Unicode6strlenEPKt>:
900194d4:	4602      	mov	r2, r0
900194d6:	b148      	cbz	r0, 900194ec <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
900194d8:	2300      	movs	r3, #0
900194da:	b298      	uxth	r0, r3
900194dc:	3301      	adds	r3, #1
900194de:	eb02 0143 	add.w	r1, r2, r3, lsl #1
900194e2:	f831 1c02 	ldrh.w	r1, [r1, #-2]
900194e6:	2900      	cmp	r1, #0
900194e8:	d1f7      	bne.n	900194da <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
900194ea:	4770      	bx	lr
900194ec:	4770      	bx	lr

900194ee <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
900194ee:	b530      	push	{r4, r5, lr}
900194f0:	4604      	mov	r4, r0
900194f2:	b159      	cbz	r1, 9001950c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
900194f4:	b148      	cbz	r0, 9001950a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
900194f6:	2300      	movs	r3, #0
900194f8:	b298      	uxth	r0, r3
900194fa:	4282      	cmp	r2, r0
900194fc:	d905      	bls.n	9001950a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
900194fe:	5ccd      	ldrb	r5, [r1, r3]
90019500:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
90019504:	3301      	adds	r3, #1
90019506:	2d00      	cmp	r5, #0
90019508:	d1f6      	bne.n	900194f8 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
9001950a:	bd30      	pop	{r4, r5, pc}
9001950c:	4608      	mov	r0, r1
9001950e:	e7fc      	b.n	9001950a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

90019510 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
90019510:	b5f0      	push	{r4, r5, r6, r7, lr}
90019512:	b08b      	sub	sp, #44	@ 0x2c
90019514:	468c      	mov	ip, r1
90019516:	4604      	mov	r4, r0
90019518:	2100      	movs	r1, #0
9001951a:	261f      	movs	r6, #31
9001951c:	af01      	add	r7, sp, #4
9001951e:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
90019522:	1e71      	subs	r1, r6, #1
90019524:	fb94 fef3 	sdiv	lr, r4, r3
90019528:	fb03 441e 	mls	r4, r3, lr, r4
9001952c:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
90019530:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
90019534:	b2ec      	uxtb	r4, r5
90019536:	2d09      	cmp	r5, #9
90019538:	bfd4      	ite	le
9001953a:	3430      	addle	r4, #48	@ 0x30
9001953c:	3457      	addgt	r4, #87	@ 0x57
9001953e:	b2e4      	uxtb	r4, r4
90019540:	55bc      	strb	r4, [r7, r6]
90019542:	4674      	mov	r4, lr
90019544:	b974      	cbnz	r4, 90019564 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
90019546:	2800      	cmp	r0, #0
90019548:	da05      	bge.n	90019556 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
9001954a:	ab0a      	add	r3, sp, #40	@ 0x28
9001954c:	4419      	add	r1, r3
9001954e:	232d      	movs	r3, #45	@ 0x2d
90019550:	f801 3c24 	strb.w	r3, [r1, #-36]
90019554:	1eb1      	subs	r1, r6, #2
90019556:	3101      	adds	r1, #1
90019558:	4660      	mov	r0, ip
9001955a:	4439      	add	r1, r7
9001955c:	f7ff ffc7 	bl	900194ee <_ZN8touchgfx7Unicode7strncpyEPtPKct>
90019560:	b00b      	add	sp, #44	@ 0x2c
90019562:	bdf0      	pop	{r4, r5, r6, r7, pc}
90019564:	460e      	mov	r6, r1
90019566:	e7dc      	b.n	90019522 <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

90019568 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
90019568:	b5f0      	push	{r4, r5, r6, r7, lr}
9001956a:	468c      	mov	ip, r1
9001956c:	b08b      	sub	sp, #44	@ 0x2c
9001956e:	2100      	movs	r1, #0
90019570:	ae01      	add	r6, sp, #4
90019572:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
90019576:	211f      	movs	r1, #31
90019578:	fbb0 f7f3 	udiv	r7, r0, r3
9001957c:	fb03 0517 	mls	r5, r3, r7, r0
90019580:	4638      	mov	r0, r7
90019582:	b2ec      	uxtb	r4, r5
90019584:	2d09      	cmp	r5, #9
90019586:	bfd4      	ite	le
90019588:	3430      	addle	r4, #48	@ 0x30
9001958a:	3457      	addgt	r4, #87	@ 0x57
9001958c:	b2e4      	uxtb	r4, r4
9001958e:	558c      	strb	r4, [r1, r6]
90019590:	1e4c      	subs	r4, r1, #1
90019592:	b92f      	cbnz	r7, 900195a0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
90019594:	4431      	add	r1, r6
90019596:	4660      	mov	r0, ip
90019598:	f7ff ffa9 	bl	900194ee <_ZN8touchgfx7Unicode7strncpyEPtPKct>
9001959c:	b00b      	add	sp, #44	@ 0x2c
9001959e:	bdf0      	pop	{r4, r5, r6, r7, pc}
900195a0:	4621      	mov	r1, r4
900195a2:	e7e9      	b.n	90019578 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

900195a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
900195a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900195a8:	b085      	sub	sp, #20
900195aa:	4691      	mov	r9, r2
900195ac:	6802      	ldr	r2, [r0, #0]
900195ae:	4688      	mov	r8, r1
900195b0:	461c      	mov	r4, r3
900195b2:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
900195b6:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
900195ba:	4683      	mov	fp, r0
900195bc:	4610      	mov	r0, r2
900195be:	9103      	str	r1, [sp, #12]
900195c0:	9302      	str	r3, [sp, #8]
900195c2:	9201      	str	r2, [sp, #4]
900195c4:	f7ff ff86 	bl	900194d4 <_ZN8touchgfx7Unicode6strlenEPKt>
900195c8:	f1b8 0f00 	cmp.w	r8, #0
900195cc:	bf0c      	ite	eq
900195ce:	4684      	moveq	ip, r0
900195d0:	f100 0c01 	addne.w	ip, r0, #1
900195d4:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
900195d8:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
900195dc:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
900195de:	fa1f fc8c 	uxth.w	ip, ip
900195e2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
900195e4:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
900195e8:	9903      	ldr	r1, [sp, #12]
900195ea:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
900195ee:	d041      	beq.n	90019674 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
900195f0:	d834      	bhi.n	9001965c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
900195f2:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
900195f6:	d059      	beq.n	900196ac <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
900195f8:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
900195fc:	d03a      	beq.n	90019674 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
900195fe:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
90019602:	d034      	beq.n	9001966e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
90019604:	2400      	movs	r4, #0
90019606:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
9001960a:	3a01      	subs	r2, #1
9001960c:	b169      	cbz	r1, 9001962a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001960e:	9911      	ldr	r1, [sp, #68]	@ 0x44
90019610:	458c      	cmp	ip, r1
90019612:	da09      	bge.n	90019628 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
90019614:	eba1 010c 	sub.w	r1, r1, ip
90019618:	b289      	uxth	r1, r1
9001961a:	b933      	cbnz	r3, 9001962a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
9001961c:	2e00      	cmp	r6, #0
9001961e:	d051      	beq.n	900196c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
90019620:	2800      	cmp	r0, #0
90019622:	d04f      	beq.n	900196c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
90019624:	440c      	add	r4, r1
90019626:	b2a4      	uxth	r4, r4
90019628:	2100      	movs	r1, #0
9001962a:	682b      	ldr	r3, [r5, #0]
9001962c:	4293      	cmp	r3, r2
9001962e:	da07      	bge.n	90019640 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
90019630:	f1b8 0f00 	cmp.w	r8, #0
90019634:	d004      	beq.n	90019640 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
90019636:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
9001963a:	682b      	ldr	r3, [r5, #0]
9001963c:	3301      	adds	r3, #1
9001963e:	602b      	str	r3, [r5, #0]
90019640:	2730      	movs	r7, #48	@ 0x30
90019642:	2c00      	cmp	r4, #0
90019644:	d04e      	beq.n	900196e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90019646:	682e      	ldr	r6, [r5, #0]
90019648:	3c01      	subs	r4, #1
9001964a:	42b2      	cmp	r2, r6
9001964c:	b2a4      	uxth	r4, r4
9001964e:	dd49      	ble.n	900196e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
90019650:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
90019654:	682b      	ldr	r3, [r5, #0]
90019656:	3301      	adds	r3, #1
90019658:	602b      	str	r3, [r5, #0]
9001965a:	e7f2      	b.n	90019642 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
9001965c:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
90019660:	d01d      	beq.n	9001969e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
90019662:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
90019666:	d002      	beq.n	9001966e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
90019668:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
9001966c:	e7c9      	b.n	90019602 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
9001966e:	4684      	mov	ip, r0
90019670:	f04f 0800 	mov.w	r8, #0
90019674:	2c00      	cmp	r4, #0
90019676:	d0c6      	beq.n	90019606 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
90019678:	b947      	cbnz	r7, 9001968c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001967a:	2801      	cmp	r0, #1
9001967c:	d106      	bne.n	9001968c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
9001967e:	8814      	ldrh	r4, [r2, #0]
90019680:	2c30      	cmp	r4, #48	@ 0x30
90019682:	bf02      	ittt	eq
90019684:	3202      	addeq	r2, #2
90019686:	4638      	moveq	r0, r7
90019688:	f8cb 2000 	streq.w	r2, [fp]
9001968c:	45bc      	cmp	ip, r7
9001968e:	da14      	bge.n	900196ba <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
90019690:	b2bf      	uxth	r7, r7
90019692:	eba7 040c 	sub.w	r4, r7, ip
90019696:	46bc      	mov	ip, r7
90019698:	b2a4      	uxth	r4, r4
9001969a:	2600      	movs	r6, #0
9001969c:	e7b3      	b.n	90019606 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
9001969e:	4684      	mov	ip, r0
900196a0:	b16c      	cbz	r4, 900196be <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
900196a2:	42b8      	cmp	r0, r7
900196a4:	dd00      	ble.n	900196a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
900196a6:	b2b8      	uxth	r0, r7
900196a8:	2400      	movs	r4, #0
900196aa:	e003      	b.n	900196b4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
900196ac:	f04f 0c01 	mov.w	ip, #1
900196b0:	2400      	movs	r4, #0
900196b2:	4660      	mov	r0, ip
900196b4:	4626      	mov	r6, r4
900196b6:	46a0      	mov	r8, r4
900196b8:	e7a5      	b.n	90019606 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
900196ba:	2400      	movs	r4, #0
900196bc:	e7ed      	b.n	9001969a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
900196be:	4626      	mov	r6, r4
900196c0:	46a0      	mov	r8, r4
900196c2:	e7a0      	b.n	90019606 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
900196c4:	2900      	cmp	r1, #0
900196c6:	d0b0      	beq.n	9001962a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
900196c8:	2720      	movs	r7, #32
900196ca:	682e      	ldr	r6, [r5, #0]
900196cc:	2900      	cmp	r1, #0
900196ce:	d0ac      	beq.n	9001962a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
900196d0:	3901      	subs	r1, #1
900196d2:	4296      	cmp	r6, r2
900196d4:	b289      	uxth	r1, r1
900196d6:	daa7      	bge.n	90019628 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
900196d8:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
900196dc:	682b      	ldr	r3, [r5, #0]
900196de:	3301      	adds	r3, #1
900196e0:	602b      	str	r3, [r5, #0]
900196e2:	e7f2      	b.n	900196ca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
900196e4:	b188      	cbz	r0, 9001970a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
900196e6:	682b      	ldr	r3, [r5, #0]
900196e8:	3801      	subs	r0, #1
900196ea:	429a      	cmp	r2, r3
900196ec:	b280      	uxth	r0, r0
900196ee:	dd0c      	ble.n	9001970a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
900196f0:	f8db 3000 	ldr.w	r3, [fp]
900196f4:	1c9c      	adds	r4, r3, #2
900196f6:	f8cb 4000 	str.w	r4, [fp]
900196fa:	881c      	ldrh	r4, [r3, #0]
900196fc:	682b      	ldr	r3, [r5, #0]
900196fe:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
90019702:	682b      	ldr	r3, [r5, #0]
90019704:	3301      	adds	r3, #1
90019706:	602b      	str	r3, [r5, #0]
90019708:	e7ec      	b.n	900196e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
9001970a:	2620      	movs	r6, #32
9001970c:	b151      	cbz	r1, 90019724 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
9001970e:	6828      	ldr	r0, [r5, #0]
90019710:	3901      	subs	r1, #1
90019712:	4282      	cmp	r2, r0
90019714:	b289      	uxth	r1, r1
90019716:	dd05      	ble.n	90019724 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
90019718:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
9001971c:	682b      	ldr	r3, [r5, #0]
9001971e:	3301      	adds	r3, #1
90019720:	602b      	str	r3, [r5, #0]
90019722:	e7f3      	b.n	9001970c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
90019724:	b005      	add	sp, #20
90019726:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001972a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
9001972a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001972e:	2400      	movs	r4, #0
90019730:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
90019734:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
90019738:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
9001973c:	8014      	strh	r4, [r2, #0]
9001973e:	701c      	strb	r4, [r3, #0]
90019740:	f888 4000 	strb.w	r4, [r8]
90019744:	f88c 4000 	strb.w	r4, [ip]
90019748:	f88e 4000 	strb.w	r4, [lr]
9001974c:	703c      	strb	r4, [r7, #0]
9001974e:	6804      	ldr	r4, [r0, #0]
90019750:	b1a4      	cbz	r4, 9001977c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
90019752:	8824      	ldrh	r4, [r4, #0]
90019754:	f04f 0901 	mov.w	r9, #1
90019758:	b314      	cbz	r4, 900197a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001975a:	2c2b      	cmp	r4, #43	@ 0x2b
9001975c:	d001      	beq.n	90019762 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
9001975e:	2c20      	cmp	r4, #32
90019760:	d110      	bne.n	90019784 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
90019762:	8014      	strh	r4, [r2, #0]
90019764:	6804      	ldr	r4, [r0, #0]
90019766:	b10c      	cbz	r4, 9001976c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
90019768:	3402      	adds	r4, #2
9001976a:	6004      	str	r4, [r0, #0]
9001976c:	680c      	ldr	r4, [r1, #0]
9001976e:	b10c      	cbz	r4, 90019774 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
90019770:	3401      	adds	r4, #1
90019772:	600c      	str	r4, [r1, #0]
90019774:	6804      	ldr	r4, [r0, #0]
90019776:	b17c      	cbz	r4, 90019798 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
90019778:	8824      	ldrh	r4, [r4, #0]
9001977a:	e7ed      	b.n	90019758 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
9001977c:	680c      	ldr	r4, [r1, #0]
9001977e:	b17c      	cbz	r4, 900197a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
90019780:	7824      	ldrb	r4, [r4, #0]
90019782:	e7e7      	b.n	90019754 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
90019784:	2c2d      	cmp	r4, #45	@ 0x2d
90019786:	d102      	bne.n	9001978e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
90019788:	f883 9000 	strb.w	r9, [r3]
9001978c:	e7ea      	b.n	90019764 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
9001978e:	2c23      	cmp	r4, #35	@ 0x23
90019790:	d107      	bne.n	900197a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
90019792:	f888 9000 	strb.w	r9, [r8]
90019796:	e7e5      	b.n	90019764 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
90019798:	680c      	ldr	r4, [r1, #0]
9001979a:	b10c      	cbz	r4, 900197a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
9001979c:	7824      	ldrb	r4, [r4, #0]
9001979e:	e7db      	b.n	90019758 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
900197a0:	2400      	movs	r4, #0
900197a2:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
900197a6:	2b09      	cmp	r3, #9
900197a8:	d901      	bls.n	900197ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
900197aa:	2c2a      	cmp	r4, #42	@ 0x2a
900197ac:	d122      	bne.n	900197f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
900197ae:	2301      	movs	r3, #1
900197b0:	2c30      	cmp	r4, #48	@ 0x30
900197b2:	f88e 3000 	strb.w	r3, [lr]
900197b6:	d10d      	bne.n	900197d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
900197b8:	f88c 3000 	strb.w	r3, [ip]
900197bc:	6803      	ldr	r3, [r0, #0]
900197be:	b10b      	cbz	r3, 900197c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
900197c0:	3302      	adds	r3, #2
900197c2:	6003      	str	r3, [r0, #0]
900197c4:	680b      	ldr	r3, [r1, #0]
900197c6:	b10b      	cbz	r3, 900197cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
900197c8:	3301      	adds	r3, #1
900197ca:	600b      	str	r3, [r1, #0]
900197cc:	6803      	ldr	r3, [r0, #0]
900197ce:	2b00      	cmp	r3, #0
900197d0:	d02f      	beq.n	90019832 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
900197d2:	881c      	ldrh	r4, [r3, #0]
900197d4:	2c2a      	cmp	r4, #42	@ 0x2a
900197d6:	d135      	bne.n	90019844 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
900197d8:	f04f 33ff 	mov.w	r3, #4294967295
900197dc:	6033      	str	r3, [r6, #0]
900197de:	6803      	ldr	r3, [r0, #0]
900197e0:	b10b      	cbz	r3, 900197e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
900197e2:	3302      	adds	r3, #2
900197e4:	6003      	str	r3, [r0, #0]
900197e6:	680b      	ldr	r3, [r1, #0]
900197e8:	b10b      	cbz	r3, 900197ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
900197ea:	3301      	adds	r3, #1
900197ec:	600b      	str	r3, [r1, #0]
900197ee:	6803      	ldr	r3, [r0, #0]
900197f0:	b31b      	cbz	r3, 9001983a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
900197f2:	881c      	ldrh	r4, [r3, #0]
900197f4:	2c2e      	cmp	r4, #46	@ 0x2e
900197f6:	d11a      	bne.n	9001982e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
900197f8:	2301      	movs	r3, #1
900197fa:	703b      	strb	r3, [r7, #0]
900197fc:	6803      	ldr	r3, [r0, #0]
900197fe:	b10b      	cbz	r3, 90019804 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
90019800:	3302      	adds	r3, #2
90019802:	6003      	str	r3, [r0, #0]
90019804:	680b      	ldr	r3, [r1, #0]
90019806:	b10b      	cbz	r3, 9001980c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
90019808:	3301      	adds	r3, #1
9001980a:	600b      	str	r3, [r1, #0]
9001980c:	6803      	ldr	r3, [r0, #0]
9001980e:	2b00      	cmp	r3, #0
90019810:	d036      	beq.n	90019880 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
90019812:	881b      	ldrh	r3, [r3, #0]
90019814:	2b2a      	cmp	r3, #42	@ 0x2a
90019816:	d137      	bne.n	90019888 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
90019818:	f04f 33ff 	mov.w	r3, #4294967295
9001981c:	602b      	str	r3, [r5, #0]
9001981e:	6803      	ldr	r3, [r0, #0]
90019820:	b10b      	cbz	r3, 90019826 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
90019822:	3302      	adds	r3, #2
90019824:	6003      	str	r3, [r0, #0]
90019826:	680b      	ldr	r3, [r1, #0]
90019828:	b10b      	cbz	r3, 9001982e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
9001982a:	3301      	adds	r3, #1
9001982c:	600b      	str	r3, [r1, #0]
9001982e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
90019832:	680c      	ldr	r4, [r1, #0]
90019834:	b134      	cbz	r4, 90019844 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
90019836:	7824      	ldrb	r4, [r4, #0]
90019838:	e7cc      	b.n	900197d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
9001983a:	680b      	ldr	r3, [r1, #0]
9001983c:	2b00      	cmp	r3, #0
9001983e:	d0f6      	beq.n	9001982e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
90019840:	781c      	ldrb	r4, [r3, #0]
90019842:	e7d7      	b.n	900197f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90019844:	2300      	movs	r3, #0
90019846:	220a      	movs	r2, #10
90019848:	6033      	str	r3, [r6, #0]
9001984a:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
9001984e:	fa1f f38c 	uxth.w	r3, ip
90019852:	2b09      	cmp	r3, #9
90019854:	d8ce      	bhi.n	900197f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
90019856:	6833      	ldr	r3, [r6, #0]
90019858:	fb02 c303 	mla	r3, r2, r3, ip
9001985c:	6033      	str	r3, [r6, #0]
9001985e:	6803      	ldr	r3, [r0, #0]
90019860:	b10b      	cbz	r3, 90019866 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
90019862:	3302      	adds	r3, #2
90019864:	6003      	str	r3, [r0, #0]
90019866:	680b      	ldr	r3, [r1, #0]
90019868:	b10b      	cbz	r3, 9001986e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
9001986a:	3301      	adds	r3, #1
9001986c:	600b      	str	r3, [r1, #0]
9001986e:	6803      	ldr	r3, [r0, #0]
90019870:	b10b      	cbz	r3, 90019876 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
90019872:	881c      	ldrh	r4, [r3, #0]
90019874:	e7e9      	b.n	9001984a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90019876:	680c      	ldr	r4, [r1, #0]
90019878:	2c00      	cmp	r4, #0
9001987a:	d0e6      	beq.n	9001984a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
9001987c:	7824      	ldrb	r4, [r4, #0]
9001987e:	e7e4      	b.n	9001984a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
90019880:	680b      	ldr	r3, [r1, #0]
90019882:	b10b      	cbz	r3, 90019888 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
90019884:	781b      	ldrb	r3, [r3, #0]
90019886:	e7c5      	b.n	90019814 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
90019888:	2200      	movs	r2, #0
9001988a:	240a      	movs	r4, #10
9001988c:	602a      	str	r2, [r5, #0]
9001988e:	3b30      	subs	r3, #48	@ 0x30
90019890:	682a      	ldr	r2, [r5, #0]
90019892:	b29e      	uxth	r6, r3
90019894:	2e09      	cmp	r6, #9
90019896:	d813      	bhi.n	900198c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
90019898:	fb04 3302 	mla	r3, r4, r2, r3
9001989c:	602b      	str	r3, [r5, #0]
9001989e:	6803      	ldr	r3, [r0, #0]
900198a0:	b10b      	cbz	r3, 900198a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
900198a2:	3302      	adds	r3, #2
900198a4:	6003      	str	r3, [r0, #0]
900198a6:	680b      	ldr	r3, [r1, #0]
900198a8:	b10b      	cbz	r3, 900198ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
900198aa:	3301      	adds	r3, #1
900198ac:	600b      	str	r3, [r1, #0]
900198ae:	6803      	ldr	r3, [r0, #0]
900198b0:	b10b      	cbz	r3, 900198b6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
900198b2:	881b      	ldrh	r3, [r3, #0]
900198b4:	e7eb      	b.n	9001988e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
900198b6:	680b      	ldr	r3, [r1, #0]
900198b8:	2b00      	cmp	r3, #0
900198ba:	d0e8      	beq.n	9001988e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
900198bc:	781b      	ldrb	r3, [r3, #0]
900198be:	e7e6      	b.n	9001988e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
900198c0:	2a06      	cmp	r2, #6
900198c2:	bfa8      	it	ge
900198c4:	2206      	movge	r2, #6
900198c6:	602a      	str	r2, [r5, #0]
900198c8:	e7b1      	b.n	9001982e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

900198ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
900198ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900198ce:	b0a3      	sub	sp, #140	@ 0x8c
900198d0:	2600      	movs	r6, #0
900198d2:	4607      	mov	r7, r0
900198d4:	4688      	mov	r8, r1
900198d6:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
900198da:	4631      	mov	r1, r6
900198dc:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
900198de:	4648      	mov	r0, r9
900198e0:	960d      	str	r6, [sp, #52]	@ 0x34
900198e2:	e9cd 3208 	strd	r3, r2, [sp, #32]
900198e6:	2242      	movs	r2, #66	@ 0x42
900198e8:	f010 f8da 	bl	90029aa0 <memset>
900198ec:	b15f      	cbz	r7, 90019906 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
900198ee:	f108 3aff 	add.w	sl, r8, #4294967295
900198f2:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900198f4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
900198f6:	b152      	cbz	r2, 9001990e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
900198f8:	8812      	ldrh	r2, [r2, #0]
900198fa:	b10a      	cbz	r2, 90019900 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
900198fc:	459a      	cmp	sl, r3
900198fe:	dc2e      	bgt.n	9001995e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
90019900:	2200      	movs	r2, #0
90019902:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
90019906:	4638      	mov	r0, r7
90019908:	b023      	add	sp, #140	@ 0x8c
9001990a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001990e:	9a08      	ldr	r2, [sp, #32]
90019910:	2a00      	cmp	r2, #0
90019912:	d0f5      	beq.n	90019900 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
90019914:	7812      	ldrb	r2, [r2, #0]
90019916:	e7f0      	b.n	900198fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
90019918:	2d00      	cmp	r5, #0
9001991a:	d0ea      	beq.n	900198f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001991c:	782a      	ldrb	r2, [r5, #0]
9001991e:	b142      	cbz	r2, 90019932 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
90019920:	2a25      	cmp	r2, #37	@ 0x25
90019922:	d001      	beq.n	90019928 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
90019924:	459a      	cmp	sl, r3
90019926:	dc08      	bgt.n	9001993a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
90019928:	f1bb 0f00 	cmp.w	fp, #0
9001992c:	d121      	bne.n	90019972 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
9001992e:	2d00      	cmp	r5, #0
90019930:	d0df      	beq.n	900198f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90019932:	782a      	ldrb	r2, [r5, #0]
90019934:	f04f 0b00 	mov.w	fp, #0
90019938:	e01d      	b.n	90019976 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
9001993a:	f1bb 0f00 	cmp.w	fp, #0
9001993e:	d077      	beq.n	90019a30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x166>
90019940:	f8bb 2000 	ldrh.w	r2, [fp]
90019944:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
90019948:	f1bb 0f00 	cmp.w	fp, #0
9001994c:	d002      	beq.n	90019954 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
9001994e:	f10b 0202 	add.w	r2, fp, #2
90019952:	9209      	str	r2, [sp, #36]	@ 0x24
90019954:	b10d      	cbz	r5, 9001995a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
90019956:	3501      	adds	r5, #1
90019958:	9508      	str	r5, [sp, #32]
9001995a:	3301      	adds	r3, #1
9001995c:	930d      	str	r3, [sp, #52]	@ 0x34
9001995e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90019960:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
90019964:	f1bb 0f00 	cmp.w	fp, #0
90019968:	d0d6      	beq.n	90019918 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
9001996a:	f8bb 2000 	ldrh.w	r2, [fp]
9001996e:	2a00      	cmp	r2, #0
90019970:	d1d6      	bne.n	90019920 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
90019972:	f8bb 2000 	ldrh.w	r2, [fp]
90019976:	2a00      	cmp	r2, #0
90019978:	d0bb      	beq.n	900198f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001997a:	459a      	cmp	sl, r3
9001997c:	ddb9      	ble.n	900198f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
9001997e:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
90019982:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
90019986:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
9001998a:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
9001998e:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
90019992:	960e      	str	r6, [sp, #56]	@ 0x38
90019994:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
90019998:	960f      	str	r6, [sp, #60]	@ 0x3c
9001999a:	f1bb 0f00 	cmp.w	fp, #0
9001999e:	d002      	beq.n	900199a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
900199a0:	f10b 0302 	add.w	r3, fp, #2
900199a4:	9309      	str	r3, [sp, #36]	@ 0x24
900199a6:	b10d      	cbz	r5, 900199ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
900199a8:	1c6b      	adds	r3, r5, #1
900199aa:	9308      	str	r3, [sp, #32]
900199ac:	ab0f      	add	r3, sp, #60	@ 0x3c
900199ae:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
900199b2:	a908      	add	r1, sp, #32
900199b4:	a809      	add	r0, sp, #36	@ 0x24
900199b6:	9305      	str	r3, [sp, #20]
900199b8:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
900199bc:	9304      	str	r3, [sp, #16]
900199be:	ab0e      	add	r3, sp, #56	@ 0x38
900199c0:	9303      	str	r3, [sp, #12]
900199c2:	ab0c      	add	r3, sp, #48	@ 0x30
900199c4:	9302      	str	r3, [sp, #8]
900199c6:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
900199ca:	9301      	str	r3, [sp, #4]
900199cc:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
900199d0:	9300      	str	r3, [sp, #0]
900199d2:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
900199d6:	f7ff fea8 	bl	9001972a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
900199da:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900199dc:	2b00      	cmp	r3, #0
900199de:	bfbf      	itttt	lt
900199e0:	6823      	ldrlt	r3, [r4, #0]
900199e2:	3404      	addlt	r4, #4
900199e4:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
900199e8:	930e      	strlt	r3, [sp, #56]	@ 0x38
900199ea:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900199ec:	2b00      	cmp	r3, #0
900199ee:	bfbe      	ittt	lt
900199f0:	6823      	ldrlt	r3, [r4, #0]
900199f2:	3404      	addlt	r4, #4
900199f4:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
900199f8:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
900199fc:	bfb8      	it	lt
900199fe:	930f      	strlt	r3, [sp, #60]	@ 0x3c
90019a00:	b1d9      	cbz	r1, 90019a3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x170>
90019a02:	880b      	ldrh	r3, [r1, #0]
90019a04:	2b69      	cmp	r3, #105	@ 0x69
90019a06:	d01f      	beq.n	90019a48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90019a08:	d82f      	bhi.n	90019a6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a0>
90019a0a:	2b58      	cmp	r3, #88	@ 0x58
90019a0c:	d01c      	beq.n	90019a48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90019a0e:	d818      	bhi.n	90019a42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x178>
90019a10:	2b25      	cmp	r3, #37	@ 0x25
90019a12:	d034      	beq.n	90019a7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b4>
90019a14:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90019a16:	e9cd 5b08 	strd	r5, fp, [sp, #32]
90019a1a:	f1bb 0f00 	cmp.w	fp, #0
90019a1e:	f000 80b7 	beq.w	90019b90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c6>
90019a22:	f8bb 5000 	ldrh.w	r5, [fp]
90019a26:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
90019a2a:	3301      	adds	r3, #1
90019a2c:	930d      	str	r3, [sp, #52]	@ 0x34
90019a2e:	e029      	b.n	90019a84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
90019a30:	b10d      	cbz	r5, 90019a36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16c>
90019a32:	782a      	ldrb	r2, [r5, #0]
90019a34:	e786      	b.n	90019944 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
90019a36:	462a      	mov	r2, r5
90019a38:	e784      	b.n	90019944 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
90019a3a:	2a00      	cmp	r2, #0
90019a3c:	d0ea      	beq.n	90019a14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90019a3e:	7813      	ldrb	r3, [r2, #0]
90019a40:	e7e0      	b.n	90019a04 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13a>
90019a42:	3b63      	subs	r3, #99	@ 0x63
90019a44:	2b01      	cmp	r3, #1
90019a46:	d8e5      	bhi.n	90019a14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90019a48:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
90019a4c:	b329      	cbz	r1, 90019a9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d0>
90019a4e:	880b      	ldrh	r3, [r1, #0]
90019a50:	2b69      	cmp	r3, #105	@ 0x69
90019a52:	d063      	beq.n	90019b1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
90019a54:	d825      	bhi.n	90019aa2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d8>
90019a56:	2b63      	cmp	r3, #99	@ 0x63
90019a58:	d038      	beq.n	90019acc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x202>
90019a5a:	2b64      	cmp	r3, #100	@ 0x64
90019a5c:	d05e      	beq.n	90019b1c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x252>
90019a5e:	2b58      	cmp	r3, #88	@ 0x58
90019a60:	d07a      	beq.n	90019b58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28e>
90019a62:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
90019a66:	4625      	mov	r5, r4
90019a68:	e036      	b.n	90019ad8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90019a6a:	2b73      	cmp	r3, #115	@ 0x73
90019a6c:	d0ec      	beq.n	90019a48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90019a6e:	d802      	bhi.n	90019a76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ac>
90019a70:	2b6f      	cmp	r3, #111	@ 0x6f
90019a72:	d1cf      	bne.n	90019a14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14a>
90019a74:	e7e8      	b.n	90019a48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90019a76:	2b75      	cmp	r3, #117	@ 0x75
90019a78:	d0e6      	beq.n	90019a48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17e>
90019a7a:	2b78      	cmp	r3, #120	@ 0x78
90019a7c:	e7f9      	b.n	90019a72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a8>
90019a7e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90019a80:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
90019a84:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90019a86:	b10b      	cbz	r3, 90019a8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c2>
90019a88:	3302      	adds	r3, #2
90019a8a:	9309      	str	r3, [sp, #36]	@ 0x24
90019a8c:	9b08      	ldr	r3, [sp, #32]
90019a8e:	2b00      	cmp	r3, #0
90019a90:	f43f af2f 	beq.w	900198f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90019a94:	3301      	adds	r3, #1
90019a96:	9308      	str	r3, [sp, #32]
90019a98:	e72b      	b.n	900198f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
90019a9a:	2a00      	cmp	r2, #0
90019a9c:	d0e1      	beq.n	90019a62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90019a9e:	7813      	ldrb	r3, [r2, #0]
90019aa0:	e7d6      	b.n	90019a50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x186>
90019aa2:	2b73      	cmp	r3, #115	@ 0x73
90019aa4:	d036      	beq.n	90019b14 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24a>
90019aa6:	d807      	bhi.n	90019ab8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ee>
90019aa8:	2b6f      	cmp	r3, #111	@ 0x6f
90019aaa:	d1da      	bne.n	90019a62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90019aac:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90019aae:	1d25      	adds	r5, r4, #4
90019ab0:	2308      	movs	r3, #8
90019ab2:	eba8 0202 	sub.w	r2, r8, r2
90019ab6:	e049      	b.n	90019b4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
90019ab8:	2b75      	cmp	r3, #117	@ 0x75
90019aba:	d042      	beq.n	90019b42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x278>
90019abc:	2b78      	cmp	r3, #120	@ 0x78
90019abe:	d1d0      	bne.n	90019a62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x198>
90019ac0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90019ac2:	1d25      	adds	r5, r4, #4
90019ac4:	2310      	movs	r3, #16
90019ac6:	eba8 0202 	sub.w	r2, r8, r2
90019aca:	e03f      	b.n	90019b4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x282>
90019acc:	6823      	ldr	r3, [r4, #0]
90019ace:	1d25      	adds	r5, r4, #4
90019ad0:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
90019ad4:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
90019ad8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90019ada:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
90019ade:	2b00      	cmp	r3, #0
90019ae0:	d051      	beq.n	90019b86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2bc>
90019ae2:	881a      	ldrh	r2, [r3, #0]
90019ae4:	a80d      	add	r0, sp, #52	@ 0x34
90019ae6:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
90019aea:	462c      	mov	r4, r5
90019aec:	9005      	str	r0, [sp, #20]
90019aee:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
90019af2:	9004      	str	r0, [sp, #16]
90019af4:	980e      	ldr	r0, [sp, #56]	@ 0x38
90019af6:	9003      	str	r0, [sp, #12]
90019af8:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
90019afc:	9002      	str	r0, [sp, #8]
90019afe:	980f      	ldr	r0, [sp, #60]	@ 0x3c
90019b00:	9001      	str	r0, [sp, #4]
90019b02:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
90019b06:	e9cd 8706 	strd	r8, r7, [sp, #24]
90019b0a:	9000      	str	r0, [sp, #0]
90019b0c:	a810      	add	r0, sp, #64	@ 0x40
90019b0e:	f7ff fd49 	bl	900195a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
90019b12:	e7b7      	b.n	90019a84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ba>
90019b14:	1d25      	adds	r5, r4, #4
90019b16:	6823      	ldr	r3, [r4, #0]
90019b18:	9310      	str	r3, [sp, #64]	@ 0x40
90019b1a:	e7dd      	b.n	90019ad8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90019b1c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90019b1e:	230a      	movs	r3, #10
90019b20:	4649      	mov	r1, r9
90019b22:	6820      	ldr	r0, [r4, #0]
90019b24:	eba8 0202 	sub.w	r2, r8, r2
90019b28:	1d25      	adds	r5, r4, #4
90019b2a:	b292      	uxth	r2, r2
90019b2c:	f7ff fcf0 	bl	90019510 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
90019b30:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
90019b34:	2b2d      	cmp	r3, #45	@ 0x2d
90019b36:	d1cf      	bne.n	90019ad8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90019b38:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
90019b3c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90019b3e:	3302      	adds	r3, #2
90019b40:	e7ea      	b.n	90019b18 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24e>
90019b42:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90019b44:	1d25      	adds	r5, r4, #4
90019b46:	230a      	movs	r3, #10
90019b48:	eba8 0202 	sub.w	r2, r8, r2
90019b4c:	b292      	uxth	r2, r2
90019b4e:	4649      	mov	r1, r9
90019b50:	6820      	ldr	r0, [r4, #0]
90019b52:	f7ff fd09 	bl	90019568 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
90019b56:	e7bf      	b.n	90019ad8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90019b58:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90019b5a:	2310      	movs	r3, #16
90019b5c:	4649      	mov	r1, r9
90019b5e:	6820      	ldr	r0, [r4, #0]
90019b60:	eba8 0202 	sub.w	r2, r8, r2
90019b64:	1d25      	adds	r5, r4, #4
90019b66:	b292      	uxth	r2, r2
90019b68:	f7ff fcfe 	bl	90019568 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
90019b6c:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
90019b70:	f832 3f02 	ldrh.w	r3, [r2, #2]!
90019b74:	2b00      	cmp	r3, #0
90019b76:	d0af      	beq.n	90019ad8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x20e>
90019b78:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
90019b7c:	2919      	cmp	r1, #25
90019b7e:	d8f7      	bhi.n	90019b70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
90019b80:	3b20      	subs	r3, #32
90019b82:	8013      	strh	r3, [r2, #0]
90019b84:	e7f4      	b.n	90019b70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2a6>
90019b86:	9a08      	ldr	r2, [sp, #32]
90019b88:	2a00      	cmp	r2, #0
90019b8a:	d0ab      	beq.n	90019ae4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
90019b8c:	7812      	ldrb	r2, [r2, #0]
90019b8e:	e7a9      	b.n	90019ae4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21a>
90019b90:	2d00      	cmp	r5, #0
90019b92:	f43f af48 	beq.w	90019a26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>
90019b96:	782d      	ldrb	r5, [r5, #0]
90019b98:	e745      	b.n	90019a26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15c>

90019b9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
90019b9a:	b507      	push	{r0, r1, r2, lr}
90019b9c:	9300      	str	r3, [sp, #0]
90019b9e:	4613      	mov	r3, r2
90019ba0:	2200      	movs	r2, #0
90019ba2:	f7ff fe92 	bl	900198ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
90019ba6:	b003      	add	sp, #12
90019ba8:	f85d fb04 	ldr.w	pc, [sp], #4

90019bac <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
90019bac:	b40c      	push	{r2, r3}
90019bae:	b507      	push	{r0, r1, r2, lr}
90019bb0:	ab04      	add	r3, sp, #16
90019bb2:	f853 2b04 	ldr.w	r2, [r3], #4
90019bb6:	9301      	str	r3, [sp, #4]
90019bb8:	f7ff ffef 	bl	90019b9a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
90019bbc:	b003      	add	sp, #12
90019bbe:	f85d eb04 	ldr.w	lr, [sp], #4
90019bc2:	b002      	add	sp, #8
90019bc4:	4770      	bx	lr
	...

90019bc8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
90019bc8:	4b01      	ldr	r3, [pc, #4]	@ (90019bd0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
90019bca:	6018      	str	r0, [r3, #0]
90019bcc:	4770      	bx	lr
90019bce:	bf00      	nop
90019bd0:	240219f4 	.word	0x240219f4

90019bd4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
90019bd4:	4b06      	ldr	r3, [pc, #24]	@ (90019bf0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
90019bd6:	881a      	ldrh	r2, [r3, #0]
90019bd8:	4282      	cmp	r2, r0
90019bda:	d807      	bhi.n	90019bec <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
90019bdc:	4b05      	ldr	r3, [pc, #20]	@ (90019bf4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
90019bde:	881b      	ldrh	r3, [r3, #0]
90019be0:	4413      	add	r3, r2
90019be2:	4298      	cmp	r0, r3
90019be4:	bfac      	ite	ge
90019be6:	2000      	movge	r0, #0
90019be8:	2001      	movlt	r0, #1
90019bea:	4770      	bx	lr
90019bec:	2000      	movs	r0, #0
90019bee:	4770      	bx	lr
90019bf0:	24021a14 	.word	0x24021a14
90019bf4:	24021a18 	.word	0x24021a18

90019bf8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
90019bf8:	b508      	push	{r3, lr}
90019bfa:	4601      	mov	r1, r0
90019bfc:	f7ff ffea 	bl	90019bd4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
90019c00:	b118      	cbz	r0, 90019c0a <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
90019c02:	4b02      	ldr	r3, [pc, #8]	@ (90019c0c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
90019c04:	681b      	ldr	r3, [r3, #0]
90019c06:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
90019c0a:	bd08      	pop	{r3, pc}
90019c0c:	240219f8 	.word	0x240219f8

90019c10 <_ZN8touchgfx6Bitmap10clearCacheEv>:
90019c10:	b5f0      	push	{r4, r5, r6, r7, lr}
90019c12:	4c24      	ldr	r4, [pc, #144]	@ (90019ca4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
90019c14:	6823      	ldr	r3, [r4, #0]
90019c16:	2b00      	cmp	r3, #0
90019c18:	d042      	beq.n	90019ca0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
90019c1a:	4a23      	ldr	r2, [pc, #140]	@ (90019ca8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
90019c1c:	4d23      	ldr	r5, [pc, #140]	@ (90019cac <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
90019c1e:	8811      	ldrh	r1, [r2, #0]
90019c20:	f8b5 c000 	ldrh.w	ip, [r5]
90019c24:	4822      	ldr	r0, [pc, #136]	@ (90019cb0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
90019c26:	4461      	add	r1, ip
90019c28:	1c4a      	adds	r2, r1, #1
90019c2a:	008f      	lsls	r7, r1, #2
90019c2c:	f022 0201 	bic.w	r2, r2, #1
90019c30:	19de      	adds	r6, r3, r7
90019c32:	0412      	lsls	r2, r2, #16
90019c34:	6006      	str	r6, [r0, #0]
90019c36:	4e1f      	ldr	r6, [pc, #124]	@ (90019cb4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
90019c38:	0c12      	lsrs	r2, r2, #16
90019c3a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
90019c3e:	19da      	adds	r2, r3, r7
90019c40:	6032      	str	r2, [r6, #0]
90019c42:	220e      	movs	r2, #14
90019c44:	fb02 f20c 	mul.w	r2, r2, ip
90019c48:	3203      	adds	r2, #3
90019c4a:	f022 0203 	bic.w	r2, r2, #3
90019c4e:	443a      	add	r2, r7
90019c50:	4f19      	ldr	r7, [pc, #100]	@ (90019cb8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
90019c52:	4413      	add	r3, r2
90019c54:	603b      	str	r3, [r7, #0]
90019c56:	2300      	movs	r3, #0
90019c58:	4f18      	ldr	r7, [pc, #96]	@ (90019cbc <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
90019c5a:	469c      	mov	ip, r3
90019c5c:	803b      	strh	r3, [r7, #0]
90019c5e:	4f18      	ldr	r7, [pc, #96]	@ (90019cc0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
90019c60:	683f      	ldr	r7, [r7, #0]
90019c62:	1aba      	subs	r2, r7, r2
90019c64:	4f17      	ldr	r7, [pc, #92]	@ (90019cc4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
90019c66:	603a      	str	r2, [r7, #0]
90019c68:	f64f 77ff 	movw	r7, #65535	@ 0xffff
90019c6c:	4a16      	ldr	r2, [pc, #88]	@ (90019cc8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
90019c6e:	8013      	strh	r3, [r2, #0]
90019c70:	428b      	cmp	r3, r1
90019c72:	d10d      	bne.n	90019c90 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
90019c74:	882d      	ldrh	r5, [r5, #0]
90019c76:	2300      	movs	r3, #0
90019c78:	6830      	ldr	r0, [r6, #0]
90019c7a:	240e      	movs	r4, #14
90019c7c:	429d      	cmp	r5, r3
90019c7e:	d90f      	bls.n	90019ca0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
90019c80:	fb04 0203 	mla	r2, r4, r3, r0
90019c84:	3301      	adds	r3, #1
90019c86:	7b11      	ldrb	r1, [r2, #12]
90019c88:	f36f 1145 	bfc	r1, #5, #1
90019c8c:	7311      	strb	r1, [r2, #12]
90019c8e:	e7f5      	b.n	90019c7c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
90019c90:	6822      	ldr	r2, [r4, #0]
90019c92:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
90019c96:	6802      	ldr	r2, [r0, #0]
90019c98:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
90019c9c:	3301      	adds	r3, #1
90019c9e:	e7e7      	b.n	90019c70 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
90019ca0:	bdf0      	pop	{r4, r5, r6, r7, pc}
90019ca2:	bf00      	nop
90019ca4:	240219f8 	.word	0x240219f8
90019ca8:	24021a14 	.word	0x24021a14
90019cac:	24021a18 	.word	0x24021a18
90019cb0:	24021a0c 	.word	0x24021a0c
90019cb4:	240219fc 	.word	0x240219fc
90019cb8:	24021a04 	.word	0x24021a04
90019cbc:	24021a16 	.word	0x24021a16
90019cc0:	24021a00 	.word	0x24021a00
90019cc4:	24021a10 	.word	0x24021a10
90019cc8:	24021a08 	.word	0x24021a08

90019ccc <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
90019ccc:	4b06      	ldr	r3, [pc, #24]	@ (90019ce8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
90019cce:	681b      	ldr	r3, [r3, #0]
90019cd0:	b943      	cbnz	r3, 90019ce4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
90019cd2:	b139      	cbz	r1, 90019ce4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
90019cd4:	4b05      	ldr	r3, [pc, #20]	@ (90019cec <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
90019cd6:	801a      	strh	r2, [r3, #0]
90019cd8:	4b05      	ldr	r3, [pc, #20]	@ (90019cf0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
90019cda:	6019      	str	r1, [r3, #0]
90019cdc:	4b05      	ldr	r3, [pc, #20]	@ (90019cf4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
90019cde:	6018      	str	r0, [r3, #0]
90019ce0:	f7ff bf96 	b.w	90019c10 <_ZN8touchgfx6Bitmap10clearCacheEv>
90019ce4:	4770      	bx	lr
90019ce6:	bf00      	nop
90019ce8:	24021a04 	.word	0x24021a04
90019cec:	24021a18 	.word	0x24021a18
90019cf0:	24021a00 	.word	0x24021a00
90019cf4:	240219f8 	.word	0x240219f8

90019cf8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
90019cf8:	b470      	push	{r4, r5, r6}
90019cfa:	4c07      	ldr	r4, [pc, #28]	@ (90019d18 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
90019cfc:	4605      	mov	r5, r0
90019cfe:	4610      	mov	r0, r2
90019d00:	9a03      	ldr	r2, [sp, #12]
90019d02:	6826      	ldr	r6, [r4, #0]
90019d04:	b936      	cbnz	r6, 90019d14 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
90019d06:	6025      	str	r5, [r4, #0]
90019d08:	4c04      	ldr	r4, [pc, #16]	@ (90019d1c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
90019d0a:	8021      	strh	r1, [r4, #0]
90019d0c:	4619      	mov	r1, r3
90019d0e:	bc70      	pop	{r4, r5, r6}
90019d10:	f7ff bfdc 	b.w	90019ccc <_ZN8touchgfx6Bitmap8setCacheEPtmm>
90019d14:	bc70      	pop	{r4, r5, r6}
90019d16:	4770      	bx	lr
90019d18:	24021a1c 	.word	0x24021a1c
90019d1c:	24021a14 	.word	0x24021a14

90019d20 <_ZNK8touchgfx6Bitmap8getWidthEv>:
90019d20:	4a12      	ldr	r2, [pc, #72]	@ (90019d6c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
90019d22:	8803      	ldrh	r3, [r0, #0]
90019d24:	8812      	ldrh	r2, [r2, #0]
90019d26:	4293      	cmp	r3, r2
90019d28:	d207      	bcs.n	90019d3a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
90019d2a:	4a11      	ldr	r2, [pc, #68]	@ (90019d70 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
90019d2c:	2114      	movs	r1, #20
90019d2e:	6812      	ldr	r2, [r2, #0]
90019d30:	fb01 2303 	mla	r3, r1, r3, r2
90019d34:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
90019d38:	4770      	bx	lr
90019d3a:	490e      	ldr	r1, [pc, #56]	@ (90019d74 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
90019d3c:	8809      	ldrh	r1, [r1, #0]
90019d3e:	4411      	add	r1, r2
90019d40:	428b      	cmp	r3, r1
90019d42:	da04      	bge.n	90019d4e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
90019d44:	1a9b      	subs	r3, r3, r2
90019d46:	4a0c      	ldr	r2, [pc, #48]	@ (90019d78 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
90019d48:	210e      	movs	r1, #14
90019d4a:	6812      	ldr	r2, [r2, #0]
90019d4c:	e7f0      	b.n	90019d30 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
90019d4e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
90019d52:	4293      	cmp	r3, r2
90019d54:	d108      	bne.n	90019d68 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
90019d56:	4b09      	ldr	r3, [pc, #36]	@ (90019d7c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
90019d58:	781b      	ldrb	r3, [r3, #0]
90019d5a:	b91b      	cbnz	r3, 90019d64 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
90019d5c:	4b08      	ldr	r3, [pc, #32]	@ (90019d80 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
90019d5e:	f9b3 0000 	ldrsh.w	r0, [r3]
90019d62:	4770      	bx	lr
90019d64:	4b07      	ldr	r3, [pc, #28]	@ (90019d84 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
90019d66:	e7fa      	b.n	90019d5e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
90019d68:	2000      	movs	r0, #0
90019d6a:	4770      	bx	lr
90019d6c:	24021a14 	.word	0x24021a14
90019d70:	24021a1c 	.word	0x24021a1c
90019d74:	24021a18 	.word	0x24021a18
90019d78:	240219fc 	.word	0x240219fc
90019d7c:	24021984 	.word	0x24021984
90019d80:	24021986 	.word	0x24021986
90019d84:	24021988 	.word	0x24021988

90019d88 <_ZNK8touchgfx6Bitmap9getHeightEv>:
90019d88:	4a12      	ldr	r2, [pc, #72]	@ (90019dd4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
90019d8a:	8803      	ldrh	r3, [r0, #0]
90019d8c:	8812      	ldrh	r2, [r2, #0]
90019d8e:	4293      	cmp	r3, r2
90019d90:	d207      	bcs.n	90019da2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
90019d92:	4a11      	ldr	r2, [pc, #68]	@ (90019dd8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
90019d94:	2114      	movs	r1, #20
90019d96:	6812      	ldr	r2, [r2, #0]
90019d98:	fb01 2303 	mla	r3, r1, r3, r2
90019d9c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
90019da0:	4770      	bx	lr
90019da2:	490e      	ldr	r1, [pc, #56]	@ (90019ddc <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
90019da4:	8809      	ldrh	r1, [r1, #0]
90019da6:	4411      	add	r1, r2
90019da8:	428b      	cmp	r3, r1
90019daa:	da04      	bge.n	90019db6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
90019dac:	1a9b      	subs	r3, r3, r2
90019dae:	4a0c      	ldr	r2, [pc, #48]	@ (90019de0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
90019db0:	210e      	movs	r1, #14
90019db2:	6812      	ldr	r2, [r2, #0]
90019db4:	e7f0      	b.n	90019d98 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
90019db6:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
90019dba:	4293      	cmp	r3, r2
90019dbc:	d108      	bne.n	90019dd0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
90019dbe:	4b09      	ldr	r3, [pc, #36]	@ (90019de4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
90019dc0:	781b      	ldrb	r3, [r3, #0]
90019dc2:	b91b      	cbnz	r3, 90019dcc <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
90019dc4:	4b08      	ldr	r3, [pc, #32]	@ (90019de8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
90019dc6:	f9b3 0000 	ldrsh.w	r0, [r3]
90019dca:	4770      	bx	lr
90019dcc:	4b07      	ldr	r3, [pc, #28]	@ (90019dec <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
90019dce:	e7fa      	b.n	90019dc6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
90019dd0:	2000      	movs	r0, #0
90019dd2:	4770      	bx	lr
90019dd4:	24021a14 	.word	0x24021a14
90019dd8:	24021a1c 	.word	0x24021a1c
90019ddc:	24021a18 	.word	0x24021a18
90019de0:	240219fc 	.word	0x240219fc
90019de4:	24021984 	.word	0x24021984
90019de8:	24021988 	.word	0x24021988
90019dec:	24021986 	.word	0x24021986

90019df0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
90019df0:	4a22      	ldr	r2, [pc, #136]	@ (90019e7c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
90019df2:	b530      	push	{r4, r5, lr}
90019df4:	880b      	ldrh	r3, [r1, #0]
90019df6:	8812      	ldrh	r2, [r2, #0]
90019df8:	4293      	cmp	r3, r2
90019dfa:	d213      	bcs.n	90019e24 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
90019dfc:	4a20      	ldr	r2, [pc, #128]	@ (90019e80 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
90019dfe:	2114      	movs	r1, #20
90019e00:	6812      	ldr	r2, [r2, #0]
90019e02:	fb01 2303 	mla	r3, r1, r3, r2
90019e06:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
90019e0a:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
90019e0e:	8a1a      	ldrh	r2, [r3, #16]
90019e10:	8a5b      	ldrh	r3, [r3, #18]
90019e12:	f3c2 020c 	ubfx	r2, r2, #0, #13
90019e16:	8004      	strh	r4, [r0, #0]
90019e18:	f3c3 030c 	ubfx	r3, r3, #0, #13
90019e1c:	8041      	strh	r1, [r0, #2]
90019e1e:	8082      	strh	r2, [r0, #4]
90019e20:	80c3      	strh	r3, [r0, #6]
90019e22:	e024      	b.n	90019e6e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
90019e24:	4917      	ldr	r1, [pc, #92]	@ (90019e84 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
90019e26:	8809      	ldrh	r1, [r1, #0]
90019e28:	4411      	add	r1, r2
90019e2a:	428b      	cmp	r3, r1
90019e2c:	da10      	bge.n	90019e50 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
90019e2e:	1a9b      	subs	r3, r3, r2
90019e30:	220e      	movs	r2, #14
90019e32:	4353      	muls	r3, r2
90019e34:	4a14      	ldr	r2, [pc, #80]	@ (90019e88 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
90019e36:	6811      	ldr	r1, [r2, #0]
90019e38:	18ca      	adds	r2, r1, r3
90019e3a:	5ecd      	ldrsh	r5, [r1, r3]
90019e3c:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
90019e40:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
90019e44:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
90019e48:	8005      	strh	r5, [r0, #0]
90019e4a:	8044      	strh	r4, [r0, #2]
90019e4c:	8081      	strh	r1, [r0, #4]
90019e4e:	e7e7      	b.n	90019e20 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
90019e50:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
90019e54:	4293      	cmp	r3, r2
90019e56:	d10b      	bne.n	90019e70 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
90019e58:	4b0c      	ldr	r3, [pc, #48]	@ (90019e8c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
90019e5a:	f9b3 1000 	ldrsh.w	r1, [r3]
90019e5e:	4b0c      	ldr	r3, [pc, #48]	@ (90019e90 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
90019e60:	8081      	strh	r1, [r0, #4]
90019e62:	f9b3 2000 	ldrsh.w	r2, [r3]
90019e66:	2300      	movs	r3, #0
90019e68:	80c2      	strh	r2, [r0, #6]
90019e6a:	8003      	strh	r3, [r0, #0]
90019e6c:	8043      	strh	r3, [r0, #2]
90019e6e:	bd30      	pop	{r4, r5, pc}
90019e70:	2300      	movs	r3, #0
90019e72:	8003      	strh	r3, [r0, #0]
90019e74:	8043      	strh	r3, [r0, #2]
90019e76:	8083      	strh	r3, [r0, #4]
90019e78:	e7d2      	b.n	90019e20 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
90019e7a:	bf00      	nop
90019e7c:	24021a14 	.word	0x24021a14
90019e80:	24021a1c 	.word	0x24021a1c
90019e84:	24021a18 	.word	0x24021a18
90019e88:	240219fc 	.word	0x240219fc
90019e8c:	24021980 	.word	0x24021980
90019e90:	24021982 	.word	0x24021982

90019e94 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
90019e94:	4a17      	ldr	r2, [pc, #92]	@ (90019ef4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
90019e96:	8803      	ldrh	r3, [r0, #0]
90019e98:	8812      	ldrh	r2, [r2, #0]
90019e9a:	4293      	cmp	r3, r2
90019e9c:	d213      	bcs.n	90019ec6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
90019e9e:	4a16      	ldr	r2, [pc, #88]	@ (90019ef8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
90019ea0:	2114      	movs	r1, #20
90019ea2:	6812      	ldr	r2, [r2, #0]
90019ea4:	fb01 2303 	mla	r3, r1, r3, r2
90019ea8:	8a1a      	ldrh	r2, [r3, #16]
90019eaa:	8919      	ldrh	r1, [r3, #8]
90019eac:	f3c2 020c 	ubfx	r2, r2, #0, #13
90019eb0:	428a      	cmp	r2, r1
90019eb2:	db1d      	blt.n	90019ef0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
90019eb4:	8a58      	ldrh	r0, [r3, #18]
90019eb6:	f3c0 000c 	ubfx	r0, r0, #0, #13
90019eba:	895b      	ldrh	r3, [r3, #10]
90019ebc:	4298      	cmp	r0, r3
90019ebe:	bfac      	ite	ge
90019ec0:	2000      	movge	r0, #0
90019ec2:	2001      	movlt	r0, #1
90019ec4:	4770      	bx	lr
90019ec6:	490d      	ldr	r1, [pc, #52]	@ (90019efc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
90019ec8:	8809      	ldrh	r1, [r1, #0]
90019eca:	4411      	add	r1, r2
90019ecc:	428b      	cmp	r3, r1
90019ece:	da0d      	bge.n	90019eec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
90019ed0:	1a9b      	subs	r3, r3, r2
90019ed2:	4a0b      	ldr	r2, [pc, #44]	@ (90019f00 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
90019ed4:	210e      	movs	r1, #14
90019ed6:	6812      	ldr	r2, [r2, #0]
90019ed8:	fb01 2303 	mla	r3, r1, r3, r2
90019edc:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
90019ee0:	891a      	ldrh	r2, [r3, #8]
90019ee2:	4291      	cmp	r1, r2
90019ee4:	db04      	blt.n	90019ef0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
90019ee6:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
90019eea:	e7e6      	b.n	90019eba <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
90019eec:	2000      	movs	r0, #0
90019eee:	4770      	bx	lr
90019ef0:	2001      	movs	r0, #1
90019ef2:	4770      	bx	lr
90019ef4:	24021a14 	.word	0x24021a14
90019ef8:	24021a1c 	.word	0x24021a1c
90019efc:	24021a18 	.word	0x24021a18
90019f00:	240219fc 	.word	0x240219fc

90019f04 <_ZNK8touchgfx6Bitmap7getDataEv>:
90019f04:	4a12      	ldr	r2, [pc, #72]	@ (90019f50 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
90019f06:	8803      	ldrh	r3, [r0, #0]
90019f08:	8811      	ldrh	r1, [r2, #0]
90019f0a:	428b      	cmp	r3, r1
90019f0c:	d20b      	bcs.n	90019f26 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
90019f0e:	4a11      	ldr	r2, [pc, #68]	@ (90019f54 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
90019f10:	6812      	ldr	r2, [r2, #0]
90019f12:	b112      	cbz	r2, 90019f1a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
90019f14:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
90019f18:	b9c0      	cbnz	r0, 90019f4c <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
90019f1a:	4a0f      	ldr	r2, [pc, #60]	@ (90019f58 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
90019f1c:	6811      	ldr	r1, [r2, #0]
90019f1e:	2214      	movs	r2, #20
90019f20:	4353      	muls	r3, r2
90019f22:	58c8      	ldr	r0, [r1, r3]
90019f24:	4770      	bx	lr
90019f26:	4a0d      	ldr	r2, [pc, #52]	@ (90019f5c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
90019f28:	8812      	ldrh	r2, [r2, #0]
90019f2a:	440a      	add	r2, r1
90019f2c:	4293      	cmp	r3, r2
90019f2e:	da04      	bge.n	90019f3a <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
90019f30:	4a08      	ldr	r2, [pc, #32]	@ (90019f54 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
90019f32:	6812      	ldr	r2, [r2, #0]
90019f34:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
90019f38:	4770      	bx	lr
90019f3a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
90019f3e:	4293      	cmp	r3, r2
90019f40:	d103      	bne.n	90019f4a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
90019f42:	4b07      	ldr	r3, [pc, #28]	@ (90019f60 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
90019f44:	681b      	ldr	r3, [r3, #0]
90019f46:	6c58      	ldr	r0, [r3, #68]	@ 0x44
90019f48:	4770      	bx	lr
90019f4a:	2000      	movs	r0, #0
90019f4c:	4770      	bx	lr
90019f4e:	bf00      	nop
90019f50:	24021a14 	.word	0x24021a14
90019f54:	240219f8 	.word	0x240219f8
90019f58:	24021a1c 	.word	0x24021a1c
90019f5c:	24021a18 	.word	0x24021a18
90019f60:	2402198c 	.word	0x2402198c

90019f64 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
90019f64:	4b24      	ldr	r3, [pc, #144]	@ (90019ff8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
90019f66:	8802      	ldrh	r2, [r0, #0]
90019f68:	8818      	ldrh	r0, [r3, #0]
90019f6a:	4282      	cmp	r2, r0
90019f6c:	d221      	bcs.n	90019fb2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
90019f6e:	4b23      	ldr	r3, [pc, #140]	@ (90019ffc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
90019f70:	6819      	ldr	r1, [r3, #0]
90019f72:	2314      	movs	r3, #20
90019f74:	fb03 1302 	mla	r3, r3, r2, r1
90019f78:	6858      	ldr	r0, [r3, #4]
90019f7a:	2800      	cmp	r0, #0
90019f7c:	d03a      	beq.n	90019ff4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
90019f7e:	4920      	ldr	r1, [pc, #128]	@ (9001a000 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
90019f80:	6809      	ldr	r1, [r1, #0]
90019f82:	2900      	cmp	r1, #0
90019f84:	d036      	beq.n	90019ff4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
90019f86:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
90019f8a:	2900      	cmp	r1, #0
90019f8c:	d032      	beq.n	90019ff4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
90019f8e:	891a      	ldrh	r2, [r3, #8]
90019f90:	8958      	ldrh	r0, [r3, #10]
90019f92:	4350      	muls	r0, r2
90019f94:	7c5a      	ldrb	r2, [r3, #17]
90019f96:	7cdb      	ldrb	r3, [r3, #19]
90019f98:	0952      	lsrs	r2, r2, #5
90019f9a:	f3c3 1342 	ubfx	r3, r3, #5, #3
90019f9e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
90019fa2:	2b0b      	cmp	r3, #11
90019fa4:	bf18      	it	ne
90019fa6:	0040      	lslne	r0, r0, #1
90019fa8:	3003      	adds	r0, #3
90019faa:	f020 0003 	bic.w	r0, r0, #3
90019fae:	4408      	add	r0, r1
90019fb0:	4770      	bx	lr
90019fb2:	4b14      	ldr	r3, [pc, #80]	@ (9001a004 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
90019fb4:	881b      	ldrh	r3, [r3, #0]
90019fb6:	4403      	add	r3, r0
90019fb8:	429a      	cmp	r2, r3
90019fba:	da1a      	bge.n	90019ff2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
90019fbc:	4b12      	ldr	r3, [pc, #72]	@ (9001a008 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
90019fbe:	1a10      	subs	r0, r2, r0
90019fc0:	210e      	movs	r1, #14
90019fc2:	681b      	ldr	r3, [r3, #0]
90019fc4:	fb01 3000 	mla	r0, r1, r0, r3
90019fc8:	7b03      	ldrb	r3, [r0, #12]
90019fca:	f003 031f 	and.w	r3, r3, #31
90019fce:	2b0b      	cmp	r3, #11
90019fd0:	d10b      	bne.n	90019fea <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
90019fd2:	8903      	ldrh	r3, [r0, #8]
90019fd4:	8940      	ldrh	r0, [r0, #10]
90019fd6:	4358      	muls	r0, r3
90019fd8:	4b09      	ldr	r3, [pc, #36]	@ (9001a000 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
90019fda:	3003      	adds	r0, #3
90019fdc:	6819      	ldr	r1, [r3, #0]
90019fde:	f020 0303 	bic.w	r3, r0, #3
90019fe2:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
90019fe6:	4418      	add	r0, r3
90019fe8:	4770      	bx	lr
90019fea:	2b0d      	cmp	r3, #13
90019fec:	d101      	bne.n	90019ff2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
90019fee:	300d      	adds	r0, #13
90019ff0:	4770      	bx	lr
90019ff2:	2000      	movs	r0, #0
90019ff4:	4770      	bx	lr
90019ff6:	bf00      	nop
90019ff8:	24021a14 	.word	0x24021a14
90019ffc:	24021a1c 	.word	0x24021a1c
9001a000:	240219f8 	.word	0x240219f8
9001a004:	24021a18 	.word	0x24021a18
9001a008:	240219fc 	.word	0x240219fc

9001a00c <_ZNK8touchgfx6Bitmap9getFormatEv>:
9001a00c:	4b1f      	ldr	r3, [pc, #124]	@ (9001a08c <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
9001a00e:	b510      	push	{r4, lr}
9001a010:	8802      	ldrh	r2, [r0, #0]
9001a012:	881b      	ldrh	r3, [r3, #0]
9001a014:	429a      	cmp	r2, r3
9001a016:	d21a      	bcs.n	9001a04e <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
9001a018:	4b1d      	ldr	r3, [pc, #116]	@ (9001a090 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
9001a01a:	2114      	movs	r1, #20
9001a01c:	681b      	ldr	r3, [r3, #0]
9001a01e:	fb01 3102 	mla	r1, r1, r2, r3
9001a022:	7c4b      	ldrb	r3, [r1, #17]
9001a024:	0958      	lsrs	r0, r3, #5
9001a026:	7ccb      	ldrb	r3, [r1, #19]
9001a028:	491a      	ldr	r1, [pc, #104]	@ (9001a094 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
9001a02a:	f3c3 1342 	ubfx	r3, r3, #5, #3
9001a02e:	6809      	ldr	r1, [r1, #0]
9001a030:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
9001a034:	b2d8      	uxtb	r0, r3
9001a036:	b149      	cbz	r1, 9001a04c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001a038:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
9001a03c:	b132      	cbz	r2, 9001a04c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001a03e:	2b0e      	cmp	r3, #14
9001a040:	d021      	beq.n	9001a086 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
9001a042:	280f      	cmp	r0, #15
9001a044:	d01d      	beq.n	9001a082 <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
9001a046:	2810      	cmp	r0, #16
9001a048:	bf08      	it	eq
9001a04a:	2002      	moveq	r0, #2
9001a04c:	bd10      	pop	{r4, pc}
9001a04e:	4912      	ldr	r1, [pc, #72]	@ (9001a098 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
9001a050:	8809      	ldrh	r1, [r1, #0]
9001a052:	4419      	add	r1, r3
9001a054:	428a      	cmp	r2, r1
9001a056:	da09      	bge.n	9001a06c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
9001a058:	1ad3      	subs	r3, r2, r3
9001a05a:	4a10      	ldr	r2, [pc, #64]	@ (9001a09c <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
9001a05c:	210e      	movs	r1, #14
9001a05e:	6812      	ldr	r2, [r2, #0]
9001a060:	fb01 2303 	mla	r3, r1, r3, r2
9001a064:	7b18      	ldrb	r0, [r3, #12]
9001a066:	f000 001f 	and.w	r0, r0, #31
9001a06a:	e7ef      	b.n	9001a04c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001a06c:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
9001a070:	429a      	cmp	r2, r3
9001a072:	d108      	bne.n	9001a086 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
9001a074:	f7f6 fb82 	bl	9001077c <_ZN8touchgfx3HAL3lcdEv>
9001a078:	6803      	ldr	r3, [r0, #0]
9001a07a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9001a07e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001a080:	4718      	bx	r3
9001a082:	2001      	movs	r0, #1
9001a084:	e7e2      	b.n	9001a04c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001a086:	2000      	movs	r0, #0
9001a088:	e7e0      	b.n	9001a04c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
9001a08a:	bf00      	nop
9001a08c:	24021a14 	.word	0x24021a14
9001a090:	24021a1c 	.word	0x24021a1c
9001a094:	240219f8 	.word	0x240219f8
9001a098:	24021a18 	.word	0x24021a18
9001a09c:	240219fc 	.word	0x240219fc

9001a0a0 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
9001a0a0:	2010      	movs	r0, #16
9001a0a2:	4770      	bx	lr

9001a0a4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
9001a0a4:	4b02      	ldr	r3, [pc, #8]	@ (9001a0b0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
9001a0a6:	8818      	ldrh	r0, [r3, #0]
9001a0a8:	0040      	lsls	r0, r0, #1
9001a0aa:	b280      	uxth	r0, r0
9001a0ac:	4770      	bx	lr
9001a0ae:	bf00      	nop
9001a0b0:	24021986 	.word	0x24021986

9001a0b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
9001a0b4:	2bff      	cmp	r3, #255	@ 0xff
9001a0b6:	d05e      	beq.n	9001a176 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
9001a0b8:	2a0b      	cmp	r2, #11
9001a0ba:	d058      	beq.n	9001a16e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
9001a0bc:	d80e      	bhi.n	9001a0dc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
9001a0be:	2a03      	cmp	r2, #3
9001a0c0:	d04d      	beq.n	9001a15e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
9001a0c2:	d804      	bhi.n	9001a0ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
9001a0c4:	2a01      	cmp	r2, #1
9001a0c6:	d04c      	beq.n	9001a162 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
9001a0c8:	d94d      	bls.n	9001a166 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
9001a0ca:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
9001a0cc:	e031      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a0ce:	2a09      	cmp	r2, #9
9001a0d0:	d04d      	beq.n	9001a16e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
9001a0d2:	d84a      	bhi.n	9001a16a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
9001a0d4:	2a08      	cmp	r2, #8
9001a0d6:	d048      	beq.n	9001a16a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
9001a0d8:	2300      	movs	r3, #0
9001a0da:	e02a      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a0dc:	2a2f      	cmp	r2, #47	@ 0x2f
9001a0de:	d02c      	beq.n	9001a13a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
9001a0e0:	d811      	bhi.n	9001a106 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
9001a0e2:	2a2d      	cmp	r2, #45	@ 0x2d
9001a0e4:	d018      	beq.n	9001a118 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
9001a0e6:	d831      	bhi.n	9001a14c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
9001a0e8:	2a2c      	cmp	r2, #44	@ 0x2c
9001a0ea:	d1f5      	bne.n	9001a0d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a0ec:	684a      	ldr	r2, [r1, #4]
9001a0ee:	7813      	ldrb	r3, [r2, #0]
9001a0f0:	7852      	ldrb	r2, [r2, #1]
9001a0f2:	2a00      	cmp	r2, #0
9001a0f4:	d1f0      	bne.n	9001a0d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a0f6:	2b01      	cmp	r3, #1
9001a0f8:	d01d      	beq.n	9001a136 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
9001a0fa:	2b00      	cmp	r3, #0
9001a0fc:	d02d      	beq.n	9001a15a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
9001a0fe:	2b02      	cmp	r3, #2
9001a100:	d1ea      	bne.n	9001a0d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a102:	68c3      	ldr	r3, [r0, #12]
9001a104:	e015      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a106:	2a31      	cmp	r2, #49	@ 0x31
9001a108:	d004      	beq.n	9001a114 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
9001a10a:	d332      	bcc.n	9001a172 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
9001a10c:	2a32      	cmp	r2, #50	@ 0x32
9001a10e:	d030      	beq.n	9001a172 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
9001a110:	2a33      	cmp	r2, #51	@ 0x33
9001a112:	d1e1      	bne.n	9001a0d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a114:	6f43      	ldr	r3, [r0, #116]	@ 0x74
9001a116:	e00c      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a118:	684a      	ldr	r2, [r1, #4]
9001a11a:	7813      	ldrb	r3, [r2, #0]
9001a11c:	7852      	ldrb	r2, [r2, #1]
9001a11e:	2a00      	cmp	r2, #0
9001a120:	d1da      	bne.n	9001a0d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a122:	2b01      	cmp	r3, #1
9001a124:	d004      	beq.n	9001a130 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
9001a126:	d30f      	bcc.n	9001a148 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
9001a128:	2b02      	cmp	r3, #2
9001a12a:	d1d5      	bne.n	9001a0d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a12c:	6943      	ldr	r3, [r0, #20]
9001a12e:	e000      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a130:	6a43      	ldr	r3, [r0, #36]	@ 0x24
9001a132:	4618      	mov	r0, r3
9001a134:	4770      	bx	lr
9001a136:	69c3      	ldr	r3, [r0, #28]
9001a138:	e7fb      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a13a:	684b      	ldr	r3, [r1, #4]
9001a13c:	781a      	ldrb	r2, [r3, #0]
9001a13e:	785b      	ldrb	r3, [r3, #1]
9001a140:	2b00      	cmp	r3, #0
9001a142:	d1c9      	bne.n	9001a0d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a144:	2a00      	cmp	r2, #0
9001a146:	d1f4      	bne.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a148:	6b43      	ldr	r3, [r0, #52]	@ 0x34
9001a14a:	e7f2      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a14c:	684b      	ldr	r3, [r1, #4]
9001a14e:	781a      	ldrb	r2, [r3, #0]
9001a150:	785b      	ldrb	r3, [r3, #1]
9001a152:	2b00      	cmp	r3, #0
9001a154:	d1c0      	bne.n	9001a0d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a156:	2a00      	cmp	r2, #0
9001a158:	d1eb      	bne.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a15a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
9001a15c:	e7e9      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a15e:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
9001a160:	e7e7      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a162:	6d43      	ldr	r3, [r0, #84]	@ 0x54
9001a164:	e7e5      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a166:	6c43      	ldr	r3, [r0, #68]	@ 0x44
9001a168:	e7e3      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a16a:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
9001a16c:	e7e1      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a16e:	6e43      	ldr	r3, [r0, #100]	@ 0x64
9001a170:	e7df      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a172:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
9001a174:	e7dd      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a176:	2a0b      	cmp	r2, #11
9001a178:	d059      	beq.n	9001a22e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
9001a17a:	d80e      	bhi.n	9001a19a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
9001a17c:	2a03      	cmp	r2, #3
9001a17e:	d050      	beq.n	9001a222 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
9001a180:	d804      	bhi.n	9001a18c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
9001a182:	2a01      	cmp	r2, #1
9001a184:	d04f      	beq.n	9001a226 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
9001a186:	d950      	bls.n	9001a22a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
9001a188:	6c03      	ldr	r3, [r0, #64]	@ 0x40
9001a18a:	e7d2      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a18c:	2a09      	cmp	r2, #9
9001a18e:	d04e      	beq.n	9001a22e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
9001a190:	d801      	bhi.n	9001a196 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
9001a192:	2a08      	cmp	r2, #8
9001a194:	d1a0      	bne.n	9001a0d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a196:	6e03      	ldr	r3, [r0, #96]	@ 0x60
9001a198:	e7cb      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a19a:	2a2f      	cmp	r2, #47	@ 0x2f
9001a19c:	d02d      	beq.n	9001a1fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
9001a19e:	d811      	bhi.n	9001a1c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
9001a1a0:	2a2d      	cmp	r2, #45	@ 0x2d
9001a1a2:	d018      	beq.n	9001a1d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
9001a1a4:	d833      	bhi.n	9001a20e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
9001a1a6:	2a2c      	cmp	r2, #44	@ 0x2c
9001a1a8:	d196      	bne.n	9001a0d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a1aa:	684a      	ldr	r2, [r1, #4]
9001a1ac:	7813      	ldrb	r3, [r2, #0]
9001a1ae:	7852      	ldrb	r2, [r2, #1]
9001a1b0:	2a00      	cmp	r2, #0
9001a1b2:	d191      	bne.n	9001a0d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a1b4:	2b01      	cmp	r3, #1
9001a1b6:	d01e      	beq.n	9001a1f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
9001a1b8:	2b00      	cmp	r3, #0
9001a1ba:	d030      	beq.n	9001a21e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
9001a1bc:	2b02      	cmp	r3, #2
9001a1be:	d18b      	bne.n	9001a0d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a1c0:	6903      	ldr	r3, [r0, #16]
9001a1c2:	e7b6      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a1c4:	2a31      	cmp	r2, #49	@ 0x31
9001a1c6:	d004      	beq.n	9001a1d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
9001a1c8:	d333      	bcc.n	9001a232 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001a1ca:	2a32      	cmp	r2, #50	@ 0x32
9001a1cc:	d031      	beq.n	9001a232 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
9001a1ce:	2a33      	cmp	r2, #51	@ 0x33
9001a1d0:	d182      	bne.n	9001a0d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a1d2:	6f83      	ldr	r3, [r0, #120]	@ 0x78
9001a1d4:	e7ad      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a1d6:	684a      	ldr	r2, [r1, #4]
9001a1d8:	7813      	ldrb	r3, [r2, #0]
9001a1da:	7852      	ldrb	r2, [r2, #1]
9001a1dc:	2a00      	cmp	r2, #0
9001a1de:	f47f af7b 	bne.w	9001a0d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a1e2:	2b01      	cmp	r3, #1
9001a1e4:	d005      	beq.n	9001a1f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
9001a1e6:	d310      	bcc.n	9001a20a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
9001a1e8:	2b02      	cmp	r3, #2
9001a1ea:	f47f af75 	bne.w	9001a0d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a1ee:	6983      	ldr	r3, [r0, #24]
9001a1f0:	e79f      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a1f2:	6a83      	ldr	r3, [r0, #40]	@ 0x28
9001a1f4:	e79d      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a1f6:	6a03      	ldr	r3, [r0, #32]
9001a1f8:	e79b      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a1fa:	684b      	ldr	r3, [r1, #4]
9001a1fc:	781a      	ldrb	r2, [r3, #0]
9001a1fe:	785b      	ldrb	r3, [r3, #1]
9001a200:	2b00      	cmp	r3, #0
9001a202:	f47f af69 	bne.w	9001a0d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a206:	2a00      	cmp	r2, #0
9001a208:	d193      	bne.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a20a:	6b83      	ldr	r3, [r0, #56]	@ 0x38
9001a20c:	e791      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a20e:	684b      	ldr	r3, [r1, #4]
9001a210:	781a      	ldrb	r2, [r3, #0]
9001a212:	785b      	ldrb	r3, [r3, #1]
9001a214:	2b00      	cmp	r3, #0
9001a216:	f47f af5f 	bne.w	9001a0d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
9001a21a:	2a00      	cmp	r2, #0
9001a21c:	d189      	bne.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a21e:	6b03      	ldr	r3, [r0, #48]	@ 0x30
9001a220:	e787      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a222:	6d03      	ldr	r3, [r0, #80]	@ 0x50
9001a224:	e785      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a226:	6d83      	ldr	r3, [r0, #88]	@ 0x58
9001a228:	e783      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a22a:	6c83      	ldr	r3, [r0, #72]	@ 0x48
9001a22c:	e781      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a22e:	6e83      	ldr	r3, [r0, #104]	@ 0x68
9001a230:	e77f      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
9001a232:	6f03      	ldr	r3, [r0, #112]	@ 0x70
9001a234:	e77d      	b.n	9001a132 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

9001a236 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a236:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a23a:	b087      	sub	sp, #28
9001a23c:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001a23e:	9205      	str	r2, [sp, #20]
9001a240:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001a244:	9101      	str	r1, [sp, #4]
9001a246:	9202      	str	r2, [sp, #8]
9001a248:	6841      	ldr	r1, [r0, #4]
9001a24a:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001a24e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001a252:	fb01 2404 	mla	r4, r1, r4, r2
9001a256:	6802      	ldr	r2, [r0, #0]
9001a258:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a25c:	f8de 2000 	ldr.w	r2, [lr]
9001a260:	9203      	str	r2, [sp, #12]
9001a262:	f8de 2004 	ldr.w	r2, [lr, #4]
9001a266:	3204      	adds	r2, #4
9001a268:	9204      	str	r2, [sp, #16]
9001a26a:	9a02      	ldr	r2, [sp, #8]
9001a26c:	43d6      	mvns	r6, r2
9001a26e:	b2f6      	uxtb	r6, r6
9001a270:	9a01      	ldr	r2, [sp, #4]
9001a272:	2a00      	cmp	r2, #0
9001a274:	dc03      	bgt.n	9001a27e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001a276:	9a05      	ldr	r2, [sp, #20]
9001a278:	2a00      	cmp	r2, #0
9001a27a:	f340 8129 	ble.w	9001a4d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001a27e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001a280:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001a284:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001a288:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001a28a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001a28e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001a292:	2b00      	cmp	r3, #0
9001a294:	dd0e      	ble.n	9001a2b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001a296:	1408      	asrs	r0, r1, #16
9001a298:	d405      	bmi.n	9001a2a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a29a:	4560      	cmp	r0, ip
9001a29c:	da03      	bge.n	9001a2a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a29e:	1410      	asrs	r0, r2, #16
9001a2a0:	d401      	bmi.n	9001a2a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a2a2:	42b8      	cmp	r0, r7
9001a2a4:	db07      	blt.n	9001a2b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001a2a6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001a2a8:	3b01      	subs	r3, #1
9001a2aa:	3402      	adds	r4, #2
9001a2ac:	4401      	add	r1, r0
9001a2ae:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001a2b0:	4402      	add	r2, r0
9001a2b2:	e7ee      	b.n	9001a292 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001a2b4:	d071      	beq.n	9001a39a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001a2b6:	1e58      	subs	r0, r3, #1
9001a2b8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001a2ba:	fb05 1500 	mla	r5, r5, r0, r1
9001a2be:	142d      	asrs	r5, r5, #16
9001a2c0:	d45f      	bmi.n	9001a382 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001a2c2:	4565      	cmp	r5, ip
9001a2c4:	da5d      	bge.n	9001a382 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001a2c6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001a2c8:	fb05 2000 	mla	r0, r5, r0, r2
9001a2cc:	1400      	asrs	r0, r0, #16
9001a2ce:	d458      	bmi.n	9001a382 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001a2d0:	42b8      	cmp	r0, r7
9001a2d2:	da56      	bge.n	9001a382 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
9001a2d4:	4699      	mov	r9, r3
9001a2d6:	46a2      	mov	sl, r4
9001a2d8:	f8bd b008 	ldrh.w	fp, [sp, #8]
9001a2dc:	f1b9 0f00 	cmp.w	r9, #0
9001a2e0:	dd57      	ble.n	9001a392 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
9001a2e2:	ea4f 4c22 	mov.w	ip, r2, asr #16
9001a2e6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001a2ea:	9803      	ldr	r0, [sp, #12]
9001a2ec:	140d      	asrs	r5, r1, #16
9001a2ee:	f109 39ff 	add.w	r9, r9, #4294967295
9001a2f2:	fb07 000c 	mla	r0, r7, ip, r0
9001a2f6:	5d40      	ldrb	r0, [r0, r5]
9001a2f8:	9d04      	ldr	r5, [sp, #16]
9001a2fa:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001a2fe:	f8ba 5000 	ldrh.w	r5, [sl]
9001a302:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001a306:	122f      	asrs	r7, r5, #8
9001a308:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001a30c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001a310:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001a314:	00ed      	lsls	r5, r5, #3
9001a316:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001a31a:	fb17 f706 	smulbb	r7, r7, r6
9001a31e:	b2ed      	uxtb	r5, r5
9001a320:	fb18 f806 	smulbb	r8, r8, r6
9001a324:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001a328:	10c7      	asrs	r7, r0, #3
9001a32a:	fb15 f506 	smulbb	r5, r5, r6
9001a32e:	00c0      	lsls	r0, r0, #3
9001a330:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001a334:	fa1f fc8c 	uxth.w	ip, ip
9001a338:	b2c0      	uxtb	r0, r0
9001a33a:	fb07 870b 	mla	r7, r7, fp, r8
9001a33e:	fb00 500b 	mla	r0, r0, fp, r5
9001a342:	f10c 0501 	add.w	r5, ip, #1
9001a346:	b2bf      	uxth	r7, r7
9001a348:	b280      	uxth	r0, r0
9001a34a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001a34e:	f107 0801 	add.w	r8, r7, #1
9001a352:	1c45      	adds	r5, r0, #1
9001a354:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001a358:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001a35c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001a360:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001a362:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001a366:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001a36a:	4401      	add	r1, r0
9001a36c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001a370:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001a372:	ea45 0c0c 	orr.w	ip, r5, ip
9001a376:	4402      	add	r2, r0
9001a378:	ea4c 0c08 	orr.w	ip, ip, r8
9001a37c:	f82a cb02 	strh.w	ip, [sl], #2
9001a380:	e7ac      	b.n	9001a2dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001a382:	f04f 0800 	mov.w	r8, #0
9001a386:	f8bd a008 	ldrh.w	sl, [sp, #8]
9001a38a:	eb03 0008 	add.w	r0, r3, r8
9001a38e:	2800      	cmp	r0, #0
9001a390:	dc41      	bgt.n	9001a416 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
9001a392:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a396:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a39a:	9b01      	ldr	r3, [sp, #4]
9001a39c:	2b00      	cmp	r3, #0
9001a39e:	f340 8097 	ble.w	9001a4d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
9001a3a2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001a3a6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a3a8:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a3ac:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a3b0:	eef0 6a62 	vmov.f32	s13, s5
9001a3b4:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001a3b8:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a3bc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001a3c0:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001a3c4:	eef0 6a43 	vmov.f32	s13, s6
9001a3c8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001a3cc:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001a3d0:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a3d4:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a3d8:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a3dc:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a3e0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a3e4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a3e8:	ee12 2a90 	vmov	r2, s5
9001a3ec:	eef0 2a47 	vmov.f32	s5, s14
9001a3f0:	fb92 f3f3 	sdiv	r3, r2, r3
9001a3f4:	ee13 2a10 	vmov	r2, s6
9001a3f8:	9313      	str	r3, [sp, #76]	@ 0x4c
9001a3fa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a3fc:	eeb0 3a67 	vmov.f32	s6, s15
9001a400:	fb92 f3f3 	sdiv	r3, r2, r3
9001a404:	9314      	str	r3, [sp, #80]	@ 0x50
9001a406:	9b01      	ldr	r3, [sp, #4]
9001a408:	9a05      	ldr	r2, [sp, #20]
9001a40a:	3b01      	subs	r3, #1
9001a40c:	9301      	str	r3, [sp, #4]
9001a40e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a410:	bf08      	it	eq
9001a412:	4613      	moveq	r3, r2
9001a414:	e72c      	b.n	9001a270 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001a416:	140f      	asrs	r7, r1, #16
9001a418:	d453      	bmi.n	9001a4c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001a41a:	f8de 5008 	ldr.w	r5, [lr, #8]
9001a41e:	42bd      	cmp	r5, r7
9001a420:	dd4f      	ble.n	9001a4c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001a422:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001a426:	d44c      	bmi.n	9001a4c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001a428:	f8de 000c 	ldr.w	r0, [lr, #12]
9001a42c:	4560      	cmp	r0, ip
9001a42e:	dd48      	ble.n	9001a4c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9001a430:	9803      	ldr	r0, [sp, #12]
9001a432:	b22d      	sxth	r5, r5
9001a434:	fb0c 0505 	mla	r5, ip, r5, r0
9001a438:	5de8      	ldrb	r0, [r5, r7]
9001a43a:	9d04      	ldr	r5, [sp, #16]
9001a43c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001a440:	f06f 0501 	mvn.w	r5, #1
9001a444:	fb05 fb08 	mul.w	fp, r5, r8
9001a448:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001a44c:	f834 500b 	ldrh.w	r5, [r4, fp]
9001a450:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001a454:	122f      	asrs	r7, r5, #8
9001a456:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001a45a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001a45e:	00ed      	lsls	r5, r5, #3
9001a460:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001a464:	fb17 f706 	smulbb	r7, r7, r6
9001a468:	b2ed      	uxtb	r5, r5
9001a46a:	fb19 f906 	smulbb	r9, r9, r6
9001a46e:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001a472:	10c7      	asrs	r7, r0, #3
9001a474:	fb15 f506 	smulbb	r5, r5, r6
9001a478:	00c0      	lsls	r0, r0, #3
9001a47a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001a47e:	fa1f fc8c 	uxth.w	ip, ip
9001a482:	b2c0      	uxtb	r0, r0
9001a484:	fb07 970a 	mla	r7, r7, sl, r9
9001a488:	fb00 500a 	mla	r0, r0, sl, r5
9001a48c:	f10c 0501 	add.w	r5, ip, #1
9001a490:	b2bf      	uxth	r7, r7
9001a492:	b280      	uxth	r0, r0
9001a494:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001a498:	f107 0901 	add.w	r9, r7, #1
9001a49c:	1c45      	adds	r5, r0, #1
9001a49e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001a4a2:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001a4a6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001a4aa:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001a4ae:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001a4b2:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001a4b6:	ea45 0c0c 	orr.w	ip, r5, ip
9001a4ba:	ea4c 0c09 	orr.w	ip, ip, r9
9001a4be:	f824 c00b 	strh.w	ip, [r4, fp]
9001a4c2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001a4c4:	f108 38ff 	add.w	r8, r8, #4294967295
9001a4c8:	4401      	add	r1, r0
9001a4ca:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001a4cc:	4402      	add	r2, r0
9001a4ce:	e75c      	b.n	9001a38a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
9001a4d0:	b007      	add	sp, #28
9001a4d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001a4d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a4d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a4da:	b085      	sub	sp, #20
9001a4dc:	4693      	mov	fp, r2
9001a4de:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001a4e2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001a4e4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001a4e6:	6870      	ldr	r0, [r6, #4]
9001a4e8:	9100      	str	r1, [sp, #0]
9001a4ea:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001a4ee:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001a4f2:	fb00 2404 	mla	r4, r0, r4, r2
9001a4f6:	6832      	ldr	r2, [r6, #0]
9001a4f8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a4fc:	682a      	ldr	r2, [r5, #0]
9001a4fe:	9201      	str	r2, [sp, #4]
9001a500:	686a      	ldr	r2, [r5, #4]
9001a502:	3204      	adds	r2, #4
9001a504:	9202      	str	r2, [sp, #8]
9001a506:	9a00      	ldr	r2, [sp, #0]
9001a508:	2a00      	cmp	r2, #0
9001a50a:	dc03      	bgt.n	9001a514 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001a50c:	f1bb 0f00 	cmp.w	fp, #0
9001a510:	f340 80a0 	ble.w	9001a654 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001a514:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001a516:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001a51a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001a51e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001a520:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001a524:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001a528:	2b00      	cmp	r3, #0
9001a52a:	dd0c      	ble.n	9001a546 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a52c:	1406      	asrs	r6, r0, #16
9001a52e:	d405      	bmi.n	9001a53c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a530:	454e      	cmp	r6, r9
9001a532:	da03      	bge.n	9001a53c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a534:	1416      	asrs	r6, r2, #16
9001a536:	d401      	bmi.n	9001a53c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001a538:	4546      	cmp	r6, r8
9001a53a:	db05      	blt.n	9001a548 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a53c:	4470      	add	r0, lr
9001a53e:	4462      	add	r2, ip
9001a540:	3b01      	subs	r3, #1
9001a542:	3402      	adds	r4, #2
9001a544:	e7f0      	b.n	9001a528 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001a546:	d00f      	beq.n	9001a568 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001a548:	1e5e      	subs	r6, r3, #1
9001a54a:	fb0e 0706 	mla	r7, lr, r6, r0
9001a54e:	143f      	asrs	r7, r7, #16
9001a550:	d541      	bpl.n	9001a5d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
9001a552:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001a556:	4698      	mov	r8, r3
9001a558:	9603      	str	r6, [sp, #12]
9001a55a:	f1b8 0f00 	cmp.w	r8, #0
9001a55e:	dc59      	bgt.n	9001a614 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001a560:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a564:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a568:	9b00      	ldr	r3, [sp, #0]
9001a56a:	2b00      	cmp	r3, #0
9001a56c:	dd72      	ble.n	9001a654 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
9001a56e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a572:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a574:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a578:	eeb0 6a62 	vmov.f32	s12, s5
9001a57c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a580:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a584:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a588:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001a58c:	eeb0 6a43 	vmov.f32	s12, s6
9001a590:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a594:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001a598:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a59c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a5a0:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a5a4:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a5a8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a5ac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a5b0:	ee12 2a90 	vmov	r2, s5
9001a5b4:	eef0 2a47 	vmov.f32	s5, s14
9001a5b8:	fb92 fef3 	sdiv	lr, r2, r3
9001a5bc:	ee13 2a10 	vmov	r2, s6
9001a5c0:	eeb0 3a67 	vmov.f32	s6, s15
9001a5c4:	fb92 fcf3 	sdiv	ip, r2, r3
9001a5c8:	9b00      	ldr	r3, [sp, #0]
9001a5ca:	3b01      	subs	r3, #1
9001a5cc:	9300      	str	r3, [sp, #0]
9001a5ce:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a5d0:	bf08      	it	eq
9001a5d2:	465b      	moveq	r3, fp
9001a5d4:	e797      	b.n	9001a506 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001a5d6:	454f      	cmp	r7, r9
9001a5d8:	dabb      	bge.n	9001a552 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001a5da:	fb0c 2606 	mla	r6, ip, r6, r2
9001a5de:	1436      	asrs	r6, r6, #16
9001a5e0:	d4b7      	bmi.n	9001a552 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001a5e2:	4546      	cmp	r6, r8
9001a5e4:	dab5      	bge.n	9001a552 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001a5e6:	461e      	mov	r6, r3
9001a5e8:	46a0      	mov	r8, r4
9001a5ea:	2e00      	cmp	r6, #0
9001a5ec:	ddb8      	ble.n	9001a560 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001a5ee:	1417      	asrs	r7, r2, #16
9001a5f0:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001a5f4:	9901      	ldr	r1, [sp, #4]
9001a5f6:	ea4f 4920 	mov.w	r9, r0, asr #16
9001a5fa:	4462      	add	r2, ip
9001a5fc:	4470      	add	r0, lr
9001a5fe:	fb0a 1707 	mla	r7, sl, r7, r1
9001a602:	9902      	ldr	r1, [sp, #8]
9001a604:	3e01      	subs	r6, #1
9001a606:	f817 7009 	ldrb.w	r7, [r7, r9]
9001a60a:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001a60e:	f828 7b02 	strh.w	r7, [r8], #2
9001a612:	e7ea      	b.n	9001a5ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
9001a614:	ea5f 4920 	movs.w	r9, r0, asr #16
9001a618:	d417      	bmi.n	9001a64a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001a61a:	68ae      	ldr	r6, [r5, #8]
9001a61c:	454e      	cmp	r6, r9
9001a61e:	dd14      	ble.n	9001a64a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001a620:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001a624:	d411      	bmi.n	9001a64a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001a626:	68ef      	ldr	r7, [r5, #12]
9001a628:	4557      	cmp	r7, sl
9001a62a:	dd0e      	ble.n	9001a64a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
9001a62c:	9f01      	ldr	r7, [sp, #4]
9001a62e:	b236      	sxth	r6, r6
9001a630:	f06f 0101 	mvn.w	r1, #1
9001a634:	fb0a 7606 	mla	r6, sl, r6, r7
9001a638:	9f02      	ldr	r7, [sp, #8]
9001a63a:	f816 6009 	ldrb.w	r6, [r6, r9]
9001a63e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001a642:	fb01 f608 	mul.w	r6, r1, r8
9001a646:	9903      	ldr	r1, [sp, #12]
9001a648:	538f      	strh	r7, [r1, r6]
9001a64a:	4470      	add	r0, lr
9001a64c:	4462      	add	r2, ip
9001a64e:	f108 38ff 	add.w	r8, r8, #4294967295
9001a652:	e782      	b.n	9001a55a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001a654:	b005      	add	sp, #20
9001a656:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001a65a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a65a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a65e:	b087      	sub	sp, #28
9001a660:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001a662:	9205      	str	r2, [sp, #20]
9001a664:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001a668:	9102      	str	r1, [sp, #8]
9001a66a:	9203      	str	r2, [sp, #12]
9001a66c:	6861      	ldr	r1, [r4, #4]
9001a66e:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001a672:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001a676:	fb01 2000 	mla	r0, r1, r0, r2
9001a67a:	6822      	ldr	r2, [r4, #0]
9001a67c:	eb02 0240 	add.w	r2, r2, r0, lsl #1
9001a680:	9200      	str	r2, [sp, #0]
9001a682:	f8dc 2000 	ldr.w	r2, [ip]
9001a686:	9204      	str	r2, [sp, #16]
9001a688:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001a68c:	3204      	adds	r2, #4
9001a68e:	9201      	str	r2, [sp, #4]
9001a690:	9a03      	ldr	r2, [sp, #12]
9001a692:	43d5      	mvns	r5, r2
9001a694:	b2ed      	uxtb	r5, r5
9001a696:	9a02      	ldr	r2, [sp, #8]
9001a698:	2a00      	cmp	r2, #0
9001a69a:	dc03      	bgt.n	9001a6a4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001a69c:	9a05      	ldr	r2, [sp, #20]
9001a69e:	2a00      	cmp	r2, #0
9001a6a0:	f340 812c 	ble.w	9001a8fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001a6a4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001a6a6:	f9bc e008 	ldrsh.w	lr, [ip, #8]
9001a6aa:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001a6ae:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001a6b0:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
9001a6b4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001a6b8:	2b00      	cmp	r3, #0
9001a6ba:	dd10      	ble.n	9001a6de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001a6bc:	140c      	asrs	r4, r1, #16
9001a6be:	d405      	bmi.n	9001a6cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a6c0:	4574      	cmp	r4, lr
9001a6c2:	da03      	bge.n	9001a6cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a6c4:	1414      	asrs	r4, r2, #16
9001a6c6:	d401      	bmi.n	9001a6cc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a6c8:	42bc      	cmp	r4, r7
9001a6ca:	db09      	blt.n	9001a6e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
9001a6cc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001a6ce:	3b01      	subs	r3, #1
9001a6d0:	9800      	ldr	r0, [sp, #0]
9001a6d2:	4421      	add	r1, r4
9001a6d4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001a6d6:	3002      	adds	r0, #2
9001a6d8:	4422      	add	r2, r4
9001a6da:	9000      	str	r0, [sp, #0]
9001a6dc:	e7ec      	b.n	9001a6b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001a6de:	d071      	beq.n	9001a7c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
9001a6e0:	1e5c      	subs	r4, r3, #1
9001a6e2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001a6e4:	fb06 1604 	mla	r6, r6, r4, r1
9001a6e8:	1436      	asrs	r6, r6, #16
9001a6ea:	d45d      	bmi.n	9001a7a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001a6ec:	4576      	cmp	r6, lr
9001a6ee:	da5b      	bge.n	9001a7a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001a6f0:	9e14      	ldr	r6, [sp, #80]	@ 0x50
9001a6f2:	fb06 2404 	mla	r4, r6, r4, r2
9001a6f6:	1424      	asrs	r4, r4, #16
9001a6f8:	d456      	bmi.n	9001a7a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001a6fa:	42bc      	cmp	r4, r7
9001a6fc:	da54      	bge.n	9001a7a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001a6fe:	4698      	mov	r8, r3
9001a700:	f8dd 9000 	ldr.w	r9, [sp]
9001a704:	f8bd a00c 	ldrh.w	sl, [sp, #12]
9001a708:	f1b8 0f00 	cmp.w	r8, #0
9001a70c:	dd54      	ble.n	9001a7b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001a70e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001a712:	1414      	asrs	r4, r2, #16
9001a714:	9804      	ldr	r0, [sp, #16]
9001a716:	140e      	asrs	r6, r1, #16
9001a718:	f108 38ff 	add.w	r8, r8, #4294967295
9001a71c:	fb07 0404 	mla	r4, r7, r4, r0
9001a720:	9801      	ldr	r0, [sp, #4]
9001a722:	f814 e006 	ldrb.w	lr, [r4, r6]
9001a726:	f8b9 4000 	ldrh.w	r4, [r9]
9001a72a:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001a72e:	1227      	asrs	r7, r4, #8
9001a730:	eb00 0b0e 	add.w	fp, r0, lr
9001a734:	f810 e00e 	ldrb.w	lr, [r0, lr]
9001a738:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001a73c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001a73e:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001a742:	f89b b001 	ldrb.w	fp, [fp, #1]
9001a746:	4401      	add	r1, r0
9001a748:	fb16 f60a 	smulbb	r6, r6, sl
9001a74c:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001a74e:	fb1b fb0a 	smulbb	fp, fp, sl
9001a752:	fb07 6705 	mla	r7, r7, r5, r6
9001a756:	10e6      	asrs	r6, r4, #3
9001a758:	00e4      	lsls	r4, r4, #3
9001a75a:	4402      	add	r2, r0
9001a75c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001a760:	b2bf      	uxth	r7, r7
9001a762:	b2e4      	uxtb	r4, r4
9001a764:	fb06 b605 	mla	r6, r6, r5, fp
9001a768:	fb14 f405 	smulbb	r4, r4, r5
9001a76c:	b2b6      	uxth	r6, r6
9001a76e:	fb0e 4e0a 	mla	lr, lr, sl, r4
9001a772:	1c7c      	adds	r4, r7, #1
9001a774:	f106 0b01 	add.w	fp, r6, #1
9001a778:	fa1f fe8e 	uxth.w	lr, lr
9001a77c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001a780:	f10e 0401 	add.w	r4, lr, #1
9001a784:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001a788:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001a78c:	eb04 241e 	add.w	r4, r4, lr, lsr #8
9001a790:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001a794:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001a798:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001a79c:	4327      	orrs	r7, r4
9001a79e:	ea47 070b 	orr.w	r7, r7, fp
9001a7a2:	f829 7b02 	strh.w	r7, [r9], #2
9001a7a6:	e7af      	b.n	9001a708 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
9001a7a8:	f04f 0e00 	mov.w	lr, #0
9001a7ac:	f8bd 900c 	ldrh.w	r9, [sp, #12]
9001a7b0:	eb03 040e 	add.w	r4, r3, lr
9001a7b4:	2c00      	cmp	r4, #0
9001a7b6:	dc43      	bgt.n	9001a840 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
9001a7b8:	9a00      	ldr	r2, [sp, #0]
9001a7ba:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a7be:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001a7c2:	9300      	str	r3, [sp, #0]
9001a7c4:	9b02      	ldr	r3, [sp, #8]
9001a7c6:	2b00      	cmp	r3, #0
9001a7c8:	f340 8098 	ble.w	9001a8fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001a7cc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001a7d0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a7d2:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a7d6:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a7da:	eef0 6a62 	vmov.f32	s13, s5
9001a7de:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001a7e2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a7e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001a7ea:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
9001a7ee:	eef0 6a43 	vmov.f32	s13, s6
9001a7f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001a7f6:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
9001a7fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a7fe:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a802:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a806:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a80a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a80e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a812:	ee12 2a90 	vmov	r2, s5
9001a816:	eef0 2a47 	vmov.f32	s5, s14
9001a81a:	fb92 f3f3 	sdiv	r3, r2, r3
9001a81e:	ee13 2a10 	vmov	r2, s6
9001a822:	9313      	str	r3, [sp, #76]	@ 0x4c
9001a824:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a826:	eeb0 3a67 	vmov.f32	s6, s15
9001a82a:	fb92 f3f3 	sdiv	r3, r2, r3
9001a82e:	9314      	str	r3, [sp, #80]	@ 0x50
9001a830:	9b02      	ldr	r3, [sp, #8]
9001a832:	9a05      	ldr	r2, [sp, #20]
9001a834:	3b01      	subs	r3, #1
9001a836:	9302      	str	r3, [sp, #8]
9001a838:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001a83a:	bf08      	it	eq
9001a83c:	4613      	moveq	r3, r2
9001a83e:	e72a      	b.n	9001a696 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001a840:	140f      	asrs	r7, r1, #16
9001a842:	d454      	bmi.n	9001a8ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a844:	f8dc 6008 	ldr.w	r6, [ip, #8]
9001a848:	42be      	cmp	r6, r7
9001a84a:	dd50      	ble.n	9001a8ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a84c:	ea5f 4822 	movs.w	r8, r2, asr #16
9001a850:	d44d      	bmi.n	9001a8ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a852:	f8dc 400c 	ldr.w	r4, [ip, #12]
9001a856:	4544      	cmp	r4, r8
9001a858:	dd49      	ble.n	9001a8ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001a85a:	9c04      	ldr	r4, [sp, #16]
9001a85c:	b236      	sxth	r6, r6
9001a85e:	f06f 0001 	mvn.w	r0, #1
9001a862:	fb08 4606 	mla	r6, r8, r6, r4
9001a866:	9c01      	ldr	r4, [sp, #4]
9001a868:	fb00 fa0e 	mul.w	sl, r0, lr
9001a86c:	9800      	ldr	r0, [sp, #0]
9001a86e:	f816 8007 	ldrb.w	r8, [r6, r7]
9001a872:	eb08 0848 	add.w	r8, r8, r8, lsl #1
9001a876:	eb04 0b08 	add.w	fp, r4, r8
9001a87a:	f830 400a 	ldrh.w	r4, [r0, sl]
9001a87e:	9801      	ldr	r0, [sp, #4]
9001a880:	f89b 6002 	ldrb.w	r6, [fp, #2]
9001a884:	1227      	asrs	r7, r4, #8
9001a886:	f89b b001 	ldrb.w	fp, [fp, #1]
9001a88a:	fb16 f609 	smulbb	r6, r6, r9
9001a88e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001a892:	f810 8008 	ldrb.w	r8, [r0, r8]
9001a896:	fb1b fb09 	smulbb	fp, fp, r9
9001a89a:	fb07 6705 	mla	r7, r7, r5, r6
9001a89e:	10e6      	asrs	r6, r4, #3
9001a8a0:	00e4      	lsls	r4, r4, #3
9001a8a2:	9800      	ldr	r0, [sp, #0]
9001a8a4:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001a8a8:	b2bf      	uxth	r7, r7
9001a8aa:	b2e4      	uxtb	r4, r4
9001a8ac:	fb06 b605 	mla	r6, r6, r5, fp
9001a8b0:	fb14 f405 	smulbb	r4, r4, r5
9001a8b4:	b2b6      	uxth	r6, r6
9001a8b6:	fb08 4809 	mla	r8, r8, r9, r4
9001a8ba:	1c7c      	adds	r4, r7, #1
9001a8bc:	f106 0b01 	add.w	fp, r6, #1
9001a8c0:	fa1f f888 	uxth.w	r8, r8
9001a8c4:	eb04 2717 	add.w	r7, r4, r7, lsr #8
9001a8c8:	f108 0401 	add.w	r4, r8, #1
9001a8cc:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
9001a8d0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001a8d4:	eb04 2418 	add.w	r4, r4, r8, lsr #8
9001a8d8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
9001a8dc:	f3c4 24c4 	ubfx	r4, r4, #11, #5
9001a8e0:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001a8e4:	4327      	orrs	r7, r4
9001a8e6:	ea47 070b 	orr.w	r7, r7, fp
9001a8ea:	f820 700a 	strh.w	r7, [r0, sl]
9001a8ee:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001a8f0:	f10e 3eff 	add.w	lr, lr, #4294967295
9001a8f4:	4401      	add	r1, r0
9001a8f6:	9814      	ldr	r0, [sp, #80]	@ 0x50
9001a8f8:	4402      	add	r2, r0
9001a8fa:	e759      	b.n	9001a7b0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001a8fc:	b007      	add	sp, #28
9001a8fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001a904 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001a904:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001a908:	b085      	sub	sp, #20
9001a90a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001a90e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001a910:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001a912:	9203      	str	r2, [sp, #12]
9001a914:	6870      	ldr	r0, [r6, #4]
9001a916:	686f      	ldr	r7, [r5, #4]
9001a918:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
9001a91c:	3704      	adds	r7, #4
9001a91e:	9101      	str	r1, [sp, #4]
9001a920:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001a924:	fb00 2404 	mla	r4, r0, r4, r2
9001a928:	6832      	ldr	r2, [r6, #0]
9001a92a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001a92e:	682a      	ldr	r2, [r5, #0]
9001a930:	9202      	str	r2, [sp, #8]
9001a932:	9a01      	ldr	r2, [sp, #4]
9001a934:	2a00      	cmp	r2, #0
9001a936:	dc03      	bgt.n	9001a940 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001a938:	9a03      	ldr	r2, [sp, #12]
9001a93a:	2a00      	cmp	r2, #0
9001a93c:	f340 80cc 	ble.w	9001aad8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001a940:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001a942:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001a946:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001a94a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001a94c:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001a950:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001a954:	2b00      	cmp	r3, #0
9001a956:	dd0d      	ble.n	9001a974 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001a958:	1406      	asrs	r6, r0, #16
9001a95a:	d405      	bmi.n	9001a968 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001a95c:	454e      	cmp	r6, r9
9001a95e:	da03      	bge.n	9001a968 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001a960:	1416      	asrs	r6, r2, #16
9001a962:	d401      	bmi.n	9001a968 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
9001a964:	4546      	cmp	r6, r8
9001a966:	db06      	blt.n	9001a976 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001a968:	9e12      	ldr	r6, [sp, #72]	@ 0x48
9001a96a:	4460      	add	r0, ip
9001a96c:	3b01      	subs	r3, #1
9001a96e:	3402      	adds	r4, #2
9001a970:	4432      	add	r2, r6
9001a972:	e7ef      	b.n	9001a954 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
9001a974:	d00f      	beq.n	9001a996 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001a976:	1e5e      	subs	r6, r3, #1
9001a978:	fb0c 0e06 	mla	lr, ip, r6, r0
9001a97c:	ea5f 4e2e 	movs.w	lr, lr, asr #16
9001a980:	d543      	bpl.n	9001aa0a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
9001a982:	4698      	mov	r8, r3
9001a984:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
9001a988:	f1b8 0f00 	cmp.w	r8, #0
9001a98c:	dc71      	bgt.n	9001aa72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
9001a98e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001a992:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001a996:	9b01      	ldr	r3, [sp, #4]
9001a998:	2b00      	cmp	r3, #0
9001a99a:	f340 809d 	ble.w	9001aad8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
9001a99e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001a9a2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001a9a4:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001a9a8:	eeb0 6a62 	vmov.f32	s12, s5
9001a9ac:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001a9b0:	ee31 1a05 	vadd.f32	s2, s2, s10
9001a9b4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a9b8:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001a9bc:	eeb0 6a43 	vmov.f32	s12, s6
9001a9c0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001a9c4:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001a9c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001a9cc:	ee61 7a27 	vmul.f32	s15, s2, s15
9001a9d0:	ee77 2a62 	vsub.f32	s5, s14, s5
9001a9d4:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001a9d8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001a9dc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001a9e0:	ee12 2a90 	vmov	r2, s5
9001a9e4:	eef0 2a47 	vmov.f32	s5, s14
9001a9e8:	fb92 fcf3 	sdiv	ip, r2, r3
9001a9ec:	ee13 2a10 	vmov	r2, s6
9001a9f0:	eeb0 3a67 	vmov.f32	s6, s15
9001a9f4:	fb92 f3f3 	sdiv	r3, r2, r3
9001a9f8:	9312      	str	r3, [sp, #72]	@ 0x48
9001a9fa:	9b01      	ldr	r3, [sp, #4]
9001a9fc:	9a03      	ldr	r2, [sp, #12]
9001a9fe:	3b01      	subs	r3, #1
9001aa00:	9301      	str	r3, [sp, #4]
9001aa02:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001aa04:	bf08      	it	eq
9001aa06:	4613      	moveq	r3, r2
9001aa08:	e793      	b.n	9001a932 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
9001aa0a:	45ce      	cmp	lr, r9
9001aa0c:	dab9      	bge.n	9001a982 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001aa0e:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001aa10:	fb01 2606 	mla	r6, r1, r6, r2
9001aa14:	1436      	asrs	r6, r6, #16
9001aa16:	d4b4      	bmi.n	9001a982 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001aa18:	4546      	cmp	r6, r8
9001aa1a:	dab2      	bge.n	9001a982 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001aa1c:	4698      	mov	r8, r3
9001aa1e:	46a2      	mov	sl, r4
9001aa20:	f1b8 0f00 	cmp.w	r8, #0
9001aa24:	ddb3      	ble.n	9001a98e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9001aa26:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001aa2a:	1416      	asrs	r6, r2, #16
9001aa2c:	9902      	ldr	r1, [sp, #8]
9001aa2e:	ea4f 4e20 	mov.w	lr, r0, asr #16
9001aa32:	f108 38ff 	add.w	r8, r8, #4294967295
9001aa36:	4460      	add	r0, ip
9001aa38:	fb09 1606 	mla	r6, r9, r6, r1
9001aa3c:	4928      	ldr	r1, [pc, #160]	@ (9001aae0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
9001aa3e:	f816 e00e 	ldrb.w	lr, [r6, lr]
9001aa42:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001aa46:	eb07 0b0e 	add.w	fp, r7, lr
9001aa4a:	f89b 6001 	ldrb.w	r6, [fp, #1]
9001aa4e:	f89b 9002 	ldrb.w	r9, [fp, #2]
9001aa52:	00f6      	lsls	r6, r6, #3
9001aa54:	ea01 2909 	and.w	r9, r1, r9, lsl #8
9001aa58:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001aa5a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001aa5e:	440a      	add	r2, r1
9001aa60:	ea49 0606 	orr.w	r6, r9, r6
9001aa64:	f817 900e 	ldrb.w	r9, [r7, lr]
9001aa68:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
9001aa6c:	f82a 6b02 	strh.w	r6, [sl], #2
9001aa70:	e7d6      	b.n	9001aa20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001aa72:	ea5f 4920 	movs.w	r9, r0, asr #16
9001aa76:	d429      	bmi.n	9001aacc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001aa78:	68ae      	ldr	r6, [r5, #8]
9001aa7a:	454e      	cmp	r6, r9
9001aa7c:	dd26      	ble.n	9001aacc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001aa7e:	ea5f 4b22 	movs.w	fp, r2, asr #16
9001aa82:	d423      	bmi.n	9001aacc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001aa84:	68e9      	ldr	r1, [r5, #12]
9001aa86:	4559      	cmp	r1, fp
9001aa88:	dd20      	ble.n	9001aacc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
9001aa8a:	fa0f fe86 	sxth.w	lr, r6
9001aa8e:	9902      	ldr	r1, [sp, #8]
9001aa90:	fb0b 1e0e 	mla	lr, fp, lr, r1
9001aa94:	f06f 0101 	mvn.w	r1, #1
9001aa98:	f81e e009 	ldrb.w	lr, [lr, r9]
9001aa9c:	fb01 f908 	mul.w	r9, r1, r8
9001aaa0:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
9001aaa4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001aaa8:	eb07 060e 	add.w	r6, r7, lr
9001aaac:	f896 b002 	ldrb.w	fp, [r6, #2]
9001aab0:	7876      	ldrb	r6, [r6, #1]
9001aab2:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
9001aab6:	00f6      	lsls	r6, r6, #3
9001aab8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001aabc:	ea4b 0606 	orr.w	r6, fp, r6
9001aac0:	f817 b00e 	ldrb.w	fp, [r7, lr]
9001aac4:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
9001aac8:	f82a 6009 	strh.w	r6, [sl, r9]
9001aacc:	9912      	ldr	r1, [sp, #72]	@ 0x48
9001aace:	4460      	add	r0, ip
9001aad0:	f108 38ff 	add.w	r8, r8, #4294967295
9001aad4:	440a      	add	r2, r1
9001aad6:	e757      	b.n	9001a988 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001aad8:	b005      	add	sp, #20
9001aada:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001aade:	bf00      	nop
9001aae0:	fffff800 	.word	0xfffff800

9001aae4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001aae4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001aae8:	b087      	sub	sp, #28
9001aaea:	468b      	mov	fp, r1
9001aaec:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001aaf0:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001aaf2:	9204      	str	r2, [sp, #16]
9001aaf4:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001aaf8:	6841      	ldr	r1, [r0, #4]
9001aafa:	9205      	str	r2, [sp, #20]
9001aafc:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
9001ab00:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001ab04:	fb01 2404 	mla	r4, r1, r4, r2
9001ab08:	6802      	ldr	r2, [r0, #0]
9001ab0a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001ab0e:	f8dc 2000 	ldr.w	r2, [ip]
9001ab12:	9201      	str	r2, [sp, #4]
9001ab14:	f8dc 2004 	ldr.w	r2, [ip, #4]
9001ab18:	3204      	adds	r2, #4
9001ab1a:	9202      	str	r2, [sp, #8]
9001ab1c:	f1bb 0f00 	cmp.w	fp, #0
9001ab20:	dc03      	bgt.n	9001ab2a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
9001ab22:	9a04      	ldr	r2, [sp, #16]
9001ab24:	2a00      	cmp	r2, #0
9001ab26:	f340 8138 	ble.w	9001ad9a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001ab2a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001ab2c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
9001ab30:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001ab34:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001ab36:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
9001ab3a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001ab3e:	2b00      	cmp	r3, #0
9001ab40:	dd0e      	ble.n	9001ab60 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001ab42:	1402      	asrs	r2, r0, #16
9001ab44:	d405      	bmi.n	9001ab52 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001ab46:	42ba      	cmp	r2, r7
9001ab48:	da03      	bge.n	9001ab52 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001ab4a:	140a      	asrs	r2, r1, #16
9001ab4c:	d401      	bmi.n	9001ab52 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001ab4e:	42b2      	cmp	r2, r6
9001ab50:	db07      	blt.n	9001ab62 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001ab52:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ab54:	3b01      	subs	r3, #1
9001ab56:	3402      	adds	r4, #2
9001ab58:	4410      	add	r0, r2
9001ab5a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ab5c:	4411      	add	r1, r2
9001ab5e:	e7ee      	b.n	9001ab3e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
9001ab60:	d019      	beq.n	9001ab96 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001ab62:	1e5a      	subs	r2, r3, #1
9001ab64:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001ab66:	fb05 0502 	mla	r5, r5, r2, r0
9001ab6a:	142d      	asrs	r5, r5, #16
9001ab6c:	d409      	bmi.n	9001ab82 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001ab6e:	42bd      	cmp	r5, r7
9001ab70:	da07      	bge.n	9001ab82 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001ab72:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001ab74:	fb05 1202 	mla	r2, r5, r2, r1
9001ab78:	1412      	asrs	r2, r2, #16
9001ab7a:	d402      	bmi.n	9001ab82 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001ab7c:	42b2      	cmp	r2, r6
9001ab7e:	f2c0 80ac 	blt.w	9001acda <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
9001ab82:	f04f 0e00 	mov.w	lr, #0
9001ab86:	eb03 020e 	add.w	r2, r3, lr
9001ab8a:	2a00      	cmp	r2, #0
9001ab8c:	dc3e      	bgt.n	9001ac0c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001ab8e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ab92:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ab96:	f1bb 0f00 	cmp.w	fp, #0
9001ab9a:	f340 80fe 	ble.w	9001ad9a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
9001ab9e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001aba2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001aba4:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001aba8:	f1bb 0b01 	subs.w	fp, fp, #1
9001abac:	eeb0 6a62 	vmov.f32	s12, s5
9001abb0:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001abb4:	ee31 1a05 	vadd.f32	s2, s2, s10
9001abb8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001abbc:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001abc0:	eeb0 6a43 	vmov.f32	s12, s6
9001abc4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001abc8:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001abcc:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001abd0:	ee61 7a27 	vmul.f32	s15, s2, s15
9001abd4:	ee77 2a62 	vsub.f32	s5, s14, s5
9001abd8:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001abdc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001abe0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001abe4:	ee12 2a90 	vmov	r2, s5
9001abe8:	eef0 2a47 	vmov.f32	s5, s14
9001abec:	fb92 f3f3 	sdiv	r3, r2, r3
9001abf0:	ee13 2a10 	vmov	r2, s6
9001abf4:	9313      	str	r3, [sp, #76]	@ 0x4c
9001abf6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001abf8:	eeb0 3a67 	vmov.f32	s6, s15
9001abfc:	fb92 f3f3 	sdiv	r3, r2, r3
9001ac00:	9a04      	ldr	r2, [sp, #16]
9001ac02:	9314      	str	r3, [sp, #80]	@ 0x50
9001ac04:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001ac06:	bf08      	it	eq
9001ac08:	4613      	moveq	r3, r2
9001ac0a:	e787      	b.n	9001ab1c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001ac0c:	1406      	asrs	r6, r0, #16
9001ac0e:	d45d      	bmi.n	9001accc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001ac10:	f8dc 5008 	ldr.w	r5, [ip, #8]
9001ac14:	42b5      	cmp	r5, r6
9001ac16:	dd59      	ble.n	9001accc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001ac18:	140f      	asrs	r7, r1, #16
9001ac1a:	d457      	bmi.n	9001accc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001ac1c:	f8dc 200c 	ldr.w	r2, [ip, #12]
9001ac20:	42ba      	cmp	r2, r7
9001ac22:	dd53      	ble.n	9001accc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001ac24:	9a01      	ldr	r2, [sp, #4]
9001ac26:	b22d      	sxth	r5, r5
9001ac28:	fb07 2505 	mla	r5, r7, r5, r2
9001ac2c:	5daa      	ldrb	r2, [r5, r6]
9001ac2e:	9d02      	ldr	r5, [sp, #8]
9001ac30:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001ac34:	0e2e      	lsrs	r6, r5, #24
9001ac36:	d049      	beq.n	9001accc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
9001ac38:	f06f 0201 	mvn.w	r2, #1
9001ac3c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001ac40:	fb02 f20e 	mul.w	r2, r2, lr
9001ac44:	f834 8002 	ldrh.w	r8, [r4, r2]
9001ac48:	9203      	str	r2, [sp, #12]
9001ac4a:	9a05      	ldr	r2, [sp, #20]
9001ac4c:	ea4f 2728 	mov.w	r7, r8, asr #8
9001ac50:	4356      	muls	r6, r2
9001ac52:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001ac56:	1c72      	adds	r2, r6, #1
9001ac58:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001ac5c:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001ac60:	b2ed      	uxtb	r5, r5
9001ac62:	1212      	asrs	r2, r2, #8
9001ac64:	fa1f f982 	uxth.w	r9, r2
9001ac68:	43d2      	mvns	r2, r2
9001ac6a:	fb16 f609 	smulbb	r6, r6, r9
9001ac6e:	b2d2      	uxtb	r2, r2
9001ac70:	fb15 f509 	smulbb	r5, r5, r9
9001ac74:	fb07 6702 	mla	r7, r7, r2, r6
9001ac78:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001ac7c:	fb1a fa09 	smulbb	sl, sl, r9
9001ac80:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001ac84:	b2bf      	uxth	r7, r7
9001ac86:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001ac8a:	fa5f f888 	uxtb.w	r8, r8
9001ac8e:	fb06 a602 	mla	r6, r6, r2, sl
9001ac92:	fb08 5502 	mla	r5, r8, r2, r5
9001ac96:	1c7a      	adds	r2, r7, #1
9001ac98:	b2b6      	uxth	r6, r6
9001ac9a:	b2ad      	uxth	r5, r5
9001ac9c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001aca0:	9a03      	ldr	r2, [sp, #12]
9001aca2:	f105 0a01 	add.w	sl, r5, #1
9001aca6:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001acaa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001acae:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001acb2:	ea4a 0707 	orr.w	r7, sl, r7
9001acb6:	f106 0a01 	add.w	sl, r6, #1
9001acba:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001acbe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001acc2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001acc6:	ea47 070a 	orr.w	r7, r7, sl
9001acca:	52a7      	strh	r7, [r4, r2]
9001accc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001acce:	f10e 3eff 	add.w	lr, lr, #4294967295
9001acd2:	4410      	add	r0, r2
9001acd4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001acd6:	4411      	add	r1, r2
9001acd8:	e755      	b.n	9001ab86 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001acda:	f04f 0800 	mov.w	r8, #0
9001acde:	eba3 0208 	sub.w	r2, r3, r8
9001ace2:	2a00      	cmp	r2, #0
9001ace4:	f77f af53 	ble.w	9001ab8e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001ace8:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
9001acec:	140a      	asrs	r2, r1, #16
9001acee:	9f01      	ldr	r7, [sp, #4]
9001acf0:	1405      	asrs	r5, r0, #16
9001acf2:	fb06 7202 	mla	r2, r6, r2, r7
9001acf6:	5d52      	ldrb	r2, [r2, r5]
9001acf8:	9d02      	ldr	r5, [sp, #8]
9001acfa:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
9001acfe:	0e2e      	lsrs	r6, r5, #24
9001ad00:	d044      	beq.n	9001ad8c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
9001ad02:	9a05      	ldr	r2, [sp, #20]
9001ad04:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001ad08:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001ad0c:	4356      	muls	r6, r2
9001ad0e:	ea4f 272e 	mov.w	r7, lr, asr #8
9001ad12:	1c72      	adds	r2, r6, #1
9001ad14:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001ad18:	eb02 2226 	add.w	r2, r2, r6, asr #8
9001ad1c:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001ad20:	b2ed      	uxtb	r5, r5
9001ad22:	1212      	asrs	r2, r2, #8
9001ad24:	fa1f f982 	uxth.w	r9, r2
9001ad28:	43d2      	mvns	r2, r2
9001ad2a:	fb16 f609 	smulbb	r6, r6, r9
9001ad2e:	b2d2      	uxtb	r2, r2
9001ad30:	fb15 f509 	smulbb	r5, r5, r9
9001ad34:	fb07 6702 	mla	r7, r7, r2, r6
9001ad38:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001ad3c:	fb1a fa09 	smulbb	sl, sl, r9
9001ad40:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001ad44:	b2bf      	uxth	r7, r7
9001ad46:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001ad4a:	fa5f fe8e 	uxtb.w	lr, lr
9001ad4e:	fb06 a602 	mla	r6, r6, r2, sl
9001ad52:	fb0e 5502 	mla	r5, lr, r2, r5
9001ad56:	1c7a      	adds	r2, r7, #1
9001ad58:	b2b6      	uxth	r6, r6
9001ad5a:	b2ad      	uxth	r5, r5
9001ad5c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001ad60:	f105 0a01 	add.w	sl, r5, #1
9001ad64:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001ad68:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001ad6c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001ad70:	ea4a 0707 	orr.w	r7, sl, r7
9001ad74:	f106 0a01 	add.w	sl, r6, #1
9001ad78:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001ad7c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ad80:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001ad84:	ea47 070a 	orr.w	r7, r7, sl
9001ad88:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001ad8c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ad8e:	f108 0801 	add.w	r8, r8, #1
9001ad92:	4410      	add	r0, r2
9001ad94:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ad96:	4411      	add	r1, r2
9001ad98:	e7a1      	b.n	9001acde <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
9001ad9a:	b007      	add	sp, #28
9001ad9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001ada0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ada0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ada4:	b085      	sub	sp, #20
9001ada6:	468b      	mov	fp, r1
9001ada8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001adac:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001adae:	9203      	str	r2, [sp, #12]
9001adb0:	6841      	ldr	r1, [r0, #4]
9001adb2:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001adb6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001adba:	fb01 2404 	mla	r4, r1, r4, r2
9001adbe:	6802      	ldr	r2, [r0, #0]
9001adc0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001adc4:	f8de 2000 	ldr.w	r2, [lr]
9001adc8:	9200      	str	r2, [sp, #0]
9001adca:	f8de 2004 	ldr.w	r2, [lr, #4]
9001adce:	3204      	adds	r2, #4
9001add0:	9201      	str	r2, [sp, #4]
9001add2:	f1bb 0f00 	cmp.w	fp, #0
9001add6:	dc03      	bgt.n	9001ade0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001add8:	9a03      	ldr	r2, [sp, #12]
9001adda:	2a00      	cmp	r2, #0
9001addc:	f340 8153 	ble.w	9001b086 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001ade0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001ade2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001ade6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001adea:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001adec:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001adf0:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001adf4:	2b00      	cmp	r3, #0
9001adf6:	dd0e      	ble.n	9001ae16 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001adf8:	1408      	asrs	r0, r1, #16
9001adfa:	d405      	bmi.n	9001ae08 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001adfc:	42b8      	cmp	r0, r7
9001adfe:	da03      	bge.n	9001ae08 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001ae00:	1410      	asrs	r0, r2, #16
9001ae02:	d401      	bmi.n	9001ae08 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001ae04:	42b0      	cmp	r0, r6
9001ae06:	db07      	blt.n	9001ae18 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001ae08:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001ae0a:	3b01      	subs	r3, #1
9001ae0c:	3402      	adds	r4, #2
9001ae0e:	4401      	add	r1, r0
9001ae10:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001ae12:	4402      	add	r2, r0
9001ae14:	e7ee      	b.n	9001adf4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001ae16:	d017      	beq.n	9001ae48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001ae18:	1e58      	subs	r0, r3, #1
9001ae1a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001ae1c:	fb05 1500 	mla	r5, r5, r0, r1
9001ae20:	142d      	asrs	r5, r5, #16
9001ae22:	d409      	bmi.n	9001ae38 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001ae24:	42bd      	cmp	r5, r7
9001ae26:	da07      	bge.n	9001ae38 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001ae28:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001ae2a:	fb05 2000 	mla	r0, r5, r0, r2
9001ae2e:	1400      	asrs	r0, r0, #16
9001ae30:	d402      	bmi.n	9001ae38 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001ae32:	42b0      	cmp	r0, r6
9001ae34:	f2c0 80bc 	blt.w	9001afb0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
9001ae38:	2600      	movs	r6, #0
9001ae3a:	1998      	adds	r0, r3, r6
9001ae3c:	2800      	cmp	r0, #0
9001ae3e:	dc3e      	bgt.n	9001aebe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
9001ae40:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001ae44:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001ae48:	f1bb 0f00 	cmp.w	fp, #0
9001ae4c:	f340 811b 	ble.w	9001b086 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
9001ae50:	ee30 0a04 	vadd.f32	s0, s0, s8
9001ae54:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001ae56:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001ae5a:	f1bb 0b01 	subs.w	fp, fp, #1
9001ae5e:	eeb0 6a62 	vmov.f32	s12, s5
9001ae62:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001ae66:	ee31 1a05 	vadd.f32	s2, s2, s10
9001ae6a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ae6e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001ae72:	eeb0 6a43 	vmov.f32	s12, s6
9001ae76:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001ae7a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001ae7e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001ae82:	ee61 7a27 	vmul.f32	s15, s2, s15
9001ae86:	ee77 2a62 	vsub.f32	s5, s14, s5
9001ae8a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001ae8e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001ae92:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001ae96:	ee12 2a90 	vmov	r2, s5
9001ae9a:	eef0 2a47 	vmov.f32	s5, s14
9001ae9e:	fb92 f3f3 	sdiv	r3, r2, r3
9001aea2:	ee13 2a10 	vmov	r2, s6
9001aea6:	9311      	str	r3, [sp, #68]	@ 0x44
9001aea8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001aeaa:	eeb0 3a67 	vmov.f32	s6, s15
9001aeae:	fb92 f3f3 	sdiv	r3, r2, r3
9001aeb2:	9a03      	ldr	r2, [sp, #12]
9001aeb4:	9312      	str	r3, [sp, #72]	@ 0x48
9001aeb6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001aeb8:	bf08      	it	eq
9001aeba:	4613      	moveq	r3, r2
9001aebc:	e789      	b.n	9001add2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001aebe:	140f      	asrs	r7, r1, #16
9001aec0:	d426      	bmi.n	9001af10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001aec2:	f8de 5008 	ldr.w	r5, [lr, #8]
9001aec6:	42bd      	cmp	r5, r7
9001aec8:	dd22      	ble.n	9001af10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001aeca:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001aece:	d41f      	bmi.n	9001af10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001aed0:	f8de 000c 	ldr.w	r0, [lr, #12]
9001aed4:	4560      	cmp	r0, ip
9001aed6:	dd1b      	ble.n	9001af10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001aed8:	9800      	ldr	r0, [sp, #0]
9001aeda:	b22d      	sxth	r5, r5
9001aedc:	fb0c 0505 	mla	r5, ip, r5, r0
9001aee0:	5de8      	ldrb	r0, [r5, r7]
9001aee2:	9d01      	ldr	r5, [sp, #4]
9001aee4:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
9001aee8:	0e07      	lsrs	r7, r0, #24
9001aeea:	2fff      	cmp	r7, #255	@ 0xff
9001aeec:	d116      	bne.n	9001af1c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001aeee:	f06f 0501 	mvn.w	r5, #1
9001aef2:	fb05 f706 	mul.w	r7, r5, r6
9001aef6:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001aefa:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001aefe:	0945      	lsrs	r5, r0, #5
9001af00:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001af04:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001af08:	ea4c 0505 	orr.w	r5, ip, r5
9001af0c:	4305      	orrs	r5, r0
9001af0e:	53e5      	strh	r5, [r4, r7]
9001af10:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001af12:	3e01      	subs	r6, #1
9001af14:	4401      	add	r1, r0
9001af16:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001af18:	4402      	add	r2, r0
9001af1a:	e78e      	b.n	9001ae3a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
9001af1c:	b2fd      	uxtb	r5, r7
9001af1e:	2f00      	cmp	r7, #0
9001af20:	d0f6      	beq.n	9001af10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001af22:	f06f 0701 	mvn.w	r7, #1
9001af26:	fa1f f985 	uxth.w	r9, r5
9001af2a:	43ed      	mvns	r5, r5
9001af2c:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001af30:	4377      	muls	r7, r6
9001af32:	fb1a fa09 	smulbb	sl, sl, r9
9001af36:	b2ed      	uxtb	r5, r5
9001af38:	f834 8007 	ldrh.w	r8, [r4, r7]
9001af3c:	9702      	str	r7, [sp, #8]
9001af3e:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001af42:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001af46:	fb17 f709 	smulbb	r7, r7, r9
9001af4a:	b2c0      	uxtb	r0, r0
9001af4c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001af50:	fb10 f009 	smulbb	r0, r0, r9
9001af54:	fb0c 7c05 	mla	ip, ip, r5, r7
9001af58:	ea4f 07e8 	mov.w	r7, r8, asr #3
9001af5c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001af60:	fa1f fc8c 	uxth.w	ip, ip
9001af64:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001af68:	fa5f f888 	uxtb.w	r8, r8
9001af6c:	fb07 a705 	mla	r7, r7, r5, sl
9001af70:	fb08 0005 	mla	r0, r8, r5, r0
9001af74:	f10c 0501 	add.w	r5, ip, #1
9001af78:	b2bf      	uxth	r7, r7
9001af7a:	b280      	uxth	r0, r0
9001af7c:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001af80:	f100 0a01 	add.w	sl, r0, #1
9001af84:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001af88:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001af8c:	9802      	ldr	r0, [sp, #8]
9001af8e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001af92:	ea4a 0c0c 	orr.w	ip, sl, ip
9001af96:	f107 0a01 	add.w	sl, r7, #1
9001af9a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001af9e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001afa2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001afa6:	ea4c 0c0a 	orr.w	ip, ip, sl
9001afaa:	f824 c000 	strh.w	ip, [r4, r0]
9001afae:	e7af      	b.n	9001af10 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001afb0:	f04f 0800 	mov.w	r8, #0
9001afb4:	eba3 0008 	sub.w	r0, r3, r8
9001afb8:	2800      	cmp	r0, #0
9001afba:	f77f af41 	ble.w	9001ae40 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001afbe:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001afc2:	1410      	asrs	r0, r2, #16
9001afc4:	9f00      	ldr	r7, [sp, #0]
9001afc6:	140d      	asrs	r5, r1, #16
9001afc8:	fb06 7000 	mla	r0, r6, r0, r7
9001afcc:	5d40      	ldrb	r0, [r0, r5]
9001afce:	9d01      	ldr	r5, [sp, #4]
9001afd0:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001afd4:	0e2e      	lsrs	r6, r5, #24
9001afd6:	2eff      	cmp	r6, #255	@ 0xff
9001afd8:	d112      	bne.n	9001b000 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
9001afda:	482c      	ldr	r0, [pc, #176]	@ (9001b08c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
9001afdc:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001afe0:	0968      	lsrs	r0, r5, #5
9001afe2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001afe6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001afea:	4330      	orrs	r0, r6
9001afec:	4328      	orrs	r0, r5
9001afee:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
9001aff2:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001aff4:	f108 0801 	add.w	r8, r8, #1
9001aff8:	4401      	add	r1, r0
9001affa:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001affc:	4402      	add	r2, r0
9001affe:	e7d9      	b.n	9001afb4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001b000:	b2f0      	uxtb	r0, r6
9001b002:	2e00      	cmp	r6, #0
9001b004:	d0f5      	beq.n	9001aff2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001b006:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
9001b00a:	fa1f f980 	uxth.w	r9, r0
9001b00e:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001b012:	43c0      	mvns	r0, r0
9001b014:	ea4f 272c 	mov.w	r7, ip, asr #8
9001b018:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001b01c:	fb16 f609 	smulbb	r6, r6, r9
9001b020:	b2c0      	uxtb	r0, r0
9001b022:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b026:	b2ed      	uxtb	r5, r5
9001b028:	fb1a fa09 	smulbb	sl, sl, r9
9001b02c:	fb07 6700 	mla	r7, r7, r0, r6
9001b030:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001b034:	fb15 f509 	smulbb	r5, r5, r9
9001b038:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001b03c:	b2bf      	uxth	r7, r7
9001b03e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b042:	fa5f fc8c 	uxtb.w	ip, ip
9001b046:	fb06 a600 	mla	r6, r6, r0, sl
9001b04a:	fb0c 5500 	mla	r5, ip, r0, r5
9001b04e:	1c78      	adds	r0, r7, #1
9001b050:	b2b6      	uxth	r6, r6
9001b052:	b2ad      	uxth	r5, r5
9001b054:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001b058:	f105 0a01 	add.w	sl, r5, #1
9001b05c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001b060:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b064:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b068:	ea4a 0707 	orr.w	r7, sl, r7
9001b06c:	f106 0a01 	add.w	sl, r6, #1
9001b070:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b074:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b078:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b07c:	ea47 070a 	orr.w	r7, r7, sl
9001b080:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
9001b084:	e7b5      	b.n	9001aff2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
9001b086:	b005      	add	sp, #20
9001b088:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001b08c:	fffff800 	.word	0xfffff800

9001b090 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b090:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b094:	b087      	sub	sp, #28
9001b096:	468b      	mov	fp, r1
9001b098:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001b09c:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9001b09e:	9204      	str	r2, [sp, #16]
9001b0a0:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001b0a4:	6861      	ldr	r1, [r4, #4]
9001b0a6:	9205      	str	r2, [sp, #20]
9001b0a8:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
9001b0ac:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
9001b0b0:	fb01 2000 	mla	r0, r1, r0, r2
9001b0b4:	6822      	ldr	r2, [r4, #0]
9001b0b6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001b0ba:	f8de 2000 	ldr.w	r2, [lr]
9001b0be:	9201      	str	r2, [sp, #4]
9001b0c0:	f8de 2004 	ldr.w	r2, [lr, #4]
9001b0c4:	9202      	str	r2, [sp, #8]
9001b0c6:	f1bb 0f00 	cmp.w	fp, #0
9001b0ca:	dc03      	bgt.n	9001b0d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
9001b0cc:	9a04      	ldr	r2, [sp, #16]
9001b0ce:	2a00      	cmp	r2, #0
9001b0d0:	f340 8142 	ble.w	9001b358 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001b0d4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001b0d6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001b0da:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001b0de:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001b0e0:	f9be 600c 	ldrsh.w	r6, [lr, #12]
9001b0e4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001b0e8:	2b00      	cmp	r3, #0
9001b0ea:	dd0e      	ble.n	9001b10a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
9001b0ec:	140c      	asrs	r4, r1, #16
9001b0ee:	d405      	bmi.n	9001b0fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001b0f0:	42bc      	cmp	r4, r7
9001b0f2:	da03      	bge.n	9001b0fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001b0f4:	1414      	asrs	r4, r2, #16
9001b0f6:	d401      	bmi.n	9001b0fc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001b0f8:	42b4      	cmp	r4, r6
9001b0fa:	db07      	blt.n	9001b10c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9001b0fc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001b0fe:	3b01      	subs	r3, #1
9001b100:	3002      	adds	r0, #2
9001b102:	4421      	add	r1, r4
9001b104:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001b106:	4422      	add	r2, r4
9001b108:	e7ee      	b.n	9001b0e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
9001b10a:	d019      	beq.n	9001b140 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001b10c:	1e5c      	subs	r4, r3, #1
9001b10e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001b110:	fb05 1504 	mla	r5, r5, r4, r1
9001b114:	142d      	asrs	r5, r5, #16
9001b116:	d409      	bmi.n	9001b12c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001b118:	42bd      	cmp	r5, r7
9001b11a:	da07      	bge.n	9001b12c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001b11c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001b11e:	fb05 2404 	mla	r4, r5, r4, r2
9001b122:	1424      	asrs	r4, r4, #16
9001b124:	d402      	bmi.n	9001b12c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
9001b126:	42b4      	cmp	r4, r6
9001b128:	f2c0 80b1 	blt.w	9001b28e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9001b12c:	f04f 0800 	mov.w	r8, #0
9001b130:	eb03 0408 	add.w	r4, r3, r8
9001b134:	2c00      	cmp	r4, #0
9001b136:	dc3e      	bgt.n	9001b1b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
9001b138:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b13c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001b140:	f1bb 0f00 	cmp.w	fp, #0
9001b144:	f340 8108 	ble.w	9001b358 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
9001b148:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b14c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b14e:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b152:	f1bb 0b01 	subs.w	fp, fp, #1
9001b156:	eeb0 6a62 	vmov.f32	s12, s5
9001b15a:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b15e:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b162:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b166:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001b16a:	eeb0 6a43 	vmov.f32	s12, s6
9001b16e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b172:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001b176:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b17a:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b17e:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b182:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b186:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b18a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b18e:	ee12 2a90 	vmov	r2, s5
9001b192:	eef0 2a47 	vmov.f32	s5, s14
9001b196:	fb92 f3f3 	sdiv	r3, r2, r3
9001b19a:	ee13 2a10 	vmov	r2, s6
9001b19e:	9313      	str	r3, [sp, #76]	@ 0x4c
9001b1a0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b1a2:	eeb0 3a67 	vmov.f32	s6, s15
9001b1a6:	fb92 f3f3 	sdiv	r3, r2, r3
9001b1aa:	9a04      	ldr	r2, [sp, #16]
9001b1ac:	9314      	str	r3, [sp, #80]	@ 0x50
9001b1ae:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001b1b0:	bf08      	it	eq
9001b1b2:	4613      	moveq	r3, r2
9001b1b4:	e787      	b.n	9001b0c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
9001b1b6:	140e      	asrs	r6, r1, #16
9001b1b8:	d462      	bmi.n	9001b280 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b1ba:	f8de 5008 	ldr.w	r5, [lr, #8]
9001b1be:	42b5      	cmp	r5, r6
9001b1c0:	dd5e      	ble.n	9001b280 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b1c2:	1417      	asrs	r7, r2, #16
9001b1c4:	d45c      	bmi.n	9001b280 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b1c6:	f8de 400c 	ldr.w	r4, [lr, #12]
9001b1ca:	42bc      	cmp	r4, r7
9001b1cc:	dd58      	ble.n	9001b280 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b1ce:	b22d      	sxth	r5, r5
9001b1d0:	9c02      	ldr	r4, [sp, #8]
9001b1d2:	fb07 6505 	mla	r5, r7, r5, r6
9001b1d6:	5d66      	ldrb	r6, [r4, r5]
9001b1d8:	2e00      	cmp	r6, #0
9001b1da:	d051      	beq.n	9001b280 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
9001b1dc:	9c01      	ldr	r4, [sp, #4]
9001b1de:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
9001b1e2:	f06f 0401 	mvn.w	r4, #1
9001b1e6:	fb04 f408 	mul.w	r4, r4, r8
9001b1ea:	ea4f 2c29 	mov.w	ip, r9, asr #8
9001b1ee:	5b05      	ldrh	r5, [r0, r4]
9001b1f0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b1f4:	9403      	str	r4, [sp, #12]
9001b1f6:	9c05      	ldr	r4, [sp, #20]
9001b1f8:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001b1fc:	4366      	muls	r6, r4
9001b1fe:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001b202:	1c74      	adds	r4, r6, #1
9001b204:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001b208:	122e      	asrs	r6, r5, #8
9001b20a:	1224      	asrs	r4, r4, #8
9001b20c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001b210:	00ed      	lsls	r5, r5, #3
9001b212:	b2a7      	uxth	r7, r4
9001b214:	43e4      	mvns	r4, r4
9001b216:	b2ed      	uxtb	r5, r5
9001b218:	b2e4      	uxtb	r4, r4
9001b21a:	fb16 f604 	smulbb	r6, r6, r4
9001b21e:	fb15 f504 	smulbb	r5, r5, r4
9001b222:	fb0c 6c07 	mla	ip, ip, r7, r6
9001b226:	ea4f 06e9 	mov.w	r6, r9, asr #3
9001b22a:	fb1a fa04 	smulbb	sl, sl, r4
9001b22e:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001b232:	fa1f fc8c 	uxth.w	ip, ip
9001b236:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b23a:	fa5f f989 	uxtb.w	r9, r9
9001b23e:	fb06 a607 	mla	r6, r6, r7, sl
9001b242:	f10c 0401 	add.w	r4, ip, #1
9001b246:	fb09 5507 	mla	r5, r9, r7, r5
9001b24a:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001b24e:	9c03      	ldr	r4, [sp, #12]
9001b250:	b2ad      	uxth	r5, r5
9001b252:	b2b6      	uxth	r6, r6
9001b254:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001b258:	f105 0a01 	add.w	sl, r5, #1
9001b25c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b260:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b264:	ea4a 0c0c 	orr.w	ip, sl, ip
9001b268:	f106 0a01 	add.w	sl, r6, #1
9001b26c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b270:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b274:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b278:	ea4c 0c0a 	orr.w	ip, ip, sl
9001b27c:	f820 c004 	strh.w	ip, [r0, r4]
9001b280:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001b282:	f108 38ff 	add.w	r8, r8, #4294967295
9001b286:	4421      	add	r1, r4
9001b288:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001b28a:	4422      	add	r2, r4
9001b28c:	e750      	b.n	9001b130 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001b28e:	f04f 0900 	mov.w	r9, #0
9001b292:	eba3 0409 	sub.w	r4, r3, r9
9001b296:	2c00      	cmp	r4, #0
9001b298:	f77f af4e 	ble.w	9001b138 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001b29c:	f9be 6008 	ldrsh.w	r6, [lr, #8]
9001b2a0:	140d      	asrs	r5, r1, #16
9001b2a2:	1414      	asrs	r4, r2, #16
9001b2a4:	fb06 5404 	mla	r4, r6, r4, r5
9001b2a8:	9d02      	ldr	r5, [sp, #8]
9001b2aa:	5d2e      	ldrb	r6, [r5, r4]
9001b2ac:	2e00      	cmp	r6, #0
9001b2ae:	d04c      	beq.n	9001b34a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
9001b2b0:	9d01      	ldr	r5, [sp, #4]
9001b2b2:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
9001b2b6:	9c05      	ldr	r4, [sp, #20]
9001b2b8:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001b2bc:	ea4f 2c28 	mov.w	ip, r8, asr #8
9001b2c0:	4366      	muls	r6, r4
9001b2c2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001b2c6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b2ca:	1c74      	adds	r4, r6, #1
9001b2cc:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001b2d0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
9001b2d4:	122e      	asrs	r6, r5, #8
9001b2d6:	1224      	asrs	r4, r4, #8
9001b2d8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001b2dc:	00ed      	lsls	r5, r5, #3
9001b2de:	b2a7      	uxth	r7, r4
9001b2e0:	43e4      	mvns	r4, r4
9001b2e2:	b2ed      	uxtb	r5, r5
9001b2e4:	b2e4      	uxtb	r4, r4
9001b2e6:	fb16 f604 	smulbb	r6, r6, r4
9001b2ea:	fb15 f504 	smulbb	r5, r5, r4
9001b2ee:	fb0c 6c07 	mla	ip, ip, r7, r6
9001b2f2:	ea4f 06e8 	mov.w	r6, r8, asr #3
9001b2f6:	fb1a fa04 	smulbb	sl, sl, r4
9001b2fa:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001b2fe:	fa1f fc8c 	uxth.w	ip, ip
9001b302:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b306:	fa5f f888 	uxtb.w	r8, r8
9001b30a:	fb06 a607 	mla	r6, r6, r7, sl
9001b30e:	f10c 0401 	add.w	r4, ip, #1
9001b312:	fb08 5507 	mla	r5, r8, r7, r5
9001b316:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001b31a:	b2ad      	uxth	r5, r5
9001b31c:	b2b6      	uxth	r6, r6
9001b31e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001b322:	f105 0a01 	add.w	sl, r5, #1
9001b326:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b32a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b32e:	ea4a 0c0c 	orr.w	ip, sl, ip
9001b332:	f106 0a01 	add.w	sl, r6, #1
9001b336:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b33a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b33e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b342:	ea4c 0c0a 	orr.w	ip, ip, sl
9001b346:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001b34a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001b34c:	f109 0901 	add.w	r9, r9, #1
9001b350:	4421      	add	r1, r4
9001b352:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001b354:	4422      	add	r2, r4
9001b356:	e79c      	b.n	9001b292 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
9001b358:	b007      	add	sp, #28
9001b35a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b35e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b35e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b362:	b085      	sub	sp, #20
9001b364:	468b      	mov	fp, r1
9001b366:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001b36a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001b36c:	9203      	str	r2, [sp, #12]
9001b36e:	6861      	ldr	r1, [r4, #4]
9001b370:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001b374:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
9001b378:	fb01 2000 	mla	r0, r1, r0, r2
9001b37c:	6822      	ldr	r2, [r4, #0]
9001b37e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001b382:	f8d8 2000 	ldr.w	r2, [r8]
9001b386:	9200      	str	r2, [sp, #0]
9001b388:	f8d8 2004 	ldr.w	r2, [r8, #4]
9001b38c:	9201      	str	r2, [sp, #4]
9001b38e:	f1bb 0f00 	cmp.w	fp, #0
9001b392:	dc03      	bgt.n	9001b39c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001b394:	9a03      	ldr	r2, [sp, #12]
9001b396:	2a00      	cmp	r2, #0
9001b398:	f340 8146 	ble.w	9001b628 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001b39c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001b39e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001b3a2:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001b3a6:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001b3a8:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001b3ac:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001b3b0:	2b00      	cmp	r3, #0
9001b3b2:	dd0e      	ble.n	9001b3d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001b3b4:	140c      	asrs	r4, r1, #16
9001b3b6:	d405      	bmi.n	9001b3c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b3b8:	42bc      	cmp	r4, r7
9001b3ba:	da03      	bge.n	9001b3c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b3bc:	1414      	asrs	r4, r2, #16
9001b3be:	d401      	bmi.n	9001b3c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001b3c0:	42b4      	cmp	r4, r6
9001b3c2:	db07      	blt.n	9001b3d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b3c4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001b3c6:	3b01      	subs	r3, #1
9001b3c8:	3002      	adds	r0, #2
9001b3ca:	4421      	add	r1, r4
9001b3cc:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001b3ce:	4422      	add	r2, r4
9001b3d0:	e7ee      	b.n	9001b3b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001b3d2:	d017      	beq.n	9001b404 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001b3d4:	1e5c      	subs	r4, r3, #1
9001b3d6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001b3d8:	fb05 1504 	mla	r5, r5, r4, r1
9001b3dc:	142d      	asrs	r5, r5, #16
9001b3de:	d409      	bmi.n	9001b3f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001b3e0:	42bd      	cmp	r5, r7
9001b3e2:	da07      	bge.n	9001b3f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001b3e4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001b3e6:	fb05 2404 	mla	r4, r5, r4, r2
9001b3ea:	1424      	asrs	r4, r4, #16
9001b3ec:	d402      	bmi.n	9001b3f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001b3ee:	42b4      	cmp	r4, r6
9001b3f0:	f2c0 80b3 	blt.w	9001b55a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
9001b3f4:	2600      	movs	r6, #0
9001b3f6:	199c      	adds	r4, r3, r6
9001b3f8:	2c00      	cmp	r4, #0
9001b3fa:	dc3e      	bgt.n	9001b47a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001b3fc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b400:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001b404:	f1bb 0f00 	cmp.w	fp, #0
9001b408:	f340 810e 	ble.w	9001b628 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
9001b40c:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b410:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b412:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b416:	f1bb 0b01 	subs.w	fp, fp, #1
9001b41a:	eeb0 6a62 	vmov.f32	s12, s5
9001b41e:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b422:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b426:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b42a:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001b42e:	eeb0 6a43 	vmov.f32	s12, s6
9001b432:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b436:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001b43a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b43e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b442:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b446:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b44a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b44e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b452:	ee12 2a90 	vmov	r2, s5
9001b456:	eef0 2a47 	vmov.f32	s5, s14
9001b45a:	fb92 f3f3 	sdiv	r3, r2, r3
9001b45e:	ee13 2a10 	vmov	r2, s6
9001b462:	9311      	str	r3, [sp, #68]	@ 0x44
9001b464:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b466:	eeb0 3a67 	vmov.f32	s6, s15
9001b46a:	fb92 f3f3 	sdiv	r3, r2, r3
9001b46e:	9a03      	ldr	r2, [sp, #12]
9001b470:	9312      	str	r3, [sp, #72]	@ 0x48
9001b472:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b474:	bf08      	it	eq
9001b476:	4613      	moveq	r3, r2
9001b478:	e789      	b.n	9001b38e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001b47a:	140f      	asrs	r7, r1, #16
9001b47c:	d418      	bmi.n	9001b4b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001b47e:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001b482:	42bd      	cmp	r5, r7
9001b484:	dd14      	ble.n	9001b4b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001b486:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001b48a:	d411      	bmi.n	9001b4b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001b48c:	f8d8 400c 	ldr.w	r4, [r8, #12]
9001b490:	4564      	cmp	r4, ip
9001b492:	dd0d      	ble.n	9001b4b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001b494:	b22d      	sxth	r5, r5
9001b496:	9c01      	ldr	r4, [sp, #4]
9001b498:	fb0c 7505 	mla	r5, ip, r5, r7
9001b49c:	5d64      	ldrb	r4, [r4, r5]
9001b49e:	2cff      	cmp	r4, #255	@ 0xff
9001b4a0:	d10c      	bne.n	9001b4bc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
9001b4a2:	9c00      	ldr	r4, [sp, #0]
9001b4a4:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
9001b4a8:	f06f 0401 	mvn.w	r4, #1
9001b4ac:	4374      	muls	r4, r6
9001b4ae:	5305      	strh	r5, [r0, r4]
9001b4b0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001b4b2:	3e01      	subs	r6, #1
9001b4b4:	4421      	add	r1, r4
9001b4b6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001b4b8:	4422      	add	r2, r4
9001b4ba:	e79c      	b.n	9001b3f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001b4bc:	2c00      	cmp	r4, #0
9001b4be:	d0f7      	beq.n	9001b4b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001b4c0:	9f00      	ldr	r7, [sp, #0]
9001b4c2:	fa1f fc84 	uxth.w	ip, r4
9001b4c6:	43e4      	mvns	r4, r4
9001b4c8:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
9001b4cc:	f06f 0501 	mvn.w	r5, #1
9001b4d0:	b2e4      	uxtb	r4, r4
9001b4d2:	4375      	muls	r5, r6
9001b4d4:	ea4f 2e29 	mov.w	lr, r9, asr #8
9001b4d8:	9502      	str	r5, [sp, #8]
9001b4da:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001b4de:	5b45      	ldrh	r5, [r0, r5]
9001b4e0:	122f      	asrs	r7, r5, #8
9001b4e2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001b4e6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b4ea:	00ed      	lsls	r5, r5, #3
9001b4ec:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001b4f0:	fb17 f704 	smulbb	r7, r7, r4
9001b4f4:	b2ed      	uxtb	r5, r5
9001b4f6:	fb1a fa04 	smulbb	sl, sl, r4
9001b4fa:	fb0e 7e0c 	mla	lr, lr, ip, r7
9001b4fe:	ea4f 07e9 	mov.w	r7, r9, asr #3
9001b502:	fb15 f504 	smulbb	r5, r5, r4
9001b506:	ea4f 09c9 	mov.w	r9, r9, lsl #3
9001b50a:	fa1f fe8e 	uxth.w	lr, lr
9001b50e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001b512:	fa5f f989 	uxtb.w	r9, r9
9001b516:	fb07 a70c 	mla	r7, r7, ip, sl
9001b51a:	f10e 0401 	add.w	r4, lr, #1
9001b51e:	fb09 550c 	mla	r5, r9, ip, r5
9001b522:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
9001b526:	9c02      	ldr	r4, [sp, #8]
9001b528:	b2ad      	uxth	r5, r5
9001b52a:	b2bf      	uxth	r7, r7
9001b52c:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001b530:	f105 0a01 	add.w	sl, r5, #1
9001b534:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b538:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b53c:	ea4a 0e0e 	orr.w	lr, sl, lr
9001b540:	f107 0a01 	add.w	sl, r7, #1
9001b544:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001b548:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b54c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b550:	ea4e 0e0a 	orr.w	lr, lr, sl
9001b554:	f820 e004 	strh.w	lr, [r0, r4]
9001b558:	e7aa      	b.n	9001b4b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
9001b55a:	f04f 0900 	mov.w	r9, #0
9001b55e:	eba3 0409 	sub.w	r4, r3, r9
9001b562:	2c00      	cmp	r4, #0
9001b564:	f77f af4a 	ble.w	9001b3fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001b568:	1414      	asrs	r4, r2, #16
9001b56a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001b56e:	140d      	asrs	r5, r1, #16
9001b570:	fb06 5504 	mla	r5, r6, r4, r5
9001b574:	9c01      	ldr	r4, [sp, #4]
9001b576:	5d64      	ldrb	r4, [r4, r5]
9001b578:	2cff      	cmp	r4, #255	@ 0xff
9001b57a:	d10b      	bne.n	9001b594 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001b57c:	9c00      	ldr	r4, [sp, #0]
9001b57e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
9001b582:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
9001b586:	9c11      	ldr	r4, [sp, #68]	@ 0x44
9001b588:	f109 0901 	add.w	r9, r9, #1
9001b58c:	4421      	add	r1, r4
9001b58e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001b590:	4422      	add	r2, r4
9001b592:	e7e4      	b.n	9001b55e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9001b594:	2c00      	cmp	r4, #0
9001b596:	d0f6      	beq.n	9001b586 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001b598:	9e00      	ldr	r6, [sp, #0]
9001b59a:	b2a7      	uxth	r7, r4
9001b59c:	43e4      	mvns	r4, r4
9001b59e:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
9001b5a2:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
9001b5a6:	b2e4      	uxtb	r4, r4
9001b5a8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001b5ac:	122e      	asrs	r6, r5, #8
9001b5ae:	ea4f 0ae5 	mov.w	sl, r5, asr #3
9001b5b2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b5b6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001b5ba:	00ed      	lsls	r5, r5, #3
9001b5bc:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001b5c0:	fb16 f604 	smulbb	r6, r6, r4
9001b5c4:	b2ed      	uxtb	r5, r5
9001b5c6:	fb1a fa04 	smulbb	sl, sl, r4
9001b5ca:	fb0c 6c07 	mla	ip, ip, r7, r6
9001b5ce:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001b5d2:	fb15 f504 	smulbb	r5, r5, r4
9001b5d6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001b5da:	fa1f fc8c 	uxth.w	ip, ip
9001b5de:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001b5e2:	fa5f fe8e 	uxtb.w	lr, lr
9001b5e6:	fb06 a607 	mla	r6, r6, r7, sl
9001b5ea:	f10c 0401 	add.w	r4, ip, #1
9001b5ee:	fb0e 5507 	mla	r5, lr, r7, r5
9001b5f2:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
9001b5f6:	b2ad      	uxth	r5, r5
9001b5f8:	b2b6      	uxth	r6, r6
9001b5fa:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001b5fe:	f105 0a01 	add.w	sl, r5, #1
9001b602:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001b606:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001b60a:	ea4a 0c0c 	orr.w	ip, sl, ip
9001b60e:	f106 0a01 	add.w	sl, r6, #1
9001b612:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001b616:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001b61a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001b61e:	ea4c 0c0a 	orr.w	ip, ip, sl
9001b622:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
9001b626:	e7ae      	b.n	9001b586 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
9001b628:	b005      	add	sp, #20
9001b62a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b62e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b62e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b632:	b085      	sub	sp, #20
9001b634:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001b636:	9203      	str	r2, [sp, #12]
9001b638:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
9001b63c:	9100      	str	r1, [sp, #0]
9001b63e:	9201      	str	r2, [sp, #4]
9001b640:	6841      	ldr	r1, [r0, #4]
9001b642:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
9001b646:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001b64a:	fb01 2404 	mla	r4, r1, r4, r2
9001b64e:	6802      	ldr	r2, [r0, #0]
9001b650:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b654:	f8de 2000 	ldr.w	r2, [lr]
9001b658:	9202      	str	r2, [sp, #8]
9001b65a:	9a01      	ldr	r2, [sp, #4]
9001b65c:	43d6      	mvns	r6, r2
9001b65e:	b2f6      	uxtb	r6, r6
9001b660:	9a00      	ldr	r2, [sp, #0]
9001b662:	2a00      	cmp	r2, #0
9001b664:	dc03      	bgt.n	9001b66e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9001b666:	9a03      	ldr	r2, [sp, #12]
9001b668:	2a00      	cmp	r2, #0
9001b66a:	f340 8124 	ble.w	9001b8b6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001b66e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001b670:	f9be c008 	ldrsh.w	ip, [lr, #8]
9001b674:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001b678:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001b67a:	f9be 700c 	ldrsh.w	r7, [lr, #12]
9001b67e:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001b682:	2b00      	cmp	r3, #0
9001b684:	dd0e      	ble.n	9001b6a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b686:	1408      	asrs	r0, r1, #16
9001b688:	d405      	bmi.n	9001b696 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001b68a:	4560      	cmp	r0, ip
9001b68c:	da03      	bge.n	9001b696 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001b68e:	1410      	asrs	r0, r2, #16
9001b690:	d401      	bmi.n	9001b696 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
9001b692:	42b8      	cmp	r0, r7
9001b694:	db07      	blt.n	9001b6a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
9001b696:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001b698:	3b01      	subs	r3, #1
9001b69a:	3402      	adds	r4, #2
9001b69c:	4401      	add	r1, r0
9001b69e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001b6a0:	4402      	add	r2, r0
9001b6a2:	e7ee      	b.n	9001b682 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
9001b6a4:	d06e      	beq.n	9001b784 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
9001b6a6:	1e58      	subs	r0, r3, #1
9001b6a8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001b6aa:	fb05 1500 	mla	r5, r5, r0, r1
9001b6ae:	142d      	asrs	r5, r5, #16
9001b6b0:	d45c      	bmi.n	9001b76c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001b6b2:	4565      	cmp	r5, ip
9001b6b4:	da5a      	bge.n	9001b76c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001b6b6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001b6b8:	fb05 2000 	mla	r0, r5, r0, r2
9001b6bc:	1400      	asrs	r0, r0, #16
9001b6be:	d455      	bmi.n	9001b76c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001b6c0:	42b8      	cmp	r0, r7
9001b6c2:	da53      	bge.n	9001b76c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
9001b6c4:	4699      	mov	r9, r3
9001b6c6:	46a2      	mov	sl, r4
9001b6c8:	f8bd b004 	ldrh.w	fp, [sp, #4]
9001b6cc:	f1b9 0f00 	cmp.w	r9, #0
9001b6d0:	dd54      	ble.n	9001b77c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
9001b6d2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
9001b6d6:	140d      	asrs	r5, r1, #16
9001b6d8:	1410      	asrs	r0, r2, #16
9001b6da:	f109 39ff 	add.w	r9, r9, #4294967295
9001b6de:	fb07 5000 	mla	r0, r7, r0, r5
9001b6e2:	9d02      	ldr	r5, [sp, #8]
9001b6e4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
9001b6e8:	f8ba 5000 	ldrh.w	r5, [sl]
9001b6ec:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001b6f0:	122f      	asrs	r7, r5, #8
9001b6f2:	ea4f 08e5 	mov.w	r8, r5, asr #3
9001b6f6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b6fa:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b6fe:	00ed      	lsls	r5, r5, #3
9001b700:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
9001b704:	fb17 f706 	smulbb	r7, r7, r6
9001b708:	b2ed      	uxtb	r5, r5
9001b70a:	fb18 f806 	smulbb	r8, r8, r6
9001b70e:	fb0c 7c0b 	mla	ip, ip, fp, r7
9001b712:	10c7      	asrs	r7, r0, #3
9001b714:	fb15 f506 	smulbb	r5, r5, r6
9001b718:	00c0      	lsls	r0, r0, #3
9001b71a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001b71e:	fa1f fc8c 	uxth.w	ip, ip
9001b722:	b2c0      	uxtb	r0, r0
9001b724:	fb07 870b 	mla	r7, r7, fp, r8
9001b728:	fb00 500b 	mla	r0, r0, fp, r5
9001b72c:	f10c 0501 	add.w	r5, ip, #1
9001b730:	b2bf      	uxth	r7, r7
9001b732:	b280      	uxth	r0, r0
9001b734:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001b738:	f107 0801 	add.w	r8, r7, #1
9001b73c:	1c45      	adds	r5, r0, #1
9001b73e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
9001b742:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001b746:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001b74a:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001b74c:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001b750:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001b754:	4401      	add	r1, r0
9001b756:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001b75a:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001b75c:	ea45 0c0c 	orr.w	ip, r5, ip
9001b760:	4402      	add	r2, r0
9001b762:	ea4c 0c08 	orr.w	ip, ip, r8
9001b766:	f82a cb02 	strh.w	ip, [sl], #2
9001b76a:	e7af      	b.n	9001b6cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001b76c:	f04f 0800 	mov.w	r8, #0
9001b770:	f8bd a004 	ldrh.w	sl, [sp, #4]
9001b774:	eb03 0008 	add.w	r0, r3, r8
9001b778:	2800      	cmp	r0, #0
9001b77a:	dc41      	bgt.n	9001b800 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
9001b77c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b780:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b784:	9b00      	ldr	r3, [sp, #0]
9001b786:	2b00      	cmp	r3, #0
9001b788:	f340 8095 	ble.w	9001b8b6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
9001b78c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9001b790:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b792:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b796:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b79a:	eef0 6a62 	vmov.f32	s13, s5
9001b79e:	eec7 7a00 	vdiv.f32	s15, s14, s0
9001b7a2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b7a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001b7aa:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
9001b7ae:	eef0 6a43 	vmov.f32	s13, s6
9001b7b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9001b7b6:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
9001b7ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b7be:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b7c2:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b7c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b7ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b7ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b7d2:	ee12 2a90 	vmov	r2, s5
9001b7d6:	eef0 2a47 	vmov.f32	s5, s14
9001b7da:	fb92 f3f3 	sdiv	r3, r2, r3
9001b7de:	ee13 2a10 	vmov	r2, s6
9001b7e2:	9311      	str	r3, [sp, #68]	@ 0x44
9001b7e4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b7e6:	eeb0 3a67 	vmov.f32	s6, s15
9001b7ea:	fb92 f3f3 	sdiv	r3, r2, r3
9001b7ee:	9312      	str	r3, [sp, #72]	@ 0x48
9001b7f0:	9b00      	ldr	r3, [sp, #0]
9001b7f2:	9a03      	ldr	r2, [sp, #12]
9001b7f4:	3b01      	subs	r3, #1
9001b7f6:	9300      	str	r3, [sp, #0]
9001b7f8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b7fa:	bf08      	it	eq
9001b7fc:	4613      	moveq	r3, r2
9001b7fe:	e72f      	b.n	9001b660 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9001b800:	140f      	asrs	r7, r1, #16
9001b802:	d451      	bmi.n	9001b8a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001b804:	f8de 5008 	ldr.w	r5, [lr, #8]
9001b808:	42bd      	cmp	r5, r7
9001b80a:	dd4d      	ble.n	9001b8a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001b80c:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001b810:	d44a      	bmi.n	9001b8a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001b812:	f8de 000c 	ldr.w	r0, [lr, #12]
9001b816:	4560      	cmp	r0, ip
9001b818:	dd46      	ble.n	9001b8a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9001b81a:	b22d      	sxth	r5, r5
9001b81c:	9802      	ldr	r0, [sp, #8]
9001b81e:	fb0c 7505 	mla	r5, ip, r5, r7
9001b822:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
9001b826:	f06f 0501 	mvn.w	r5, #1
9001b82a:	fb05 fb08 	mul.w	fp, r5, r8
9001b82e:	ea4f 2c20 	mov.w	ip, r0, asr #8
9001b832:	f834 500b 	ldrh.w	r5, [r4, fp]
9001b836:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001b83a:	122f      	asrs	r7, r5, #8
9001b83c:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001b840:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001b844:	00ed      	lsls	r5, r5, #3
9001b846:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001b84a:	fb17 f706 	smulbb	r7, r7, r6
9001b84e:	b2ed      	uxtb	r5, r5
9001b850:	fb19 f906 	smulbb	r9, r9, r6
9001b854:	fb0c 7c0a 	mla	ip, ip, sl, r7
9001b858:	10c7      	asrs	r7, r0, #3
9001b85a:	fb15 f506 	smulbb	r5, r5, r6
9001b85e:	00c0      	lsls	r0, r0, #3
9001b860:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001b864:	fa1f fc8c 	uxth.w	ip, ip
9001b868:	b2c0      	uxtb	r0, r0
9001b86a:	fb07 970a 	mla	r7, r7, sl, r9
9001b86e:	fb00 500a 	mla	r0, r0, sl, r5
9001b872:	f10c 0501 	add.w	r5, ip, #1
9001b876:	b2bf      	uxth	r7, r7
9001b878:	b280      	uxth	r0, r0
9001b87a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001b87e:	f107 0901 	add.w	r9, r7, #1
9001b882:	1c45      	adds	r5, r0, #1
9001b884:	eb09 2917 	add.w	r9, r9, r7, lsr #8
9001b888:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001b88c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001b890:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001b894:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001b898:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001b89c:	ea45 0c0c 	orr.w	ip, r5, ip
9001b8a0:	ea4c 0c09 	orr.w	ip, ip, r9
9001b8a4:	f824 c00b 	strh.w	ip, [r4, fp]
9001b8a8:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001b8aa:	f108 38ff 	add.w	r8, r8, #4294967295
9001b8ae:	4401      	add	r1, r0
9001b8b0:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001b8b2:	4402      	add	r2, r0
9001b8b4:	e75e      	b.n	9001b774 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
9001b8b6:	b005      	add	sp, #20
9001b8b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001b8bc <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001b8bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001b8c0:	b085      	sub	sp, #20
9001b8c2:	4693      	mov	fp, r2
9001b8c4:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001b8c8:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001b8ca:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9001b8cc:	6870      	ldr	r0, [r6, #4]
9001b8ce:	9101      	str	r1, [sp, #4]
9001b8d0:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001b8d4:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
9001b8d8:	fb00 2404 	mla	r4, r0, r4, r2
9001b8dc:	6832      	ldr	r2, [r6, #0]
9001b8de:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001b8e2:	682a      	ldr	r2, [r5, #0]
9001b8e4:	9202      	str	r2, [sp, #8]
9001b8e6:	9a01      	ldr	r2, [sp, #4]
9001b8e8:	2a00      	cmp	r2, #0
9001b8ea:	dc03      	bgt.n	9001b8f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001b8ec:	f1bb 0f00 	cmp.w	fp, #0
9001b8f0:	f340 809a 	ble.w	9001ba28 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001b8f4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001b8f6:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
9001b8fa:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001b8fe:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001b900:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
9001b904:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001b908:	2b00      	cmp	r3, #0
9001b90a:	dd0c      	ble.n	9001b926 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
9001b90c:	1406      	asrs	r6, r0, #16
9001b90e:	d405      	bmi.n	9001b91c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001b910:	454e      	cmp	r6, r9
9001b912:	da03      	bge.n	9001b91c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001b914:	1416      	asrs	r6, r2, #16
9001b916:	d401      	bmi.n	9001b91c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001b918:	4546      	cmp	r6, r8
9001b91a:	db05      	blt.n	9001b928 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
9001b91c:	4470      	add	r0, lr
9001b91e:	4462      	add	r2, ip
9001b920:	3b01      	subs	r3, #1
9001b922:	3402      	adds	r4, #2
9001b924:	e7f0      	b.n	9001b908 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001b926:	d00f      	beq.n	9001b948 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9001b928:	1e5e      	subs	r6, r3, #1
9001b92a:	fb0e 0706 	mla	r7, lr, r6, r0
9001b92e:	143f      	asrs	r7, r7, #16
9001b930:	d541      	bpl.n	9001b9b6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
9001b932:	eb04 0643 	add.w	r6, r4, r3, lsl #1
9001b936:	4698      	mov	r8, r3
9001b938:	9603      	str	r6, [sp, #12]
9001b93a:	f1b8 0f00 	cmp.w	r8, #0
9001b93e:	dc56      	bgt.n	9001b9ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
9001b940:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001b944:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001b948:	9b01      	ldr	r3, [sp, #4]
9001b94a:	2b00      	cmp	r3, #0
9001b94c:	dd6c      	ble.n	9001ba28 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
9001b94e:	ee30 0a04 	vadd.f32	s0, s0, s8
9001b952:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b954:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001b958:	eeb0 6a62 	vmov.f32	s12, s5
9001b95c:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001b960:	ee31 1a05 	vadd.f32	s2, s2, s10
9001b964:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b968:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001b96c:	eeb0 6a43 	vmov.f32	s12, s6
9001b970:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001b974:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001b978:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001b97c:	ee61 7a27 	vmul.f32	s15, s2, s15
9001b980:	ee77 2a62 	vsub.f32	s5, s14, s5
9001b984:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001b988:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001b98c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001b990:	ee12 2a90 	vmov	r2, s5
9001b994:	eef0 2a47 	vmov.f32	s5, s14
9001b998:	fb92 fef3 	sdiv	lr, r2, r3
9001b99c:	ee13 2a10 	vmov	r2, s6
9001b9a0:	eeb0 3a67 	vmov.f32	s6, s15
9001b9a4:	fb92 fcf3 	sdiv	ip, r2, r3
9001b9a8:	9b01      	ldr	r3, [sp, #4]
9001b9aa:	3b01      	subs	r3, #1
9001b9ac:	9301      	str	r3, [sp, #4]
9001b9ae:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001b9b0:	bf08      	it	eq
9001b9b2:	465b      	moveq	r3, fp
9001b9b4:	e797      	b.n	9001b8e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001b9b6:	454f      	cmp	r7, r9
9001b9b8:	dabb      	bge.n	9001b932 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b9ba:	fb0c 2606 	mla	r6, ip, r6, r2
9001b9be:	1436      	asrs	r6, r6, #16
9001b9c0:	d4b7      	bmi.n	9001b932 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b9c2:	4546      	cmp	r6, r8
9001b9c4:	dab5      	bge.n	9001b932 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001b9c6:	461e      	mov	r6, r3
9001b9c8:	46a0      	mov	r8, r4
9001b9ca:	2e00      	cmp	r6, #0
9001b9cc:	ddb8      	ble.n	9001b940 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9001b9ce:	1417      	asrs	r7, r2, #16
9001b9d0:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
9001b9d4:	ea4f 4920 	mov.w	r9, r0, asr #16
9001b9d8:	9902      	ldr	r1, [sp, #8]
9001b9da:	4470      	add	r0, lr
9001b9dc:	4462      	add	r2, ip
9001b9de:	fb0a 9707 	mla	r7, sl, r7, r9
9001b9e2:	3e01      	subs	r6, #1
9001b9e4:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
9001b9e8:	f828 7b02 	strh.w	r7, [r8], #2
9001b9ec:	e7ed      	b.n	9001b9ca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
9001b9ee:	ea5f 4920 	movs.w	r9, r0, asr #16
9001b9f2:	d414      	bmi.n	9001ba1e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001b9f4:	68ae      	ldr	r6, [r5, #8]
9001b9f6:	454e      	cmp	r6, r9
9001b9f8:	dd11      	ble.n	9001ba1e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001b9fa:	ea5f 4a22 	movs.w	sl, r2, asr #16
9001b9fe:	d40e      	bmi.n	9001ba1e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001ba00:	68ef      	ldr	r7, [r5, #12]
9001ba02:	4557      	cmp	r7, sl
9001ba04:	dd0b      	ble.n	9001ba1e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
9001ba06:	b236      	sxth	r6, r6
9001ba08:	f06f 0101 	mvn.w	r1, #1
9001ba0c:	9f02      	ldr	r7, [sp, #8]
9001ba0e:	fb0a 9606 	mla	r6, sl, r6, r9
9001ba12:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
9001ba16:	fb01 f608 	mul.w	r6, r1, r8
9001ba1a:	9903      	ldr	r1, [sp, #12]
9001ba1c:	538f      	strh	r7, [r1, r6]
9001ba1e:	4470      	add	r0, lr
9001ba20:	4462      	add	r2, ip
9001ba22:	f108 38ff 	add.w	r8, r8, #4294967295
9001ba26:	e788      	b.n	9001b93a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001ba28:	b005      	add	sp, #20
9001ba2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9001ba2e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001ba2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ba32:	b087      	sub	sp, #28
9001ba34:	468b      	mov	fp, r1
9001ba36:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001ba3a:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001ba3c:	9203      	str	r2, [sp, #12]
9001ba3e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001ba42:	6841      	ldr	r1, [r0, #4]
9001ba44:	9204      	str	r2, [sp, #16]
9001ba46:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001ba4a:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
9001ba4e:	fb01 2505 	mla	r5, r1, r5, r2
9001ba52:	6802      	ldr	r2, [r0, #0]
9001ba54:	eb02 0545 	add.w	r5, r2, r5, lsl #1
9001ba58:	f8d9 2000 	ldr.w	r2, [r9]
9001ba5c:	9201      	str	r2, [sp, #4]
9001ba5e:	f1bb 0f00 	cmp.w	fp, #0
9001ba62:	dc03      	bgt.n	9001ba6c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9001ba64:	9a03      	ldr	r2, [sp, #12]
9001ba66:	2a00      	cmp	r2, #0
9001ba68:	f340 8158 	ble.w	9001bd1c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001ba6c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001ba6e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001ba72:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001ba76:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001ba78:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001ba7c:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001ba80:	2b00      	cmp	r3, #0
9001ba82:	dd0e      	ble.n	9001baa2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
9001ba84:	1402      	asrs	r2, r0, #16
9001ba86:	d405      	bmi.n	9001ba94 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001ba88:	42ba      	cmp	r2, r7
9001ba8a:	da03      	bge.n	9001ba94 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001ba8c:	140a      	asrs	r2, r1, #16
9001ba8e:	d401      	bmi.n	9001ba94 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9001ba90:	42b2      	cmp	r2, r6
9001ba92:	db07      	blt.n	9001baa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9001ba94:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001ba96:	3b01      	subs	r3, #1
9001ba98:	3502      	adds	r5, #2
9001ba9a:	4410      	add	r0, r2
9001ba9c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001ba9e:	4411      	add	r1, r2
9001baa0:	e7ee      	b.n	9001ba80 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9001baa2:	d017      	beq.n	9001bad4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
9001baa4:	1e5a      	subs	r2, r3, #1
9001baa6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9001baa8:	fb04 0402 	mla	r4, r4, r2, r0
9001baac:	1424      	asrs	r4, r4, #16
9001baae:	d409      	bmi.n	9001bac4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001bab0:	42bc      	cmp	r4, r7
9001bab2:	da07      	bge.n	9001bac4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001bab4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
9001bab6:	fb04 1202 	mla	r2, r4, r2, r1
9001baba:	1412      	asrs	r2, r2, #16
9001babc:	d402      	bmi.n	9001bac4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9001babe:	42b2      	cmp	r2, r6
9001bac0:	f2c0 80bf 	blt.w	9001bc42 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
9001bac4:	2700      	movs	r7, #0
9001bac6:	19da      	adds	r2, r3, r7
9001bac8:	2a00      	cmp	r2, #0
9001baca:	dc3e      	bgt.n	9001bb4a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
9001bacc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001bad0:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001bad4:	f1bb 0f00 	cmp.w	fp, #0
9001bad8:	f340 8120 	ble.w	9001bd1c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
9001badc:	ee30 0a04 	vadd.f32	s0, s0, s8
9001bae0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001bae2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001bae6:	f1bb 0b01 	subs.w	fp, fp, #1
9001baea:	eeb0 6a62 	vmov.f32	s12, s5
9001baee:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001baf2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001baf6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bafa:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001bafe:	eeb0 6a43 	vmov.f32	s12, s6
9001bb02:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bb06:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001bb0a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001bb0e:	ee61 7a27 	vmul.f32	s15, s2, s15
9001bb12:	ee77 2a62 	vsub.f32	s5, s14, s5
9001bb16:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001bb1a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001bb1e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001bb22:	ee12 2a90 	vmov	r2, s5
9001bb26:	eef0 2a47 	vmov.f32	s5, s14
9001bb2a:	fb92 f3f3 	sdiv	r3, r2, r3
9001bb2e:	ee13 2a10 	vmov	r2, s6
9001bb32:	9313      	str	r3, [sp, #76]	@ 0x4c
9001bb34:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001bb36:	eeb0 3a67 	vmov.f32	s6, s15
9001bb3a:	fb92 f3f3 	sdiv	r3, r2, r3
9001bb3e:	9a03      	ldr	r2, [sp, #12]
9001bb40:	9314      	str	r3, [sp, #80]	@ 0x50
9001bb42:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001bb44:	bf08      	it	eq
9001bb46:	4613      	moveq	r3, r2
9001bb48:	e789      	b.n	9001ba5e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
9001bb4a:	1406      	asrs	r6, r0, #16
9001bb4c:	d42d      	bmi.n	9001bbaa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001bb4e:	f8d9 4008 	ldr.w	r4, [r9, #8]
9001bb52:	42b4      	cmp	r4, r6
9001bb54:	dd29      	ble.n	9001bbaa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001bb56:	ea5f 4c21 	movs.w	ip, r1, asr #16
9001bb5a:	d426      	bmi.n	9001bbaa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001bb5c:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001bb60:	4562      	cmp	r2, ip
9001bb62:	dd22      	ble.n	9001bbaa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001bb64:	b224      	sxth	r4, r4
9001bb66:	9a01      	ldr	r2, [sp, #4]
9001bb68:	fb0c 6404 	mla	r4, ip, r4, r6
9001bb6c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
9001bb70:	0e22      	lsrs	r2, r4, #24
9001bb72:	d01a      	beq.n	9001bbaa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001bb74:	9e04      	ldr	r6, [sp, #16]
9001bb76:	4372      	muls	r2, r6
9001bb78:	1c56      	adds	r6, r2, #1
9001bb7a:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001bb7e:	0a26      	lsrs	r6, r4, #8
9001bb80:	1212      	asrs	r2, r2, #8
9001bb82:	9605      	str	r6, [sp, #20]
9001bb84:	2aff      	cmp	r2, #255	@ 0xff
9001bb86:	d116      	bne.n	9001bbb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
9001bb88:	f06f 0201 	mvn.w	r2, #1
9001bb8c:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001bb90:	fb02 fc07 	mul.w	ip, r2, r7
9001bb94:	0962      	lsrs	r2, r4, #5
9001bb96:	f026 0607 	bic.w	r6, r6, #7
9001bb9a:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001bb9e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001bba2:	4316      	orrs	r6, r2
9001bba4:	4326      	orrs	r6, r4
9001bba6:	f825 600c 	strh.w	r6, [r5, ip]
9001bbaa:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001bbac:	3f01      	subs	r7, #1
9001bbae:	4410      	add	r0, r2
9001bbb0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001bbb2:	4411      	add	r1, r2
9001bbb4:	e787      	b.n	9001bac6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001bbb6:	f06f 0601 	mvn.w	r6, #1
9001bbba:	fa1f fa82 	uxth.w	sl, r2
9001bbbe:	f3c4 4c07 	ubfx	ip, r4, #16, #8
9001bbc2:	43d2      	mvns	r2, r2
9001bbc4:	437e      	muls	r6, r7
9001bbc6:	b2e4      	uxtb	r4, r4
9001bbc8:	fb1c fc0a 	smulbb	ip, ip, sl
9001bbcc:	b2d2      	uxtb	r2, r2
9001bbce:	f835 8006 	ldrh.w	r8, [r5, r6]
9001bbd2:	fb14 f40a 	smulbb	r4, r4, sl
9001bbd6:	9602      	str	r6, [sp, #8]
9001bbd8:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001bbdc:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001bbe0:	fb16 f60a 	smulbb	r6, r6, sl
9001bbe4:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001bbe8:	fb0e ce02 	mla	lr, lr, r2, ip
9001bbec:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001bbf0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001bbf4:	fa1f fe8e 	uxth.w	lr, lr
9001bbf8:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001bbfc:	fa5f f888 	uxtb.w	r8, r8
9001bc00:	fb0c 6c02 	mla	ip, ip, r2, r6
9001bc04:	fb08 4402 	mla	r4, r8, r2, r4
9001bc08:	f10e 0201 	add.w	r2, lr, #1
9001bc0c:	fa1f fc8c 	uxth.w	ip, ip
9001bc10:	b2a4      	uxth	r4, r4
9001bc12:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001bc16:	9a02      	ldr	r2, [sp, #8]
9001bc18:	1c66      	adds	r6, r4, #1
9001bc1a:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001bc1e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001bc22:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001bc26:	ea46 0e0e 	orr.w	lr, r6, lr
9001bc2a:	f10c 0601 	add.w	r6, ip, #1
9001bc2e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001bc32:	0976      	lsrs	r6, r6, #5
9001bc34:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001bc38:	ea4e 0e06 	orr.w	lr, lr, r6
9001bc3c:	f825 e002 	strh.w	lr, [r5, r2]
9001bc40:	e7b3      	b.n	9001bbaa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
9001bc42:	f04f 0800 	mov.w	r8, #0
9001bc46:	eba3 0208 	sub.w	r2, r3, r8
9001bc4a:	2a00      	cmp	r2, #0
9001bc4c:	f77f af3e 	ble.w	9001bacc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
9001bc50:	1404      	asrs	r4, r0, #16
9001bc52:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
9001bc56:	140a      	asrs	r2, r1, #16
9001bc58:	fb06 4202 	mla	r2, r6, r2, r4
9001bc5c:	9c01      	ldr	r4, [sp, #4]
9001bc5e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
9001bc62:	0e22      	lsrs	r2, r4, #24
9001bc64:	d015      	beq.n	9001bc92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001bc66:	9e04      	ldr	r6, [sp, #16]
9001bc68:	4372      	muls	r2, r6
9001bc6a:	1c56      	adds	r6, r2, #1
9001bc6c:	eb06 2222 	add.w	r2, r6, r2, asr #8
9001bc70:	0a26      	lsrs	r6, r4, #8
9001bc72:	1212      	asrs	r2, r2, #8
9001bc74:	2aff      	cmp	r2, #255	@ 0xff
9001bc76:	d113      	bne.n	9001bca0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
9001bc78:	0962      	lsrs	r2, r4, #5
9001bc7a:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001bc7e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001bc82:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001bc86:	f026 0607 	bic.w	r6, r6, #7
9001bc8a:	4316      	orrs	r6, r2
9001bc8c:	4326      	orrs	r6, r4
9001bc8e:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
9001bc92:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001bc94:	f108 0801 	add.w	r8, r8, #1
9001bc98:	4410      	add	r0, r2
9001bc9a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001bc9c:	4411      	add	r1, r2
9001bc9e:	e7d2      	b.n	9001bc46 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
9001bca0:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
9001bca4:	fa1f fa82 	uxth.w	sl, r2
9001bca8:	f3c4 4707 	ubfx	r7, r4, #16, #8
9001bcac:	43d2      	mvns	r2, r2
9001bcae:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001bcb2:	fb17 f70a 	smulbb	r7, r7, sl
9001bcb6:	b2d2      	uxtb	r2, r2
9001bcb8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001bcbc:	b2e4      	uxtb	r4, r4
9001bcbe:	b2f6      	uxtb	r6, r6
9001bcc0:	fb0c 7c02 	mla	ip, ip, r2, r7
9001bcc4:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001bcc8:	fb14 f40a 	smulbb	r4, r4, sl
9001bccc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001bcd0:	fa1f fc8c 	uxth.w	ip, ip
9001bcd4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001bcd8:	fb16 f60a 	smulbb	r6, r6, sl
9001bcdc:	fa5f fe8e 	uxtb.w	lr, lr
9001bce0:	fb0e 4402 	mla	r4, lr, r2, r4
9001bce4:	fb07 6702 	mla	r7, r7, r2, r6
9001bce8:	f10c 0201 	add.w	r2, ip, #1
9001bcec:	b2a4      	uxth	r4, r4
9001bcee:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001bcf2:	1c66      	adds	r6, r4, #1
9001bcf4:	b2bf      	uxth	r7, r7
9001bcf6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001bcfa:	eb06 2614 	add.w	r6, r6, r4, lsr #8
9001bcfe:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001bd02:	ea46 0c0c 	orr.w	ip, r6, ip
9001bd06:	1c7e      	adds	r6, r7, #1
9001bd08:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001bd0c:	0976      	lsrs	r6, r6, #5
9001bd0e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001bd12:	ea4c 0c06 	orr.w	ip, ip, r6
9001bd16:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
9001bd1a:	e7ba      	b.n	9001bc92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
9001bd1c:	b007      	add	sp, #28
9001bd1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

9001bd24 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001bd24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001bd28:	b085      	sub	sp, #20
9001bd2a:	468b      	mov	fp, r1
9001bd2c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001bd30:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001bd32:	9203      	str	r2, [sp, #12]
9001bd34:	6841      	ldr	r1, [r0, #4]
9001bd36:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
9001bd3a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
9001bd3e:	fb01 2404 	mla	r4, r1, r4, r2
9001bd42:	6802      	ldr	r2, [r0, #0]
9001bd44:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001bd48:	f8d8 2000 	ldr.w	r2, [r8]
9001bd4c:	9201      	str	r2, [sp, #4]
9001bd4e:	f1bb 0f00 	cmp.w	fp, #0
9001bd52:	dc03      	bgt.n	9001bd5c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9001bd54:	9a03      	ldr	r2, [sp, #12]
9001bd56:	2a00      	cmp	r2, #0
9001bd58:	f340 814f 	ble.w	9001bffa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001bd5c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001bd5e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
9001bd62:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001bd66:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001bd68:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
9001bd6c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
9001bd70:	2b00      	cmp	r3, #0
9001bd72:	dd0e      	ble.n	9001bd92 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9001bd74:	1408      	asrs	r0, r1, #16
9001bd76:	d405      	bmi.n	9001bd84 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001bd78:	42b8      	cmp	r0, r7
9001bd7a:	da03      	bge.n	9001bd84 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001bd7c:	1410      	asrs	r0, r2, #16
9001bd7e:	d401      	bmi.n	9001bd84 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
9001bd80:	42b0      	cmp	r0, r6
9001bd82:	db07      	blt.n	9001bd94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001bd84:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001bd86:	3b01      	subs	r3, #1
9001bd88:	3402      	adds	r4, #2
9001bd8a:	4401      	add	r1, r0
9001bd8c:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001bd8e:	4402      	add	r2, r0
9001bd90:	e7ee      	b.n	9001bd70 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
9001bd92:	d017      	beq.n	9001bdc4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001bd94:	1e58      	subs	r0, r3, #1
9001bd96:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9001bd98:	fb05 1500 	mla	r5, r5, r0, r1
9001bd9c:	142d      	asrs	r5, r5, #16
9001bd9e:	d409      	bmi.n	9001bdb4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001bda0:	42bd      	cmp	r5, r7
9001bda2:	da07      	bge.n	9001bdb4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001bda4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9001bda6:	fb05 2000 	mla	r0, r5, r0, r2
9001bdaa:	1400      	asrs	r0, r0, #16
9001bdac:	d402      	bmi.n	9001bdb4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
9001bdae:	42b0      	cmp	r0, r6
9001bdb0:	f2c0 80ba 	blt.w	9001bf28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9001bdb4:	2600      	movs	r6, #0
9001bdb6:	1998      	adds	r0, r3, r6
9001bdb8:	2800      	cmp	r0, #0
9001bdba:	dc3e      	bgt.n	9001be3a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9001bdbc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001bdc0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001bdc4:	f1bb 0f00 	cmp.w	fp, #0
9001bdc8:	f340 8117 	ble.w	9001bffa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
9001bdcc:	ee30 0a04 	vadd.f32	s0, s0, s8
9001bdd0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001bdd2:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001bdd6:	f1bb 0b01 	subs.w	fp, fp, #1
9001bdda:	eeb0 6a62 	vmov.f32	s12, s5
9001bdde:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001bde2:	ee31 1a05 	vadd.f32	s2, s2, s10
9001bde6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bdea:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
9001bdee:	eeb0 6a43 	vmov.f32	s12, s6
9001bdf2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001bdf6:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
9001bdfa:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001bdfe:	ee61 7a27 	vmul.f32	s15, s2, s15
9001be02:	ee77 2a62 	vsub.f32	s5, s14, s5
9001be06:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001be0a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001be0e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001be12:	ee12 2a90 	vmov	r2, s5
9001be16:	eef0 2a47 	vmov.f32	s5, s14
9001be1a:	fb92 f3f3 	sdiv	r3, r2, r3
9001be1e:	ee13 2a10 	vmov	r2, s6
9001be22:	9311      	str	r3, [sp, #68]	@ 0x44
9001be24:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001be26:	eeb0 3a67 	vmov.f32	s6, s15
9001be2a:	fb92 f3f3 	sdiv	r3, r2, r3
9001be2e:	9a03      	ldr	r2, [sp, #12]
9001be30:	9312      	str	r3, [sp, #72]	@ 0x48
9001be32:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9001be34:	bf08      	it	eq
9001be36:	4613      	moveq	r3, r2
9001be38:	e789      	b.n	9001bd4e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9001be3a:	140f      	asrs	r7, r1, #16
9001be3c:	d424      	bmi.n	9001be88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001be3e:	f8d8 5008 	ldr.w	r5, [r8, #8]
9001be42:	42bd      	cmp	r5, r7
9001be44:	dd20      	ble.n	9001be88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001be46:	ea5f 4c22 	movs.w	ip, r2, asr #16
9001be4a:	d41d      	bmi.n	9001be88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001be4c:	f8d8 000c 	ldr.w	r0, [r8, #12]
9001be50:	4560      	cmp	r0, ip
9001be52:	dd19      	ble.n	9001be88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001be54:	b22d      	sxth	r5, r5
9001be56:	9801      	ldr	r0, [sp, #4]
9001be58:	fb0c 7505 	mla	r5, ip, r5, r7
9001be5c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
9001be60:	0e07      	lsrs	r7, r0, #24
9001be62:	2fff      	cmp	r7, #255	@ 0xff
9001be64:	d116      	bne.n	9001be94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
9001be66:	f06f 0501 	mvn.w	r5, #1
9001be6a:	fb05 f706 	mul.w	r7, r5, r6
9001be6e:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
9001be72:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
9001be76:	0945      	lsrs	r5, r0, #5
9001be78:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001be7c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001be80:	ea4c 0505 	orr.w	r5, ip, r5
9001be84:	4305      	orrs	r5, r0
9001be86:	53e5      	strh	r5, [r4, r7]
9001be88:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001be8a:	3e01      	subs	r6, #1
9001be8c:	4401      	add	r1, r0
9001be8e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001be90:	4402      	add	r2, r0
9001be92:	e790      	b.n	9001bdb6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9001be94:	b2fd      	uxtb	r5, r7
9001be96:	2f00      	cmp	r7, #0
9001be98:	d0f6      	beq.n	9001be88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001be9a:	f06f 0701 	mvn.w	r7, #1
9001be9e:	fa1f f985 	uxth.w	r9, r5
9001bea2:	43ed      	mvns	r5, r5
9001bea4:	f3c0 2a07 	ubfx	sl, r0, #8, #8
9001bea8:	4377      	muls	r7, r6
9001beaa:	fb1a fa09 	smulbb	sl, sl, r9
9001beae:	b2ed      	uxtb	r5, r5
9001beb0:	f834 e007 	ldrh.w	lr, [r4, r7]
9001beb4:	9702      	str	r7, [sp, #8]
9001beb6:	f3c0 4707 	ubfx	r7, r0, #16, #8
9001beba:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001bebe:	fb17 f709 	smulbb	r7, r7, r9
9001bec2:	b2c0      	uxtb	r0, r0
9001bec4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001bec8:	fb10 f009 	smulbb	r0, r0, r9
9001becc:	fb0c 7c05 	mla	ip, ip, r5, r7
9001bed0:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001bed4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001bed8:	fa1f fc8c 	uxth.w	ip, ip
9001bedc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001bee0:	fa5f fe8e 	uxtb.w	lr, lr
9001bee4:	fb07 a705 	mla	r7, r7, r5, sl
9001bee8:	fb0e 0005 	mla	r0, lr, r5, r0
9001beec:	f10c 0501 	add.w	r5, ip, #1
9001bef0:	b2bf      	uxth	r7, r7
9001bef2:	b280      	uxth	r0, r0
9001bef4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
9001bef8:	f100 0a01 	add.w	sl, r0, #1
9001befc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001bf00:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
9001bf04:	9802      	ldr	r0, [sp, #8]
9001bf06:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001bf0a:	ea4a 0c0c 	orr.w	ip, sl, ip
9001bf0e:	f107 0a01 	add.w	sl, r7, #1
9001bf12:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001bf16:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001bf1a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001bf1e:	ea4c 0c0a 	orr.w	ip, ip, sl
9001bf22:	f824 c000 	strh.w	ip, [r4, r0]
9001bf26:	e7af      	b.n	9001be88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9001bf28:	f04f 0e00 	mov.w	lr, #0
9001bf2c:	eba3 000e 	sub.w	r0, r3, lr
9001bf30:	2800      	cmp	r0, #0
9001bf32:	f77f af43 	ble.w	9001bdbc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
9001bf36:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
9001bf3a:	140d      	asrs	r5, r1, #16
9001bf3c:	1410      	asrs	r0, r2, #16
9001bf3e:	fb06 5000 	mla	r0, r6, r0, r5
9001bf42:	9d01      	ldr	r5, [sp, #4]
9001bf44:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
9001bf48:	0e2e      	lsrs	r6, r5, #24
9001bf4a:	2eff      	cmp	r6, #255	@ 0xff
9001bf4c:	d112      	bne.n	9001bf74 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
9001bf4e:	482c      	ldr	r0, [pc, #176]	@ (9001c000 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
9001bf50:	ea00 2615 	and.w	r6, r0, r5, lsr #8
9001bf54:	0968      	lsrs	r0, r5, #5
9001bf56:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001bf5a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001bf5e:	4330      	orrs	r0, r6
9001bf60:	4328      	orrs	r0, r5
9001bf62:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
9001bf66:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001bf68:	f10e 0e01 	add.w	lr, lr, #1
9001bf6c:	4401      	add	r1, r0
9001bf6e:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001bf70:	4402      	add	r2, r0
9001bf72:	e7db      	b.n	9001bf2c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
9001bf74:	b2f0      	uxtb	r0, r6
9001bf76:	2e00      	cmp	r6, #0
9001bf78:	d0f5      	beq.n	9001bf66 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001bf7a:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001bf7e:	fa1f f980 	uxth.w	r9, r0
9001bf82:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001bf86:	43c0      	mvns	r0, r0
9001bf88:	ea4f 272c 	mov.w	r7, ip, asr #8
9001bf8c:	f3c5 2a07 	ubfx	sl, r5, #8, #8
9001bf90:	fb16 f609 	smulbb	r6, r6, r9
9001bf94:	b2c0      	uxtb	r0, r0
9001bf96:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001bf9a:	b2ed      	uxtb	r5, r5
9001bf9c:	fb1a fa09 	smulbb	sl, sl, r9
9001bfa0:	fb07 6700 	mla	r7, r7, r0, r6
9001bfa4:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001bfa8:	fb15 f509 	smulbb	r5, r5, r9
9001bfac:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001bfb0:	b2bf      	uxth	r7, r7
9001bfb2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001bfb6:	fa5f fc8c 	uxtb.w	ip, ip
9001bfba:	fb06 a600 	mla	r6, r6, r0, sl
9001bfbe:	fb0c 5500 	mla	r5, ip, r0, r5
9001bfc2:	1c78      	adds	r0, r7, #1
9001bfc4:	b2b6      	uxth	r6, r6
9001bfc6:	b2ad      	uxth	r5, r5
9001bfc8:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001bfcc:	f105 0a01 	add.w	sl, r5, #1
9001bfd0:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001bfd4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001bfd8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001bfdc:	ea4a 0707 	orr.w	r7, sl, r7
9001bfe0:	f106 0a01 	add.w	sl, r6, #1
9001bfe4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001bfe8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001bfec:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001bff0:	ea47 070a 	orr.w	r7, r7, sl
9001bff4:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
9001bff8:	e7b5      	b.n	9001bf66 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9001bffa:	b005      	add	sp, #20
9001bffc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c000:	fffff800 	.word	0xfffff800

9001c004 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c004:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c008:	b087      	sub	sp, #28
9001c00a:	468b      	mov	fp, r1
9001c00c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c010:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001c012:	9203      	str	r2, [sp, #12]
9001c014:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001c018:	6841      	ldr	r1, [r0, #4]
9001c01a:	9204      	str	r2, [sp, #16]
9001c01c:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
9001c020:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001c024:	fb01 2404 	mla	r4, r1, r4, r2
9001c028:	6802      	ldr	r2, [r0, #0]
9001c02a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c02e:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001c032:	3201      	adds	r2, #1
9001c034:	f022 0201 	bic.w	r2, r2, #1
9001c038:	9200      	str	r2, [sp, #0]
9001c03a:	f8d9 2000 	ldr.w	r2, [r9]
9001c03e:	9201      	str	r2, [sp, #4]
9001c040:	f1bb 0f00 	cmp.w	fp, #0
9001c044:	dc03      	bgt.n	9001c04e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
9001c046:	9a03      	ldr	r2, [sp, #12]
9001c048:	2a00      	cmp	r2, #0
9001c04a:	f340 816a 	ble.w	9001c322 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001c04e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001c050:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
9001c054:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001c058:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001c05a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
9001c05e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001c062:	2b00      	cmp	r3, #0
9001c064:	dd0e      	ble.n	9001c084 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001c066:	1402      	asrs	r2, r0, #16
9001c068:	d405      	bmi.n	9001c076 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c06a:	42ba      	cmp	r2, r7
9001c06c:	da03      	bge.n	9001c076 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c06e:	140a      	asrs	r2, r1, #16
9001c070:	d401      	bmi.n	9001c076 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9001c072:	42b2      	cmp	r2, r6
9001c074:	db07      	blt.n	9001c086 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9001c076:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c078:	3b01      	subs	r3, #1
9001c07a:	3402      	adds	r4, #2
9001c07c:	4410      	add	r0, r2
9001c07e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c080:	4411      	add	r1, r2
9001c082:	e7ee      	b.n	9001c062 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
9001c084:	d017      	beq.n	9001c0b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
9001c086:	1e5a      	subs	r2, r3, #1
9001c088:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001c08a:	fb05 0502 	mla	r5, r5, r2, r0
9001c08e:	142d      	asrs	r5, r5, #16
9001c090:	d409      	bmi.n	9001c0a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001c092:	42bd      	cmp	r5, r7
9001c094:	da07      	bge.n	9001c0a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001c096:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001c098:	fb05 1202 	mla	r2, r5, r2, r1
9001c09c:	1412      	asrs	r2, r2, #16
9001c09e:	d402      	bmi.n	9001c0a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001c0a0:	42b2      	cmp	r2, r6
9001c0a2:	f2c0 80c8 	blt.w	9001c236 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
9001c0a6:	2700      	movs	r7, #0
9001c0a8:	19da      	adds	r2, r3, r7
9001c0aa:	2a00      	cmp	r2, #0
9001c0ac:	dc3e      	bgt.n	9001c12c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001c0ae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c0b2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c0b6:	f1bb 0f00 	cmp.w	fp, #0
9001c0ba:	f340 8132 	ble.w	9001c322 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
9001c0be:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c0c2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c0c4:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c0c8:	f1bb 0b01 	subs.w	fp, fp, #1
9001c0cc:	eeb0 6a62 	vmov.f32	s12, s5
9001c0d0:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c0d4:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c0d8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c0dc:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001c0e0:	eeb0 6a43 	vmov.f32	s12, s6
9001c0e4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c0e8:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001c0ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c0f0:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c0f4:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c0f8:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c0fc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c100:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c104:	ee12 2a90 	vmov	r2, s5
9001c108:	eef0 2a47 	vmov.f32	s5, s14
9001c10c:	fb92 f3f3 	sdiv	r3, r2, r3
9001c110:	ee13 2a10 	vmov	r2, s6
9001c114:	9313      	str	r3, [sp, #76]	@ 0x4c
9001c116:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c118:	eeb0 3a67 	vmov.f32	s6, s15
9001c11c:	fb92 f3f3 	sdiv	r3, r2, r3
9001c120:	9a03      	ldr	r2, [sp, #12]
9001c122:	9314      	str	r3, [sp, #80]	@ 0x50
9001c124:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c126:	bf08      	it	eq
9001c128:	4613      	moveq	r3, r2
9001c12a:	e789      	b.n	9001c040 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9001c12c:	1405      	asrs	r5, r0, #16
9001c12e:	d436      	bmi.n	9001c19e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c130:	f8d9 2008 	ldr.w	r2, [r9, #8]
9001c134:	42aa      	cmp	r2, r5
9001c136:	dd32      	ble.n	9001c19e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c138:	140e      	asrs	r6, r1, #16
9001c13a:	d430      	bmi.n	9001c19e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c13c:	f8d9 200c 	ldr.w	r2, [r9, #12]
9001c140:	42b2      	cmp	r2, r6
9001c142:	dd2c      	ble.n	9001c19e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c144:	9a00      	ldr	r2, [sp, #0]
9001c146:	fb06 5502 	mla	r5, r6, r2, r5
9001c14a:	9e01      	ldr	r6, [sp, #4]
9001c14c:	086a      	lsrs	r2, r5, #1
9001c14e:	5cb2      	ldrb	r2, [r6, r2]
9001c150:	07ee      	lsls	r6, r5, #31
9001c152:	bf54      	ite	pl
9001c154:	f002 020f 	andpl.w	r2, r2, #15
9001c158:	1112      	asrmi	r2, r2, #4
9001c15a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001c15e:	b2d2      	uxtb	r2, r2
9001c160:	b1ea      	cbz	r2, 9001c19e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c162:	9d04      	ldr	r5, [sp, #16]
9001c164:	436a      	muls	r2, r5
9001c166:	1c55      	adds	r5, r2, #1
9001c168:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001c16c:	4d6e      	ldr	r5, [pc, #440]	@ (9001c328 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001c16e:	1212      	asrs	r2, r2, #8
9001c170:	682d      	ldr	r5, [r5, #0]
9001c172:	2aff      	cmp	r2, #255	@ 0xff
9001c174:	ea4f 2615 	mov.w	r6, r5, lsr #8
9001c178:	9605      	str	r6, [sp, #20]
9001c17a:	d116      	bne.n	9001c1aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
9001c17c:	f06f 0201 	mvn.w	r2, #1
9001c180:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001c184:	fb02 fc07 	mul.w	ip, r2, r7
9001c188:	096a      	lsrs	r2, r5, #5
9001c18a:	f026 0607 	bic.w	r6, r6, #7
9001c18e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001c192:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001c196:	4316      	orrs	r6, r2
9001c198:	432e      	orrs	r6, r5
9001c19a:	f824 600c 	strh.w	r6, [r4, ip]
9001c19e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c1a0:	3f01      	subs	r7, #1
9001c1a2:	4410      	add	r0, r2
9001c1a4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c1a6:	4411      	add	r1, r2
9001c1a8:	e77e      	b.n	9001c0a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
9001c1aa:	f06f 0601 	mvn.w	r6, #1
9001c1ae:	fa1f fa82 	uxth.w	sl, r2
9001c1b2:	f3c5 4c07 	ubfx	ip, r5, #16, #8
9001c1b6:	43d2      	mvns	r2, r2
9001c1b8:	437e      	muls	r6, r7
9001c1ba:	b2ed      	uxtb	r5, r5
9001c1bc:	fb1c fc0a 	smulbb	ip, ip, sl
9001c1c0:	b2d2      	uxtb	r2, r2
9001c1c2:	f834 8006 	ldrh.w	r8, [r4, r6]
9001c1c6:	fb15 f50a 	smulbb	r5, r5, sl
9001c1ca:	9602      	str	r6, [sp, #8]
9001c1cc:	ea4f 2e28 	mov.w	lr, r8, asr #8
9001c1d0:	f89d 6014 	ldrb.w	r6, [sp, #20]
9001c1d4:	fb16 f60a 	smulbb	r6, r6, sl
9001c1d8:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001c1dc:	fb0e ce02 	mla	lr, lr, r2, ip
9001c1e0:	ea4f 0ce8 	mov.w	ip, r8, asr #3
9001c1e4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
9001c1e8:	fa1f fe8e 	uxth.w	lr, lr
9001c1ec:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001c1f0:	fa5f f888 	uxtb.w	r8, r8
9001c1f4:	fb0c 6c02 	mla	ip, ip, r2, r6
9001c1f8:	fb08 5502 	mla	r5, r8, r2, r5
9001c1fc:	f10e 0201 	add.w	r2, lr, #1
9001c200:	fa1f fc8c 	uxth.w	ip, ip
9001c204:	b2ad      	uxth	r5, r5
9001c206:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
9001c20a:	9a02      	ldr	r2, [sp, #8]
9001c20c:	1c6e      	adds	r6, r5, #1
9001c20e:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
9001c212:	eb06 2615 	add.w	r6, r6, r5, lsr #8
9001c216:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001c21a:	ea46 0e0e 	orr.w	lr, r6, lr
9001c21e:	f10c 0601 	add.w	r6, ip, #1
9001c222:	eb06 261c 	add.w	r6, r6, ip, lsr #8
9001c226:	0976      	lsrs	r6, r6, #5
9001c228:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001c22c:	ea4e 0e06 	orr.w	lr, lr, r6
9001c230:	f824 e002 	strh.w	lr, [r4, r2]
9001c234:	e7b3      	b.n	9001c19e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
9001c236:	f04f 0800 	mov.w	r8, #0
9001c23a:	eba3 0208 	sub.w	r2, r3, r8
9001c23e:	2a00      	cmp	r2, #0
9001c240:	f77f af35 	ble.w	9001c0ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
9001c244:	1402      	asrs	r2, r0, #16
9001c246:	9e00      	ldr	r6, [sp, #0]
9001c248:	140d      	asrs	r5, r1, #16
9001c24a:	fb06 2505 	mla	r5, r6, r5, r2
9001c24e:	9e01      	ldr	r6, [sp, #4]
9001c250:	086a      	lsrs	r2, r5, #1
9001c252:	07ed      	lsls	r5, r5, #31
9001c254:	5cb2      	ldrb	r2, [r6, r2]
9001c256:	bf54      	ite	pl
9001c258:	f002 020f 	andpl.w	r2, r2, #15
9001c25c:	1112      	asrmi	r2, r2, #4
9001c25e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001c262:	b2d2      	uxtb	r2, r2
9001c264:	b1c2      	cbz	r2, 9001c298 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c266:	9d04      	ldr	r5, [sp, #16]
9001c268:	436a      	muls	r2, r5
9001c26a:	1c55      	adds	r5, r2, #1
9001c26c:	eb05 2222 	add.w	r2, r5, r2, asr #8
9001c270:	4d2d      	ldr	r5, [pc, #180]	@ (9001c328 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
9001c272:	1212      	asrs	r2, r2, #8
9001c274:	682e      	ldr	r6, [r5, #0]
9001c276:	2aff      	cmp	r2, #255	@ 0xff
9001c278:	ea4f 2516 	mov.w	r5, r6, lsr #8
9001c27c:	d113      	bne.n	9001c2a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
9001c27e:	0972      	lsrs	r2, r6, #5
9001c280:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001c284:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001c288:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001c28c:	f025 0507 	bic.w	r5, r5, #7
9001c290:	4315      	orrs	r5, r2
9001c292:	4335      	orrs	r5, r6
9001c294:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
9001c298:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c29a:	f108 0801 	add.w	r8, r8, #1
9001c29e:	4410      	add	r0, r2
9001c2a0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c2a2:	4411      	add	r1, r2
9001c2a4:	e7c9      	b.n	9001c23a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9001c2a6:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
9001c2aa:	fa1f fa82 	uxth.w	sl, r2
9001c2ae:	f3c6 4707 	ubfx	r7, r6, #16, #8
9001c2b2:	43d2      	mvns	r2, r2
9001c2b4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001c2b8:	fb17 f70a 	smulbb	r7, r7, sl
9001c2bc:	b2d2      	uxtb	r2, r2
9001c2be:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c2c2:	b2f6      	uxtb	r6, r6
9001c2c4:	b2ed      	uxtb	r5, r5
9001c2c6:	fb0c 7c02 	mla	ip, ip, r2, r7
9001c2ca:	ea4f 07ee 	mov.w	r7, lr, asr #3
9001c2ce:	fb16 f60a 	smulbb	r6, r6, sl
9001c2d2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001c2d6:	fa1f fc8c 	uxth.w	ip, ip
9001c2da:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001c2de:	fb15 f50a 	smulbb	r5, r5, sl
9001c2e2:	fa5f fe8e 	uxtb.w	lr, lr
9001c2e6:	fb0e 6602 	mla	r6, lr, r2, r6
9001c2ea:	fb07 5702 	mla	r7, r7, r2, r5
9001c2ee:	f10c 0201 	add.w	r2, ip, #1
9001c2f2:	b2b6      	uxth	r6, r6
9001c2f4:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001c2f8:	1c75      	adds	r5, r6, #1
9001c2fa:	b2bf      	uxth	r7, r7
9001c2fc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9001c300:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001c304:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001c308:	ea45 0c0c 	orr.w	ip, r5, ip
9001c30c:	1c7d      	adds	r5, r7, #1
9001c30e:	eb05 2517 	add.w	r5, r5, r7, lsr #8
9001c312:	096d      	lsrs	r5, r5, #5
9001c314:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001c318:	ea4c 0c05 	orr.w	ip, ip, r5
9001c31c:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
9001c320:	e7ba      	b.n	9001c298 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
9001c322:	b007      	add	sp, #28
9001c324:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c328:	2402199c 	.word	0x2402199c

9001c32c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
9001c32c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c330:	b087      	sub	sp, #28
9001c332:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9001c336:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 9001c640 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
9001c33a:	9815      	ldr	r0, [sp, #84]	@ 0x54
9001c33c:	9101      	str	r1, [sp, #4]
9001c33e:	9205      	str	r2, [sp, #20]
9001c340:	6841      	ldr	r1, [r0, #4]
9001c342:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
9001c346:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
9001c34a:	fb01 2404 	mla	r4, r1, r4, r2
9001c34e:	6802      	ldr	r2, [r0, #0]
9001c350:	eb02 0444 	add.w	r4, r2, r4, lsl #1
9001c354:	f8db 2008 	ldr.w	r2, [fp, #8]
9001c358:	3201      	adds	r2, #1
9001c35a:	f022 0201 	bic.w	r2, r2, #1
9001c35e:	9202      	str	r2, [sp, #8]
9001c360:	f8db 2000 	ldr.w	r2, [fp]
9001c364:	9203      	str	r2, [sp, #12]
9001c366:	9a01      	ldr	r2, [sp, #4]
9001c368:	2a00      	cmp	r2, #0
9001c36a:	dc03      	bgt.n	9001c374 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9001c36c:	9a05      	ldr	r2, [sp, #20]
9001c36e:	2a00      	cmp	r2, #0
9001c370:	f340 8162 	ble.w	9001c638 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001c374:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001c376:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
9001c37a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
9001c37e:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001c380:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
9001c384:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
9001c388:	2b00      	cmp	r3, #0
9001c38a:	dd0e      	ble.n	9001c3aa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
9001c38c:	1402      	asrs	r2, r0, #16
9001c38e:	d405      	bmi.n	9001c39c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c390:	42ba      	cmp	r2, r7
9001c392:	da03      	bge.n	9001c39c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c394:	140a      	asrs	r2, r1, #16
9001c396:	d401      	bmi.n	9001c39c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
9001c398:	42b2      	cmp	r2, r6
9001c39a:	db07      	blt.n	9001c3ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
9001c39c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c39e:	3b01      	subs	r3, #1
9001c3a0:	3402      	adds	r4, #2
9001c3a2:	4410      	add	r0, r2
9001c3a4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c3a6:	4411      	add	r1, r2
9001c3a8:	e7ee      	b.n	9001c388 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
9001c3aa:	d017      	beq.n	9001c3dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
9001c3ac:	1e5a      	subs	r2, r3, #1
9001c3ae:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9001c3b0:	fb05 0502 	mla	r5, r5, r2, r0
9001c3b4:	142d      	asrs	r5, r5, #16
9001c3b6:	d409      	bmi.n	9001c3cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001c3b8:	42bd      	cmp	r5, r7
9001c3ba:	da07      	bge.n	9001c3cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001c3bc:	9d14      	ldr	r5, [sp, #80]	@ 0x50
9001c3be:	fb05 1202 	mla	r2, r5, r2, r1
9001c3c2:	1412      	asrs	r2, r2, #16
9001c3c4:	d402      	bmi.n	9001c3cc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
9001c3c6:	42b2      	cmp	r2, r6
9001c3c8:	f2c0 80c3 	blt.w	9001c552 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
9001c3cc:	2500      	movs	r5, #0
9001c3ce:	195a      	adds	r2, r3, r5
9001c3d0:	2a00      	cmp	r2, #0
9001c3d2:	dc3f      	bgt.n	9001c454 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
9001c3d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
9001c3d8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c3dc:	9b01      	ldr	r3, [sp, #4]
9001c3de:	2b00      	cmp	r3, #0
9001c3e0:	f340 812a 	ble.w	9001c638 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
9001c3e4:	ee30 0a04 	vadd.f32	s0, s0, s8
9001c3e8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c3ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
9001c3ee:	eeb0 6a62 	vmov.f32	s12, s5
9001c3f2:	eec6 7a80 	vdiv.f32	s15, s13, s0
9001c3f6:	ee31 1a05 	vadd.f32	s2, s2, s10
9001c3fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c3fe:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
9001c402:	eeb0 6a43 	vmov.f32	s12, s6
9001c406:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
9001c40a:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
9001c40e:	ee20 7aa7 	vmul.f32	s14, s1, s15
9001c412:	ee61 7a27 	vmul.f32	s15, s2, s15
9001c416:	ee77 2a62 	vsub.f32	s5, s14, s5
9001c41a:	ee37 3ac3 	vsub.f32	s6, s15, s6
9001c41e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9001c422:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9001c426:	ee12 2a90 	vmov	r2, s5
9001c42a:	eef0 2a47 	vmov.f32	s5, s14
9001c42e:	fb92 f3f3 	sdiv	r3, r2, r3
9001c432:	ee13 2a10 	vmov	r2, s6
9001c436:	9313      	str	r3, [sp, #76]	@ 0x4c
9001c438:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c43a:	eeb0 3a67 	vmov.f32	s6, s15
9001c43e:	fb92 f3f3 	sdiv	r3, r2, r3
9001c442:	9314      	str	r3, [sp, #80]	@ 0x50
9001c444:	9b01      	ldr	r3, [sp, #4]
9001c446:	9a05      	ldr	r2, [sp, #20]
9001c448:	3b01      	subs	r3, #1
9001c44a:	9301      	str	r3, [sp, #4]
9001c44c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9001c44e:	bf08      	it	eq
9001c450:	4613      	moveq	r3, r2
9001c452:	e788      	b.n	9001c366 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9001c454:	1406      	asrs	r6, r0, #16
9001c456:	d42c      	bmi.n	9001c4b2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001c458:	f8db 2008 	ldr.w	r2, [fp, #8]
9001c45c:	42b2      	cmp	r2, r6
9001c45e:	dd28      	ble.n	9001c4b2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001c460:	140f      	asrs	r7, r1, #16
9001c462:	d426      	bmi.n	9001c4b2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001c464:	f8db 200c 	ldr.w	r2, [fp, #12]
9001c468:	42ba      	cmp	r2, r7
9001c46a:	dd22      	ble.n	9001c4b2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001c46c:	9a02      	ldr	r2, [sp, #8]
9001c46e:	fb07 6602 	mla	r6, r7, r2, r6
9001c472:	9f03      	ldr	r7, [sp, #12]
9001c474:	0872      	lsrs	r2, r6, #1
9001c476:	07f6      	lsls	r6, r6, #31
9001c478:	5cba      	ldrb	r2, [r7, r2]
9001c47a:	bf54      	ite	pl
9001c47c:	f002 020f 	andpl.w	r2, r2, #15
9001c480:	1112      	asrmi	r2, r2, #4
9001c482:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001c486:	b2d2      	uxtb	r2, r2
9001c488:	2aff      	cmp	r2, #255	@ 0xff
9001c48a:	d118      	bne.n	9001c4be <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
9001c48c:	f06f 0601 	mvn.w	r6, #1
9001c490:	f8d8 2000 	ldr.w	r2, [r8]
9001c494:	fb06 f705 	mul.w	r7, r6, r5
9001c498:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
9001c49c:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
9001c4a0:	0956      	lsrs	r6, r2, #5
9001c4a2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001c4a6:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001c4aa:	ea4c 0606 	orr.w	r6, ip, r6
9001c4ae:	4316      	orrs	r6, r2
9001c4b0:	53e6      	strh	r6, [r4, r7]
9001c4b2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c4b4:	3d01      	subs	r5, #1
9001c4b6:	4410      	add	r0, r2
9001c4b8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c4ba:	4411      	add	r1, r2
9001c4bc:	e787      	b.n	9001c3ce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
9001c4be:	2a00      	cmp	r2, #0
9001c4c0:	d0f7      	beq.n	9001c4b2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001c4c2:	f06f 0601 	mvn.w	r6, #1
9001c4c6:	f8d8 c000 	ldr.w	ip, [r8]
9001c4ca:	fa1f f982 	uxth.w	r9, r2
9001c4ce:	43d2      	mvns	r2, r2
9001c4d0:	436e      	muls	r6, r5
9001c4d2:	f3cc 2a07 	ubfx	sl, ip, #8, #8
9001c4d6:	b2d2      	uxtb	r2, r2
9001c4d8:	f834 e006 	ldrh.w	lr, [r4, r6]
9001c4dc:	fb1a fa09 	smulbb	sl, sl, r9
9001c4e0:	9604      	str	r6, [sp, #16]
9001c4e2:	f3cc 4607 	ubfx	r6, ip, #16, #8
9001c4e6:	ea4f 272e 	mov.w	r7, lr, asr #8
9001c4ea:	fb16 f609 	smulbb	r6, r6, r9
9001c4ee:	fa5f fc8c 	uxtb.w	ip, ip
9001c4f2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001c4f6:	fb1c fc09 	smulbb	ip, ip, r9
9001c4fa:	fb07 6702 	mla	r7, r7, r2, r6
9001c4fe:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001c502:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001c506:	b2bf      	uxth	r7, r7
9001c508:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001c50c:	fa5f fe8e 	uxtb.w	lr, lr
9001c510:	fb06 a602 	mla	r6, r6, r2, sl
9001c514:	fb0e cc02 	mla	ip, lr, r2, ip
9001c518:	1c7a      	adds	r2, r7, #1
9001c51a:	b2b6      	uxth	r6, r6
9001c51c:	fa1f fc8c 	uxth.w	ip, ip
9001c520:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001c524:	9a04      	ldr	r2, [sp, #16]
9001c526:	f10c 0a01 	add.w	sl, ip, #1
9001c52a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001c52e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
9001c532:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c536:	ea4a 0707 	orr.w	r7, sl, r7
9001c53a:	f106 0a01 	add.w	sl, r6, #1
9001c53e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
9001c542:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c546:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c54a:	ea47 070a 	orr.w	r7, r7, sl
9001c54e:	52a7      	strh	r7, [r4, r2]
9001c550:	e7af      	b.n	9001c4b2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9001c552:	f04f 0e00 	mov.w	lr, #0
9001c556:	eba3 020e 	sub.w	r2, r3, lr
9001c55a:	2a00      	cmp	r2, #0
9001c55c:	f77f af3a 	ble.w	9001c3d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
9001c560:	1402      	asrs	r2, r0, #16
9001c562:	9e02      	ldr	r6, [sp, #8]
9001c564:	140d      	asrs	r5, r1, #16
9001c566:	fb06 2505 	mla	r5, r6, r5, r2
9001c56a:	9e03      	ldr	r6, [sp, #12]
9001c56c:	086a      	lsrs	r2, r5, #1
9001c56e:	07ed      	lsls	r5, r5, #31
9001c570:	5cb2      	ldrb	r2, [r6, r2]
9001c572:	bf54      	ite	pl
9001c574:	f002 020f 	andpl.w	r2, r2, #15
9001c578:	1112      	asrmi	r2, r2, #4
9001c57a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9001c57e:	b2d2      	uxtb	r2, r2
9001c580:	2aff      	cmp	r2, #255	@ 0xff
9001c582:	d115      	bne.n	9001c5b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
9001c584:	f8d8 5000 	ldr.w	r5, [r8]
9001c588:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
9001c58c:	ea02 2615 	and.w	r6, r2, r5, lsr #8
9001c590:	096a      	lsrs	r2, r5, #5
9001c592:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9001c596:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001c59a:	4332      	orrs	r2, r6
9001c59c:	432a      	orrs	r2, r5
9001c59e:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
9001c5a2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001c5a4:	f10e 0e01 	add.w	lr, lr, #1
9001c5a8:	4410      	add	r0, r2
9001c5aa:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001c5ac:	4411      	add	r1, r2
9001c5ae:	e7d2      	b.n	9001c556 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9001c5b0:	2a00      	cmp	r2, #0
9001c5b2:	d0f6      	beq.n	9001c5a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001c5b4:	f8d8 7000 	ldr.w	r7, [r8]
9001c5b8:	fa1f f982 	uxth.w	r9, r2
9001c5bc:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
9001c5c0:	43d2      	mvns	r2, r2
9001c5c2:	f3c7 4507 	ubfx	r5, r7, #16, #8
9001c5c6:	f3c7 2a07 	ubfx	sl, r7, #8, #8
9001c5ca:	ea4f 262c 	mov.w	r6, ip, asr #8
9001c5ce:	fb15 f509 	smulbb	r5, r5, r9
9001c5d2:	b2d2      	uxtb	r2, r2
9001c5d4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001c5d8:	b2ff      	uxtb	r7, r7
9001c5da:	fb1a fa09 	smulbb	sl, sl, r9
9001c5de:	fb06 5602 	mla	r6, r6, r2, r5
9001c5e2:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001c5e6:	fb17 f709 	smulbb	r7, r7, r9
9001c5ea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001c5ee:	b2b6      	uxth	r6, r6
9001c5f0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001c5f4:	fa5f fc8c 	uxtb.w	ip, ip
9001c5f8:	fb05 a502 	mla	r5, r5, r2, sl
9001c5fc:	fb0c 7702 	mla	r7, ip, r2, r7
9001c600:	1c72      	adds	r2, r6, #1
9001c602:	b2ad      	uxth	r5, r5
9001c604:	b2bf      	uxth	r7, r7
9001c606:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9001c60a:	f107 0a01 	add.w	sl, r7, #1
9001c60e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001c612:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
9001c616:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
9001c61a:	ea4a 0606 	orr.w	r6, sl, r6
9001c61e:	f105 0a01 	add.w	sl, r5, #1
9001c622:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001c626:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001c62a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001c62e:	ea46 060a 	orr.w	r6, r6, sl
9001c632:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
9001c636:	e7b4      	b.n	9001c5a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
9001c638:	b007      	add	sp, #28
9001c63a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c63e:	bf00      	nop
9001c640:	2402199c 	.word	0x2402199c

9001c644 <_ZN8touchgfx8LCD16bppD1Ev>:
9001c644:	4770      	bx	lr

9001c646 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
9001c646:	4770      	bx	lr

9001c648 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
9001c648:	4770      	bx	lr

9001c64a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
9001c64a:	4770      	bx	lr

9001c64c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
9001c64c:	4770      	bx	lr

9001c64e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
9001c64e:	4770      	bx	lr

9001c650 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
9001c650:	4770      	bx	lr

9001c652 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
9001c652:	4770      	bx	lr

9001c654 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
9001c654:	4770      	bx	lr

9001c656 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001c656:	4770      	bx	lr

9001c658 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001c658:	4770      	bx	lr

9001c65a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001c65a:	4770      	bx	lr

9001c65c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001c65c:	4770      	bx	lr

9001c65e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001c65e:	4770      	bx	lr

9001c660 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001c660:	4770      	bx	lr

9001c662 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001c662:	4770      	bx	lr

9001c664 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001c664:	4770      	bx	lr

9001c666 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001c666:	4770      	bx	lr

9001c668 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001c668:	4770      	bx	lr

9001c66a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001c66a:	4770      	bx	lr

9001c66c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
9001c66c:	4770      	bx	lr

9001c66e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
9001c66e:	4770      	bx	lr

9001c670 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
9001c670:	4770      	bx	lr

9001c672 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
9001c672:	4770      	bx	lr

9001c674 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
9001c674:	4770      	bx	lr

9001c676 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001c676:	4770      	bx	lr

9001c678 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
9001c678:	4770      	bx	lr

9001c67a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
9001c67a:	4770      	bx	lr

9001c67c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
9001c67c:	4770      	bx	lr

9001c67e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
9001c67e:	4770      	bx	lr

9001c680 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
9001c680:	4770      	bx	lr

9001c682 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
9001c682:	4770      	bx	lr

9001c684 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
9001c684:	4770      	bx	lr

9001c686 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
9001c686:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001c68a:	b088      	sub	sp, #32
9001c68c:	4606      	mov	r6, r0
9001c68e:	4688      	mov	r8, r1
9001c690:	4691      	mov	r9, r2
9001c692:	ac08      	add	r4, sp, #32
9001c694:	f824 3d0c 	strh.w	r3, [r4, #-12]!
9001c698:	4620      	mov	r0, r4
9001c69a:	f7fd fc33 	bl	90019f04 <_ZNK8touchgfx6Bitmap7getDataEv>
9001c69e:	6833      	ldr	r3, [r6, #0]
9001c6a0:	4605      	mov	r5, r0
9001c6a2:	4620      	mov	r0, r4
9001c6a4:	699f      	ldr	r7, [r3, #24]
9001c6a6:	f7fd fb3b 	bl	90019d20 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001c6aa:	4682      	mov	sl, r0
9001c6ac:	4620      	mov	r0, r4
9001c6ae:	f7fd fb6b 	bl	90019d88 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001c6b2:	9500      	str	r5, [sp, #0]
9001c6b4:	464b      	mov	r3, r9
9001c6b6:	4642      	mov	r2, r8
9001c6b8:	4631      	mov	r1, r6
9001c6ba:	e9cd a001 	strd	sl, r0, [sp, #4]
9001c6be:	a806      	add	r0, sp, #24
9001c6c0:	47b8      	blx	r7
9001c6c2:	4628      	mov	r0, r5
9001c6c4:	b008      	add	sp, #32
9001c6c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

9001c6cc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
9001c6cc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9001c6d0:	2300      	movs	r3, #0
9001c6d2:	9300      	str	r3, [sp, #0]
9001c6d4:	4b3d      	ldr	r3, [pc, #244]	@ (9001c7cc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
9001c6d6:	781b      	ldrb	r3, [r3, #0]
9001c6d8:	2b00      	cmp	r3, #0
9001c6da:	d137      	bne.n	9001c74c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
9001c6dc:	4a3c      	ldr	r2, [pc, #240]	@ (9001c7d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001c6de:	f9b2 2000 	ldrsh.w	r2, [r2]
9001c6e2:	f8ad 2004 	strh.w	r2, [sp, #4]
9001c6e6:	2b00      	cmp	r3, #0
9001c6e8:	d132      	bne.n	9001c750 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
9001c6ea:	4b3a      	ldr	r3, [pc, #232]	@ (9001c7d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001c6ec:	f9b3 3000 	ldrsh.w	r3, [r3]
9001c6f0:	ac02      	add	r4, sp, #8
9001c6f2:	6808      	ldr	r0, [r1, #0]
9001c6f4:	f8ad 3006 	strh.w	r3, [sp, #6]
9001c6f8:	ab02      	add	r3, sp, #8
9001c6fa:	6849      	ldr	r1, [r1, #4]
9001c6fc:	4d36      	ldr	r5, [pc, #216]	@ (9001c7d8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
9001c6fe:	c303      	stmia	r3!, {r0, r1}
9001c700:	4669      	mov	r1, sp
9001c702:	4620      	mov	r0, r4
9001c704:	f7f9 fbd8 	bl	90015eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c708:	4668      	mov	r0, sp
9001c70a:	f7f9 fbad 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c70e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
9001c712:	f8bd 2000 	ldrh.w	r2, [sp]
9001c716:	462f      	mov	r7, r5
9001c718:	6828      	ldr	r0, [r5, #0]
9001c71a:	4413      	add	r3, r2
9001c71c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001c720:	f8ad 3008 	strh.w	r3, [sp, #8]
9001c724:	f8bd 300a 	ldrh.w	r3, [sp, #10]
9001c728:	4413      	add	r3, r2
9001c72a:	f8ad 300a 	strh.w	r3, [sp, #10]
9001c72e:	6803      	ldr	r3, [r0, #0]
9001c730:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001c732:	4798      	blx	r3
9001c734:	f010 0f01 	tst.w	r0, #1
9001c738:	d00c      	beq.n	9001c754 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
9001c73a:	6828      	ldr	r0, [r5, #0]
9001c73c:	6803      	ldr	r3, [r0, #0]
9001c73e:	e894 0006 	ldmia.w	r4, {r1, r2}
9001c742:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
9001c744:	4798      	blx	r3
9001c746:	b004      	add	sp, #16
9001c748:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001c74c:	4a21      	ldr	r2, [pc, #132]	@ (9001c7d4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
9001c74e:	e7c6      	b.n	9001c6de <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
9001c750:	4b1f      	ldr	r3, [pc, #124]	@ (9001c7d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001c752:	e7cb      	b.n	9001c6ec <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
9001c754:	6838      	ldr	r0, [r7, #0]
9001c756:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
9001c75a:	6803      	ldr	r3, [r0, #0]
9001c75c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
9001c760:	ea4f 0848 	mov.w	r8, r8, lsl #1
9001c764:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9001c766:	4798      	blx	r3
9001c768:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
9001c76c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001c770:	f8bd 6004 	ldrh.w	r6, [sp, #4]
9001c774:	fb16 3602 	smlabb	r6, r6, r2, r3
9001c778:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001c77c:	6838      	ldr	r0, [r7, #0]
9001c77e:	6803      	ldr	r3, [r0, #0]
9001c780:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001c782:	4798      	blx	r3
9001c784:	4a12      	ldr	r2, [pc, #72]	@ (9001c7d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
9001c786:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
9001c78a:	8813      	ldrh	r3, [r2, #0]
9001c78c:	4691      	mov	r9, r2
9001c78e:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001c792:	435d      	muls	r5, r3
9001c794:	fb03 1404 	mla	r4, r3, r4, r1
9001c798:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001c79c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001c7a0:	6838      	ldr	r0, [r7, #0]
9001c7a2:	42ac      	cmp	r4, r5
9001c7a4:	6803      	ldr	r3, [r0, #0]
9001c7a6:	d20e      	bcs.n	9001c7c6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
9001c7a8:	f8d3 a038 	ldr.w	sl, [r3, #56]	@ 0x38
9001c7ac:	4632      	mov	r2, r6
9001c7ae:	4643      	mov	r3, r8
9001c7b0:	4621      	mov	r1, r4
9001c7b2:	47d0      	blx	sl
9001c7b4:	f8b9 3000 	ldrh.w	r3, [r9]
9001c7b8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c7bc:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9001c7c0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001c7c4:	e7ec      	b.n	9001c7a0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
9001c7c6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001c7c8:	4798      	blx	r3
9001c7ca:	e7bc      	b.n	9001c746 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
9001c7cc:	24021984 	.word	0x24021984
9001c7d0:	24021986 	.word	0x24021986
9001c7d4:	24021988 	.word	0x24021988
9001c7d8:	2402198c 	.word	0x2402198c

9001c7dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
9001c7dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001c7e0:	b08b      	sub	sp, #44	@ 0x2c
9001c7e2:	460f      	mov	r7, r1
9001c7e4:	4616      	mov	r6, r2
9001c7e6:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
9001c7ea:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
9001c7ee:	f1bb 0f00 	cmp.w	fp, #0
9001c7f2:	d04a      	beq.n	9001c88a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001c7f4:	6810      	ldr	r0, [r2, #0]
9001c7f6:	ad06      	add	r5, sp, #24
9001c7f8:	6851      	ldr	r1, [r2, #4]
9001c7fa:	c503      	stmia	r5!, {r0, r1}
9001c7fc:	6818      	ldr	r0, [r3, #0]
9001c7fe:	ad08      	add	r5, sp, #32
9001c800:	6859      	ldr	r1, [r3, #4]
9001c802:	c503      	stmia	r5!, {r0, r1}
9001c804:	a806      	add	r0, sp, #24
9001c806:	f7f9 fb2f 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001c80a:	4631      	mov	r1, r6
9001c80c:	a808      	add	r0, sp, #32
9001c80e:	f7f9 fb53 	bl	90015eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001c812:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
9001c816:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
9001c81a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
9001c81e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
9001c822:	fb16 2103 	smlabb	r1, r6, r3, r2
9001c826:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
9001c82a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
9001c82e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
9001c832:	4f5f      	ldr	r7, [pc, #380]	@ (9001c9b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001c834:	440a      	add	r2, r1
9001c836:	6838      	ldr	r0, [r7, #0]
9001c838:	46b9      	mov	r9, r7
9001c83a:	f8ad 2020 	strh.w	r2, [sp, #32]
9001c83e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
9001c842:	4413      	add	r3, r2
9001c844:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
9001c848:	6803      	ldr	r3, [r0, #0]
9001c84a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001c84c:	4798      	blx	r3
9001c84e:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001c852:	d11d      	bne.n	9001c890 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
9001c854:	b9fc      	cbnz	r4, 9001c896 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001c856:	f010 0f01 	tst.w	r0, #1
9001c85a:	d01c      	beq.n	9001c896 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
9001c85c:	f8d9 0000 	ldr.w	r0, [r9]
9001c860:	2700      	movs	r7, #0
9001c862:	b2ad      	uxth	r5, r5
9001c864:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
9001c868:	6801      	ldr	r1, [r0, #0]
9001c86a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
9001c86e:	f8cd b00c 	str.w	fp, [sp, #12]
9001c872:	9501      	str	r5, [sp, #4]
9001c874:	e9cd 4704 	strd	r4, r7, [sp, #16]
9001c878:	f8bd 401c 	ldrh.w	r4, [sp, #28]
9001c87c:	9402      	str	r4, [sp, #8]
9001c87e:	fa1f f488 	uxth.w	r4, r8
9001c882:	9400      	str	r4, [sp, #0]
9001c884:	6c8c      	ldr	r4, [r1, #72]	@ 0x48
9001c886:	4631      	mov	r1, r6
9001c888:	47a0      	blx	r4
9001c88a:	b00b      	add	sp, #44	@ 0x2c
9001c88c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001c890:	f010 0f04 	tst.w	r0, #4
9001c894:	e7e1      	b.n	9001c85a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
9001c896:	f8d9 0000 	ldr.w	r0, [r9]
9001c89a:	ea4f 0748 	mov.w	r7, r8, lsl #1
9001c89e:	6803      	ldr	r3, [r0, #0]
9001c8a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001c8a2:	4798      	blx	r3
9001c8a4:	4b43      	ldr	r3, [pc, #268]	@ (9001c9b4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
9001c8a6:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
9001c8aa:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
9001c8ae:	881a      	ldrh	r2, [r3, #0]
9001c8b0:	469a      	mov	sl, r3
9001c8b2:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
9001c8b6:	fb05 f502 	mul.w	r5, r5, r2
9001c8ba:	fb02 1404 	mla	r4, r2, r4, r1
9001c8be:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001c8c2:	d059      	beq.n	9001c978 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
9001c8c4:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
9001c8c8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001c8cc:	fa1f f28b 	uxth.w	r2, fp
9001c8d0:	469e      	mov	lr, r3
9001c8d2:	fa1f f989 	uxth.w	r9, r9
9001c8d6:	42ac      	cmp	r4, r5
9001c8d8:	d264      	bcs.n	9001c9a4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001c8da:	eb04 0a07 	add.w	sl, r4, r7
9001c8de:	4554      	cmp	r4, sl
9001c8e0:	d23d      	bcs.n	9001c95e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
9001c8e2:	8821      	ldrh	r1, [r4, #0]
9001c8e4:	f836 3b02 	ldrh.w	r3, [r6], #2
9001c8e8:	1208      	asrs	r0, r1, #8
9001c8ea:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001c8ee:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001c8f2:	ea4f 0be1 	mov.w	fp, r1, asr #3
9001c8f6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001c8fa:	00c9      	lsls	r1, r1, #3
9001c8fc:	fb10 f009 	smulbb	r0, r0, r9
9001c900:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001c904:	b2c9      	uxtb	r1, r1
9001c906:	fb0c 0c02 	mla	ip, ip, r2, r0
9001c90a:	10d8      	asrs	r0, r3, #3
9001c90c:	fb1b fb09 	smulbb	fp, fp, r9
9001c910:	00db      	lsls	r3, r3, #3
9001c912:	fa1f fc8c 	uxth.w	ip, ip
9001c916:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9001c91a:	fb11 f109 	smulbb	r1, r1, r9
9001c91e:	b2db      	uxtb	r3, r3
9001c920:	fb00 b002 	mla	r0, r0, r2, fp
9001c924:	f10c 0b01 	add.w	fp, ip, #1
9001c928:	fb03 1302 	mla	r3, r3, r2, r1
9001c92c:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
9001c930:	b29b      	uxth	r3, r3
9001c932:	b280      	uxth	r0, r0
9001c934:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
9001c938:	f103 0c01 	add.w	ip, r3, #1
9001c93c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001c940:	1c43      	adds	r3, r0, #1
9001c942:	eb03 2010 	add.w	r0, r3, r0, lsr #8
9001c946:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001c94a:	0940      	lsrs	r0, r0, #5
9001c94c:	ea4c 0c0b 	orr.w	ip, ip, fp
9001c950:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9001c954:	ea4c 0c00 	orr.w	ip, ip, r0
9001c958:	f824 cb02 	strh.w	ip, [r4], #2
9001c95c:	e7bf      	b.n	9001c8de <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
9001c95e:	f8be 3000 	ldrh.w	r3, [lr]
9001c962:	eba3 0308 	sub.w	r3, r3, r8
9001c966:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c96a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001c96e:	eba3 0308 	sub.w	r3, r3, r8
9001c972:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001c976:	e7ae      	b.n	9001c8d6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
9001c978:	eb04 0545 	add.w	r5, r4, r5, lsl #1
9001c97c:	f8d9 0000 	ldr.w	r0, [r9]
9001c980:	42ac      	cmp	r4, r5
9001c982:	6803      	ldr	r3, [r0, #0]
9001c984:	d20e      	bcs.n	9001c9a4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
9001c986:	f8d3 8038 	ldr.w	r8, [r3, #56]	@ 0x38
9001c98a:	4632      	mov	r2, r6
9001c98c:	463b      	mov	r3, r7
9001c98e:	4621      	mov	r1, r4
9001c990:	47c0      	blx	r8
9001c992:	f8ba 3000 	ldrh.w	r3, [sl]
9001c996:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001c99a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
9001c99e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
9001c9a2:	e7eb      	b.n	9001c97c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
9001c9a4:	4b02      	ldr	r3, [pc, #8]	@ (9001c9b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
9001c9a6:	6818      	ldr	r0, [r3, #0]
9001c9a8:	6803      	ldr	r3, [r0, #0]
9001c9aa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001c9ac:	4798      	blx	r3
9001c9ae:	e76c      	b.n	9001c88a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
9001c9b0:	2402198c 	.word	0x2402198c
9001c9b4:	24021986 	.word	0x24021986

9001c9b8 <_ZN8touchgfx8LCD16bppD0Ev>:
9001c9b8:	b510      	push	{r4, lr}
9001c9ba:	4604      	mov	r4, r0
9001c9bc:	218c      	movs	r1, #140	@ 0x8c
9001c9be:	f00c fa5d 	bl	90028e7c <_ZdlPvj>
9001c9c2:	4620      	mov	r0, r4
9001c9c4:	bd10      	pop	{r4, pc}

9001c9c6 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
9001c9c6:	b510      	push	{r4, lr}
9001c9c8:	4604      	mov	r4, r0
9001c9ca:	2104      	movs	r1, #4
9001c9cc:	f00c fa56 	bl	90028e7c <_ZdlPvj>
9001c9d0:	4620      	mov	r0, r4
9001c9d2:	bd10      	pop	{r4, pc}

9001c9d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
9001c9d4:	b510      	push	{r4, lr}
9001c9d6:	4604      	mov	r4, r0
9001c9d8:	2104      	movs	r1, #4
9001c9da:	f00c fa4f 	bl	90028e7c <_ZdlPvj>
9001c9de:	4620      	mov	r0, r4
9001c9e0:	bd10      	pop	{r4, pc}

9001c9e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
9001c9e2:	b510      	push	{r4, lr}
9001c9e4:	4604      	mov	r4, r0
9001c9e6:	f640 0144 	movw	r1, #2116	@ 0x844
9001c9ea:	f00c fa47 	bl	90028e7c <_ZdlPvj>
9001c9ee:	4620      	mov	r0, r4
9001c9f0:	bd10      	pop	{r4, pc}

9001c9f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
9001c9f2:	b510      	push	{r4, lr}
9001c9f4:	4604      	mov	r4, r0
9001c9f6:	f44f 7182 	mov.w	r1, #260	@ 0x104
9001c9fa:	f00c fa3f 	bl	90028e7c <_ZdlPvj>
9001c9fe:	4620      	mov	r0, r4
9001ca00:	bd10      	pop	{r4, pc}

9001ca02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001ca02:	b510      	push	{r4, lr}
9001ca04:	4604      	mov	r4, r0
9001ca06:	2104      	movs	r1, #4
9001ca08:	f00c fa38 	bl	90028e7c <_ZdlPvj>
9001ca0c:	4620      	mov	r0, r4
9001ca0e:	bd10      	pop	{r4, pc}

9001ca10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001ca10:	b510      	push	{r4, lr}
9001ca12:	4604      	mov	r4, r0
9001ca14:	2104      	movs	r1, #4
9001ca16:	f00c fa31 	bl	90028e7c <_ZdlPvj>
9001ca1a:	4620      	mov	r0, r4
9001ca1c:	bd10      	pop	{r4, pc}

9001ca1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001ca1e:	b510      	push	{r4, lr}
9001ca20:	4604      	mov	r4, r0
9001ca22:	2104      	movs	r1, #4
9001ca24:	f00c fa2a 	bl	90028e7c <_ZdlPvj>
9001ca28:	4620      	mov	r0, r4
9001ca2a:	bd10      	pop	{r4, pc}

9001ca2c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001ca2c:	b510      	push	{r4, lr}
9001ca2e:	4604      	mov	r4, r0
9001ca30:	2104      	movs	r1, #4
9001ca32:	f00c fa23 	bl	90028e7c <_ZdlPvj>
9001ca36:	4620      	mov	r0, r4
9001ca38:	bd10      	pop	{r4, pc}

9001ca3a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001ca3a:	b510      	push	{r4, lr}
9001ca3c:	4604      	mov	r4, r0
9001ca3e:	2104      	movs	r1, #4
9001ca40:	f00c fa1c 	bl	90028e7c <_ZdlPvj>
9001ca44:	4620      	mov	r0, r4
9001ca46:	bd10      	pop	{r4, pc}

9001ca48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
9001ca48:	b510      	push	{r4, lr}
9001ca4a:	4604      	mov	r4, r0
9001ca4c:	2104      	movs	r1, #4
9001ca4e:	f00c fa15 	bl	90028e7c <_ZdlPvj>
9001ca52:	4620      	mov	r0, r4
9001ca54:	bd10      	pop	{r4, pc}

9001ca56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
9001ca56:	b510      	push	{r4, lr}
9001ca58:	4604      	mov	r4, r0
9001ca5a:	2104      	movs	r1, #4
9001ca5c:	f00c fa0e 	bl	90028e7c <_ZdlPvj>
9001ca60:	4620      	mov	r0, r4
9001ca62:	bd10      	pop	{r4, pc}

9001ca64 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
9001ca64:	b510      	push	{r4, lr}
9001ca66:	4604      	mov	r4, r0
9001ca68:	2104      	movs	r1, #4
9001ca6a:	f00c fa07 	bl	90028e7c <_ZdlPvj>
9001ca6e:	4620      	mov	r0, r4
9001ca70:	bd10      	pop	{r4, pc}

9001ca72 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001ca72:	b510      	push	{r4, lr}
9001ca74:	4604      	mov	r4, r0
9001ca76:	2104      	movs	r1, #4
9001ca78:	f00c fa00 	bl	90028e7c <_ZdlPvj>
9001ca7c:	4620      	mov	r0, r4
9001ca7e:	bd10      	pop	{r4, pc}

9001ca80 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001ca80:	b510      	push	{r4, lr}
9001ca82:	4604      	mov	r4, r0
9001ca84:	2104      	movs	r1, #4
9001ca86:	f00c f9f9 	bl	90028e7c <_ZdlPvj>
9001ca8a:	4620      	mov	r0, r4
9001ca8c:	bd10      	pop	{r4, pc}

9001ca8e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001ca8e:	b510      	push	{r4, lr}
9001ca90:	4604      	mov	r4, r0
9001ca92:	2104      	movs	r1, #4
9001ca94:	f00c f9f2 	bl	90028e7c <_ZdlPvj>
9001ca98:	4620      	mov	r0, r4
9001ca9a:	bd10      	pop	{r4, pc}

9001ca9c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001ca9c:	b510      	push	{r4, lr}
9001ca9e:	4604      	mov	r4, r0
9001caa0:	2104      	movs	r1, #4
9001caa2:	f00c f9eb 	bl	90028e7c <_ZdlPvj>
9001caa6:	4620      	mov	r0, r4
9001caa8:	bd10      	pop	{r4, pc}

9001caaa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
9001caaa:	b510      	push	{r4, lr}
9001caac:	4604      	mov	r4, r0
9001caae:	2104      	movs	r1, #4
9001cab0:	f00c f9e4 	bl	90028e7c <_ZdlPvj>
9001cab4:	4620      	mov	r0, r4
9001cab6:	bd10      	pop	{r4, pc}

9001cab8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
9001cab8:	b510      	push	{r4, lr}
9001caba:	4604      	mov	r4, r0
9001cabc:	2104      	movs	r1, #4
9001cabe:	f00c f9dd 	bl	90028e7c <_ZdlPvj>
9001cac2:	4620      	mov	r0, r4
9001cac4:	bd10      	pop	{r4, pc}

9001cac6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001cac6:	b510      	push	{r4, lr}
9001cac8:	4604      	mov	r4, r0
9001caca:	2104      	movs	r1, #4
9001cacc:	f00c f9d6 	bl	90028e7c <_ZdlPvj>
9001cad0:	4620      	mov	r0, r4
9001cad2:	bd10      	pop	{r4, pc}

9001cad4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001cad4:	b510      	push	{r4, lr}
9001cad6:	4604      	mov	r4, r0
9001cad8:	2104      	movs	r1, #4
9001cada:	f00c f9cf 	bl	90028e7c <_ZdlPvj>
9001cade:	4620      	mov	r0, r4
9001cae0:	bd10      	pop	{r4, pc}

9001cae2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
9001cae2:	b510      	push	{r4, lr}
9001cae4:	4604      	mov	r4, r0
9001cae6:	2104      	movs	r1, #4
9001cae8:	f00c f9c8 	bl	90028e7c <_ZdlPvj>
9001caec:	4620      	mov	r0, r4
9001caee:	bd10      	pop	{r4, pc}

9001caf0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
9001caf0:	b510      	push	{r4, lr}
9001caf2:	4604      	mov	r4, r0
9001caf4:	2104      	movs	r1, #4
9001caf6:	f00c f9c1 	bl	90028e7c <_ZdlPvj>
9001cafa:	4620      	mov	r0, r4
9001cafc:	bd10      	pop	{r4, pc}

9001cafe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001cafe:	b510      	push	{r4, lr}
9001cb00:	4604      	mov	r4, r0
9001cb02:	2104      	movs	r1, #4
9001cb04:	f00c f9ba 	bl	90028e7c <_ZdlPvj>
9001cb08:	4620      	mov	r0, r4
9001cb0a:	bd10      	pop	{r4, pc}

9001cb0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
9001cb0c:	b510      	push	{r4, lr}
9001cb0e:	4604      	mov	r4, r0
9001cb10:	2104      	movs	r1, #4
9001cb12:	f00c f9b3 	bl	90028e7c <_ZdlPvj>
9001cb16:	4620      	mov	r0, r4
9001cb18:	bd10      	pop	{r4, pc}

9001cb1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
9001cb1a:	b510      	push	{r4, lr}
9001cb1c:	4604      	mov	r4, r0
9001cb1e:	2104      	movs	r1, #4
9001cb20:	f00c f9ac 	bl	90028e7c <_ZdlPvj>
9001cb24:	4620      	mov	r0, r4
9001cb26:	bd10      	pop	{r4, pc}

9001cb28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
9001cb28:	b510      	push	{r4, lr}
9001cb2a:	4604      	mov	r4, r0
9001cb2c:	2104      	movs	r1, #4
9001cb2e:	f00c f9a5 	bl	90028e7c <_ZdlPvj>
9001cb32:	4620      	mov	r0, r4
9001cb34:	bd10      	pop	{r4, pc}

9001cb36 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
9001cb36:	b510      	push	{r4, lr}
9001cb38:	4604      	mov	r4, r0
9001cb3a:	2104      	movs	r1, #4
9001cb3c:	f00c f99e 	bl	90028e7c <_ZdlPvj>
9001cb40:	4620      	mov	r0, r4
9001cb42:	bd10      	pop	{r4, pc}

9001cb44 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
9001cb44:	b510      	push	{r4, lr}
9001cb46:	4604      	mov	r4, r0
9001cb48:	2104      	movs	r1, #4
9001cb4a:	f00c f997 	bl	90028e7c <_ZdlPvj>
9001cb4e:	4620      	mov	r0, r4
9001cb50:	bd10      	pop	{r4, pc}

9001cb52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
9001cb52:	b510      	push	{r4, lr}
9001cb54:	4604      	mov	r4, r0
9001cb56:	2104      	movs	r1, #4
9001cb58:	f00c f990 	bl	90028e7c <_ZdlPvj>
9001cb5c:	4620      	mov	r0, r4
9001cb5e:	bd10      	pop	{r4, pc}

9001cb60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
9001cb60:	b510      	push	{r4, lr}
9001cb62:	4604      	mov	r4, r0
9001cb64:	2104      	movs	r1, #4
9001cb66:	f00c f989 	bl	90028e7c <_ZdlPvj>
9001cb6a:	4620      	mov	r0, r4
9001cb6c:	bd10      	pop	{r4, pc}

9001cb6e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
9001cb6e:	b510      	push	{r4, lr}
9001cb70:	4604      	mov	r4, r0
9001cb72:	2104      	movs	r1, #4
9001cb74:	f00c f982 	bl	90028e7c <_ZdlPvj>
9001cb78:	4620      	mov	r0, r4
9001cb7a:	bd10      	pop	{r4, pc}

9001cb7c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
9001cb7c:	b510      	push	{r4, lr}
9001cb7e:	4604      	mov	r4, r0
9001cb80:	2104      	movs	r1, #4
9001cb82:	f00c f97b 	bl	90028e7c <_ZdlPvj>
9001cb86:	4620      	mov	r0, r4
9001cb88:	bd10      	pop	{r4, pc}
	...

9001cb8c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
9001cb8c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001cb90:	b08f      	sub	sp, #60	@ 0x3c
9001cb92:	4616      	mov	r6, r2
9001cb94:	4682      	mov	sl, r0
9001cb96:	460d      	mov	r5, r1
9001cb98:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
9001cb9c:	9205      	str	r2, [sp, #20]
9001cb9e:	2a00      	cmp	r2, #0
9001cba0:	f000 82b7 	beq.w	9001d112 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
9001cba4:	6830      	ldr	r0, [r6, #0]
9001cba6:	ac0a      	add	r4, sp, #40	@ 0x28
9001cba8:	6871      	ldr	r1, [r6, #4]
9001cbaa:	c403      	stmia	r4!, {r0, r1}
9001cbac:	6818      	ldr	r0, [r3, #0]
9001cbae:	ac0c      	add	r4, sp, #48	@ 0x30
9001cbb0:	6859      	ldr	r1, [r3, #4]
9001cbb2:	c403      	stmia	r4!, {r0, r1}
9001cbb4:	a80a      	add	r0, sp, #40	@ 0x28
9001cbb6:	f7f9 f957 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001cbba:	4631      	mov	r1, r6
9001cbbc:	a80c      	add	r0, sp, #48	@ 0x30
9001cbbe:	f7f9 f97b 	bl	90015eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001cbc2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001cbc6:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001cbca:	bfdb      	ittet	le
9001cbcc:	b293      	uxthle	r3, r2
9001cbce:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001cbd2:	2301      	movgt	r3, #1
9001cbd4:	fb91 f3f3 	sdivle	r3, r1, r3
9001cbd8:	9300      	str	r3, [sp, #0]
9001cbda:	f105 0308 	add.w	r3, r5, #8
9001cbde:	9900      	ldr	r1, [sp, #0]
9001cbe0:	9306      	str	r3, [sp, #24]
9001cbe2:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
9001cbe6:	440b      	add	r3, r1
9001cbe8:	3b01      	subs	r3, #1
9001cbea:	fb93 f3f1 	sdiv	r3, r3, r1
9001cbee:	3b01      	subs	r3, #1
9001cbf0:	9906      	ldr	r1, [sp, #24]
9001cbf2:	b29b      	uxth	r3, r3
9001cbf4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001cbf8:	9900      	ldr	r1, [sp, #0]
9001cbfa:	9307      	str	r3, [sp, #28]
9001cbfc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001cc00:	fb93 f0f1 	sdiv	r0, r3, r1
9001cc04:	b284      	uxth	r4, r0
9001cc06:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
9001cc0a:	9402      	str	r4, [sp, #8]
9001cc0c:	9d02      	ldr	r5, [sp, #8]
9001cc0e:	9c00      	ldr	r4, [sp, #0]
9001cc10:	fb05 3414 	mls	r4, r5, r4, r3
9001cc14:	fb14 f402 	smulbb	r4, r4, r2
9001cc18:	440c      	add	r4, r1
9001cc1a:	b2a4      	uxth	r4, r4
9001cc1c:	2d00      	cmp	r5, #0
9001cc1e:	d06c      	beq.n	9001ccfa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
9001cc20:	1e6a      	subs	r2, r5, #1
9001cc22:	9806      	ldr	r0, [sp, #24]
9001cc24:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
9001cc28:	9a07      	ldr	r2, [sp, #28]
9001cc2a:	ba36      	rev	r6, r6
9001cc2c:	4416      	add	r6, r2
9001cc2e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9001cc32:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
9001cc36:	4411      	add	r1, r2
9001cc38:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
9001cc3c:	f8df 932c 	ldr.w	r9, [pc, #812]	@ 9001cf6c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
9001cc40:	4413      	add	r3, r2
9001cc42:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
9001cc46:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001cc4a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001cc4e:	9301      	str	r3, [sp, #4]
9001cc50:	4bc4      	ldr	r3, [pc, #784]	@ (9001cf64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
9001cc52:	6818      	ldr	r0, [r3, #0]
9001cc54:	6803      	ldr	r3, [r0, #0]
9001cc56:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001cc58:	4798      	blx	r3
9001cc5a:	4bc3      	ldr	r3, [pc, #780]	@ (9001cf68 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
9001cc5c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9001cc60:	881b      	ldrh	r3, [r3, #0]
9001cc62:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
9001cc66:	fb03 2808 	mla	r8, r3, r8, r2
9001cc6a:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001cc6e:	436b      	muls	r3, r5
9001cc70:	2500      	movs	r5, #0
9001cc72:	eb00 0848 	add.w	r8, r0, r8, lsl #1
9001cc76:	4629      	mov	r1, r5
9001cc78:	eb08 0343 	add.w	r3, r8, r3, lsl #1
9001cc7c:	9309      	str	r3, [sp, #36]	@ 0x24
9001cc7e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9001cc82:	fb94 f3f3 	sdiv	r3, r4, r3
9001cc86:	9304      	str	r3, [sp, #16]
9001cc88:	f10a 0304 	add.w	r3, sl, #4
9001cc8c:	4618      	mov	r0, r3
9001cc8e:	9308      	str	r3, [sp, #32]
9001cc90:	f00c ff06 	bl	90029aa0 <memset>
9001cc94:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001cc96:	4543      	cmp	r3, r8
9001cc98:	f240 8236 	bls.w	9001d108 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
9001cc9c:	2203      	movs	r2, #3
9001cc9e:	2107      	movs	r1, #7
9001cca0:	200b      	movs	r0, #11
9001cca2:	2c00      	cmp	r4, #0
9001cca4:	f000 8131 	beq.w	9001cf0a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
9001cca8:	7833      	ldrb	r3, [r6, #0]
9001ccaa:	b2db      	uxtb	r3, r3
9001ccac:	2bfe      	cmp	r3, #254	@ 0xfe
9001ccae:	d126      	bne.n	9001ccfe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
9001ccb0:	f896 e001 	ldrb.w	lr, [r6, #1]
9001ccb4:	3c01      	subs	r4, #1
9001ccb6:	f896 c002 	ldrb.w	ip, [r6, #2]
9001ccba:	1d37      	adds	r7, r6, #4
9001ccbc:	fa5f fe8e 	uxtb.w	lr, lr
9001ccc0:	f896 b003 	ldrb.w	fp, [r6, #3]
9001ccc4:	fa5f fc8c 	uxtb.w	ip, ip
9001ccc8:	f36e 0507 	bfi	r5, lr, #0, #8
9001cccc:	fa5f fb8b 	uxtb.w	fp, fp
9001ccd0:	b2a4      	uxth	r4, r4
9001ccd2:	f36c 250f 	bfi	r5, ip, #8, #8
9001ccd6:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001ccda:	fb12 cc0b 	smlabb	ip, r2, fp, ip
9001ccde:	f36b 4517 	bfi	r5, fp, #16, #8
9001cce2:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001cce6:	0e2b      	lsrs	r3, r5, #24
9001cce8:	fb10 c303 	smlabb	r3, r0, r3, ip
9001ccec:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001ccf0:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001ccf4:	605d      	str	r5, [r3, #4]
9001ccf6:	463e      	mov	r6, r7
9001ccf8:	e7d3      	b.n	9001cca2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
9001ccfa:	9e07      	ldr	r6, [sp, #28]
9001ccfc:	e797      	b.n	9001cc2e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
9001ccfe:	2bff      	cmp	r3, #255	@ 0xff
9001cd00:	d127      	bne.n	9001cd52 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
9001cd02:	f896 c001 	ldrb.w	ip, [r6, #1]
9001cd06:	3c01      	subs	r4, #1
9001cd08:	78b3      	ldrb	r3, [r6, #2]
9001cd0a:	1d77      	adds	r7, r6, #5
9001cd0c:	fa5f fc8c 	uxtb.w	ip, ip
9001cd10:	f896 e003 	ldrb.w	lr, [r6, #3]
9001cd14:	b2db      	uxtb	r3, r3
9001cd16:	f896 b004 	ldrb.w	fp, [r6, #4]
9001cd1a:	f36c 0507 	bfi	r5, ip, #0, #8
9001cd1e:	fa5f fe8e 	uxtb.w	lr, lr
9001cd22:	fa5f fb8b 	uxtb.w	fp, fp
9001cd26:	f363 250f 	bfi	r5, r3, #8, #8
9001cd2a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
9001cd2e:	b2a4      	uxth	r4, r4
9001cd30:	fb12 330e 	smlabb	r3, r2, lr, r3
9001cd34:	f36e 4517 	bfi	r5, lr, #16, #8
9001cd38:	fb11 330c 	smlabb	r3, r1, ip, r3
9001cd3c:	f36b 651f 	bfi	r5, fp, #24, #8
9001cd40:	fb10 3b0b 	smlabb	fp, r0, fp, r3
9001cd44:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
9001cd48:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
9001cd4c:	f8cb 5004 	str.w	r5, [fp, #4]
9001cd50:	e7d1      	b.n	9001ccf6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001cd52:	ea5f 1ca3 	movs.w	ip, r3, asr #6
9001cd56:	f106 0701 	add.w	r7, r6, #1
9001cd5a:	d107      	bne.n	9001cd6c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
9001cd5c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001cd60:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001cd64:	685d      	ldr	r5, [r3, #4]
9001cd66:	3c01      	subs	r4, #1
9001cd68:	b2a4      	uxth	r4, r4
9001cd6a:	e7c4      	b.n	9001ccf6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001cd6c:	f1bc 0f01 	cmp.w	ip, #1
9001cd70:	d12c      	bne.n	9001cdcc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
9001cd72:	f003 0e03 	and.w	lr, r3, #3
9001cd76:	f003 0c0c 	and.w	ip, r3, #12
9001cd7a:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001cd7e:	f1ae 0e02 	sub.w	lr, lr, #2
9001cd82:	f1ac 0c08 	sub.w	ip, ip, #8
9001cd86:	3b02      	subs	r3, #2
9001cd88:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
9001cd8c:	fa5f fe8e 	uxtb.w	lr, lr
9001cd90:	f36e 0507 	bfi	r5, lr, #0, #8
9001cd94:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001cd98:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
9001cd9c:	f36c 250f 	bfi	r5, ip, #8, #8
9001cda0:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
9001cda4:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001cda8:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001cdac:	b2db      	uxtb	r3, r3
9001cdae:	fb12 cc03 	smlabb	ip, r2, r3, ip
9001cdb2:	f363 4517 	bfi	r5, r3, #16, #8
9001cdb6:	fb11 cc0e 	smlabb	ip, r1, lr, ip
9001cdba:	0e2e      	lsrs	r6, r5, #24
9001cdbc:	fb10 c606 	smlabb	r6, r0, r6, ip
9001cdc0:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
9001cdc4:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
9001cdc8:	6075      	str	r5, [r6, #4]
9001cdca:	e7cc      	b.n	9001cd66 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
9001cdcc:	f1bc 0f02 	cmp.w	ip, #2
9001cdd0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001cdd4:	d12a      	bne.n	9001ce2c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
9001cdd6:	1cb7      	adds	r7, r6, #2
9001cdd8:	7876      	ldrb	r6, [r6, #1]
9001cdda:	3b20      	subs	r3, #32
9001cddc:	b2f6      	uxtb	r6, r6
9001cdde:	f006 0c0f 	and.w	ip, r6, #15
9001cde2:	1136      	asrs	r6, r6, #4
9001cde4:	f1ac 0c08 	sub.w	ip, ip, #8
9001cde8:	3e08      	subs	r6, #8
9001cdea:	449c      	add	ip, r3
9001cdec:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
9001cdf0:	fa5f fc8c 	uxtb.w	ip, ip
9001cdf4:	f36c 0507 	bfi	r5, ip, #0, #8
9001cdf8:	f3c5 2e07 	ubfx	lr, r5, #8, #8
9001cdfc:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
9001ce00:	4433      	add	r3, r6
9001ce02:	fa5f fe8e 	uxtb.w	lr, lr
9001ce06:	f36e 250f 	bfi	r5, lr, #8, #8
9001ce0a:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
9001ce0e:	f3c5 4607 	ubfx	r6, r5, #16, #8
9001ce12:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
9001ce16:	b2db      	uxtb	r3, r3
9001ce18:	fb12 ee03 	smlabb	lr, r2, r3, lr
9001ce1c:	f363 4517 	bfi	r5, r3, #16, #8
9001ce20:	fb11 ee0c 	smlabb	lr, r1, ip, lr
9001ce24:	0e2e      	lsrs	r6, r5, #24
9001ce26:	fb10 e606 	smlabb	r6, r0, r6, lr
9001ce2a:	e7c9      	b.n	9001cdc0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
9001ce2c:	1c5e      	adds	r6, r3, #1
9001ce2e:	42a6      	cmp	r6, r4
9001ce30:	dd4e      	ble.n	9001ced0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
9001ce32:	1b36      	subs	r6, r6, r4
9001ce34:	2e00      	cmp	r6, #0
9001ce36:	dc4e      	bgt.n	9001ced6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
9001ce38:	f8dd b004 	ldr.w	fp, [sp, #4]
9001ce3c:	2400      	movs	r4, #0
9001ce3e:	f1bb 0f00 	cmp.w	fp, #0
9001ce42:	f340 8122 	ble.w	9001d08a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
9001ce46:	1c7b      	adds	r3, r7, #1
9001ce48:	9303      	str	r3, [sp, #12]
9001ce4a:	783b      	ldrb	r3, [r7, #0]
9001ce4c:	b2db      	uxtb	r3, r3
9001ce4e:	2bfe      	cmp	r3, #254	@ 0xfe
9001ce50:	d160      	bne.n	9001cf14 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
9001ce52:	7879      	ldrb	r1, [r7, #1]
9001ce54:	1d3b      	adds	r3, r7, #4
9001ce56:	78ba      	ldrb	r2, [r7, #2]
9001ce58:	b2c9      	uxtb	r1, r1
9001ce5a:	78f8      	ldrb	r0, [r7, #3]
9001ce5c:	b2d2      	uxtb	r2, r2
9001ce5e:	9303      	str	r3, [sp, #12]
9001ce60:	f361 0507 	bfi	r5, r1, #0, #8
9001ce64:	b2c0      	uxtb	r0, r0
9001ce66:	2303      	movs	r3, #3
9001ce68:	f362 250f 	bfi	r5, r2, #8, #8
9001ce6c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001ce70:	fb13 2200 	smlabb	r2, r3, r0, r2
9001ce74:	f360 4517 	bfi	r5, r0, #16, #8
9001ce78:	2307      	movs	r3, #7
9001ce7a:	0e2e      	lsrs	r6, r5, #24
9001ce7c:	fb13 2101 	smlabb	r1, r3, r1, r2
9001ce80:	230b      	movs	r3, #11
9001ce82:	fb13 1306 	smlabb	r3, r3, r6, r1
9001ce86:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001ce8a:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001ce8e:	605d      	str	r5, [r3, #4]
9001ce90:	2601      	movs	r6, #1
9001ce92:	4637      	mov	r7, r6
9001ce94:	0e2b      	lsrs	r3, r5, #24
9001ce96:	ebab 0b07 	sub.w	fp, fp, r7
9001ce9a:	eba6 0607 	sub.w	r6, r6, r7
9001ce9e:	f040 80d3 	bne.w	9001d048 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
9001cea2:	b18c      	cbz	r4, 9001cec8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
9001cea4:	4648      	mov	r0, r9
9001cea6:	00a1      	lsls	r1, r4, #2
9001cea8:	f7e5 fd60 	bl	9000296c <_ZN8touchgfx5paint9flushLineEPmi>
9001ceac:	9b05      	ldr	r3, [sp, #20]
9001ceae:	4622      	mov	r2, r4
9001ceb0:	4649      	mov	r1, r9
9001ceb2:	4640      	mov	r0, r8
9001ceb4:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001ceb8:	f7e5 fdc6 	bl	90002a48 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001cebc:	4b2b      	ldr	r3, [pc, #172]	@ (9001cf6c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
9001cebe:	4a2c      	ldr	r2, [pc, #176]	@ (9001cf70 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
9001cec0:	4599      	cmp	r9, r3
9001cec2:	bf08      	it	eq
9001cec4:	4613      	moveq	r3, r2
9001cec6:	4699      	mov	r9, r3
9001cec8:	eb08 0847 	add.w	r8, r8, r7, lsl #1
9001cecc:	2400      	movs	r4, #0
9001cece:	e0da      	b.n	9001d086 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
9001ced0:	1ba6      	subs	r6, r4, r6
9001ced2:	b2b4      	uxth	r4, r6
9001ced4:	e70f      	b.n	9001ccf6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
9001ced6:	9b01      	ldr	r3, [sp, #4]
9001ced8:	9a01      	ldr	r2, [sp, #4]
9001ceda:	42b3      	cmp	r3, r6
9001cedc:	bfa8      	it	ge
9001cede:	4633      	movge	r3, r6
9001cee0:	0e2c      	lsrs	r4, r5, #24
9001cee2:	eba2 0b03 	sub.w	fp, r2, r3
9001cee6:	eba6 0603 	sub.w	r6, r6, r3
9001ceea:	d00b      	beq.n	9001cf04 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
9001ceec:	f1a9 0104 	sub.w	r1, r9, #4
9001cef0:	461a      	mov	r2, r3
9001cef2:	2a00      	cmp	r2, #0
9001cef4:	dc02      	bgt.n	9001cefc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
9001cef6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
9001cefa:	e7a0      	b.n	9001ce3e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001cefc:	f841 5f04 	str.w	r5, [r1, #4]!
9001cf00:	3a01      	subs	r2, #1
9001cf02:	e7f6      	b.n	9001cef2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
9001cf04:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001cf08:	e799      	b.n	9001ce3e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001cf0a:	4637      	mov	r7, r6
9001cf0c:	f8dd b004 	ldr.w	fp, [sp, #4]
9001cf10:	4626      	mov	r6, r4
9001cf12:	e794      	b.n	9001ce3e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001cf14:	2bff      	cmp	r3, #255	@ 0xff
9001cf16:	d11d      	bne.n	9001cf54 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
9001cf18:	7878      	ldrb	r0, [r7, #1]
9001cf1a:	1d7b      	adds	r3, r7, #5
9001cf1c:	78ba      	ldrb	r2, [r7, #2]
9001cf1e:	b2c0      	uxtb	r0, r0
9001cf20:	78fe      	ldrb	r6, [r7, #3]
9001cf22:	b2d2      	uxtb	r2, r2
9001cf24:	9303      	str	r3, [sp, #12]
9001cf26:	f360 0507 	bfi	r5, r0, #0, #8
9001cf2a:	793b      	ldrb	r3, [r7, #4]
9001cf2c:	b2f6      	uxtb	r6, r6
9001cf2e:	b2d9      	uxtb	r1, r3
9001cf30:	f362 250f 	bfi	r5, r2, #8, #8
9001cf34:	2303      	movs	r3, #3
9001cf36:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001cf3a:	f366 4517 	bfi	r5, r6, #16, #8
9001cf3e:	fb13 2206 	smlabb	r2, r3, r6, r2
9001cf42:	2307      	movs	r3, #7
9001cf44:	f361 651f 	bfi	r5, r1, #24, #8
9001cf48:	fb13 2000 	smlabb	r0, r3, r0, r2
9001cf4c:	230b      	movs	r3, #11
9001cf4e:	fb13 0301 	smlabb	r3, r3, r1, r0
9001cf52:	e798      	b.n	9001ce86 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
9001cf54:	119e      	asrs	r6, r3, #6
9001cf56:	d10d      	bne.n	9001cf74 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
9001cf58:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001cf5c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
9001cf60:	685d      	ldr	r5, [r3, #4]
9001cf62:	e795      	b.n	9001ce90 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001cf64:	2402198c 	.word	0x2402198c
9001cf68:	24021986 	.word	0x24021986
9001cf6c:	24005b80 	.word	0x24005b80
9001cf70:	24005c80 	.word	0x24005c80
9001cf74:	2e01      	cmp	r6, #1
9001cf76:	ea4f 6115 	mov.w	r1, r5, lsr #24
9001cf7a:	d12b      	bne.n	9001cfd4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
9001cf7c:	f003 0003 	and.w	r0, r3, #3
9001cf80:	f003 020c 	and.w	r2, r3, #12
9001cf84:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001cf88:	3802      	subs	r0, #2
9001cf8a:	3a08      	subs	r2, #8
9001cf8c:	1e9f      	subs	r7, r3, #2
9001cf8e:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
9001cf92:	b2c0      	uxtb	r0, r0
9001cf94:	f360 0507 	bfi	r5, r0, #0, #8
9001cf98:	eb02 2215 	add.w	r2, r2, r5, lsr #8
9001cf9c:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
9001cfa0:	f362 250f 	bfi	r5, r2, #8, #8
9001cfa4:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001cfa8:	f3c5 4307 	ubfx	r3, r5, #16, #8
9001cfac:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
9001cfb0:	2703      	movs	r7, #3
9001cfb2:	b2db      	uxtb	r3, r3
9001cfb4:	fb17 2203 	smlabb	r2, r7, r3, r2
9001cfb8:	2707      	movs	r7, #7
9001cfba:	f363 4517 	bfi	r5, r3, #16, #8
9001cfbe:	230b      	movs	r3, #11
9001cfc0:	fb17 2000 	smlabb	r0, r7, r0, r2
9001cfc4:	fb13 0101 	smlabb	r1, r3, r1, r0
9001cfc8:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001cfcc:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001cfd0:	604d      	str	r5, [r1, #4]
9001cfd2:	e75e      	b.n	9001ce92 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
9001cfd4:	2e02      	cmp	r6, #2
9001cfd6:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001cfda:	d12f      	bne.n	9001d03c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
9001cfdc:	7878      	ldrb	r0, [r7, #1]
9001cfde:	1cba      	adds	r2, r7, #2
9001cfe0:	3b20      	subs	r3, #32
9001cfe2:	b2c0      	uxtb	r0, r0
9001cfe4:	9203      	str	r2, [sp, #12]
9001cfe6:	f000 020f 	and.w	r2, r0, #15
9001cfea:	1100      	asrs	r0, r0, #4
9001cfec:	3a08      	subs	r2, #8
9001cfee:	3808      	subs	r0, #8
9001cff0:	441a      	add	r2, r3
9001cff2:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
9001cff6:	b2d2      	uxtb	r2, r2
9001cff8:	f362 0507 	bfi	r5, r2, #0, #8
9001cffc:	f3c5 2607 	ubfx	r6, r5, #8, #8
9001d000:	eb06 0683 	add.w	r6, r6, r3, lsl #2
9001d004:	4403      	add	r3, r0
9001d006:	b2f6      	uxtb	r6, r6
9001d008:	f366 250f 	bfi	r5, r6, #8, #8
9001d00c:	eb06 0686 	add.w	r6, r6, r6, lsl #2
9001d010:	f3c5 4007 	ubfx	r0, r5, #16, #8
9001d014:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
9001d018:	2003      	movs	r0, #3
9001d01a:	b2db      	uxtb	r3, r3
9001d01c:	fb10 6603 	smlabb	r6, r0, r3, r6
9001d020:	2007      	movs	r0, #7
9001d022:	f363 4517 	bfi	r5, r3, #16, #8
9001d026:	230b      	movs	r3, #11
9001d028:	fb10 6202 	smlabb	r2, r0, r2, r6
9001d02c:	fb13 2101 	smlabb	r1, r3, r1, r2
9001d030:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
9001d034:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
9001d038:	604d      	str	r5, [r1, #4]
9001d03a:	e729      	b.n	9001ce90 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
9001d03c:	1c5e      	adds	r6, r3, #1
9001d03e:	465f      	mov	r7, fp
9001d040:	45b3      	cmp	fp, r6
9001d042:	bfa8      	it	ge
9001d044:	4637      	movge	r7, r6
9001d046:	e725      	b.n	9001ce94 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
9001d048:	193b      	adds	r3, r7, r4
9001d04a:	2b40      	cmp	r3, #64	@ 0x40
9001d04c:	dd13      	ble.n	9001d076 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
9001d04e:	4648      	mov	r0, r9
9001d050:	00a1      	lsls	r1, r4, #2
9001d052:	f7e5 fc8b 	bl	9000296c <_ZN8touchgfx5paint9flushLineEPmi>
9001d056:	4649      	mov	r1, r9
9001d058:	9b05      	ldr	r3, [sp, #20]
9001d05a:	4622      	mov	r2, r4
9001d05c:	4640      	mov	r0, r8
9001d05e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001d062:	f7e5 fcf1 	bl	90002a48 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001d066:	4b2c      	ldr	r3, [pc, #176]	@ (9001d118 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
9001d068:	2400      	movs	r4, #0
9001d06a:	4599      	cmp	r9, r3
9001d06c:	bf0c      	ite	eq
9001d06e:	f8df 90b4 	ldreq.w	r9, [pc, #180]	@ 9001d124 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
9001d072:	f8df 90a4 	ldrne.w	r9, [pc, #164]	@ 9001d118 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
9001d076:	eb09 0284 	add.w	r2, r9, r4, lsl #2
9001d07a:	463b      	mov	r3, r7
9001d07c:	3b01      	subs	r3, #1
9001d07e:	f842 5b04 	str.w	r5, [r2], #4
9001d082:	d1fb      	bne.n	9001d07c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
9001d084:	443c      	add	r4, r7
9001d086:	9f03      	ldr	r7, [sp, #12]
9001d088:	e6d9      	b.n	9001ce3e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
9001d08a:	b15c      	cbz	r4, 9001d0a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
9001d08c:	00a1      	lsls	r1, r4, #2
9001d08e:	4648      	mov	r0, r9
9001d090:	f7e5 fc6c 	bl	9000296c <_ZN8touchgfx5paint9flushLineEPmi>
9001d094:	4640      	mov	r0, r8
9001d096:	eb08 0844 	add.w	r8, r8, r4, lsl #1
9001d09a:	9b05      	ldr	r3, [sp, #20]
9001d09c:	4622      	mov	r2, r4
9001d09e:	4649      	mov	r1, r9
9001d0a0:	f7e5 fcd2 	bl	90002a48 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
9001d0a4:	4b1d      	ldr	r3, [pc, #116]	@ (9001d11c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
9001d0a6:	9a01      	ldr	r2, [sp, #4]
9001d0a8:	881b      	ldrh	r3, [r3, #0]
9001d0aa:	1a9b      	subs	r3, r3, r2
9001d0ac:	eb08 0843 	add.w	r8, r8, r3, lsl #1
9001d0b0:	9b04      	ldr	r3, [sp, #16]
9001d0b2:	3301      	adds	r3, #1
9001d0b4:	9304      	str	r3, [sp, #16]
9001d0b6:	9a04      	ldr	r2, [sp, #16]
9001d0b8:	9b00      	ldr	r3, [sp, #0]
9001d0ba:	4293      	cmp	r3, r2
9001d0bc:	d11d      	bne.n	9001d0fa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
9001d0be:	9b02      	ldr	r3, [sp, #8]
9001d0c0:	2500      	movs	r5, #0
9001d0c2:	9a02      	ldr	r2, [sp, #8]
9001d0c4:	f103 0b01 	add.w	fp, r3, #1
9001d0c8:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
9001d0cc:	9b06      	ldr	r3, [sp, #24]
9001d0ce:	4629      	mov	r1, r5
9001d0d0:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
9001d0d4:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9001d0d8:	f44f 7280 	mov.w	r2, #256	@ 0x100
9001d0dc:	1ba4      	subs	r4, r4, r6
9001d0de:	9b07      	ldr	r3, [sp, #28]
9001d0e0:	ba3f      	rev	r7, r7
9001d0e2:	9808      	ldr	r0, [sp, #32]
9001d0e4:	b2a4      	uxth	r4, r4
9001d0e6:	441f      	add	r7, r3
9001d0e8:	f00c fcda 	bl	90029aa0 <memset>
9001d0ec:	f8cd b008 	str.w	fp, [sp, #8]
9001d0f0:	9504      	str	r5, [sp, #16]
9001d0f2:	f7e5 fc31 	bl	90002958 <_ZN8touchgfx5paint8tearDownEv>
9001d0f6:	463e      	mov	r6, r7
9001d0f8:	e5cc      	b.n	9001cc94 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
9001d0fa:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001d0fe:	9b01      	ldr	r3, [sp, #4]
9001d100:	1ae4      	subs	r4, r4, r3
9001d102:	1ba4      	subs	r4, r4, r6
9001d104:	b2a4      	uxth	r4, r4
9001d106:	e7f4      	b.n	9001d0f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
9001d108:	4b05      	ldr	r3, [pc, #20]	@ (9001d120 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
9001d10a:	6818      	ldr	r0, [r3, #0]
9001d10c:	6803      	ldr	r3, [r0, #0]
9001d10e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001d110:	4798      	blx	r3
9001d112:	b00f      	add	sp, #60	@ 0x3c
9001d114:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d118:	24005b80 	.word	0x24005b80
9001d11c:	24021986 	.word	0x24021986
9001d120:	2402198c 	.word	0x2402198c
9001d124:	24005c80 	.word	0x24005c80

9001d128 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001d128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d12c:	b08f      	sub	sp, #60	@ 0x3c
9001d12e:	461c      	mov	r4, r3
9001d130:	9205      	str	r2, [sp, #20]
9001d132:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001d136:	9100      	str	r1, [sp, #0]
9001d138:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001d13a:	9201      	str	r2, [sp, #4]
9001d13c:	2a00      	cmp	r2, #0
9001d13e:	f000 8116 	beq.w	9001d36e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
9001d142:	6820      	ldr	r0, [r4, #0]
9001d144:	aa0a      	add	r2, sp, #40	@ 0x28
9001d146:	6861      	ldr	r1, [r4, #4]
9001d148:	c203      	stmia	r2!, {r0, r1}
9001d14a:	6818      	ldr	r0, [r3, #0]
9001d14c:	aa0c      	add	r2, sp, #48	@ 0x30
9001d14e:	6859      	ldr	r1, [r3, #4]
9001d150:	c203      	stmia	r2!, {r0, r1}
9001d152:	a80a      	add	r0, sp, #40	@ 0x28
9001d154:	f7f8 fe88 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d158:	4621      	mov	r1, r4
9001d15a:	a80c      	add	r0, sp, #48	@ 0x30
9001d15c:	f7f8 feac 	bl	90015eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d160:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001d164:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001d168:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001d16c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001d170:	bfdb      	ittet	le
9001d172:	b2b3      	uxthle	r3, r6
9001d174:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001d178:	2301      	movgt	r3, #1
9001d17a:	fb92 f3f3 	sdivle	r3, r2, r3
9001d17e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001d182:	441d      	add	r5, r3
9001d184:	fb92 f1f3 	sdiv	r1, r2, r3
9001d188:	fa1f fc81 	uxth.w	ip, r1
9001d18c:	3d01      	subs	r5, #1
9001d18e:	fb0c 2413 	mls	r4, ip, r3, r2
9001d192:	4661      	mov	r1, ip
9001d194:	fb14 f406 	smulbb	r4, r4, r6
9001d198:	4404      	add	r4, r0
9001d19a:	fb95 f5f3 	sdiv	r5, r5, r3
9001d19e:	b2a4      	uxth	r4, r4
9001d1a0:	b131      	cbz	r1, 9001d1b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
9001d1a2:	9b05      	ldr	r3, [sp, #20]
9001d1a4:	9900      	ldr	r1, [sp, #0]
9001d1a6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001d1aa:	ba1b      	rev	r3, r3
9001d1ac:	4419      	add	r1, r3
9001d1ae:	9100      	str	r1, [sp, #0]
9001d1b0:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001d1b4:	b2ad      	uxth	r5, r5
9001d1b6:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
9001d1ba:	4418      	add	r0, r3
9001d1bc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001d1c0:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001d1c4:	00ad      	lsls	r5, r5, #2
9001d1c6:	441a      	add	r2, r3
9001d1c8:	4b6a      	ldr	r3, [pc, #424]	@ (9001d374 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001d1ca:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001d1ce:	6818      	ldr	r0, [r3, #0]
9001d1d0:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001d1d4:	6803      	ldr	r3, [r0, #0]
9001d1d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d1d8:	4798      	blx	r3
9001d1da:	4967      	ldr	r1, [pc, #412]	@ (9001d378 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
9001d1dc:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001d1e0:	2c00      	cmp	r4, #0
9001d1e2:	880b      	ldrh	r3, [r1, #0]
9001d1e4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001d1e8:	bf0c      	ite	eq
9001d1ea:	46c6      	moveq	lr, r8
9001d1ec:	f04f 0e00 	movne.w	lr, #0
9001d1f0:	9109      	str	r1, [sp, #36]	@ 0x24
9001d1f2:	fb03 c202 	mla	r2, r3, r2, ip
9001d1f6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001d1fa:	4373      	muls	r3, r6
9001d1fc:	fa1f fe8e 	uxth.w	lr, lr
9001d200:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001d204:	9103      	str	r1, [sp, #12]
9001d206:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001d20a:	9306      	str	r3, [sp, #24]
9001d20c:	1d2b      	adds	r3, r5, #4
9001d20e:	9307      	str	r3, [sp, #28]
9001d210:	9b01      	ldr	r3, [sp, #4]
9001d212:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
9001d216:	2300      	movs	r3, #0
9001d218:	b292      	uxth	r2, r2
9001d21a:	9302      	str	r3, [sp, #8]
9001d21c:	9204      	str	r2, [sp, #16]
9001d21e:	9a06      	ldr	r2, [sp, #24]
9001d220:	4282      	cmp	r2, r0
9001d222:	f240 809f 	bls.w	9001d364 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
9001d226:	b963      	cbnz	r3, 9001d242 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001d228:	9b00      	ldr	r3, [sp, #0]
9001d22a:	781a      	ldrb	r2, [r3, #0]
9001d22c:	0993      	lsrs	r3, r2, #6
9001d22e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001d232:	9202      	str	r2, [sp, #8]
9001d234:	1e5a      	subs	r2, r3, #1
9001d236:	2a02      	cmp	r2, #2
9001d238:	d815      	bhi.n	9001d266 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
9001d23a:	9a00      	ldr	r2, [sp, #0]
9001d23c:	b29b      	uxth	r3, r3
9001d23e:	3201      	adds	r2, #1
9001d240:	9200      	str	r2, [sp, #0]
9001d242:	b1b4      	cbz	r4, 9001d272 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
9001d244:	429c      	cmp	r4, r3
9001d246:	bf91      	iteee	ls
9001d248:	1b1c      	subls	r4, r3, r4
9001d24a:	1ae4      	subhi	r4, r4, r3
9001d24c:	4671      	movhi	r1, lr
9001d24e:	f04f 0a00 	movhi.w	sl, #0
9001d252:	bf9b      	ittet	ls
9001d254:	fa1f fa84 	uxthls.w	sl, r4
9001d258:	2400      	movls	r4, #0
9001d25a:	b2a4      	uxthhi	r4, r4
9001d25c:	fa1f f188 	uxthls.w	r1, r8
9001d260:	4653      	mov	r3, sl
9001d262:	468e      	mov	lr, r1
9001d264:	e7db      	b.n	9001d21e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
9001d266:	9a00      	ldr	r2, [sp, #0]
9001d268:	9b00      	ldr	r3, [sp, #0]
9001d26a:	3202      	adds	r2, #2
9001d26c:	785b      	ldrb	r3, [r3, #1]
9001d26e:	9200      	str	r2, [sp, #0]
9001d270:	e7e7      	b.n	9001d242 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
9001d272:	2202      	movs	r2, #2
9001d274:	9907      	ldr	r1, [sp, #28]
9001d276:	4573      	cmp	r3, lr
9001d278:	4615      	mov	r5, r2
9001d27a:	9a02      	ldr	r2, [sp, #8]
9001d27c:	bf24      	itt	cs
9001d27e:	eba3 0a0e 	subcs.w	sl, r3, lr
9001d282:	46f1      	movcs	r9, lr
9001d284:	fb15 1202 	smlabb	r2, r5, r2, r1
9001d288:	9905      	ldr	r1, [sp, #20]
9001d28a:	bf34      	ite	cc
9001d28c:	4699      	movcc	r9, r3
9001d28e:	fa1f fa8a 	uxthcs.w	sl, sl
9001d292:	f831 c002 	ldrh.w	ip, [r1, r2]
9001d296:	bf38      	it	cc
9001d298:	ebae 0103 	subcc.w	r1, lr, r3
9001d29c:	9a01      	ldr	r2, [sp, #4]
9001d29e:	bf2e      	itee	cs
9001d2a0:	4621      	movcs	r1, r4
9001d2a2:	b289      	uxthcc	r1, r1
9001d2a4:	46a2      	movcc	sl, r4
9001d2a6:	2aff      	cmp	r2, #255	@ 0xff
9001d2a8:	ea4f 0949 	mov.w	r9, r9, lsl #1
9001d2ac:	d105      	bne.n	9001d2ba <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
9001d2ae:	4481      	add	r9, r0
9001d2b0:	4581      	cmp	r9, r0
9001d2b2:	d045      	beq.n	9001d340 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001d2b4:	f820 cb02 	strh.w	ip, [r0], #2
9001d2b8:	e7fa      	b.n	9001d2b0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
9001d2ba:	ea4f 222c 	mov.w	r2, ip, asr #8
9001d2be:	9d03      	ldr	r5, [sp, #12]
9001d2c0:	ea4f 0bec 	mov.w	fp, ip, asr #3
9001d2c4:	4481      	add	r9, r0
9001d2c6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d2ca:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
9001d2ce:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
9001d2d2:	fa5f fc8c 	uxtb.w	ip, ip
9001d2d6:	436a      	muls	r2, r5
9001d2d8:	fb0b fb05 	mul.w	fp, fp, r5
9001d2dc:	fb0c fc05 	mul.w	ip, ip, r5
9001d2e0:	9208      	str	r2, [sp, #32]
9001d2e2:	4581      	cmp	r9, r0
9001d2e4:	d02c      	beq.n	9001d340 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
9001d2e6:	8802      	ldrh	r2, [r0, #0]
9001d2e8:	9d04      	ldr	r5, [sp, #16]
9001d2ea:	1216      	asrs	r6, r2, #8
9001d2ec:	9f04      	ldr	r7, [sp, #16]
9001d2ee:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001d2f2:	fb16 f605 	smulbb	r6, r6, r5
9001d2f6:	9d08      	ldr	r5, [sp, #32]
9001d2f8:	442e      	add	r6, r5
9001d2fa:	10d5      	asrs	r5, r2, #3
9001d2fc:	00d2      	lsls	r2, r2, #3
9001d2fe:	b2b6      	uxth	r6, r6
9001d300:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001d304:	b2d2      	uxtb	r2, r2
9001d306:	fb15 f507 	smulbb	r5, r5, r7
9001d30a:	fb12 f207 	smulbb	r2, r2, r7
9001d30e:	1c77      	adds	r7, r6, #1
9001d310:	445d      	add	r5, fp
9001d312:	4462      	add	r2, ip
9001d314:	eb07 2616 	add.w	r6, r7, r6, lsr #8
9001d318:	b2ad      	uxth	r5, r5
9001d31a:	b292      	uxth	r2, r2
9001d31c:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001d320:	1c57      	adds	r7, r2, #1
9001d322:	eb07 2212 	add.w	r2, r7, r2, lsr #8
9001d326:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001d32a:	4316      	orrs	r6, r2
9001d32c:	1c6a      	adds	r2, r5, #1
9001d32e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001d332:	096d      	lsrs	r5, r5, #5
9001d334:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001d338:	432e      	orrs	r6, r5
9001d33a:	f820 6b02 	strh.w	r6, [r0], #2
9001d33e:	e7d0      	b.n	9001d2e2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
9001d340:	4573      	cmp	r3, lr
9001d342:	d38d      	bcc.n	9001d260 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001d344:	fa1f f188 	uxth.w	r1, r8
9001d348:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001d34c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001d34e:	1a64      	subs	r4, r4, r1
9001d350:	881b      	ldrh	r3, [r3, #0]
9001d352:	b2a4      	uxth	r4, r4
9001d354:	eba3 0308 	sub.w	r3, r3, r8
9001d358:	2c00      	cmp	r4, #0
9001d35a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001d35e:	bf18      	it	ne
9001d360:	2100      	movne	r1, #0
9001d362:	e77d      	b.n	9001d260 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
9001d364:	4b03      	ldr	r3, [pc, #12]	@ (9001d374 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
9001d366:	6818      	ldr	r0, [r3, #0]
9001d368:	6803      	ldr	r3, [r0, #0]
9001d36a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001d36c:	4798      	blx	r3
9001d36e:	b00f      	add	sp, #60	@ 0x3c
9001d370:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d374:	2402198c 	.word	0x2402198c
9001d378:	24021986 	.word	0x24021986

9001d37c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
9001d37c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d380:	b09f      	sub	sp, #124	@ 0x7c
9001d382:	461d      	mov	r5, r3
9001d384:	4604      	mov	r4, r0
9001d386:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001d388:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001d38c:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001d390:	9209      	str	r2, [sp, #36]	@ 0x24
9001d392:	2a00      	cmp	r2, #0
9001d394:	f000 81ed 	beq.w	9001d772 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
9001d398:	6828      	ldr	r0, [r5, #0]
9001d39a:	aa1a      	add	r2, sp, #104	@ 0x68
9001d39c:	6869      	ldr	r1, [r5, #4]
9001d39e:	c203      	stmia	r2!, {r0, r1}
9001d3a0:	6818      	ldr	r0, [r3, #0]
9001d3a2:	aa1c      	add	r2, sp, #112	@ 0x70
9001d3a4:	6859      	ldr	r1, [r3, #4]
9001d3a6:	c203      	stmia	r2!, {r0, r1}
9001d3a8:	a81a      	add	r0, sp, #104	@ 0x68
9001d3aa:	f7f8 fd5d 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d3ae:	4629      	mov	r1, r5
9001d3b0:	a81c      	add	r0, sp, #112	@ 0x70
9001d3b2:	f7f8 fd81 	bl	90015eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d3b6:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001d3ba:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
9001d3be:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001d3c2:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
9001d3c6:	bfdb      	ittet	le
9001d3c8:	b29a      	uxthle	r2, r3
9001d3ca:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001d3ce:	2201      	movgt	r2, #1
9001d3d0:	fb91 f2f2 	sdivle	r2, r1, r2
9001d3d4:	9202      	str	r2, [sp, #8]
9001d3d6:	9802      	ldr	r0, [sp, #8]
9001d3d8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001d3dc:	9902      	ldr	r1, [sp, #8]
9001d3de:	fb92 f0f0 	sdiv	r0, r2, r0
9001d3e2:	b280      	uxth	r0, r0
9001d3e4:	4488      	add	r8, r1
9001d3e6:	9010      	str	r0, [sp, #64]	@ 0x40
9001d3e8:	f108 38ff 	add.w	r8, r8, #4294967295
9001d3ec:	9802      	ldr	r0, [sp, #8]
9001d3ee:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001d3f0:	fb05 2510 	mls	r5, r5, r0, r2
9001d3f4:	fb98 f8f1 	sdiv	r8, r8, r1
9001d3f8:	fb15 f503 	smulbb	r5, r5, r3
9001d3fc:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001d400:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001d404:	f108 0801 	add.w	r8, r8, #1
9001d408:	440d      	add	r5, r1
9001d40a:	4419      	add	r1, r3
9001d40c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001d410:	fa1f f888 	uxth.w	r8, r8
9001d414:	441a      	add	r2, r3
9001d416:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001d41a:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001d41e:	b2ad      	uxth	r5, r5
9001d420:	9304      	str	r3, [sp, #16]
9001d422:	4b94      	ldr	r3, [pc, #592]	@ (9001d674 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
9001d424:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001d428:	6818      	ldr	r0, [r3, #0]
9001d42a:	6803      	ldr	r3, [r0, #0]
9001d42c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d42e:	4798      	blx	r3
9001d430:	4b91      	ldr	r3, [pc, #580]	@ (9001d678 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001d432:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001d436:	2d00      	cmp	r5, #0
9001d438:	881a      	ldrh	r2, [r3, #0]
9001d43a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001d43e:	fb02 f606 	mul.w	r6, r2, r6
9001d442:	fb02 7101 	mla	r1, r2, r1, r7
9001d446:	9318      	str	r3, [sp, #96]	@ 0x60
9001d448:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001d44c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
9001d450:	f04f 0100 	mov.w	r1, #0
9001d454:	eb00 0246 	add.w	r2, r0, r6, lsl #1
9001d458:	930f      	str	r3, [sp, #60]	@ 0x3c
9001d45a:	4b88      	ldr	r3, [pc, #544]	@ (9001d67c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
9001d45c:	920a      	str	r2, [sp, #40]	@ 0x28
9001d45e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001d460:	eba3 0304 	sub.w	r3, r3, r4
9001d464:	910d      	str	r1, [sp, #52]	@ 0x34
9001d466:	eb02 0888 	add.w	r8, r2, r8, lsl #2
9001d46a:	9319      	str	r3, [sp, #100]	@ 0x64
9001d46c:	f108 0204 	add.w	r2, r8, #4
9001d470:	9211      	str	r2, [sp, #68]	@ 0x44
9001d472:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001d474:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
9001d478:	9215      	str	r2, [sp, #84]	@ 0x54
9001d47a:	9a04      	ldr	r2, [sp, #16]
9001d47c:	bf18      	it	ne
9001d47e:	2200      	movne	r2, #0
9001d480:	b292      	uxth	r2, r2
9001d482:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001d484:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001d486:	fa11 f383 	uxtah	r3, r1, r3
9001d48a:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001d48c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001d490:	3304      	adds	r3, #4
9001d492:	9306      	str	r3, [sp, #24]
9001d494:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001d496:	4283      	cmp	r3, r0
9001d498:	f240 8166 	bls.w	9001d768 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
9001d49c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001d4a0:	f04f 0a01 	mov.w	sl, #1
9001d4a4:	9902      	ldr	r1, [sp, #8]
9001d4a6:	9e06      	ldr	r6, [sp, #24]
9001d4a8:	46d3      	mov	fp, sl
9001d4aa:	4657      	mov	r7, sl
9001d4ac:	7836      	ldrb	r6, [r6, #0]
9001d4ae:	fbb5 f3f3 	udiv	r3, r5, r3
9001d4b2:	1acb      	subs	r3, r1, r3
9001d4b4:	9612      	str	r6, [sp, #72]	@ 0x48
9001d4b6:	3601      	adds	r6, #1
9001d4b8:	b29b      	uxth	r3, r3
9001d4ba:	9605      	str	r6, [sp, #20]
9001d4bc:	9316      	str	r3, [sp, #88]	@ 0x58
9001d4be:	9b06      	ldr	r3, [sp, #24]
9001d4c0:	7859      	ldrb	r1, [r3, #1]
9001d4c2:	789b      	ldrb	r3, [r3, #2]
9001d4c4:	021b      	lsls	r3, r3, #8
9001d4c6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
9001d4ca:	9906      	ldr	r1, [sp, #24]
9001d4cc:	78c9      	ldrb	r1, [r1, #3]
9001d4ce:	430b      	orrs	r3, r1
9001d4d0:	9913      	ldr	r1, [sp, #76]	@ 0x4c
9001d4d2:	4419      	add	r1, r3
9001d4d4:	1c4e      	adds	r6, r1, #1
9001d4d6:	7849      	ldrb	r1, [r1, #1]
9001d4d8:	9603      	str	r6, [sp, #12]
9001d4da:	0209      	lsls	r1, r1, #8
9001d4dc:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
9001d4de:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
9001d4e2:	5cf3      	ldrb	r3, [r6, r3]
9001d4e4:	4319      	orrs	r1, r3
9001d4e6:	b28b      	uxth	r3, r1
9001d4e8:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001d4ec:	930c      	str	r3, [sp, #48]	@ 0x30
9001d4ee:	2300      	movs	r3, #0
9001d4f0:	9307      	str	r3, [sp, #28]
9001d4f2:	469c      	mov	ip, r3
9001d4f4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001d4f8:	930e      	str	r3, [sp, #56]	@ 0x38
9001d4fa:	2d00      	cmp	r5, #0
9001d4fc:	d07e      	beq.n	9001d5fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
9001d4fe:	42af      	cmp	r7, r5
9001d500:	d26e      	bcs.n	9001d5e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
9001d502:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001d504:	1bed      	subs	r5, r5, r7
9001d506:	9201      	str	r2, [sp, #4]
9001d508:	4283      	cmp	r3, r0
9001d50a:	b2ad      	uxth	r5, r5
9001d50c:	d802      	bhi.n	9001d514 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
9001d50e:	e073      	b.n	9001d5f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
9001d510:	2b00      	cmp	r3, #0
9001d512:	d15f      	bne.n	9001d5d4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
9001d514:	9b03      	ldr	r3, [sp, #12]
9001d516:	f1cb 0207 	rsb	r2, fp, #7
9001d51a:	785b      	ldrb	r3, [r3, #1]
9001d51c:	4093      	lsls	r3, r2
9001d51e:	005b      	lsls	r3, r3, #1
9001d520:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001d524:	9b03      	ldr	r3, [sp, #12]
9001d526:	781b      	ldrb	r3, [r3, #0]
9001d528:	fa43 f30b 	asr.w	r3, r3, fp
9001d52c:	b2db      	uxtb	r3, r3
9001d52e:	4313      	orrs	r3, r2
9001d530:	f10b 0201 	add.w	r2, fp, #1
9001d534:	fa5f fb82 	uxtb.w	fp, r2
9001d538:	9a03      	ldr	r2, [sp, #12]
9001d53a:	b29f      	uxth	r7, r3
9001d53c:	f1bb 0f08 	cmp.w	fp, #8
9001d540:	bf13      	iteet	ne
9001d542:	3201      	addne	r2, #1
9001d544:	3202      	addeq	r2, #2
9001d546:	f04f 0b00 	moveq.w	fp, #0
9001d54a:	9203      	strne	r2, [sp, #12]
9001d54c:	bf08      	it	eq
9001d54e:	9203      	streq	r2, [sp, #12]
9001d550:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001d552:	42ba      	cmp	r2, r7
9001d554:	d309      	bcc.n	9001d56a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
9001d556:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001d55a:	2301      	movs	r3, #1
9001d55c:	9a05      	ldr	r2, [sp, #20]
9001d55e:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
9001d562:	d30e      	bcc.n	9001d582 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
9001d564:	469a      	mov	sl, r3
9001d566:	2600      	movs	r6, #0
9001d568:	e035      	b.n	9001d5d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
9001d56a:	9b05      	ldr	r3, [sp, #20]
9001d56c:	429f      	cmp	r7, r3
9001d56e:	d318      	bcc.n	9001d5a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
9001d570:	eb04 030a 	add.w	r3, r4, sl
9001d574:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
9001d578:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
9001d57c:	f10a 0301 	add.w	r3, sl, #1
9001d580:	b29b      	uxth	r3, r3
9001d582:	9a05      	ldr	r2, [sp, #20]
9001d584:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001d588:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001d58c:	990c      	ldr	r1, [sp, #48]	@ 0x30
9001d58e:	7116      	strb	r6, [r2, #4]
9001d590:	f10a 0601 	add.w	r6, sl, #1
9001d594:	80d1      	strh	r1, [r2, #6]
9001d596:	7156      	strb	r6, [r2, #5]
9001d598:	9a05      	ldr	r2, [sp, #20]
9001d59a:	3201      	adds	r2, #1
9001d59c:	b292      	uxth	r2, r2
9001d59e:	9205      	str	r2, [sp, #20]
9001d5a0:	e7e0      	b.n	9001d564 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
9001d5a2:	eb04 0387 	add.w	r3, r4, r7, lsl #2
9001d5a6:	463a      	mov	r2, r7
9001d5a8:	795b      	ldrb	r3, [r3, #5]
9001d5aa:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001d5ae:	4426      	add	r6, r4
9001d5b0:	9919      	ldr	r1, [sp, #100]	@ 0x64
9001d5b2:	eb01 0c06 	add.w	ip, r1, r6
9001d5b6:	f1bc 0f00 	cmp.w	ip, #0
9001d5ba:	dd07      	ble.n	9001d5cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
9001d5bc:	eb04 0282 	add.w	r2, r4, r2, lsl #2
9001d5c0:	f892 c004 	ldrb.w	ip, [r2, #4]
9001d5c4:	f806 cd01 	strb.w	ip, [r6, #-1]!
9001d5c8:	88d2      	ldrh	r2, [r2, #6]
9001d5ca:	e7f1      	b.n	9001d5b0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
9001d5cc:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001d5d0:	b29b      	uxth	r3, r3
9001d5d2:	e7c3      	b.n	9001d55c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
9001d5d4:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001d5d6:	970c      	str	r7, [sp, #48]	@ 0x30
9001d5d8:	46b4      	mov	ip, r6
9001d5da:	9a01      	ldr	r2, [sp, #4]
9001d5dc:	461f      	mov	r7, r3
9001d5de:	e78c      	b.n	9001d4fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
9001d5e0:	1b7b      	subs	r3, r7, r5
9001d5e2:	eb0c 0605 	add.w	r6, ip, r5
9001d5e6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001d5ea:	b29b      	uxth	r3, r3
9001d5ec:	b2b6      	uxth	r6, r6
9001d5ee:	9201      	str	r2, [sp, #4]
9001d5f0:	2500      	movs	r5, #0
9001d5f2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001d5f4:	4282      	cmp	r2, r0
9001d5f6:	d88b      	bhi.n	9001d510 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
9001d5f8:	9a01      	ldr	r2, [sp, #4]
9001d5fa:	e74b      	b.n	9001d494 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
9001d5fc:	4297      	cmp	r7, r2
9001d5fe:	d332      	bcc.n	9001d666 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
9001d600:	1abb      	subs	r3, r7, r2
9001d602:	9208      	str	r2, [sp, #32]
9001d604:	9501      	str	r5, [sp, #4]
9001d606:	b29b      	uxth	r3, r3
9001d608:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001d60a:	29ff      	cmp	r1, #255	@ 0xff
9001d60c:	9908      	ldr	r1, [sp, #32]
9001d60e:	eb0c 0601 	add.w	r6, ip, r1
9001d612:	d135      	bne.n	9001d680 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
9001d614:	f1a0 0e02 	sub.w	lr, r0, #2
9001d618:	b2b6      	uxth	r6, r6
9001d61a:	45b4      	cmp	ip, r6
9001d61c:	f040 808c 	bne.w	9001d738 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
9001d620:	9908      	ldr	r1, [sp, #32]
9001d622:	4297      	cmp	r7, r2
9001d624:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001d628:	d3e2      	bcc.n	9001d5f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
9001d62a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001d62c:	9904      	ldr	r1, [sp, #16]
9001d62e:	8812      	ldrh	r2, [r2, #0]
9001d630:	1a52      	subs	r2, r2, r1
9001d632:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001d634:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001d638:	9a07      	ldr	r2, [sp, #28]
9001d63a:	3201      	adds	r2, #1
9001d63c:	428a      	cmp	r2, r1
9001d63e:	9207      	str	r2, [sp, #28]
9001d640:	f040 8087 	bne.w	9001d752 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
9001d644:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001d648:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
9001d64c:	9b04      	ldr	r3, [sp, #16]
9001d64e:	1bed      	subs	r5, r5, r7
9001d650:	b2ad      	uxth	r5, r5
9001d652:	2d00      	cmp	r5, #0
9001d654:	bf08      	it	eq
9001d656:	461a      	moveq	r2, r3
9001d658:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001d65a:	bf18      	it	ne
9001d65c:	2200      	movne	r2, #0
9001d65e:	3301      	adds	r3, #1
9001d660:	b292      	uxth	r2, r2
9001d662:	930d      	str	r3, [sp, #52]	@ 0x34
9001d664:	e70d      	b.n	9001d482 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
9001d666:	1bd1      	subs	r1, r2, r7
9001d668:	9708      	str	r7, [sp, #32]
9001d66a:	b28b      	uxth	r3, r1
9001d66c:	9301      	str	r3, [sp, #4]
9001d66e:	462b      	mov	r3, r5
9001d670:	e7ca      	b.n	9001d608 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
9001d672:	bf00      	nop
9001d674:	2402198c 	.word	0x2402198c
9001d678:	24021986 	.word	0x24021986
9001d67c:	fffff7fb 	.word	0xfffff7fb
9001d680:	b2b6      	uxth	r6, r6
9001d682:	900b      	str	r0, [sp, #44]	@ 0x2c
9001d684:	45b4      	cmp	ip, r6
9001d686:	d0cb      	beq.n	9001d620 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
9001d688:	f10c 0101 	add.w	r1, ip, #1
9001d68c:	44a4      	add	ip, r4
9001d68e:	9117      	str	r1, [sp, #92]	@ 0x5c
9001d690:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001d694:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001d696:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001d69a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001d69c:	ea4f 2825 	mov.w	r8, r5, asr #8
9001d6a0:	f8b1 c000 	ldrh.w	ip, [r1]
9001d6a4:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001d6a6:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
9001d6aa:	ea4f 2e2c 	mov.w	lr, ip, asr #8
9001d6ae:	ea4f 09ec 	mov.w	r9, ip, asr #3
9001d6b2:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
9001d6b6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001d6ba:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001d6be:	fb1e fe01 	smulbb	lr, lr, r1
9001d6c2:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001d6c4:	fa5f fc8c 	uxtb.w	ip, ip
9001d6c8:	fb08 e801 	mla	r8, r8, r1, lr
9001d6cc:	ea4f 0ee5 	mov.w	lr, r5, asr #3
9001d6d0:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001d6d2:	00ed      	lsls	r5, r5, #3
9001d6d4:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001d6d8:	fa1f f888 	uxth.w	r8, r8
9001d6dc:	fb19 f901 	smulbb	r9, r9, r1
9001d6e0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001d6e2:	b2ed      	uxtb	r5, r5
9001d6e4:	fb0e 9e01 	mla	lr, lr, r1, r9
9001d6e8:	990e      	ldr	r1, [sp, #56]	@ 0x38
9001d6ea:	fb1c fc01 	smulbb	ip, ip, r1
9001d6ee:	990f      	ldr	r1, [sp, #60]	@ 0x3c
9001d6f0:	fa1f fe8e 	uxth.w	lr, lr
9001d6f4:	fb05 c501 	mla	r5, r5, r1, ip
9001d6f8:	f108 0c01 	add.w	ip, r8, #1
9001d6fc:	f10e 0901 	add.w	r9, lr, #1
9001d700:	990b      	ldr	r1, [sp, #44]	@ 0x2c
9001d702:	b2ad      	uxth	r5, r5
9001d704:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
9001d708:	f105 0c01 	add.w	ip, r5, #1
9001d70c:	eb09 291e 	add.w	r9, r9, lr, lsr #8
9001d710:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
9001d714:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
9001d718:	ea4f 1959 	mov.w	r9, r9, lsr #5
9001d71c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001d720:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001d724:	ea4c 0808 	orr.w	r8, ip, r8
9001d728:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
9001d72c:	ea48 0809 	orr.w	r8, r8, r9
9001d730:	f821 8b02 	strh.w	r8, [r1], #2
9001d734:	910b      	str	r1, [sp, #44]	@ 0x2c
9001d736:	e7a5      	b.n	9001d684 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
9001d738:	f10c 0801 	add.w	r8, ip, #1
9001d73c:	44a4      	add	ip, r4
9001d73e:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001d740:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
9001d744:	fa1f fc88 	uxth.w	ip, r8
9001d748:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
9001d74c:	f82e 5f02 	strh.w	r5, [lr, #2]!
9001d750:	e763      	b.n	9001d61a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
9001d752:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001d756:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001d75a:	1aad      	subs	r5, r5, r2
9001d75c:	b2ad      	uxth	r5, r5
9001d75e:	2d00      	cmp	r5, #0
9001d760:	bf18      	it	ne
9001d762:	2200      	movne	r2, #0
9001d764:	9201      	str	r2, [sp, #4]
9001d766:	e744      	b.n	9001d5f2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
9001d768:	4b03      	ldr	r3, [pc, #12]	@ (9001d778 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
9001d76a:	6818      	ldr	r0, [r3, #0]
9001d76c:	6803      	ldr	r3, [r0, #0]
9001d76e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001d770:	4798      	blx	r3
9001d772:	b01f      	add	sp, #124	@ 0x7c
9001d774:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001d778:	2402198c 	.word	0x2402198c

9001d77c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
9001d77c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001d780:	b093      	sub	sp, #76	@ 0x4c
9001d782:	4616      	mov	r6, r2
9001d784:	460d      	mov	r5, r1
9001d786:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
9001d78a:	9003      	str	r0, [sp, #12]
9001d78c:	9201      	str	r2, [sp, #4]
9001d78e:	2a00      	cmp	r2, #0
9001d790:	f000 8303 	beq.w	9001dd9a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x61e>
9001d794:	6830      	ldr	r0, [r6, #0]
9001d796:	ac0e      	add	r4, sp, #56	@ 0x38
9001d798:	6871      	ldr	r1, [r6, #4]
9001d79a:	c403      	stmia	r4!, {r0, r1}
9001d79c:	6818      	ldr	r0, [r3, #0]
9001d79e:	ac10      	add	r4, sp, #64	@ 0x40
9001d7a0:	6859      	ldr	r1, [r3, #4]
9001d7a2:	c403      	stmia	r4!, {r0, r1}
9001d7a4:	a80e      	add	r0, sp, #56	@ 0x38
9001d7a6:	f7f8 fb5f 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001d7aa:	4631      	mov	r1, r6
9001d7ac:	a810      	add	r0, sp, #64	@ 0x40
9001d7ae:	f7f8 fb83 	bl	90015eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001d7b2:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
9001d7b6:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
9001d7ba:	bfdb      	ittet	le
9001d7bc:	b293      	uxthle	r3, r2
9001d7be:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001d7c2:	2301      	movgt	r3, #1
9001d7c4:	fb91 f3f3 	sdivle	r3, r1, r3
9001d7c8:	9304      	str	r3, [sp, #16]
9001d7ca:	f105 0308 	add.w	r3, r5, #8
9001d7ce:	9904      	ldr	r1, [sp, #16]
9001d7d0:	9308      	str	r3, [sp, #32]
9001d7d2:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
9001d7d6:	440b      	add	r3, r1
9001d7d8:	3b01      	subs	r3, #1
9001d7da:	fb93 f3f1 	sdiv	r3, r3, r1
9001d7de:	3b01      	subs	r3, #1
9001d7e0:	9908      	ldr	r1, [sp, #32]
9001d7e2:	b29b      	uxth	r3, r3
9001d7e4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
9001d7e8:	9904      	ldr	r1, [sp, #16]
9001d7ea:	9309      	str	r3, [sp, #36]	@ 0x24
9001d7ec:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
9001d7f0:	fb93 f0f1 	sdiv	r0, r3, r1
9001d7f4:	b284      	uxth	r4, r0
9001d7f6:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
9001d7fa:	9405      	str	r4, [sp, #20]
9001d7fc:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
9001d800:	fb05 3914 	mls	r9, r5, r4, r3
9001d804:	fb19 f902 	smulbb	r9, r9, r2
9001d808:	4489      	add	r9, r1
9001d80a:	fa1f f989 	uxth.w	r9, r9
9001d80e:	2d00      	cmp	r5, #0
9001d810:	d05d      	beq.n	9001d8ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
9001d812:	1e6a      	subs	r2, r5, #1
9001d814:	9808      	ldr	r0, [sp, #32]
9001d816:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
9001d81a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001d81c:	fa9a fa8a 	rev.w	sl, sl
9001d820:	4492      	add	sl, r2
9001d822:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
9001d826:	f04f 0600 	mov.w	r6, #0
9001d82a:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
9001d82e:	4411      	add	r1, r2
9001d830:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001d834:	4413      	add	r3, r2
9001d836:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
9001d83a:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
9001d83e:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
9001d842:	9302      	str	r3, [sp, #8]
9001d844:	4bca      	ldr	r3, [pc, #808]	@ (9001db70 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
9001d846:	6818      	ldr	r0, [r3, #0]
9001d848:	6803      	ldr	r3, [r0, #0]
9001d84a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001d84c:	4798      	blx	r3
9001d84e:	4bc9      	ldr	r3, [pc, #804]	@ (9001db74 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
9001d850:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
9001d854:	2100      	movs	r1, #0
9001d856:	881b      	ldrh	r3, [r3, #0]
9001d858:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
9001d85c:	fb03 2404 	mla	r4, r3, r4, r2
9001d860:	2280      	movs	r2, #128	@ 0x80
9001d862:	436b      	muls	r3, r5
9001d864:	eb00 0444 	add.w	r4, r0, r4, lsl #1
9001d868:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001d86c:	930d      	str	r3, [sp, #52]	@ 0x34
9001d86e:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
9001d872:	fb99 f3f3 	sdiv	r3, r9, r3
9001d876:	9306      	str	r3, [sp, #24]
9001d878:	9b01      	ldr	r3, [sp, #4]
9001d87a:	43db      	mvns	r3, r3
9001d87c:	b2db      	uxtb	r3, r3
9001d87e:	930a      	str	r3, [sp, #40]	@ 0x28
9001d880:	9b03      	ldr	r3, [sp, #12]
9001d882:	3304      	adds	r3, #4
9001d884:	4618      	mov	r0, r3
9001d886:	930b      	str	r3, [sp, #44]	@ 0x2c
9001d888:	f00c f90a 	bl	90029aa0 <memset>
9001d88c:	4bba      	ldr	r3, [pc, #744]	@ (9001db78 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
9001d88e:	9300      	str	r3, [sp, #0]
9001d890:	2300      	movs	r3, #0
9001d892:	9307      	str	r3, [sp, #28]
9001d894:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001d896:	42a3      	cmp	r3, r4
9001d898:	f240 827a 	bls.w	9001dd90 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x614>
9001d89c:	f04f 0e07 	mov.w	lr, #7
9001d8a0:	f1b9 0f00 	cmp.w	r9, #0
9001d8a4:	f000 8159 	beq.w	9001db5a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
9001d8a8:	f89a 5000 	ldrb.w	r5, [sl]
9001d8ac:	f10a 0701 	add.w	r7, sl, #1
9001d8b0:	b2ed      	uxtb	r5, r5
9001d8b2:	11aa      	asrs	r2, r5, #6
9001d8b4:	d10e      	bne.n	9001d8d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
9001d8b6:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
9001d8ba:	9b03      	ldr	r3, [sp, #12]
9001d8bc:	eb03 0545 	add.w	r5, r3, r5, lsl #1
9001d8c0:	88ae      	ldrh	r6, [r5, #4]
9001d8c2:	f109 39ff 	add.w	r9, r9, #4294967295
9001d8c6:	fa1f f989 	uxth.w	r9, r9
9001d8ca:	46ba      	mov	sl, r7
9001d8cc:	e7e8      	b.n	9001d8a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
9001d8ce:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
9001d8d2:	e7a6      	b.n	9001d822 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
9001d8d4:	2a01      	cmp	r2, #1
9001d8d6:	d129      	bne.n	9001d92c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
9001d8d8:	f3c6 0304 	ubfx	r3, r6, #0, #5
9001d8dc:	f005 0203 	and.w	r2, r5, #3
9001d8e0:	2103      	movs	r1, #3
9001d8e2:	3b02      	subs	r3, #2
9001d8e4:	4413      	add	r3, r2
9001d8e6:	f3c5 0281 	ubfx	r2, r5, #2, #2
9001d8ea:	f3c5 1501 	ubfx	r5, r5, #4, #2
9001d8ee:	f003 031f 	and.w	r3, r3, #31
9001d8f2:	3a02      	subs	r2, #2
9001d8f4:	3d02      	subs	r5, #2
9001d8f6:	f363 0604 	bfi	r6, r3, #0, #5
9001d8fa:	eb02 1256 	add.w	r2, r2, r6, lsr #5
9001d8fe:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001d902:	f362 164a 	bfi	r6, r2, #5, #6
9001d906:	eb02 0282 	add.w	r2, r2, r2, lsl #2
9001d90a:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
9001d90e:	f005 051f 	and.w	r5, r5, #31
9001d912:	fb11 2205 	smlabb	r2, r1, r5, r2
9001d916:	f365 26cf 	bfi	r6, r5, #11, #5
9001d91a:	fb1e 2303 	smlabb	r3, lr, r3, r2
9001d91e:	9a03      	ldr	r2, [sp, #12]
9001d920:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001d924:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001d928:	809e      	strh	r6, [r3, #4]
9001d92a:	e7ca      	b.n	9001d8c2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
9001d92c:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
9001d930:	2a02      	cmp	r2, #2
9001d932:	b2ab      	uxth	r3, r5
9001d934:	d136      	bne.n	9001d9a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
9001d936:	2101      	movs	r1, #1
9001d938:	fb12 1205 	smlabb	r2, r2, r5, r1
9001d93c:	4492      	add	sl, r2
9001d93e:	463a      	mov	r2, r7
9001d940:	4552      	cmp	r2, sl
9001d942:	d01c      	beq.n	9001d97e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
9001d944:	4694      	mov	ip, r2
9001d946:	f04f 0b03 	mov.w	fp, #3
9001d94a:	f81c 1b02 	ldrb.w	r1, [ip], #2
9001d94e:	7852      	ldrb	r2, [r2, #1]
9001d950:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
9001d954:	f3c1 1045 	ubfx	r0, r1, #5, #6
9001d958:	ea4f 28d1 	mov.w	r8, r1, lsr #11
9001d95c:	f001 021f 	and.w	r2, r1, #31
9001d960:	460e      	mov	r6, r1
9001d962:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001d966:	fb1b 0008 	smlabb	r0, fp, r8, r0
9001d96a:	fb1e 0002 	smlabb	r0, lr, r2, r0
9001d96e:	9a03      	ldr	r2, [sp, #12]
9001d970:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001d974:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001d978:	4662      	mov	r2, ip
9001d97a:	8081      	strh	r1, [r0, #4]
9001d97c:	e7e0      	b.n	9001d940 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
9001d97e:	4599      	cmp	r9, r3
9001d980:	d20b      	bcs.n	9001d99a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
9001d982:	eba5 0509 	sub.w	r5, r5, r9
9001d986:	eb07 0749 	add.w	r7, r7, r9, lsl #1
9001d98a:	2d00      	cmp	r5, #0
9001d98c:	f300 8208 	bgt.w	9001dda0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x624>
9001d990:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001d994:	2301      	movs	r3, #1
9001d996:	9307      	str	r3, [sp, #28]
9001d998:	e00c      	b.n	9001d9b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001d99a:	eb07 0745 	add.w	r7, r7, r5, lsl #1
9001d99e:	eba9 0903 	sub.w	r9, r9, r3
9001d9a2:	e790      	b.n	9001d8c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
9001d9a4:	4599      	cmp	r9, r3
9001d9a6:	d2fa      	bcs.n	9001d99e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
9001d9a8:	eba5 0509 	sub.w	r5, r5, r9
9001d9ac:	2d00      	cmp	r5, #0
9001d9ae:	dc1d      	bgt.n	9001d9ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
9001d9b0:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001d9b4:	f04f 0b00 	mov.w	fp, #0
9001d9b8:	f1b8 0f00 	cmp.w	r8, #0
9001d9bc:	f340 81a0 	ble.w	9001dd00 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x584>
9001d9c0:	783b      	ldrb	r3, [r7, #0]
9001d9c2:	f107 0a01 	add.w	sl, r7, #1
9001d9c6:	b2db      	uxtb	r3, r3
9001d9c8:	119a      	asrs	r2, r3, #6
9001d9ca:	f040 80d7 	bne.w	9001db7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
9001d9ce:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001d9d2:	9a03      	ldr	r2, [sp, #12]
9001d9d4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001d9d8:	889e      	ldrh	r6, [r3, #4]
9001d9da:	9b01      	ldr	r3, [sp, #4]
9001d9dc:	2bff      	cmp	r3, #255	@ 0xff
9001d9de:	f040 81e8 	bne.w	9001ddb2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x636>
9001d9e2:	8026      	strh	r6, [r4, #0]
9001d9e4:	f108 38ff 	add.w	r8, r8, #4294967295
9001d9e8:	3402      	adds	r4, #2
9001d9ea:	e0be      	b.n	9001db6a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001d9ec:	9b02      	ldr	r3, [sp, #8]
9001d9ee:	9a02      	ldr	r2, [sp, #8]
9001d9f0:	42ab      	cmp	r3, r5
9001d9f2:	bfa8      	it	ge
9001d9f4:	462b      	movge	r3, r5
9001d9f6:	eba2 0803 	sub.w	r8, r2, r3
9001d9fa:	9a07      	ldr	r2, [sp, #28]
9001d9fc:	1aed      	subs	r5, r5, r3
9001d9fe:	2a00      	cmp	r2, #0
9001da00:	d05a      	beq.n	9001dab8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
9001da02:	9a01      	ldr	r2, [sp, #4]
9001da04:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001da08:	2aff      	cmp	r2, #255	@ 0xff
9001da0a:	d049      	beq.n	9001daa0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
9001da0c:	f8bd e004 	ldrh.w	lr, [sp, #4]
9001da10:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
9001da14:	42a3      	cmp	r3, r4
9001da16:	f240 80a5 	bls.w	9001db64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
9001da1a:	46bc      	mov	ip, r7
9001da1c:	8820      	ldrh	r0, [r4, #0]
9001da1e:	f81c 2b02 	ldrb.w	r2, [ip], #2
9001da22:	ea4f 2a20 	mov.w	sl, r0, asr #8
9001da26:	7879      	ldrb	r1, [r7, #1]
9001da28:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
9001da2c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
9001da30:	fb1a fa09 	smulbb	sl, sl, r9
9001da34:	b212      	sxth	r2, r2
9001da36:	b291      	uxth	r1, r2
9001da38:	00d2      	lsls	r2, r2, #3
9001da3a:	120f      	asrs	r7, r1, #8
9001da3c:	10c9      	asrs	r1, r1, #3
9001da3e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001da42:	b2d2      	uxtb	r2, r2
9001da44:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001da48:	fb07 a70e 	mla	r7, r7, lr, sl
9001da4c:	ea4f 0ae0 	mov.w	sl, r0, asr #3
9001da50:	00c0      	lsls	r0, r0, #3
9001da52:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001da56:	b2bf      	uxth	r7, r7
9001da58:	b2c0      	uxtb	r0, r0
9001da5a:	fb1a fa09 	smulbb	sl, sl, r9
9001da5e:	fb10 f009 	smulbb	r0, r0, r9
9001da62:	fb01 a10e 	mla	r1, r1, lr, sl
9001da66:	fb02 020e 	mla	r2, r2, lr, r0
9001da6a:	1c78      	adds	r0, r7, #1
9001da6c:	b289      	uxth	r1, r1
9001da6e:	b292      	uxth	r2, r2
9001da70:	eb00 2717 	add.w	r7, r0, r7, lsr #8
9001da74:	f101 0a01 	add.w	sl, r1, #1
9001da78:	1c50      	adds	r0, r2, #1
9001da7a:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
9001da7e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001da82:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001da86:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001da8a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001da8e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001da92:	4307      	orrs	r7, r0
9001da94:	ea47 070a 	orr.w	r7, r7, sl
9001da98:	f824 7b02 	strh.w	r7, [r4], #2
9001da9c:	4667      	mov	r7, ip
9001da9e:	e7b9      	b.n	9001da14 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
9001daa0:	42a3      	cmp	r3, r4
9001daa2:	d95f      	bls.n	9001db64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
9001daa4:	463a      	mov	r2, r7
9001daa6:	f812 1b02 	ldrb.w	r1, [r2], #2
9001daaa:	7878      	ldrb	r0, [r7, #1]
9001daac:	4617      	mov	r7, r2
9001daae:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
9001dab2:	f824 1b02 	strh.w	r1, [r4], #2
9001dab6:	e7f3      	b.n	9001daa0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
9001dab8:	9901      	ldr	r1, [sp, #4]
9001daba:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9001dabe:	b2b2      	uxth	r2, r6
9001dac0:	29ff      	cmp	r1, #255	@ 0xff
9001dac2:	d044      	beq.n	9001db4e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
9001dac4:	ea4f 2922 	mov.w	r9, r2, asr #8
9001dac8:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001dacc:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001dad0:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
9001dad4:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
9001dad8:	4608      	mov	r0, r1
9001dada:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001dade:	fb09 f901 	mul.w	r9, r9, r1
9001dae2:	fb0e fe01 	mul.w	lr, lr, r1
9001dae6:	00d1      	lsls	r1, r2, #3
9001dae8:	b2c9      	uxtb	r1, r1
9001daea:	4341      	muls	r1, r0
9001daec:	429c      	cmp	r4, r3
9001daee:	f4bf af61 	bcs.w	9001d9b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001daf2:	8822      	ldrh	r2, [r4, #0]
9001daf4:	1210      	asrs	r0, r2, #8
9001daf6:	ea4f 0ce2 	mov.w	ip, r2, asr #3
9001dafa:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9001dafe:	00d2      	lsls	r2, r2, #3
9001db00:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
9001db04:	fb00 900a 	mla	r0, r0, sl, r9
9001db08:	b2d2      	uxtb	r2, r2
9001db0a:	fb0c ec0a 	mla	ip, ip, sl, lr
9001db0e:	b280      	uxth	r0, r0
9001db10:	fb02 120a 	mla	r2, r2, sl, r1
9001db14:	fa1f fc8c 	uxth.w	ip, ip
9001db18:	b292      	uxth	r2, r2
9001db1a:	f100 0b01 	add.w	fp, r0, #1
9001db1e:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
9001db22:	1c50      	adds	r0, r2, #1
9001db24:	eb00 2012 	add.w	r0, r0, r2, lsr #8
9001db28:	f10c 0201 	add.w	r2, ip, #1
9001db2c:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
9001db30:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001db34:	f3c0 20c4 	ubfx	r0, r0, #11, #5
9001db38:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
9001db3c:	ea40 0b0b 	orr.w	fp, r0, fp
9001db40:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
9001db44:	ea4b 0b0c 	orr.w	fp, fp, ip
9001db48:	f824 bb02 	strh.w	fp, [r4], #2
9001db4c:	e7ce      	b.n	9001daec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
9001db4e:	429c      	cmp	r4, r3
9001db50:	f4bf af30 	bcs.w	9001d9b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001db54:	f824 2b02 	strh.w	r2, [r4], #2
9001db58:	e7f9      	b.n	9001db4e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
9001db5a:	f8dd 8008 	ldr.w	r8, [sp, #8]
9001db5e:	4657      	mov	r7, sl
9001db60:	464d      	mov	r5, r9
9001db62:	e727      	b.n	9001d9b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
9001db64:	2300      	movs	r3, #0
9001db66:	e716      	b.n	9001d996 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
9001db68:	44bb      	add	fp, r7
9001db6a:	4657      	mov	r7, sl
9001db6c:	e724      	b.n	9001d9b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
9001db6e:	bf00      	nop
9001db70:	2402198c 	.word	0x2402198c
9001db74:	24021986 	.word	0x24021986
9001db78:	24005b80 	.word	0x24005b80
9001db7c:	2a01      	cmp	r2, #1
9001db7e:	d12a      	bne.n	9001dbd6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
9001db80:	f3c6 0104 	ubfx	r1, r6, #0, #5
9001db84:	f003 0203 	and.w	r2, r3, #3
9001db88:	f3c3 0081 	ubfx	r0, r3, #2, #2
9001db8c:	f3c3 1301 	ubfx	r3, r3, #4, #2
9001db90:	3902      	subs	r1, #2
9001db92:	3802      	subs	r0, #2
9001db94:	3b02      	subs	r3, #2
9001db96:	4411      	add	r1, r2
9001db98:	f001 011f 	and.w	r1, r1, #31
9001db9c:	f361 0604 	bfi	r6, r1, #0, #5
9001dba0:	eb00 1056 	add.w	r0, r0, r6, lsr #5
9001dba4:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001dba8:	f360 164a 	bfi	r6, r0, #5, #6
9001dbac:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001dbb0:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
9001dbb4:	f002 031f 	and.w	r3, r2, #31
9001dbb8:	2203      	movs	r2, #3
9001dbba:	f363 26cf 	bfi	r6, r3, #11, #5
9001dbbe:	fb12 0303 	smlabb	r3, r2, r3, r0
9001dbc2:	2207      	movs	r2, #7
9001dbc4:	fb12 3301 	smlabb	r3, r2, r1, r3
9001dbc8:	9a03      	ldr	r2, [sp, #12]
9001dbca:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
9001dbce:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9001dbd2:	809e      	strh	r6, [r3, #4]
9001dbd4:	e701      	b.n	9001d9da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
9001dbd6:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
9001dbda:	4647      	mov	r7, r8
9001dbdc:	45a8      	cmp	r8, r5
9001dbde:	bfa8      	it	ge
9001dbe0:	462f      	movge	r7, r5
9001dbe2:	2a02      	cmp	r2, #2
9001dbe4:	d154      	bne.n	9001dc90 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
9001dbe6:	9b01      	ldr	r3, [sp, #4]
9001dbe8:	2bff      	cmp	r3, #255	@ 0xff
9001dbea:	d01a      	beq.n	9001dc22 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
9001dbec:	eb0b 0307 	add.w	r3, fp, r7
9001dbf0:	2b40      	cmp	r3, #64	@ 0x40
9001dbf2:	dd16      	ble.n	9001dc22 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
9001dbf4:	ea4f 094b 	mov.w	r9, fp, lsl #1
9001dbf8:	9800      	ldr	r0, [sp, #0]
9001dbfa:	4649      	mov	r1, r9
9001dbfc:	f7e4 feb6 	bl	9000296c <_ZN8touchgfx5paint9flushLineEPmi>
9001dc00:	465a      	mov	r2, fp
9001dc02:	9b01      	ldr	r3, [sp, #4]
9001dc04:	4620      	mov	r0, r4
9001dc06:	9900      	ldr	r1, [sp, #0]
9001dc08:	444c      	add	r4, r9
9001dc0a:	f7e4 fef5 	bl	900029f8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001dc0e:	9b00      	ldr	r3, [sp, #0]
9001dc10:	f04f 0b00 	mov.w	fp, #0
9001dc14:	461a      	mov	r2, r3
9001dc16:	4b6a      	ldr	r3, [pc, #424]	@ (9001ddc0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001dc18:	429a      	cmp	r2, r3
9001dc1a:	bf0c      	ite	eq
9001dc1c:	4b69      	ldreq	r3, [pc, #420]	@ (9001ddc4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
9001dc1e:	4b68      	ldrne	r3, [pc, #416]	@ (9001ddc0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001dc20:	9300      	str	r3, [sp, #0]
9001dc22:	4652      	mov	r2, sl
9001dc24:	2100      	movs	r1, #0
9001dc26:	42a9      	cmp	r1, r5
9001dc28:	da2c      	bge.n	9001dc84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
9001dc2a:	4694      	mov	ip, r2
9001dc2c:	f04f 0903 	mov.w	r9, #3
9001dc30:	42b9      	cmp	r1, r7
9001dc32:	f81c 3b02 	ldrb.w	r3, [ip], #2
9001dc36:	7852      	ldrb	r2, [r2, #1]
9001dc38:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
9001dc3c:	f3c3 1045 	ubfx	r0, r3, #5, #6
9001dc40:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
9001dc44:	f003 021f 	and.w	r2, r3, #31
9001dc48:	461e      	mov	r6, r3
9001dc4a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
9001dc4e:	fb19 000e 	smlabb	r0, r9, lr, r0
9001dc52:	f04f 0e07 	mov.w	lr, #7
9001dc56:	fb1e 0002 	smlabb	r0, lr, r2, r0
9001dc5a:	9a03      	ldr	r2, [sp, #12]
9001dc5c:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
9001dc60:	eb02 0040 	add.w	r0, r2, r0, lsl #1
9001dc64:	8083      	strh	r3, [r0, #4]
9001dc66:	da0a      	bge.n	9001dc7e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
9001dc68:	9a01      	ldr	r2, [sp, #4]
9001dc6a:	2aff      	cmp	r2, #255	@ 0xff
9001dc6c:	bf13      	iteet	ne
9001dc6e:	9a00      	ldrne	r2, [sp, #0]
9001dc70:	8023      	strheq	r3, [r4, #0]
9001dc72:	3402      	addeq	r4, #2
9001dc74:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
9001dc78:	bf18      	it	ne
9001dc7a:	f10b 0b01 	addne.w	fp, fp, #1
9001dc7e:	3101      	adds	r1, #1
9001dc80:	4662      	mov	r2, ip
9001dc82:	e7d0      	b.n	9001dc26 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
9001dc84:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
9001dc88:	eba8 0807 	sub.w	r8, r8, r7
9001dc8c:	1bed      	subs	r5, r5, r7
9001dc8e:	e76c      	b.n	9001db6a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001dc90:	9b01      	ldr	r3, [sp, #4]
9001dc92:	eba8 0807 	sub.w	r8, r8, r7
9001dc96:	1bed      	subs	r5, r5, r7
9001dc98:	fa1f f986 	uxth.w	r9, r6
9001dc9c:	2bff      	cmp	r3, #255	@ 0xff
9001dc9e:	d027      	beq.n	9001dcf0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x574>
9001dca0:	eb0b 0307 	add.w	r3, fp, r7
9001dca4:	2b40      	cmp	r3, #64	@ 0x40
9001dca6:	dd18      	ble.n	9001dcda <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x55e>
9001dca8:	ea4f 034b 	mov.w	r3, fp, lsl #1
9001dcac:	9800      	ldr	r0, [sp, #0]
9001dcae:	4619      	mov	r1, r3
9001dcb0:	930c      	str	r3, [sp, #48]	@ 0x30
9001dcb2:	f7e4 fe5b 	bl	9000296c <_ZN8touchgfx5paint9flushLineEPmi>
9001dcb6:	465a      	mov	r2, fp
9001dcb8:	9b01      	ldr	r3, [sp, #4]
9001dcba:	4620      	mov	r0, r4
9001dcbc:	9900      	ldr	r1, [sp, #0]
9001dcbe:	f04f 0b00 	mov.w	fp, #0
9001dcc2:	f7e4 fe99 	bl	900029f8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001dcc6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001dcc8:	441c      	add	r4, r3
9001dcca:	9b00      	ldr	r3, [sp, #0]
9001dccc:	461a      	mov	r2, r3
9001dcce:	4b3c      	ldr	r3, [pc, #240]	@ (9001ddc0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001dcd0:	429a      	cmp	r2, r3
9001dcd2:	bf0c      	ite	eq
9001dcd4:	4b3b      	ldreq	r3, [pc, #236]	@ (9001ddc4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
9001dcd6:	4b3a      	ldrne	r3, [pc, #232]	@ (9001ddc0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
9001dcd8:	9300      	str	r3, [sp, #0]
9001dcda:	9b00      	ldr	r3, [sp, #0]
9001dcdc:	eb03 024b 	add.w	r2, r3, fp, lsl #1
9001dce0:	463b      	mov	r3, r7
9001dce2:	2b00      	cmp	r3, #0
9001dce4:	f43f af40 	beq.w	9001db68 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
9001dce8:	f822 9b02 	strh.w	r9, [r2], #2
9001dcec:	3b01      	subs	r3, #1
9001dcee:	e7f8      	b.n	9001dce2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x566>
9001dcf0:	eb04 0747 	add.w	r7, r4, r7, lsl #1
9001dcf4:	42a7      	cmp	r7, r4
9001dcf6:	f67f af38 	bls.w	9001db6a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
9001dcfa:	f824 9b02 	strh.w	r9, [r4], #2
9001dcfe:	e7f9      	b.n	9001dcf4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x578>
9001dd00:	f1bb 0f00 	cmp.w	fp, #0
9001dd04:	d00c      	beq.n	9001dd20 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a4>
9001dd06:	ea4f 084b 	mov.w	r8, fp, lsl #1
9001dd0a:	9800      	ldr	r0, [sp, #0]
9001dd0c:	4641      	mov	r1, r8
9001dd0e:	f7e4 fe2d 	bl	9000296c <_ZN8touchgfx5paint9flushLineEPmi>
9001dd12:	4620      	mov	r0, r4
9001dd14:	4444      	add	r4, r8
9001dd16:	9b01      	ldr	r3, [sp, #4]
9001dd18:	465a      	mov	r2, fp
9001dd1a:	9900      	ldr	r1, [sp, #0]
9001dd1c:	f7e4 fe6c 	bl	900029f8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
9001dd20:	4b29      	ldr	r3, [pc, #164]	@ (9001ddc8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
9001dd22:	9a02      	ldr	r2, [sp, #8]
9001dd24:	881b      	ldrh	r3, [r3, #0]
9001dd26:	1a9b      	subs	r3, r3, r2
9001dd28:	eb04 0443 	add.w	r4, r4, r3, lsl #1
9001dd2c:	9b06      	ldr	r3, [sp, #24]
9001dd2e:	3301      	adds	r3, #1
9001dd30:	9306      	str	r3, [sp, #24]
9001dd32:	9a06      	ldr	r2, [sp, #24]
9001dd34:	9b04      	ldr	r3, [sp, #16]
9001dd36:	4293      	cmp	r3, r2
9001dd38:	d120      	bne.n	9001dd7c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x600>
9001dd3a:	9b05      	ldr	r3, [sp, #20]
9001dd3c:	2100      	movs	r1, #0
9001dd3e:	9a05      	ldr	r2, [sp, #20]
9001dd40:	f04f 0600 	mov.w	r6, #0
9001dd44:	f103 0801 	add.w	r8, r3, #1
9001dd48:	9b08      	ldr	r3, [sp, #32]
9001dd4a:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
9001dd4e:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
9001dd52:	2280      	movs	r2, #128	@ 0x80
9001dd54:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
9001dd58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001dd5a:	ba3f      	rev	r7, r7
9001dd5c:	eba9 0905 	sub.w	r9, r9, r5
9001dd60:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001dd62:	441f      	add	r7, r3
9001dd64:	f00b fe9c 	bl	90029aa0 <memset>
9001dd68:	fa1f f989 	uxth.w	r9, r9
9001dd6c:	2300      	movs	r3, #0
9001dd6e:	f8cd 8014 	str.w	r8, [sp, #20]
9001dd72:	9306      	str	r3, [sp, #24]
9001dd74:	f7e4 fdf0 	bl	90002958 <_ZN8touchgfx5paint8tearDownEv>
9001dd78:	46ba      	mov	sl, r7
9001dd7a:	e58b      	b.n	9001d894 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
9001dd7c:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
9001dd80:	9b02      	ldr	r3, [sp, #8]
9001dd82:	eba9 0903 	sub.w	r9, r9, r3
9001dd86:	eba9 0505 	sub.w	r5, r9, r5
9001dd8a:	fa1f f985 	uxth.w	r9, r5
9001dd8e:	e7f1      	b.n	9001dd74 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5f8>
9001dd90:	4b0e      	ldr	r3, [pc, #56]	@ (9001ddcc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
9001dd92:	6818      	ldr	r0, [r3, #0]
9001dd94:	6803      	ldr	r3, [r0, #0]
9001dd96:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001dd98:	4798      	blx	r3
9001dd9a:	b013      	add	sp, #76	@ 0x4c
9001dd9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001dda0:	9b02      	ldr	r3, [sp, #8]
9001dda2:	9a02      	ldr	r2, [sp, #8]
9001dda4:	42ab      	cmp	r3, r5
9001dda6:	bfa8      	it	ge
9001dda8:	462b      	movge	r3, r5
9001ddaa:	eba2 0803 	sub.w	r8, r2, r3
9001ddae:	1aed      	subs	r5, r5, r3
9001ddb0:	e627      	b.n	9001da02 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
9001ddb2:	f108 38ff 	add.w	r8, r8, #4294967295
9001ddb6:	fa1f f986 	uxth.w	r9, r6
9001ddba:	2500      	movs	r5, #0
9001ddbc:	2701      	movs	r7, #1
9001ddbe:	e76f      	b.n	9001dca0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x524>
9001ddc0:	24005b80 	.word	0x24005b80
9001ddc4:	24005c80 	.word	0x24005c80
9001ddc8:	24021986 	.word	0x24021986
9001ddcc:	2402198c 	.word	0x2402198c

9001ddd0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001ddd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ddd4:	b08f      	sub	sp, #60	@ 0x3c
9001ddd6:	461c      	mov	r4, r3
9001ddd8:	460f      	mov	r7, r1
9001ddda:	9203      	str	r2, [sp, #12]
9001dddc:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
9001dde0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9001dde2:	9202      	str	r2, [sp, #8]
9001dde4:	2a00      	cmp	r2, #0
9001dde6:	f000 8128 	beq.w	9001e03a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
9001ddea:	6820      	ldr	r0, [r4, #0]
9001ddec:	aa0a      	add	r2, sp, #40	@ 0x28
9001ddee:	6861      	ldr	r1, [r4, #4]
9001ddf0:	c203      	stmia	r2!, {r0, r1}
9001ddf2:	6818      	ldr	r0, [r3, #0]
9001ddf4:	aa0c      	add	r2, sp, #48	@ 0x30
9001ddf6:	6859      	ldr	r1, [r3, #4]
9001ddf8:	c203      	stmia	r2!, {r0, r1}
9001ddfa:	a80a      	add	r0, sp, #40	@ 0x28
9001ddfc:	f7f8 f834 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001de00:	4621      	mov	r1, r4
9001de02:	a80c      	add	r0, sp, #48	@ 0x30
9001de04:	f7f8 f858 	bl	90015eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001de08:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001de0c:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
9001de10:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001de14:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
9001de18:	bfdb      	ittet	le
9001de1a:	b2b3      	uxthle	r3, r6
9001de1c:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001de20:	2301      	movgt	r3, #1
9001de22:	fb92 f3f3 	sdivle	r3, r2, r3
9001de26:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001de2a:	441d      	add	r5, r3
9001de2c:	fb92 f1f3 	sdiv	r1, r2, r3
9001de30:	fa1f fc81 	uxth.w	ip, r1
9001de34:	3d01      	subs	r5, #1
9001de36:	fb0c 2413 	mls	r4, ip, r3, r2
9001de3a:	4661      	mov	r1, ip
9001de3c:	fb14 f406 	smulbb	r4, r4, r6
9001de40:	4404      	add	r4, r0
9001de42:	fb95 f5f3 	sdiv	r5, r5, r3
9001de46:	b2a4      	uxth	r4, r4
9001de48:	b121      	cbz	r1, 9001de54 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
9001de4a:	9b03      	ldr	r3, [sp, #12]
9001de4c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001de50:	ba1b      	rev	r3, r3
9001de52:	441f      	add	r7, r3
9001de54:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001de58:	b2ad      	uxth	r5, r5
9001de5a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
9001de5e:	4418      	add	r0, r3
9001de60:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001de64:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001de68:	00ad      	lsls	r5, r5, #2
9001de6a:	441a      	add	r2, r3
9001de6c:	4b74      	ldr	r3, [pc, #464]	@ (9001e040 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001de6e:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
9001de72:	6818      	ldr	r0, [r3, #0]
9001de74:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
9001de78:	6803      	ldr	r3, [r0, #0]
9001de7a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001de7c:	4798      	blx	r3
9001de7e:	4a71      	ldr	r2, [pc, #452]	@ (9001e044 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
9001de80:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
9001de84:	2c00      	cmp	r4, #0
9001de86:	8813      	ldrh	r3, [r2, #0]
9001de88:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
9001de8c:	bf0c      	ite	eq
9001de8e:	46c8      	moveq	r8, r9
9001de90:	f04f 0800 	movne.w	r8, #0
9001de94:	9209      	str	r2, [sp, #36]	@ 0x24
9001de96:	fb03 c101 	mla	r1, r3, r1, ip
9001de9a:	4373      	muls	r3, r6
9001de9c:	fa1f f888 	uxth.w	r8, r8
9001dea0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001dea4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001dea8:	9304      	str	r3, [sp, #16]
9001deaa:	1d2b      	adds	r3, r5, #4
9001deac:	9305      	str	r3, [sp, #20]
9001deae:	2300      	movs	r3, #0
9001deb0:	9301      	str	r3, [sp, #4]
9001deb2:	9a04      	ldr	r2, [sp, #16]
9001deb4:	4282      	cmp	r2, r0
9001deb6:	f240 80bb 	bls.w	9001e030 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
9001deba:	b95b      	cbnz	r3, 9001ded4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
9001debc:	783a      	ldrb	r2, [r7, #0]
9001debe:	0993      	lsrs	r3, r2, #6
9001dec0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001dec4:	9201      	str	r2, [sp, #4]
9001dec6:	1e5a      	subs	r2, r3, #1
9001dec8:	2a02      	cmp	r2, #2
9001deca:	bf8d      	iteet	hi
9001decc:	787b      	ldrbhi	r3, [r7, #1]
9001dece:	3701      	addls	r7, #1
9001ded0:	b29b      	uxthls	r3, r3
9001ded2:	3702      	addhi	r7, #2
9001ded4:	b184      	cbz	r4, 9001def8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
9001ded6:	429c      	cmp	r4, r3
9001ded8:	bf91      	iteee	ls
9001deda:	1b1c      	subls	r4, r3, r4
9001dedc:	1ae4      	subhi	r4, r4, r3
9001dede:	46c4      	movhi	ip, r8
9001dee0:	f04f 0a00 	movhi.w	sl, #0
9001dee4:	bf9b      	ittet	ls
9001dee6:	fa1f fa84 	uxthls.w	sl, r4
9001deea:	2400      	movls	r4, #0
9001deec:	b2a4      	uxthhi	r4, r4
9001deee:	fa1f fc89 	uxthls.w	ip, r9
9001def2:	4653      	mov	r3, sl
9001def4:	46e0      	mov	r8, ip
9001def6:	e7dc      	b.n	9001deb2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
9001def8:	2204      	movs	r2, #4
9001defa:	9905      	ldr	r1, [sp, #20]
9001defc:	4543      	cmp	r3, r8
9001defe:	4615      	mov	r5, r2
9001df00:	9a01      	ldr	r2, [sp, #4]
9001df02:	bf24      	itt	cs
9001df04:	eba3 0a08 	subcs.w	sl, r3, r8
9001df08:	46c6      	movcs	lr, r8
9001df0a:	fb15 1202 	smlabb	r2, r5, r2, r1
9001df0e:	9903      	ldr	r1, [sp, #12]
9001df10:	bf3c      	itt	cc
9001df12:	eba8 0c03 	subcc.w	ip, r8, r3
9001df16:	469e      	movcc	lr, r3
9001df18:	588a      	ldr	r2, [r1, r2]
9001df1a:	bf26      	itte	cs
9001df1c:	fa1f fa8a 	uxthcs.w	sl, sl
9001df20:	46a4      	movcs	ip, r4
9001df22:	fa1f fc8c 	uxthcc.w	ip, ip
9001df26:	ea4f 6112 	mov.w	r1, r2, lsr #24
9001df2a:	bf38      	it	cc
9001df2c:	46a2      	movcc	sl, r4
9001df2e:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
9001df32:	2900      	cmp	r1, #0
9001df34:	d066      	beq.n	9001e004 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
9001df36:	29ff      	cmp	r1, #255	@ 0xff
9001df38:	ea4f 2612 	mov.w	r6, r2, lsr #8
9001df3c:	d114      	bne.n	9001df68 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001df3e:	9d02      	ldr	r5, [sp, #8]
9001df40:	2dff      	cmp	r5, #255	@ 0xff
9001df42:	d111      	bne.n	9001df68 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
9001df44:	0951      	lsrs	r1, r2, #5
9001df46:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
9001df4a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001df4e:	4486      	add	lr, r0
9001df50:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001df54:	f026 0607 	bic.w	r6, r6, #7
9001df58:	430e      	orrs	r6, r1
9001df5a:	4316      	orrs	r6, r2
9001df5c:	b2b6      	uxth	r6, r6
9001df5e:	4586      	cmp	lr, r0
9001df60:	d051      	beq.n	9001e006 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001df62:	f820 6b02 	strh.w	r6, [r0], #2
9001df66:	e7fa      	b.n	9001df5e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
9001df68:	9d02      	ldr	r5, [sp, #8]
9001df6a:	b2f6      	uxtb	r6, r6
9001df6c:	4486      	add	lr, r0
9001df6e:	4369      	muls	r1, r5
9001df70:	1c4d      	adds	r5, r1, #1
9001df72:	eb05 2521 	add.w	r5, r5, r1, asr #8
9001df76:	f3c2 4107 	ubfx	r1, r2, #16, #8
9001df7a:	b2d2      	uxtb	r2, r2
9001df7c:	122d      	asrs	r5, r5, #8
9001df7e:	ea6f 0b05 	mvn.w	fp, r5
9001df82:	b2ad      	uxth	r5, r5
9001df84:	fb11 f105 	smulbb	r1, r1, r5
9001df88:	fa5f fb8b 	uxtb.w	fp, fp
9001df8c:	fb16 f605 	smulbb	r6, r6, r5
9001df90:	fb12 f205 	smulbb	r2, r2, r5
9001df94:	b289      	uxth	r1, r1
9001df96:	b2b6      	uxth	r6, r6
9001df98:	b292      	uxth	r2, r2
9001df9a:	9106      	str	r1, [sp, #24]
9001df9c:	9607      	str	r6, [sp, #28]
9001df9e:	9208      	str	r2, [sp, #32]
9001dfa0:	4586      	cmp	lr, r0
9001dfa2:	d030      	beq.n	9001e006 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001dfa4:	8802      	ldrh	r2, [r0, #0]
9001dfa6:	9906      	ldr	r1, [sp, #24]
9001dfa8:	1216      	asrs	r6, r2, #8
9001dfaa:	10d5      	asrs	r5, r2, #3
9001dfac:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001dfb0:	00d2      	lsls	r2, r2, #3
9001dfb2:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001dfb6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001dfba:	b2d2      	uxtb	r2, r2
9001dfbc:	fb06 160b 	mla	r6, r6, fp, r1
9001dfc0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001dfc4:	9907      	ldr	r1, [sp, #28]
9001dfc6:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001dfca:	b2b6      	uxth	r6, r6
9001dfcc:	fb05 150b 	mla	r5, r5, fp, r1
9001dfd0:	9908      	ldr	r1, [sp, #32]
9001dfd2:	fb02 120b 	mla	r2, r2, fp, r1
9001dfd6:	1c71      	adds	r1, r6, #1
9001dfd8:	b2ad      	uxth	r5, r5
9001dfda:	b292      	uxth	r2, r2
9001dfdc:	eb01 2616 	add.w	r6, r1, r6, lsr #8
9001dfe0:	1c51      	adds	r1, r2, #1
9001dfe2:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001dfe6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001dfea:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001dfee:	4316      	orrs	r6, r2
9001dff0:	1c6a      	adds	r2, r5, #1
9001dff2:	eb02 2515 	add.w	r5, r2, r5, lsr #8
9001dff6:	096d      	lsrs	r5, r5, #5
9001dff8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001dffc:	432e      	orrs	r6, r5
9001dffe:	f820 6b02 	strh.w	r6, [r0], #2
9001e002:	e7cd      	b.n	9001dfa0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
9001e004:	4470      	add	r0, lr
9001e006:	4543      	cmp	r3, r8
9001e008:	f4ff af73 	bcc.w	9001def2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001e00c:	fa1f fc89 	uxth.w	ip, r9
9001e010:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
9001e014:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9001e016:	eba4 040c 	sub.w	r4, r4, ip
9001e01a:	881b      	ldrh	r3, [r3, #0]
9001e01c:	b2a4      	uxth	r4, r4
9001e01e:	eba3 0309 	sub.w	r3, r3, r9
9001e022:	2c00      	cmp	r4, #0
9001e024:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e028:	bf18      	it	ne
9001e02a:	f04f 0c00 	movne.w	ip, #0
9001e02e:	e760      	b.n	9001def2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
9001e030:	4b03      	ldr	r3, [pc, #12]	@ (9001e040 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
9001e032:	6818      	ldr	r0, [r3, #0]
9001e034:	6803      	ldr	r3, [r0, #0]
9001e036:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001e038:	4798      	blx	r3
9001e03a:	b00f      	add	sp, #60	@ 0x3c
9001e03c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e040:	2402198c 	.word	0x2402198c
9001e044:	24021986 	.word	0x24021986

9001e048 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001e048:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e04c:	b093      	sub	sp, #76	@ 0x4c
9001e04e:	461c      	mov	r4, r3
9001e050:	9205      	str	r2, [sp, #20]
9001e052:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
9001e056:	9101      	str	r1, [sp, #4]
9001e058:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9001e05a:	9202      	str	r2, [sp, #8]
9001e05c:	2a00      	cmp	r2, #0
9001e05e:	f000 812e 	beq.w	9001e2be <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
9001e062:	6820      	ldr	r0, [r4, #0]
9001e064:	aa0e      	add	r2, sp, #56	@ 0x38
9001e066:	6861      	ldr	r1, [r4, #4]
9001e068:	c203      	stmia	r2!, {r0, r1}
9001e06a:	6818      	ldr	r0, [r3, #0]
9001e06c:	aa10      	add	r2, sp, #64	@ 0x40
9001e06e:	6859      	ldr	r1, [r3, #4]
9001e070:	c203      	stmia	r2!, {r0, r1}
9001e072:	a80e      	add	r0, sp, #56	@ 0x38
9001e074:	f7f7 fef8 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e078:	4621      	mov	r1, r4
9001e07a:	a810      	add	r0, sp, #64	@ 0x40
9001e07c:	f7f7 ff1c 	bl	90015eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e080:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
9001e084:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
9001e088:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
9001e08c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
9001e090:	bfdb      	ittet	le
9001e092:	b2b3      	uxthle	r3, r6
9001e094:	f44f 6280 	movle.w	r2, #1024	@ 0x400
9001e098:	2301      	movgt	r3, #1
9001e09a:	fb92 f3f3 	sdivle	r3, r2, r3
9001e09e:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001e0a2:	441d      	add	r5, r3
9001e0a4:	fb92 f1f3 	sdiv	r1, r2, r3
9001e0a8:	fa1f fc81 	uxth.w	ip, r1
9001e0ac:	3d01      	subs	r5, #1
9001e0ae:	fb0c 2413 	mls	r4, ip, r3, r2
9001e0b2:	4661      	mov	r1, ip
9001e0b4:	fb14 f406 	smulbb	r4, r4, r6
9001e0b8:	4404      	add	r4, r0
9001e0ba:	fb95 f5f3 	sdiv	r5, r5, r3
9001e0be:	b2a4      	uxth	r4, r4
9001e0c0:	b131      	cbz	r1, 9001e0d0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
9001e0c2:	9b05      	ldr	r3, [sp, #20]
9001e0c4:	9901      	ldr	r1, [sp, #4]
9001e0c6:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
9001e0ca:	ba1b      	rev	r3, r3
9001e0cc:	4419      	add	r1, r3
9001e0ce:	9101      	str	r1, [sp, #4]
9001e0d0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001e0d4:	b2ad      	uxth	r5, r5
9001e0d6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
9001e0da:	4418      	add	r0, r3
9001e0dc:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
9001e0e0:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
9001e0e4:	00ad      	lsls	r5, r5, #2
9001e0e6:	441a      	add	r2, r3
9001e0e8:	4b76      	ldr	r3, [pc, #472]	@ (9001e2c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001e0ea:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
9001e0ee:	6818      	ldr	r0, [r3, #0]
9001e0f0:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
9001e0f4:	6803      	ldr	r3, [r0, #0]
9001e0f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e0f8:	4798      	blx	r3
9001e0fa:	4973      	ldr	r1, [pc, #460]	@ (9001e2c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
9001e0fc:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
9001e100:	2c00      	cmp	r4, #0
9001e102:	880b      	ldrh	r3, [r1, #0]
9001e104:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001e108:	910d      	str	r1, [sp, #52]	@ 0x34
9001e10a:	fb03 c202 	mla	r2, r3, r2, ip
9001e10e:	bf08      	it	eq
9001e110:	46dc      	moveq	ip, fp
9001e112:	fb03 f306 	mul.w	r3, r3, r6
9001e116:	bf18      	it	ne
9001e118:	f04f 0c00 	movne.w	ip, #0
9001e11c:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001e120:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001e124:	fa1f fc8c 	uxth.w	ip, ip
9001e128:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001e12c:	9106      	str	r1, [sp, #24]
9001e12e:	9308      	str	r3, [sp, #32]
9001e130:	1d2b      	adds	r3, r5, #4
9001e132:	9309      	str	r3, [sp, #36]	@ 0x24
9001e134:	9b02      	ldr	r3, [sp, #8]
9001e136:	43da      	mvns	r2, r3
9001e138:	2300      	movs	r3, #0
9001e13a:	b2d2      	uxtb	r2, r2
9001e13c:	9303      	str	r3, [sp, #12]
9001e13e:	9207      	str	r2, [sp, #28]
9001e140:	9a08      	ldr	r2, [sp, #32]
9001e142:	4282      	cmp	r2, r0
9001e144:	f240 80b6 	bls.w	9001e2b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
9001e148:	b963      	cbnz	r3, 9001e164 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001e14a:	9b01      	ldr	r3, [sp, #4]
9001e14c:	781a      	ldrb	r2, [r3, #0]
9001e14e:	0993      	lsrs	r3, r2, #6
9001e150:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
9001e154:	9203      	str	r2, [sp, #12]
9001e156:	1e5a      	subs	r2, r3, #1
9001e158:	2a02      	cmp	r2, #2
9001e15a:	d815      	bhi.n	9001e188 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
9001e15c:	9a01      	ldr	r2, [sp, #4]
9001e15e:	b29b      	uxth	r3, r3
9001e160:	3201      	adds	r2, #1
9001e162:	9201      	str	r2, [sp, #4]
9001e164:	b1b4      	cbz	r4, 9001e194 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
9001e166:	429c      	cmp	r4, r3
9001e168:	bf91      	iteee	ls
9001e16a:	1b1c      	subls	r4, r3, r4
9001e16c:	1ae4      	subhi	r4, r4, r3
9001e16e:	4666      	movhi	r6, ip
9001e170:	f04f 0800 	movhi.w	r8, #0
9001e174:	bf9b      	ittet	ls
9001e176:	fa1f f884 	uxthls.w	r8, r4
9001e17a:	2400      	movls	r4, #0
9001e17c:	b2a4      	uxthhi	r4, r4
9001e17e:	fa1f f68b 	uxthls.w	r6, fp
9001e182:	4643      	mov	r3, r8
9001e184:	46b4      	mov	ip, r6
9001e186:	e7db      	b.n	9001e140 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
9001e188:	9a01      	ldr	r2, [sp, #4]
9001e18a:	9b01      	ldr	r3, [sp, #4]
9001e18c:	3202      	adds	r2, #2
9001e18e:	785b      	ldrb	r3, [r3, #1]
9001e190:	9201      	str	r2, [sp, #4]
9001e192:	e7e7      	b.n	9001e164 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
9001e194:	2203      	movs	r2, #3
9001e196:	9909      	ldr	r1, [sp, #36]	@ 0x24
9001e198:	4563      	cmp	r3, ip
9001e19a:	4615      	mov	r5, r2
9001e19c:	9a03      	ldr	r2, [sp, #12]
9001e19e:	bf2c      	ite	cs
9001e1a0:	eba3 080c 	subcs.w	r8, r3, ip
9001e1a4:	ebac 0603 	subcc.w	r6, ip, r3
9001e1a8:	fb15 1202 	smlabb	r2, r5, r2, r1
9001e1ac:	9905      	ldr	r1, [sp, #20]
9001e1ae:	bf24      	itt	cs
9001e1b0:	fa1f f888 	uxthcs.w	r8, r8
9001e1b4:	46e1      	movcs	r9, ip
9001e1b6:	eb01 0502 	add.w	r5, r1, r2
9001e1ba:	9902      	ldr	r1, [sp, #8]
9001e1bc:	bf2f      	iteee	cs
9001e1be:	4626      	movcs	r6, r4
9001e1c0:	b2b6      	uxthcc	r6, r6
9001e1c2:	4699      	movcc	r9, r3
9001e1c4:	46a0      	movcc	r8, r4
9001e1c6:	29ff      	cmp	r1, #255	@ 0xff
9001e1c8:	d04a      	beq.n	9001e260 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
9001e1ca:	9f06      	ldr	r7, [sp, #24]
9001e1cc:	46ca      	mov	sl, r9
9001e1ce:	78a9      	ldrb	r1, [r5, #2]
9001e1d0:	9004      	str	r0, [sp, #16]
9001e1d2:	4379      	muls	r1, r7
9001e1d4:	910a      	str	r1, [sp, #40]	@ 0x28
9001e1d6:	7869      	ldrb	r1, [r5, #1]
9001e1d8:	4379      	muls	r1, r7
9001e1da:	910b      	str	r1, [sp, #44]	@ 0x2c
9001e1dc:	9905      	ldr	r1, [sp, #20]
9001e1de:	5c8a      	ldrb	r2, [r1, r2]
9001e1e0:	437a      	muls	r2, r7
9001e1e2:	920c      	str	r2, [sp, #48]	@ 0x30
9001e1e4:	f1ba 0f00 	cmp.w	sl, #0
9001e1e8:	d03d      	beq.n	9001e266 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
9001e1ea:	9a04      	ldr	r2, [sp, #16]
9001e1ec:	f10a 3aff 	add.w	sl, sl, #4294967295
9001e1f0:	9f07      	ldr	r7, [sp, #28]
9001e1f2:	8812      	ldrh	r2, [r2, #0]
9001e1f4:	fa1f fa8a 	uxth.w	sl, sl
9001e1f8:	46be      	mov	lr, r7
9001e1fa:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
9001e1fc:	1215      	asrs	r5, r2, #8
9001e1fe:	10d1      	asrs	r1, r2, #3
9001e200:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001e204:	00d2      	lsls	r2, r2, #3
9001e206:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9001e20a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001e20e:	b2d2      	uxtb	r2, r2
9001e210:	fb05 750e 	mla	r5, r5, lr, r7
9001e214:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
9001e218:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
9001e21a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001e21e:	b2ad      	uxth	r5, r5
9001e220:	fb01 710e 	mla	r1, r1, lr, r7
9001e224:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
9001e226:	fb02 720e 	mla	r2, r2, lr, r7
9001e22a:	f105 0e01 	add.w	lr, r5, #1
9001e22e:	b289      	uxth	r1, r1
9001e230:	b292      	uxth	r2, r2
9001e232:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001e236:	f102 0e01 	add.w	lr, r2, #1
9001e23a:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9001e23e:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
9001e242:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001e246:	4315      	orrs	r5, r2
9001e248:	1c4a      	adds	r2, r1, #1
9001e24a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9001e24e:	9a04      	ldr	r2, [sp, #16]
9001e250:	0949      	lsrs	r1, r1, #5
9001e252:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9001e256:	430d      	orrs	r5, r1
9001e258:	f822 5b02 	strh.w	r5, [r2], #2
9001e25c:	9204      	str	r2, [sp, #16]
9001e25e:	e7c1      	b.n	9001e1e4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
9001e260:	4649      	mov	r1, r9
9001e262:	4686      	mov	lr, r0
9001e264:	b999      	cbnz	r1, 9001e28e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
9001e266:	4563      	cmp	r3, ip
9001e268:	eb00 0049 	add.w	r0, r0, r9, lsl #1
9001e26c:	d389      	bcc.n	9001e182 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001e26e:	fa1f f68b 	uxth.w	r6, fp
9001e272:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
9001e276:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001e278:	1ba4      	subs	r4, r4, r6
9001e27a:	881b      	ldrh	r3, [r3, #0]
9001e27c:	b2a4      	uxth	r4, r4
9001e27e:	eba3 030b 	sub.w	r3, r3, fp
9001e282:	2c00      	cmp	r4, #0
9001e284:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001e288:	bf18      	it	ne
9001e28a:	2600      	movne	r6, #0
9001e28c:	e779      	b.n	9001e182 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
9001e28e:	78aa      	ldrb	r2, [r5, #2]
9001e290:	3901      	subs	r1, #1
9001e292:	4f0e      	ldr	r7, [pc, #56]	@ (9001e2cc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
9001e294:	b289      	uxth	r1, r1
9001e296:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
9001e29a:	786a      	ldrb	r2, [r5, #1]
9001e29c:	00d2      	lsls	r2, r2, #3
9001e29e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001e2a2:	ea4a 0202 	orr.w	r2, sl, r2
9001e2a6:	f895 a000 	ldrb.w	sl, [r5]
9001e2aa:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
9001e2ae:	f82e 2b02 	strh.w	r2, [lr], #2
9001e2b2:	e7d7      	b.n	9001e264 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
9001e2b4:	4b03      	ldr	r3, [pc, #12]	@ (9001e2c4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
9001e2b6:	6818      	ldr	r0, [r3, #0]
9001e2b8:	6803      	ldr	r3, [r0, #0]
9001e2ba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001e2bc:	4798      	blx	r3
9001e2be:	b013      	add	sp, #76	@ 0x4c
9001e2c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e2c4:	2402198c 	.word	0x2402198c
9001e2c8:	24021986 	.word	0x24021986
9001e2cc:	fffff800 	.word	0xfffff800

9001e2d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
9001e2d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e2d4:	b09d      	sub	sp, #116	@ 0x74
9001e2d6:	461c      	mov	r4, r3
9001e2d8:	4683      	mov	fp, r0
9001e2da:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9001e2dc:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
9001e2e0:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
9001e2e4:	920e      	str	r2, [sp, #56]	@ 0x38
9001e2e6:	2a00      	cmp	r2, #0
9001e2e8:	f000 81e4 	beq.w	9001e6b4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
9001e2ec:	6820      	ldr	r0, [r4, #0]
9001e2ee:	aa18      	add	r2, sp, #96	@ 0x60
9001e2f0:	6861      	ldr	r1, [r4, #4]
9001e2f2:	c203      	stmia	r2!, {r0, r1}
9001e2f4:	6818      	ldr	r0, [r3, #0]
9001e2f6:	aa1a      	add	r2, sp, #104	@ 0x68
9001e2f8:	6859      	ldr	r1, [r3, #4]
9001e2fa:	c203      	stmia	r2!, {r0, r1}
9001e2fc:	a818      	add	r0, sp, #96	@ 0x60
9001e2fe:	f7f7 fdb3 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e302:	4621      	mov	r1, r4
9001e304:	a81a      	add	r0, sp, #104	@ 0x68
9001e306:	f7f7 fdd7 	bl	90015eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e30a:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
9001e30e:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
9001e312:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001e316:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9001e31a:	bfdb      	ittet	le
9001e31c:	b29a      	uxthle	r2, r3
9001e31e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001e322:	2201      	movgt	r2, #1
9001e324:	fb91 f2f2 	sdivle	r2, r1, r2
9001e328:	9202      	str	r2, [sp, #8]
9001e32a:	9802      	ldr	r0, [sp, #8]
9001e32c:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
9001e330:	9902      	ldr	r1, [sp, #8]
9001e332:	fb92 f0f0 	sdiv	r0, r2, r0
9001e336:	b280      	uxth	r0, r0
9001e338:	440c      	add	r4, r1
9001e33a:	900f      	str	r0, [sp, #60]	@ 0x3c
9001e33c:	3c01      	subs	r4, #1
9001e33e:	9802      	ldr	r0, [sp, #8]
9001e340:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
9001e342:	fb05 2510 	mls	r5, r5, r0, r2
9001e346:	fb94 f4f1 	sdiv	r4, r4, r1
9001e34a:	fb15 f503 	smulbb	r5, r5, r3
9001e34e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
9001e352:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
9001e356:	3401      	adds	r4, #1
9001e358:	440d      	add	r5, r1
9001e35a:	4419      	add	r1, r3
9001e35c:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
9001e360:	b2a4      	uxth	r4, r4
9001e362:	441a      	add	r2, r3
9001e364:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001e368:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
9001e36c:	00a4      	lsls	r4, r4, #2
9001e36e:	9306      	str	r3, [sp, #24]
9001e370:	b2ad      	uxth	r5, r5
9001e372:	4bb3      	ldr	r3, [pc, #716]	@ (9001e640 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
9001e374:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
9001e378:	6818      	ldr	r0, [r3, #0]
9001e37a:	6803      	ldr	r3, [r0, #0]
9001e37c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e37e:	4798      	blx	r3
9001e380:	4bb0      	ldr	r3, [pc, #704]	@ (9001e644 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
9001e382:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
9001e386:	2d00      	cmp	r5, #0
9001e388:	881a      	ldrh	r2, [r3, #0]
9001e38a:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
9001e38e:	fb02 f606 	mul.w	r6, r2, r6
9001e392:	fb02 7101 	mla	r1, r2, r1, r7
9001e396:	9316      	str	r3, [sp, #88]	@ 0x58
9001e398:	eb00 0841 	add.w	r8, r0, r1, lsl #1
9001e39c:	4baa      	ldr	r3, [pc, #680]	@ (9001e648 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
9001e39e:	bf18      	it	ne
9001e3a0:	2100      	movne	r1, #0
9001e3a2:	eb08 0246 	add.w	r2, r8, r6, lsl #1
9001e3a6:	eba3 030b 	sub.w	r3, r3, fp
9001e3aa:	920a      	str	r2, [sp, #40]	@ 0x28
9001e3ac:	f104 0204 	add.w	r2, r4, #4
9001e3b0:	9317      	str	r3, [sp, #92]	@ 0x5c
9001e3b2:	9213      	str	r2, [sp, #76]	@ 0x4c
9001e3b4:	9a06      	ldr	r2, [sp, #24]
9001e3b6:	bf08      	it	eq
9001e3b8:	4611      	moveq	r1, r2
9001e3ba:	2200      	movs	r2, #0
9001e3bc:	b289      	uxth	r1, r1
9001e3be:	920d      	str	r2, [sp, #52]	@ 0x34
9001e3c0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9001e3c2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001e3c4:	fa12 f383 	uxtah	r3, r2, r3
9001e3c8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
9001e3ca:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001e3ce:	3304      	adds	r3, #4
9001e3d0:	9308      	str	r3, [sp, #32]
9001e3d2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001e3d4:	4543      	cmp	r3, r8
9001e3d6:	f240 8168 	bls.w	9001e6aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
9001e3da:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
9001e3de:	f04f 0e01 	mov.w	lr, #1
9001e3e2:	9a02      	ldr	r2, [sp, #8]
9001e3e4:	9808      	ldr	r0, [sp, #32]
9001e3e6:	fbb5 f3f3 	udiv	r3, r5, r3
9001e3ea:	1ad3      	subs	r3, r2, r3
9001e3ec:	7800      	ldrb	r0, [r0, #0]
9001e3ee:	b29b      	uxth	r3, r3
9001e3f0:	9010      	str	r0, [sp, #64]	@ 0x40
9001e3f2:	3001      	adds	r0, #1
9001e3f4:	9314      	str	r3, [sp, #80]	@ 0x50
9001e3f6:	9b08      	ldr	r3, [sp, #32]
9001e3f8:	9007      	str	r0, [sp, #28]
9001e3fa:	785a      	ldrb	r2, [r3, #1]
9001e3fc:	789b      	ldrb	r3, [r3, #2]
9001e3fe:	021b      	lsls	r3, r3, #8
9001e400:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001e404:	9a08      	ldr	r2, [sp, #32]
9001e406:	78d2      	ldrb	r2, [r2, #3]
9001e408:	4313      	orrs	r3, r2
9001e40a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
9001e40c:	441a      	add	r2, r3
9001e40e:	1c50      	adds	r0, r2, #1
9001e410:	7852      	ldrb	r2, [r2, #1]
9001e412:	9005      	str	r0, [sp, #20]
9001e414:	0212      	lsls	r2, r2, #8
9001e416:	9811      	ldr	r0, [sp, #68]	@ 0x44
9001e418:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
9001e41c:	5cc3      	ldrb	r3, [r0, r3]
9001e41e:	431a      	orrs	r2, r3
9001e420:	b293      	uxth	r3, r2
9001e422:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
9001e426:	930b      	str	r3, [sp, #44]	@ 0x2c
9001e428:	2300      	movs	r3, #0
9001e42a:	9309      	str	r3, [sp, #36]	@ 0x24
9001e42c:	2301      	movs	r3, #1
9001e42e:	9301      	str	r3, [sp, #4]
9001e430:	9304      	str	r3, [sp, #16]
9001e432:	2300      	movs	r3, #0
9001e434:	9303      	str	r3, [sp, #12]
9001e436:	2d00      	cmp	r5, #0
9001e438:	d07d      	beq.n	9001e536 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
9001e43a:	45ae      	cmp	lr, r5
9001e43c:	d26c      	bcs.n	9001e518 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
9001e43e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001e440:	eba5 050e 	sub.w	r5, r5, lr
9001e444:	460c      	mov	r4, r1
9001e446:	4543      	cmp	r3, r8
9001e448:	b2ad      	uxth	r5, r5
9001e44a:	d802      	bhi.n	9001e452 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
9001e44c:	e071      	b.n	9001e532 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
9001e44e:	2b00      	cmp	r3, #0
9001e450:	d15d      	bne.n	9001e50e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
9001e452:	9b05      	ldr	r3, [sp, #20]
9001e454:	9a04      	ldr	r2, [sp, #16]
9001e456:	785b      	ldrb	r3, [r3, #1]
9001e458:	f1c2 0207 	rsb	r2, r2, #7
9001e45c:	9904      	ldr	r1, [sp, #16]
9001e45e:	4093      	lsls	r3, r2
9001e460:	005b      	lsls	r3, r3, #1
9001e462:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001e466:	9b05      	ldr	r3, [sp, #20]
9001e468:	781b      	ldrb	r3, [r3, #0]
9001e46a:	410b      	asrs	r3, r1
9001e46c:	3101      	adds	r1, #1
9001e46e:	b2c9      	uxtb	r1, r1
9001e470:	b2db      	uxtb	r3, r3
9001e472:	2908      	cmp	r1, #8
9001e474:	9104      	str	r1, [sp, #16]
9001e476:	9905      	ldr	r1, [sp, #20]
9001e478:	ea43 0302 	orr.w	r3, r3, r2
9001e47c:	bf0c      	ite	eq
9001e47e:	3102      	addeq	r1, #2
9001e480:	3101      	addne	r1, #1
9001e482:	b29a      	uxth	r2, r3
9001e484:	bf05      	ittet	eq
9001e486:	9105      	streq	r1, [sp, #20]
9001e488:	2100      	moveq	r1, #0
9001e48a:	9105      	strne	r1, [sp, #20]
9001e48c:	9104      	streq	r1, [sp, #16]
9001e48e:	9910      	ldr	r1, [sp, #64]	@ 0x40
9001e490:	4291      	cmp	r1, r2
9001e492:	d30a      	bcc.n	9001e4aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
9001e494:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
9001e498:	2301      	movs	r3, #1
9001e49a:	9907      	ldr	r1, [sp, #28]
9001e49c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9001e4a0:	d30f      	bcc.n	9001e4c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001e4a2:	2100      	movs	r1, #0
9001e4a4:	9301      	str	r3, [sp, #4]
9001e4a6:	9103      	str	r1, [sp, #12]
9001e4a8:	e032      	b.n	9001e510 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
9001e4aa:	9b07      	ldr	r3, [sp, #28]
9001e4ac:	429a      	cmp	r2, r3
9001e4ae:	d318      	bcc.n	9001e4e2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
9001e4b0:	9b01      	ldr	r3, [sp, #4]
9001e4b2:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
9001e4b6:	445b      	add	r3, fp
9001e4b8:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
9001e4bc:	9b01      	ldr	r3, [sp, #4]
9001e4be:	3301      	adds	r3, #1
9001e4c0:	b29b      	uxth	r3, r3
9001e4c2:	9907      	ldr	r1, [sp, #28]
9001e4c4:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
9001e4c8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001e4cc:	7108      	strb	r0, [r1, #4]
9001e4ce:	980b      	ldr	r0, [sp, #44]	@ 0x2c
9001e4d0:	80c8      	strh	r0, [r1, #6]
9001e4d2:	9801      	ldr	r0, [sp, #4]
9001e4d4:	3001      	adds	r0, #1
9001e4d6:	7148      	strb	r0, [r1, #5]
9001e4d8:	9907      	ldr	r1, [sp, #28]
9001e4da:	3101      	adds	r1, #1
9001e4dc:	b289      	uxth	r1, r1
9001e4de:	9107      	str	r1, [sp, #28]
9001e4e0:	e7df      	b.n	9001e4a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
9001e4e2:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
9001e4e6:	4611      	mov	r1, r2
9001e4e8:	795b      	ldrb	r3, [r3, #5]
9001e4ea:	f603 0004 	addw	r0, r3, #2052	@ 0x804
9001e4ee:	4458      	add	r0, fp
9001e4f0:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
9001e4f2:	4406      	add	r6, r0
9001e4f4:	2e00      	cmp	r6, #0
9001e4f6:	dd06      	ble.n	9001e506 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
9001e4f8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
9001e4fc:	790e      	ldrb	r6, [r1, #4]
9001e4fe:	f800 6d01 	strb.w	r6, [r0, #-1]!
9001e502:	88c9      	ldrh	r1, [r1, #6]
9001e504:	e7f4      	b.n	9001e4f0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
9001e506:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
9001e50a:	b29b      	uxth	r3, r3
9001e50c:	e7c5      	b.n	9001e49a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
9001e50e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001e510:	4621      	mov	r1, r4
9001e512:	920b      	str	r2, [sp, #44]	@ 0x2c
9001e514:	469e      	mov	lr, r3
9001e516:	e78e      	b.n	9001e436 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
9001e518:	9a03      	ldr	r2, [sp, #12]
9001e51a:	ebae 0305 	sub.w	r3, lr, r5
9001e51e:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001e522:	442a      	add	r2, r5
9001e524:	b29b      	uxth	r3, r3
9001e526:	b292      	uxth	r2, r2
9001e528:	9203      	str	r2, [sp, #12]
9001e52a:	2500      	movs	r5, #0
9001e52c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001e52e:	4542      	cmp	r2, r8
9001e530:	d88d      	bhi.n	9001e44e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
9001e532:	4621      	mov	r1, r4
9001e534:	e74d      	b.n	9001e3d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
9001e536:	458e      	cmp	lr, r1
9001e538:	f04f 0900 	mov.w	r9, #0
9001e53c:	bf2b      	itete	cs
9001e53e:	ebae 0301 	subcs.w	r3, lr, r1
9001e542:	eba1 040e 	subcc.w	r4, r1, lr
9001e546:	462c      	movcs	r4, r5
9001e548:	462b      	movcc	r3, r5
9001e54a:	bf27      	ittee	cs
9001e54c:	b29b      	uxthcs	r3, r3
9001e54e:	910c      	strcs	r1, [sp, #48]	@ 0x30
9001e550:	b2a4      	uxthcc	r4, r4
9001e552:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
9001e556:	9a03      	ldr	r2, [sp, #12]
9001e558:	980c      	ldr	r0, [sp, #48]	@ 0x30
9001e55a:	444a      	add	r2, r9
9001e55c:	4548      	cmp	r0, r9
9001e55e:	b292      	uxth	r2, r2
9001e560:	d074      	beq.n	9001e64c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
9001e562:	2004      	movs	r0, #4
9001e564:	445a      	add	r2, fp
9001e566:	4605      	mov	r5, r0
9001e568:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
9001e56c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001e56e:	fb15 0202 	smlabb	r2, r5, r2, r0
9001e572:	9812      	ldr	r0, [sp, #72]	@ 0x48
9001e574:	5880      	ldr	r0, [r0, r2]
9001e576:	ea5f 6a10 	movs.w	sl, r0, lsr #24
9001e57a:	d014      	beq.n	9001e5a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001e57c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001e580:	ea4f 2510 	mov.w	r5, r0, lsr #8
9001e584:	d112      	bne.n	9001e5ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001e586:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001e588:	2aff      	cmp	r2, #255	@ 0xff
9001e58a:	d10f      	bne.n	9001e5ac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
9001e58c:	0942      	lsrs	r2, r0, #5
9001e58e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
9001e592:	f3c0 00c4 	ubfx	r0, r0, #3, #5
9001e596:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001e59a:	f025 0507 	bic.w	r5, r5, #7
9001e59e:	4315      	orrs	r5, r2
9001e5a0:	4305      	orrs	r5, r0
9001e5a2:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
9001e5a6:	f109 0901 	add.w	r9, r9, #1
9001e5aa:	e7d4      	b.n	9001e556 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
9001e5ac:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
9001e5b0:	b2ed      	uxtb	r5, r5
9001e5b2:	ea4f 06ec 	mov.w	r6, ip, asr #3
9001e5b6:	ea4f 272c 	mov.w	r7, ip, asr #8
9001e5ba:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
9001e5be:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001e5c2:	f3c0 4607 	ubfx	r6, r0, #16, #8
9001e5c6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001e5ca:	9215      	str	r2, [sp, #84]	@ 0x54
9001e5cc:	fa5f fc8c 	uxtb.w	ip, ip
9001e5d0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9001e5d2:	b2c0      	uxtb	r0, r0
9001e5d4:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001e5d8:	fb02 fa0a 	mul.w	sl, r2, sl
9001e5dc:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
9001e5e0:	f10a 0201 	add.w	r2, sl, #1
9001e5e4:	eb02 222a 	add.w	r2, r2, sl, asr #8
9001e5e8:	1212      	asrs	r2, r2, #8
9001e5ea:	fa1f fa82 	uxth.w	sl, r2
9001e5ee:	43d2      	mvns	r2, r2
9001e5f0:	fb16 f60a 	smulbb	r6, r6, sl
9001e5f4:	b2d2      	uxtb	r2, r2
9001e5f6:	fb10 f00a 	smulbb	r0, r0, sl
9001e5fa:	fb07 6702 	mla	r7, r7, r2, r6
9001e5fe:	9e15      	ldr	r6, [sp, #84]	@ 0x54
9001e600:	fb0c 0002 	mla	r0, ip, r2, r0
9001e604:	fb15 f50a 	smulbb	r5, r5, sl
9001e608:	b2bf      	uxth	r7, r7
9001e60a:	b280      	uxth	r0, r0
9001e60c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001e610:	fb06 5602 	mla	r6, r6, r2, r5
9001e614:	1c7a      	adds	r2, r7, #1
9001e616:	1c45      	adds	r5, r0, #1
9001e618:	eb02 2717 	add.w	r7, r2, r7, lsr #8
9001e61c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
9001e620:	b2b6      	uxth	r6, r6
9001e622:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
9001e626:	f3c5 25c4 	ubfx	r5, r5, #11, #5
9001e62a:	432f      	orrs	r7, r5
9001e62c:	1c75      	adds	r5, r6, #1
9001e62e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
9001e632:	096d      	lsrs	r5, r5, #5
9001e634:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001e638:	432f      	orrs	r7, r5
9001e63a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
9001e63e:	e7b2      	b.n	9001e5a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
9001e640:	2402198c 	.word	0x2402198c
9001e644:	24021986 	.word	0x24021986
9001e648:	fffff7fb 	.word	0xfffff7fb
9001e64c:	9203      	str	r2, [sp, #12]
9001e64e:	458e      	cmp	lr, r1
9001e650:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001e652:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001e656:	f4ff af68 	bcc.w	9001e52a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
9001e65a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
9001e65c:	9906      	ldr	r1, [sp, #24]
9001e65e:	8812      	ldrh	r2, [r2, #0]
9001e660:	1a52      	subs	r2, r2, r1
9001e662:	9914      	ldr	r1, [sp, #80]	@ 0x50
9001e664:	eb08 0842 	add.w	r8, r8, r2, lsl #1
9001e668:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001e66a:	3201      	adds	r2, #1
9001e66c:	428a      	cmp	r2, r1
9001e66e:	9209      	str	r2, [sp, #36]	@ 0x24
9001e670:	d111      	bne.n	9001e696 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
9001e672:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
9001e676:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
9001e67a:	9b06      	ldr	r3, [sp, #24]
9001e67c:	eba5 0509 	sub.w	r5, r5, r9
9001e680:	b2ad      	uxth	r5, r5
9001e682:	2d00      	cmp	r5, #0
9001e684:	bf08      	it	eq
9001e686:	4619      	moveq	r1, r3
9001e688:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001e68a:	bf18      	it	ne
9001e68c:	2100      	movne	r1, #0
9001e68e:	3301      	adds	r3, #1
9001e690:	b289      	uxth	r1, r1
9001e692:	930d      	str	r3, [sp, #52]	@ 0x34
9001e694:	e694      	b.n	9001e3c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
9001e696:	f8bd 4018 	ldrh.w	r4, [sp, #24]
9001e69a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
9001e69e:	1b2d      	subs	r5, r5, r4
9001e6a0:	b2ad      	uxth	r5, r5
9001e6a2:	2d00      	cmp	r5, #0
9001e6a4:	bf18      	it	ne
9001e6a6:	2400      	movne	r4, #0
9001e6a8:	e740      	b.n	9001e52c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
9001e6aa:	4b04      	ldr	r3, [pc, #16]	@ (9001e6bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
9001e6ac:	6818      	ldr	r0, [r3, #0]
9001e6ae:	6803      	ldr	r3, [r0, #0]
9001e6b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001e6b2:	4798      	blx	r3
9001e6b4:	b01d      	add	sp, #116	@ 0x74
9001e6b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001e6ba:	bf00      	nop
9001e6bc:	2402198c 	.word	0x2402198c

9001e6c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
9001e6c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001e6c4:	b09f      	sub	sp, #124	@ 0x7c
9001e6c6:	461d      	mov	r5, r3
9001e6c8:	4604      	mov	r4, r0
9001e6ca:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9001e6cc:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
9001e6d0:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
9001e6d4:	920a      	str	r2, [sp, #40]	@ 0x28
9001e6d6:	2a00      	cmp	r2, #0
9001e6d8:	f000 81fe 	beq.w	9001ead8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
9001e6dc:	6828      	ldr	r0, [r5, #0]
9001e6de:	aa1a      	add	r2, sp, #104	@ 0x68
9001e6e0:	6869      	ldr	r1, [r5, #4]
9001e6e2:	c203      	stmia	r2!, {r0, r1}
9001e6e4:	6818      	ldr	r0, [r3, #0]
9001e6e6:	aa1c      	add	r2, sp, #112	@ 0x70
9001e6e8:	6859      	ldr	r1, [r3, #4]
9001e6ea:	c203      	stmia	r2!, {r0, r1}
9001e6ec:	a81a      	add	r0, sp, #104	@ 0x68
9001e6ee:	f7f7 fbbb 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001e6f2:	4629      	mov	r1, r5
9001e6f4:	a81c      	add	r0, sp, #112	@ 0x70
9001e6f6:	f7f7 fbdf 	bl	90015eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001e6fa:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
9001e6fe:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
9001e702:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
9001e706:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
9001e70a:	bfdb      	ittet	le
9001e70c:	b29a      	uxthle	r2, r3
9001e70e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
9001e712:	2201      	movgt	r2, #1
9001e714:	fb91 f2f2 	sdivle	r2, r1, r2
9001e718:	9201      	str	r2, [sp, #4]
9001e71a:	9801      	ldr	r0, [sp, #4]
9001e71c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
9001e720:	9901      	ldr	r1, [sp, #4]
9001e722:	fb92 f0f0 	sdiv	r0, r2, r0
9001e726:	b280      	uxth	r0, r0
9001e728:	440e      	add	r6, r1
9001e72a:	9010      	str	r0, [sp, #64]	@ 0x40
9001e72c:	3e01      	subs	r6, #1
9001e72e:	9801      	ldr	r0, [sp, #4]
9001e730:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9001e732:	fb05 2510 	mls	r5, r5, r0, r2
9001e736:	fb96 f6f1 	sdiv	r6, r6, r1
9001e73a:	fb15 f503 	smulbb	r5, r5, r3
9001e73e:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
9001e742:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
9001e746:	3601      	adds	r6, #1
9001e748:	440d      	add	r5, r1
9001e74a:	4419      	add	r1, r3
9001e74c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
9001e750:	b2b6      	uxth	r6, r6
9001e752:	441a      	add	r2, r3
9001e754:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
9001e758:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
9001e75c:	b2ad      	uxth	r5, r5
9001e75e:	9304      	str	r3, [sp, #16]
9001e760:	4b96      	ldr	r3, [pc, #600]	@ (9001e9bc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
9001e762:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
9001e766:	6818      	ldr	r0, [r3, #0]
9001e768:	6803      	ldr	r3, [r0, #0]
9001e76a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001e76c:	4798      	blx	r3
9001e76e:	4b94      	ldr	r3, [pc, #592]	@ (9001e9c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
9001e770:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
9001e774:	2d00      	cmp	r5, #0
9001e776:	881a      	ldrh	r2, [r3, #0]
9001e778:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
9001e77c:	fb02 f707 	mul.w	r7, r2, r7
9001e780:	fb02 c101 	mla	r1, r2, r1, ip
9001e784:	9318      	str	r3, [sp, #96]	@ 0x60
9001e786:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
9001e78a:	4b8e      	ldr	r3, [pc, #568]	@ (9001e9c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
9001e78c:	bf18      	it	ne
9001e78e:	2100      	movne	r1, #0
9001e790:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
9001e794:	eba3 0304 	sub.w	r3, r3, r4
9001e798:	920b      	str	r2, [sp, #44]	@ 0x2c
9001e79a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001e79c:	9319      	str	r3, [sp, #100]	@ 0x64
9001e79e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
9001e7a2:	f106 0204 	add.w	r2, r6, #4
9001e7a6:	9206      	str	r2, [sp, #24]
9001e7a8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
9001e7aa:	ea6f 0202 	mvn.w	r2, r2
9001e7ae:	b2d2      	uxtb	r2, r2
9001e7b0:	9215      	str	r2, [sp, #84]	@ 0x54
9001e7b2:	9a04      	ldr	r2, [sp, #16]
9001e7b4:	bf08      	it	eq
9001e7b6:	4611      	moveq	r1, r2
9001e7b8:	2200      	movs	r2, #0
9001e7ba:	b289      	uxth	r1, r1
9001e7bc:	920d      	str	r2, [sp, #52]	@ 0x34
9001e7be:	9a10      	ldr	r2, [sp, #64]	@ 0x40
9001e7c0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001e7c2:	fa12 f383 	uxtah	r3, r2, r3
9001e7c6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9001e7c8:	eb02 0383 	add.w	r3, r2, r3, lsl #2
9001e7cc:	3304      	adds	r3, #4
9001e7ce:	9307      	str	r3, [sp, #28]
9001e7d0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001e7d2:	455b      	cmp	r3, fp
9001e7d4:	f240 817b 	bls.w	9001eace <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
9001e7d8:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
9001e7dc:	f04f 0801 	mov.w	r8, #1
9001e7e0:	9a01      	ldr	r2, [sp, #4]
9001e7e2:	9807      	ldr	r0, [sp, #28]
9001e7e4:	46c4      	mov	ip, r8
9001e7e6:	f8cd 8008 	str.w	r8, [sp, #8]
9001e7ea:	7800      	ldrb	r0, [r0, #0]
9001e7ec:	fbb5 f3f3 	udiv	r3, r5, r3
9001e7f0:	1ad3      	subs	r3, r2, r3
9001e7f2:	9011      	str	r0, [sp, #68]	@ 0x44
9001e7f4:	3001      	adds	r0, #1
9001e7f6:	b29b      	uxth	r3, r3
9001e7f8:	9005      	str	r0, [sp, #20]
9001e7fa:	9316      	str	r3, [sp, #88]	@ 0x58
9001e7fc:	9b07      	ldr	r3, [sp, #28]
9001e7fe:	785a      	ldrb	r2, [r3, #1]
9001e800:	789b      	ldrb	r3, [r3, #2]
9001e802:	021b      	lsls	r3, r3, #8
9001e804:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
9001e808:	9a07      	ldr	r2, [sp, #28]
9001e80a:	78d2      	ldrb	r2, [r2, #3]
9001e80c:	4313      	orrs	r3, r2
9001e80e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
9001e810:	441a      	add	r2, r3
9001e812:	1c50      	adds	r0, r2, #1
9001e814:	7852      	ldrb	r2, [r2, #1]
9001e816:	9003      	str	r0, [sp, #12]
9001e818:	0212      	lsls	r2, r2, #8
9001e81a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
9001e81c:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
9001e820:	5cc3      	ldrb	r3, [r0, r3]
9001e822:	431a      	orrs	r2, r3
9001e824:	b293      	uxth	r3, r2
9001e826:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
9001e82a:	930c      	str	r3, [sp, #48]	@ 0x30
9001e82c:	2300      	movs	r3, #0
9001e82e:	9308      	str	r3, [sp, #32]
9001e830:	461a      	mov	r2, r3
9001e832:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
9001e836:	930e      	str	r3, [sp, #56]	@ 0x38
9001e838:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
9001e83c:	930f      	str	r3, [sp, #60]	@ 0x3c
9001e83e:	2d00      	cmp	r5, #0
9001e840:	d07d      	beq.n	9001e93e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
9001e842:	45ac      	cmp	ip, r5
9001e844:	d26d      	bcs.n	9001e922 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
9001e846:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001e848:	eba5 050c 	sub.w	r5, r5, ip
9001e84c:	4608      	mov	r0, r1
9001e84e:	455b      	cmp	r3, fp
9001e850:	b2ad      	uxth	r5, r5
9001e852:	d802      	bhi.n	9001e85a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
9001e854:	e071      	b.n	9001e93a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
9001e856:	2b00      	cmp	r3, #0
9001e858:	d15d      	bne.n	9001e916 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
9001e85a:	9b03      	ldr	r3, [sp, #12]
9001e85c:	9a02      	ldr	r2, [sp, #8]
9001e85e:	785b      	ldrb	r3, [r3, #1]
9001e860:	f1c2 0207 	rsb	r2, r2, #7
9001e864:	9902      	ldr	r1, [sp, #8]
9001e866:	4093      	lsls	r3, r2
9001e868:	005b      	lsls	r3, r3, #1
9001e86a:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
9001e86e:	9b03      	ldr	r3, [sp, #12]
9001e870:	781b      	ldrb	r3, [r3, #0]
9001e872:	410b      	asrs	r3, r1
9001e874:	3101      	adds	r1, #1
9001e876:	b2c9      	uxtb	r1, r1
9001e878:	b2db      	uxtb	r3, r3
9001e87a:	2908      	cmp	r1, #8
9001e87c:	9102      	str	r1, [sp, #8]
9001e87e:	9903      	ldr	r1, [sp, #12]
9001e880:	ea43 0302 	orr.w	r3, r3, r2
9001e884:	bf0c      	ite	eq
9001e886:	3102      	addeq	r1, #2
9001e888:	3101      	addne	r1, #1
9001e88a:	b29a      	uxth	r2, r3
9001e88c:	bf05      	ittet	eq
9001e88e:	9103      	streq	r1, [sp, #12]
9001e890:	2100      	moveq	r1, #0
9001e892:	9103      	strne	r1, [sp, #12]
9001e894:	9102      	streq	r1, [sp, #8]
9001e896:	9911      	ldr	r1, [sp, #68]	@ 0x44
9001e898:	4291      	cmp	r1, r2
9001e89a:	d30a      	bcc.n	9001e8b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
9001e89c:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
9001e8a0:	2301      	movs	r3, #1
9001e8a2:	9905      	ldr	r1, [sp, #20]
9001e8a4:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
9001e8a8:	d30f      	bcc.n	9001e8ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
9001e8aa:	2100      	movs	r1, #0
9001e8ac:	4698      	mov	r8, r3
9001e8ae:	9100      	str	r1, [sp, #0]
9001e8b0:	e032      	b.n	9001e918 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
9001e8b2:	9b05      	ldr	r3, [sp, #20]
9001e8b4:	429a      	cmp	r2, r3
9001e8b6:	d318      	bcc.n	9001e8ea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
9001e8b8:	eb04 0308 	add.w	r3, r4, r8
9001e8bc:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
9001e8c0:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
9001e8c4:	f108 0301 	add.w	r3, r8, #1
9001e8c8:	b29b      	uxth	r3, r3
9001e8ca:	9905      	ldr	r1, [sp, #20]
9001e8cc:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
9001e8d0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001e8d4:	710e      	strb	r6, [r1, #4]
9001e8d6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9001e8d8:	80ce      	strh	r6, [r1, #6]
9001e8da:	f108 0601 	add.w	r6, r8, #1
9001e8de:	714e      	strb	r6, [r1, #5]
9001e8e0:	9905      	ldr	r1, [sp, #20]
9001e8e2:	3101      	adds	r1, #1
9001e8e4:	b289      	uxth	r1, r1
9001e8e6:	9105      	str	r1, [sp, #20]
9001e8e8:	e7df      	b.n	9001e8aa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
9001e8ea:	eb04 0382 	add.w	r3, r4, r2, lsl #2
9001e8ee:	4611      	mov	r1, r2
9001e8f0:	795b      	ldrb	r3, [r3, #5]
9001e8f2:	f603 0604 	addw	r6, r3, #2052	@ 0x804
9001e8f6:	4426      	add	r6, r4
9001e8f8:	9f19      	ldr	r7, [sp, #100]	@ 0x64
9001e8fa:	4437      	add	r7, r6
9001e8fc:	2f00      	cmp	r7, #0
9001e8fe:	dd06      	ble.n	9001e90e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
9001e900:	eb04 0181 	add.w	r1, r4, r1, lsl #2
9001e904:	790f      	ldrb	r7, [r1, #4]
9001e906:	f806 7d01 	strb.w	r7, [r6, #-1]!
9001e90a:	88c9      	ldrh	r1, [r1, #6]
9001e90c:	e7f4      	b.n	9001e8f8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
9001e90e:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
9001e912:	b29b      	uxth	r3, r3
9001e914:	e7c5      	b.n	9001e8a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
9001e916:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9001e918:	920c      	str	r2, [sp, #48]	@ 0x30
9001e91a:	4601      	mov	r1, r0
9001e91c:	9a00      	ldr	r2, [sp, #0]
9001e91e:	469c      	mov	ip, r3
9001e920:	e78d      	b.n	9001e83e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
9001e922:	ebac 0305 	sub.w	r3, ip, r5
9001e926:	1957      	adds	r7, r2, r5
9001e928:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001e92c:	b2ba      	uxth	r2, r7
9001e92e:	b29b      	uxth	r3, r3
9001e930:	9200      	str	r2, [sp, #0]
9001e932:	2500      	movs	r5, #0
9001e934:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9001e936:	455a      	cmp	r2, fp
9001e938:	d88d      	bhi.n	9001e856 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
9001e93a:	4601      	mov	r1, r0
9001e93c:	e748      	b.n	9001e7d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
9001e93e:	458c      	cmp	ip, r1
9001e940:	bf27      	ittee	cs
9001e942:	ebac 0301 	subcs.w	r3, ip, r1
9001e946:	4628      	movcs	r0, r5
9001e948:	eba1 000c 	subcc.w	r0, r1, ip
9001e94c:	462b      	movcc	r3, r5
9001e94e:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
9001e950:	bf27      	ittee	cs
9001e952:	b29b      	uxthcs	r3, r3
9001e954:	9109      	strcs	r1, [sp, #36]	@ 0x24
9001e956:	b280      	uxthcc	r0, r0
9001e958:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
9001e95c:	2dff      	cmp	r5, #255	@ 0xff
9001e95e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9001e960:	eb02 0705 	add.w	r7, r2, r5
9001e964:	b2bd      	uxth	r5, r7
9001e966:	9500      	str	r5, [sp, #0]
9001e968:	d12e      	bne.n	9001e9c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
9001e96a:	465e      	mov	r6, fp
9001e96c:	9d00      	ldr	r5, [sp, #0]
9001e96e:	42aa      	cmp	r2, r5
9001e970:	f040 8083 	bne.w	9001ea7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
9001e974:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9001e976:	458c      	cmp	ip, r1
9001e978:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001e97c:	d3d9      	bcc.n	9001e932 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
9001e97e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
9001e980:	9904      	ldr	r1, [sp, #16]
9001e982:	8812      	ldrh	r2, [r2, #0]
9001e984:	1a52      	subs	r2, r2, r1
9001e986:	9916      	ldr	r1, [sp, #88]	@ 0x58
9001e988:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
9001e98c:	9a08      	ldr	r2, [sp, #32]
9001e98e:	3201      	adds	r2, #1
9001e990:	428a      	cmp	r2, r1
9001e992:	9208      	str	r2, [sp, #32]
9001e994:	f040 8091 	bne.w	9001eaba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
9001e998:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
9001e99c:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
9001e9a0:	9b04      	ldr	r3, [sp, #16]
9001e9a2:	eba5 050c 	sub.w	r5, r5, ip
9001e9a6:	b2ad      	uxth	r5, r5
9001e9a8:	2d00      	cmp	r5, #0
9001e9aa:	bf08      	it	eq
9001e9ac:	4619      	moveq	r1, r3
9001e9ae:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001e9b0:	bf18      	it	ne
9001e9b2:	2100      	movne	r1, #0
9001e9b4:	3301      	adds	r3, #1
9001e9b6:	b289      	uxth	r1, r1
9001e9b8:	930d      	str	r3, [sp, #52]	@ 0x34
9001e9ba:	e700      	b.n	9001e7be <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
9001e9bc:	2402198c 	.word	0x2402198c
9001e9c0:	24021986 	.word	0x24021986
9001e9c4:	fffff7fb 	.word	0xfffff7fb
9001e9c8:	46d9      	mov	r9, fp
9001e9ca:	9d00      	ldr	r5, [sp, #0]
9001e9cc:	42aa      	cmp	r2, r5
9001e9ce:	d0d1      	beq.n	9001e974 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
9001e9d0:	1c55      	adds	r5, r2, #1
9001e9d2:	4422      	add	r2, r4
9001e9d4:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
9001e9d8:	9a06      	ldr	r2, [sp, #24]
9001e9da:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
9001e9de:	9517      	str	r5, [sp, #92]	@ 0x5c
9001e9e0:	4472      	add	r2, lr
9001e9e2:	9212      	str	r2, [sp, #72]	@ 0x48
9001e9e4:	f8b9 2000 	ldrh.w	r2, [r9]
9001e9e8:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001e9ea:	1216      	asrs	r6, r2, #8
9001e9ec:	f897 a002 	ldrb.w	sl, [r7, #2]
9001e9f0:	10d5      	asrs	r5, r2, #3
9001e9f2:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001e9f4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001e9f8:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001e9fc:	00d2      	lsls	r2, r2, #3
9001e9fe:	fb1a fa07 	smulbb	sl, sl, r7
9001ea02:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001ea06:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001ea08:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001ea0c:	b2d2      	uxtb	r2, r2
9001ea0e:	fb06 a607 	mla	r6, r6, r7, sl
9001ea12:	9f12      	ldr	r7, [sp, #72]	@ 0x48
9001ea14:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001ea18:	f897 a001 	ldrb.w	sl, [r7, #1]
9001ea1c:	b2b6      	uxth	r6, r6
9001ea1e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001ea20:	fb1a fa07 	smulbb	sl, sl, r7
9001ea24:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001ea26:	fb05 a507 	mla	r5, r5, r7, sl
9001ea2a:	9f06      	ldr	r7, [sp, #24]
9001ea2c:	f106 0a01 	add.w	sl, r6, #1
9001ea30:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001ea34:	b2ad      	uxth	r5, r5
9001ea36:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
9001ea38:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001ea3c:	f105 0a01 	add.w	sl, r5, #1
9001ea40:	fb1e fe07 	smulbb	lr, lr, r7
9001ea44:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
9001ea46:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
9001ea4a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
9001ea4e:	fb02 e207 	mla	r2, r2, r7, lr
9001ea52:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
9001ea56:	b292      	uxth	r2, r2
9001ea58:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
9001ea5c:	f102 0e01 	add.w	lr, r2, #1
9001ea60:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
9001ea64:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
9001ea68:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001ea6c:	ea4e 0606 	orr.w	r6, lr, r6
9001ea70:	ea46 060a 	orr.w	r6, r6, sl
9001ea74:	f829 6b02 	strh.w	r6, [r9], #2
9001ea78:	e7a7      	b.n	9001e9ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
9001ea7a:	f102 0e01 	add.w	lr, r2, #1
9001ea7e:	4422      	add	r2, r4
9001ea80:	9f06      	ldr	r7, [sp, #24]
9001ea82:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
9001ea86:	9a06      	ldr	r2, [sp, #24]
9001ea88:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9001ea8c:	eb02 0a05 	add.w	sl, r2, r5
9001ea90:	4a13      	ldr	r2, [pc, #76]	@ (9001eae0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
9001ea92:	f89a 9002 	ldrb.w	r9, [sl, #2]
9001ea96:	ea02 2909 	and.w	r9, r2, r9, lsl #8
9001ea9a:	f89a 2001 	ldrb.w	r2, [sl, #1]
9001ea9e:	00d2      	lsls	r2, r2, #3
9001eaa0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9001eaa4:	ea49 0202 	orr.w	r2, r9, r2
9001eaa8:	f817 9005 	ldrb.w	r9, [r7, r5]
9001eaac:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
9001eab0:	f826 2b02 	strh.w	r2, [r6], #2
9001eab4:	fa1f f28e 	uxth.w	r2, lr
9001eab8:	e758      	b.n	9001e96c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
9001eaba:	f8bd 0010 	ldrh.w	r0, [sp, #16]
9001eabe:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
9001eac2:	1a2d      	subs	r5, r5, r0
9001eac4:	b2ad      	uxth	r5, r5
9001eac6:	2d00      	cmp	r5, #0
9001eac8:	bf18      	it	ne
9001eaca:	2000      	movne	r0, #0
9001eacc:	e732      	b.n	9001e934 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
9001eace:	4b05      	ldr	r3, [pc, #20]	@ (9001eae4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
9001ead0:	6818      	ldr	r0, [r3, #0]
9001ead2:	6803      	ldr	r3, [r0, #0]
9001ead4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001ead6:	4798      	blx	r3
9001ead8:	b01f      	add	sp, #124	@ 0x7c
9001eada:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001eade:	bf00      	nop
9001eae0:	fffff800 	.word	0xfffff800
9001eae4:	2402198c 	.word	0x2402198c

9001eae8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
9001eae8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001eaec:	b091      	sub	sp, #68	@ 0x44
9001eaee:	469b      	mov	fp, r3
9001eaf0:	4616      	mov	r6, r2
9001eaf2:	f9b3 2000 	ldrsh.w	r2, [r3]
9001eaf6:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
9001eafa:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
9001eafe:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
9001eb02:	4604      	mov	r4, r0
9001eb04:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
9001eb08:	4640      	mov	r0, r8
9001eb0a:	460d      	mov	r5, r1
9001eb0c:	4659      	mov	r1, fp
9001eb0e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9001eb12:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001eb16:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
9001eb1a:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
9001eb1e:	f7f1 fb3b 	bl	90010198 <_ZN8touchgfx4RectaNERKS0_>
9001eb22:	4631      	mov	r1, r6
9001eb24:	4640      	mov	r0, r8
9001eb26:	f7f1 fb37 	bl	90010198 <_ZN8touchgfx4RectaNERKS0_>
9001eb2a:	4b74      	ldr	r3, [pc, #464]	@ (9001ecfc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
9001eb2c:	8818      	ldrh	r0, [r3, #0]
9001eb2e:	4b74      	ldr	r3, [pc, #464]	@ (9001ed00 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
9001eb30:	b202      	sxth	r2, r0
9001eb32:	8819      	ldrh	r1, [r3, #0]
9001eb34:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9001eb38:	b20e      	sxth	r6, r1
9001eb3a:	2b00      	cmp	r3, #0
9001eb3c:	da07      	bge.n	9001eb4e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
9001eb3e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
9001eb42:	4463      	add	r3, ip
9001eb44:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
9001eb48:	2300      	movs	r3, #0
9001eb4a:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
9001eb4e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
9001eb52:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
9001eb56:	1ad2      	subs	r2, r2, r3
9001eb58:	4594      	cmp	ip, r2
9001eb5a:	bfc4      	itt	gt
9001eb5c:	1ac2      	subgt	r2, r0, r3
9001eb5e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
9001eb62:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001eb66:	2a00      	cmp	r2, #0
9001eb68:	da07      	bge.n	9001eb7a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
9001eb6a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
9001eb6e:	4462      	add	r2, ip
9001eb70:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
9001eb74:	2200      	movs	r2, #0
9001eb76:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
9001eb7a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
9001eb7e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9001eb82:	eba6 060a 	sub.w	r6, r6, sl
9001eb86:	42b2      	cmp	r2, r6
9001eb88:	bfc4      	itt	gt
9001eb8a:	eba1 020a 	subgt.w	r2, r1, sl
9001eb8e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
9001eb92:	4a5c      	ldr	r2, [pc, #368]	@ (9001ed04 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
9001eb94:	7812      	ldrb	r2, [r2, #0]
9001eb96:	b9a2      	cbnz	r2, 9001ebc2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
9001eb98:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
9001eb9c:	4286      	cmp	r6, r0
9001eb9e:	4640      	mov	r0, r8
9001eba0:	9303      	str	r3, [sp, #12]
9001eba2:	bf14      	ite	ne
9001eba4:	2600      	movne	r6, #0
9001eba6:	2601      	moveq	r6, #1
9001eba8:	f7f1 fb39 	bl	9001021e <_ZNK8touchgfx4Rect7isEmptyEv>
9001ebac:	9b03      	ldr	r3, [sp, #12]
9001ebae:	b160      	cbz	r0, 9001ebca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
9001ebb0:	2300      	movs	r3, #0
9001ebb2:	8023      	strh	r3, [r4, #0]
9001ebb4:	8063      	strh	r3, [r4, #2]
9001ebb6:	80a3      	strh	r3, [r4, #4]
9001ebb8:	4620      	mov	r0, r4
9001ebba:	80e3      	strh	r3, [r4, #6]
9001ebbc:	b011      	add	sp, #68	@ 0x44
9001ebbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001ebc2:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
9001ebc6:	428e      	cmp	r6, r1
9001ebc8:	e7e9      	b.n	9001eb9e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
9001ebca:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
9001ebce:	a90e      	add	r1, sp, #56	@ 0x38
9001ebd0:	900e      	str	r0, [sp, #56]	@ 0x38
9001ebd2:	a80c      	add	r0, sp, #48	@ 0x30
9001ebd4:	9205      	str	r2, [sp, #20]
9001ebd6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
9001ebda:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
9001ebde:	9206      	str	r2, [sp, #24]
9001ebe0:	f8bb 2000 	ldrh.w	r2, [fp]
9001ebe4:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
9001ebe8:	1a9b      	subs	r3, r3, r2
9001ebea:	b21b      	sxth	r3, r3
9001ebec:	9303      	str	r3, [sp, #12]
9001ebee:	f8bb 3002 	ldrh.w	r3, [fp, #2]
9001ebf2:	f8df b118 	ldr.w	fp, [pc, #280]	@ 9001ed0c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001ebf6:	ebaa 0a03 	sub.w	sl, sl, r3
9001ebfa:	fa0f f38a 	sxth.w	r3, sl
9001ebfe:	9304      	str	r3, [sp, #16]
9001ec00:	9b03      	ldr	r3, [sp, #12]
9001ec02:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
9001ec06:	9b04      	ldr	r3, [sp, #16]
9001ec08:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001ec0c:	9b05      	ldr	r3, [sp, #20]
9001ec0e:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
9001ec12:	9b06      	ldr	r3, [sp, #24]
9001ec14:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
9001ec18:	f7f7 f94e 	bl	90015eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ec1c:	4640      	mov	r0, r8
9001ec1e:	f7f7 f923 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ec22:	a80e      	add	r0, sp, #56	@ 0x38
9001ec24:	f7f7 f920 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ec28:	4b37      	ldr	r3, [pc, #220]	@ (9001ed08 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
9001ec2a:	4628      	mov	r0, r5
9001ec2c:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
9001ec30:	881b      	ldrh	r3, [r3, #0]
9001ec32:	9307      	str	r3, [sp, #28]
9001ec34:	682b      	ldr	r3, [r5, #0]
9001ec36:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001ec38:	4798      	blx	r3
9001ec3a:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
9001ec3e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
9001ec42:	4681      	mov	r9, r0
9001ec44:	f8db 0000 	ldr.w	r0, [fp]
9001ec48:	fb1a 3305 	smlabb	r3, sl, r5, r3
9001ec4c:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
9001ec4e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
9001ec52:	6803      	ldr	r3, [r0, #0]
9001ec54:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
9001ec56:	4798      	blx	r3
9001ec58:	4607      	mov	r7, r0
9001ec5a:	f8db 0000 	ldr.w	r0, [fp]
9001ec5e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
9001ec62:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001ec66:	6803      	ldr	r3, [r0, #0]
9001ec68:	9109      	str	r1, [sp, #36]	@ 0x24
9001ec6a:	9208      	str	r2, [sp, #32]
9001ec6c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001ec6e:	4798      	blx	r3
9001ec70:	f010 0f01 	tst.w	r0, #1
9001ec74:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
9001ec78:	d012      	beq.n	9001eca0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
9001ec7a:	f8db 0000 	ldr.w	r0, [fp]
9001ec7e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
9001ec82:	6803      	ldr	r3, [r0, #0]
9001ec84:	9200      	str	r2, [sp, #0]
9001ec86:	6f1e      	ldr	r6, [r3, #112]	@ 0x70
9001ec88:	462b      	mov	r3, r5
9001ec8a:	e898 0006 	ldmia.w	r8, {r1, r2}
9001ec8e:	47b0      	blx	r6
9001ec90:	9b03      	ldr	r3, [sp, #12]
9001ec92:	8023      	strh	r3, [r4, #0]
9001ec94:	9b04      	ldr	r3, [sp, #16]
9001ec96:	8063      	strh	r3, [r4, #2]
9001ec98:	9b05      	ldr	r3, [sp, #20]
9001ec9a:	80a3      	strh	r3, [r4, #4]
9001ec9c:	9b06      	ldr	r3, [sp, #24]
9001ec9e:	e78b      	b.n	9001ebb8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
9001eca0:	fb09 f202 	mul.w	r2, r9, r2
9001eca4:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
9001eca8:	eb02 0141 	add.w	r1, r2, r1, lsl #1
9001ecac:	440f      	add	r7, r1
9001ecae:	b166      	cbz	r6, 9001ecca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001ecb0:	9a07      	ldr	r2, [sp, #28]
9001ecb2:	4592      	cmp	sl, r2
9001ecb4:	d109      	bne.n	9001ecca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
9001ecb6:	f8db 0000 	ldr.w	r0, [fp]
9001ecba:	fb09 f303 	mul.w	r3, r9, r3
9001ecbe:	4629      	mov	r1, r5
9001ecc0:	6802      	ldr	r2, [r0, #0]
9001ecc2:	6b96      	ldr	r6, [r2, #56]	@ 0x38
9001ecc4:	463a      	mov	r2, r7
9001ecc6:	47b0      	blx	r6
9001ecc8:	e7e2      	b.n	9001ec90 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001ecca:	fb0a f303 	mul.w	r3, sl, r3
9001ecce:	ea4f 064a 	mov.w	r6, sl, lsl #1
9001ecd2:	f8df b038 	ldr.w	fp, [pc, #56]	@ 9001ed0c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
9001ecd6:	eb05 0843 	add.w	r8, r5, r3, lsl #1
9001ecda:	4545      	cmp	r5, r8
9001ecdc:	d2d8      	bcs.n	9001ec90 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
9001ecde:	f8db 0000 	ldr.w	r0, [fp]
9001ece2:	4629      	mov	r1, r5
9001ece4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001ece8:	4435      	add	r5, r6
9001ecea:	6802      	ldr	r2, [r0, #0]
9001ecec:	005b      	lsls	r3, r3, #1
9001ecee:	f8d2 a038 	ldr.w	sl, [r2, #56]	@ 0x38
9001ecf2:	463a      	mov	r2, r7
9001ecf4:	47d0      	blx	sl
9001ecf6:	444f      	add	r7, r9
9001ecf8:	e7ef      	b.n	9001ecda <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
9001ecfa:	bf00      	nop
9001ecfc:	24021980 	.word	0x24021980
9001ed00:	24021982 	.word	0x24021982
9001ed04:	24021984 	.word	0x24021984
9001ed08:	24021986 	.word	0x24021986
9001ed0c:	2402198c 	.word	0x2402198c

9001ed10 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
9001ed10:	b5f0      	push	{r4, r5, r6, r7, lr}
9001ed12:	4606      	mov	r6, r0
9001ed14:	b087      	sub	sp, #28
9001ed16:	460c      	mov	r4, r1
9001ed18:	4617      	mov	r7, r2
9001ed1a:	461d      	mov	r5, r3
9001ed1c:	b333      	cbz	r3, 9001ed6c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001ed1e:	4608      	mov	r0, r1
9001ed20:	f7f1 fa7d 	bl	9001021e <_ZNK8touchgfx4Rect7isEmptyEv>
9001ed24:	bb10      	cbnz	r0, 9001ed6c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001ed26:	6820      	ldr	r0, [r4, #0]
9001ed28:	ab04      	add	r3, sp, #16
9001ed2a:	6861      	ldr	r1, [r4, #4]
9001ed2c:	4c1b      	ldr	r4, [pc, #108]	@ (9001ed9c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
9001ed2e:	c303      	stmia	r3!, {r0, r1}
9001ed30:	a804      	add	r0, sp, #16
9001ed32:	f7f7 f899 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ed36:	6820      	ldr	r0, [r4, #0]
9001ed38:	6803      	ldr	r3, [r0, #0]
9001ed3a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001ed3c:	4798      	blx	r3
9001ed3e:	2dff      	cmp	r5, #255	@ 0xff
9001ed40:	d016      	beq.n	9001ed70 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
9001ed42:	f010 0f08 	tst.w	r0, #8
9001ed46:	6820      	ldr	r0, [r4, #0]
9001ed48:	d015      	beq.n	9001ed76 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
9001ed4a:	2400      	movs	r4, #0
9001ed4c:	6801      	ldr	r1, [r0, #0]
9001ed4e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
9001ed52:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001ed56:	e9cd 5402 	strd	r5, r4, [sp, #8]
9001ed5a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
9001ed5e:	9401      	str	r4, [sp, #4]
9001ed60:	f8bd 4014 	ldrh.w	r4, [sp, #20]
9001ed64:	9400      	str	r4, [sp, #0]
9001ed66:	6e4c      	ldr	r4, [r1, #100]	@ 0x64
9001ed68:	4639      	mov	r1, r7
9001ed6a:	47a0      	blx	r4
9001ed6c:	b007      	add	sp, #28
9001ed6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
9001ed70:	f010 0f02 	tst.w	r0, #2
9001ed74:	e7e7      	b.n	9001ed46 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
9001ed76:	6803      	ldr	r3, [r0, #0]
9001ed78:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001ed7a:	4798      	blx	r3
9001ed7c:	4b08      	ldr	r3, [pc, #32]	@ (9001eda0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
9001ed7e:	4601      	mov	r1, r0
9001ed80:	4630      	mov	r0, r6
9001ed82:	881a      	ldrh	r2, [r3, #0]
9001ed84:	6833      	ldr	r3, [r6, #0]
9001ed86:	e9cd 7500 	strd	r7, r5, [sp]
9001ed8a:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
9001ed8c:	ab04      	add	r3, sp, #16
9001ed8e:	47a8      	blx	r5
9001ed90:	6820      	ldr	r0, [r4, #0]
9001ed92:	6803      	ldr	r3, [r0, #0]
9001ed94:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001ed96:	4798      	blx	r3
9001ed98:	e7e8      	b.n	9001ed6c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
9001ed9a:	bf00      	nop
9001ed9c:	2402198c 	.word	0x2402198c
9001eda0:	24021986 	.word	0x24021986

9001eda4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
9001eda4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001eda8:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
9001edac:	4688      	mov	r8, r1
9001edae:	4614      	mov	r4, r2
9001edb0:	461d      	mov	r5, r3
9001edb2:	9e08      	ldr	r6, [sp, #32]
9001edb4:	2f00      	cmp	r7, #0
9001edb6:	f000 80ab 	beq.w	9001ef10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001edba:	4618      	mov	r0, r3
9001edbc:	f7f1 fa2f 	bl	9001021e <_ZNK8touchgfx4Rect7isEmptyEv>
9001edc0:	2800      	cmp	r0, #0
9001edc2:	f040 80a5 	bne.w	9001ef10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001edc6:	f9b5 1000 	ldrsh.w	r1, [r5]
9001edca:	2fff      	cmp	r7, #255	@ 0xff
9001edcc:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
9001edd0:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
9001edd4:	fb04 1303 	mla	r3, r4, r3, r1
9001edd8:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
9001eddc:	eba4 0200 	sub.w	r2, r4, r0
9001ede0:	eb08 0143 	add.w	r1, r8, r3, lsl #1
9001ede4:	fb04 f505 	mul.w	r5, r4, r5
9001ede8:	ea4f 2816 	mov.w	r8, r6, lsr #8
9001edec:	eb01 0545 	add.w	r5, r1, r5, lsl #1
9001edf0:	d04a      	beq.n	9001ee88 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
9001edf2:	b2bc      	uxth	r4, r7
9001edf4:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
9001edf8:	f3c6 4e07 	ubfx	lr, r6, #16, #8
9001edfc:	fa5f f788 	uxtb.w	r7, r8
9001ee00:	b2f3      	uxtb	r3, r6
9001ee02:	0040      	lsls	r0, r0, #1
9001ee04:	fb0e fe04 	mul.w	lr, lr, r4
9001ee08:	4367      	muls	r7, r4
9001ee0a:	ea4f 0842 	mov.w	r8, r2, lsl #1
9001ee0e:	4363      	muls	r3, r4
9001ee10:	fa1f fc8c 	uxth.w	ip, ip
9001ee14:	42a9      	cmp	r1, r5
9001ee16:	d27b      	bcs.n	9001ef10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001ee18:	eb01 0900 	add.w	r9, r1, r0
9001ee1c:	4549      	cmp	r1, r9
9001ee1e:	d231      	bcs.n	9001ee84 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
9001ee20:	880a      	ldrh	r2, [r1, #0]
9001ee22:	1214      	asrs	r4, r2, #8
9001ee24:	10d6      	asrs	r6, r2, #3
9001ee26:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
9001ee2a:	00d2      	lsls	r2, r2, #3
9001ee2c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001ee30:	b2d2      	uxtb	r2, r2
9001ee32:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9001ee36:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001ee3a:	fb14 f40c 	smulbb	r4, r4, ip
9001ee3e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
9001ee42:	fb12 f20c 	smulbb	r2, r2, ip
9001ee46:	fb16 f60c 	smulbb	r6, r6, ip
9001ee4a:	4474      	add	r4, lr
9001ee4c:	441a      	add	r2, r3
9001ee4e:	b2a4      	uxth	r4, r4
9001ee50:	443e      	add	r6, r7
9001ee52:	b292      	uxth	r2, r2
9001ee54:	f104 0a01 	add.w	sl, r4, #1
9001ee58:	b2b6      	uxth	r6, r6
9001ee5a:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
9001ee5e:	f102 0a01 	add.w	sl, r2, #1
9001ee62:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
9001ee66:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
9001ee6a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001ee6e:	4322      	orrs	r2, r4
9001ee70:	1c74      	adds	r4, r6, #1
9001ee72:	eb04 2616 	add.w	r6, r4, r6, lsr #8
9001ee76:	0976      	lsrs	r6, r6, #5
9001ee78:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001ee7c:	4332      	orrs	r2, r6
9001ee7e:	f821 2b02 	strh.w	r2, [r1], #2
9001ee82:	e7cb      	b.n	9001ee1c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
9001ee84:	4441      	add	r1, r8
9001ee86:	e7c5      	b.n	9001ee14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
9001ee88:	0973      	lsrs	r3, r6, #5
9001ee8a:	4f22      	ldr	r7, [pc, #136]	@ (9001ef14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
9001ee8c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
9001ee90:	ea08 0707 	and.w	r7, r8, r7
9001ee94:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001ee98:	433b      	orrs	r3, r7
9001ee9a:	07e7      	lsls	r7, r4, #31
9001ee9c:	ea43 0306 	orr.w	r3, r3, r6
9001eea0:	b29b      	uxth	r3, r3
9001eea2:	d50b      	bpl.n	9001eebc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
9001eea4:	0040      	lsls	r0, r0, #1
9001eea6:	0052      	lsls	r2, r2, #1
9001eea8:	42a9      	cmp	r1, r5
9001eeaa:	d231      	bcs.n	9001ef10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001eeac:	180c      	adds	r4, r1, r0
9001eeae:	42a1      	cmp	r1, r4
9001eeb0:	d202      	bcs.n	9001eeb8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
9001eeb2:	f821 3b02 	strh.w	r3, [r1], #2
9001eeb6:	e7fa      	b.n	9001eeae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
9001eeb8:	4411      	add	r1, r2
9001eeba:	e7f5      	b.n	9001eea8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
9001eebc:	078e      	lsls	r6, r1, #30
9001eebe:	d008      	beq.n	9001eed2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
9001eec0:	0066      	lsls	r6, r4, #1
9001eec2:	460a      	mov	r2, r1
9001eec4:	42aa      	cmp	r2, r5
9001eec6:	d202      	bcs.n	9001eece <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
9001eec8:	8013      	strh	r3, [r2, #0]
9001eeca:	4432      	add	r2, r6
9001eecc:	e7fa      	b.n	9001eec4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
9001eece:	3102      	adds	r1, #2
9001eed0:	3801      	subs	r0, #1
9001eed2:	07c2      	lsls	r2, r0, #31
9001eed4:	d50b      	bpl.n	9001eeee <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
9001eed6:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
9001eeda:	0066      	lsls	r6, r4, #1
9001eedc:	3a01      	subs	r2, #1
9001eede:	eb01 0242 	add.w	r2, r1, r2, lsl #1
9001eee2:	42aa      	cmp	r2, r5
9001eee4:	d202      	bcs.n	9001eeec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
9001eee6:	8013      	strh	r3, [r2, #0]
9001eee8:	4432      	add	r2, r6
9001eeea:	e7fa      	b.n	9001eee2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
9001eeec:	3801      	subs	r0, #1
9001eeee:	b178      	cbz	r0, 9001ef10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001eef0:	1040      	asrs	r0, r0, #1
9001eef2:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
9001eef6:	0080      	lsls	r0, r0, #2
9001eef8:	0064      	lsls	r4, r4, #1
9001eefa:	42a9      	cmp	r1, r5
9001eefc:	d208      	bcs.n	9001ef10 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
9001eefe:	180e      	adds	r6, r1, r0
9001ef00:	460a      	mov	r2, r1
9001ef02:	42b2      	cmp	r2, r6
9001ef04:	d202      	bcs.n	9001ef0c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
9001ef06:	f842 3b04 	str.w	r3, [r2], #4
9001ef0a:	e7fa      	b.n	9001ef02 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
9001ef0c:	4421      	add	r1, r4
9001ef0e:	e7f4      	b.n	9001eefa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
9001ef10:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001ef14:	00fff800 	.word	0x00fff800

9001ef18 <_ZN8touchgfx8LCD16bppC1Ev>:
9001ef18:	2200      	movs	r2, #0
9001ef1a:	4912      	ldr	r1, [pc, #72]	@ (9001ef64 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
9001ef1c:	e9c0 2201 	strd	r2, r2, [r0, #4]
9001ef20:	6001      	str	r1, [r0, #0]
9001ef22:	e9c0 2203 	strd	r2, r2, [r0, #12]
9001ef26:	e9c0 2205 	strd	r2, r2, [r0, #20]
9001ef2a:	e9c0 2207 	strd	r2, r2, [r0, #28]
9001ef2e:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
9001ef32:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
9001ef36:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
9001ef3a:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
9001ef3e:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
9001ef42:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
9001ef46:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
9001ef4a:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
9001ef4e:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
9001ef52:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
9001ef56:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
9001ef5a:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
9001ef5e:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
9001ef62:	4770      	bx	lr
9001ef64:	9002d96c 	.word	0x9002d96c

9001ef68 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
9001ef68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001ef6c:	b08d      	sub	sp, #52	@ 0x34
9001ef6e:	460d      	mov	r5, r1
9001ef70:	4604      	mov	r4, r0
9001ef72:	4699      	mov	r9, r3
9001ef74:	6808      	ldr	r0, [r1, #0]
9001ef76:	ab08      	add	r3, sp, #32
9001ef78:	6849      	ldr	r1, [r1, #4]
9001ef7a:	c303      	stmia	r3!, {r0, r1}
9001ef7c:	6810      	ldr	r0, [r2, #0]
9001ef7e:	ab0a      	add	r3, sp, #40	@ 0x28
9001ef80:	6851      	ldr	r1, [r2, #4]
9001ef82:	c303      	stmia	r3!, {r0, r1}
9001ef84:	a808      	add	r0, sp, #32
9001ef86:	f7f6 ff6f 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001ef8a:	4629      	mov	r1, r5
9001ef8c:	a80a      	add	r0, sp, #40	@ 0x28
9001ef8e:	4d67      	ldr	r5, [pc, #412]	@ (9001f12c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001ef90:	f7f6 ff92 	bl	90015eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001ef94:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
9001ef98:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
9001ef9c:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
9001efa0:	6828      	ldr	r0, [r5, #0]
9001efa2:	fb11 2103 	smlabb	r1, r1, r3, r2
9001efa6:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
9001efaa:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
9001efae:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001efb2:	f8bd 1020 	ldrh.w	r1, [sp, #32]
9001efb6:	440a      	add	r2, r1
9001efb8:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
9001efbc:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
9001efc0:	4413      	add	r3, r2
9001efc2:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
9001efc6:	6803      	ldr	r3, [r0, #0]
9001efc8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001efca:	4798      	blx	r3
9001efcc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
9001efd0:	d119      	bne.n	9001f006 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
9001efd2:	f010 0f20 	tst.w	r0, #32
9001efd6:	6828      	ldr	r0, [r5, #0]
9001efd8:	d018      	beq.n	9001f00c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
9001efda:	2500      	movs	r5, #0
9001efdc:	6801      	ldr	r1, [r0, #0]
9001efde:	b2b6      	uxth	r6, r6
9001efe0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
9001efe4:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
9001efe8:	9601      	str	r6, [sp, #4]
9001efea:	e9cd 9503 	strd	r9, r5, [sp, #12]
9001efee:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
9001eff2:	9502      	str	r5, [sp, #8]
9001eff4:	fa1f f588 	uxth.w	r5, r8
9001eff8:	9500      	str	r5, [sp, #0]
9001effa:	6d4d      	ldr	r5, [r1, #84]	@ 0x54
9001effc:	4621      	mov	r1, r4
9001effe:	47a8      	blx	r5
9001f000:	b00d      	add	sp, #52	@ 0x34
9001f002:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f006:	f010 0f40 	tst.w	r0, #64	@ 0x40
9001f00a:	e7e4      	b.n	9001efd6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
9001f00c:	6803      	ldr	r3, [r0, #0]
9001f00e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f010:	4798      	blx	r3
9001f012:	4947      	ldr	r1, [pc, #284]	@ (9001f130 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
9001f014:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
9001f018:	880b      	ldrh	r3, [r1, #0]
9001f01a:	468a      	mov	sl, r1
9001f01c:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
9001f020:	fb03 5202 	mla	r2, r3, r2, r5
9001f024:	4373      	muls	r3, r6
9001f026:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001f02a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001f02e:	9307      	str	r3, [sp, #28]
9001f030:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001f034:	9306      	str	r3, [sp, #24]
9001f036:	9b07      	ldr	r3, [sp, #28]
9001f038:	4298      	cmp	r0, r3
9001f03a:	d270      	bcs.n	9001f11e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
9001f03c:	9b06      	ldr	r3, [sp, #24]
9001f03e:	4621      	mov	r1, r4
9001f040:	eb00 0b03 	add.w	fp, r0, r3
9001f044:	4558      	cmp	r0, fp
9001f046:	d25d      	bcs.n	9001f104 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
9001f048:	f851 4b04 	ldr.w	r4, [r1], #4
9001f04c:	0e23      	lsrs	r3, r4, #24
9001f04e:	d014      	beq.n	9001f07a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001f050:	2bff      	cmp	r3, #255	@ 0xff
9001f052:	ea4f 2c14 	mov.w	ip, r4, lsr #8
9001f056:	d112      	bne.n	9001f07e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001f058:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
9001f05c:	d10f      	bne.n	9001f07e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
9001f05e:	0963      	lsrs	r3, r4, #5
9001f060:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
9001f064:	f3c4 04c4 	ubfx	r4, r4, #3, #5
9001f068:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001f06c:	f02c 0c07 	bic.w	ip, ip, #7
9001f070:	ea43 0c0c 	orr.w	ip, r3, ip
9001f074:	ea4c 0404 	orr.w	r4, ip, r4
9001f078:	8004      	strh	r4, [r0, #0]
9001f07a:	3002      	adds	r0, #2
9001f07c:	e7e2      	b.n	9001f044 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
9001f07e:	fb09 f303 	mul.w	r3, r9, r3
9001f082:	8807      	ldrh	r7, [r0, #0]
9001f084:	f3c4 4e07 	ubfx	lr, r4, #16, #8
9001f088:	fa5f fc8c 	uxtb.w	ip, ip
9001f08c:	1c5a      	adds	r2, r3, #1
9001f08e:	123e      	asrs	r6, r7, #8
9001f090:	10fd      	asrs	r5, r7, #3
9001f092:	eb02 2223 	add.w	r2, r2, r3, asr #8
9001f096:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001f09a:	00ff      	lsls	r7, r7, #3
9001f09c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001f0a0:	1212      	asrs	r2, r2, #8
9001f0a2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001f0a6:	b293      	uxth	r3, r2
9001f0a8:	43d2      	mvns	r2, r2
9001f0aa:	b2ff      	uxtb	r7, r7
9001f0ac:	fb1e fe03 	smulbb	lr, lr, r3
9001f0b0:	b2d2      	uxtb	r2, r2
9001f0b2:	fb1c fc03 	smulbb	ip, ip, r3
9001f0b6:	b2e4      	uxtb	r4, r4
9001f0b8:	fb06 e602 	mla	r6, r6, r2, lr
9001f0bc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001f0c0:	fb14 f403 	smulbb	r4, r4, r3
9001f0c4:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
9001f0c8:	b2b6      	uxth	r6, r6
9001f0ca:	fb05 c502 	mla	r5, r5, r2, ip
9001f0ce:	fb07 4702 	mla	r7, r7, r2, r4
9001f0d2:	f106 0e01 	add.w	lr, r6, #1
9001f0d6:	b2ad      	uxth	r5, r5
9001f0d8:	b2bf      	uxth	r7, r7
9001f0da:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
9001f0de:	f105 0c01 	add.w	ip, r5, #1
9001f0e2:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
9001f0e6:	1c7e      	adds	r6, r7, #1
9001f0e8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001f0ec:	eb06 2617 	add.w	r6, r6, r7, lsr #8
9001f0f0:	096d      	lsrs	r5, r5, #5
9001f0f2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
9001f0f6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001f0fa:	ea46 060e 	orr.w	r6, r6, lr
9001f0fe:	432e      	orrs	r6, r5
9001f100:	8006      	strh	r6, [r0, #0]
9001f102:	e7ba      	b.n	9001f07a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
9001f104:	f8ba 3000 	ldrh.w	r3, [sl]
9001f108:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
9001f10c:	eba3 0308 	sub.w	r3, r3, r8
9001f110:	eba4 0408 	sub.w	r4, r4, r8
9001f114:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f118:	eb01 0484 	add.w	r4, r1, r4, lsl #2
9001f11c:	e78b      	b.n	9001f036 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
9001f11e:	4b03      	ldr	r3, [pc, #12]	@ (9001f12c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
9001f120:	6818      	ldr	r0, [r3, #0]
9001f122:	6803      	ldr	r3, [r0, #0]
9001f124:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f126:	4798      	blx	r3
9001f128:	e76a      	b.n	9001f000 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
9001f12a:	bf00      	nop
9001f12c:	2402198c 	.word	0x2402198c
9001f130:	24021986 	.word	0x24021986

9001f134 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
9001f134:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
9001f138:	b085      	sub	sp, #20
9001f13a:	6810      	ldr	r0, [r2, #0]
9001f13c:	460c      	mov	r4, r1
9001f13e:	6851      	ldr	r1, [r2, #4]
9001f140:	466d      	mov	r5, sp
9001f142:	4616      	mov	r6, r2
9001f144:	c503      	stmia	r5!, {r0, r1}
9001f146:	6818      	ldr	r0, [r3, #0]
9001f148:	6859      	ldr	r1, [r3, #4]
9001f14a:	c503      	stmia	r5!, {r0, r1}
9001f14c:	4668      	mov	r0, sp
9001f14e:	4d2e      	ldr	r5, [pc, #184]	@ (9001f208 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
9001f150:	f7f6 fe8a 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f154:	4631      	mov	r1, r6
9001f156:	a802      	add	r0, sp, #8
9001f158:	4e2c      	ldr	r6, [pc, #176]	@ (9001f20c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
9001f15a:	f7f6 fead 	bl	90015eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f15e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
9001f162:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
9001f166:	f8bd 1004 	ldrh.w	r1, [sp, #4]
9001f16a:	6828      	ldr	r0, [r5, #0]
9001f16c:	fb11 2103 	smlabb	r1, r1, r3, r2
9001f170:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
9001f174:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
9001f178:	eb04 0481 	add.w	r4, r4, r1, lsl #2
9001f17c:	f8bd 1000 	ldrh.w	r1, [sp]
9001f180:	440a      	add	r2, r1
9001f182:	f8ad 2008 	strh.w	r2, [sp, #8]
9001f186:	f8bd 2002 	ldrh.w	r2, [sp, #2]
9001f18a:	4413      	add	r3, r2
9001f18c:	f8ad 300a 	strh.w	r3, [sp, #10]
9001f190:	6803      	ldr	r3, [r0, #0]
9001f192:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f194:	4798      	blx	r3
9001f196:	8833      	ldrh	r3, [r6, #0]
9001f198:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
9001f19c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
9001f1a0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
9001f1a4:	f8df e068 	ldr.w	lr, [pc, #104]	@ 9001f210 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
9001f1a8:	fb03 1202 	mla	r2, r3, r2, r1
9001f1ac:	fb08 f303 	mul.w	r3, r8, r3
9001f1b0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001f1b4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
9001f1b8:	4298      	cmp	r0, r3
9001f1ba:	d21d      	bcs.n	9001f1f8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
9001f1bc:	eb00 080c 	add.w	r8, r0, ip
9001f1c0:	4540      	cmp	r0, r8
9001f1c2:	d20f      	bcs.n	9001f1e4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
9001f1c4:	f854 1b04 	ldr.w	r1, [r4], #4
9001f1c8:	ea4f 1951 	mov.w	r9, r1, lsr #5
9001f1cc:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
9001f1d0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
9001f1d4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
9001f1d8:	ea42 0209 	orr.w	r2, r2, r9
9001f1dc:	430a      	orrs	r2, r1
9001f1de:	f820 2b02 	strh.w	r2, [r0], #2
9001f1e2:	e7ed      	b.n	9001f1c0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
9001f1e4:	8832      	ldrh	r2, [r6, #0]
9001f1e6:	1bd2      	subs	r2, r2, r7
9001f1e8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001f1ec:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
9001f1f0:	1bd2      	subs	r2, r2, r7
9001f1f2:	eb04 0482 	add.w	r4, r4, r2, lsl #2
9001f1f6:	e7df      	b.n	9001f1b8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
9001f1f8:	6828      	ldr	r0, [r5, #0]
9001f1fa:	6803      	ldr	r3, [r0, #0]
9001f1fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f1fe:	4798      	blx	r3
9001f200:	b005      	add	sp, #20
9001f202:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
9001f206:	bf00      	nop
9001f208:	2402198c 	.word	0x2402198c
9001f20c:	24021986 	.word	0x24021986
9001f210:	fffff800 	.word	0xfffff800

9001f214 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
9001f214:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9001f218:	b08e      	sub	sp, #56	@ 0x38
9001f21a:	460e      	mov	r6, r1
9001f21c:	4604      	mov	r4, r0
9001f21e:	461d      	mov	r5, r3
9001f220:	6808      	ldr	r0, [r1, #0]
9001f222:	ab0a      	add	r3, sp, #40	@ 0x28
9001f224:	6849      	ldr	r1, [r1, #4]
9001f226:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 9001f3fc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
9001f22a:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 9001f400 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
9001f22e:	c303      	stmia	r3!, {r0, r1}
9001f230:	6810      	ldr	r0, [r2, #0]
9001f232:	ab0c      	add	r3, sp, #48	@ 0x30
9001f234:	6851      	ldr	r1, [r2, #4]
9001f236:	c303      	stmia	r3!, {r0, r1}
9001f238:	a80a      	add	r0, sp, #40	@ 0x28
9001f23a:	f7f6 fe15 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f23e:	4631      	mov	r1, r6
9001f240:	a80c      	add	r0, sp, #48	@ 0x30
9001f242:	f7f6 fe39 	bl	90015eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f246:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
9001f24a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
9001f24e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
9001f252:	f8d8 0000 	ldr.w	r0, [r8]
9001f256:	fb11 2103 	smlabb	r1, r1, r3, r2
9001f25a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
9001f25e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
9001f262:	eb01 0141 	add.w	r1, r1, r1, lsl #1
9001f266:	440c      	add	r4, r1
9001f268:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
9001f26c:	440a      	add	r2, r1
9001f26e:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
9001f272:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
9001f276:	4413      	add	r3, r2
9001f278:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
9001f27c:	6803      	ldr	r3, [r0, #0]
9001f27e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001f280:	4798      	blx	r3
9001f282:	2dff      	cmp	r5, #255	@ 0xff
9001f284:	d124      	bne.n	9001f2d0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
9001f286:	f010 0f01 	tst.w	r0, #1
9001f28a:	f8d8 0000 	ldr.w	r0, [r8]
9001f28e:	d022      	beq.n	9001f2d6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
9001f290:	2100      	movs	r1, #0
9001f292:	f04f 0e01 	mov.w	lr, #1
9001f296:	f8d0 c000 	ldr.w	ip, [r0]
9001f29a:	b2b6      	uxth	r6, r6
9001f29c:	f8cd e018 	str.w	lr, [sp, #24]
9001f2a0:	b2bf      	uxth	r7, r7
9001f2a2:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
9001f2a6:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
9001f2aa:	e9cd 1107 	strd	r1, r1, [sp, #28]
9001f2ae:	f8b9 e000 	ldrh.w	lr, [r9]
9001f2b2:	9503      	str	r5, [sp, #12]
9001f2b4:	9601      	str	r6, [sp, #4]
9001f2b6:	9700      	str	r7, [sp, #0]
9001f2b8:	e9cd 1e04 	strd	r1, lr, [sp, #16]
9001f2bc:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
9001f2c0:	9102      	str	r1, [sp, #8]
9001f2c2:	4621      	mov	r1, r4
9001f2c4:	f8dc 5044 	ldr.w	r5, [ip, #68]	@ 0x44
9001f2c8:	47a8      	blx	r5
9001f2ca:	b00e      	add	sp, #56	@ 0x38
9001f2cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9001f2d0:	f010 0f04 	tst.w	r0, #4
9001f2d4:	e7d9      	b.n	9001f28a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
9001f2d6:	6803      	ldr	r3, [r0, #0]
9001f2d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f2da:	4798      	blx	r3
9001f2dc:	f8b9 3000 	ldrh.w	r3, [r9]
9001f2e0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
9001f2e4:	ea4f 0e47 	mov.w	lr, r7, lsl #1
9001f2e8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
9001f2ec:	435e      	muls	r6, r3
9001f2ee:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
9001f2f2:	2dff      	cmp	r5, #255	@ 0xff
9001f2f4:	fb03 1202 	mla	r2, r3, r2, r1
9001f2f8:	ebac 0c07 	sub.w	ip, ip, r7
9001f2fc:	eba3 0707 	sub.w	r7, r3, r7
9001f300:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001f304:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
9001f308:	eb00 0646 	add.w	r6, r0, r6, lsl #1
9001f30c:	ea4f 0747 	mov.w	r7, r7, lsl #1
9001f310:	d049      	beq.n	9001f3a6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
9001f312:	43eb      	mvns	r3, r5
9001f314:	fa1f f985 	uxth.w	r9, r5
9001f318:	b2db      	uxtb	r3, r3
9001f31a:	42b0      	cmp	r0, r6
9001f31c:	d266      	bcs.n	9001f3ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001f31e:	eb00 0a0e 	add.w	sl, r0, lr
9001f322:	4550      	cmp	r0, sl
9001f324:	4621      	mov	r1, r4
9001f326:	f104 0403 	add.w	r4, r4, #3
9001f32a:	d25b      	bcs.n	9001f3e4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
9001f32c:	8802      	ldrh	r2, [r0, #0]
9001f32e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001f332:	ea4f 2822 	mov.w	r8, r2, asr #8
9001f336:	fb11 f109 	smulbb	r1, r1, r9
9001f33a:	10d5      	asrs	r5, r2, #3
9001f33c:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
9001f340:	00d2      	lsls	r2, r2, #3
9001f342:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001f346:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
9001f34a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
9001f34e:	fb08 1803 	mla	r8, r8, r3, r1
9001f352:	f814 1c02 	ldrb.w	r1, [r4, #-2]
9001f356:	b2d2      	uxtb	r2, r2
9001f358:	fb11 f109 	smulbb	r1, r1, r9
9001f35c:	fa1f f888 	uxth.w	r8, r8
9001f360:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
9001f364:	fb05 1503 	mla	r5, r5, r3, r1
9001f368:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001f36c:	fb11 f109 	smulbb	r1, r1, r9
9001f370:	b2ad      	uxth	r5, r5
9001f372:	fb02 1203 	mla	r2, r2, r3, r1
9001f376:	f108 0101 	add.w	r1, r8, #1
9001f37a:	b292      	uxth	r2, r2
9001f37c:	eb01 2818 	add.w	r8, r1, r8, lsr #8
9001f380:	1c51      	adds	r1, r2, #1
9001f382:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
9001f386:	eb01 2212 	add.w	r2, r1, r2, lsr #8
9001f38a:	1c69      	adds	r1, r5, #1
9001f38c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
9001f390:	f3c2 22c4 	ubfx	r2, r2, #11, #5
9001f394:	096d      	lsrs	r5, r5, #5
9001f396:	ea42 0208 	orr.w	r2, r2, r8
9001f39a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001f39e:	432a      	orrs	r2, r5
9001f3a0:	f820 2b02 	strh.w	r2, [r0], #2
9001f3a4:	e7bd      	b.n	9001f322 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
9001f3a6:	4a14      	ldr	r2, [pc, #80]	@ (9001f3f8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
9001f3a8:	42b0      	cmp	r0, r6
9001f3aa:	d21f      	bcs.n	9001f3ec <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
9001f3ac:	eb00 050e 	add.w	r5, r0, lr
9001f3b0:	42a8      	cmp	r0, r5
9001f3b2:	4621      	mov	r1, r4
9001f3b4:	f104 0403 	add.w	r4, r4, #3
9001f3b8:	d210      	bcs.n	9001f3dc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
9001f3ba:	f814 3c02 	ldrb.w	r3, [r4, #-2]
9001f3be:	f814 1c01 	ldrb.w	r1, [r4, #-1]
9001f3c2:	00db      	lsls	r3, r3, #3
9001f3c4:	ea02 2101 	and.w	r1, r2, r1, lsl #8
9001f3c8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001f3cc:	430b      	orrs	r3, r1
9001f3ce:	f814 1c03 	ldrb.w	r1, [r4, #-3]
9001f3d2:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
9001f3d6:	f820 3b02 	strh.w	r3, [r0], #2
9001f3da:	e7e9      	b.n	9001f3b0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
9001f3dc:	4438      	add	r0, r7
9001f3de:	eb01 040c 	add.w	r4, r1, ip
9001f3e2:	e7e1      	b.n	9001f3a8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
9001f3e4:	4438      	add	r0, r7
9001f3e6:	eb01 040c 	add.w	r4, r1, ip
9001f3ea:	e796      	b.n	9001f31a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
9001f3ec:	4b03      	ldr	r3, [pc, #12]	@ (9001f3fc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
9001f3ee:	6818      	ldr	r0, [r3, #0]
9001f3f0:	6803      	ldr	r3, [r0, #0]
9001f3f2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f3f4:	4798      	blx	r3
9001f3f6:	e768      	b.n	9001f2ca <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
9001f3f8:	fffff800 	.word	0xfffff800
9001f3fc:	2402198c 	.word	0x2402198c
9001f400:	24021986 	.word	0x24021986

9001f404 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
9001f404:	b4f0      	push	{r4, r5, r6, r7}
9001f406:	4616      	mov	r6, r2
9001f408:	461c      	mov	r4, r3
9001f40a:	460d      	mov	r5, r1
9001f40c:	9a04      	ldr	r2, [sp, #16]
9001f40e:	2e01      	cmp	r6, #1
9001f410:	f89d 3014 	ldrb.w	r3, [sp, #20]
9001f414:	f89d 7018 	ldrb.w	r7, [sp, #24]
9001f418:	d012      	beq.n	9001f440 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
9001f41a:	d303      	bcc.n	9001f424 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
9001f41c:	2e02      	cmp	r6, #2
9001f41e:	d00a      	beq.n	9001f436 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
9001f420:	bcf0      	pop	{r4, r5, r6, r7}
9001f422:	4770      	bx	lr
9001f424:	6805      	ldr	r5, [r0, #0]
9001f426:	e9cd 3704 	strd	r3, r7, [sp, #16]
9001f42a:	68ed      	ldr	r5, [r5, #12]
9001f42c:	4613      	mov	r3, r2
9001f42e:	4622      	mov	r2, r4
9001f430:	46ac      	mov	ip, r5
9001f432:	bcf0      	pop	{r4, r5, r6, r7}
9001f434:	4760      	bx	ip
9001f436:	4621      	mov	r1, r4
9001f438:	4628      	mov	r0, r5
9001f43a:	bcf0      	pop	{r4, r5, r6, r7}
9001f43c:	f7ff bd94 	b.w	9001ef68 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001f440:	4621      	mov	r1, r4
9001f442:	4628      	mov	r0, r5
9001f444:	bcf0      	pop	{r4, r5, r6, r7}
9001f446:	f7ff bee5 	b.w	9001f214 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

9001f44c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
9001f44c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f450:	b093      	sub	sp, #76	@ 0x4c
9001f452:	4681      	mov	r9, r0
9001f454:	4688      	mov	r8, r1
9001f456:	6810      	ldr	r0, [r2, #0]
9001f458:	6851      	ldr	r1, [r2, #4]
9001f45a:	ac0e      	add	r4, sp, #56	@ 0x38
9001f45c:	4616      	mov	r6, r2
9001f45e:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
9001f462:	4f6b      	ldr	r7, [pc, #428]	@ (9001f610 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
9001f464:	c403      	stmia	r4!, {r0, r1}
9001f466:	6818      	ldr	r0, [r3, #0]
9001f468:	ac10      	add	r4, sp, #64	@ 0x40
9001f46a:	6859      	ldr	r1, [r3, #4]
9001f46c:	c403      	stmia	r4!, {r0, r1}
9001f46e:	a80e      	add	r0, sp, #56	@ 0x38
9001f470:	f7f6 fcfa 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f474:	4631      	mov	r1, r6
9001f476:	a810      	add	r0, sp, #64	@ 0x40
9001f478:	4e66      	ldr	r6, [pc, #408]	@ (9001f614 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001f47a:	f7f6 fd1d 	bl	90015eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f47e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
9001f482:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
9001f486:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
9001f48a:	6830      	ldr	r0, [r6, #0]
9001f48c:	fb11 2103 	smlabb	r1, r1, r3, r2
9001f490:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
9001f494:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
9001f498:	4489      	add	r9, r1
9001f49a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
9001f49e:	440a      	add	r2, r1
9001f4a0:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
9001f4a4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001f4a8:	4413      	add	r3, r2
9001f4aa:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
9001f4ae:	6803      	ldr	r3, [r0, #0]
9001f4b0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001f4b2:	4798      	blx	r3
9001f4b4:	f010 0f80 	tst.w	r0, #128	@ 0x80
9001f4b8:	6830      	ldr	r0, [r6, #0]
9001f4ba:	d01d      	beq.n	9001f4f8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
9001f4bc:	2200      	movs	r2, #0
9001f4be:	6801      	ldr	r1, [r0, #0]
9001f4c0:	b2a4      	uxth	r4, r4
9001f4c2:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
9001f4c6:	b2ad      	uxth	r5, r5
9001f4c8:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001f4cc:	220b      	movs	r2, #11
9001f4ce:	9207      	str	r2, [sp, #28]
9001f4d0:	883a      	ldrh	r2, [r7, #0]
9001f4d2:	9502      	str	r5, [sp, #8]
9001f4d4:	9206      	str	r2, [sp, #24]
9001f4d6:	2201      	movs	r2, #1
9001f4d8:	9401      	str	r4, [sp, #4]
9001f4da:	e9cd a204 	strd	sl, r2, [sp, #16]
9001f4de:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
9001f4e2:	9203      	str	r2, [sp, #12]
9001f4e4:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
9001f4e8:	9200      	str	r2, [sp, #0]
9001f4ea:	4642      	mov	r2, r8
9001f4ec:	6c0c      	ldr	r4, [r1, #64]	@ 0x40
9001f4ee:	4649      	mov	r1, r9
9001f4f0:	47a0      	blx	r4
9001f4f2:	b013      	add	sp, #76	@ 0x4c
9001f4f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f4f8:	6803      	ldr	r3, [r0, #0]
9001f4fa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f4fc:	4798      	blx	r3
9001f4fe:	883b      	ldrh	r3, [r7, #0]
9001f500:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
9001f504:	f04f 0e04 	mov.w	lr, #4
9001f508:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
9001f50c:	435d      	muls	r5, r3
9001f50e:	fb03 1202 	mla	r2, r3, r2, r1
9001f512:	eb00 0042 	add.w	r0, r0, r2, lsl #1
9001f516:	eb00 0245 	add.w	r2, r0, r5, lsl #1
9001f51a:	920c      	str	r2, [sp, #48]	@ 0x30
9001f51c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
9001f520:	1b12      	subs	r2, r2, r4
9001f522:	920d      	str	r2, [sp, #52]	@ 0x34
9001f524:	0062      	lsls	r2, r4, #1
9001f526:	1b1c      	subs	r4, r3, r4
9001f528:	920a      	str	r2, [sp, #40]	@ 0x28
9001f52a:	0063      	lsls	r3, r4, #1
9001f52c:	930b      	str	r3, [sp, #44]	@ 0x2c
9001f52e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9001f530:	4298      	cmp	r0, r3
9001f532:	d266      	bcs.n	9001f602 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
9001f534:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001f536:	eb00 0b03 	add.w	fp, r0, r3
9001f53a:	4558      	cmp	r0, fp
9001f53c:	d25c      	bcs.n	9001f5f8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
9001f53e:	f819 3b01 	ldrb.w	r3, [r9], #1
9001f542:	fb1e e303 	smlabb	r3, lr, r3, lr
9001f546:	f858 2003 	ldr.w	r2, [r8, r3]
9001f54a:	0e11      	lsrs	r1, r2, #24
9001f54c:	d012      	beq.n	9001f574 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001f54e:	29ff      	cmp	r1, #255	@ 0xff
9001f550:	ea4f 2712 	mov.w	r7, r2, lsr #8
9001f554:	d110      	bne.n	9001f578 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001f556:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001f55a:	d10d      	bne.n	9001f578 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
9001f55c:	0953      	lsrs	r3, r2, #5
9001f55e:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
9001f562:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9001f566:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9001f56a:	f027 0707 	bic.w	r7, r7, #7
9001f56e:	431f      	orrs	r7, r3
9001f570:	433a      	orrs	r2, r7
9001f572:	8002      	strh	r2, [r0, #0]
9001f574:	3002      	adds	r0, #2
9001f576:	e7e0      	b.n	9001f53a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
9001f578:	fb0a f101 	mul.w	r1, sl, r1
9001f57c:	8806      	ldrh	r6, [r0, #0]
9001f57e:	f3c2 4c07 	ubfx	ip, r2, #16, #8
9001f582:	b2d2      	uxtb	r2, r2
9001f584:	1c4b      	adds	r3, r1, #1
9001f586:	1235      	asrs	r5, r6, #8
9001f588:	10f4      	asrs	r4, r6, #3
9001f58a:	eb03 2321 	add.w	r3, r3, r1, asr #8
9001f58e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001f592:	00f6      	lsls	r6, r6, #3
9001f594:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
9001f598:	121b      	asrs	r3, r3, #8
9001f59a:	b2f6      	uxtb	r6, r6
9001f59c:	b299      	uxth	r1, r3
9001f59e:	43db      	mvns	r3, r3
9001f5a0:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
9001f5a4:	fb1c fc01 	smulbb	ip, ip, r1
9001f5a8:	b2db      	uxtb	r3, r3
9001f5aa:	fb12 f201 	smulbb	r2, r2, r1
9001f5ae:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
9001f5b2:	fb05 c503 	mla	r5, r5, r3, ip
9001f5b6:	b2ff      	uxtb	r7, r7
9001f5b8:	fb06 2203 	mla	r2, r6, r3, r2
9001f5bc:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
9001f5c0:	fb17 f701 	smulbb	r7, r7, r1
9001f5c4:	b2ad      	uxth	r5, r5
9001f5c6:	b292      	uxth	r2, r2
9001f5c8:	fb04 7403 	mla	r4, r4, r3, r7
9001f5cc:	f105 0c01 	add.w	ip, r5, #1
9001f5d0:	1c57      	adds	r7, r2, #1
9001f5d2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9001f5d6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
9001f5da:	b2a4      	uxth	r4, r4
9001f5dc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
9001f5e0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001f5e4:	433d      	orrs	r5, r7
9001f5e6:	1c67      	adds	r7, r4, #1
9001f5e8:	eb07 2414 	add.w	r4, r7, r4, lsr #8
9001f5ec:	0964      	lsrs	r4, r4, #5
9001f5ee:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
9001f5f2:	4325      	orrs	r5, r4
9001f5f4:	8005      	strh	r5, [r0, #0]
9001f5f6:	e7bd      	b.n	9001f574 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
9001f5f8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001f5fa:	4418      	add	r0, r3
9001f5fc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
9001f5fe:	4499      	add	r9, r3
9001f600:	e795      	b.n	9001f52e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
9001f602:	4b04      	ldr	r3, [pc, #16]	@ (9001f614 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
9001f604:	6818      	ldr	r0, [r3, #0]
9001f606:	6803      	ldr	r3, [r0, #0]
9001f608:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f60a:	4798      	blx	r3
9001f60c:	e771      	b.n	9001f4f2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
9001f60e:	bf00      	nop
9001f610:	24021986 	.word	0x24021986
9001f614:	2402198c 	.word	0x2402198c

9001f618 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
9001f618:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f61c:	b087      	sub	sp, #28
9001f61e:	4680      	mov	r8, r0
9001f620:	460d      	mov	r5, r1
9001f622:	4614      	mov	r4, r2
9001f624:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
9001f628:	2e00      	cmp	r6, #0
9001f62a:	f000 80b9 	beq.w	9001f7a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
9001f62e:	6810      	ldr	r0, [r2, #0]
9001f630:	af02      	add	r7, sp, #8
9001f632:	6851      	ldr	r1, [r2, #4]
9001f634:	c703      	stmia	r7!, {r0, r1}
9001f636:	6818      	ldr	r0, [r3, #0]
9001f638:	af04      	add	r7, sp, #16
9001f63a:	6859      	ldr	r1, [r3, #4]
9001f63c:	c703      	stmia	r7!, {r0, r1}
9001f63e:	a802      	add	r0, sp, #8
9001f640:	f7f6 fc12 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f644:	4621      	mov	r1, r4
9001f646:	a804      	add	r0, sp, #16
9001f648:	f7f6 fc36 	bl	90015eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f64c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001f650:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001f654:	f8bd 400c 	ldrh.w	r4, [sp, #12]
9001f658:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
9001f65c:	fb14 2103 	smlabb	r1, r4, r3, r2
9001f660:	eb08 0401 	add.w	r4, r8, r1
9001f664:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001f668:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001f66c:	440a      	add	r2, r1
9001f66e:	ea4f 0a48 	mov.w	sl, r8, lsl #1
9001f672:	f8ad 2010 	strh.w	r2, [sp, #16]
9001f676:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001f67a:	4413      	add	r3, r2
9001f67c:	f8ad 3012 	strh.w	r3, [sp, #18]
9001f680:	4b49      	ldr	r3, [pc, #292]	@ (9001f7a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001f682:	6818      	ldr	r0, [r3, #0]
9001f684:	6803      	ldr	r3, [r0, #0]
9001f686:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f688:	4798      	blx	r3
9001f68a:	4b48      	ldr	r3, [pc, #288]	@ (9001f7ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
9001f68c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
9001f690:	2eff      	cmp	r6, #255	@ 0xff
9001f692:	881a      	ldrh	r2, [r3, #0]
9001f694:	f9bd c010 	ldrsh.w	ip, [sp, #16]
9001f698:	fb02 c101 	mla	r1, r2, r1, ip
9001f69c:	fb02 f207 	mul.w	r2, r2, r7
9001f6a0:	eb00 0041 	add.w	r0, r0, r1, lsl #1
9001f6a4:	f105 0104 	add.w	r1, r5, #4
9001f6a8:	461d      	mov	r5, r3
9001f6aa:	d05a      	beq.n	9001f762 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
9001f6ac:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
9001f6b0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001f6b4:	b2b6      	uxth	r6, r6
9001f6b6:	9301      	str	r3, [sp, #4]
9001f6b8:	fa1f fe8e 	uxth.w	lr, lr
9001f6bc:	4282      	cmp	r2, r0
9001f6be:	d96a      	bls.n	9001f796 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001f6c0:	eb00 0b0a 	add.w	fp, r0, sl
9001f6c4:	4583      	cmp	fp, r0
9001f6c6:	d940      	bls.n	9001f74a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
9001f6c8:	8805      	ldrh	r5, [r0, #0]
9001f6ca:	f814 3b01 	ldrb.w	r3, [r4], #1
9001f6ce:	122f      	asrs	r7, r5, #8
9001f6d0:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001f6d4:	ea4f 09e5 	mov.w	r9, r5, asr #3
9001f6d8:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001f6dc:	00ed      	lsls	r5, r5, #3
9001f6de:	ea4f 2c23 	mov.w	ip, r3, asr #8
9001f6e2:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
9001f6e6:	fb17 f70e 	smulbb	r7, r7, lr
9001f6ea:	b2ed      	uxtb	r5, r5
9001f6ec:	fb19 f90e 	smulbb	r9, r9, lr
9001f6f0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001f6f4:	fb15 f50e 	smulbb	r5, r5, lr
9001f6f8:	fb0c 7c06 	mla	ip, ip, r6, r7
9001f6fc:	10df      	asrs	r7, r3, #3
9001f6fe:	00db      	lsls	r3, r3, #3
9001f700:	fa1f fc8c 	uxth.w	ip, ip
9001f704:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
9001f708:	b2db      	uxtb	r3, r3
9001f70a:	fb07 9706 	mla	r7, r7, r6, r9
9001f70e:	f10c 0901 	add.w	r9, ip, #1
9001f712:	fb03 5306 	mla	r3, r3, r6, r5
9001f716:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
9001f71a:	b29b      	uxth	r3, r3
9001f71c:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
9001f720:	b2bf      	uxth	r7, r7
9001f722:	f103 0c01 	add.w	ip, r3, #1
9001f726:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001f72a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001f72e:	ea4c 0c09 	orr.w	ip, ip, r9
9001f732:	f107 0901 	add.w	r9, r7, #1
9001f736:	eb09 2717 	add.w	r7, r9, r7, lsr #8
9001f73a:	097f      	lsrs	r7, r7, #5
9001f73c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9001f740:	ea4c 0c07 	orr.w	ip, ip, r7
9001f744:	f820 cb02 	strh.w	ip, [r0], #2
9001f748:	e7bc      	b.n	9001f6c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
9001f74a:	9b01      	ldr	r3, [sp, #4]
9001f74c:	881b      	ldrh	r3, [r3, #0]
9001f74e:	eba3 0308 	sub.w	r3, r3, r8
9001f752:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f756:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001f75a:	eba3 0308 	sub.w	r3, r3, r8
9001f75e:	441c      	add	r4, r3
9001f760:	e7ac      	b.n	9001f6bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
9001f762:	eb00 0242 	add.w	r2, r0, r2, lsl #1
9001f766:	4282      	cmp	r2, r0
9001f768:	d915      	bls.n	9001f796 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
9001f76a:	eb00 060a 	add.w	r6, r0, sl
9001f76e:	4286      	cmp	r6, r0
9001f770:	d906      	bls.n	9001f780 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
9001f772:	f814 3b01 	ldrb.w	r3, [r4], #1
9001f776:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
9001f77a:	f820 3b02 	strh.w	r3, [r0], #2
9001f77e:	e7f6      	b.n	9001f76e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
9001f780:	882b      	ldrh	r3, [r5, #0]
9001f782:	eba3 0308 	sub.w	r3, r3, r8
9001f786:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f78a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
9001f78e:	eba3 0308 	sub.w	r3, r3, r8
9001f792:	441c      	add	r4, r3
9001f794:	e7e7      	b.n	9001f766 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
9001f796:	4b04      	ldr	r3, [pc, #16]	@ (9001f7a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
9001f798:	6818      	ldr	r0, [r3, #0]
9001f79a:	6803      	ldr	r3, [r0, #0]
9001f79c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f79e:	4798      	blx	r3
9001f7a0:	b007      	add	sp, #28
9001f7a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f7a6:	bf00      	nop
9001f7a8:	2402198c 	.word	0x2402198c
9001f7ac:	24021986 	.word	0x24021986

9001f7b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
9001f7b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001f7b4:	b091      	sub	sp, #68	@ 0x44
9001f7b6:	4680      	mov	r8, r0
9001f7b8:	460f      	mov	r7, r1
9001f7ba:	4614      	mov	r4, r2
9001f7bc:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
9001f7c0:	2d00      	cmp	r5, #0
9001f7c2:	d051      	beq.n	9001f868 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001f7c4:	6810      	ldr	r0, [r2, #0]
9001f7c6:	ae0c      	add	r6, sp, #48	@ 0x30
9001f7c8:	6851      	ldr	r1, [r2, #4]
9001f7ca:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 9001f9cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
9001f7ce:	c603      	stmia	r6!, {r0, r1}
9001f7d0:	6818      	ldr	r0, [r3, #0]
9001f7d2:	ae0e      	add	r6, sp, #56	@ 0x38
9001f7d4:	6859      	ldr	r1, [r3, #4]
9001f7d6:	c603      	stmia	r6!, {r0, r1}
9001f7d8:	a80c      	add	r0, sp, #48	@ 0x30
9001f7da:	f7f6 fb45 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001f7de:	4621      	mov	r1, r4
9001f7e0:	a80e      	add	r0, sp, #56	@ 0x38
9001f7e2:	f7f6 fb69 	bl	90015eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001f7e6:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
9001f7ea:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
9001f7ee:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
9001f7f2:	f8d9 0000 	ldr.w	r0, [r9]
9001f7f6:	fb11 2103 	smlabb	r1, r1, r3, r2
9001f7fa:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
9001f7fe:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
9001f802:	eb08 0401 	add.w	r4, r8, r1
9001f806:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
9001f80a:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 9001f9d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
9001f80e:	440a      	add	r2, r1
9001f810:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
9001f814:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
9001f818:	4413      	add	r3, r2
9001f81a:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
9001f81e:	6803      	ldr	r3, [r0, #0]
9001f820:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001f822:	4798      	blx	r3
9001f824:	f010 0f80 	tst.w	r0, #128	@ 0x80
9001f828:	f8d9 0000 	ldr.w	r0, [r9]
9001f82c:	d01f      	beq.n	9001f86e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
9001f82e:	2200      	movs	r2, #0
9001f830:	6801      	ldr	r1, [r0, #0]
9001f832:	b2b6      	uxth	r6, r6
9001f834:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
9001f838:	e9cd 2208 	strd	r2, r2, [sp, #32]
9001f83c:	220b      	movs	r2, #11
9001f83e:	9207      	str	r2, [sp, #28]
9001f840:	f8b8 2000 	ldrh.w	r2, [r8]
9001f844:	9601      	str	r6, [sp, #4]
9001f846:	9206      	str	r2, [sp, #24]
9001f848:	2201      	movs	r2, #1
9001f84a:	e9cd 5204 	strd	r5, r2, [sp, #16]
9001f84e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
9001f852:	9203      	str	r2, [sp, #12]
9001f854:	fa1f f28a 	uxth.w	r2, sl
9001f858:	9202      	str	r2, [sp, #8]
9001f85a:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
9001f85e:	9200      	str	r2, [sp, #0]
9001f860:	463a      	mov	r2, r7
9001f862:	6c0d      	ldr	r5, [r1, #64]	@ 0x40
9001f864:	4621      	mov	r1, r4
9001f866:	47a8      	blx	r5
9001f868:	b011      	add	sp, #68	@ 0x44
9001f86a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001f86e:	6803      	ldr	r3, [r0, #0]
9001f870:	ea4f 0946 	mov.w	r9, r6, lsl #1
9001f874:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001f876:	4798      	blx	r3
9001f878:	f8b8 2000 	ldrh.w	r2, [r8]
9001f87c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
9001f880:	2dff      	cmp	r5, #255	@ 0xff
9001f882:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
9001f886:	fb0a fa02 	mul.w	sl, sl, r2
9001f88a:	fb02 1303 	mla	r3, r2, r3, r1
9001f88e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f892:	d062      	beq.n	9001f95a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
9001f894:	ea6f 0c05 	mvn.w	ip, r5
9001f898:	eb00 034a 	add.w	r3, r0, sl, lsl #1
9001f89c:	b2ad      	uxth	r5, r5
9001f89e:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
9001f8a2:	fa5f fc8c 	uxtb.w	ip, ip
9001f8a6:	930a      	str	r3, [sp, #40]	@ 0x28
9001f8a8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9001f8aa:	4298      	cmp	r0, r3
9001f8ac:	f080 8085 	bcs.w	9001f9ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001f8b0:	eb00 0b09 	add.w	fp, r0, r9
9001f8b4:	4558      	cmp	r0, fp
9001f8b6:	d246      	bcs.n	9001f946 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
9001f8b8:	f814 eb01 	ldrb.w	lr, [r4], #1
9001f8bc:	2303      	movs	r3, #3
9001f8be:	2204      	movs	r2, #4
9001f8c0:	fb13 2e0e 	smlabb	lr, r3, lr, r2
9001f8c4:	8803      	ldrh	r3, [r0, #0]
9001f8c6:	eb07 0a0e 	add.w	sl, r7, lr
9001f8ca:	1219      	asrs	r1, r3, #8
9001f8cc:	10da      	asrs	r2, r3, #3
9001f8ce:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001f8d2:	f89a 8002 	ldrb.w	r8, [sl, #2]
9001f8d6:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9001f8da:	00db      	lsls	r3, r3, #3
9001f8dc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9001f8e0:	fb18 f805 	smulbb	r8, r8, r5
9001f8e4:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
9001f8e8:	fb1e fe05 	smulbb	lr, lr, r5
9001f8ec:	b2db      	uxtb	r3, r3
9001f8ee:	fb01 810c 	mla	r1, r1, ip, r8
9001f8f2:	f89a 8001 	ldrb.w	r8, [sl, #1]
9001f8f6:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
9001f8fa:	fb18 f805 	smulbb	r8, r8, r5
9001f8fe:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
9001f902:	b289      	uxth	r1, r1
9001f904:	fb02 820c 	mla	r2, r2, ip, r8
9001f908:	fb03 e30c 	mla	r3, r3, ip, lr
9001f90c:	f101 0801 	add.w	r8, r1, #1
9001f910:	b292      	uxth	r2, r2
9001f912:	b29b      	uxth	r3, r3
9001f914:	eb08 2111 	add.w	r1, r8, r1, lsr #8
9001f918:	f102 0801 	add.w	r8, r2, #1
9001f91c:	f103 0e01 	add.w	lr, r3, #1
9001f920:	eb08 2812 	add.w	r8, r8, r2, lsr #8
9001f924:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9001f928:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
9001f92c:	ea4f 1858 	mov.w	r8, r8, lsr #5
9001f930:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
9001f934:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9001f938:	ea4e 0101 	orr.w	r1, lr, r1
9001f93c:	ea41 0108 	orr.w	r1, r1, r8
9001f940:	f820 1b02 	strh.w	r1, [r0], #2
9001f944:	e7b6      	b.n	9001f8b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
9001f946:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9001f948:	881b      	ldrh	r3, [r3, #0]
9001f94a:	1b9b      	subs	r3, r3, r6
9001f94c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f950:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001f954:	1b9b      	subs	r3, r3, r6
9001f956:	441c      	add	r4, r3
9001f958:	e7a6      	b.n	9001f8a8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
9001f95a:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
9001f95e:	2203      	movs	r2, #3
9001f960:	2504      	movs	r5, #4
9001f962:	4919      	ldr	r1, [pc, #100]	@ (9001f9c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
9001f964:	4550      	cmp	r0, sl
9001f966:	d228      	bcs.n	9001f9ba <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
9001f968:	eb00 0c09 	add.w	ip, r0, r9
9001f96c:	4560      	cmp	r0, ip
9001f96e:	4623      	mov	r3, r4
9001f970:	d219      	bcs.n	9001f9a6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
9001f972:	f893 e000 	ldrb.w	lr, [r3]
9001f976:	3401      	adds	r4, #1
9001f978:	fb12 5e0e 	smlabb	lr, r2, lr, r5
9001f97c:	eb07 0b0e 	add.w	fp, r7, lr
9001f980:	f817 e00e 	ldrb.w	lr, [r7, lr]
9001f984:	f89b 3002 	ldrb.w	r3, [fp, #2]
9001f988:	f89b b001 	ldrb.w	fp, [fp, #1]
9001f98c:	ea01 2303 	and.w	r3, r1, r3, lsl #8
9001f990:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
9001f994:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
9001f998:	ea43 030b 	orr.w	r3, r3, fp
9001f99c:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
9001f9a0:	f820 3b02 	strh.w	r3, [r0], #2
9001f9a4:	e7e2      	b.n	9001f96c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
9001f9a6:	f8b8 3000 	ldrh.w	r3, [r8]
9001f9aa:	1b9b      	subs	r3, r3, r6
9001f9ac:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001f9b0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
9001f9b4:	1b9b      	subs	r3, r3, r6
9001f9b6:	441c      	add	r4, r3
9001f9b8:	e7d4      	b.n	9001f964 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
9001f9ba:	4b04      	ldr	r3, [pc, #16]	@ (9001f9cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
9001f9bc:	6818      	ldr	r0, [r3, #0]
9001f9be:	6803      	ldr	r3, [r0, #0]
9001f9c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001f9c2:	4798      	blx	r3
9001f9c4:	e750      	b.n	9001f868 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
9001f9c6:	bf00      	nop
9001f9c8:	fffff800 	.word	0xfffff800
9001f9cc:	2402198c 	.word	0x2402198c
9001f9d0:	24021986 	.word	0x24021986

9001f9d4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
9001f9d4:	b4f0      	push	{r4, r5, r6, r7}
9001f9d6:	460c      	mov	r4, r1
9001f9d8:	4611      	mov	r1, r2
9001f9da:	f89d 5014 	ldrb.w	r5, [sp, #20]
9001f9de:	461a      	mov	r2, r3
9001f9e0:	780f      	ldrb	r7, [r1, #0]
9001f9e2:	9b04      	ldr	r3, [sp, #16]
9001f9e4:	2f01      	cmp	r7, #1
9001f9e6:	784e      	ldrb	r6, [r1, #1]
9001f9e8:	d038      	beq.n	9001fa5c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
9001f9ea:	d31f      	bcc.n	9001fa2c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
9001f9ec:	2f02      	cmp	r7, #2
9001f9ee:	d14d      	bne.n	9001fa8c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001f9f0:	2e03      	cmp	r6, #3
9001f9f2:	d84b      	bhi.n	9001fa8c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001f9f4:	e8df f006 	tbb	[pc, r6]
9001f9f8:	17140702 	.word	0x17140702
9001f9fc:	9504      	str	r5, [sp, #16]
9001f9fe:	4620      	mov	r0, r4
9001fa00:	bcf0      	pop	{r4, r5, r6, r7}
9001fa02:	f7ff be09 	b.w	9001f618 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
9001fa06:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
9001fa08:	2800      	cmp	r0, #0
9001fa0a:	d03f      	beq.n	9001fa8c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001fa0c:	6806      	ldr	r6, [r0, #0]
9001fa0e:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001fa12:	68b5      	ldr	r5, [r6, #8]
9001fa14:	4613      	mov	r3, r2
9001fa16:	46ac      	mov	ip, r5
9001fa18:	460a      	mov	r2, r1
9001fa1a:	4621      	mov	r1, r4
9001fa1c:	bcf0      	pop	{r4, r5, r6, r7}
9001fa1e:	4760      	bx	ip
9001fa20:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
9001fa24:	e7f0      	b.n	9001fa08 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001fa26:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9001fa2a:	e7ed      	b.n	9001fa08 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
9001fa2c:	2e03      	cmp	r6, #3
9001fa2e:	d82d      	bhi.n	9001fa8c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001fa30:	e8df f006 	tbb	[pc, r6]
9001fa34:	110e0702 	.word	0x110e0702
9001fa38:	9504      	str	r5, [sp, #16]
9001fa3a:	4620      	mov	r0, r4
9001fa3c:	bcf0      	pop	{r4, r5, r6, r7}
9001fa3e:	f7ff bd05 	b.w	9001f44c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
9001fa42:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
9001fa44:	b310      	cbz	r0, 9001fa8c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001fa46:	6806      	ldr	r6, [r0, #0]
9001fa48:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001fa4c:	68f5      	ldr	r5, [r6, #12]
9001fa4e:	e7e1      	b.n	9001fa14 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001fa50:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
9001fa54:	e7f6      	b.n	9001fa44 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9001fa56:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9001fa5a:	e7f3      	b.n	9001fa44 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
9001fa5c:	2e03      	cmp	r6, #3
9001fa5e:	d815      	bhi.n	9001fa8c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001fa60:	e8df f006 	tbb	[pc, r6]
9001fa64:	110e0702 	.word	0x110e0702
9001fa68:	9504      	str	r5, [sp, #16]
9001fa6a:	4620      	mov	r0, r4
9001fa6c:	bcf0      	pop	{r4, r5, r6, r7}
9001fa6e:	f7ff be9f 	b.w	9001f7b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
9001fa72:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
9001fa74:	b150      	cbz	r0, 9001fa8c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
9001fa76:	6806      	ldr	r6, [r0, #0]
9001fa78:	e9cd 3504 	strd	r3, r5, [sp, #16]
9001fa7c:	6935      	ldr	r5, [r6, #16]
9001fa7e:	e7c9      	b.n	9001fa14 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
9001fa80:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
9001fa84:	e7f6      	b.n	9001fa74 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9001fa86:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
9001fa8a:	e7f3      	b.n	9001fa74 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
9001fa8c:	bcf0      	pop	{r4, r5, r6, r7}
9001fa8e:	4770      	bx	lr

9001fa90 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
9001fa90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fa94:	b087      	sub	sp, #28
9001fa96:	4604      	mov	r4, r0
9001fa98:	460e      	mov	r6, r1
9001fa9a:	6810      	ldr	r0, [r2, #0]
9001fa9c:	6851      	ldr	r1, [r2, #4]
9001fa9e:	ad02      	add	r5, sp, #8
9001faa0:	4617      	mov	r7, r2
9001faa2:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
9001faa6:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 9001fcd8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
9001faaa:	c503      	stmia	r5!, {r0, r1}
9001faac:	6818      	ldr	r0, [r3, #0]
9001faae:	ad04      	add	r5, sp, #16
9001fab0:	6859      	ldr	r1, [r3, #4]
9001fab2:	c503      	stmia	r5!, {r0, r1}
9001fab4:	a802      	add	r0, sp, #8
9001fab6:	f7f6 f9d7 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9001faba:	4639      	mov	r1, r7
9001fabc:	a804      	add	r0, sp, #16
9001fabe:	f7f6 f9fb 	bl	90015eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
9001fac2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001fac6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001faca:	f8bd 100c 	ldrh.w	r1, [sp, #12]
9001face:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
9001fad2:	fb11 2103 	smlabb	r1, r1, r3, r2
9001fad6:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
9001fada:	eb04 0441 	add.w	r4, r4, r1, lsl #1
9001fade:	440e      	add	r6, r1
9001fae0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
9001fae4:	440a      	add	r2, r1
9001fae6:	f8ad 2010 	strh.w	r2, [sp, #16]
9001faea:	f8bd 200a 	ldrh.w	r2, [sp, #10]
9001faee:	4413      	add	r3, r2
9001faf0:	f8ad 3012 	strh.w	r3, [sp, #18]
9001faf4:	4b77      	ldr	r3, [pc, #476]	@ (9001fcd4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001faf6:	6818      	ldr	r0, [r3, #0]
9001faf8:	6803      	ldr	r3, [r0, #0]
9001fafa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
9001fafc:	4798      	blx	r3
9001fafe:	f8b9 b000 	ldrh.w	fp, [r9]
9001fb02:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001fb06:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
9001fb0a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
9001fb0e:	fb05 f50b 	mul.w	r5, r5, fp
9001fb12:	fb0b 2303 	mla	r3, fp, r3, r2
9001fb16:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001fb1a:	ea4f 0348 	mov.w	r3, r8, lsl #1
9001fb1e:	9300      	str	r3, [sp, #0]
9001fb20:	d069      	beq.n	9001fbf6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
9001fb22:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
9001fb26:	4558      	cmp	r0, fp
9001fb28:	f080 80cc 	bcs.w	9001fcc4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001fb2c:	9b00      	ldr	r3, [sp, #0]
9001fb2e:	4631      	mov	r1, r6
9001fb30:	18c3      	adds	r3, r0, r3
9001fb32:	9301      	str	r3, [sp, #4]
9001fb34:	9b01      	ldr	r3, [sp, #4]
9001fb36:	4298      	cmp	r0, r3
9001fb38:	d24f      	bcs.n	9001fbda <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
9001fb3a:	f811 2b01 	ldrb.w	r2, [r1], #1
9001fb3e:	2a00      	cmp	r2, #0
9001fb40:	d048      	beq.n	9001fbd4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001fb42:	fb0a f202 	mul.w	r2, sl, r2
9001fb46:	1c53      	adds	r3, r2, #1
9001fb48:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9001fb4c:	121b      	asrs	r3, r3, #8
9001fb4e:	d041      	beq.n	9001fbd4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
9001fb50:	8802      	ldrh	r2, [r0, #0]
9001fb52:	b29e      	uxth	r6, r3
9001fb54:	f8b4 c000 	ldrh.w	ip, [r4]
9001fb58:	43db      	mvns	r3, r3
9001fb5a:	1215      	asrs	r5, r2, #8
9001fb5c:	b2db      	uxtb	r3, r3
9001fb5e:	ea4f 272c 	mov.w	r7, ip, asr #8
9001fb62:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
9001fb66:	ea4f 0ee2 	mov.w	lr, r2, asr #3
9001fb6a:	fb15 f503 	smulbb	r5, r5, r3
9001fb6e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
9001fb72:	00d2      	lsls	r2, r2, #3
9001fb74:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9001fb78:	fb07 5706 	mla	r7, r7, r6, r5
9001fb7c:	ea4f 05ec 	mov.w	r5, ip, asr #3
9001fb80:	b2d2      	uxtb	r2, r2
9001fb82:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
9001fb86:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
9001fb8a:	fb1e fe03 	smulbb	lr, lr, r3
9001fb8e:	b2bf      	uxth	r7, r7
9001fb90:	fb12 f203 	smulbb	r2, r2, r3
9001fb94:	fa5f fc8c 	uxtb.w	ip, ip
9001fb98:	fb05 e506 	mla	r5, r5, r6, lr
9001fb9c:	f107 0e01 	add.w	lr, r7, #1
9001fba0:	fb0c 2c06 	mla	ip, ip, r6, r2
9001fba4:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
9001fba8:	fa1f fc8c 	uxth.w	ip, ip
9001fbac:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
9001fbb0:	b2ad      	uxth	r5, r5
9001fbb2:	f10c 0701 	add.w	r7, ip, #1
9001fbb6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9001fbba:	f3c7 27c4 	ubfx	r7, r7, #11, #5
9001fbbe:	ea47 070e 	orr.w	r7, r7, lr
9001fbc2:	f105 0e01 	add.w	lr, r5, #1
9001fbc6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
9001fbca:	096d      	lsrs	r5, r5, #5
9001fbcc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9001fbd0:	432f      	orrs	r7, r5
9001fbd2:	8007      	strh	r7, [r0, #0]
9001fbd4:	3002      	adds	r0, #2
9001fbd6:	3402      	adds	r4, #2
9001fbd8:	e7ac      	b.n	9001fb34 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
9001fbda:	f8b9 3000 	ldrh.w	r3, [r9]
9001fbde:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001fbe2:	eba3 0308 	sub.w	r3, r3, r8
9001fbe6:	eba6 0608 	sub.w	r6, r6, r8
9001fbea:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001fbee:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001fbf2:	440e      	add	r6, r1
9001fbf4:	e797      	b.n	9001fb26 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
9001fbf6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
9001fbfa:	42a8      	cmp	r0, r5
9001fbfc:	d262      	bcs.n	9001fcc4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
9001fbfe:	9b00      	ldr	r3, [sp, #0]
9001fc00:	4631      	mov	r1, r6
9001fc02:	eb00 0b03 	add.w	fp, r0, r3
9001fc06:	4558      	cmp	r0, fp
9001fc08:	d24e      	bcs.n	9001fca8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
9001fc0a:	f811 3b01 	ldrb.w	r3, [r1], #1
9001fc0e:	b12b      	cbz	r3, 9001fc1c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001fc10:	2bff      	cmp	r3, #255	@ 0xff
9001fc12:	f8b4 e000 	ldrh.w	lr, [r4]
9001fc16:	d104      	bne.n	9001fc22 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
9001fc18:	f8a0 e000 	strh.w	lr, [r0]
9001fc1c:	3002      	adds	r0, #2
9001fc1e:	3402      	adds	r4, #2
9001fc20:	e7f1      	b.n	9001fc06 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
9001fc22:	8802      	ldrh	r2, [r0, #0]
9001fc24:	b29f      	uxth	r7, r3
9001fc26:	43db      	mvns	r3, r3
9001fc28:	ea4f 2c2e 	mov.w	ip, lr, asr #8
9001fc2c:	1216      	asrs	r6, r2, #8
9001fc2e:	b2db      	uxtb	r3, r3
9001fc30:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9001fc34:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
9001fc38:	ea4f 0ae2 	mov.w	sl, r2, asr #3
9001fc3c:	00d2      	lsls	r2, r2, #3
9001fc3e:	fb16 f603 	smulbb	r6, r6, r3
9001fc42:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
9001fc46:	b2d2      	uxtb	r2, r2
9001fc48:	fb0c 6c07 	mla	ip, ip, r7, r6
9001fc4c:	ea4f 06ee 	mov.w	r6, lr, asr #3
9001fc50:	fb1a fa03 	smulbb	sl, sl, r3
9001fc54:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9001fc58:	fa1f fc8c 	uxth.w	ip, ip
9001fc5c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
9001fc60:	fb12 f303 	smulbb	r3, r2, r3
9001fc64:	fa5f fe8e 	uxtb.w	lr, lr
9001fc68:	fb06 a607 	mla	r6, r6, r7, sl
9001fc6c:	f10c 0201 	add.w	r2, ip, #1
9001fc70:	fb0e 3307 	mla	r3, lr, r7, r3
9001fc74:	b2b6      	uxth	r6, r6
9001fc76:	b29b      	uxth	r3, r3
9001fc78:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
9001fc7c:	f106 0a01 	add.w	sl, r6, #1
9001fc80:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
9001fc84:	f103 0c01 	add.w	ip, r3, #1
9001fc88:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
9001fc8c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9001fc90:	0976      	lsrs	r6, r6, #5
9001fc92:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
9001fc96:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
9001fc9a:	ea4c 0c02 	orr.w	ip, ip, r2
9001fc9e:	ea4c 0c06 	orr.w	ip, ip, r6
9001fca2:	f8a0 c000 	strh.w	ip, [r0]
9001fca6:	e7b9      	b.n	9001fc1c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
9001fca8:	f8b9 3000 	ldrh.w	r3, [r9]
9001fcac:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
9001fcb0:	eba3 0308 	sub.w	r3, r3, r8
9001fcb4:	eba6 0608 	sub.w	r6, r6, r8
9001fcb8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
9001fcbc:	eb04 0446 	add.w	r4, r4, r6, lsl #1
9001fcc0:	440e      	add	r6, r1
9001fcc2:	e79a      	b.n	9001fbfa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
9001fcc4:	4b03      	ldr	r3, [pc, #12]	@ (9001fcd4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
9001fcc6:	6818      	ldr	r0, [r3, #0]
9001fcc8:	6803      	ldr	r3, [r0, #0]
9001fcca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
9001fccc:	4798      	blx	r3
9001fcce:	b007      	add	sp, #28
9001fcd0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fcd4:	2402198c 	.word	0x2402198c
9001fcd8:	24021986 	.word	0x24021986

9001fcdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
9001fcdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9001fce0:	b089      	sub	sp, #36	@ 0x24
9001fce2:	4607      	mov	r7, r0
9001fce4:	4688      	mov	r8, r1
9001fce6:	4692      	mov	sl, r2
9001fce8:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
9001fcec:	4699      	mov	r9, r3
9001fcee:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9001fcf0:	2e00      	cmp	r6, #0
9001fcf2:	d048      	beq.n	9001fd86 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001fcf4:	4608      	mov	r0, r1
9001fcf6:	f7fa f813 	bl	90019d20 <_ZNK8touchgfx6Bitmap8getWidthEv>
9001fcfa:	4605      	mov	r5, r0
9001fcfc:	4640      	mov	r0, r8
9001fcfe:	f7fa f843 	bl	90019d88 <_ZNK8touchgfx6Bitmap9getHeightEv>
9001fd02:	f8ad 000e 	strh.w	r0, [sp, #14]
9001fd06:	4640      	mov	r0, r8
9001fd08:	f8ad a008 	strh.w	sl, [sp, #8]
9001fd0c:	f8ad 500c 	strh.w	r5, [sp, #12]
9001fd10:	f8ad 900a 	strh.w	r9, [sp, #10]
9001fd14:	f7fa f8f6 	bl	90019f04 <_ZNK8touchgfx6Bitmap7getDataEv>
9001fd18:	4605      	mov	r5, r0
9001fd1a:	4640      	mov	r0, r8
9001fd1c:	f7fa f922 	bl	90019f64 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
9001fd20:	4682      	mov	sl, r0
9001fd22:	4640      	mov	r0, r8
9001fd24:	f7fa f972 	bl	9001a00c <_ZNK8touchgfx6Bitmap9getFormatEv>
9001fd28:	2810      	cmp	r0, #16
9001fd2a:	d82c      	bhi.n	9001fd86 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001fd2c:	e8df f010 	tbh	[pc, r0, lsl #1]
9001fd30:	00ba00ca 	.word	0x00ba00ca
9001fd34:	002b0011 	.word	0x002b0011
9001fd38:	002b002b 	.word	0x002b002b
9001fd3c:	002b002b 	.word	0x002b002b
9001fd40:	002b002b 	.word	0x002b002b
9001fd44:	00c1002b 	.word	0x00c1002b
9001fd48:	002b002b 	.word	0x002b002b
9001fd4c:	002b0180 	.word	0x002b0180
9001fd50:	0173      	.short	0x0173
9001fd52:	4bbc      	ldr	r3, [pc, #752]	@ (90020044 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
9001fd54:	6818      	ldr	r0, [r3, #0]
9001fd56:	6803      	ldr	r3, [r0, #0]
9001fd58:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
9001fd5a:	4798      	blx	r3
9001fd5c:	2eff      	cmp	r6, #255	@ 0xff
9001fd5e:	d101      	bne.n	9001fd64 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
9001fd60:	0683      	lsls	r3, r0, #26
9001fd62:	d506      	bpl.n	9001fd72 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
9001fd64:	4633      	mov	r3, r6
9001fd66:	4622      	mov	r2, r4
9001fd68:	a902      	add	r1, sp, #8
9001fd6a:	4628      	mov	r0, r5
9001fd6c:	f7ff f8fc 	bl	9001ef68 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001fd70:	e009      	b.n	9001fd86 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001fd72:	4640      	mov	r0, r8
9001fd74:	f7fa f88e 	bl	90019e94 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001fd78:	b940      	cbnz	r0, 9001fd8c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
9001fd7a:	4623      	mov	r3, r4
9001fd7c:	aa02      	add	r2, sp, #8
9001fd7e:	4629      	mov	r1, r5
9001fd80:	4638      	mov	r0, r7
9001fd82:	f7ff f9d7 	bl	9001f134 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001fd86:	b009      	add	sp, #36	@ 0x24
9001fd88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9001fd8c:	f10d 0918 	add.w	r9, sp, #24
9001fd90:	4641      	mov	r1, r8
9001fd92:	f10d 0810 	add.w	r8, sp, #16
9001fd96:	4648      	mov	r0, r9
9001fd98:	f7fa f82a 	bl	90019df0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001fd9c:	e899 0003 	ldmia.w	r9, {r0, r1}
9001fda0:	e888 0003 	stmia.w	r8, {r0, r1}
9001fda4:	4640      	mov	r0, r8
9001fda6:	4621      	mov	r1, r4
9001fda8:	f7f0 f9f6 	bl	90010198 <_ZN8touchgfx4RectaNERKS0_>
9001fdac:	4640      	mov	r0, r8
9001fdae:	f7f0 fa36 	bl	9001021e <_ZNK8touchgfx4Rect7isEmptyEv>
9001fdb2:	2800      	cmp	r0, #0
9001fdb4:	d1d6      	bne.n	9001fd64 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
9001fdb6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001fdba:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001fdbe:	4293      	cmp	r3, r2
9001fdc0:	dd12      	ble.n	9001fde8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
9001fdc2:	1a9b      	subs	r3, r3, r2
9001fdc4:	f9b4 0000 	ldrsh.w	r0, [r4]
9001fdc8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001fdcc:	f8ad 0018 	strh.w	r0, [sp, #24]
9001fdd0:	4628      	mov	r0, r5
9001fdd2:	f8ad 201a 	strh.w	r2, [sp, #26]
9001fdd6:	464a      	mov	r2, r9
9001fdd8:	f8ad 101c 	strh.w	r1, [sp, #28]
9001fddc:	a902      	add	r1, sp, #8
9001fdde:	f8ad 301e 	strh.w	r3, [sp, #30]
9001fde2:	4633      	mov	r3, r6
9001fde4:	f7ff f8c0 	bl	9001ef68 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001fde8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001fdec:	f9b4 2000 	ldrsh.w	r2, [r4]
9001fdf0:	4293      	cmp	r3, r2
9001fdf2:	dd12      	ble.n	9001fe1a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
9001fdf4:	1a9b      	subs	r3, r3, r2
9001fdf6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001fdfa:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001fdfe:	f8ad 2018 	strh.w	r2, [sp, #24]
9001fe02:	464a      	mov	r2, r9
9001fe04:	f8ad 001a 	strh.w	r0, [sp, #26]
9001fe08:	4628      	mov	r0, r5
9001fe0a:	f8ad 301c 	strh.w	r3, [sp, #28]
9001fe0e:	23ff      	movs	r3, #255	@ 0xff
9001fe10:	f8ad 101e 	strh.w	r1, [sp, #30]
9001fe14:	a902      	add	r1, sp, #8
9001fe16:	f7ff f8a7 	bl	9001ef68 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001fe1a:	4643      	mov	r3, r8
9001fe1c:	aa02      	add	r2, sp, #8
9001fe1e:	4629      	mov	r1, r5
9001fe20:	4638      	mov	r0, r7
9001fe22:	f7ff f987 	bl	9001f134 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
9001fe26:	88a2      	ldrh	r2, [r4, #4]
9001fe28:	8823      	ldrh	r3, [r4, #0]
9001fe2a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001fe2e:	4413      	add	r3, r2
9001fe30:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001fe34:	440a      	add	r2, r1
9001fe36:	b29b      	uxth	r3, r3
9001fe38:	b292      	uxth	r2, r2
9001fe3a:	b218      	sxth	r0, r3
9001fe3c:	b211      	sxth	r1, r2
9001fe3e:	4288      	cmp	r0, r1
9001fe40:	dd12      	ble.n	9001fe68 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
9001fe42:	1a9b      	subs	r3, r3, r2
9001fe44:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001fe48:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
9001fe4c:	464a      	mov	r2, r9
9001fe4e:	f8ad 1018 	strh.w	r1, [sp, #24]
9001fe52:	a902      	add	r1, sp, #8
9001fe54:	f8ad 301c 	strh.w	r3, [sp, #28]
9001fe58:	23ff      	movs	r3, #255	@ 0xff
9001fe5a:	f8ad 001e 	strh.w	r0, [sp, #30]
9001fe5e:	4628      	mov	r0, r5
9001fe60:	f8ad 601a 	strh.w	r6, [sp, #26]
9001fe64:	f7ff f880 	bl	9001ef68 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
9001fe68:	88e2      	ldrh	r2, [r4, #6]
9001fe6a:	8863      	ldrh	r3, [r4, #2]
9001fe6c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001fe70:	4413      	add	r3, r2
9001fe72:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001fe76:	440a      	add	r2, r1
9001fe78:	b29b      	uxth	r3, r3
9001fe7a:	b292      	uxth	r2, r2
9001fe7c:	b218      	sxth	r0, r3
9001fe7e:	b211      	sxth	r1, r2
9001fe80:	4288      	cmp	r0, r1
9001fe82:	dd80      	ble.n	9001fd86 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001fe84:	1a9b      	subs	r3, r3, r2
9001fe86:	f9b4 6000 	ldrsh.w	r6, [r4]
9001fe8a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
9001fe8e:	464a      	mov	r2, r9
9001fe90:	f8ad 301e 	strh.w	r3, [sp, #30]
9001fe94:	23ff      	movs	r3, #255	@ 0xff
9001fe96:	f8ad 6018 	strh.w	r6, [sp, #24]
9001fe9a:	f8ad 101a 	strh.w	r1, [sp, #26]
9001fe9e:	f8ad 001c 	strh.w	r0, [sp, #28]
9001fea2:	e761      	b.n	9001fd68 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
9001fea4:	4633      	mov	r3, r6
9001fea6:	4622      	mov	r2, r4
9001fea8:	a902      	add	r1, sp, #8
9001feaa:	4628      	mov	r0, r5
9001feac:	f7ff f9b2 	bl	9001f214 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
9001feb0:	e769      	b.n	9001fd86 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001feb2:	e9cd 4600 	strd	r4, r6, [sp]
9001feb6:	ab02      	add	r3, sp, #8
9001feb8:	4652      	mov	r2, sl
9001feba:	4629      	mov	r1, r5
9001febc:	4638      	mov	r0, r7
9001febe:	f7ff fd89 	bl	9001f9d4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
9001fec2:	e760      	b.n	9001fd86 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001fec4:	4640      	mov	r0, r8
9001fec6:	f7f9 ffe5 	bl	90019e94 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
9001feca:	b948      	cbnz	r0, 9001fee0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
9001fecc:	683b      	ldr	r3, [r7, #0]
9001fece:	aa02      	add	r2, sp, #8
9001fed0:	4629      	mov	r1, r5
9001fed2:	e9cd 6000 	strd	r6, r0, [sp]
9001fed6:	4638      	mov	r0, r7
9001fed8:	68de      	ldr	r6, [r3, #12]
9001feda:	4623      	mov	r3, r4
9001fedc:	47b0      	blx	r6
9001fede:	e752      	b.n	9001fd86 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001fee0:	f10d 0918 	add.w	r9, sp, #24
9001fee4:	4641      	mov	r1, r8
9001fee6:	f10d 0810 	add.w	r8, sp, #16
9001feea:	4648      	mov	r0, r9
9001feec:	f7f9 ff80 	bl	90019df0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
9001fef0:	e899 0003 	ldmia.w	r9, {r0, r1}
9001fef4:	e888 0003 	stmia.w	r8, {r0, r1}
9001fef8:	4640      	mov	r0, r8
9001fefa:	4621      	mov	r1, r4
9001fefc:	f7f0 f94c 	bl	90010198 <_ZN8touchgfx4RectaNERKS0_>
9001ff00:	4640      	mov	r0, r8
9001ff02:	f7f0 f98c 	bl	9001021e <_ZNK8touchgfx4Rect7isEmptyEv>
9001ff06:	b138      	cbz	r0, 9001ff18 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
9001ff08:	4623      	mov	r3, r4
9001ff0a:	9600      	str	r6, [sp, #0]
9001ff0c:	aa02      	add	r2, sp, #8
9001ff0e:	4651      	mov	r1, sl
9001ff10:	4628      	mov	r0, r5
9001ff12:	f7ff fdbd 	bl	9001fa90 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001ff16:	e736      	b.n	9001fd86 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001ff18:	683b      	ldr	r3, [r7, #0]
9001ff1a:	aa02      	add	r2, sp, #8
9001ff1c:	4629      	mov	r1, r5
9001ff1e:	e9cd 6000 	strd	r6, r0, [sp]
9001ff22:	4638      	mov	r0, r7
9001ff24:	f8d3 b00c 	ldr.w	fp, [r3, #12]
9001ff28:	4643      	mov	r3, r8
9001ff2a:	47d8      	blx	fp
9001ff2c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
9001ff30:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
9001ff34:	4293      	cmp	r3, r2
9001ff36:	dd13      	ble.n	9001ff60 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
9001ff38:	f9b4 0000 	ldrsh.w	r0, [r4]
9001ff3c:	1a9b      	subs	r3, r3, r2
9001ff3e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
9001ff42:	f8ad 0018 	strh.w	r0, [sp, #24]
9001ff46:	4628      	mov	r0, r5
9001ff48:	f8ad 201a 	strh.w	r2, [sp, #26]
9001ff4c:	aa02      	add	r2, sp, #8
9001ff4e:	f8ad 101c 	strh.w	r1, [sp, #28]
9001ff52:	4651      	mov	r1, sl
9001ff54:	f8ad 301e 	strh.w	r3, [sp, #30]
9001ff58:	464b      	mov	r3, r9
9001ff5a:	9600      	str	r6, [sp, #0]
9001ff5c:	f7ff fd98 	bl	9001fa90 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001ff60:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
9001ff64:	f9b4 2000 	ldrsh.w	r2, [r4]
9001ff68:	4293      	cmp	r3, r2
9001ff6a:	dd13      	ble.n	9001ff94 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
9001ff6c:	1a9b      	subs	r3, r3, r2
9001ff6e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
9001ff72:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
9001ff76:	f8ad 2018 	strh.w	r2, [sp, #24]
9001ff7a:	aa02      	add	r2, sp, #8
9001ff7c:	f8ad 001a 	strh.w	r0, [sp, #26]
9001ff80:	4628      	mov	r0, r5
9001ff82:	f8ad 301c 	strh.w	r3, [sp, #28]
9001ff86:	464b      	mov	r3, r9
9001ff88:	f8ad 101e 	strh.w	r1, [sp, #30]
9001ff8c:	4651      	mov	r1, sl
9001ff8e:	9600      	str	r6, [sp, #0]
9001ff90:	f7ff fd7e 	bl	9001fa90 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001ff94:	88a2      	ldrh	r2, [r4, #4]
9001ff96:	8823      	ldrh	r3, [r4, #0]
9001ff98:	f8bd 1014 	ldrh.w	r1, [sp, #20]
9001ff9c:	4413      	add	r3, r2
9001ff9e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
9001ffa2:	440a      	add	r2, r1
9001ffa4:	b29b      	uxth	r3, r3
9001ffa6:	b292      	uxth	r2, r2
9001ffa8:	b218      	sxth	r0, r3
9001ffaa:	b211      	sxth	r1, r2
9001ffac:	4288      	cmp	r0, r1
9001ffae:	dd13      	ble.n	9001ffd8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
9001ffb0:	1a9b      	subs	r3, r3, r2
9001ffb2:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
9001ffb6:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
9001ffba:	aa02      	add	r2, sp, #8
9001ffbc:	f8ad 1018 	strh.w	r1, [sp, #24]
9001ffc0:	4651      	mov	r1, sl
9001ffc2:	f8ad 301c 	strh.w	r3, [sp, #28]
9001ffc6:	464b      	mov	r3, r9
9001ffc8:	f8ad 001e 	strh.w	r0, [sp, #30]
9001ffcc:	4628      	mov	r0, r5
9001ffce:	9600      	str	r6, [sp, #0]
9001ffd0:	f8ad 701a 	strh.w	r7, [sp, #26]
9001ffd4:	f7ff fd5c 	bl	9001fa90 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
9001ffd8:	88e2      	ldrh	r2, [r4, #6]
9001ffda:	8863      	ldrh	r3, [r4, #2]
9001ffdc:	f8bd 1016 	ldrh.w	r1, [sp, #22]
9001ffe0:	4413      	add	r3, r2
9001ffe2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
9001ffe6:	440a      	add	r2, r1
9001ffe8:	b29b      	uxth	r3, r3
9001ffea:	b292      	uxth	r2, r2
9001ffec:	b218      	sxth	r0, r3
9001ffee:	b211      	sxth	r1, r2
9001fff0:	4288      	cmp	r0, r1
9001fff2:	f77f aec8 	ble.w	9001fd86 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9001fff6:	f9b4 7000 	ldrsh.w	r7, [r4]
9001fffa:	1a9b      	subs	r3, r3, r2
9001fffc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90020000:	f8ad 301e 	strh.w	r3, [sp, #30]
90020004:	464b      	mov	r3, r9
90020006:	f8ad 7018 	strh.w	r7, [sp, #24]
9002000a:	f8ad 101a 	strh.w	r1, [sp, #26]
9002000e:	f8ad 001c 	strh.w	r0, [sp, #28]
90020012:	9600      	str	r6, [sp, #0]
90020014:	e77a      	b.n	9001ff0c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
90020016:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
9002001a:	2800      	cmp	r0, #0
9002001c:	f43f aeb3 	beq.w	9001fd86 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020020:	6803      	ldr	r3, [r0, #0]
90020022:	9600      	str	r6, [sp, #0]
90020024:	68de      	ldr	r6, [r3, #12]
90020026:	4623      	mov	r3, r4
90020028:	aa02      	add	r2, sp, #8
9002002a:	4629      	mov	r1, r5
9002002c:	47b0      	blx	r6
9002002e:	e6aa      	b.n	9001fd86 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
90020030:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
90020034:	2800      	cmp	r0, #0
90020036:	f43f aea6 	beq.w	9001fd86 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
9002003a:	6803      	ldr	r3, [r0, #0]
9002003c:	9600      	str	r6, [sp, #0]
9002003e:	689e      	ldr	r6, [r3, #8]
90020040:	e7f1      	b.n	90020026 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
90020042:	bf00      	nop
90020044:	2402198c 	.word	0x2402198c

90020048 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
90020048:	b180      	cbz	r0, 9002006c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
9002004a:	2903      	cmp	r1, #3
9002004c:	d81c      	bhi.n	90020088 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
9002004e:	e8df f001 	tbb	[pc, r1]
90020052:	1d02      	.short	0x1d02
90020054:	1f08      	.short	0x1f08
90020056:	4b10      	ldr	r3, [pc, #64]	@ (90020098 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90020058:	8818      	ldrh	r0, [r3, #0]
9002005a:	f3c0 000e 	ubfx	r0, r0, #0, #15
9002005e:	4240      	negs	r0, r0
90020060:	4770      	bx	lr
90020062:	4b0d      	ldr	r3, [pc, #52]	@ (90020098 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
90020064:	8818      	ldrh	r0, [r3, #0]
90020066:	f3c0 000e 	ubfx	r0, r0, #0, #15
9002006a:	4770      	bx	lr
9002006c:	2903      	cmp	r1, #3
9002006e:	d80b      	bhi.n	90020088 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
90020070:	a301      	add	r3, pc, #4	@ (adr r3, 90020078 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
90020072:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
90020076:	bf00      	nop
90020078:	9002008d 	.word	0x9002008d
9002007c:	90020063 	.word	0x90020063
90020080:	90020091 	.word	0x90020091
90020084:	90020057 	.word	0x90020057
90020088:	2000      	movs	r0, #0
9002008a:	4770      	bx	lr
9002008c:	2001      	movs	r0, #1
9002008e:	4770      	bx	lr
90020090:	f04f 30ff 	mov.w	r0, #4294967295
90020094:	4770      	bx	lr
90020096:	bf00      	nop
90020098:	24021986 	.word	0x24021986

9002009c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
9002009c:	b180      	cbz	r0, 900200c0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
9002009e:	2903      	cmp	r1, #3
900200a0:	d81c      	bhi.n	900200dc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
900200a2:	e8df f001 	tbb	[pc, r1]
900200a6:	021d      	.short	0x021d
900200a8:	071f      	.short	0x071f
900200aa:	4b10      	ldr	r3, [pc, #64]	@ (900200ec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
900200ac:	8818      	ldrh	r0, [r3, #0]
900200ae:	f3c0 000e 	ubfx	r0, r0, #0, #15
900200b2:	4770      	bx	lr
900200b4:	4b0d      	ldr	r3, [pc, #52]	@ (900200ec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
900200b6:	8818      	ldrh	r0, [r3, #0]
900200b8:	f3c0 000e 	ubfx	r0, r0, #0, #15
900200bc:	4240      	negs	r0, r0
900200be:	4770      	bx	lr
900200c0:	2903      	cmp	r1, #3
900200c2:	d80b      	bhi.n	900200dc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
900200c4:	a301      	add	r3, pc, #4	@ (adr r3, 900200cc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
900200c6:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
900200ca:	bf00      	nop
900200cc:	900200ab 	.word	0x900200ab
900200d0:	900200e5 	.word	0x900200e5
900200d4:	900200b5 	.word	0x900200b5
900200d8:	900200e1 	.word	0x900200e1
900200dc:	2000      	movs	r0, #0
900200de:	4770      	bx	lr
900200e0:	2001      	movs	r0, #1
900200e2:	4770      	bx	lr
900200e4:	f04f 30ff 	mov.w	r0, #4294967295
900200e8:	4770      	bx	lr
900200ea:	bf00      	nop
900200ec:	24021986 	.word	0x24021986

900200f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
900200f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900200f4:	b099      	sub	sp, #100	@ 0x64
900200f6:	910d      	str	r1, [sp, #52]	@ 0x34
900200f8:	a914      	add	r1, sp, #80	@ 0x50
900200fa:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
900200fe:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
90020102:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
90020106:	9f28      	ldr	r7, [sp, #160]	@ 0xa0
90020108:	f8dd 90a8 	ldr.w	r9, [sp, #168]	@ 0xa8
9002010c:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
90020110:	e881 000c 	stmia.w	r1, {r2, r3}
90020114:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
90020118:	930b      	str	r3, [sp, #44]	@ 0x2c
9002011a:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
9002011e:	9310      	str	r3, [sp, #64]	@ 0x40
90020120:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
90020124:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
90020128:	9308      	str	r3, [sp, #32]
9002012a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
9002012e:	9309      	str	r3, [sp, #36]	@ 0x24
90020130:	7b4b      	ldrb	r3, [r1, #13]
90020132:	ea4f 1843 	mov.w	r8, r3, lsl #5
90020136:	f408 7080 	and.w	r0, r8, #256	@ 0x100
9002013a:	f891 8006 	ldrb.w	r8, [r1, #6]
9002013e:	ea58 0800 	orrs.w	r8, r8, r0
90020142:	f000 81d0 	beq.w	900204e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90020146:	011b      	lsls	r3, r3, #4
90020148:	79c8      	ldrb	r0, [r1, #7]
9002014a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
9002014e:	4303      	orrs	r3, r0
90020150:	930c      	str	r3, [sp, #48]	@ 0x30
90020152:	f000 81c8 	beq.w	900204e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90020156:	f991 3009 	ldrsb.w	r3, [r1, #9]
9002015a:	b29b      	uxth	r3, r3
9002015c:	2d00      	cmp	r5, #0
9002015e:	f000 812d 	beq.w	900203bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2cc>
90020162:	1aed      	subs	r5, r5, r3
90020164:	b2ad      	uxth	r5, r5
90020166:	0429      	lsls	r1, r5, #16
90020168:	d502      	bpl.n	90020170 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
9002016a:	1b64      	subs	r4, r4, r5
9002016c:	2500      	movs	r5, #0
9002016e:	b224      	sxth	r4, r4
90020170:	f9b2 0000 	ldrsh.w	r0, [r2]
90020174:	8891      	ldrh	r1, [r2, #4]
90020176:	4284      	cmp	r4, r0
90020178:	b283      	uxth	r3, r0
9002017a:	bfb8      	it	lt
9002017c:	18ed      	addlt	r5, r5, r3
9002017e:	440b      	add	r3, r1
90020180:	b21b      	sxth	r3, r3
90020182:	bfb8      	it	lt
90020184:	1b2c      	sublt	r4, r5, r4
90020186:	930a      	str	r3, [sp, #40]	@ 0x28
90020188:	bfb8      	it	lt
9002018a:	b2a5      	uxthlt	r5, r4
9002018c:	88d3      	ldrh	r3, [r2, #6]
9002018e:	bfb8      	it	lt
90020190:	4604      	movlt	r4, r0
90020192:	8852      	ldrh	r2, [r2, #2]
90020194:	a814      	add	r0, sp, #80	@ 0x50
90020196:	4621      	mov	r1, r4
90020198:	4413      	add	r3, r2
9002019a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9002019c:	b21b      	sxth	r3, r3
9002019e:	930f      	str	r3, [sp, #60]	@ 0x3c
900201a0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900201a2:	930e      	str	r3, [sp, #56]	@ 0x38
900201a4:	4bb2      	ldr	r3, [pc, #712]	@ (90020470 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
900201a6:	f893 b000 	ldrb.w	fp, [r3]
900201aa:	4653      	mov	r3, sl
900201ac:	f7f5 fcd1 	bl	90015b52 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
900201b0:	4621      	mov	r1, r4
900201b2:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
900201b6:	4653      	mov	r3, sl
900201b8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900201ba:	a814      	add	r0, sp, #80	@ 0x50
900201bc:	f7f5 fce6 	bl	90015b8c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
900201c0:	a918      	add	r1, sp, #96	@ 0x60
900201c2:	f821 0d02 	strh.w	r0, [r1, #-2]!
900201c6:	a817      	add	r0, sp, #92	@ 0x5c
900201c8:	f7f5 fe0c 	bl	90015de4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
900201cc:	f1ba 0f00 	cmp.w	sl, #0
900201d0:	f040 80f7 	bne.w	900203c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2d2>
900201d4:	f1bb 0f01 	cmp.w	fp, #1
900201d8:	f040 80fb 	bne.w	900203d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
900201dc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
900201de:	2b00      	cmp	r3, #0
900201e0:	f040 81a9 	bne.w	90020536 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x446>
900201e4:	fa1f f288 	uxth.w	r2, r8
900201e8:	b905      	cbnz	r5, 900201ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
900201ea:	b15e      	cbz	r6, 90020204 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x114>
900201ec:	fb06 5302 	mla	r3, r6, r2, r5
900201f0:	9808      	ldr	r0, [sp, #32]
900201f2:	4631      	mov	r1, r6
900201f4:	4343      	muls	r3, r0
900201f6:	f003 0607 	and.w	r6, r3, #7
900201fa:	eb07 07d3 	add.w	r7, r7, r3, lsr #3
900201fe:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020200:	1a5b      	subs	r3, r3, r1
90020202:	930e      	str	r3, [sp, #56]	@ 0x38
90020204:	f10b 31ff 	add.w	r1, fp, #4294967295
90020208:	424b      	negs	r3, r1
9002020a:	414b      	adcs	r3, r1
9002020c:	4651      	mov	r1, sl
9002020e:	4618      	mov	r0, r3
90020210:	930c      	str	r3, [sp, #48]	@ 0x30
90020212:	f7ff ff19 	bl	90020048 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
90020216:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020218:	4683      	mov	fp, r0
9002021a:	4618      	mov	r0, r3
9002021c:	f7ff ff3e 	bl	9002009c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
90020220:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90020222:	4603      	mov	r3, r0
90020224:	980b      	ldr	r0, [sp, #44]	@ 0x2c
90020226:	eba1 0a00 	sub.w	sl, r1, r0
9002022a:	990e      	ldr	r1, [sp, #56]	@ 0x38
9002022c:	458a      	cmp	sl, r1
9002022e:	bfa8      	it	ge
90020230:	468a      	movge	sl, r1
90020232:	f1ba 0f00 	cmp.w	sl, #0
90020236:	f340 8156 	ble.w	900204e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9002023a:	1b64      	subs	r4, r4, r5
9002023c:	990a      	ldr	r1, [sp, #40]	@ 0x28
9002023e:	1b0c      	subs	r4, r1, r4
90020240:	4544      	cmp	r4, r8
90020242:	bfd4      	ite	le
90020244:	ebc5 0504 	rsble	r5, r5, r4
90020248:	ebc5 0508 	rsbgt	r5, r5, r8
9002024c:	2d00      	cmp	r5, #0
9002024e:	f340 814a 	ble.w	900204e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90020252:	1b52      	subs	r2, r2, r5
90020254:	9908      	ldr	r1, [sp, #32]
90020256:	434a      	muls	r2, r1
90020258:	920e      	str	r2, [sp, #56]	@ 0x38
9002025a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
9002025c:	2a00      	cmp	r2, #0
9002025e:	f040 8176 	bne.w	9002054e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x45e>
90020262:	4a84      	ldr	r2, [pc, #528]	@ (90020474 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
90020264:	930a      	str	r3, [sp, #40]	@ 0x28
90020266:	6810      	ldr	r0, [r2, #0]
90020268:	6802      	ldr	r2, [r0, #0]
9002026a:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
9002026c:	4790      	blx	r2
9002026e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90020270:	9908      	ldr	r1, [sp, #32]
90020272:	2201      	movs	r2, #1
90020274:	408a      	lsls	r2, r1
90020276:	4980      	ldr	r1, [pc, #512]	@ (90020478 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x388>)
90020278:	3a01      	subs	r2, #1
9002027a:	880c      	ldrh	r4, [r1, #0]
9002027c:	f9bd 105c 	ldrsh.w	r1, [sp, #92]	@ 0x5c
90020280:	b2d2      	uxtb	r2, r2
90020282:	920c      	str	r2, [sp, #48]	@ 0x30
90020284:	f9bd 205e 	ldrsh.w	r2, [sp, #94]	@ 0x5e
90020288:	fb04 1202 	mla	r2, r4, r2, r1
9002028c:	ea4f 2419 	mov.w	r4, r9, lsr #8
90020290:	ea4f 1159 	mov.w	r1, r9, lsr #5
90020294:	eb00 0242 	add.w	r2, r0, r2, lsl #1
90020298:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002029c:	920a      	str	r2, [sp, #40]	@ 0x28
9002029e:	f3c9 4207 	ubfx	r2, r9, #16, #8
900202a2:	9212      	str	r2, [sp, #72]	@ 0x48
900202a4:	b2e2      	uxtb	r2, r4
900202a6:	9211      	str	r2, [sp, #68]	@ 0x44
900202a8:	fa5f f289 	uxtb.w	r2, r9
900202ac:	f3c9 09c4 	ubfx	r9, r9, #3, #5
900202b0:	9210      	str	r2, [sp, #64]	@ 0x40
900202b2:	4a72      	ldr	r2, [pc, #456]	@ (9002047c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x38c>)
900202b4:	4022      	ands	r2, r4
900202b6:	430a      	orrs	r2, r1
900202b8:	ea4f 014b 	mov.w	r1, fp, lsl #1
900202bc:	fb05 3b1b 	mls	fp, r5, fp, r3
900202c0:	ea42 0209 	orr.w	r2, r2, r9
900202c4:	460b      	mov	r3, r1
900202c6:	910b      	str	r1, [sp, #44]	@ 0x2c
900202c8:	b292      	uxth	r2, r2
900202ca:	436b      	muls	r3, r5
900202cc:	920f      	str	r2, [sp, #60]	@ 0x3c
900202ce:	eb03 034b 	add.w	r3, r3, fp, lsl #1
900202d2:	783a      	ldrb	r2, [r7, #0]
900202d4:	9313      	str	r3, [sp, #76]	@ 0x4c
900202d6:	4132      	asrs	r2, r6
900202d8:	b2d2      	uxtb	r2, r2
900202da:	f11a 3aff 	adds.w	sl, sl, #4294967295
900202de:	f0c0 814a 	bcc.w	90020576 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x486>
900202e2:	46a9      	mov	r9, r5
900202e4:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
900202e8:	f119 39ff 	adds.w	r9, r9, #4294967295
900202ec:	f0c0 8133 	bcc.w	90020556 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x466>
900202f0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900202f2:	4013      	ands	r3, r2
900202f4:	d054      	beq.n	900203a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2b0>
900202f6:	20ff      	movs	r0, #255	@ 0xff
900202f8:	990c      	ldr	r1, [sp, #48]	@ 0x30
900202fa:	fb90 f1f1 	sdiv	r1, r0, r1
900202fe:	434b      	muls	r3, r1
90020300:	2bfe      	cmp	r3, #254	@ 0xfe
90020302:	dd03      	ble.n	9002030c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x21c>
90020304:	9909      	ldr	r1, [sp, #36]	@ 0x24
90020306:	4281      	cmp	r1, r0
90020308:	f000 8123 	beq.w	90020552 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x462>
9002030c:	9909      	ldr	r1, [sp, #36]	@ 0x24
9002030e:	f8b8 4000 	ldrh.w	r4, [r8]
90020312:	fb11 f303 	smulbb	r3, r1, r3
90020316:	9812      	ldr	r0, [sp, #72]	@ 0x48
90020318:	ea4f 0ce4 	mov.w	ip, r4, asr #3
9002031c:	b29b      	uxth	r3, r3
9002031e:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
90020322:	1c59      	adds	r1, r3, #1
90020324:	ea4c 1c9c 	orr.w	ip, ip, ip, lsr #6
90020328:	eb01 2313 	add.w	r3, r1, r3, lsr #8
9002032c:	1221      	asrs	r1, r4, #8
9002032e:	f3c3 2307 	ubfx	r3, r3, #8, #8
90020332:	00e4      	lsls	r4, r4, #3
90020334:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90020338:	fa1f fe83 	uxth.w	lr, r3
9002033c:	43db      	mvns	r3, r3
9002033e:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
90020342:	fb10 fb0e 	smulbb	fp, r0, lr
90020346:	b2db      	uxtb	r3, r3
90020348:	9811      	ldr	r0, [sp, #68]	@ 0x44
9002034a:	b2e4      	uxtb	r4, r4
9002034c:	fb01 b103 	mla	r1, r1, r3, fp
90020350:	fb10 fb0e 	smulbb	fp, r0, lr
90020354:	9810      	ldr	r0, [sp, #64]	@ 0x40
90020356:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
9002035a:	fb10 fe0e 	smulbb	lr, r0, lr
9002035e:	b289      	uxth	r1, r1
90020360:	fb0c bc03 	mla	ip, ip, r3, fp
90020364:	fb04 e403 	mla	r4, r4, r3, lr
90020368:	1c4b      	adds	r3, r1, #1
9002036a:	fa1f fc8c 	uxth.w	ip, ip
9002036e:	b2a4      	uxth	r4, r4
90020370:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90020374:	f104 0b01 	add.w	fp, r4, #1
90020378:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
9002037c:	eb0b 2b14 	add.w	fp, fp, r4, lsr #8
90020380:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
90020384:	ea4b 0101 	orr.w	r1, fp, r1
90020388:	f10c 0b01 	add.w	fp, ip, #1
9002038c:	eb0b 2b1c 	add.w	fp, fp, ip, lsr #8
90020390:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
90020394:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90020398:	ea41 010b 	orr.w	r1, r1, fp
9002039c:	f8a8 1000 	strh.w	r1, [r8]
900203a0:	9b08      	ldr	r3, [sp, #32]
900203a2:	441e      	add	r6, r3
900203a4:	b2b6      	uxth	r6, r6
900203a6:	2e07      	cmp	r6, #7
900203a8:	bf98      	it	ls
900203aa:	411a      	asrls	r2, r3
900203ac:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
900203ae:	bf85      	ittet	hi
900203b0:	787a      	ldrbhi	r2, [r7, #1]
900203b2:	2600      	movhi	r6, #0
900203b4:	b2d2      	uxtbls	r2, r2
900203b6:	3701      	addhi	r7, #1
900203b8:	4498      	add	r8, r3
900203ba:	e795      	b.n	900202e8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f8>
900203bc:	441c      	add	r4, r3
900203be:	b224      	sxth	r4, r4
900203c0:	e6d6      	b.n	90020170 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x80>
900203c2:	f1ba 0f01 	cmp.w	sl, #1
900203c6:	f47f af09 	bne.w	900201dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
900203ca:	f1bb 0f01 	cmp.w	fp, #1
900203ce:	f47f af05 	bne.w	900201dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
900203d2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900203d4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900203d6:	1a99      	subs	r1, r3, r2
900203d8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900203da:	1b9b      	subs	r3, r3, r6
900203dc:	4299      	cmp	r1, r3
900203de:	bfa8      	it	ge
900203e0:	4619      	movge	r1, r3
900203e2:	2900      	cmp	r1, #0
900203e4:	9112      	str	r1, [sp, #72]	@ 0x48
900203e6:	dd7e      	ble.n	900204e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
900203e8:	4a22      	ldr	r2, [pc, #136]	@ (90020474 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>)
900203ea:	6810      	ldr	r0, [r2, #0]
900203ec:	9211      	str	r2, [sp, #68]	@ 0x44
900203ee:	6803      	ldr	r3, [r0, #0]
900203f0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
900203f2:	4798      	blx	r3
900203f4:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
900203f8:	9912      	ldr	r1, [sp, #72]	@ 0x48
900203fa:	d006      	beq.n	9002040a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31a>
900203fc:	9b08      	ldr	r3, [sp, #32]
900203fe:	2b04      	cmp	r3, #4
90020400:	d133      	bne.n	9002046a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37a>
90020402:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90020404:	3300      	adds	r3, #0
90020406:	bf18      	it	ne
90020408:	2301      	movne	r3, #1
9002040a:	0582      	lsls	r2, r0, #22
9002040c:	fa1f fc88 	uxth.w	ip, r8
90020410:	f140 80ba 	bpl.w	90020588 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x498>
90020414:	9808      	ldr	r0, [sp, #32]
90020416:	2808      	cmp	r0, #8
90020418:	f040 80b6 	bne.w	90020588 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x498>
9002041c:	2b00      	cmp	r3, #0
9002041e:	d065      	beq.n	900204ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3fc>
90020420:	f10c 0c01 	add.w	ip, ip, #1
90020424:	f02c 0301 	bic.w	r3, ip, #1
90020428:	b29b      	uxth	r3, r3
9002042a:	bb4d      	cbnz	r5, 90020480 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
9002042c:	eb08 0004 	add.w	r0, r8, r4
90020430:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90020432:	4290      	cmp	r0, r2
90020434:	dc24      	bgt.n	90020480 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x390>
90020436:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90020438:	b289      	uxth	r1, r1
9002043a:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
9002043e:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
90020442:	6810      	ldr	r0, [r2, #0]
90020444:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
90020448:	6804      	ldr	r4, [r0, #0]
9002044a:	9506      	str	r5, [sp, #24]
9002044c:	f44f 7580 	mov.w	r5, #256	@ 0x100
90020450:	9302      	str	r3, [sp, #8]
90020452:	9505      	str	r5, [sp, #20]
90020454:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90020456:	e9cd 3100 	strd	r3, r1, [sp]
9002045a:	e9cd 9503 	strd	r9, r5, [sp, #12]
9002045e:	4673      	mov	r3, lr
90020460:	6da4      	ldr	r4, [r4, #88]	@ 0x58
90020462:	fb06 710c 	mla	r1, r6, ip, r7
90020466:	47a0      	blx	r4
90020468:	e03d      	b.n	900204e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9002046a:	2300      	movs	r3, #0
9002046c:	e7cd      	b.n	9002040a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x31a>
9002046e:	bf00      	nop
90020470:	24021984 	.word	0x24021984
90020474:	2402198c 	.word	0x2402198c
90020478:	24021986 	.word	0x24021986
9002047c:	00fff800 	.word	0x00fff800
90020480:	eba4 0e05 	sub.w	lr, r4, r5
90020484:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90020486:	eba2 0e0e 	sub.w	lr, r2, lr
9002048a:	45c6      	cmp	lr, r8
9002048c:	bfd4      	ite	le
9002048e:	ebc5 0e0e 	rsble	lr, r5, lr
90020492:	ebc5 0e08 	rsbgt	lr, r5, r8
90020496:	f1be 0f00 	cmp.w	lr, #0
9002049a:	d024      	beq.n	900204e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9002049c:	07e8      	lsls	r0, r5, #31
9002049e:	f53f ae9d 	bmi.w	900201dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
900204a2:	f01e 0001 	ands.w	r0, lr, #1
900204a6:	f47f ae99 	bne.w	900201dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
900204aa:	9a11      	ldr	r2, [sp, #68]	@ 0x44
900204ac:	086d      	lsrs	r5, r5, #1
900204ae:	ea4f 0c5c 	mov.w	ip, ip, lsr #1
900204b2:	f8bd 805e 	ldrh.w	r8, [sp, #94]	@ 0x5e
900204b6:	6814      	ldr	r4, [r2, #0]
900204b8:	b289      	uxth	r1, r1
900204ba:	fb06 560c 	mla	r6, r6, ip, r5
900204be:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
900204c2:	6825      	ldr	r5, [r4, #0]
900204c4:	9006      	str	r0, [sp, #24]
900204c6:	f44f 7080 	mov.w	r0, #256	@ 0x100
900204ca:	9302      	str	r3, [sp, #8]
900204cc:	fa1f f38e 	uxth.w	r3, lr
900204d0:	9005      	str	r0, [sp, #20]
900204d2:	9809      	ldr	r0, [sp, #36]	@ 0x24
900204d4:	9101      	str	r1, [sp, #4]
900204d6:	19b9      	adds	r1, r7, r6
900204d8:	9300      	str	r3, [sp, #0]
900204da:	4643      	mov	r3, r8
900204dc:	e9cd 9003 	strd	r9, r0, [sp, #12]
900204e0:	4620      	mov	r0, r4
900204e2:	6dad      	ldr	r5, [r5, #88]	@ 0x58
900204e4:	47a8      	blx	r5
900204e6:	b019      	add	sp, #100	@ 0x64
900204e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900204ec:	4a28      	ldr	r2, [pc, #160]	@ (90020590 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4a0>)
900204ee:	1b64      	subs	r4, r4, r5
900204f0:	fb06 5608 	mla	r6, r6, r8, r5
900204f4:	b289      	uxth	r1, r1
900204f6:	6810      	ldr	r0, [r2, #0]
900204f8:	f8bd e05e 	ldrh.w	lr, [sp, #94]	@ 0x5e
900204fc:	f8d0 a000 	ldr.w	sl, [r0]
90020500:	9306      	str	r3, [sp, #24]
90020502:	f44f 7300 	mov.w	r3, #512	@ 0x200
90020506:	9101      	str	r1, [sp, #4]
90020508:	19b9      	adds	r1, r7, r6
9002050a:	9305      	str	r3, [sp, #20]
9002050c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002050e:	f8cd c008 	str.w	ip, [sp, #8]
90020512:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
90020516:	e9cd 9303 	strd	r9, r3, [sp, #12]
9002051a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002051c:	1b1c      	subs	r4, r3, r4
9002051e:	4673      	mov	r3, lr
90020520:	4544      	cmp	r4, r8
90020522:	bfd4      	ite	le
90020524:	ebc5 0504 	rsble	r5, r5, r4
90020528:	ebc5 0508 	rsbgt	r5, r5, r8
9002052c:	b2ad      	uxth	r5, r5
9002052e:	9500      	str	r5, [sp, #0]
90020530:	f8da 4058 	ldr.w	r4, [sl, #88]	@ 0x58
90020534:	e797      	b.n	90020466 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
90020536:	2208      	movs	r2, #8
90020538:	9b08      	ldr	r3, [sp, #32]
9002053a:	fb92 f3f3 	sdiv	r3, r2, r3
9002053e:	1e5a      	subs	r2, r3, #1
90020540:	4442      	add	r2, r8
90020542:	fb92 f2f3 	sdiv	r2, r2, r3
90020546:	fb12 f203 	smulbb	r2, r2, r3
9002054a:	b292      	uxth	r2, r2
9002054c:	e64c      	b.n	900201e8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
9002054e:	980d      	ldr	r0, [sp, #52]	@ 0x34
90020550:	e68e      	b.n	90020270 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x180>
90020552:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90020554:	e722      	b.n	9002039c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ac>
90020556:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90020558:	b143      	cbz	r3, 9002056c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x47c>
9002055a:	441e      	add	r6, r3
9002055c:	b2b6      	uxth	r6, r6
9002055e:	eb07 07d6 	add.w	r7, r7, r6, lsr #3
90020562:	f006 0607 	and.w	r6, r6, #7
90020566:	783a      	ldrb	r2, [r7, #0]
90020568:	4132      	asrs	r2, r6
9002056a:	b2d2      	uxtb	r2, r2
9002056c:	990a      	ldr	r1, [sp, #40]	@ 0x28
9002056e:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90020570:	4419      	add	r1, r3
90020572:	910a      	str	r1, [sp, #40]	@ 0x28
90020574:	e6b1      	b.n	900202da <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ea>
90020576:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90020578:	2b00      	cmp	r3, #0
9002057a:	d1b4      	bne.n	900204e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
9002057c:	4b04      	ldr	r3, [pc, #16]	@ (90020590 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x4a0>)
9002057e:	6818      	ldr	r0, [r3, #0]
90020580:	6803      	ldr	r3, [r0, #0]
90020582:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90020584:	4798      	blx	r3
90020586:	e7ae      	b.n	900204e6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f6>
90020588:	2b00      	cmp	r3, #0
9002058a:	f47f af49 	bne.w	90020420 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x330>
9002058e:	e625      	b.n	900201dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xec>
90020590:	2402198c 	.word	0x2402198c

90020594 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
90020594:	b538      	push	{r3, r4, r5, lr}
90020596:	4c15      	ldr	r4, [pc, #84]	@ (900205ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
90020598:	4605      	mov	r5, r0
9002059a:	7823      	ldrb	r3, [r4, #0]
9002059c:	f3bf 8f5b 	dmb	ish
900205a0:	07da      	lsls	r2, r3, #31
900205a2:	d40b      	bmi.n	900205bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
900205a4:	4620      	mov	r0, r4
900205a6:	f008 fc6b 	bl	90028e80 <__cxa_guard_acquire>
900205aa:	b138      	cbz	r0, 900205bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
900205ac:	4620      	mov	r0, r4
900205ae:	f008 fc73 	bl	90028e98 <__cxa_guard_release>
900205b2:	4a0f      	ldr	r2, [pc, #60]	@ (900205f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
900205b4:	490f      	ldr	r1, [pc, #60]	@ (900205f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
900205b6:	4810      	ldr	r0, [pc, #64]	@ (900205f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
900205b8:	f008 fc5b 	bl	90028e72 <__aeabi_atexit>
900205bc:	4c0f      	ldr	r4, [pc, #60]	@ (900205fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
900205be:	7823      	ldrb	r3, [r4, #0]
900205c0:	f3bf 8f5b 	dmb	ish
900205c4:	07db      	lsls	r3, r3, #31
900205c6:	d40b      	bmi.n	900205e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
900205c8:	4620      	mov	r0, r4
900205ca:	f008 fc59 	bl	90028e80 <__cxa_guard_acquire>
900205ce:	b138      	cbz	r0, 900205e0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
900205d0:	4620      	mov	r0, r4
900205d2:	f008 fc61 	bl	90028e98 <__cxa_guard_release>
900205d6:	4a06      	ldr	r2, [pc, #24]	@ (900205f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
900205d8:	4909      	ldr	r1, [pc, #36]	@ (90020600 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
900205da:	480a      	ldr	r0, [pc, #40]	@ (90020604 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
900205dc:	f008 fc49 	bl	90028e72 <__aeabi_atexit>
900205e0:	4b05      	ldr	r3, [pc, #20]	@ (900205f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
900205e2:	616b      	str	r3, [r5, #20]
900205e4:	4b07      	ldr	r3, [pc, #28]	@ (90020604 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
900205e6:	61ab      	str	r3, [r5, #24]
900205e8:	bd38      	pop	{r3, r4, r5, pc}
900205ea:	bf00      	nop
900205ec:	24021a70 	.word	0x24021a70
900205f0:	24000000 	.word	0x24000000
900205f4:	9001c681 	.word	0x9001c681
900205f8:	240000d4 	.word	0x240000d4
900205fc:	24021a74 	.word	0x24021a74
90020600:	9001c67f 	.word	0x9001c67f
90020604:	240000d8 	.word	0x240000d8

90020608 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
90020608:	b538      	push	{r3, r4, r5, lr}
9002060a:	4c15      	ldr	r4, [pc, #84]	@ (90020660 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
9002060c:	4605      	mov	r5, r0
9002060e:	7823      	ldrb	r3, [r4, #0]
90020610:	f3bf 8f5b 	dmb	ish
90020614:	07da      	lsls	r2, r3, #31
90020616:	d40b      	bmi.n	90020630 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
90020618:	4620      	mov	r0, r4
9002061a:	f008 fc31 	bl	90028e80 <__cxa_guard_acquire>
9002061e:	b138      	cbz	r0, 90020630 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
90020620:	4620      	mov	r0, r4
90020622:	f008 fc39 	bl	90028e98 <__cxa_guard_release>
90020626:	4a0f      	ldr	r2, [pc, #60]	@ (90020664 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
90020628:	490f      	ldr	r1, [pc, #60]	@ (90020668 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
9002062a:	4810      	ldr	r0, [pc, #64]	@ (9002066c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
9002062c:	f008 fc21 	bl	90028e72 <__aeabi_atexit>
90020630:	4c0f      	ldr	r4, [pc, #60]	@ (90020670 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
90020632:	7823      	ldrb	r3, [r4, #0]
90020634:	f3bf 8f5b 	dmb	ish
90020638:	07db      	lsls	r3, r3, #31
9002063a:	d40b      	bmi.n	90020654 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
9002063c:	4620      	mov	r0, r4
9002063e:	f008 fc1f 	bl	90028e80 <__cxa_guard_acquire>
90020642:	b138      	cbz	r0, 90020654 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
90020644:	4620      	mov	r0, r4
90020646:	f008 fc27 	bl	90028e98 <__cxa_guard_release>
9002064a:	4a06      	ldr	r2, [pc, #24]	@ (90020664 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
9002064c:	4909      	ldr	r1, [pc, #36]	@ (90020674 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
9002064e:	480a      	ldr	r0, [pc, #40]	@ (90020678 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
90020650:	f008 fc0f 	bl	90028e72 <__aeabi_atexit>
90020654:	4b05      	ldr	r3, [pc, #20]	@ (9002066c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
90020656:	60eb      	str	r3, [r5, #12]
90020658:	4b07      	ldr	r3, [pc, #28]	@ (90020678 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
9002065a:	612b      	str	r3, [r5, #16]
9002065c:	bd38      	pop	{r3, r4, r5, pc}
9002065e:	bf00      	nop
90020660:	24021a48 	.word	0x24021a48
90020664:	24000000 	.word	0x24000000
90020668:	9001c685 	.word	0x9001c685
9002066c:	240000ac 	.word	0x240000ac
90020670:	24021a4c 	.word	0x24021a4c
90020674:	9001c683 	.word	0x9001c683
90020678:	240000b0 	.word	0x240000b0

9002067c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
9002067c:	b510      	push	{r4, lr}
9002067e:	4604      	mov	r4, r0
90020680:	f7ff ff88 	bl	90020594 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
90020684:	4620      	mov	r0, r4
90020686:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002068a:	f7ff bfbd 	b.w	90020608 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

90020690 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
90020690:	b538      	push	{r3, r4, r5, lr}
90020692:	4c15      	ldr	r4, [pc, #84]	@ (900206e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
90020694:	4605      	mov	r5, r0
90020696:	7823      	ldrb	r3, [r4, #0]
90020698:	f3bf 8f5b 	dmb	ish
9002069c:	07da      	lsls	r2, r3, #31
9002069e:	d40b      	bmi.n	900206b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
900206a0:	4620      	mov	r0, r4
900206a2:	f008 fbed 	bl	90028e80 <__cxa_guard_acquire>
900206a6:	b138      	cbz	r0, 900206b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
900206a8:	4620      	mov	r0, r4
900206aa:	f008 fbf5 	bl	90028e98 <__cxa_guard_release>
900206ae:	4a0f      	ldr	r2, [pc, #60]	@ (900206ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
900206b0:	490f      	ldr	r1, [pc, #60]	@ (900206f0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
900206b2:	4810      	ldr	r0, [pc, #64]	@ (900206f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
900206b4:	f008 fbdd 	bl	90028e72 <__aeabi_atexit>
900206b8:	4c0f      	ldr	r4, [pc, #60]	@ (900206f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
900206ba:	7823      	ldrb	r3, [r4, #0]
900206bc:	f3bf 8f5b 	dmb	ish
900206c0:	07db      	lsls	r3, r3, #31
900206c2:	d40b      	bmi.n	900206dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
900206c4:	4620      	mov	r0, r4
900206c6:	f008 fbdb 	bl	90028e80 <__cxa_guard_acquire>
900206ca:	b138      	cbz	r0, 900206dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
900206cc:	4620      	mov	r0, r4
900206ce:	f008 fbe3 	bl	90028e98 <__cxa_guard_release>
900206d2:	4a06      	ldr	r2, [pc, #24]	@ (900206ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
900206d4:	4909      	ldr	r1, [pc, #36]	@ (900206fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
900206d6:	480a      	ldr	r0, [pc, #40]	@ (90020700 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
900206d8:	f008 fbcb 	bl	90028e72 <__aeabi_atexit>
900206dc:	4b05      	ldr	r3, [pc, #20]	@ (900206f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
900206de:	626b      	str	r3, [r5, #36]	@ 0x24
900206e0:	4b07      	ldr	r3, [pc, #28]	@ (90020700 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
900206e2:	62ab      	str	r3, [r5, #40]	@ 0x28
900206e4:	bd38      	pop	{r3, r4, r5, pc}
900206e6:	bf00      	nop
900206e8:	24021a78 	.word	0x24021a78
900206ec:	24000000 	.word	0x24000000
900206f0:	9001c679 	.word	0x9001c679
900206f4:	240000dc 	.word	0x240000dc
900206f8:	24021a7c 	.word	0x24021a7c
900206fc:	9001c677 	.word	0x9001c677
90020700:	240000e0 	.word	0x240000e0

90020704 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
90020704:	b538      	push	{r3, r4, r5, lr}
90020706:	4c15      	ldr	r4, [pc, #84]	@ (9002075c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
90020708:	4605      	mov	r5, r0
9002070a:	7823      	ldrb	r3, [r4, #0]
9002070c:	f3bf 8f5b 	dmb	ish
90020710:	07da      	lsls	r2, r3, #31
90020712:	d40b      	bmi.n	9002072c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
90020714:	4620      	mov	r0, r4
90020716:	f008 fbb3 	bl	90028e80 <__cxa_guard_acquire>
9002071a:	b138      	cbz	r0, 9002072c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
9002071c:	4620      	mov	r0, r4
9002071e:	f008 fbbb 	bl	90028e98 <__cxa_guard_release>
90020722:	4a0f      	ldr	r2, [pc, #60]	@ (90020760 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90020724:	490f      	ldr	r1, [pc, #60]	@ (90020764 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
90020726:	4810      	ldr	r0, [pc, #64]	@ (90020768 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90020728:	f008 fba3 	bl	90028e72 <__aeabi_atexit>
9002072c:	4c0f      	ldr	r4, [pc, #60]	@ (9002076c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
9002072e:	7823      	ldrb	r3, [r4, #0]
90020730:	f3bf 8f5b 	dmb	ish
90020734:	07db      	lsls	r3, r3, #31
90020736:	d40b      	bmi.n	90020750 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90020738:	4620      	mov	r0, r4
9002073a:	f008 fba1 	bl	90028e80 <__cxa_guard_acquire>
9002073e:	b138      	cbz	r0, 90020750 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
90020740:	4620      	mov	r0, r4
90020742:	f008 fba9 	bl	90028e98 <__cxa_guard_release>
90020746:	4a06      	ldr	r2, [pc, #24]	@ (90020760 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
90020748:	4909      	ldr	r1, [pc, #36]	@ (90020770 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
9002074a:	480a      	ldr	r0, [pc, #40]	@ (90020774 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
9002074c:	f008 fb91 	bl	90028e72 <__aeabi_atexit>
90020750:	4b05      	ldr	r3, [pc, #20]	@ (90020768 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
90020752:	61eb      	str	r3, [r5, #28]
90020754:	4b07      	ldr	r3, [pc, #28]	@ (90020774 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
90020756:	622b      	str	r3, [r5, #32]
90020758:	bd38      	pop	{r3, r4, r5, pc}
9002075a:	bf00      	nop
9002075c:	24021a50 	.word	0x24021a50
90020760:	24000000 	.word	0x24000000
90020764:	9001c67d 	.word	0x9001c67d
90020768:	240000b4 	.word	0x240000b4
9002076c:	24021a54 	.word	0x24021a54
90020770:	9001c67b 	.word	0x9001c67b
90020774:	240000b8 	.word	0x240000b8

90020778 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
90020778:	b510      	push	{r4, lr}
9002077a:	4604      	mov	r4, r0
9002077c:	f7ff ff88 	bl	90020690 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
90020780:	4620      	mov	r0, r4
90020782:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90020786:	f7ff bfbd 	b.w	90020704 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

9002078c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
9002078c:	b538      	push	{r3, r4, r5, lr}
9002078e:	4c15      	ldr	r4, [pc, #84]	@ (900207e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
90020790:	4605      	mov	r5, r0
90020792:	7823      	ldrb	r3, [r4, #0]
90020794:	f3bf 8f5b 	dmb	ish
90020798:	07da      	lsls	r2, r3, #31
9002079a:	d40b      	bmi.n	900207b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
9002079c:	4620      	mov	r0, r4
9002079e:	f008 fb6f 	bl	90028e80 <__cxa_guard_acquire>
900207a2:	b138      	cbz	r0, 900207b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
900207a4:	4620      	mov	r0, r4
900207a6:	f008 fb77 	bl	90028e98 <__cxa_guard_release>
900207aa:	4a0f      	ldr	r2, [pc, #60]	@ (900207e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
900207ac:	490f      	ldr	r1, [pc, #60]	@ (900207ec <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
900207ae:	4810      	ldr	r0, [pc, #64]	@ (900207f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
900207b0:	f008 fb5f 	bl	90028e72 <__aeabi_atexit>
900207b4:	4c0f      	ldr	r4, [pc, #60]	@ (900207f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
900207b6:	7823      	ldrb	r3, [r4, #0]
900207b8:	f3bf 8f5b 	dmb	ish
900207bc:	07db      	lsls	r3, r3, #31
900207be:	d40b      	bmi.n	900207d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
900207c0:	4620      	mov	r0, r4
900207c2:	f008 fb5d 	bl	90028e80 <__cxa_guard_acquire>
900207c6:	b138      	cbz	r0, 900207d8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
900207c8:	4620      	mov	r0, r4
900207ca:	f008 fb65 	bl	90028e98 <__cxa_guard_release>
900207ce:	4a06      	ldr	r2, [pc, #24]	@ (900207e8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
900207d0:	4909      	ldr	r1, [pc, #36]	@ (900207f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
900207d2:	480a      	ldr	r0, [pc, #40]	@ (900207fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
900207d4:	f008 fb4d 	bl	90028e72 <__aeabi_atexit>
900207d8:	4b05      	ldr	r3, [pc, #20]	@ (900207f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
900207da:	636b      	str	r3, [r5, #52]	@ 0x34
900207dc:	4b07      	ldr	r3, [pc, #28]	@ (900207fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
900207de:	63ab      	str	r3, [r5, #56]	@ 0x38
900207e0:	bd38      	pop	{r3, r4, r5, pc}
900207e2:	bf00      	nop
900207e4:	24021a88 	.word	0x24021a88
900207e8:	24000000 	.word	0x24000000
900207ec:	9001c671 	.word	0x9001c671
900207f0:	240000ec 	.word	0x240000ec
900207f4:	24021a8c 	.word	0x24021a8c
900207f8:	9001c66f 	.word	0x9001c66f
900207fc:	240000f0 	.word	0x240000f0

90020800 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
90020800:	b538      	push	{r3, r4, r5, lr}
90020802:	4c15      	ldr	r4, [pc, #84]	@ (90020858 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
90020804:	4605      	mov	r5, r0
90020806:	7823      	ldrb	r3, [r4, #0]
90020808:	f3bf 8f5b 	dmb	ish
9002080c:	07da      	lsls	r2, r3, #31
9002080e:	d40b      	bmi.n	90020828 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90020810:	4620      	mov	r0, r4
90020812:	f008 fb35 	bl	90028e80 <__cxa_guard_acquire>
90020816:	b138      	cbz	r0, 90020828 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
90020818:	4620      	mov	r0, r4
9002081a:	f008 fb3d 	bl	90028e98 <__cxa_guard_release>
9002081e:	4a0f      	ldr	r2, [pc, #60]	@ (9002085c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90020820:	490f      	ldr	r1, [pc, #60]	@ (90020860 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
90020822:	4810      	ldr	r0, [pc, #64]	@ (90020864 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
90020824:	f008 fb25 	bl	90028e72 <__aeabi_atexit>
90020828:	4c0f      	ldr	r4, [pc, #60]	@ (90020868 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
9002082a:	7823      	ldrb	r3, [r4, #0]
9002082c:	f3bf 8f5b 	dmb	ish
90020830:	07db      	lsls	r3, r3, #31
90020832:	d40b      	bmi.n	9002084c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
90020834:	4620      	mov	r0, r4
90020836:	f008 fb23 	bl	90028e80 <__cxa_guard_acquire>
9002083a:	b138      	cbz	r0, 9002084c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
9002083c:	4620      	mov	r0, r4
9002083e:	f008 fb2b 	bl	90028e98 <__cxa_guard_release>
90020842:	4a06      	ldr	r2, [pc, #24]	@ (9002085c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
90020844:	4909      	ldr	r1, [pc, #36]	@ (9002086c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
90020846:	480a      	ldr	r0, [pc, #40]	@ (90020870 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90020848:	f008 fb13 	bl	90028e72 <__aeabi_atexit>
9002084c:	4b05      	ldr	r3, [pc, #20]	@ (90020864 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
9002084e:	62eb      	str	r3, [r5, #44]	@ 0x2c
90020850:	4b07      	ldr	r3, [pc, #28]	@ (90020870 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
90020852:	632b      	str	r3, [r5, #48]	@ 0x30
90020854:	bd38      	pop	{r3, r4, r5, pc}
90020856:	bf00      	nop
90020858:	24021a58 	.word	0x24021a58
9002085c:	24000000 	.word	0x24000000
90020860:	9001c675 	.word	0x9001c675
90020864:	240000bc 	.word	0x240000bc
90020868:	24021a5c 	.word	0x24021a5c
9002086c:	9001c673 	.word	0x9001c673
90020870:	240000c0 	.word	0x240000c0

90020874 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
90020874:	b510      	push	{r4, lr}
90020876:	4604      	mov	r4, r0
90020878:	f7ff ff88 	bl	9002078c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
9002087c:	4620      	mov	r0, r4
9002087e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90020882:	f7ff bfbd 	b.w	90020800 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

90020888 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
90020888:	b538      	push	{r3, r4, r5, lr}
9002088a:	4c15      	ldr	r4, [pc, #84]	@ (900208e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
9002088c:	4605      	mov	r5, r0
9002088e:	7823      	ldrb	r3, [r4, #0]
90020890:	f3bf 8f5b 	dmb	ish
90020894:	07da      	lsls	r2, r3, #31
90020896:	d40b      	bmi.n	900208b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
90020898:	4620      	mov	r0, r4
9002089a:	f008 faf1 	bl	90028e80 <__cxa_guard_acquire>
9002089e:	b138      	cbz	r0, 900208b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
900208a0:	4620      	mov	r0, r4
900208a2:	f008 faf9 	bl	90028e98 <__cxa_guard_release>
900208a6:	4a0f      	ldr	r2, [pc, #60]	@ (900208e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
900208a8:	490f      	ldr	r1, [pc, #60]	@ (900208e8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
900208aa:	4810      	ldr	r0, [pc, #64]	@ (900208ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
900208ac:	f008 fae1 	bl	90028e72 <__aeabi_atexit>
900208b0:	4c0f      	ldr	r4, [pc, #60]	@ (900208f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
900208b2:	7823      	ldrb	r3, [r4, #0]
900208b4:	f3bf 8f5b 	dmb	ish
900208b8:	07db      	lsls	r3, r3, #31
900208ba:	d40b      	bmi.n	900208d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
900208bc:	4620      	mov	r0, r4
900208be:	f008 fadf 	bl	90028e80 <__cxa_guard_acquire>
900208c2:	b138      	cbz	r0, 900208d4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
900208c4:	4620      	mov	r0, r4
900208c6:	f008 fae7 	bl	90028e98 <__cxa_guard_release>
900208ca:	4a06      	ldr	r2, [pc, #24]	@ (900208e4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
900208cc:	4909      	ldr	r1, [pc, #36]	@ (900208f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
900208ce:	480a      	ldr	r0, [pc, #40]	@ (900208f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
900208d0:	f008 facf 	bl	90028e72 <__aeabi_atexit>
900208d4:	4b05      	ldr	r3, [pc, #20]	@ (900208ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
900208d6:	656b      	str	r3, [r5, #84]	@ 0x54
900208d8:	4b07      	ldr	r3, [pc, #28]	@ (900208f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
900208da:	65ab      	str	r3, [r5, #88]	@ 0x58
900208dc:	bd38      	pop	{r3, r4, r5, pc}
900208de:	bf00      	nop
900208e0:	24021a90 	.word	0x24021a90
900208e4:	24000000 	.word	0x24000000
900208e8:	9001c661 	.word	0x9001c661
900208ec:	240000f4 	.word	0x240000f4
900208f0:	24021a94 	.word	0x24021a94
900208f4:	9001c65f 	.word	0x9001c65f
900208f8:	240000f8 	.word	0x240000f8

900208fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
900208fc:	b538      	push	{r3, r4, r5, lr}
900208fe:	4c15      	ldr	r4, [pc, #84]	@ (90020954 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
90020900:	4605      	mov	r5, r0
90020902:	7823      	ldrb	r3, [r4, #0]
90020904:	f3bf 8f5b 	dmb	ish
90020908:	07da      	lsls	r2, r3, #31
9002090a:	d40b      	bmi.n	90020924 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
9002090c:	4620      	mov	r0, r4
9002090e:	f008 fab7 	bl	90028e80 <__cxa_guard_acquire>
90020912:	b138      	cbz	r0, 90020924 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
90020914:	4620      	mov	r0, r4
90020916:	f008 fabf 	bl	90028e98 <__cxa_guard_release>
9002091a:	4a0f      	ldr	r2, [pc, #60]	@ (90020958 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
9002091c:	490f      	ldr	r1, [pc, #60]	@ (9002095c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
9002091e:	4810      	ldr	r0, [pc, #64]	@ (90020960 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
90020920:	f008 faa7 	bl	90028e72 <__aeabi_atexit>
90020924:	4c0f      	ldr	r4, [pc, #60]	@ (90020964 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
90020926:	7823      	ldrb	r3, [r4, #0]
90020928:	f3bf 8f5b 	dmb	ish
9002092c:	07db      	lsls	r3, r3, #31
9002092e:	d40b      	bmi.n	90020948 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90020930:	4620      	mov	r0, r4
90020932:	f008 faa5 	bl	90028e80 <__cxa_guard_acquire>
90020936:	b138      	cbz	r0, 90020948 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
90020938:	4620      	mov	r0, r4
9002093a:	f008 faad 	bl	90028e98 <__cxa_guard_release>
9002093e:	4a06      	ldr	r2, [pc, #24]	@ (90020958 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
90020940:	4909      	ldr	r1, [pc, #36]	@ (90020968 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
90020942:	480a      	ldr	r0, [pc, #40]	@ (9002096c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
90020944:	f008 fa95 	bl	90028e72 <__aeabi_atexit>
90020948:	4b05      	ldr	r3, [pc, #20]	@ (90020960 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
9002094a:	64eb      	str	r3, [r5, #76]	@ 0x4c
9002094c:	4b07      	ldr	r3, [pc, #28]	@ (9002096c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
9002094e:	652b      	str	r3, [r5, #80]	@ 0x50
90020950:	bd38      	pop	{r3, r4, r5, pc}
90020952:	bf00      	nop
90020954:	24021a98 	.word	0x24021a98
90020958:	24000000 	.word	0x24000000
9002095c:	9001c665 	.word	0x9001c665
90020960:	240000fc 	.word	0x240000fc
90020964:	24021a9c 	.word	0x24021a9c
90020968:	9001c663 	.word	0x9001c663
9002096c:	24000100 	.word	0x24000100

90020970 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
90020970:	b538      	push	{r3, r4, r5, lr}
90020972:	4c15      	ldr	r4, [pc, #84]	@ (900209c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
90020974:	4605      	mov	r5, r0
90020976:	7823      	ldrb	r3, [r4, #0]
90020978:	f3bf 8f5b 	dmb	ish
9002097c:	07da      	lsls	r2, r3, #31
9002097e:	d40b      	bmi.n	90020998 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90020980:	4620      	mov	r0, r4
90020982:	f008 fa7d 	bl	90028e80 <__cxa_guard_acquire>
90020986:	b138      	cbz	r0, 90020998 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
90020988:	4620      	mov	r0, r4
9002098a:	f008 fa85 	bl	90028e98 <__cxa_guard_release>
9002098e:	4a0f      	ldr	r2, [pc, #60]	@ (900209cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
90020990:	490f      	ldr	r1, [pc, #60]	@ (900209d0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
90020992:	4810      	ldr	r0, [pc, #64]	@ (900209d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
90020994:	f008 fa6d 	bl	90028e72 <__aeabi_atexit>
90020998:	4c0f      	ldr	r4, [pc, #60]	@ (900209d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
9002099a:	7823      	ldrb	r3, [r4, #0]
9002099c:	f3bf 8f5b 	dmb	ish
900209a0:	07db      	lsls	r3, r3, #31
900209a2:	d40b      	bmi.n	900209bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
900209a4:	4620      	mov	r0, r4
900209a6:	f008 fa6b 	bl	90028e80 <__cxa_guard_acquire>
900209aa:	b138      	cbz	r0, 900209bc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
900209ac:	4620      	mov	r0, r4
900209ae:	f008 fa73 	bl	90028e98 <__cxa_guard_release>
900209b2:	4a06      	ldr	r2, [pc, #24]	@ (900209cc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
900209b4:	4909      	ldr	r1, [pc, #36]	@ (900209dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
900209b6:	480a      	ldr	r0, [pc, #40]	@ (900209e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
900209b8:	f008 fa5b 	bl	90028e72 <__aeabi_atexit>
900209bc:	4b05      	ldr	r3, [pc, #20]	@ (900209d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
900209be:	646b      	str	r3, [r5, #68]	@ 0x44
900209c0:	4b07      	ldr	r3, [pc, #28]	@ (900209e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
900209c2:	64ab      	str	r3, [r5, #72]	@ 0x48
900209c4:	bd38      	pop	{r3, r4, r5, pc}
900209c6:	bf00      	nop
900209c8:	24021a60 	.word	0x24021a60
900209cc:	24000000 	.word	0x24000000
900209d0:	9001c669 	.word	0x9001c669
900209d4:	240000c4 	.word	0x240000c4
900209d8:	24021a64 	.word	0x24021a64
900209dc:	9001c667 	.word	0x9001c667
900209e0:	240000c8 	.word	0x240000c8

900209e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
900209e4:	b538      	push	{r3, r4, r5, lr}
900209e6:	4c15      	ldr	r4, [pc, #84]	@ (90020a3c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
900209e8:	4605      	mov	r5, r0
900209ea:	7823      	ldrb	r3, [r4, #0]
900209ec:	f3bf 8f5b 	dmb	ish
900209f0:	07da      	lsls	r2, r3, #31
900209f2:	d40b      	bmi.n	90020a0c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
900209f4:	4620      	mov	r0, r4
900209f6:	f008 fa43 	bl	90028e80 <__cxa_guard_acquire>
900209fa:	b138      	cbz	r0, 90020a0c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
900209fc:	4620      	mov	r0, r4
900209fe:	f008 fa4b 	bl	90028e98 <__cxa_guard_release>
90020a02:	4a0f      	ldr	r2, [pc, #60]	@ (90020a40 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90020a04:	490f      	ldr	r1, [pc, #60]	@ (90020a44 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
90020a06:	4810      	ldr	r0, [pc, #64]	@ (90020a48 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90020a08:	f008 fa33 	bl	90028e72 <__aeabi_atexit>
90020a0c:	4c0f      	ldr	r4, [pc, #60]	@ (90020a4c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
90020a0e:	7823      	ldrb	r3, [r4, #0]
90020a10:	f3bf 8f5b 	dmb	ish
90020a14:	07db      	lsls	r3, r3, #31
90020a16:	d40b      	bmi.n	90020a30 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90020a18:	4620      	mov	r0, r4
90020a1a:	f008 fa31 	bl	90028e80 <__cxa_guard_acquire>
90020a1e:	b138      	cbz	r0, 90020a30 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
90020a20:	4620      	mov	r0, r4
90020a22:	f008 fa39 	bl	90028e98 <__cxa_guard_release>
90020a26:	4a06      	ldr	r2, [pc, #24]	@ (90020a40 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
90020a28:	4909      	ldr	r1, [pc, #36]	@ (90020a50 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
90020a2a:	480a      	ldr	r0, [pc, #40]	@ (90020a54 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
90020a2c:	f008 fa21 	bl	90028e72 <__aeabi_atexit>
90020a30:	4b05      	ldr	r3, [pc, #20]	@ (90020a48 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
90020a32:	63eb      	str	r3, [r5, #60]	@ 0x3c
90020a34:	4b07      	ldr	r3, [pc, #28]	@ (90020a54 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
90020a36:	642b      	str	r3, [r5, #64]	@ 0x40
90020a38:	bd38      	pop	{r3, r4, r5, pc}
90020a3a:	bf00      	nop
90020a3c:	24021a80 	.word	0x24021a80
90020a40:	24000000 	.word	0x24000000
90020a44:	9001c66d 	.word	0x9001c66d
90020a48:	240000e4 	.word	0x240000e4
90020a4c:	24021a84 	.word	0x24021a84
90020a50:	9001c66b 	.word	0x9001c66b
90020a54:	240000e8 	.word	0x240000e8

90020a58 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
90020a58:	b510      	push	{r4, lr}
90020a5a:	4604      	mov	r4, r0
90020a5c:	f7ff ff14 	bl	90020888 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
90020a60:	4620      	mov	r0, r4
90020a62:	f7ff ff85 	bl	90020970 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
90020a66:	4620      	mov	r0, r4
90020a68:	f7ff ff48 	bl	900208fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
90020a6c:	4620      	mov	r0, r4
90020a6e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90020a72:	f7ff bfb7 	b.w	900209e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

90020a78 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
90020a78:	b538      	push	{r3, r4, r5, lr}
90020a7a:	4c15      	ldr	r4, [pc, #84]	@ (90020ad0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
90020a7c:	4605      	mov	r5, r0
90020a7e:	7823      	ldrb	r3, [r4, #0]
90020a80:	f3bf 8f5b 	dmb	ish
90020a84:	07da      	lsls	r2, r3, #31
90020a86:	d40b      	bmi.n	90020aa0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90020a88:	4620      	mov	r0, r4
90020a8a:	f008 f9f9 	bl	90028e80 <__cxa_guard_acquire>
90020a8e:	b138      	cbz	r0, 90020aa0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
90020a90:	4620      	mov	r0, r4
90020a92:	f008 fa01 	bl	90028e98 <__cxa_guard_release>
90020a96:	4a0f      	ldr	r2, [pc, #60]	@ (90020ad4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
90020a98:	490f      	ldr	r1, [pc, #60]	@ (90020ad8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
90020a9a:	4810      	ldr	r0, [pc, #64]	@ (90020adc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
90020a9c:	f008 f9e9 	bl	90028e72 <__aeabi_atexit>
90020aa0:	4c0f      	ldr	r4, [pc, #60]	@ (90020ae0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
90020aa2:	7823      	ldrb	r3, [r4, #0]
90020aa4:	f3bf 8f5b 	dmb	ish
90020aa8:	07db      	lsls	r3, r3, #31
90020aaa:	d40b      	bmi.n	90020ac4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90020aac:	4620      	mov	r0, r4
90020aae:	f008 f9e7 	bl	90028e80 <__cxa_guard_acquire>
90020ab2:	b138      	cbz	r0, 90020ac4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
90020ab4:	4620      	mov	r0, r4
90020ab6:	f008 f9ef 	bl	90028e98 <__cxa_guard_release>
90020aba:	4a06      	ldr	r2, [pc, #24]	@ (90020ad4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
90020abc:	4909      	ldr	r1, [pc, #36]	@ (90020ae4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
90020abe:	480a      	ldr	r0, [pc, #40]	@ (90020ae8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
90020ac0:	f008 f9d7 	bl	90028e72 <__aeabi_atexit>
90020ac4:	4b05      	ldr	r3, [pc, #20]	@ (90020adc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
90020ac6:	666b      	str	r3, [r5, #100]	@ 0x64
90020ac8:	4b07      	ldr	r3, [pc, #28]	@ (90020ae8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
90020aca:	66ab      	str	r3, [r5, #104]	@ 0x68
90020acc:	bd38      	pop	{r3, r4, r5, pc}
90020ace:	bf00      	nop
90020ad0:	24021a68 	.word	0x24021a68
90020ad4:	24000000 	.word	0x24000000
90020ad8:	9001c659 	.word	0x9001c659
90020adc:	240000cc 	.word	0x240000cc
90020ae0:	24021a6c 	.word	0x24021a6c
90020ae4:	9001c657 	.word	0x9001c657
90020ae8:	240000d0 	.word	0x240000d0

90020aec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
90020aec:	b538      	push	{r3, r4, r5, lr}
90020aee:	4c15      	ldr	r4, [pc, #84]	@ (90020b44 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
90020af0:	4605      	mov	r5, r0
90020af2:	7823      	ldrb	r3, [r4, #0]
90020af4:	f3bf 8f5b 	dmb	ish
90020af8:	07da      	lsls	r2, r3, #31
90020afa:	d40b      	bmi.n	90020b14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90020afc:	4620      	mov	r0, r4
90020afe:	f008 f9bf 	bl	90028e80 <__cxa_guard_acquire>
90020b02:	b138      	cbz	r0, 90020b14 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
90020b04:	4620      	mov	r0, r4
90020b06:	f008 f9c7 	bl	90028e98 <__cxa_guard_release>
90020b0a:	4a0f      	ldr	r2, [pc, #60]	@ (90020b48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90020b0c:	490f      	ldr	r1, [pc, #60]	@ (90020b4c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
90020b0e:	4810      	ldr	r0, [pc, #64]	@ (90020b50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90020b10:	f008 f9af 	bl	90028e72 <__aeabi_atexit>
90020b14:	4c0f      	ldr	r4, [pc, #60]	@ (90020b54 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
90020b16:	7823      	ldrb	r3, [r4, #0]
90020b18:	f3bf 8f5b 	dmb	ish
90020b1c:	07db      	lsls	r3, r3, #31
90020b1e:	d40b      	bmi.n	90020b38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90020b20:	4620      	mov	r0, r4
90020b22:	f008 f9ad 	bl	90028e80 <__cxa_guard_acquire>
90020b26:	b138      	cbz	r0, 90020b38 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
90020b28:	4620      	mov	r0, r4
90020b2a:	f008 f9b5 	bl	90028e98 <__cxa_guard_release>
90020b2e:	4a06      	ldr	r2, [pc, #24]	@ (90020b48 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
90020b30:	4909      	ldr	r1, [pc, #36]	@ (90020b58 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
90020b32:	480a      	ldr	r0, [pc, #40]	@ (90020b5c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90020b34:	f008 f99d 	bl	90028e72 <__aeabi_atexit>
90020b38:	4b05      	ldr	r3, [pc, #20]	@ (90020b50 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
90020b3a:	65eb      	str	r3, [r5, #92]	@ 0x5c
90020b3c:	4b07      	ldr	r3, [pc, #28]	@ (90020b5c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
90020b3e:	662b      	str	r3, [r5, #96]	@ 0x60
90020b40:	bd38      	pop	{r3, r4, r5, pc}
90020b42:	bf00      	nop
90020b44:	24021a40 	.word	0x24021a40
90020b48:	24000000 	.word	0x24000000
90020b4c:	9001c65d 	.word	0x9001c65d
90020b50:	240000a4 	.word	0x240000a4
90020b54:	24021a44 	.word	0x24021a44
90020b58:	9001c65b 	.word	0x9001c65b
90020b5c:	240000a8 	.word	0x240000a8

90020b60 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
90020b60:	b510      	push	{r4, lr}
90020b62:	4604      	mov	r4, r0
90020b64:	f7ff ff88 	bl	90020a78 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
90020b68:	4620      	mov	r0, r4
90020b6a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90020b6e:	f7ff bfbd 	b.w	90020aec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

90020b74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
90020b74:	b538      	push	{r3, r4, r5, lr}
90020b76:	4c15      	ldr	r4, [pc, #84]	@ (90020bcc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
90020b78:	4605      	mov	r5, r0
90020b7a:	7823      	ldrb	r3, [r4, #0]
90020b7c:	f3bf 8f5b 	dmb	ish
90020b80:	07da      	lsls	r2, r3, #31
90020b82:	d40b      	bmi.n	90020b9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90020b84:	4620      	mov	r0, r4
90020b86:	f008 f97b 	bl	90028e80 <__cxa_guard_acquire>
90020b8a:	b138      	cbz	r0, 90020b9c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
90020b8c:	4620      	mov	r0, r4
90020b8e:	f008 f983 	bl	90028e98 <__cxa_guard_release>
90020b92:	4a0f      	ldr	r2, [pc, #60]	@ (90020bd0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
90020b94:	490f      	ldr	r1, [pc, #60]	@ (90020bd4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
90020b96:	4810      	ldr	r0, [pc, #64]	@ (90020bd8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
90020b98:	f008 f96b 	bl	90028e72 <__aeabi_atexit>
90020b9c:	4c0f      	ldr	r4, [pc, #60]	@ (90020bdc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
90020b9e:	7823      	ldrb	r3, [r4, #0]
90020ba0:	f3bf 8f5b 	dmb	ish
90020ba4:	07db      	lsls	r3, r3, #31
90020ba6:	d40b      	bmi.n	90020bc0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90020ba8:	4620      	mov	r0, r4
90020baa:	f008 f969 	bl	90028e80 <__cxa_guard_acquire>
90020bae:	b138      	cbz	r0, 90020bc0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
90020bb0:	4620      	mov	r0, r4
90020bb2:	f008 f971 	bl	90028e98 <__cxa_guard_release>
90020bb6:	4a06      	ldr	r2, [pc, #24]	@ (90020bd0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
90020bb8:	4909      	ldr	r1, [pc, #36]	@ (90020be0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
90020bba:	480a      	ldr	r0, [pc, #40]	@ (90020be4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
90020bbc:	f008 f959 	bl	90028e72 <__aeabi_atexit>
90020bc0:	4b05      	ldr	r3, [pc, #20]	@ (90020bd8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
90020bc2:	676b      	str	r3, [r5, #116]	@ 0x74
90020bc4:	4b07      	ldr	r3, [pc, #28]	@ (90020be4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
90020bc6:	67ab      	str	r3, [r5, #120]	@ 0x78
90020bc8:	bd38      	pop	{r3, r4, r5, pc}
90020bca:	bf00      	nop
90020bcc:	24021a38 	.word	0x24021a38
90020bd0:	24000000 	.word	0x24000000
90020bd4:	9001c651 	.word	0x9001c651
90020bd8:	2400009c 	.word	0x2400009c
90020bdc:	24021a3c 	.word	0x24021a3c
90020be0:	9001c64f 	.word	0x9001c64f
90020be4:	240000a0 	.word	0x240000a0

90020be8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
90020be8:	b538      	push	{r3, r4, r5, lr}
90020bea:	4c15      	ldr	r4, [pc, #84]	@ (90020c40 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
90020bec:	4605      	mov	r5, r0
90020bee:	7823      	ldrb	r3, [r4, #0]
90020bf0:	f3bf 8f5b 	dmb	ish
90020bf4:	07da      	lsls	r2, r3, #31
90020bf6:	d40b      	bmi.n	90020c10 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90020bf8:	4620      	mov	r0, r4
90020bfa:	f008 f941 	bl	90028e80 <__cxa_guard_acquire>
90020bfe:	b138      	cbz	r0, 90020c10 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
90020c00:	4620      	mov	r0, r4
90020c02:	f008 f949 	bl	90028e98 <__cxa_guard_release>
90020c06:	4a0f      	ldr	r2, [pc, #60]	@ (90020c44 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
90020c08:	490f      	ldr	r1, [pc, #60]	@ (90020c48 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
90020c0a:	4810      	ldr	r0, [pc, #64]	@ (90020c4c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90020c0c:	f008 f931 	bl	90028e72 <__aeabi_atexit>
90020c10:	4c0f      	ldr	r4, [pc, #60]	@ (90020c50 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
90020c12:	7823      	ldrb	r3, [r4, #0]
90020c14:	f3bf 8f5b 	dmb	ish
90020c18:	07db      	lsls	r3, r3, #31
90020c1a:	d40b      	bmi.n	90020c34 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90020c1c:	4620      	mov	r0, r4
90020c1e:	f008 f92f 	bl	90028e80 <__cxa_guard_acquire>
90020c22:	b138      	cbz	r0, 90020c34 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
90020c24:	4620      	mov	r0, r4
90020c26:	f008 f937 	bl	90028e98 <__cxa_guard_release>
90020c2a:	4a06      	ldr	r2, [pc, #24]	@ (90020c44 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
90020c2c:	4909      	ldr	r1, [pc, #36]	@ (90020c54 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
90020c2e:	480a      	ldr	r0, [pc, #40]	@ (90020c58 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90020c30:	f008 f91f 	bl	90028e72 <__aeabi_atexit>
90020c34:	4b05      	ldr	r3, [pc, #20]	@ (90020c4c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
90020c36:	66eb      	str	r3, [r5, #108]	@ 0x6c
90020c38:	4b07      	ldr	r3, [pc, #28]	@ (90020c58 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
90020c3a:	672b      	str	r3, [r5, #112]	@ 0x70
90020c3c:	bd38      	pop	{r3, r4, r5, pc}
90020c3e:	bf00      	nop
90020c40:	24021a30 	.word	0x24021a30
90020c44:	24000000 	.word	0x24000000
90020c48:	9001c655 	.word	0x9001c655
90020c4c:	24000094 	.word	0x24000094
90020c50:	24021a34 	.word	0x24021a34
90020c54:	9001c653 	.word	0x9001c653
90020c58:	24000098 	.word	0x24000098

90020c5c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
90020c5c:	b510      	push	{r4, lr}
90020c5e:	4604      	mov	r4, r0
90020c60:	f7ff ff88 	bl	90020b74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
90020c64:	4620      	mov	r0, r4
90020c66:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90020c6a:	f7ff bfbd 	b.w	90020be8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

90020c6e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
90020c6e:	b510      	push	{r4, lr}
90020c70:	4604      	mov	r4, r0
90020c72:	f7ff fff3 	bl	90020c5c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
90020c76:	4620      	mov	r0, r4
90020c78:	f7ff ff72 	bl	90020b60 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
90020c7c:	4620      	mov	r0, r4
90020c7e:	f7ff fdf9 	bl	90020874 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
90020c82:	4620      	mov	r0, r4
90020c84:	f7ff fcfa 	bl	9002067c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
90020c88:	4620      	mov	r0, r4
90020c8a:	f7ff fd75 	bl	90020778 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
90020c8e:	4620      	mov	r0, r4
90020c90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90020c94:	f7ff bee0 	b.w	90020a58 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

90020c98 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
90020c98:	b538      	push	{r3, r4, r5, lr}
90020c9a:	4c0b      	ldr	r4, [pc, #44]	@ (90020cc8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
90020c9c:	4605      	mov	r5, r0
90020c9e:	7823      	ldrb	r3, [r4, #0]
90020ca0:	f3bf 8f5b 	dmb	ish
90020ca4:	07db      	lsls	r3, r3, #31
90020ca6:	d40b      	bmi.n	90020cc0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
90020ca8:	4620      	mov	r0, r4
90020caa:	f008 f8e9 	bl	90028e80 <__cxa_guard_acquire>
90020cae:	b138      	cbz	r0, 90020cc0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
90020cb0:	4620      	mov	r0, r4
90020cb2:	f008 f8f1 	bl	90028e98 <__cxa_guard_release>
90020cb6:	4a05      	ldr	r2, [pc, #20]	@ (90020ccc <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
90020cb8:	4905      	ldr	r1, [pc, #20]	@ (90020cd0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
90020cba:	4806      	ldr	r0, [pc, #24]	@ (90020cd4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90020cbc:	f008 f8d9 	bl	90028e72 <__aeabi_atexit>
90020cc0:	4b04      	ldr	r3, [pc, #16]	@ (90020cd4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
90020cc2:	67eb      	str	r3, [r5, #124]	@ 0x7c
90020cc4:	bd38      	pop	{r3, r4, r5, pc}
90020cc6:	bf00      	nop
90020cc8:	24021a24 	.word	0x24021a24
90020ccc:	24000000 	.word	0x24000000
90020cd0:	9001c64d 	.word	0x9001c64d
90020cd4:	2400008c 	.word	0x2400008c

90020cd8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
90020cd8:	b538      	push	{r3, r4, r5, lr}
90020cda:	4c0b      	ldr	r4, [pc, #44]	@ (90020d08 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
90020cdc:	4605      	mov	r5, r0
90020cde:	7823      	ldrb	r3, [r4, #0]
90020ce0:	f3bf 8f5b 	dmb	ish
90020ce4:	07db      	lsls	r3, r3, #31
90020ce6:	d40b      	bmi.n	90020d00 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
90020ce8:	4620      	mov	r0, r4
90020cea:	f008 f8c9 	bl	90028e80 <__cxa_guard_acquire>
90020cee:	b138      	cbz	r0, 90020d00 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
90020cf0:	4620      	mov	r0, r4
90020cf2:	f008 f8d1 	bl	90028e98 <__cxa_guard_release>
90020cf6:	4a05      	ldr	r2, [pc, #20]	@ (90020d0c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
90020cf8:	4905      	ldr	r1, [pc, #20]	@ (90020d10 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
90020cfa:	4806      	ldr	r0, [pc, #24]	@ (90020d14 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
90020cfc:	f008 f8b9 	bl	90028e72 <__aeabi_atexit>
90020d00:	4b04      	ldr	r3, [pc, #16]	@ (90020d14 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
90020d02:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
90020d06:	bd38      	pop	{r3, r4, r5, pc}
90020d08:	24021a28 	.word	0x24021a28
90020d0c:	24000000 	.word	0x24000000
90020d10:	9001c64b 	.word	0x9001c64b
90020d14:	24000090 	.word	0x24000090

90020d18 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
90020d18:	b570      	push	{r4, r5, r6, lr}
90020d1a:	4d0d      	ldr	r5, [pc, #52]	@ (90020d50 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
90020d1c:	4606      	mov	r6, r0
90020d1e:	4c0d      	ldr	r4, [pc, #52]	@ (90020d54 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
90020d20:	782b      	ldrb	r3, [r5, #0]
90020d22:	f3bf 8f5b 	dmb	ish
90020d26:	f013 0f01 	tst.w	r3, #1
90020d2a:	d10d      	bne.n	90020d48 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
90020d2c:	4628      	mov	r0, r5
90020d2e:	f008 f8a7 	bl	90028e80 <__cxa_guard_acquire>
90020d32:	b148      	cbz	r0, 90020d48 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
90020d34:	4b08      	ldr	r3, [pc, #32]	@ (90020d58 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
90020d36:	4628      	mov	r0, r5
90020d38:	6023      	str	r3, [r4, #0]
90020d3a:	f008 f8ad 	bl	90028e98 <__cxa_guard_release>
90020d3e:	4a07      	ldr	r2, [pc, #28]	@ (90020d5c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
90020d40:	4620      	mov	r0, r4
90020d42:	4907      	ldr	r1, [pc, #28]	@ (90020d60 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
90020d44:	f008 f895 	bl	90028e72 <__aeabi_atexit>
90020d48:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
90020d4c:	bd70      	pop	{r4, r5, r6, pc}
90020d4e:	bf00      	nop
90020d50:	24021a2c 	.word	0x24021a2c
90020d54:	24021ba4 	.word	0x24021ba4
90020d58:	9002d708 	.word	0x9002d708
90020d5c:	24000000 	.word	0x24000000
90020d60:	9001c649 	.word	0x9001c649

90020d64 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
90020d64:	b510      	push	{r4, lr}
90020d66:	4604      	mov	r4, r0
90020d68:	f7ff ff96 	bl	90020c98 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
90020d6c:	4620      	mov	r0, r4
90020d6e:	f7ff ffb3 	bl	90020cd8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
90020d72:	4620      	mov	r0, r4
90020d74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90020d78:	f7ff bfce 	b.w	90020d18 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

90020d7c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
90020d7c:	b570      	push	{r4, r5, r6, lr}
90020d7e:	4d0d      	ldr	r5, [pc, #52]	@ (90020db4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
90020d80:	4606      	mov	r6, r0
90020d82:	4c0d      	ldr	r4, [pc, #52]	@ (90020db8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
90020d84:	782b      	ldrb	r3, [r5, #0]
90020d86:	f3bf 8f5b 	dmb	ish
90020d8a:	f013 0f01 	tst.w	r3, #1
90020d8e:	d10d      	bne.n	90020dac <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
90020d90:	4628      	mov	r0, r5
90020d92:	f008 f875 	bl	90028e80 <__cxa_guard_acquire>
90020d96:	b148      	cbz	r0, 90020dac <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
90020d98:	4b08      	ldr	r3, [pc, #32]	@ (90020dbc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
90020d9a:	4628      	mov	r0, r5
90020d9c:	6023      	str	r3, [r4, #0]
90020d9e:	f008 f87b 	bl	90028e98 <__cxa_guard_release>
90020da2:	4a07      	ldr	r2, [pc, #28]	@ (90020dc0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
90020da4:	4620      	mov	r0, r4
90020da6:	4907      	ldr	r1, [pc, #28]	@ (90020dc4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
90020da8:	f008 f863 	bl	90028e72 <__aeabi_atexit>
90020dac:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
90020db0:	bd70      	pop	{r4, r5, r6, pc}
90020db2:	bf00      	nop
90020db4:	24021a20 	.word	0x24021a20
90020db8:	24021aa0 	.word	0x24021aa0
90020dbc:	9002d724 	.word	0x9002d724
90020dc0:	24000000 	.word	0x24000000
90020dc4:	9001c647 	.word	0x9001c647

90020dc8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
90020dc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020dcc:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
90020dd0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
90020dd4:	2d00      	cmp	r5, #0
90020dd6:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
90020dda:	fb05 4c0e 	mla	ip, r5, lr, r4
90020dde:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
90020de2:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
90020de6:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
90020dea:	eb02 0a0c 	add.w	sl, r2, ip
90020dee:	8808      	ldrh	r0, [r1, #0]
90020df0:	f2c0 80b0 	blt.w	90020f54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
90020df4:	45ab      	cmp	fp, r5
90020df6:	f340 80ad 	ble.w	90020f54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
90020dfa:	2c00      	cmp	r4, #0
90020dfc:	f2c0 80a8 	blt.w	90020f50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
90020e00:	45a6      	cmp	lr, r4
90020e02:	f340 80a5 	ble.w	90020f50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
90020e06:	f812 200c 	ldrb.w	r2, [r2, ip]
90020e0a:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
90020e0e:	1c62      	adds	r2, r4, #1
90020e10:	f100 80a3 	bmi.w	90020f5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90020e14:	4596      	cmp	lr, r2
90020e16:	f340 80a0 	ble.w	90020f5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90020e1a:	f1b9 0f00 	cmp.w	r9, #0
90020e1e:	f000 809c 	beq.w	90020f5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
90020e22:	f89a 2001 	ldrb.w	r2, [sl, #1]
90020e26:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90020e2a:	3501      	adds	r5, #1
90020e2c:	f100 8099 	bmi.w	90020f62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90020e30:	45ab      	cmp	fp, r5
90020e32:	f340 8096 	ble.w	90020f62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90020e36:	2f00      	cmp	r7, #0
90020e38:	f000 8093 	beq.w	90020f62 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
90020e3c:	2c00      	cmp	r4, #0
90020e3e:	f2c0 808e 	blt.w	90020f5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90020e42:	45a6      	cmp	lr, r4
90020e44:	f340 808b 	ble.w	90020f5e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
90020e48:	f81a 200e 	ldrb.w	r2, [sl, lr]
90020e4c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
90020e50:	3401      	adds	r4, #1
90020e52:	f100 8089 	bmi.w	90020f68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90020e56:	45a6      	cmp	lr, r4
90020e58:	f340 8086 	ble.w	90020f68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90020e5c:	f1b9 0f00 	cmp.w	r9, #0
90020e60:	f000 8082 	beq.w	90020f68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
90020e64:	44d6      	add	lr, sl
90020e66:	f89e 2001 	ldrb.w	r2, [lr, #1]
90020e6a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
90020e6e:	ea4f 4408 	mov.w	r4, r8, lsl #16
90020e72:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
90020e76:	fb19 fe07 	smulbb	lr, r9, r7
90020e7a:	f1c7 0210 	rsb	r2, r7, #16
90020e7e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90020e82:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90020e86:	eba2 0209 	sub.w	r2, r2, r9
90020e8a:	ea44 0808 	orr.w	r8, r4, r8
90020e8e:	ea4f 440c 	mov.w	r4, ip, lsl #16
90020e92:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90020e96:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90020e9a:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90020e9e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90020ea2:	ea44 0c0c 	orr.w	ip, r4, ip
90020ea6:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90020eaa:	fb04 f40c 	mul.w	r4, r4, ip
90020eae:	fb02 4808 	mla	r8, r2, r8, r4
90020eb2:	041a      	lsls	r2, r3, #16
90020eb4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90020eb8:	b2b4      	uxth	r4, r6
90020eba:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90020ebe:	43f6      	mvns	r6, r6
90020ec0:	4313      	orrs	r3, r2
90020ec2:	042a      	lsls	r2, r5, #16
90020ec4:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90020ec8:	b2f6      	uxtb	r6, r6
90020eca:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90020ece:	fb0e 8303 	mla	r3, lr, r3, r8
90020ed2:	432a      	orrs	r2, r5
90020ed4:	fb07 3202 	mla	r2, r7, r2, r3
90020ed8:	10c7      	asrs	r7, r0, #3
90020eda:	0d53      	lsrs	r3, r2, #21
90020edc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90020ee0:	0952      	lsrs	r2, r2, #5
90020ee2:	fb17 f706 	smulbb	r7, r7, r6
90020ee6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90020eea:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90020eee:	431a      	orrs	r2, r3
90020ef0:	b293      	uxth	r3, r2
90020ef2:	1202      	asrs	r2, r0, #8
90020ef4:	121d      	asrs	r5, r3, #8
90020ef6:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90020efa:	00c0      	lsls	r0, r0, #3
90020efc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90020f00:	fb12 f206 	smulbb	r2, r2, r6
90020f04:	b2c0      	uxtb	r0, r0
90020f06:	fb05 2504 	mla	r5, r5, r4, r2
90020f0a:	10da      	asrs	r2, r3, #3
90020f0c:	fb10 f006 	smulbb	r0, r0, r6
90020f10:	00db      	lsls	r3, r3, #3
90020f12:	b2ad      	uxth	r5, r5
90020f14:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90020f18:	b2db      	uxtb	r3, r3
90020f1a:	fb02 7204 	mla	r2, r2, r4, r7
90020f1e:	fb03 0004 	mla	r0, r3, r4, r0
90020f22:	1c6b      	adds	r3, r5, #1
90020f24:	b292      	uxth	r2, r2
90020f26:	b280      	uxth	r0, r0
90020f28:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90020f2c:	1c43      	adds	r3, r0, #1
90020f2e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90020f32:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90020f36:	1c50      	adds	r0, r2, #1
90020f38:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90020f3c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90020f40:	0952      	lsrs	r2, r2, #5
90020f42:	432b      	orrs	r3, r5
90020f44:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90020f48:	4313      	orrs	r3, r2
90020f4a:	800b      	strh	r3, [r1, #0]
90020f4c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90020f50:	4680      	mov	r8, r0
90020f52:	e75c      	b.n	90020e0e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
90020f54:	4684      	mov	ip, r0
90020f56:	4680      	mov	r8, r0
90020f58:	e767      	b.n	90020e2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
90020f5a:	4684      	mov	ip, r0
90020f5c:	e765      	b.n	90020e2a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
90020f5e:	4605      	mov	r5, r0
90020f60:	e776      	b.n	90020e50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
90020f62:	4603      	mov	r3, r0
90020f64:	4605      	mov	r5, r0
90020f66:	e782      	b.n	90020e6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
90020f68:	4603      	mov	r3, r0
90020f6a:	e780      	b.n	90020e6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

90020f6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90020f6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90020f70:	b099      	sub	sp, #100	@ 0x64
90020f72:	9215      	str	r2, [sp, #84]	@ 0x54
90020f74:	9309      	str	r3, [sp, #36]	@ 0x24
90020f76:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
90020f78:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
90020f7c:	9016      	str	r0, [sp, #88]	@ 0x58
90020f7e:	930d      	str	r3, [sp, #52]	@ 0x34
90020f80:	6850      	ldr	r0, [r2, #4]
90020f82:	910c      	str	r1, [sp, #48]	@ 0x30
90020f84:	6812      	ldr	r2, [r2, #0]
90020f86:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
90020f8a:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
90020f8e:	fb00 1303 	mla	r3, r0, r3, r1
90020f92:	eb02 0843 	add.w	r8, r2, r3, lsl #1
90020f96:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90020f98:	681b      	ldr	r3, [r3, #0]
90020f9a:	930b      	str	r3, [sp, #44]	@ 0x2c
90020f9c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90020f9e:	685e      	ldr	r6, [r3, #4]
90020fa0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90020fa2:	3604      	adds	r6, #4
90020fa4:	43db      	mvns	r3, r3
90020fa6:	b2db      	uxtb	r3, r3
90020fa8:	930a      	str	r3, [sp, #40]	@ 0x28
90020faa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90020fac:	2b00      	cmp	r3, #0
90020fae:	dc03      	bgt.n	90020fb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
90020fb0:	9b15      	ldr	r3, [sp, #84]	@ 0x54
90020fb2:	2b00      	cmp	r3, #0
90020fb4:	f340 8225 	ble.w	90021402 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
90020fb8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90020fba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90020fbe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90020fc2:	1e48      	subs	r0, r1, #1
90020fc4:	1e57      	subs	r7, r2, #1
90020fc6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90020fc8:	2b00      	cmp	r3, #0
90020fca:	f340 80e3 	ble.w	90021194 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
90020fce:	ea5f 4c2a 	movs.w	ip, sl, asr #16
90020fd2:	ea4f 4325 	mov.w	r3, r5, asr #16
90020fd6:	d406      	bmi.n	90020fe6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90020fd8:	4584      	cmp	ip, r0
90020fda:	da04      	bge.n	90020fe6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90020fdc:	2b00      	cmp	r3, #0
90020fde:	db02      	blt.n	90020fe6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90020fe0:	42bb      	cmp	r3, r7
90020fe2:	f2c0 80d8 	blt.w	90021196 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
90020fe6:	f11c 0c01 	adds.w	ip, ip, #1
90020fea:	f100 80c9 	bmi.w	90021180 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90020fee:	4561      	cmp	r1, ip
90020ff0:	f2c0 80c6 	blt.w	90021180 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90020ff4:	3301      	adds	r3, #1
90020ff6:	f100 80c3 	bmi.w	90021180 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90020ffa:	429a      	cmp	r2, r3
90020ffc:	f2c0 80c0 	blt.w	90021180 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90021000:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90021004:	4647      	mov	r7, r8
90021006:	f1bb 0f00 	cmp.w	fp, #0
9002100a:	f340 80e3 	ble.w	900211d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
9002100e:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
90021010:	ea4f 4c25 	mov.w	ip, r5, asr #16
90021014:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90021016:	f3ca 3003 	ubfx	r0, sl, #12, #4
9002101a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
9002101e:	ea5f 422a 	movs.w	r2, sl, asr #16
90021022:	f3c5 3103 	ubfx	r1, r5, #12, #4
90021026:	689b      	ldr	r3, [r3, #8]
90021028:	f100 8121 	bmi.w	9002126e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9002102c:	f103 39ff 	add.w	r9, r3, #4294967295
90021030:	454a      	cmp	r2, r9
90021032:	f280 811c 	bge.w	9002126e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90021036:	f1bc 0f00 	cmp.w	ip, #0
9002103a:	f2c0 8118 	blt.w	9002126e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
9002103e:	f10e 39ff 	add.w	r9, lr, #4294967295
90021042:	45cc      	cmp	ip, r9
90021044:	f280 8113 	bge.w	9002126e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
90021048:	b21b      	sxth	r3, r3
9002104a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9002104c:	fb0c 2203 	mla	r2, ip, r3, r2
90021050:	eb04 0902 	add.w	r9, r4, r2
90021054:	5ca2      	ldrb	r2, [r4, r2]
90021056:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
9002105a:	2800      	cmp	r0, #0
9002105c:	f000 80fe 	beq.w	9002125c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
90021060:	f899 2001 	ldrb.w	r2, [r9, #1]
90021064:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
90021068:	9211      	str	r2, [sp, #68]	@ 0x44
9002106a:	b151      	cbz	r1, 90021082 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9002106c:	eb09 0203 	add.w	r2, r9, r3
90021070:	f819 3003 	ldrb.w	r3, [r9, r3]
90021074:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021078:	930f      	str	r3, [sp, #60]	@ 0x3c
9002107a:	7853      	ldrb	r3, [r2, #1]
9002107c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90021080:	9312      	str	r3, [sp, #72]	@ 0x48
90021082:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90021084:	fb10 f201 	smulbb	r2, r0, r1
90021088:	9c12      	ldr	r4, [sp, #72]	@ 0x48
9002108a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002108e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90021092:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90021096:	10d2      	asrs	r2, r2, #3
90021098:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9002109c:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
900210a0:	ea4c 0c03 	orr.w	ip, ip, r3
900210a4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
900210a6:	041b      	lsls	r3, r3, #16
900210a8:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900210ac:	4323      	orrs	r3, r4
900210ae:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900210b0:	4353      	muls	r3, r2
900210b2:	fb09 330c 	mla	r3, r9, ip, r3
900210b6:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
900210ba:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
900210be:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
900210c2:	ea4c 0e0e 	orr.w	lr, ip, lr
900210c6:	f1c1 0c10 	rsb	ip, r1, #16
900210ca:	ebac 0c00 	sub.w	ip, ip, r0
900210ce:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
900210d2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
900210d6:	fb0c 3c0e 	mla	ip, ip, lr, r3
900210da:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900210dc:	0418      	lsls	r0, r3, #16
900210de:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
900210e2:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900210e6:	4318      	orrs	r0, r3
900210e8:	fb02 c200 	mla	r2, r2, r0, ip
900210ec:	8838      	ldrh	r0, [r7, #0]
900210ee:	0d53      	lsrs	r3, r2, #21
900210f0:	0952      	lsrs	r2, r2, #5
900210f2:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900210f6:	1201      	asrs	r1, r0, #8
900210f8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900210fc:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90021100:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90021104:	00c0      	lsls	r0, r0, #3
90021106:	431a      	orrs	r2, r3
90021108:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
9002110c:	fb11 f104 	smulbb	r1, r1, r4
90021110:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
90021114:	b292      	uxth	r2, r2
90021116:	fb1e fe04 	smulbb	lr, lr, r4
9002111a:	b2c0      	uxtb	r0, r0
9002111c:	ea4f 2c22 	mov.w	ip, r2, asr #8
90021120:	fb10 f004 	smulbb	r0, r0, r4
90021124:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90021128:	fb0c 1c03 	mla	ip, ip, r3, r1
9002112c:	10d1      	asrs	r1, r2, #3
9002112e:	00d2      	lsls	r2, r2, #3
90021130:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90021134:	fa1f fc8c 	uxth.w	ip, ip
90021138:	b2d2      	uxtb	r2, r2
9002113a:	fb01 e103 	mla	r1, r1, r3, lr
9002113e:	fb02 0303 	mla	r3, r2, r3, r0
90021142:	b289      	uxth	r1, r1
90021144:	b29a      	uxth	r2, r3
90021146:	f10c 0301 	add.w	r3, ip, #1
9002114a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
9002114e:	1c53      	adds	r3, r2, #1
90021150:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90021154:	1c4a      	adds	r2, r1, #1
90021156:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
9002115a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002115e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90021162:	0949      	lsrs	r1, r1, #5
90021164:	ea43 030c 	orr.w	r3, r3, ip
90021168:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
9002116c:	430b      	orrs	r3, r1
9002116e:	803b      	strh	r3, [r7, #0]
90021170:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90021172:	3702      	adds	r7, #2
90021174:	f10b 3bff 	add.w	fp, fp, #4294967295
90021178:	449a      	add	sl, r3
9002117a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9002117c:	441d      	add	r5, r3
9002117e:	e742      	b.n	90021006 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90021180:	9b25      	ldr	r3, [sp, #148]	@ 0x94
90021182:	f108 0802 	add.w	r8, r8, #2
90021186:	449a      	add	sl, r3
90021188:	9b26      	ldr	r3, [sp, #152]	@ 0x98
9002118a:	441d      	add	r5, r3
9002118c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002118e:	3b01      	subs	r3, #1
90021190:	9309      	str	r3, [sp, #36]	@ 0x24
90021192:	e718      	b.n	90020fc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
90021194:	d023      	beq.n	900211de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
90021196:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021198:	9825      	ldr	r0, [sp, #148]	@ 0x94
9002119a:	3b01      	subs	r3, #1
9002119c:	fb00 a003 	mla	r0, r0, r3, sl
900211a0:	1400      	asrs	r0, r0, #16
900211a2:	f53f af2d 	bmi.w	90021000 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900211a6:	3901      	subs	r1, #1
900211a8:	4288      	cmp	r0, r1
900211aa:	f6bf af29 	bge.w	90021000 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900211ae:	9926      	ldr	r1, [sp, #152]	@ 0x98
900211b0:	fb01 5303 	mla	r3, r1, r3, r5
900211b4:	141b      	asrs	r3, r3, #16
900211b6:	f53f af23 	bmi.w	90021000 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900211ba:	3a01      	subs	r2, #1
900211bc:	4293      	cmp	r3, r2
900211be:	f6bf af1f 	bge.w	90021000 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
900211c2:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
900211c6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
900211ca:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
900211ce:	f1be 0f00 	cmp.w	lr, #0
900211d2:	dc6c      	bgt.n	900212ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900211d4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900211d6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900211da:	eb08 0844 	add.w	r8, r8, r4, lsl #1
900211de:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900211e0:	2b00      	cmp	r3, #0
900211e2:	f340 810e 	ble.w	90021402 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
900211e6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900211ea:	9b22      	ldr	r3, [sp, #136]	@ 0x88
900211ec:	ee30 0a04 	vadd.f32	s0, s0, s8
900211f0:	ee70 0aa4 	vadd.f32	s1, s1, s9
900211f4:	eef0 6a62 	vmov.f32	s13, s5
900211f8:	eec7 7a00 	vdiv.f32	s15, s14, s0
900211fc:	ee31 1a05 	vadd.f32	s2, s2, s10
90021200:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021204:	ee16 aa90 	vmov	sl, s13
90021208:	eef0 6a43 	vmov.f32	s13, s6
9002120c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021210:	ee16 5a90 	vmov	r5, s13
90021214:	ee20 7aa7 	vmul.f32	s14, s1, s15
90021218:	ee61 7a27 	vmul.f32	s15, s2, s15
9002121c:	ee77 2a62 	vsub.f32	s5, s14, s5
90021220:	ee37 3ac3 	vsub.f32	s6, s15, s6
90021224:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90021228:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002122c:	ee12 2a90 	vmov	r2, s5
90021230:	eef0 2a47 	vmov.f32	s5, s14
90021234:	fb92 f3f3 	sdiv	r3, r2, r3
90021238:	ee13 2a10 	vmov	r2, s6
9002123c:	9325      	str	r3, [sp, #148]	@ 0x94
9002123e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90021240:	eeb0 3a67 	vmov.f32	s6, s15
90021244:	fb92 f3f3 	sdiv	r3, r2, r3
90021248:	9326      	str	r3, [sp, #152]	@ 0x98
9002124a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002124c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
9002124e:	3b01      	subs	r3, #1
90021250:	930c      	str	r3, [sp, #48]	@ 0x30
90021252:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90021254:	bf08      	it	eq
90021256:	4613      	moveq	r3, r2
90021258:	9309      	str	r3, [sp, #36]	@ 0x24
9002125a:	e6a6      	b.n	90020faa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9002125c:	2900      	cmp	r1, #0
9002125e:	f43f af10 	beq.w	90021082 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90021262:	f819 3003 	ldrb.w	r3, [r9, r3]
90021266:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
9002126a:	930f      	str	r3, [sp, #60]	@ 0x3c
9002126c:	e709      	b.n	90021082 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
9002126e:	f112 0901 	adds.w	r9, r2, #1
90021272:	f53f af7d 	bmi.w	90021170 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021276:	454b      	cmp	r3, r9
90021278:	f6ff af7a 	blt.w	90021170 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002127c:	f11c 0901 	adds.w	r9, ip, #1
90021280:	f53f af76 	bmi.w	90021170 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90021284:	45ce      	cmp	lr, r9
90021286:	f6ff af73 	blt.w	90021170 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
9002128a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
9002128c:	b21b      	sxth	r3, r3
9002128e:	9202      	str	r2, [sp, #8]
90021290:	fa0f f28e 	sxth.w	r2, lr
90021294:	9300      	str	r3, [sp, #0]
90021296:	4633      	mov	r3, r6
90021298:	9201      	str	r2, [sp, #4]
9002129a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
9002129c:	e9cd 1405 	strd	r1, r4, [sp, #20]
900212a0:	e9cd c003 	strd	ip, r0, [sp, #12]
900212a4:	4639      	mov	r1, r7
900212a6:	9816      	ldr	r0, [sp, #88]	@ 0x58
900212a8:	f7ff fd8e 	bl	90020dc8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
900212ac:	e760      	b.n	90021170 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
900212ae:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900212b0:	ea4f 422a 	mov.w	r2, sl, asr #16
900212b4:	1429      	asrs	r1, r5, #16
900212b6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900212b8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
900212bc:	f3ca 3c03 	ubfx	ip, sl, #12, #4
900212c0:	f3c5 3003 	ubfx	r0, r5, #12, #4
900212c4:	fb03 2101 	mla	r1, r3, r1, r2
900212c8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900212ca:	440a      	add	r2, r1
900212cc:	5c61      	ldrb	r1, [r4, r1]
900212ce:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
900212d2:	f1bc 0f00 	cmp.w	ip, #0
900212d6:	f000 808c 	beq.w	900213f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
900212da:	7857      	ldrb	r7, [r2, #1]
900212dc:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
900212e0:	9413      	str	r4, [sp, #76]	@ 0x4c
900212e2:	b140      	cbz	r0, 900212f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900212e4:	18d7      	adds	r7, r2, r3
900212e6:	5cd3      	ldrb	r3, [r2, r3]
900212e8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900212ec:	9310      	str	r3, [sp, #64]	@ 0x40
900212ee:	787b      	ldrb	r3, [r7, #1]
900212f0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900212f4:	9314      	str	r3, [sp, #80]	@ 0x50
900212f6:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
900212f8:	fb1c f200 	smulbb	r2, ip, r0
900212fc:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900212fe:	f10e 3eff 	add.w	lr, lr, #4294967295
90021302:	041f      	lsls	r7, r3, #16
90021304:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90021308:	10d2      	asrs	r2, r2, #3
9002130a:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
9002130e:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
90021312:	431f      	orrs	r7, r3
90021314:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
90021318:	9317      	str	r3, [sp, #92]	@ 0x5c
9002131a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
9002131c:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
9002131e:	041b      	lsls	r3, r3, #16
90021320:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90021324:	ea43 030b 	orr.w	r3, r3, fp
90021328:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9002132c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90021330:	4353      	muls	r3, r2
90021332:	fb04 3707 	mla	r7, r4, r7, r3
90021336:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
9002133a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9002133c:	ea43 0b01 	orr.w	fp, r3, r1
90021340:	f1c0 0110 	rsb	r1, r0, #16
90021344:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90021346:	eba1 0c0c 	sub.w	ip, r1, ip
9002134a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9002134e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90021352:	fb0c 770b 	mla	r7, ip, fp, r7
90021356:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002135a:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
9002135e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90021362:	ea4c 0c0b 	orr.w	ip, ip, fp
90021366:	fb02 770c 	mla	r7, r2, ip, r7
9002136a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9002136c:	0d79      	lsrs	r1, r7, #21
9002136e:	8812      	ldrh	r2, [r2, #0]
90021370:	097f      	lsrs	r7, r7, #5
90021372:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90021376:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
9002137a:	430f      	orrs	r7, r1
9002137c:	1211      	asrs	r1, r2, #8
9002137e:	b2bb      	uxth	r3, r7
90021380:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90021384:	10d7      	asrs	r7, r2, #3
90021386:	fb11 f104 	smulbb	r1, r1, r4
9002138a:	1218      	asrs	r0, r3, #8
9002138c:	00d2      	lsls	r2, r2, #3
9002138e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90021392:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90021396:	fb17 f704 	smulbb	r7, r7, r4
9002139a:	b2d2      	uxtb	r2, r2
9002139c:	fb00 1009 	mla	r0, r0, r9, r1
900213a0:	10d9      	asrs	r1, r3, #3
900213a2:	fb12 f204 	smulbb	r2, r2, r4
900213a6:	00db      	lsls	r3, r3, #3
900213a8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900213ac:	b280      	uxth	r0, r0
900213ae:	b2db      	uxtb	r3, r3
900213b0:	fb01 7109 	mla	r1, r1, r9, r7
900213b4:	fb03 2309 	mla	r3, r3, r9, r2
900213b8:	1c42      	adds	r2, r0, #1
900213ba:	b289      	uxth	r1, r1
900213bc:	b29b      	uxth	r3, r3
900213be:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900213c2:	1c4f      	adds	r7, r1, #1
900213c4:	1c5a      	adds	r2, r3, #1
900213c6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
900213ca:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
900213ce:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900213d2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900213d4:	0949      	lsrs	r1, r1, #5
900213d6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900213da:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900213de:	4310      	orrs	r0, r2
900213e0:	4308      	orrs	r0, r1
900213e2:	f823 0b02 	strh.w	r0, [r3], #2
900213e6:	930e      	str	r3, [sp, #56]	@ 0x38
900213e8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900213ea:	449a      	add	sl, r3
900213ec:	9b26      	ldr	r3, [sp, #152]	@ 0x98
900213ee:	441d      	add	r5, r3
900213f0:	e6ed      	b.n	900211ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
900213f2:	2800      	cmp	r0, #0
900213f4:	f43f af7f 	beq.w	900212f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900213f8:	5cd3      	ldrb	r3, [r2, r3]
900213fa:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
900213fe:	9310      	str	r3, [sp, #64]	@ 0x40
90021400:	e779      	b.n	900212f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90021402:	b019      	add	sp, #100	@ 0x64
90021404:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90021408 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90021408:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002140c:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
90021410:	f9bd e020 	ldrsh.w	lr, [sp, #32]
90021414:	f1b8 0f00 	cmp.w	r8, #0
90021418:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
9002141c:	fb08 470e 	mla	r7, r8, lr, r4
90021420:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
90021424:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
90021428:	eb02 0907 	add.w	r9, r2, r7
9002142c:	8808      	ldrh	r0, [r1, #0]
9002142e:	db67      	blt.n	90021500 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90021430:	45c2      	cmp	sl, r8
90021432:	dd65      	ble.n	90021500 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
90021434:	2c00      	cmp	r4, #0
90021436:	db61      	blt.n	900214fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
90021438:	45a6      	cmp	lr, r4
9002143a:	dd5f      	ble.n	900214fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
9002143c:	5dd2      	ldrb	r2, [r2, r7]
9002143e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
90021442:	1c62      	adds	r2, r4, #1
90021444:	d45f      	bmi.n	90021506 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
90021446:	4596      	cmp	lr, r2
90021448:	dd5d      	ble.n	90021506 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9002144a:	2d00      	cmp	r5, #0
9002144c:	d05b      	beq.n	90021506 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
9002144e:	f899 2001 	ldrb.w	r2, [r9, #1]
90021452:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
90021456:	f118 0801 	adds.w	r8, r8, #1
9002145a:	d458      	bmi.n	9002150e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
9002145c:	45c2      	cmp	sl, r8
9002145e:	dd56      	ble.n	9002150e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90021460:	2e00      	cmp	r6, #0
90021462:	d054      	beq.n	9002150e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
90021464:	2c00      	cmp	r4, #0
90021466:	db50      	blt.n	9002150a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
90021468:	45a6      	cmp	lr, r4
9002146a:	dd4e      	ble.n	9002150a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
9002146c:	f819 200e 	ldrb.w	r2, [r9, lr]
90021470:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
90021474:	3401      	adds	r4, #1
90021476:	d407      	bmi.n	90021488 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
90021478:	45a6      	cmp	lr, r4
9002147a:	dd05      	ble.n	90021488 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9002147c:	b125      	cbz	r5, 90021488 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
9002147e:	44ce      	add	lr, r9
90021480:	f89e 0001 	ldrb.w	r0, [lr, #1]
90021484:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
90021488:	fb15 f406 	smulbb	r4, r5, r6
9002148c:	ea4f 430c 	mov.w	r3, ip, lsl #16
90021490:	ea4f 4e07 	mov.w	lr, r7, lsl #16
90021494:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90021498:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
9002149c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
900214a0:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
900214a4:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
900214a8:	ea43 0c0c 	orr.w	ip, r3, ip
900214ac:	f1c6 0310 	rsb	r3, r6, #16
900214b0:	ea4e 0707 	orr.w	r7, lr, r7
900214b4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
900214b8:	1b5b      	subs	r3, r3, r5
900214ba:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
900214be:	eb04 0343 	add.w	r3, r4, r3, lsl #1
900214c2:	437d      	muls	r5, r7
900214c4:	fb03 5c0c 	mla	ip, r3, ip, r5
900214c8:	0403      	lsls	r3, r0, #16
900214ca:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900214ce:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900214d2:	4318      	orrs	r0, r3
900214d4:	0413      	lsls	r3, r2, #16
900214d6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900214da:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900214de:	fb04 c000 	mla	r0, r4, r0, ip
900214e2:	4313      	orrs	r3, r2
900214e4:	fb06 0003 	mla	r0, r6, r3, r0
900214e8:	0d43      	lsrs	r3, r0, #21
900214ea:	0940      	lsrs	r0, r0, #5
900214ec:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900214f0:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900214f4:	4318      	orrs	r0, r3
900214f6:	8008      	strh	r0, [r1, #0]
900214f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
900214fc:	4684      	mov	ip, r0
900214fe:	e7a0      	b.n	90021442 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
90021500:	4607      	mov	r7, r0
90021502:	4684      	mov	ip, r0
90021504:	e7a7      	b.n	90021456 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
90021506:	4607      	mov	r7, r0
90021508:	e7a5      	b.n	90021456 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
9002150a:	4602      	mov	r2, r0
9002150c:	e7b2      	b.n	90021474 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
9002150e:	4602      	mov	r2, r0
90021510:	e7ba      	b.n	90021488 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

90021512 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90021512:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021516:	b093      	sub	sp, #76	@ 0x4c
90021518:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
9002151c:	920f      	str	r2, [sp, #60]	@ 0x3c
9002151e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90021520:	9010      	str	r0, [sp, #64]	@ 0x40
90021522:	9108      	str	r1, [sp, #32]
90021524:	6850      	ldr	r0, [r2, #4]
90021526:	9306      	str	r3, [sp, #24]
90021528:	6812      	ldr	r2, [r2, #0]
9002152a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
9002152e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90021532:	fb00 1303 	mla	r3, r0, r3, r1
90021536:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9002153a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002153c:	681b      	ldr	r3, [r3, #0]
9002153e:	9307      	str	r3, [sp, #28]
90021540:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90021542:	685f      	ldr	r7, [r3, #4]
90021544:	3704      	adds	r7, #4
90021546:	9b08      	ldr	r3, [sp, #32]
90021548:	2b00      	cmp	r3, #0
9002154a:	dc03      	bgt.n	90021554 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
9002154c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9002154e:	2b00      	cmp	r3, #0
90021550:	f340 81b2 	ble.w	900218b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
90021554:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90021556:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002155a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002155e:	1e48      	subs	r0, r1, #1
90021560:	f102 3cff 	add.w	ip, r2, #4294967295
90021564:	9b06      	ldr	r3, [sp, #24]
90021566:	2b00      	cmp	r3, #0
90021568:	f340 80a9 	ble.w	900216be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002156c:	ea5f 4e24 	movs.w	lr, r4, asr #16
90021570:	ea4f 4326 	mov.w	r3, r6, asr #16
90021574:	d406      	bmi.n	90021584 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
90021576:	4586      	cmp	lr, r0
90021578:	da04      	bge.n	90021584 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9002157a:	2b00      	cmp	r3, #0
9002157c:	db02      	blt.n	90021584 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
9002157e:	4563      	cmp	r3, ip
90021580:	f2c0 809e 	blt.w	900216c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
90021584:	f11e 0e01 	adds.w	lr, lr, #1
90021588:	f100 808f 	bmi.w	900216aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9002158c:	4571      	cmp	r1, lr
9002158e:	f2c0 808c 	blt.w	900216aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90021592:	3301      	adds	r3, #1
90021594:	f100 8089 	bmi.w	900216aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
90021598:	429a      	cmp	r2, r3
9002159a:	f2c0 8086 	blt.w	900216aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
9002159e:	f8dd b018 	ldr.w	fp, [sp, #24]
900215a2:	46c8      	mov	r8, r9
900215a4:	f1bb 0f00 	cmp.w	fp, #0
900215a8:	f340 80a6 	ble.w	900216f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
900215ac:	9a24      	ldr	r2, [sp, #144]	@ 0x90
900215ae:	ea4f 4c26 	mov.w	ip, r6, asr #16
900215b2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900215b4:	f3c4 3003 	ubfx	r0, r4, #12, #4
900215b8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900215bc:	1422      	asrs	r2, r4, #16
900215be:	f3c6 3103 	ubfx	r1, r6, #12, #4
900215c2:	689b      	ldr	r3, [r3, #8]
900215c4:	f100 80e3 	bmi.w	9002178e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900215c8:	f103 3aff 	add.w	sl, r3, #4294967295
900215cc:	4552      	cmp	r2, sl
900215ce:	f280 80de 	bge.w	9002178e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900215d2:	f1bc 0f00 	cmp.w	ip, #0
900215d6:	f2c0 80da 	blt.w	9002178e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900215da:	f10e 3aff 	add.w	sl, lr, #4294967295
900215de:	45d4      	cmp	ip, sl
900215e0:	f280 80d5 	bge.w	9002178e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
900215e4:	b21b      	sxth	r3, r3
900215e6:	9d07      	ldr	r5, [sp, #28]
900215e8:	fb0c 2203 	mla	r2, ip, r3, r2
900215ec:	eb05 0a02 	add.w	sl, r5, r2
900215f0:	5caa      	ldrb	r2, [r5, r2]
900215f2:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
900215f6:	2800      	cmp	r0, #0
900215f8:	f000 80c0 	beq.w	9002177c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
900215fc:	f89a 2001 	ldrb.w	r2, [sl, #1]
90021600:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
90021604:	920b      	str	r2, [sp, #44]	@ 0x2c
90021606:	b151      	cbz	r1, 9002161e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90021608:	eb0a 0203 	add.w	r2, sl, r3
9002160c:	f81a 3003 	ldrb.w	r3, [sl, r3]
90021610:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90021614:	9309      	str	r3, [sp, #36]	@ 0x24
90021616:	7853      	ldrb	r3, [r2, #1]
90021618:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9002161c:	930c      	str	r3, [sp, #48]	@ 0x30
9002161e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021620:	fb10 f201 	smulbb	r2, r0, r1
90021624:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90021626:	ea4f 4c03 	mov.w	ip, r3, lsl #16
9002162a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9002162e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90021632:	10d2      	asrs	r2, r2, #3
90021634:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90021638:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
9002163c:	ea4c 0c03 	orr.w	ip, ip, r3
90021640:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021642:	041b      	lsls	r3, r3, #16
90021644:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90021648:	432b      	orrs	r3, r5
9002164a:	4353      	muls	r3, r2
9002164c:	fb0a 330c 	mla	r3, sl, ip, r3
90021650:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
90021654:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90021658:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
9002165c:	ea4c 0e0e 	orr.w	lr, ip, lr
90021660:	f1c1 0c10 	rsb	ip, r1, #16
90021664:	ebac 0c00 	sub.w	ip, ip, r0
90021668:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
9002166c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
90021670:	fb0c 3c0e 	mla	ip, ip, lr, r3
90021674:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021676:	0418      	lsls	r0, r3, #16
90021678:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
9002167c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
90021680:	4318      	orrs	r0, r3
90021682:	fb02 c200 	mla	r2, r2, r0, ip
90021686:	0d53      	lsrs	r3, r2, #21
90021688:	0952      	lsrs	r2, r2, #5
9002168a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002168e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90021692:	431a      	orrs	r2, r3
90021694:	f8a8 2000 	strh.w	r2, [r8]
90021698:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002169a:	f108 0802 	add.w	r8, r8, #2
9002169e:	f10b 3bff 	add.w	fp, fp, #4294967295
900216a2:	441c      	add	r4, r3
900216a4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900216a6:	441e      	add	r6, r3
900216a8:	e77c      	b.n	900215a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
900216aa:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900216ac:	f109 0902 	add.w	r9, r9, #2
900216b0:	441c      	add	r4, r3
900216b2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900216b4:	441e      	add	r6, r3
900216b6:	9b06      	ldr	r3, [sp, #24]
900216b8:	3b01      	subs	r3, #1
900216ba:	9306      	str	r3, [sp, #24]
900216bc:	e752      	b.n	90021564 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
900216be:	d020      	beq.n	90021702 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
900216c0:	9b06      	ldr	r3, [sp, #24]
900216c2:	981f      	ldr	r0, [sp, #124]	@ 0x7c
900216c4:	3b01      	subs	r3, #1
900216c6:	fb00 4003 	mla	r0, r0, r3, r4
900216ca:	1400      	asrs	r0, r0, #16
900216cc:	f53f af67 	bmi.w	9002159e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900216d0:	3901      	subs	r1, #1
900216d2:	4288      	cmp	r0, r1
900216d4:	f6bf af63 	bge.w	9002159e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900216d8:	9920      	ldr	r1, [sp, #128]	@ 0x80
900216da:	fb01 6303 	mla	r3, r1, r3, r6
900216de:	141b      	asrs	r3, r3, #16
900216e0:	f53f af5d 	bmi.w	9002159e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900216e4:	3a01      	subs	r2, #1
900216e6:	4293      	cmp	r3, r2
900216e8:	f6bf af59 	bge.w	9002159e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
900216ec:	f8dd 8018 	ldr.w	r8, [sp, #24]
900216f0:	46ca      	mov	sl, r9
900216f2:	f1b8 0f00 	cmp.w	r8, #0
900216f6:	dc67      	bgt.n	900217c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
900216f8:	9b06      	ldr	r3, [sp, #24]
900216fa:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900216fe:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90021702:	9b08      	ldr	r3, [sp, #32]
90021704:	2b00      	cmp	r3, #0
90021706:	f340 80d7 	ble.w	900218b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
9002170a:	ee30 0a04 	vadd.f32	s0, s0, s8
9002170e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90021710:	ee70 0aa4 	vadd.f32	s1, s1, s9
90021714:	eeb0 6a62 	vmov.f32	s12, s5
90021718:	eec6 7a80 	vdiv.f32	s15, s13, s0
9002171c:	ee31 1a05 	vadd.f32	s2, s2, s10
90021720:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90021724:	ee16 4a10 	vmov	r4, s12
90021728:	eeb0 6a43 	vmov.f32	s12, s6
9002172c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
90021730:	ee16 6a10 	vmov	r6, s12
90021734:	ee20 7aa7 	vmul.f32	s14, s1, s15
90021738:	ee61 7a27 	vmul.f32	s15, s2, s15
9002173c:	ee77 2a62 	vsub.f32	s5, s14, s5
90021740:	ee37 3ac3 	vsub.f32	s6, s15, s6
90021744:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90021748:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002174c:	ee12 2a90 	vmov	r2, s5
90021750:	eef0 2a47 	vmov.f32	s5, s14
90021754:	fb92 f3f3 	sdiv	r3, r2, r3
90021758:	ee13 2a10 	vmov	r2, s6
9002175c:	931f      	str	r3, [sp, #124]	@ 0x7c
9002175e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90021760:	eeb0 3a67 	vmov.f32	s6, s15
90021764:	fb92 f3f3 	sdiv	r3, r2, r3
90021768:	9320      	str	r3, [sp, #128]	@ 0x80
9002176a:	9b08      	ldr	r3, [sp, #32]
9002176c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002176e:	3b01      	subs	r3, #1
90021770:	9308      	str	r3, [sp, #32]
90021772:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90021774:	bf08      	it	eq
90021776:	4613      	moveq	r3, r2
90021778:	9306      	str	r3, [sp, #24]
9002177a:	e6e4      	b.n	90021546 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
9002177c:	2900      	cmp	r1, #0
9002177e:	f43f af4e 	beq.w	9002161e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
90021782:	f81a 3003 	ldrb.w	r3, [sl, r3]
90021786:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
9002178a:	9309      	str	r3, [sp, #36]	@ 0x24
9002178c:	e747      	b.n	9002161e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
9002178e:	f112 0a01 	adds.w	sl, r2, #1
90021792:	d481      	bmi.n	90021698 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90021794:	4553      	cmp	r3, sl
90021796:	f6ff af7f 	blt.w	90021698 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
9002179a:	f11c 0a01 	adds.w	sl, ip, #1
9002179e:	f53f af7b 	bmi.w	90021698 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900217a2:	45d6      	cmp	lr, sl
900217a4:	f6ff af78 	blt.w	90021698 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900217a8:	b21b      	sxth	r3, r3
900217aa:	e9cd 2c02 	strd	r2, ip, [sp, #8]
900217ae:	fa0f f28e 	sxth.w	r2, lr
900217b2:	9300      	str	r3, [sp, #0]
900217b4:	463b      	mov	r3, r7
900217b6:	9201      	str	r2, [sp, #4]
900217b8:	9a07      	ldr	r2, [sp, #28]
900217ba:	e9cd 0104 	strd	r0, r1, [sp, #16]
900217be:	4641      	mov	r1, r8
900217c0:	9810      	ldr	r0, [sp, #64]	@ 0x40
900217c2:	f7ff fe21 	bl	90021408 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
900217c6:	e767      	b.n	90021698 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
900217c8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900217ca:	1422      	asrs	r2, r4, #16
900217cc:	1431      	asrs	r1, r6, #16
900217ce:	9d07      	ldr	r5, [sp, #28]
900217d0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
900217d4:	f3c4 3e03 	ubfx	lr, r4, #12, #4
900217d8:	f3c6 3003 	ubfx	r0, r6, #12, #4
900217dc:	fb03 2101 	mla	r1, r3, r1, r2
900217e0:	9a07      	ldr	r2, [sp, #28]
900217e2:	440a      	add	r2, r1
900217e4:	5c69      	ldrb	r1, [r5, r1]
900217e6:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
900217ea:	f1be 0f00 	cmp.w	lr, #0
900217ee:	d05c      	beq.n	900218aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
900217f0:	f892 c001 	ldrb.w	ip, [r2, #1]
900217f4:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
900217f8:	950d      	str	r5, [sp, #52]	@ 0x34
900217fa:	b150      	cbz	r0, 90021812 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900217fc:	eb02 0c03 	add.w	ip, r2, r3
90021800:	5cd3      	ldrb	r3, [r2, r3]
90021802:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90021806:	930a      	str	r3, [sp, #40]	@ 0x28
90021808:	f89c 3001 	ldrb.w	r3, [ip, #1]
9002180c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
90021810:	930e      	str	r3, [sp, #56]	@ 0x38
90021812:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90021814:	fb1e f200 	smulbb	r2, lr, r0
90021818:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002181a:	f108 38ff 	add.w	r8, r8, #4294967295
9002181e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
90021822:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90021826:	10d2      	asrs	r2, r2, #3
90021828:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
9002182c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90021830:	ea4c 0c03 	orr.w	ip, ip, r3
90021834:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
90021838:	9311      	str	r3, [sp, #68]	@ 0x44
9002183a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
9002183c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
9002183e:	041b      	lsls	r3, r3, #16
90021840:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90021844:	ea43 030b 	orr.w	r3, r3, fp
90021848:	ea4f 4b01 	mov.w	fp, r1, lsl #16
9002184c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90021850:	4353      	muls	r3, r2
90021852:	fb05 3c0c 	mla	ip, r5, ip, r3
90021856:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
9002185a:	ea43 0b01 	orr.w	fp, r3, r1
9002185e:	f1c0 0110 	rsb	r1, r0, #16
90021862:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90021864:	eba1 0e0e 	sub.w	lr, r1, lr
90021868:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
9002186c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
90021870:	fb0e cc0b 	mla	ip, lr, fp, ip
90021874:	ea4f 4b03 	mov.w	fp, r3, lsl #16
90021878:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
9002187c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90021880:	ea4b 0e0e 	orr.w	lr, fp, lr
90021884:	fb02 cc0e 	mla	ip, r2, lr, ip
90021888:	ea4f 535c 	mov.w	r3, ip, lsr #21
9002188c:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
90021890:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90021894:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90021898:	ea43 0c0c 	orr.w	ip, r3, ip
9002189c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002189e:	441c      	add	r4, r3
900218a0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900218a2:	f82a cb02 	strh.w	ip, [sl], #2
900218a6:	441e      	add	r6, r3
900218a8:	e723      	b.n	900216f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
900218aa:	2800      	cmp	r0, #0
900218ac:	d0b1      	beq.n	90021812 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900218ae:	5cd3      	ldrb	r3, [r2, r3]
900218b0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
900218b4:	930a      	str	r3, [sp, #40]	@ 0x28
900218b6:	e7ac      	b.n	90021812 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
900218b8:	b013      	add	sp, #76	@ 0x4c
900218ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900218be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
900218be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900218c2:	880d      	ldrh	r5, [r1, #0]
900218c4:	b087      	sub	sp, #28
900218c6:	10ef      	asrs	r7, r5, #3
900218c8:	9103      	str	r1, [sp, #12]
900218ca:	ea4f 2a25 	mov.w	sl, r5, asr #8
900218ce:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
900218d2:	00ed      	lsls	r5, r5, #3
900218d4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900218d8:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
900218dc:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
900218e0:	b2ed      	uxtb	r5, r5
900218e2:	9701      	str	r7, [sp, #4]
900218e4:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
900218e8:	9502      	str	r5, [sp, #8]
900218ea:	9d01      	ldr	r5, [sp, #4]
900218ec:	9902      	ldr	r1, [sp, #8]
900218ee:	022d      	lsls	r5, r5, #8
900218f0:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
900218f4:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
900218f8:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
900218fc:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
90021900:	430d      	orrs	r5, r1
90021902:	fb06 0709 	mla	r7, r6, r9, r0
90021906:	2e00      	cmp	r6, #0
90021908:	9505      	str	r5, [sp, #20]
9002190a:	eb02 0c07 	add.w	ip, r2, r7
9002190e:	f2c0 80b6 	blt.w	90021a7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90021912:	45b3      	cmp	fp, r6
90021914:	f340 80b3 	ble.w	90021a7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
90021918:	2800      	cmp	r0, #0
9002191a:	f2c0 80ae 	blt.w	90021a7a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
9002191e:	4581      	cmp	r9, r0
90021920:	f340 80ab 	ble.w	90021a7a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
90021924:	5dd7      	ldrb	r7, [r2, r7]
90021926:	eb07 0747 	add.w	r7, r7, r7, lsl #1
9002192a:	441f      	add	r7, r3
9002192c:	1c42      	adds	r2, r0, #1
9002192e:	f100 80a9 	bmi.w	90021a84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90021932:	4591      	cmp	r9, r2
90021934:	f340 80a6 	ble.w	90021a84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
90021938:	2c00      	cmp	r4, #0
9002193a:	f000 80a3 	beq.w	90021a84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
9002193e:	f89c 5001 	ldrb.w	r5, [ip, #1]
90021942:	eb05 0545 	add.w	r5, r5, r5, lsl #1
90021946:	441d      	add	r5, r3
90021948:	3601      	adds	r6, #1
9002194a:	f100 809f 	bmi.w	90021a8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9002194e:	45b3      	cmp	fp, r6
90021950:	f340 809c 	ble.w	90021a8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
90021954:	f1be 0f00 	cmp.w	lr, #0
90021958:	f000 8098 	beq.w	90021a8c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
9002195c:	2800      	cmp	r0, #0
9002195e:	f2c0 8093 	blt.w	90021a88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90021962:	4581      	cmp	r9, r0
90021964:	f340 8090 	ble.w	90021a88 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
90021968:	f81c 6009 	ldrb.w	r6, [ip, r9]
9002196c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
90021970:	441e      	add	r6, r3
90021972:	3001      	adds	r0, #1
90021974:	f100 808d 	bmi.w	90021a92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90021978:	4581      	cmp	r9, r0
9002197a:	f340 808a 	ble.w	90021a92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
9002197e:	2c00      	cmp	r4, #0
90021980:	f000 8087 	beq.w	90021a92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
90021984:	44e1      	add	r9, ip
90021986:	f899 2001 	ldrb.w	r2, [r9, #1]
9002198a:	eb02 0242 	add.w	r2, r2, r2, lsl #1
9002198e:	4413      	add	r3, r2
90021990:	b2a4      	uxth	r4, r4
90021992:	f897 c002 	ldrb.w	ip, [r7, #2]
90021996:	fa1f fe8e 	uxth.w	lr, lr
9002199a:	9901      	ldr	r1, [sp, #4]
9002199c:	fb04 fb0e 	mul.w	fp, r4, lr
900219a0:	0124      	lsls	r4, r4, #4
900219a2:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
900219a6:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
900219aa:	eba4 040b 	sub.w	r4, r4, fp
900219ae:	fa1f f08e 	uxth.w	r0, lr
900219b2:	b2a2      	uxth	r2, r4
900219b4:	78ac      	ldrb	r4, [r5, #2]
900219b6:	eba9 0900 	sub.w	r9, r9, r0
900219ba:	fa1f fe88 	uxth.w	lr, r8
900219be:	4354      	muls	r4, r2
900219c0:	ea6f 0808 	mvn.w	r8, r8
900219c4:	fa1f f989 	uxth.w	r9, r9
900219c8:	fa5f f888 	uxtb.w	r8, r8
900219cc:	fb09 440c 	mla	r4, r9, ip, r4
900219d0:	f896 c002 	ldrb.w	ip, [r6, #2]
900219d4:	fb1a fa08 	smulbb	sl, sl, r8
900219d8:	fb00 440c 	mla	r4, r0, ip, r4
900219dc:	f893 c002 	ldrb.w	ip, [r3, #2]
900219e0:	fb0b 4c0c 	mla	ip, fp, ip, r4
900219e4:	787c      	ldrb	r4, [r7, #1]
900219e6:	783f      	ldrb	r7, [r7, #0]
900219e8:	f3cc 2c07 	ubfx	ip, ip, #8, #8
900219ec:	fb0c ac0e 	mla	ip, ip, lr, sl
900219f0:	f895 a001 	ldrb.w	sl, [r5, #1]
900219f4:	782d      	ldrb	r5, [r5, #0]
900219f6:	fb02 fa0a 	mul.w	sl, r2, sl
900219fa:	fa1f fc8c 	uxth.w	ip, ip
900219fe:	436a      	muls	r2, r5
90021a00:	7835      	ldrb	r5, [r6, #0]
90021a02:	fb09 aa04 	mla	sl, r9, r4, sl
90021a06:	7874      	ldrb	r4, [r6, #1]
90021a08:	fb09 2207 	mla	r2, r9, r7, r2
90021a0c:	fb00 aa04 	mla	sl, r0, r4, sl
90021a10:	785c      	ldrb	r4, [r3, #1]
90021a12:	fb00 2005 	mla	r0, r0, r5, r2
90021a16:	781b      	ldrb	r3, [r3, #0]
90021a18:	fb0b a404 	mla	r4, fp, r4, sl
90021a1c:	fb11 fa08 	smulbb	sl, r1, r8
90021a20:	fb0b 0b03 	mla	fp, fp, r3, r0
90021a24:	9b02      	ldr	r3, [sp, #8]
90021a26:	f3c4 2407 	ubfx	r4, r4, #8, #8
90021a2a:	fb13 f808 	smulbb	r8, r3, r8
90021a2e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
90021a32:	fb04 a40e 	mla	r4, r4, lr, sl
90021a36:	f10c 0301 	add.w	r3, ip, #1
90021a3a:	fb0b 8e0e 	mla	lr, fp, lr, r8
90021a3e:	b2a4      	uxth	r4, r4
90021a40:	fa1f fe8e 	uxth.w	lr, lr
90021a44:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90021a48:	f104 0a01 	add.w	sl, r4, #1
90021a4c:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
90021a50:	f10e 0c01 	add.w	ip, lr, #1
90021a54:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
90021a58:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90021a5c:	0964      	lsrs	r4, r4, #5
90021a5e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
90021a62:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90021a66:	ea4c 0c03 	orr.w	ip, ip, r3
90021a6a:	9b03      	ldr	r3, [sp, #12]
90021a6c:	ea4c 0c04 	orr.w	ip, ip, r4
90021a70:	f8a3 c000 	strh.w	ip, [r3]
90021a74:	b007      	add	sp, #28
90021a76:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90021a7a:	af05      	add	r7, sp, #20
90021a7c:	e756      	b.n	9002192c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
90021a7e:	ad05      	add	r5, sp, #20
90021a80:	462f      	mov	r7, r5
90021a82:	e761      	b.n	90021948 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90021a84:	ad05      	add	r5, sp, #20
90021a86:	e75f      	b.n	90021948 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
90021a88:	ae05      	add	r6, sp, #20
90021a8a:	e772      	b.n	90021972 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
90021a8c:	ab05      	add	r3, sp, #20
90021a8e:	461e      	mov	r6, r3
90021a90:	e77e      	b.n	90021990 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
90021a92:	ab05      	add	r3, sp, #20
90021a94:	e77c      	b.n	90021990 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

90021a96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90021a96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021a9a:	b095      	sub	sp, #84	@ 0x54
90021a9c:	9212      	str	r2, [sp, #72]	@ 0x48
90021a9e:	9309      	str	r3, [sp, #36]	@ 0x24
90021aa0:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90021aa2:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
90021aa6:	9013      	str	r0, [sp, #76]	@ 0x4c
90021aa8:	930f      	str	r3, [sp, #60]	@ 0x3c
90021aaa:	6850      	ldr	r0, [r2, #4]
90021aac:	910e      	str	r1, [sp, #56]	@ 0x38
90021aae:	6812      	ldr	r2, [r2, #0]
90021ab0:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
90021ab4:	fb00 1303 	mla	r3, r0, r3, r1
90021ab8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90021abc:	930a      	str	r3, [sp, #40]	@ 0x28
90021abe:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90021ac0:	681b      	ldr	r3, [r3, #0]
90021ac2:	930d      	str	r3, [sp, #52]	@ 0x34
90021ac4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90021ac6:	685c      	ldr	r4, [r3, #4]
90021ac8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90021aca:	3404      	adds	r4, #4
90021acc:	43db      	mvns	r3, r3
90021ace:	b2db      	uxtb	r3, r3
90021ad0:	930b      	str	r3, [sp, #44]	@ 0x2c
90021ad2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90021ad4:	2b00      	cmp	r3, #0
90021ad6:	dc03      	bgt.n	90021ae0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90021ad8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
90021ada:	2b00      	cmp	r3, #0
90021adc:	f340 8255 	ble.w	90021f8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90021ae0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90021ae2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90021ae6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90021aea:	1e48      	subs	r0, r1, #1
90021aec:	1e55      	subs	r5, r2, #1
90021aee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021af0:	2b00      	cmp	r3, #0
90021af2:	f340 80f9 	ble.w	90021ce8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
90021af6:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
90021af8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90021afa:	1436      	asrs	r6, r6, #16
90021afc:	ea4f 4323 	mov.w	r3, r3, asr #16
90021b00:	d406      	bmi.n	90021b10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90021b02:	4286      	cmp	r6, r0
90021b04:	da04      	bge.n	90021b10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90021b06:	2b00      	cmp	r3, #0
90021b08:	db02      	blt.n	90021b10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
90021b0a:	42ab      	cmp	r3, r5
90021b0c:	f2c0 80ed 	blt.w	90021cea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
90021b10:	3601      	adds	r6, #1
90021b12:	f100 80da 	bmi.w	90021cca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90021b16:	42b1      	cmp	r1, r6
90021b18:	f2c0 80d7 	blt.w	90021cca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90021b1c:	3301      	adds	r3, #1
90021b1e:	f100 80d4 	bmi.w	90021cca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90021b22:	429a      	cmp	r2, r3
90021b24:	f2c0 80d1 	blt.w	90021cca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
90021b28:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021b2a:	9311      	str	r3, [sp, #68]	@ 0x44
90021b2c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90021b2e:	930c      	str	r3, [sp, #48]	@ 0x30
90021b30:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90021b32:	2b00      	cmp	r3, #0
90021b34:	f340 80fa 	ble.w	90021d2c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
90021b38:	9826      	ldr	r0, [sp, #152]	@ 0x98
90021b3a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90021b3c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90021b3e:	68c6      	ldr	r6, [r0, #12]
90021b40:	141d      	asrs	r5, r3, #16
90021b42:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90021b44:	f3c2 3103 	ubfx	r1, r2, #12, #4
90021b48:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90021b4a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
90021b4c:	1400      	asrs	r0, r0, #16
90021b4e:	f3c3 3303 	ubfx	r3, r3, #12, #4
90021b52:	6892      	ldr	r2, [r2, #8]
90021b54:	f100 813e 	bmi.w	90021dd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90021b58:	1e57      	subs	r7, r2, #1
90021b5a:	42b8      	cmp	r0, r7
90021b5c:	f280 813a 	bge.w	90021dd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90021b60:	2d00      	cmp	r5, #0
90021b62:	f2c0 8137 	blt.w	90021dd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90021b66:	1e77      	subs	r7, r6, #1
90021b68:	42bd      	cmp	r5, r7
90021b6a:	f280 8133 	bge.w	90021dd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
90021b6e:	b212      	sxth	r2, r2
90021b70:	fb05 0002 	mla	r0, r5, r2, r0
90021b74:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90021b76:	f815 a000 	ldrb.w	sl, [r5, r0]
90021b7a:	182e      	adds	r6, r5, r0
90021b7c:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
90021b80:	eb04 050a 	add.w	r5, r4, sl
90021b84:	2b00      	cmp	r3, #0
90021b86:	f000 8117 	beq.w	90021db8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
90021b8a:	f896 c001 	ldrb.w	ip, [r6, #1]
90021b8e:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
90021b92:	44a4      	add	ip, r4
90021b94:	2900      	cmp	r1, #0
90021b96:	f000 8117 	beq.w	90021dc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
90021b9a:	18b0      	adds	r0, r6, r2
90021b9c:	5cb2      	ldrb	r2, [r6, r2]
90021b9e:	7840      	ldrb	r0, [r0, #1]
90021ba0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90021ba4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90021ba8:	4422      	add	r2, r4
90021baa:	4420      	add	r0, r4
90021bac:	b29b      	uxth	r3, r3
90021bae:	f89c 7002 	ldrb.w	r7, [ip, #2]
90021bb2:	b289      	uxth	r1, r1
90021bb4:	f895 b002 	ldrb.w	fp, [r5, #2]
90021bb8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
90021bba:	fb03 f901 	mul.w	r9, r3, r1
90021bbe:	011b      	lsls	r3, r3, #4
90021bc0:	f8b6 e000 	ldrh.w	lr, [r6]
90021bc4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90021bc8:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
90021bcc:	eba3 0309 	sub.w	r3, r3, r9
90021bd0:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
90021bd4:	b289      	uxth	r1, r1
90021bd6:	f814 a00a 	ldrb.w	sl, [r4, sl]
90021bda:	b29b      	uxth	r3, r3
90021bdc:	eba8 0801 	sub.w	r8, r8, r1
90021be0:	435f      	muls	r7, r3
90021be2:	fa1f f888 	uxth.w	r8, r8
90021be6:	9310      	str	r3, [sp, #64]	@ 0x40
90021be8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021bea:	fb08 770b 	mla	r7, r8, fp, r7
90021bee:	f892 b002 	ldrb.w	fp, [r2, #2]
90021bf2:	fb01 770b 	mla	r7, r1, fp, r7
90021bf6:	f890 b002 	ldrb.w	fp, [r0, #2]
90021bfa:	fb09 770b 	mla	r7, r9, fp, r7
90021bfe:	ea4f 2b2e 	mov.w	fp, lr, asr #8
90021c02:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
90021c06:	f3c7 2707 	ubfx	r7, r7, #8, #8
90021c0a:	fb1b fb03 	smulbb	fp, fp, r3
90021c0e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90021c10:	fb07 b706 	mla	r7, r7, r6, fp
90021c14:	f895 b001 	ldrb.w	fp, [r5, #1]
90021c18:	f89c 5001 	ldrb.w	r5, [ip, #1]
90021c1c:	f89c c000 	ldrb.w	ip, [ip]
90021c20:	b2bf      	uxth	r7, r7
90021c22:	435d      	muls	r5, r3
90021c24:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021c26:	fb08 550b 	mla	r5, r8, fp, r5
90021c2a:	f892 b001 	ldrb.w	fp, [r2, #1]
90021c2e:	fb01 550b 	mla	r5, r1, fp, r5
90021c32:	f890 b001 	ldrb.w	fp, [r0, #1]
90021c36:	fb09 550b 	mla	r5, r9, fp, r5
90021c3a:	ea4f 0bee 	mov.w	fp, lr, asr #3
90021c3e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90021c42:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
90021c46:	f3c5 2507 	ubfx	r5, r5, #8, #8
90021c4a:	fa5f fe8e 	uxtb.w	lr, lr
90021c4e:	fb1b fb03 	smulbb	fp, fp, r3
90021c52:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90021c54:	fb03 f30c 	mul.w	r3, r3, ip
90021c58:	f892 c000 	ldrb.w	ip, [r2]
90021c5c:	fb05 b506 	mla	r5, r5, r6, fp
90021c60:	fb08 330a 	mla	r3, r8, sl, r3
90021c64:	b2ad      	uxth	r5, r5
90021c66:	fb01 330c 	mla	r3, r1, ip, r3
90021c6a:	f890 c000 	ldrb.w	ip, [r0]
90021c6e:	f105 0b01 	add.w	fp, r5, #1
90021c72:	fb09 3c0c 	mla	ip, r9, ip, r3
90021c76:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021c78:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90021c7c:	fb1e fe03 	smulbb	lr, lr, r3
90021c80:	f3cc 2c07 	ubfx	ip, ip, #8, #8
90021c84:	1c7b      	adds	r3, r7, #1
90021c86:	096d      	lsrs	r5, r5, #5
90021c88:	fb0c e606 	mla	r6, ip, r6, lr
90021c8c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90021c90:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90021c94:	b2b6      	uxth	r6, r6
90021c96:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
90021c9a:	1c77      	adds	r7, r6, #1
90021c9c:	eb07 2716 	add.w	r7, r7, r6, lsr #8
90021ca0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90021ca4:	431f      	orrs	r7, r3
90021ca6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021ca8:	433d      	orrs	r5, r7
90021caa:	801d      	strh	r5, [r3, #0]
90021cac:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021cae:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90021cb0:	3302      	adds	r3, #2
90021cb2:	930c      	str	r3, [sp, #48]	@ 0x30
90021cb4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90021cb6:	4413      	add	r3, r2
90021cb8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90021cba:	931f      	str	r3, [sp, #124]	@ 0x7c
90021cbc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90021cbe:	4413      	add	r3, r2
90021cc0:	9320      	str	r3, [sp, #128]	@ 0x80
90021cc2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90021cc4:	3b01      	subs	r3, #1
90021cc6:	9311      	str	r3, [sp, #68]	@ 0x44
90021cc8:	e732      	b.n	90021b30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90021cca:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90021ccc:	9e21      	ldr	r6, [sp, #132]	@ 0x84
90021cce:	4433      	add	r3, r6
90021cd0:	9e22      	ldr	r6, [sp, #136]	@ 0x88
90021cd2:	931f      	str	r3, [sp, #124]	@ 0x7c
90021cd4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90021cd6:	4433      	add	r3, r6
90021cd8:	9320      	str	r3, [sp, #128]	@ 0x80
90021cda:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021cdc:	3b01      	subs	r3, #1
90021cde:	9309      	str	r3, [sp, #36]	@ 0x24
90021ce0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90021ce2:	3302      	adds	r3, #2
90021ce4:	930a      	str	r3, [sp, #40]	@ 0x28
90021ce6:	e702      	b.n	90021aee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90021ce8:	d027      	beq.n	90021d3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
90021cea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021cec:	9821      	ldr	r0, [sp, #132]	@ 0x84
90021cee:	3b01      	subs	r3, #1
90021cf0:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90021cf2:	fb00 5003 	mla	r0, r0, r3, r5
90021cf6:	1400      	asrs	r0, r0, #16
90021cf8:	f53f af16 	bmi.w	90021b28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021cfc:	3901      	subs	r1, #1
90021cfe:	4288      	cmp	r0, r1
90021d00:	f6bf af12 	bge.w	90021b28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021d04:	9922      	ldr	r1, [sp, #136]	@ 0x88
90021d06:	9820      	ldr	r0, [sp, #128]	@ 0x80
90021d08:	fb01 0303 	mla	r3, r1, r3, r0
90021d0c:	141b      	asrs	r3, r3, #16
90021d0e:	f53f af0b 	bmi.w	90021b28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021d12:	3a01      	subs	r2, #1
90021d14:	4293      	cmp	r3, r2
90021d16:	f6bf af07 	bge.w	90021b28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90021d1a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021d1c:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
90021d20:	9311      	str	r3, [sp, #68]	@ 0x44
90021d22:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90021d24:	930c      	str	r3, [sp, #48]	@ 0x30
90021d26:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90021d28:	2b00      	cmp	r3, #0
90021d2a:	dc70      	bgt.n	90021e0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90021d2c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90021d2e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90021d30:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
90021d34:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90021d38:	930a      	str	r3, [sp, #40]	@ 0x28
90021d3a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90021d3c:	2b00      	cmp	r3, #0
90021d3e:	f340 8124 	ble.w	90021f8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
90021d42:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90021d46:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90021d48:	ee30 0a04 	vadd.f32	s0, s0, s8
90021d4c:	ee70 0aa4 	vadd.f32	s1, s1, s9
90021d50:	eef0 6a62 	vmov.f32	s13, s5
90021d54:	eec7 7a00 	vdiv.f32	s15, s14, s0
90021d58:	ee31 1a05 	vadd.f32	s2, s2, s10
90021d5c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021d60:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
90021d64:	eef0 6a43 	vmov.f32	s13, s6
90021d68:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90021d6c:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
90021d70:	ee20 7aa7 	vmul.f32	s14, s1, s15
90021d74:	ee61 7a27 	vmul.f32	s15, s2, s15
90021d78:	ee77 2a62 	vsub.f32	s5, s14, s5
90021d7c:	ee37 3ac3 	vsub.f32	s6, s15, s6
90021d80:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90021d84:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90021d88:	ee12 2a90 	vmov	r2, s5
90021d8c:	eef0 2a47 	vmov.f32	s5, s14
90021d90:	fb92 f3f3 	sdiv	r3, r2, r3
90021d94:	ee13 2a10 	vmov	r2, s6
90021d98:	9321      	str	r3, [sp, #132]	@ 0x84
90021d9a:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90021d9c:	eeb0 3a67 	vmov.f32	s6, s15
90021da0:	fb92 f3f3 	sdiv	r3, r2, r3
90021da4:	9322      	str	r3, [sp, #136]	@ 0x88
90021da6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90021da8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90021daa:	3b01      	subs	r3, #1
90021dac:	930e      	str	r3, [sp, #56]	@ 0x38
90021dae:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90021db0:	bf08      	it	eq
90021db2:	4613      	moveq	r3, r2
90021db4:	9309      	str	r3, [sp, #36]	@ 0x24
90021db6:	e68c      	b.n	90021ad2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90021db8:	b149      	cbz	r1, 90021dce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
90021dba:	5cb2      	ldrb	r2, [r6, r2]
90021dbc:	4628      	mov	r0, r5
90021dbe:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90021dc2:	4422      	add	r2, r4
90021dc4:	46ac      	mov	ip, r5
90021dc6:	e6f1      	b.n	90021bac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90021dc8:	4628      	mov	r0, r5
90021dca:	462a      	mov	r2, r5
90021dcc:	e6ee      	b.n	90021bac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
90021dce:	4628      	mov	r0, r5
90021dd0:	462a      	mov	r2, r5
90021dd2:	e7f7      	b.n	90021dc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
90021dd4:	1c47      	adds	r7, r0, #1
90021dd6:	f53f af69 	bmi.w	90021cac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90021dda:	42ba      	cmp	r2, r7
90021ddc:	f6ff af66 	blt.w	90021cac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90021de0:	1c6f      	adds	r7, r5, #1
90021de2:	f53f af63 	bmi.w	90021cac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90021de6:	42be      	cmp	r6, r7
90021de8:	f6ff af60 	blt.w	90021cac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90021dec:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
90021dee:	b236      	sxth	r6, r6
90021df0:	b212      	sxth	r2, r2
90021df2:	9002      	str	r0, [sp, #8]
90021df4:	9601      	str	r6, [sp, #4]
90021df6:	9200      	str	r2, [sp, #0]
90021df8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90021dfa:	e9cd 1705 	strd	r1, r7, [sp, #20]
90021dfe:	e9cd 5303 	strd	r5, r3, [sp, #12]
90021e02:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
90021e06:	4623      	mov	r3, r4
90021e08:	f7ff fd59 	bl	900218be <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
90021e0c:	e74e      	b.n	90021cac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
90021e0e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90021e10:	9820      	ldr	r0, [sp, #128]	@ 0x80
90021e12:	f3c2 3103 	ubfx	r1, r2, #12, #4
90021e16:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
90021e18:	9a26      	ldr	r2, [sp, #152]	@ 0x98
90021e1a:	1400      	asrs	r0, r0, #16
90021e1c:	142d      	asrs	r5, r5, #16
90021e1e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90021e20:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
90021e24:	f3c3 3303 	ubfx	r3, r3, #12, #4
90021e28:	fb02 5000 	mla	r0, r2, r0, r5
90021e2c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90021e2e:	f815 9000 	ldrb.w	r9, [r5, r0]
90021e32:	182e      	adds	r6, r5, r0
90021e34:	eb09 0949 	add.w	r9, r9, r9, lsl #1
90021e38:	eb04 0509 	add.w	r5, r4, r9
90021e3c:	2b00      	cmp	r3, #0
90021e3e:	f000 8096 	beq.w	90021f6e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
90021e42:	7877      	ldrb	r7, [r6, #1]
90021e44:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90021e48:	4427      	add	r7, r4
90021e4a:	2900      	cmp	r1, #0
90021e4c:	f000 8097 	beq.w	90021f7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
90021e50:	18b0      	adds	r0, r6, r2
90021e52:	5cb2      	ldrb	r2, [r6, r2]
90021e54:	7840      	ldrb	r0, [r0, #1]
90021e56:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90021e5a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90021e5e:	4422      	add	r2, r4
90021e60:	4420      	add	r0, r4
90021e62:	b29b      	uxth	r3, r3
90021e64:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
90021e66:	b289      	uxth	r1, r1
90021e68:	f895 b002 	ldrb.w	fp, [r5, #2]
90021e6c:	f8b6 c000 	ldrh.w	ip, [r6]
90021e70:	fb03 f801 	mul.w	r8, r3, r1
90021e74:	011b      	lsls	r3, r3, #4
90021e76:	78be      	ldrb	r6, [r7, #2]
90021e78:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
90021e7c:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90021e80:	eba3 0308 	sub.w	r3, r3, r8
90021e84:	f814 9009 	ldrb.w	r9, [r4, r9]
90021e88:	b289      	uxth	r1, r1
90021e8a:	b29b      	uxth	r3, r3
90021e8c:	ebae 0e01 	sub.w	lr, lr, r1
90021e90:	435e      	muls	r6, r3
90021e92:	fa1f fe8e 	uxth.w	lr, lr
90021e96:	9310      	str	r3, [sp, #64]	@ 0x40
90021e98:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021e9a:	fb0e 660b 	mla	r6, lr, fp, r6
90021e9e:	f892 b002 	ldrb.w	fp, [r2, #2]
90021ea2:	fb01 660b 	mla	r6, r1, fp, r6
90021ea6:	f890 b002 	ldrb.w	fp, [r0, #2]
90021eaa:	fb08 660b 	mla	r6, r8, fp, r6
90021eae:	ea4f 2b2c 	mov.w	fp, ip, asr #8
90021eb2:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
90021eb6:	f3c6 2607 	ubfx	r6, r6, #8, #8
90021eba:	fb1b fb03 	smulbb	fp, fp, r3
90021ebe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90021ec0:	fb06 b60a 	mla	r6, r6, sl, fp
90021ec4:	f895 b001 	ldrb.w	fp, [r5, #1]
90021ec8:	787d      	ldrb	r5, [r7, #1]
90021eca:	783f      	ldrb	r7, [r7, #0]
90021ecc:	b2b6      	uxth	r6, r6
90021ece:	435d      	muls	r5, r3
90021ed0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021ed2:	fb0e 550b 	mla	r5, lr, fp, r5
90021ed6:	f892 b001 	ldrb.w	fp, [r2, #1]
90021eda:	fb01 550b 	mla	r5, r1, fp, r5
90021ede:	f890 b001 	ldrb.w	fp, [r0, #1]
90021ee2:	fb08 550b 	mla	r5, r8, fp, r5
90021ee6:	ea4f 0bec 	mov.w	fp, ip, asr #3
90021eea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90021eee:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
90021ef2:	f3c5 2507 	ubfx	r5, r5, #8, #8
90021ef6:	fa5f fc8c 	uxtb.w	ip, ip
90021efa:	fb1b fb03 	smulbb	fp, fp, r3
90021efe:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90021f00:	437b      	muls	r3, r7
90021f02:	7817      	ldrb	r7, [r2, #0]
90021f04:	fb05 b50a 	mla	r5, r5, sl, fp
90021f08:	fb0e 3309 	mla	r3, lr, r9, r3
90021f0c:	b2ad      	uxth	r5, r5
90021f0e:	fb01 3307 	mla	r3, r1, r7, r3
90021f12:	7807      	ldrb	r7, [r0, #0]
90021f14:	f105 0b01 	add.w	fp, r5, #1
90021f18:	fb08 3707 	mla	r7, r8, r7, r3
90021f1c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90021f1e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
90021f22:	fb1c fc03 	smulbb	ip, ip, r3
90021f26:	f3c7 2707 	ubfx	r7, r7, #8, #8
90021f2a:	1c73      	adds	r3, r6, #1
90021f2c:	096d      	lsrs	r5, r5, #5
90021f2e:	fb07 c70a 	mla	r7, r7, sl, ip
90021f32:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90021f36:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90021f3a:	b2bf      	uxth	r7, r7
90021f3c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90021f3e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
90021f42:	1c7a      	adds	r2, r7, #1
90021f44:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90021f48:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90021f4c:	4316      	orrs	r6, r2
90021f4e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90021f50:	432e      	orrs	r6, r5
90021f52:	f823 6b02 	strh.w	r6, [r3], #2
90021f56:	930c      	str	r3, [sp, #48]	@ 0x30
90021f58:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90021f5a:	4413      	add	r3, r2
90021f5c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90021f5e:	931f      	str	r3, [sp, #124]	@ 0x7c
90021f60:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90021f62:	4413      	add	r3, r2
90021f64:	9320      	str	r3, [sp, #128]	@ 0x80
90021f66:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90021f68:	3b01      	subs	r3, #1
90021f6a:	9311      	str	r3, [sp, #68]	@ 0x44
90021f6c:	e6db      	b.n	90021d26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
90021f6e:	b149      	cbz	r1, 90021f84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
90021f70:	5cb2      	ldrb	r2, [r6, r2]
90021f72:	4628      	mov	r0, r5
90021f74:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90021f78:	4422      	add	r2, r4
90021f7a:	462f      	mov	r7, r5
90021f7c:	e771      	b.n	90021e62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90021f7e:	4628      	mov	r0, r5
90021f80:	462a      	mov	r2, r5
90021f82:	e76e      	b.n	90021e62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
90021f84:	4628      	mov	r0, r5
90021f86:	462a      	mov	r2, r5
90021f88:	e7f7      	b.n	90021f7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90021f8a:	b015      	add	sp, #84	@ 0x54
90021f8c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90021f90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
90021f90:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
90021f94:	880f      	ldrh	r7, [r1, #0]
90021f96:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
90021f9a:	023c      	lsls	r4, r7, #8
90021f9c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90021fa0:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
90021fa4:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
90021fa8:	017c      	lsls	r4, r7, #5
90021faa:	00ff      	lsls	r7, r7, #3
90021fac:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90021fb0:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
90021fb4:	b2ff      	uxtb	r7, r7
90021fb6:	ea4b 0404 	orr.w	r4, fp, r4
90021fba:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
90021fbe:	4327      	orrs	r7, r4
90021fc0:	fb05 ca0e 	mla	sl, r5, lr, ip
90021fc4:	2d00      	cmp	r5, #0
90021fc6:	9701      	str	r7, [sp, #4]
90021fc8:	eb02 080a 	add.w	r8, r2, sl
90021fcc:	db7e      	blt.n	900220cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90021fce:	45a9      	cmp	r9, r5
90021fd0:	dd7c      	ble.n	900220cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
90021fd2:	f1bc 0f00 	cmp.w	ip, #0
90021fd6:	db77      	blt.n	900220c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90021fd8:	45e6      	cmp	lr, ip
90021fda:	dd75      	ble.n	900220c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
90021fdc:	f812 700a 	ldrb.w	r7, [r2, sl]
90021fe0:	eb07 0747 	add.w	r7, r7, r7, lsl #1
90021fe4:	441f      	add	r7, r3
90021fe6:	f11c 0201 	adds.w	r2, ip, #1
90021fea:	d472      	bmi.n	900220d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90021fec:	4596      	cmp	lr, r2
90021fee:	dd70      	ble.n	900220d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90021ff0:	2800      	cmp	r0, #0
90021ff2:	d06e      	beq.n	900220d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
90021ff4:	f898 4001 	ldrb.w	r4, [r8, #1]
90021ff8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
90021ffc:	441c      	add	r4, r3
90021ffe:	3501      	adds	r5, #1
90022000:	d46b      	bmi.n	900220da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90022002:	45a9      	cmp	r9, r5
90022004:	dd69      	ble.n	900220da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
90022006:	2e00      	cmp	r6, #0
90022008:	d067      	beq.n	900220da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
9002200a:	f1bc 0f00 	cmp.w	ip, #0
9002200e:	db62      	blt.n	900220d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90022010:	45e6      	cmp	lr, ip
90022012:	dd60      	ble.n	900220d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
90022014:	f818 500e 	ldrb.w	r5, [r8, lr]
90022018:	eb05 0545 	add.w	r5, r5, r5, lsl #1
9002201c:	441d      	add	r5, r3
9002201e:	f11c 0201 	adds.w	r2, ip, #1
90022022:	d45d      	bmi.n	900220e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90022024:	4596      	cmp	lr, r2
90022026:	dd5b      	ble.n	900220e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
90022028:	2800      	cmp	r0, #0
9002202a:	d059      	beq.n	900220e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
9002202c:	44c6      	add	lr, r8
9002202e:	f89e 2001 	ldrb.w	r2, [lr, #1]
90022032:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022036:	4413      	add	r3, r2
90022038:	b280      	uxth	r0, r0
9002203a:	f897 e002 	ldrb.w	lr, [r7, #2]
9002203e:	b2b2      	uxth	r2, r6
90022040:	f897 9000 	ldrb.w	r9, [r7]
90022044:	787f      	ldrb	r7, [r7, #1]
90022046:	fb00 f602 	mul.w	r6, r0, r2
9002204a:	0100      	lsls	r0, r0, #4
9002204c:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
90022050:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
90022054:	1b80      	subs	r0, r0, r6
90022056:	fa1f fc82 	uxth.w	ip, r2
9002205a:	b282      	uxth	r2, r0
9002205c:	78a0      	ldrb	r0, [r4, #2]
9002205e:	eba8 080c 	sub.w	r8, r8, ip
90022062:	4350      	muls	r0, r2
90022064:	fa1f f888 	uxth.w	r8, r8
90022068:	fb08 0e0e 	mla	lr, r8, lr, r0
9002206c:	78a8      	ldrb	r0, [r5, #2]
9002206e:	fb0c e000 	mla	r0, ip, r0, lr
90022072:	f893 e002 	ldrb.w	lr, [r3, #2]
90022076:	fb06 0e0e 	mla	lr, r6, lr, r0
9002207a:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
9002207e:	f894 e000 	ldrb.w	lr, [r4]
90022082:	fb02 fe0e 	mul.w	lr, r2, lr
90022086:	fb08 e909 	mla	r9, r8, r9, lr
9002208a:	f895 e000 	ldrb.w	lr, [r5]
9002208e:	fb0c 990e 	mla	r9, ip, lr, r9
90022092:	f893 e000 	ldrb.w	lr, [r3]
90022096:	785b      	ldrb	r3, [r3, #1]
90022098:	fb06 9e0e 	mla	lr, r6, lr, r9
9002209c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
900220a0:	ea4e 0e00 	orr.w	lr, lr, r0
900220a4:	7860      	ldrb	r0, [r4, #1]
900220a6:	4350      	muls	r0, r2
900220a8:	786a      	ldrb	r2, [r5, #1]
900220aa:	fb08 0007 	mla	r0, r8, r7, r0
900220ae:	fb0c 0202 	mla	r2, ip, r2, r0
900220b2:	fb06 2303 	mla	r3, r6, r3, r2
900220b6:	095b      	lsrs	r3, r3, #5
900220b8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900220bc:	ea4e 0303 	orr.w	r3, lr, r3
900220c0:	800b      	strh	r3, [r1, #0]
900220c2:	b003      	add	sp, #12
900220c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
900220c8:	af01      	add	r7, sp, #4
900220ca:	e78c      	b.n	90021fe6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
900220cc:	ac01      	add	r4, sp, #4
900220ce:	4627      	mov	r7, r4
900220d0:	e795      	b.n	90021ffe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
900220d2:	ac01      	add	r4, sp, #4
900220d4:	e793      	b.n	90021ffe <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
900220d6:	ad01      	add	r5, sp, #4
900220d8:	e7a1      	b.n	9002201e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
900220da:	ab01      	add	r3, sp, #4
900220dc:	461d      	mov	r5, r3
900220de:	e7ab      	b.n	90022038 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
900220e0:	ab01      	add	r3, sp, #4
900220e2:	e7a9      	b.n	90022038 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

900220e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900220e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900220e8:	b08f      	sub	sp, #60	@ 0x3c
900220ea:	920c      	str	r2, [sp, #48]	@ 0x30
900220ec:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
900220ee:	900d      	str	r0, [sp, #52]	@ 0x34
900220f0:	910a      	str	r1, [sp, #40]	@ 0x28
900220f2:	6850      	ldr	r0, [r2, #4]
900220f4:	9306      	str	r3, [sp, #24]
900220f6:	6812      	ldr	r2, [r2, #0]
900220f8:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
900220fc:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
90022100:	fb00 1303 	mla	r3, r0, r3, r1
90022104:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022108:	9307      	str	r3, [sp, #28]
9002210a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002210c:	681b      	ldr	r3, [r3, #0]
9002210e:	9308      	str	r3, [sp, #32]
90022110:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022112:	685c      	ldr	r4, [r3, #4]
90022114:	3404      	adds	r4, #4
90022116:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90022118:	2b00      	cmp	r3, #0
9002211a:	dc03      	bgt.n	90022124 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
9002211c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002211e:	2b00      	cmp	r3, #0
90022120:	f340 81d5 	ble.w	900224ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
90022124:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90022126:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002212a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002212e:	1e48      	subs	r0, r1, #1
90022130:	1e56      	subs	r6, r2, #1
90022132:	9b06      	ldr	r3, [sp, #24]
90022134:	2b00      	cmp	r3, #0
90022136:	f340 80b6 	ble.w	900222a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
9002213a:	ea5f 472b 	movs.w	r7, fp, asr #16
9002213e:	ea4f 4325 	mov.w	r3, r5, asr #16
90022142:	d406      	bmi.n	90022152 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90022144:	4287      	cmp	r7, r0
90022146:	da04      	bge.n	90022152 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
90022148:	2b00      	cmp	r3, #0
9002214a:	db02      	blt.n	90022152 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
9002214c:	42b3      	cmp	r3, r6
9002214e:	f2c0 80ab 	blt.w	900222a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
90022152:	3701      	adds	r7, #1
90022154:	f100 809c 	bmi.w	90022290 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022158:	42b9      	cmp	r1, r7
9002215a:	f2c0 8099 	blt.w	90022290 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002215e:	3301      	adds	r3, #1
90022160:	f100 8096 	bmi.w	90022290 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
90022164:	429a      	cmp	r2, r3
90022166:	f2c0 8093 	blt.w	90022290 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
9002216a:	9b06      	ldr	r3, [sp, #24]
9002216c:	930b      	str	r3, [sp, #44]	@ 0x2c
9002216e:	9b07      	ldr	r3, [sp, #28]
90022170:	9309      	str	r3, [sp, #36]	@ 0x24
90022172:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022174:	2b00      	cmp	r3, #0
90022176:	f340 80b4 	ble.w	900222e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
9002217a:	9820      	ldr	r0, [sp, #128]	@ 0x80
9002217c:	142e      	asrs	r6, r5, #16
9002217e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
90022180:	f3cb 3303 	ubfx	r3, fp, #12, #4
90022184:	68c7      	ldr	r7, [r0, #12]
90022186:	ea5f 402b 	movs.w	r0, fp, asr #16
9002218a:	f3c5 3103 	ubfx	r1, r5, #12, #4
9002218e:	6892      	ldr	r2, [r2, #8]
90022190:	f100 80fb 	bmi.w	9002238a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
90022194:	f102 3cff 	add.w	ip, r2, #4294967295
90022198:	4560      	cmp	r0, ip
9002219a:	f280 80f6 	bge.w	9002238a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
9002219e:	2e00      	cmp	r6, #0
900221a0:	f2c0 80f3 	blt.w	9002238a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
900221a4:	f107 3cff 	add.w	ip, r7, #4294967295
900221a8:	4566      	cmp	r6, ip
900221aa:	f280 80ee 	bge.w	9002238a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
900221ae:	b212      	sxth	r2, r2
900221b0:	fb06 0002 	mla	r0, r6, r2, r0
900221b4:	9e08      	ldr	r6, [sp, #32]
900221b6:	1837      	adds	r7, r6, r0
900221b8:	5c30      	ldrb	r0, [r6, r0]
900221ba:	eb00 0840 	add.w	r8, r0, r0, lsl #1
900221be:	eb04 0c08 	add.w	ip, r4, r8
900221c2:	2b00      	cmp	r3, #0
900221c4:	f000 80d3 	beq.w	9002236e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
900221c8:	787e      	ldrb	r6, [r7, #1]
900221ca:	eb06 0646 	add.w	r6, r6, r6, lsl #1
900221ce:	4426      	add	r6, r4
900221d0:	2900      	cmp	r1, #0
900221d2:	f000 80d4 	beq.w	9002237e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
900221d6:	18b8      	adds	r0, r7, r2
900221d8:	5cba      	ldrb	r2, [r7, r2]
900221da:	7840      	ldrb	r0, [r0, #1]
900221dc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900221e0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900221e4:	4422      	add	r2, r4
900221e6:	4420      	add	r0, r4
900221e8:	b29b      	uxth	r3, r3
900221ea:	78b7      	ldrb	r7, [r6, #2]
900221ec:	b289      	uxth	r1, r1
900221ee:	f89c a002 	ldrb.w	sl, [ip, #2]
900221f2:	f89c c001 	ldrb.w	ip, [ip, #1]
900221f6:	fb03 f901 	mul.w	r9, r3, r1
900221fa:	011b      	lsls	r3, r3, #4
900221fc:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90022200:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
90022204:	eba3 0309 	sub.w	r3, r3, r9
90022208:	b289      	uxth	r1, r1
9002220a:	b29b      	uxth	r3, r3
9002220c:	ebae 0e01 	sub.w	lr, lr, r1
90022210:	435f      	muls	r7, r3
90022212:	fa1f fe8e 	uxth.w	lr, lr
90022216:	fb0e 770a 	mla	r7, lr, sl, r7
9002221a:	f892 a002 	ldrb.w	sl, [r2, #2]
9002221e:	fb01 770a 	mla	r7, r1, sl, r7
90022222:	f890 a002 	ldrb.w	sl, [r0, #2]
90022226:	fb09 7a0a 	mla	sl, r9, sl, r7
9002222a:	f814 7008 	ldrb.w	r7, [r4, r8]
9002222e:	f896 8000 	ldrb.w	r8, [r6]
90022232:	7876      	ldrb	r6, [r6, #1]
90022234:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
90022238:	fb03 f808 	mul.w	r8, r3, r8
9002223c:	4373      	muls	r3, r6
9002223e:	fb0e 8807 	mla	r8, lr, r7, r8
90022242:	7817      	ldrb	r7, [r2, #0]
90022244:	fb0e 330c 	mla	r3, lr, ip, r3
90022248:	fb01 8807 	mla	r8, r1, r7, r8
9002224c:	7807      	ldrb	r7, [r0, #0]
9002224e:	fb09 8707 	mla	r7, r9, r7, r8
90022252:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022256:	ea47 070a 	orr.w	r7, r7, sl
9002225a:	f892 a001 	ldrb.w	sl, [r2, #1]
9002225e:	fb01 310a 	mla	r1, r1, sl, r3
90022262:	f890 a001 	ldrb.w	sl, [r0, #1]
90022266:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022268:	fb09 1a0a 	mla	sl, r9, sl, r1
9002226c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90022270:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90022274:	ea47 070a 	orr.w	r7, r7, sl
90022278:	801f      	strh	r7, [r3, #0]
9002227a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002227c:	3302      	adds	r3, #2
9002227e:	9309      	str	r3, [sp, #36]	@ 0x24
90022280:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90022282:	449b      	add	fp, r3
90022284:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022286:	441d      	add	r5, r3
90022288:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002228a:	3b01      	subs	r3, #1
9002228c:	930b      	str	r3, [sp, #44]	@ 0x2c
9002228e:	e770      	b.n	90022172 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90022290:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90022292:	449b      	add	fp, r3
90022294:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90022296:	441d      	add	r5, r3
90022298:	9b06      	ldr	r3, [sp, #24]
9002229a:	3b01      	subs	r3, #1
9002229c:	9306      	str	r3, [sp, #24]
9002229e:	9b07      	ldr	r3, [sp, #28]
900222a0:	3302      	adds	r3, #2
900222a2:	9307      	str	r3, [sp, #28]
900222a4:	e745      	b.n	90022132 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
900222a6:	d023      	beq.n	900222f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
900222a8:	9b06      	ldr	r3, [sp, #24]
900222aa:	981b      	ldr	r0, [sp, #108]	@ 0x6c
900222ac:	3b01      	subs	r3, #1
900222ae:	fb00 b003 	mla	r0, r0, r3, fp
900222b2:	1400      	asrs	r0, r0, #16
900222b4:	f53f af59 	bmi.w	9002216a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900222b8:	3901      	subs	r1, #1
900222ba:	4288      	cmp	r0, r1
900222bc:	f6bf af55 	bge.w	9002216a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900222c0:	991c      	ldr	r1, [sp, #112]	@ 0x70
900222c2:	fb01 5303 	mla	r3, r1, r3, r5
900222c6:	141b      	asrs	r3, r3, #16
900222c8:	f53f af4f 	bmi.w	9002216a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900222cc:	3a01      	subs	r2, #1
900222ce:	4293      	cmp	r3, r2
900222d0:	f6bf af4b 	bge.w	9002216a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900222d4:	9b06      	ldr	r3, [sp, #24]
900222d6:	9309      	str	r3, [sp, #36]	@ 0x24
900222d8:	9b07      	ldr	r3, [sp, #28]
900222da:	930b      	str	r3, [sp, #44]	@ 0x2c
900222dc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900222de:	2b00      	cmp	r3, #0
900222e0:	dc70      	bgt.n	900223c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
900222e2:	9b06      	ldr	r3, [sp, #24]
900222e4:	9a07      	ldr	r2, [sp, #28]
900222e6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
900222ea:	eb02 0343 	add.w	r3, r2, r3, lsl #1
900222ee:	9307      	str	r3, [sp, #28]
900222f0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900222f2:	2b00      	cmp	r3, #0
900222f4:	f340 80eb 	ble.w	900224ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
900222f8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900222fc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900222fe:	ee30 0a04 	vadd.f32	s0, s0, s8
90022302:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022306:	eef0 6a62 	vmov.f32	s13, s5
9002230a:	eec7 7a00 	vdiv.f32	s15, s14, s0
9002230e:	ee31 1a05 	vadd.f32	s2, s2, s10
90022312:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022316:	ee16 ba90 	vmov	fp, s13
9002231a:	eef0 6a43 	vmov.f32	s13, s6
9002231e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022322:	ee16 5a90 	vmov	r5, s13
90022326:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002232a:	ee61 7a27 	vmul.f32	s15, s2, s15
9002232e:	ee77 2a62 	vsub.f32	s5, s14, s5
90022332:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022336:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002233a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
9002233e:	ee12 2a90 	vmov	r2, s5
90022342:	eef0 2a47 	vmov.f32	s5, s14
90022346:	fb92 f3f3 	sdiv	r3, r2, r3
9002234a:	ee13 2a10 	vmov	r2, s6
9002234e:	931b      	str	r3, [sp, #108]	@ 0x6c
90022350:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90022352:	eeb0 3a67 	vmov.f32	s6, s15
90022356:	fb92 f3f3 	sdiv	r3, r2, r3
9002235a:	931c      	str	r3, [sp, #112]	@ 0x70
9002235c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002235e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
90022360:	3b01      	subs	r3, #1
90022362:	930a      	str	r3, [sp, #40]	@ 0x28
90022364:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90022366:	bf08      	it	eq
90022368:	4613      	moveq	r3, r2
9002236a:	9306      	str	r3, [sp, #24]
9002236c:	e6d3      	b.n	90022116 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
9002236e:	b149      	cbz	r1, 90022384 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
90022370:	5cba      	ldrb	r2, [r7, r2]
90022372:	4660      	mov	r0, ip
90022374:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022378:	4422      	add	r2, r4
9002237a:	4666      	mov	r6, ip
9002237c:	e734      	b.n	900221e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
9002237e:	4660      	mov	r0, ip
90022380:	4662      	mov	r2, ip
90022382:	e731      	b.n	900221e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
90022384:	4660      	mov	r0, ip
90022386:	4662      	mov	r2, ip
90022388:	e7f7      	b.n	9002237a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
9002238a:	f110 0c01 	adds.w	ip, r0, #1
9002238e:	f53f af74 	bmi.w	9002227a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022392:	4562      	cmp	r2, ip
90022394:	f6ff af71 	blt.w	9002227a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90022398:	f116 0c01 	adds.w	ip, r6, #1
9002239c:	f53f af6d 	bmi.w	9002227a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900223a0:	4567      	cmp	r7, ip
900223a2:	f6ff af6a 	blt.w	9002227a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900223a6:	b23f      	sxth	r7, r7
900223a8:	b212      	sxth	r2, r2
900223aa:	9701      	str	r7, [sp, #4]
900223ac:	9200      	str	r2, [sp, #0]
900223ae:	e9cd 3104 	strd	r3, r1, [sp, #16]
900223b2:	e9cd 0602 	strd	r0, r6, [sp, #8]
900223b6:	4623      	mov	r3, r4
900223b8:	980d      	ldr	r0, [sp, #52]	@ 0x34
900223ba:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
900223be:	f7ff fde7 	bl	90021f90 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
900223c2:	e75a      	b.n	9002227a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900223c4:	9a20      	ldr	r2, [sp, #128]	@ 0x80
900223c6:	ea4f 462b 	mov.w	r6, fp, asr #16
900223ca:	1428      	asrs	r0, r5, #16
900223cc:	f3cb 3303 	ubfx	r3, fp, #12, #4
900223d0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
900223d4:	f3c5 3103 	ubfx	r1, r5, #12, #4
900223d8:	fb02 6000 	mla	r0, r2, r0, r6
900223dc:	9e08      	ldr	r6, [sp, #32]
900223de:	f816 8000 	ldrb.w	r8, [r6, r0]
900223e2:	1837      	adds	r7, r6, r0
900223e4:	eb08 0848 	add.w	r8, r8, r8, lsl #1
900223e8:	eb04 0c08 	add.w	ip, r4, r8
900223ec:	2b00      	cmp	r3, #0
900223ee:	d060      	beq.n	900224b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
900223f0:	787e      	ldrb	r6, [r7, #1]
900223f2:	eb06 0646 	add.w	r6, r6, r6, lsl #1
900223f6:	4426      	add	r6, r4
900223f8:	2900      	cmp	r1, #0
900223fa:	d062      	beq.n	900224c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
900223fc:	18b8      	adds	r0, r7, r2
900223fe:	5cba      	ldrb	r2, [r7, r2]
90022400:	7840      	ldrb	r0, [r0, #1]
90022402:	eb02 0242 	add.w	r2, r2, r2, lsl #1
90022406:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002240a:	4422      	add	r2, r4
9002240c:	4420      	add	r0, r4
9002240e:	b29b      	uxth	r3, r3
90022410:	78b7      	ldrb	r7, [r6, #2]
90022412:	b289      	uxth	r1, r1
90022414:	f89c a002 	ldrb.w	sl, [ip, #2]
90022418:	f89c c001 	ldrb.w	ip, [ip, #1]
9002241c:	fb03 f901 	mul.w	r9, r3, r1
90022420:	011b      	lsls	r3, r3, #4
90022422:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90022426:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
9002242a:	eba3 0309 	sub.w	r3, r3, r9
9002242e:	b289      	uxth	r1, r1
90022430:	b29b      	uxth	r3, r3
90022432:	ebae 0e01 	sub.w	lr, lr, r1
90022436:	435f      	muls	r7, r3
90022438:	fa1f fe8e 	uxth.w	lr, lr
9002243c:	fb0e 770a 	mla	r7, lr, sl, r7
90022440:	f892 a002 	ldrb.w	sl, [r2, #2]
90022444:	fb01 770a 	mla	r7, r1, sl, r7
90022448:	f890 a002 	ldrb.w	sl, [r0, #2]
9002244c:	fb09 7a0a 	mla	sl, r9, sl, r7
90022450:	f814 7008 	ldrb.w	r7, [r4, r8]
90022454:	f896 8000 	ldrb.w	r8, [r6]
90022458:	7876      	ldrb	r6, [r6, #1]
9002245a:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
9002245e:	fb03 f808 	mul.w	r8, r3, r8
90022462:	4373      	muls	r3, r6
90022464:	7856      	ldrb	r6, [r2, #1]
90022466:	fb0e 8807 	mla	r8, lr, r7, r8
9002246a:	7817      	ldrb	r7, [r2, #0]
9002246c:	fb0e 330c 	mla	r3, lr, ip, r3
90022470:	fb01 8807 	mla	r8, r1, r7, r8
90022474:	7807      	ldrb	r7, [r0, #0]
90022476:	fb01 3306 	mla	r3, r1, r6, r3
9002247a:	fb09 8707 	mla	r7, r9, r7, r8
9002247e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
90022482:	ea47 070a 	orr.w	r7, r7, sl
90022486:	f890 a001 	ldrb.w	sl, [r0, #1]
9002248a:	fb09 3a0a 	mla	sl, r9, sl, r3
9002248e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90022490:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
90022494:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
90022498:	ea47 070a 	orr.w	r7, r7, sl
9002249c:	f823 7b02 	strh.w	r7, [r3], #2
900224a0:	930b      	str	r3, [sp, #44]	@ 0x2c
900224a2:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
900224a4:	449b      	add	fp, r3
900224a6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900224a8:	441d      	add	r5, r3
900224aa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900224ac:	3b01      	subs	r3, #1
900224ae:	9309      	str	r3, [sp, #36]	@ 0x24
900224b0:	e714      	b.n	900222dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
900224b2:	b149      	cbz	r1, 900224c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
900224b4:	5cba      	ldrb	r2, [r7, r2]
900224b6:	4660      	mov	r0, ip
900224b8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
900224bc:	4422      	add	r2, r4
900224be:	4666      	mov	r6, ip
900224c0:	e7a5      	b.n	9002240e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
900224c2:	4660      	mov	r0, ip
900224c4:	4662      	mov	r2, ip
900224c6:	e7a2      	b.n	9002240e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
900224c8:	4660      	mov	r0, ip
900224ca:	4662      	mov	r2, ip
900224cc:	e7f7      	b.n	900224be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
900224ce:	b00f      	add	sp, #60	@ 0x3c
900224d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900224d4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
900224d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900224d8:	b085      	sub	sp, #20
900224da:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
900224de:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
900224e2:	9102      	str	r1, [sp, #8]
900224e4:	2c00      	cmp	r4, #0
900224e6:	fb04 710c 	mla	r1, r4, ip, r7
900224ea:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
900224ee:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
900224f2:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
900224f6:	eb02 0e01 	add.w	lr, r2, r1
900224fa:	f2c0 8122 	blt.w	90022742 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
900224fe:	45a0      	cmp	r8, r4
90022500:	f340 811f 	ble.w	90022742 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
90022504:	2f00      	cmp	r7, #0
90022506:	f2c0 811a 	blt.w	9002273e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
9002250a:	45bc      	cmp	ip, r7
9002250c:	f340 8117 	ble.w	9002273e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
90022510:	5c52      	ldrb	r2, [r2, r1]
90022512:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
90022516:	1c7a      	adds	r2, r7, #1
90022518:	f100 8116 	bmi.w	90022748 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
9002251c:	4594      	cmp	ip, r2
9002251e:	f340 8113 	ble.w	90022748 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
90022522:	2e00      	cmp	r6, #0
90022524:	f000 8112 	beq.w	9002274c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
90022528:	f89e 2001 	ldrb.w	r2, [lr, #1]
9002252c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90022530:	3401      	adds	r4, #1
90022532:	f100 810f 	bmi.w	90022754 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
90022536:	45a0      	cmp	r8, r4
90022538:	f340 810c 	ble.w	90022754 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
9002253c:	2800      	cmp	r0, #0
9002253e:	f000 810c 	beq.w	9002275a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
90022542:	2f00      	cmp	r7, #0
90022544:	f2c0 8104 	blt.w	90022750 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
90022548:	45bc      	cmp	ip, r7
9002254a:	f340 8101 	ble.w	90022750 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
9002254e:	f81e 200c 	ldrb.w	r2, [lr, ip]
90022552:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
90022556:	3701      	adds	r7, #1
90022558:	f100 8102 	bmi.w	90022760 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
9002255c:	45bc      	cmp	ip, r7
9002255e:	f340 80ff 	ble.w	90022760 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
90022562:	2e00      	cmp	r6, #0
90022564:	f000 80fe 	beq.w	90022764 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
90022568:	44f4      	add	ip, lr
9002256a:	f89c 2001 	ldrb.w	r2, [ip, #1]
9002256e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
90022572:	b2b6      	uxth	r6, r6
90022574:	b280      	uxth	r0, r0
90022576:	ea4f 6a11 	mov.w	sl, r1, lsr #24
9002257a:	fb00 fe06 	mul.w	lr, r0, r6
9002257e:	0136      	lsls	r6, r6, #4
90022580:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90022584:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90022588:	eba6 070e 	sub.w	r7, r6, lr
9002258c:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
90022590:	ea4f 6914 	mov.w	r9, r4, lsr #24
90022594:	b280      	uxth	r0, r0
90022596:	b2bf      	uxth	r7, r7
90022598:	1a1b      	subs	r3, r3, r0
9002259a:	ea4f 6812 	mov.w	r8, r2, lsr #24
9002259e:	fb0a f607 	mul.w	r6, sl, r7
900225a2:	b29b      	uxth	r3, r3
900225a4:	fb0b 6603 	mla	r6, fp, r3, r6
900225a8:	fb00 6609 	mla	r6, r0, r9, r6
900225ac:	fb0e 6608 	mla	r6, lr, r8, r6
900225b0:	f3c6 2607 	ubfx	r6, r6, #8, #8
900225b4:	9600      	str	r6, [sp, #0]
900225b6:	2e00      	cmp	r6, #0
900225b8:	f000 80be 	beq.w	90022738 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
900225bc:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900225c0:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
900225c4:	9e02      	ldr	r6, [sp, #8]
900225c6:	fb0b fc0c 	mul.w	ip, fp, ip
900225ca:	fb0b f505 	mul.w	r5, fp, r5
900225ce:	8836      	ldrh	r6, [r6, #0]
900225d0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
900225d4:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900225d8:	9501      	str	r5, [sp, #4]
900225da:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
900225de:	44dc      	add	ip, fp
900225e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900225e4:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
900225e8:	9503      	str	r5, [sp, #12]
900225ea:	9d01      	ldr	r5, [sp, #4]
900225ec:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
900225f0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900225f4:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
900225f8:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900225fc:	fb0a fc0c 	mul.w	ip, sl, ip
90022600:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90022604:	fb0a fa01 	mul.w	sl, sl, r1
90022608:	ea4f 251c 	mov.w	r5, ip, lsr #8
9002260c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90022610:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90022614:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90022618:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
9002261c:	4465      	add	r5, ip
9002261e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90022622:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90022626:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002262a:	fb09 fc0c 	mul.w	ip, r9, ip
9002262e:	0a2d      	lsrs	r5, r5, #8
90022630:	fb09 f904 	mul.w	r9, r9, r4
90022634:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90022638:	ea4f 211c 	mov.w	r1, ip, lsr #8
9002263c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90022640:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90022644:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90022648:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9002264c:	437d      	muls	r5, r7
9002264e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90022652:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90022656:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
9002265a:	4461      	add	r1, ip
9002265c:	fb08 f404 	mul.w	r4, r8, r4
90022660:	ea4f 2919 	mov.w	r9, r9, lsr #8
90022664:	fb08 f802 	mul.w	r8, r8, r2
90022668:	0a09      	lsrs	r1, r1, #8
9002266a:	0a22      	lsrs	r2, r4, #8
9002266c:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
90022670:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90022674:	fb07 f70a 	mul.w	r7, r7, sl
90022678:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
9002267c:	4414      	add	r4, r2
9002267e:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90022682:	0a24      	lsrs	r4, r4, #8
90022684:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90022688:	9a03      	ldr	r2, [sp, #12]
9002268a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
9002268e:	fb02 5503 	mla	r5, r2, r3, r5
90022692:	ea4f 2818 	mov.w	r8, r8, lsr #8
90022696:	9a00      	ldr	r2, [sp, #0]
90022698:	fb04 540e 	mla	r4, r4, lr, r5
9002269c:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
900226a0:	1235      	asrs	r5, r6, #8
900226a2:	fb01 4100 	mla	r1, r1, r0, r4
900226a6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900226aa:	0a09      	lsrs	r1, r1, #8
900226ac:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
900226b0:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
900226b4:	fb03 7101 	mla	r1, r3, r1, r7
900226b8:	fb0e 1e08 	mla	lr, lr, r8, r1
900226bc:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
900226c0:	fb00 e101 	mla	r1, r0, r1, lr
900226c4:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
900226c8:	b287      	uxth	r7, r0
900226ca:	0a09      	lsrs	r1, r1, #8
900226cc:	437a      	muls	r2, r7
900226ce:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900226d2:	1c53      	adds	r3, r2, #1
900226d4:	4321      	orrs	r1, r4
900226d6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900226da:	0c0a      	lsrs	r2, r1, #16
900226dc:	f3c1 2407 	ubfx	r4, r1, #8, #8
900226e0:	ea6f 2313 	mvn.w	r3, r3, lsr #8
900226e4:	b2c8      	uxtb	r0, r1
900226e6:	fb12 f207 	smulbb	r2, r2, r7
900226ea:	fb14 f407 	smulbb	r4, r4, r7
900226ee:	b2db      	uxtb	r3, r3
900226f0:	fb10 f007 	smulbb	r0, r0, r7
900226f4:	fb05 2503 	mla	r5, r5, r3, r2
900226f8:	10f2      	asrs	r2, r6, #3
900226fa:	00f6      	lsls	r6, r6, #3
900226fc:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90022700:	b2ad      	uxth	r5, r5
90022702:	b2f6      	uxtb	r6, r6
90022704:	fb02 4203 	mla	r2, r2, r3, r4
90022708:	fb06 0303 	mla	r3, r6, r3, r0
9002270c:	b294      	uxth	r4, r2
9002270e:	b299      	uxth	r1, r3
90022710:	1c6b      	adds	r3, r5, #1
90022712:	1c62      	adds	r2, r4, #1
90022714:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90022718:	1c4b      	adds	r3, r1, #1
9002271a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
9002271e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90022722:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90022726:	0952      	lsrs	r2, r2, #5
90022728:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002272c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022730:	432b      	orrs	r3, r5
90022732:	4313      	orrs	r3, r2
90022734:	9a02      	ldr	r2, [sp, #8]
90022736:	8013      	strh	r3, [r2, #0]
90022738:	b005      	add	sp, #20
9002273a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002273e:	2500      	movs	r5, #0
90022740:	e6e9      	b.n	90022516 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
90022742:	2100      	movs	r1, #0
90022744:	460d      	mov	r5, r1
90022746:	e6f3      	b.n	90022530 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90022748:	2100      	movs	r1, #0
9002274a:	e6f1      	b.n	90022530 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
9002274c:	4631      	mov	r1, r6
9002274e:	e6ef      	b.n	90022530 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
90022750:	2400      	movs	r4, #0
90022752:	e700      	b.n	90022556 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
90022754:	2200      	movs	r2, #0
90022756:	4614      	mov	r4, r2
90022758:	e70b      	b.n	90022572 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
9002275a:	4602      	mov	r2, r0
9002275c:	4604      	mov	r4, r0
9002275e:	e708      	b.n	90022572 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90022760:	2200      	movs	r2, #0
90022762:	e706      	b.n	90022572 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
90022764:	4632      	mov	r2, r6
90022766:	e704      	b.n	90022572 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

90022768 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90022768:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002276c:	b09f      	sub	sp, #124	@ 0x7c
9002276e:	921b      	str	r2, [sp, #108]	@ 0x6c
90022770:	9309      	str	r3, [sp, #36]	@ 0x24
90022772:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
90022774:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
90022778:	901d      	str	r0, [sp, #116]	@ 0x74
9002277a:	931c      	str	r3, [sp, #112]	@ 0x70
9002277c:	6850      	ldr	r0, [r2, #4]
9002277e:	9119      	str	r1, [sp, #100]	@ 0x64
90022780:	6812      	ldr	r2, [r2, #0]
90022782:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
90022784:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
90022788:	fb00 1303 	mla	r3, r0, r3, r1
9002278c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90022790:	930c      	str	r3, [sp, #48]	@ 0x30
90022792:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90022794:	681b      	ldr	r3, [r3, #0]
90022796:	9312      	str	r3, [sp, #72]	@ 0x48
90022798:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
9002279a:	685e      	ldr	r6, [r3, #4]
9002279c:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
900227a0:	3604      	adds	r6, #4
900227a2:	930d      	str	r3, [sp, #52]	@ 0x34
900227a4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
900227a6:	2b00      	cmp	r3, #0
900227a8:	dc03      	bgt.n	900227b2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
900227aa:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
900227ac:	2b00      	cmp	r3, #0
900227ae:	f340 8387 	ble.w	90022ec0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
900227b2:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
900227b4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900227b8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900227bc:	1e48      	subs	r0, r1, #1
900227be:	1e57      	subs	r7, r2, #1
900227c0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900227c2:	2b00      	cmp	r3, #0
900227c4:	f340 8194 	ble.w	90022af0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
900227c8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
900227ca:	142b      	asrs	r3, r5, #16
900227cc:	ea5f 4c24 	movs.w	ip, r4, asr #16
900227d0:	d406      	bmi.n	900227e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900227d2:	4584      	cmp	ip, r0
900227d4:	da04      	bge.n	900227e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900227d6:	2b00      	cmp	r3, #0
900227d8:	db02      	blt.n	900227e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
900227da:	42bb      	cmp	r3, r7
900227dc:	f2c0 8189 	blt.w	90022af2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
900227e0:	f11c 0c01 	adds.w	ip, ip, #1
900227e4:	f100 8177 	bmi.w	90022ad6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900227e8:	4561      	cmp	r1, ip
900227ea:	f2c0 8174 	blt.w	90022ad6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900227ee:	3301      	adds	r3, #1
900227f0:	f100 8171 	bmi.w	90022ad6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900227f4:	429a      	cmp	r2, r3
900227f6:	f2c0 816e 	blt.w	90022ad6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
900227fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900227fc:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
900227fe:	931a      	str	r3, [sp, #104]	@ 0x68
90022800:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90022802:	2b00      	cmp	r3, #0
90022804:	f340 8193 	ble.w	90022b2e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
90022808:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9002280a:	ea4f 4c25 	mov.w	ip, r5, asr #16
9002280e:	f3c5 3103 	ubfx	r1, r5, #12, #4
90022812:	f3c3 3203 	ubfx	r2, r3, #12, #4
90022816:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90022818:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
9002281c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
9002281e:	141b      	asrs	r3, r3, #16
90022820:	f100 81d6 	bmi.w	90022bd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90022824:	f100 38ff 	add.w	r8, r0, #4294967295
90022828:	4543      	cmp	r3, r8
9002282a:	f280 81d1 	bge.w	90022bd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
9002282e:	f1bc 0f00 	cmp.w	ip, #0
90022832:	f2c0 81cd 	blt.w	90022bd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90022836:	f10e 38ff 	add.w	r8, lr, #4294967295
9002283a:	45c4      	cmp	ip, r8
9002283c:	f280 81c8 	bge.w	90022bd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
90022840:	b200      	sxth	r0, r0
90022842:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90022844:	fb0c 3300 	mla	r3, ip, r0, r3
90022848:	eb04 0803 	add.w	r8, r4, r3
9002284c:	5ce3      	ldrb	r3, [r4, r3]
9002284e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90022852:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90022856:	2a00      	cmp	r2, #0
90022858:	f000 81af 	beq.w	90022bba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
9002285c:	f898 c001 	ldrb.w	ip, [r8, #1]
90022860:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90022864:	940e      	str	r4, [sp, #56]	@ 0x38
90022866:	0e24      	lsrs	r4, r4, #24
90022868:	9415      	str	r4, [sp, #84]	@ 0x54
9002286a:	b179      	cbz	r1, 9002288c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
9002286c:	eb08 0c00 	add.w	ip, r8, r0
90022870:	f818 0000 	ldrb.w	r0, [r8, r0]
90022874:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90022878:	900a      	str	r0, [sp, #40]	@ 0x28
9002287a:	0e00      	lsrs	r0, r0, #24
9002287c:	9013      	str	r0, [sp, #76]	@ 0x4c
9002287e:	f89c 0001 	ldrb.w	r0, [ip, #1]
90022882:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90022886:	900f      	str	r0, [sp, #60]	@ 0x3c
90022888:	0e00      	lsrs	r0, r0, #24
9002288a:	9016      	str	r0, [sp, #88]	@ 0x58
9002288c:	b292      	uxth	r2, r2
9002288e:	9815      	ldr	r0, [sp, #84]	@ 0x54
90022890:	b289      	uxth	r1, r1
90022892:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90022894:	fb02 f901 	mul.w	r9, r2, r1
90022898:	0112      	lsls	r2, r2, #4
9002289a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
9002289e:	eba2 0809 	sub.w	r8, r2, r9
900228a2:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
900228a6:	b289      	uxth	r1, r1
900228a8:	fa1f f888 	uxth.w	r8, r8
900228ac:	1a52      	subs	r2, r2, r1
900228ae:	fb08 f000 	mul.w	r0, r8, r0
900228b2:	b292      	uxth	r2, r2
900228b4:	fb02 000e 	mla	r0, r2, lr, r0
900228b8:	fb01 0004 	mla	r0, r1, r4, r0
900228bc:	9c16      	ldr	r4, [sp, #88]	@ 0x58
900228be:	fb09 0004 	mla	r0, r9, r4, r0
900228c2:	f3c0 2007 	ubfx	r0, r0, #8, #8
900228c6:	2800      	cmp	r0, #0
900228c8:	f000 80fa 	beq.w	90022ac0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900228cc:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
900228d0:	d01b      	beq.n	9002290a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900228d2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900228d6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900228da:	fb0e fa0a 	mul.w	sl, lr, sl
900228de:	fb0e fe03 	mul.w	lr, lr, r3
900228e2:	ea4f 231a 	mov.w	r3, sl, lsr #8
900228e6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900228ea:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
900228ee:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900228f2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900228f6:	4453      	add	r3, sl
900228f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900228fc:	0a1b      	lsrs	r3, r3, #8
900228fe:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90022902:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90022906:	ea43 030c 	orr.w	r3, r3, ip
9002290a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9002290c:	2cff      	cmp	r4, #255	@ 0xff
9002290e:	d021      	beq.n	90022954 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90022910:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90022912:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90022916:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90022918:	fb04 fb0b 	mul.w	fp, r4, fp
9002291c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
9002291e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90022922:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90022924:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90022928:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002292c:	fb04 fa0a 	mul.w	sl, r4, sl
90022930:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90022934:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90022938:	44de      	add	lr, fp
9002293a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002293e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90022942:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022946:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002294a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002294e:	ea4e 040a 	orr.w	r4, lr, sl
90022952:	940e      	str	r4, [sp, #56]	@ 0x38
90022954:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90022956:	2cff      	cmp	r4, #255	@ 0xff
90022958:	d021      	beq.n	9002299e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
9002295a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9002295c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90022960:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90022962:	fb04 fb0b 	mul.w	fp, r4, fp
90022966:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90022968:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
9002296c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002296e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90022972:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90022976:	fb04 fa0a 	mul.w	sl, r4, sl
9002297a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002297e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90022982:	44de      	add	lr, fp
90022984:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90022988:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002298c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022990:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90022994:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90022998:	ea4e 040a 	orr.w	r4, lr, sl
9002299c:	940a      	str	r4, [sp, #40]	@ 0x28
9002299e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
900229a0:	2cff      	cmp	r4, #255	@ 0xff
900229a2:	d021      	beq.n	900229e8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
900229a4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900229a6:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900229aa:	9c16      	ldr	r4, [sp, #88]	@ 0x58
900229ac:	fb04 fb0b 	mul.w	fp, r4, fp
900229b0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900229b2:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900229b6:	9c16      	ldr	r4, [sp, #88]	@ 0x58
900229b8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900229bc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900229c0:	fb04 fa0a 	mul.w	sl, r4, sl
900229c4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900229c8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
900229cc:	44de      	add	lr, fp
900229ce:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900229d2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900229d6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900229da:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900229de:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900229e2:	ea4e 040a 	orr.w	r4, lr, sl
900229e6:	940f      	str	r4, [sp, #60]	@ 0x3c
900229e8:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900229ea:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
900229ee:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900229f2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900229f6:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900229f8:	fb08 fc0c 	mul.w	ip, r8, ip
900229fc:	fb02 cc0e 	mla	ip, r2, lr, ip
90022a00:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90022a04:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90022a06:	fb01 cc0e 	mla	ip, r1, lr, ip
90022a0a:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
90022a0e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90022a10:	fb09 cc0e 	mla	ip, r9, lr, ip
90022a14:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
90022a18:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90022a1a:	fb08 f80e 	mul.w	r8, r8, lr
90022a1e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022a22:	fb02 8303 	mla	r3, r2, r3, r8
90022a26:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
90022a28:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90022a2c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90022a30:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90022a32:	fb01 330a 	mla	r3, r1, sl, r3
90022a36:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
90022a3a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
90022a3c:	fb09 3901 	mla	r9, r9, r1, r3
90022a40:	883b      	ldrh	r3, [r7, #0]
90022a42:	4342      	muls	r2, r0
90022a44:	ea4f 2919 	mov.w	r9, r9, lsr #8
90022a48:	1c50      	adds	r0, r2, #1
90022a4a:	1219      	asrs	r1, r3, #8
90022a4c:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90022a50:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90022a54:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90022a58:	ea4c 0c09 	orr.w	ip, ip, r9
90022a5c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90022a60:	ea4f 421c 	mov.w	r2, ip, lsr #16
90022a64:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90022a68:	b2c0      	uxtb	r0, r0
90022a6a:	fb12 f204 	smulbb	r2, r2, r4
90022a6e:	fa5f fc8c 	uxtb.w	ip, ip
90022a72:	fb1e fe04 	smulbb	lr, lr, r4
90022a76:	fb01 2100 	mla	r1, r1, r0, r2
90022a7a:	10da      	asrs	r2, r3, #3
90022a7c:	fb1c fc04 	smulbb	ip, ip, r4
90022a80:	00db      	lsls	r3, r3, #3
90022a82:	b289      	uxth	r1, r1
90022a84:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90022a88:	b2db      	uxtb	r3, r3
90022a8a:	fb02 e200 	mla	r2, r2, r0, lr
90022a8e:	fb03 c300 	mla	r3, r3, r0, ip
90022a92:	b292      	uxth	r2, r2
90022a94:	fa1f fc83 	uxth.w	ip, r3
90022a98:	1c4b      	adds	r3, r1, #1
90022a9a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90022a9e:	f10c 0301 	add.w	r3, ip, #1
90022aa2:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90022aa6:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90022aaa:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90022aae:	430b      	orrs	r3, r1
90022ab0:	1c51      	adds	r1, r2, #1
90022ab2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90022ab6:	0952      	lsrs	r2, r2, #5
90022ab8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90022abc:	4313      	orrs	r3, r2
90022abe:	803b      	strh	r3, [r7, #0]
90022ac0:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90022ac2:	3702      	adds	r7, #2
90022ac4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90022ac6:	441a      	add	r2, r3
90022ac8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90022aca:	441d      	add	r5, r3
90022acc:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
90022ace:	9229      	str	r2, [sp, #164]	@ 0xa4
90022ad0:	3b01      	subs	r3, #1
90022ad2:	931a      	str	r3, [sp, #104]	@ 0x68
90022ad4:	e694      	b.n	90022800 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
90022ad6:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90022ad8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90022ada:	441c      	add	r4, r3
90022adc:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90022ade:	441d      	add	r5, r3
90022ae0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022ae2:	9429      	str	r4, [sp, #164]	@ 0xa4
90022ae4:	3b01      	subs	r3, #1
90022ae6:	9309      	str	r3, [sp, #36]	@ 0x24
90022ae8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022aea:	3302      	adds	r3, #2
90022aec:	930c      	str	r3, [sp, #48]	@ 0x30
90022aee:	e667      	b.n	900227c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90022af0:	d024      	beq.n	90022b3c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
90022af2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022af4:	982b      	ldr	r0, [sp, #172]	@ 0xac
90022af6:	3b01      	subs	r3, #1
90022af8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90022afa:	fb00 4003 	mla	r0, r0, r3, r4
90022afe:	1400      	asrs	r0, r0, #16
90022b00:	f53f ae7b 	bmi.w	900227fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022b04:	3901      	subs	r1, #1
90022b06:	4288      	cmp	r0, r1
90022b08:	f6bf ae77 	bge.w	900227fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022b0c:	992c      	ldr	r1, [sp, #176]	@ 0xb0
90022b0e:	fb01 5303 	mla	r3, r1, r3, r5
90022b12:	141b      	asrs	r3, r3, #16
90022b14:	f53f ae71 	bmi.w	900227fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022b18:	3a01      	subs	r2, #1
90022b1a:	4293      	cmp	r3, r2
90022b1c:	f6bf ae6d 	bge.w	900227fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90022b20:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90022b24:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
90022b28:	f1bb 0f00 	cmp.w	fp, #0
90022b2c:	dc70      	bgt.n	90022c10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
90022b2e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90022b30:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90022b34:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90022b36:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90022b3a:	930c      	str	r3, [sp, #48]	@ 0x30
90022b3c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90022b3e:	2b00      	cmp	r3, #0
90022b40:	f340 81be 	ble.w	90022ec0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
90022b44:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90022b48:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90022b4a:	ee30 0a04 	vadd.f32	s0, s0, s8
90022b4e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90022b52:	eef0 6a62 	vmov.f32	s13, s5
90022b56:	eec7 7a00 	vdiv.f32	s15, s14, s0
90022b5a:	ee31 1a05 	vadd.f32	s2, s2, s10
90022b5e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022b62:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
90022b66:	eef0 6a43 	vmov.f32	s13, s6
90022b6a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90022b6e:	ee16 5a90 	vmov	r5, s13
90022b72:	ee20 7aa7 	vmul.f32	s14, s1, s15
90022b76:	ee61 7a27 	vmul.f32	s15, s2, s15
90022b7a:	ee77 2a62 	vsub.f32	s5, s14, s5
90022b7e:	ee37 3ac3 	vsub.f32	s6, s15, s6
90022b82:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90022b86:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90022b8a:	ee12 2a90 	vmov	r2, s5
90022b8e:	eef0 2a47 	vmov.f32	s5, s14
90022b92:	fb92 f3f3 	sdiv	r3, r2, r3
90022b96:	ee13 2a10 	vmov	r2, s6
90022b9a:	932b      	str	r3, [sp, #172]	@ 0xac
90022b9c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90022b9e:	eeb0 3a67 	vmov.f32	s6, s15
90022ba2:	fb92 f3f3 	sdiv	r3, r2, r3
90022ba6:	932c      	str	r3, [sp, #176]	@ 0xb0
90022ba8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90022baa:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
90022bac:	3b01      	subs	r3, #1
90022bae:	9319      	str	r3, [sp, #100]	@ 0x64
90022bb0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90022bb2:	bf08      	it	eq
90022bb4:	4613      	moveq	r3, r2
90022bb6:	9309      	str	r3, [sp, #36]	@ 0x24
90022bb8:	e5f4      	b.n	900227a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
90022bba:	2900      	cmp	r1, #0
90022bbc:	f43f ae66 	beq.w	9002288c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90022bc0:	f818 0000 	ldrb.w	r0, [r8, r0]
90022bc4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
90022bc8:	900a      	str	r0, [sp, #40]	@ 0x28
90022bca:	0e00      	lsrs	r0, r0, #24
90022bcc:	9013      	str	r0, [sp, #76]	@ 0x4c
90022bce:	e65d      	b.n	9002288c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
90022bd0:	f113 0801 	adds.w	r8, r3, #1
90022bd4:	f53f af74 	bmi.w	90022ac0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90022bd8:	4540      	cmp	r0, r8
90022bda:	f6ff af71 	blt.w	90022ac0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90022bde:	f11c 0801 	adds.w	r8, ip, #1
90022be2:	f53f af6d 	bmi.w	90022ac0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90022be6:	45c6      	cmp	lr, r8
90022be8:	f6ff af6a 	blt.w	90022ac0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90022bec:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
90022bee:	b200      	sxth	r0, r0
90022bf0:	9302      	str	r3, [sp, #8]
90022bf2:	fa0f f38e 	sxth.w	r3, lr
90022bf6:	9000      	str	r0, [sp, #0]
90022bf8:	9301      	str	r3, [sp, #4]
90022bfa:	4633      	mov	r3, r6
90022bfc:	981d      	ldr	r0, [sp, #116]	@ 0x74
90022bfe:	e9cd 1405 	strd	r1, r4, [sp, #20]
90022c02:	e9cd c203 	strd	ip, r2, [sp, #12]
90022c06:	4639      	mov	r1, r7
90022c08:	9a12      	ldr	r2, [sp, #72]	@ 0x48
90022c0a:	f7ff fc63 	bl	900224d4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
90022c0e:	e757      	b.n	90022ac0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90022c10:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90022c12:	f3c5 3003 	ubfx	r0, r5, #12, #4
90022c16:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
90022c18:	f3c3 3203 	ubfx	r2, r3, #12, #4
90022c1c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
90022c1e:	1427      	asrs	r7, r4, #16
90022c20:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90022c22:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90022c26:	142b      	asrs	r3, r5, #16
90022c28:	fb01 7303 	mla	r3, r1, r3, r7
90022c2c:	18e7      	adds	r7, r4, r3
90022c2e:	5ce3      	ldrb	r3, [r4, r3]
90022c30:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90022c34:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90022c38:	2a00      	cmp	r2, #0
90022c3a:	f000 8137 	beq.w	90022eac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
90022c3e:	f897 e001 	ldrb.w	lr, [r7, #1]
90022c42:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
90022c46:	9410      	str	r4, [sp, #64]	@ 0x40
90022c48:	0e24      	lsrs	r4, r4, #24
90022c4a:	9417      	str	r4, [sp, #92]	@ 0x5c
90022c4c:	b170      	cbz	r0, 90022c6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90022c4e:	eb07 0e01 	add.w	lr, r7, r1
90022c52:	5c79      	ldrb	r1, [r7, r1]
90022c54:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90022c58:	910b      	str	r1, [sp, #44]	@ 0x2c
90022c5a:	0e09      	lsrs	r1, r1, #24
90022c5c:	9114      	str	r1, [sp, #80]	@ 0x50
90022c5e:	f89e 1001 	ldrb.w	r1, [lr, #1]
90022c62:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90022c66:	9111      	str	r1, [sp, #68]	@ 0x44
90022c68:	0e09      	lsrs	r1, r1, #24
90022c6a:	9118      	str	r1, [sp, #96]	@ 0x60
90022c6c:	b292      	uxth	r2, r2
90022c6e:	9917      	ldr	r1, [sp, #92]	@ 0x5c
90022c70:	b280      	uxth	r0, r0
90022c72:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90022c74:	fb02 f800 	mul.w	r8, r2, r0
90022c78:	0112      	lsls	r2, r2, #4
90022c7a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90022c7e:	eba2 0e08 	sub.w	lr, r2, r8
90022c82:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90022c86:	b280      	uxth	r0, r0
90022c88:	fa1f fe8e 	uxth.w	lr, lr
90022c8c:	1a12      	subs	r2, r2, r0
90022c8e:	fb0e f101 	mul.w	r1, lr, r1
90022c92:	b292      	uxth	r2, r2
90022c94:	fb02 110c 	mla	r1, r2, ip, r1
90022c98:	fb00 1104 	mla	r1, r0, r4, r1
90022c9c:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90022c9e:	fb08 1104 	mla	r1, r8, r4, r1
90022ca2:	f3c1 2107 	ubfx	r1, r1, #8, #8
90022ca6:	2900      	cmp	r1, #0
90022ca8:	f000 80f5 	beq.w	90022e96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
90022cac:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90022cb0:	d019      	beq.n	90022ce6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
90022cb2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90022cb6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90022cba:	fb0c fa0a 	mul.w	sl, ip, sl
90022cbe:	fb0c fc03 	mul.w	ip, ip, r3
90022cc2:	ea4f 231a 	mov.w	r3, sl, lsr #8
90022cc6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90022cca:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90022cce:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90022cd2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90022cd6:	4453      	add	r3, sl
90022cd8:	0a3f      	lsrs	r7, r7, #8
90022cda:	0a1b      	lsrs	r3, r3, #8
90022cdc:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90022ce0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90022ce4:	433b      	orrs	r3, r7
90022ce6:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90022ce8:	2cff      	cmp	r4, #255	@ 0xff
90022cea:	d020      	beq.n	90022d2e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
90022cec:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90022cee:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90022cf2:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90022cf4:	4367      	muls	r7, r4
90022cf6:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90022cf8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90022cfc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90022d00:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
90022d02:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90022d06:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90022d0a:	fb04 fa0a 	mul.w	sl, r4, sl
90022d0e:	44bc      	add	ip, r7
90022d10:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90022d14:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022d18:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90022d1c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90022d20:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022d24:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90022d28:	ea4c 040a 	orr.w	r4, ip, sl
90022d2c:	9410      	str	r4, [sp, #64]	@ 0x40
90022d2e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90022d30:	2cff      	cmp	r4, #255	@ 0xff
90022d32:	d020      	beq.n	90022d76 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
90022d34:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90022d36:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90022d3a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90022d3c:	4367      	muls	r7, r4
90022d3e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90022d40:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90022d44:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90022d48:	9c14      	ldr	r4, [sp, #80]	@ 0x50
90022d4a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90022d4e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90022d52:	fb04 fa0a 	mul.w	sl, r4, sl
90022d56:	44bc      	add	ip, r7
90022d58:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90022d5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022d60:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90022d64:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90022d68:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022d6c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90022d70:	ea4c 040a 	orr.w	r4, ip, sl
90022d74:	940b      	str	r4, [sp, #44]	@ 0x2c
90022d76:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90022d78:	2cff      	cmp	r4, #255	@ 0xff
90022d7a:	d020      	beq.n	90022dbe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
90022d7c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90022d7e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90022d82:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90022d84:	4367      	muls	r7, r4
90022d86:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90022d88:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90022d8c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90022d90:	9c18      	ldr	r4, [sp, #96]	@ 0x60
90022d92:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90022d96:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90022d9a:	fb04 fa0a 	mul.w	sl, r4, sl
90022d9e:	44bc      	add	ip, r7
90022da0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90022da4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022da8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90022dac:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90022db0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90022db4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90022db8:	ea4c 040a 	orr.w	r4, ip, sl
90022dbc:	9411      	str	r4, [sp, #68]	@ 0x44
90022dbe:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90022dc0:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90022dc4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90022dc8:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90022dcc:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90022dce:	fb0e f707 	mul.w	r7, lr, r7
90022dd2:	fb02 770c 	mla	r7, r2, ip, r7
90022dd6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90022dda:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90022ddc:	fb00 770c 	mla	r7, r0, ip, r7
90022de0:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90022de4:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90022de6:	fb08 770c 	mla	r7, r8, ip, r7
90022dea:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
90022dee:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90022df0:	fb0e fe0c 	mul.w	lr, lr, ip
90022df4:	0a3f      	lsrs	r7, r7, #8
90022df6:	fb02 e303 	mla	r3, r2, r3, lr
90022dfa:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90022dfc:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90022e00:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90022e04:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90022e06:	fb00 330a 	mla	r3, r0, sl, r3
90022e0a:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
90022e0e:	f8b9 0000 	ldrh.w	r0, [r9]
90022e12:	fb08 3c0c 	mla	ip, r8, ip, r3
90022e16:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90022e18:	1202      	asrs	r2, r0, #8
90022e1a:	434b      	muls	r3, r1
90022e1c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90022e20:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90022e24:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90022e28:	1c59      	adds	r1, r3, #1
90022e2a:	ea47 070c 	orr.w	r7, r7, ip
90022e2e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90022e32:	0c3b      	lsrs	r3, r7, #16
90022e34:	ea6f 2111 	mvn.w	r1, r1, lsr #8
90022e38:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90022e3c:	b2ff      	uxtb	r7, r7
90022e3e:	fb13 f304 	smulbb	r3, r3, r4
90022e42:	b2c9      	uxtb	r1, r1
90022e44:	fb1c fc04 	smulbb	ip, ip, r4
90022e48:	fb02 3201 	mla	r2, r2, r1, r3
90022e4c:	10c3      	asrs	r3, r0, #3
90022e4e:	fb17 f704 	smulbb	r7, r7, r4
90022e52:	00c0      	lsls	r0, r0, #3
90022e54:	b292      	uxth	r2, r2
90022e56:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90022e5a:	b2c0      	uxtb	r0, r0
90022e5c:	fb03 c301 	mla	r3, r3, r1, ip
90022e60:	f102 0c01 	add.w	ip, r2, #1
90022e64:	fb00 7001 	mla	r0, r0, r1, r7
90022e68:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
90022e6c:	b280      	uxth	r0, r0
90022e6e:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
90022e72:	b29b      	uxth	r3, r3
90022e74:	1c42      	adds	r2, r0, #1
90022e76:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90022e7a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
90022e7e:	ea42 020c 	orr.w	r2, r2, ip
90022e82:	f103 0c01 	add.w	ip, r3, #1
90022e86:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
90022e8a:	095b      	lsrs	r3, r3, #5
90022e8c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90022e90:	431a      	orrs	r2, r3
90022e92:	f8a9 2000 	strh.w	r2, [r9]
90022e96:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
90022e98:	f109 0902 	add.w	r9, r9, #2
90022e9c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90022e9e:	f10b 3bff 	add.w	fp, fp, #4294967295
90022ea2:	441a      	add	r2, r3
90022ea4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90022ea6:	9229      	str	r2, [sp, #164]	@ 0xa4
90022ea8:	441d      	add	r5, r3
90022eaa:	e63d      	b.n	90022b28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
90022eac:	2800      	cmp	r0, #0
90022eae:	f43f aedd 	beq.w	90022c6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90022eb2:	5c79      	ldrb	r1, [r7, r1]
90022eb4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90022eb8:	910b      	str	r1, [sp, #44]	@ 0x2c
90022eba:	0e09      	lsrs	r1, r1, #24
90022ebc:	9114      	str	r1, [sp, #80]	@ 0x50
90022ebe:	e6d5      	b.n	90022c6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
90022ec0:	b01f      	add	sp, #124	@ 0x7c
90022ec2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90022ec6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
90022ec6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90022eca:	b089      	sub	sp, #36	@ 0x24
90022ecc:	9101      	str	r1, [sp, #4]
90022ece:	9801      	ldr	r0, [sp, #4]
90022ed0:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
90022ed4:	8800      	ldrh	r0, [r0, #0]
90022ed6:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
90022eda:	1206      	asrs	r6, r0, #8
90022edc:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
90022ee0:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
90022ee4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
90022ee8:	9602      	str	r6, [sp, #8]
90022eea:	10c6      	asrs	r6, r0, #3
90022eec:	00c0      	lsls	r0, r0, #3
90022eee:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90022ef2:	b2c0      	uxtb	r0, r0
90022ef4:	9603      	str	r6, [sp, #12]
90022ef6:	9004      	str	r0, [sp, #16]
90022ef8:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
90022efc:	fb07 100c 	mla	r0, r7, ip, r1
90022f00:	2f00      	cmp	r7, #0
90022f02:	eb02 0e00 	add.w	lr, r2, r0
90022f06:	f2c0 810a 	blt.w	9002311e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90022f0a:	45b8      	cmp	r8, r7
90022f0c:	f340 8107 	ble.w	9002311e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
90022f10:	2900      	cmp	r1, #0
90022f12:	f2c0 8102 	blt.w	9002311a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90022f16:	458c      	cmp	ip, r1
90022f18:	f340 80ff 	ble.w	9002311a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
90022f1c:	5c12      	ldrb	r2, [r2, r0]
90022f1e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
90022f22:	1c4a      	adds	r2, r1, #1
90022f24:	f100 80fe 	bmi.w	90023124 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90022f28:	4594      	cmp	ip, r2
90022f2a:	f340 80fb 	ble.w	90023124 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
90022f2e:	2d00      	cmp	r5, #0
90022f30:	f000 80fa 	beq.w	90023128 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
90022f34:	f89e 2001 	ldrb.w	r2, [lr, #1]
90022f38:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
90022f3c:	3701      	adds	r7, #1
90022f3e:	f100 80f7 	bmi.w	90023130 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90022f42:	45b8      	cmp	r8, r7
90022f44:	f340 80f4 	ble.w	90023130 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
90022f48:	2c00      	cmp	r4, #0
90022f4a:	f000 80f4 	beq.w	90023136 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
90022f4e:	2900      	cmp	r1, #0
90022f50:	eb0e 020c 	add.w	r2, lr, ip
90022f54:	f2c0 80ea 	blt.w	9002312c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90022f58:	458c      	cmp	ip, r1
90022f5a:	f340 80e7 	ble.w	9002312c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
90022f5e:	f81e 700c 	ldrb.w	r7, [lr, ip]
90022f62:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
90022f66:	3101      	adds	r1, #1
90022f68:	f100 80e8 	bmi.w	9002313c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90022f6c:	458c      	cmp	ip, r1
90022f6e:	f340 80e5 	ble.w	9002313c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
90022f72:	2d00      	cmp	r5, #0
90022f74:	f000 80e4 	beq.w	90023140 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
90022f78:	7852      	ldrb	r2, [r2, #1]
90022f7a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
90022f7e:	0e0b      	lsrs	r3, r1, #24
90022f80:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
90022f84:	ea4f 6a10 	mov.w	sl, r0, lsr #24
90022f88:	9300      	str	r3, [sp, #0]
90022f8a:	b2a4      	uxth	r4, r4
90022f8c:	b2ab      	uxth	r3, r5
90022f8e:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
90022f92:	ea4f 6b16 	mov.w	fp, r6, lsr #24
90022f96:	fb03 f904 	mul.w	r9, r3, r4
90022f9a:	011b      	lsls	r3, r3, #4
90022f9c:	fb0a f505 	mul.w	r5, sl, r5
90022fa0:	ea4f 6817 	mov.w	r8, r7, lsr #24
90022fa4:	eba3 0e09 	sub.w	lr, r3, r9
90022fa8:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
90022fac:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
90022fb0:	0a28      	lsrs	r0, r5, #8
90022fb2:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
90022fb6:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90022fba:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90022fbe:	fb0a f303 	mul.w	r3, sl, r3
90022fc2:	fb08 f707 	mul.w	r7, r8, r7
90022fc6:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
90022fca:	4405      	add	r5, r0
90022fcc:	fb08 fc0c 	mul.w	ip, r8, ip
90022fd0:	b2a4      	uxth	r4, r4
90022fd2:	0a2d      	lsrs	r5, r5, #8
90022fd4:	fa1f fe8e 	uxth.w	lr, lr
90022fd8:	1b12      	subs	r2, r2, r4
90022fda:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
90022fde:	b292      	uxth	r2, r2
90022fe0:	9005      	str	r0, [sp, #20]
90022fe2:	f503 7080 	add.w	r0, r3, #256	@ 0x100
90022fe6:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90022fea:	ea4f 201c 	mov.w	r0, ip, lsr #8
90022fee:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90022ff2:	0a1b      	lsrs	r3, r3, #8
90022ff4:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90022ff8:	9306      	str	r3, [sp, #24]
90022ffa:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
90022ffe:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
90023002:	4460      	add	r0, ip
90023004:	fb0b f303 	mul.w	r3, fp, r3
90023008:	fb0b f606 	mul.w	r6, fp, r6
9002300c:	0a00      	lsrs	r0, r0, #8
9002300e:	0a1d      	lsrs	r5, r3, #8
90023010:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
90023014:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
90023018:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002301c:	441d      	add	r5, r3
9002301e:	f506 7380 	add.w	r3, r6, #256	@ 0x100
90023022:	eb03 2616 	add.w	r6, r3, r6, lsr #8
90023026:	f507 7380 	add.w	r3, r7, #256	@ 0x100
9002302a:	0a2d      	lsrs	r5, r5, #8
9002302c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
90023030:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
90023034:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90023038:	0a36      	lsrs	r6, r6, #8
9002303a:	0a1b      	lsrs	r3, r3, #8
9002303c:	fb05 f50e 	mul.w	r5, r5, lr
90023040:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
90023044:	9307      	str	r3, [sp, #28]
90023046:	0e0b      	lsrs	r3, r1, #24
90023048:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
9002304c:	fb0e f606 	mul.w	r6, lr, r6
90023050:	435f      	muls	r7, r3
90023052:	4359      	muls	r1, r3
90023054:	9b05      	ldr	r3, [sp, #20]
90023056:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002305a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002305e:	fb03 5502 	mla	r5, r3, r2, r5
90023062:	9b06      	ldr	r3, [sp, #24]
90023064:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023068:	fb0e fe0b 	mul.w	lr, lr, fp
9002306c:	44bc      	add	ip, r7
9002306e:	f501 7780 	add.w	r7, r1, #256	@ 0x100
90023072:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023076:	eb07 2111 	add.w	r1, r7, r1, lsr #8
9002307a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002307e:	0a09      	lsrs	r1, r1, #8
90023080:	fb0c 5509 	mla	r5, ip, r9, r5
90023084:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90023088:	fb00 5504 	mla	r5, r0, r4, r5
9002308c:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
90023090:	9b07      	ldr	r3, [sp, #28]
90023092:	fb02 6000 	mla	r0, r2, r0, r6
90023096:	0a2d      	lsrs	r5, r5, #8
90023098:	fb02 e20a 	mla	r2, r2, sl, lr
9002309c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900230a0:	fb09 0001 	mla	r0, r9, r1, r0
900230a4:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
900230a8:	fb04 0003 	mla	r0, r4, r3, r0
900230ac:	9b00      	ldr	r3, [sp, #0]
900230ae:	fb04 2408 	mla	r4, r4, r8, r2
900230b2:	9a04      	ldr	r2, [sp, #16]
900230b4:	0a00      	lsrs	r0, r0, #8
900230b6:	fb09 4903 	mla	r9, r9, r3, r4
900230ba:	9b02      	ldr	r3, [sp, #8]
900230bc:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
900230c0:	ea6f 2929 	mvn.w	r9, r9, asr #8
900230c4:	4305      	orrs	r5, r0
900230c6:	fa5f f989 	uxtb.w	r9, r9
900230ca:	fb03 f109 	mul.w	r1, r3, r9
900230ce:	9b03      	ldr	r3, [sp, #12]
900230d0:	fb03 f309 	mul.w	r3, r3, r9
900230d4:	fb02 f909 	mul.w	r9, r2, r9
900230d8:	1c4a      	adds	r2, r1, #1
900230da:	1c58      	adds	r0, r3, #1
900230dc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
900230e0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900230e4:	0c2a      	lsrs	r2, r5, #16
900230e6:	0a2b      	lsrs	r3, r5, #8
900230e8:	eb02 2211 	add.w	r2, r2, r1, lsr #8
900230ec:	eb03 2310 	add.w	r3, r3, r0, lsr #8
900230f0:	0212      	lsls	r2, r2, #8
900230f2:	00db      	lsls	r3, r3, #3
900230f4:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
900230f8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900230fc:	4313      	orrs	r3, r2
900230fe:	f109 0201 	add.w	r2, r9, #1
90023102:	eb02 2919 	add.w	r9, r2, r9, lsr #8
90023106:	eb05 2519 	add.w	r5, r5, r9, lsr #8
9002310a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
9002310e:	431d      	orrs	r5, r3
90023110:	9b01      	ldr	r3, [sp, #4]
90023112:	801d      	strh	r5, [r3, #0]
90023114:	b009      	add	sp, #36	@ 0x24
90023116:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002311a:	2000      	movs	r0, #0
9002311c:	e701      	b.n	90022f22 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
9002311e:	2600      	movs	r6, #0
90023120:	4630      	mov	r0, r6
90023122:	e70b      	b.n	90022f3c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90023124:	2600      	movs	r6, #0
90023126:	e709      	b.n	90022f3c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
90023128:	462e      	mov	r6, r5
9002312a:	e707      	b.n	90022f3c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
9002312c:	2700      	movs	r7, #0
9002312e:	e71a      	b.n	90022f66 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
90023130:	2100      	movs	r1, #0
90023132:	460f      	mov	r7, r1
90023134:	e723      	b.n	90022f7e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90023136:	4621      	mov	r1, r4
90023138:	4627      	mov	r7, r4
9002313a:	e720      	b.n	90022f7e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
9002313c:	2100      	movs	r1, #0
9002313e:	e71e      	b.n	90022f7e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
90023140:	4629      	mov	r1, r5
90023142:	e71c      	b.n	90022f7e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

90023144 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023144:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023148:	b09b      	sub	sp, #108	@ 0x6c
9002314a:	9218      	str	r2, [sp, #96]	@ 0x60
9002314c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
9002314e:	9019      	str	r0, [sp, #100]	@ 0x64
90023150:	9116      	str	r1, [sp, #88]	@ 0x58
90023152:	6850      	ldr	r0, [r2, #4]
90023154:	9307      	str	r3, [sp, #28]
90023156:	6812      	ldr	r2, [r2, #0]
90023158:	9d26      	ldr	r5, [sp, #152]	@ 0x98
9002315a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
9002315e:	fb00 1303 	mla	r3, r0, r3, r1
90023162:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023166:	930a      	str	r3, [sp, #40]	@ 0x28
90023168:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
9002316a:	681b      	ldr	r3, [r3, #0]
9002316c:	930f      	str	r3, [sp, #60]	@ 0x3c
9002316e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023170:	685e      	ldr	r6, [r3, #4]
90023172:	3604      	adds	r6, #4
90023174:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90023176:	2b00      	cmp	r3, #0
90023178:	dc03      	bgt.n	90023182 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
9002317a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002317c:	2b00      	cmp	r3, #0
9002317e:	f340 8373 	ble.w	90023868 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
90023182:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90023184:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023188:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002318c:	1e48      	subs	r0, r1, #1
9002318e:	1e57      	subs	r7, r2, #1
90023190:	9b07      	ldr	r3, [sp, #28]
90023192:	2b00      	cmp	r3, #0
90023194:	f340 818f 	ble.w	900234b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
90023198:	9c25      	ldr	r4, [sp, #148]	@ 0x94
9002319a:	142b      	asrs	r3, r5, #16
9002319c:	ea5f 4c24 	movs.w	ip, r4, asr #16
900231a0:	d406      	bmi.n	900231b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900231a2:	4584      	cmp	ip, r0
900231a4:	da04      	bge.n	900231b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900231a6:	2b00      	cmp	r3, #0
900231a8:	db02      	blt.n	900231b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900231aa:	42bb      	cmp	r3, r7
900231ac:	f2c0 8184 	blt.w	900234b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
900231b0:	f11c 0c01 	adds.w	ip, ip, #1
900231b4:	f100 8172 	bmi.w	9002349c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900231b8:	4561      	cmp	r1, ip
900231ba:	f2c0 816f 	blt.w	9002349c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900231be:	3301      	adds	r3, #1
900231c0:	f100 816c 	bmi.w	9002349c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900231c4:	429a      	cmp	r2, r3
900231c6:	f2c0 8169 	blt.w	9002349c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
900231ca:	9b07      	ldr	r3, [sp, #28]
900231cc:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
900231ce:	9317      	str	r3, [sp, #92]	@ 0x5c
900231d0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900231d2:	2b00      	cmp	r3, #0
900231d4:	f340 818e 	ble.w	900234f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
900231d8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900231da:	ea4f 4c25 	mov.w	ip, r5, asr #16
900231de:	f3c5 3003 	ubfx	r0, r5, #12, #4
900231e2:	f3c3 3203 	ubfx	r2, r3, #12, #4
900231e6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900231e8:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
900231ec:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900231ee:	141b      	asrs	r3, r3, #16
900231f0:	f100 81d1 	bmi.w	90023596 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900231f4:	f101 38ff 	add.w	r8, r1, #4294967295
900231f8:	4543      	cmp	r3, r8
900231fa:	f280 81cc 	bge.w	90023596 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900231fe:	f1bc 0f00 	cmp.w	ip, #0
90023202:	f2c0 81c8 	blt.w	90023596 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023206:	f10e 38ff 	add.w	r8, lr, #4294967295
9002320a:	45c4      	cmp	ip, r8
9002320c:	f280 81c3 	bge.w	90023596 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90023210:	b209      	sxth	r1, r1
90023212:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
90023214:	fb0c 3301 	mla	r3, ip, r1, r3
90023218:	eb04 0803 	add.w	r8, r4, r3
9002321c:	5ce3      	ldrb	r3, [r4, r3]
9002321e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
90023222:	ea4f 6e13 	mov.w	lr, r3, lsr #24
90023226:	2a00      	cmp	r2, #0
90023228:	f000 81aa 	beq.w	90023580 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
9002322c:	f898 c001 	ldrb.w	ip, [r8, #1]
90023230:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
90023234:	940b      	str	r4, [sp, #44]	@ 0x2c
90023236:	0e24      	lsrs	r4, r4, #24
90023238:	9412      	str	r4, [sp, #72]	@ 0x48
9002323a:	b178      	cbz	r0, 9002325c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
9002323c:	eb08 0c01 	add.w	ip, r8, r1
90023240:	f818 1001 	ldrb.w	r1, [r8, r1]
90023244:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023248:	9108      	str	r1, [sp, #32]
9002324a:	0e09      	lsrs	r1, r1, #24
9002324c:	9110      	str	r1, [sp, #64]	@ 0x40
9002324e:	f89c 1001 	ldrb.w	r1, [ip, #1]
90023252:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023256:	910c      	str	r1, [sp, #48]	@ 0x30
90023258:	0e09      	lsrs	r1, r1, #24
9002325a:	9113      	str	r1, [sp, #76]	@ 0x4c
9002325c:	b292      	uxth	r2, r2
9002325e:	9912      	ldr	r1, [sp, #72]	@ 0x48
90023260:	b280      	uxth	r0, r0
90023262:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023264:	fb02 f900 	mul.w	r9, r2, r0
90023268:	0112      	lsls	r2, r2, #4
9002326a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9002326e:	eba2 0809 	sub.w	r8, r2, r9
90023272:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90023276:	b280      	uxth	r0, r0
90023278:	fa1f f888 	uxth.w	r8, r8
9002327c:	1a12      	subs	r2, r2, r0
9002327e:	fb08 f101 	mul.w	r1, r8, r1
90023282:	b292      	uxth	r2, r2
90023284:	fb02 110e 	mla	r1, r2, lr, r1
90023288:	fb00 1104 	mla	r1, r0, r4, r1
9002328c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002328e:	fb09 1104 	mla	r1, r9, r4, r1
90023292:	f3c1 2107 	ubfx	r1, r1, #8, #8
90023296:	2900      	cmp	r1, #0
90023298:	f000 80f5 	beq.w	90023486 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002329c:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
900232a0:	d01b      	beq.n	900232da <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
900232a2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
900232a6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900232aa:	fb0e fa0a 	mul.w	sl, lr, sl
900232ae:	fb0e fe03 	mul.w	lr, lr, r3
900232b2:	ea4f 231a 	mov.w	r3, sl, lsr #8
900232b6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900232ba:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
900232be:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900232c2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900232c6:	4453      	add	r3, sl
900232c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900232cc:	0a1b      	lsrs	r3, r3, #8
900232ce:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900232d2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900232d6:	ea43 030c 	orr.w	r3, r3, ip
900232da:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900232dc:	2cff      	cmp	r4, #255	@ 0xff
900232de:	d021      	beq.n	90023324 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
900232e0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900232e2:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
900232e6:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900232e8:	fb04 fb0b 	mul.w	fp, r4, fp
900232ec:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900232ee:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900232f2:	9c12      	ldr	r4, [sp, #72]	@ 0x48
900232f4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900232f8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900232fc:	fb04 fa0a 	mul.w	sl, r4, sl
90023300:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023304:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90023308:	44de      	add	lr, fp
9002330a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002330e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023312:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023316:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002331a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002331e:	ea4e 040a 	orr.w	r4, lr, sl
90023322:	940b      	str	r4, [sp, #44]	@ 0x2c
90023324:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023326:	2cff      	cmp	r4, #255	@ 0xff
90023328:	d021      	beq.n	9002336e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
9002332a:	9c08      	ldr	r4, [sp, #32]
9002332c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
90023330:	9c10      	ldr	r4, [sp, #64]	@ 0x40
90023332:	fb04 fb0b 	mul.w	fp, r4, fp
90023336:	9c08      	ldr	r4, [sp, #32]
90023338:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
9002333c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
9002333e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90023342:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90023346:	fb04 fa0a 	mul.w	sl, r4, sl
9002334a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002334e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90023352:	44de      	add	lr, fp
90023354:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90023358:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002335c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023360:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023364:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023368:	ea4e 040a 	orr.w	r4, lr, sl
9002336c:	9408      	str	r4, [sp, #32]
9002336e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023370:	2cff      	cmp	r4, #255	@ 0xff
90023372:	d021      	beq.n	900233b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
90023374:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90023376:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
9002337a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
9002337c:	fb04 fb0b 	mul.w	fp, r4, fp
90023380:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90023382:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023386:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
90023388:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
9002338c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90023390:	fb04 fa0a 	mul.w	sl, r4, sl
90023394:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90023398:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002339c:	44de      	add	lr, fp
9002339e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
900233a2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900233a6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900233aa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900233ae:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900233b2:	ea4e 040a 	orr.w	r4, lr, sl
900233b6:	940c      	str	r4, [sp, #48]	@ 0x30
900233b8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900233ba:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
900233be:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900233c2:	43c9      	mvns	r1, r1
900233c4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900233c8:	9c08      	ldr	r4, [sp, #32]
900233ca:	fb08 fc0c 	mul.w	ip, r8, ip
900233ce:	fb02 cc0e 	mla	ip, r2, lr, ip
900233d2:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900233d6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
900233d8:	fb00 cc0e 	mla	ip, r0, lr, ip
900233dc:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
900233e0:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
900233e2:	fb09 cc0e 	mla	ip, r9, lr, ip
900233e6:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
900233ea:	fb08 f80e 	mul.w	r8, r8, lr
900233ee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900233f2:	fa5f fe81 	uxtb.w	lr, r1
900233f6:	fb02 8303 	mla	r3, r2, r3, r8
900233fa:	9a08      	ldr	r2, [sp, #32]
900233fc:	f8b7 8000 	ldrh.w	r8, [r7]
90023400:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023404:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90023408:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9002340a:	ea4f 01c8 	mov.w	r1, r8, lsl #3
9002340e:	fb00 330a 	mla	r3, r0, sl, r3
90023412:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
90023416:	ea4f 2228 	mov.w	r2, r8, asr #8
9002341a:	fb09 3900 	mla	r9, r9, r0, r3
9002341e:	ea4f 00e8 	mov.w	r0, r8, asr #3
90023422:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90023426:	b2c9      	uxtb	r1, r1
90023428:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002342c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90023430:	fb02 f20e 	mul.w	r2, r2, lr
90023434:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90023438:	fb00 f00e 	mul.w	r0, r0, lr
9002343c:	1c53      	adds	r3, r2, #1
9002343e:	fb01 f10e 	mul.w	r1, r1, lr
90023442:	ea4c 0c09 	orr.w	ip, ip, r9
90023446:	eb03 2212 	add.w	r2, r3, r2, lsr #8
9002344a:	ea4f 431c 	mov.w	r3, ip, lsr #16
9002344e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90023452:	4a60      	ldr	r2, [pc, #384]	@ (900235d4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
90023454:	b2db      	uxtb	r3, r3
90023456:	ea02 2203 	and.w	r2, r2, r3, lsl #8
9002345a:	1c43      	adds	r3, r0, #1
9002345c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90023460:	ea4f 231c 	mov.w	r3, ip, lsr #8
90023464:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90023468:	00db      	lsls	r3, r3, #3
9002346a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002346e:	4313      	orrs	r3, r2
90023470:	1c4a      	adds	r2, r1, #1
90023472:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023476:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
9002347a:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
9002347e:	ea4c 0c03 	orr.w	ip, ip, r3
90023482:	f8a7 c000 	strh.w	ip, [r7]
90023486:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90023488:	3702      	adds	r7, #2
9002348a:	9a25      	ldr	r2, [sp, #148]	@ 0x94
9002348c:	441a      	add	r2, r3
9002348e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023490:	441d      	add	r5, r3
90023492:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90023494:	9225      	str	r2, [sp, #148]	@ 0x94
90023496:	3b01      	subs	r3, #1
90023498:	9317      	str	r3, [sp, #92]	@ 0x5c
9002349a:	e699      	b.n	900231d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
9002349c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
9002349e:	9c25      	ldr	r4, [sp, #148]	@ 0x94
900234a0:	441c      	add	r4, r3
900234a2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
900234a4:	441d      	add	r5, r3
900234a6:	9b07      	ldr	r3, [sp, #28]
900234a8:	9425      	str	r4, [sp, #148]	@ 0x94
900234aa:	3b01      	subs	r3, #1
900234ac:	9307      	str	r3, [sp, #28]
900234ae:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900234b0:	3302      	adds	r3, #2
900234b2:	930a      	str	r3, [sp, #40]	@ 0x28
900234b4:	e66c      	b.n	90023190 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
900234b6:	d024      	beq.n	90023502 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
900234b8:	9b07      	ldr	r3, [sp, #28]
900234ba:	9827      	ldr	r0, [sp, #156]	@ 0x9c
900234bc:	3b01      	subs	r3, #1
900234be:	9c25      	ldr	r4, [sp, #148]	@ 0x94
900234c0:	fb00 4003 	mla	r0, r0, r3, r4
900234c4:	1400      	asrs	r0, r0, #16
900234c6:	f53f ae80 	bmi.w	900231ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900234ca:	3901      	subs	r1, #1
900234cc:	4288      	cmp	r0, r1
900234ce:	f6bf ae7c 	bge.w	900231ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900234d2:	9928      	ldr	r1, [sp, #160]	@ 0xa0
900234d4:	fb01 5303 	mla	r3, r1, r3, r5
900234d8:	141b      	asrs	r3, r3, #16
900234da:	f53f ae76 	bmi.w	900231ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900234de:	3a01      	subs	r2, #1
900234e0:	4293      	cmp	r3, r2
900234e2:	f6bf ae72 	bge.w	900231ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
900234e6:	f8dd b01c 	ldr.w	fp, [sp, #28]
900234ea:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
900234ee:	f1bb 0f00 	cmp.w	fp, #0
900234f2:	dc71      	bgt.n	900235d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
900234f4:	9b07      	ldr	r3, [sp, #28]
900234f6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900234fa:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900234fc:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90023500:	930a      	str	r3, [sp, #40]	@ 0x28
90023502:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90023504:	2b00      	cmp	r3, #0
90023506:	f340 81af 	ble.w	90023868 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
9002350a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
9002350e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023510:	ee30 0a04 	vadd.f32	s0, s0, s8
90023514:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023518:	eef0 6a62 	vmov.f32	s13, s5
9002351c:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023520:	ee31 1a05 	vadd.f32	s2, s2, s10
90023524:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023528:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
9002352c:	eef0 6a43 	vmov.f32	s13, s6
90023530:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023534:	ee16 5a90 	vmov	r5, s13
90023538:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002353c:	ee61 7a27 	vmul.f32	s15, s2, s15
90023540:	ee77 2a62 	vsub.f32	s5, s14, s5
90023544:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023548:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002354c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023550:	ee12 2a90 	vmov	r2, s5
90023554:	eef0 2a47 	vmov.f32	s5, s14
90023558:	fb92 f3f3 	sdiv	r3, r2, r3
9002355c:	ee13 2a10 	vmov	r2, s6
90023560:	9327      	str	r3, [sp, #156]	@ 0x9c
90023562:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023564:	eeb0 3a67 	vmov.f32	s6, s15
90023568:	fb92 f3f3 	sdiv	r3, r2, r3
9002356c:	9328      	str	r3, [sp, #160]	@ 0xa0
9002356e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90023570:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90023572:	3b01      	subs	r3, #1
90023574:	9316      	str	r3, [sp, #88]	@ 0x58
90023576:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023578:	bf08      	it	eq
9002357a:	4613      	moveq	r3, r2
9002357c:	9307      	str	r3, [sp, #28]
9002357e:	e5f9      	b.n	90023174 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
90023580:	2800      	cmp	r0, #0
90023582:	f43f ae6b 	beq.w	9002325c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90023586:	f818 1001 	ldrb.w	r1, [r8, r1]
9002358a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002358e:	9108      	str	r1, [sp, #32]
90023590:	0e09      	lsrs	r1, r1, #24
90023592:	9110      	str	r1, [sp, #64]	@ 0x40
90023594:	e662      	b.n	9002325c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
90023596:	f113 0801 	adds.w	r8, r3, #1
9002359a:	f53f af74 	bmi.w	90023486 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
9002359e:	4541      	cmp	r1, r8
900235a0:	f6ff af71 	blt.w	90023486 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900235a4:	f11c 0801 	adds.w	r8, ip, #1
900235a8:	f53f af6d 	bmi.w	90023486 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900235ac:	45c6      	cmp	lr, r8
900235ae:	f6ff af6a 	blt.w	90023486 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900235b2:	b209      	sxth	r1, r1
900235b4:	e9cd 3c02 	strd	r3, ip, [sp, #8]
900235b8:	fa0f f38e 	sxth.w	r3, lr
900235bc:	9100      	str	r1, [sp, #0]
900235be:	4639      	mov	r1, r7
900235c0:	9301      	str	r3, [sp, #4]
900235c2:	4633      	mov	r3, r6
900235c4:	e9cd 2004 	strd	r2, r0, [sp, #16]
900235c8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900235ca:	9819      	ldr	r0, [sp, #100]	@ 0x64
900235cc:	f7ff fc7b 	bl	90022ec6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
900235d0:	e759      	b.n	90023486 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
900235d2:	bf00      	nop
900235d4:	fffff800 	.word	0xfffff800
900235d8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
900235da:	f3c5 3003 	ubfx	r0, r5, #12, #4
900235de:	9c25      	ldr	r4, [sp, #148]	@ 0x94
900235e0:	f3c3 3203 	ubfx	r2, r3, #12, #4
900235e4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900235e6:	1427      	asrs	r7, r4, #16
900235e8:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900235ea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900235ee:	142b      	asrs	r3, r5, #16
900235f0:	fb01 7303 	mla	r3, r1, r3, r7
900235f4:	18e7      	adds	r7, r4, r3
900235f6:	5ce3      	ldrb	r3, [r4, r3]
900235f8:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
900235fc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90023600:	2a00      	cmp	r2, #0
90023602:	f000 8127 	beq.w	90023854 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
90023606:	f897 e001 	ldrb.w	lr, [r7, #1]
9002360a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
9002360e:	940d      	str	r4, [sp, #52]	@ 0x34
90023610:	0e24      	lsrs	r4, r4, #24
90023612:	9414      	str	r4, [sp, #80]	@ 0x50
90023614:	b170      	cbz	r0, 90023634 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90023616:	eb07 0e01 	add.w	lr, r7, r1
9002361a:	5c79      	ldrb	r1, [r7, r1]
9002361c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023620:	9109      	str	r1, [sp, #36]	@ 0x24
90023622:	0e09      	lsrs	r1, r1, #24
90023624:	9111      	str	r1, [sp, #68]	@ 0x44
90023626:	f89e 1001 	ldrb.w	r1, [lr, #1]
9002362a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
9002362e:	910e      	str	r1, [sp, #56]	@ 0x38
90023630:	0e09      	lsrs	r1, r1, #24
90023632:	9115      	str	r1, [sp, #84]	@ 0x54
90023634:	b292      	uxth	r2, r2
90023636:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90023638:	b280      	uxth	r0, r0
9002363a:	fb02 f800 	mul.w	r8, r2, r0
9002363e:	0112      	lsls	r2, r2, #4
90023640:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90023644:	eba2 0e08 	sub.w	lr, r2, r8
90023648:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
9002364c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
9002364e:	b280      	uxth	r0, r0
90023650:	fa1f fe8e 	uxth.w	lr, lr
90023654:	1a09      	subs	r1, r1, r0
90023656:	fb0e f202 	mul.w	r2, lr, r2
9002365a:	b289      	uxth	r1, r1
9002365c:	fb01 220c 	mla	r2, r1, ip, r2
90023660:	fb00 2204 	mla	r2, r0, r4, r2
90023664:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90023666:	fb08 2204 	mla	r2, r8, r4, r2
9002366a:	f3c2 2207 	ubfx	r2, r2, #8, #8
9002366e:	2a00      	cmp	r2, #0
90023670:	f000 80e5 	beq.w	9002383e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
90023674:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90023678:	d019      	beq.n	900236ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
9002367a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
9002367e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023682:	fb0c fa0a 	mul.w	sl, ip, sl
90023686:	fb0c fc03 	mul.w	ip, ip, r3
9002368a:	ea4f 231a 	mov.w	r3, sl, lsr #8
9002368e:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90023692:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90023696:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
9002369a:	eb07 271c 	add.w	r7, r7, ip, lsr #8
9002369e:	4453      	add	r3, sl
900236a0:	0a3f      	lsrs	r7, r7, #8
900236a2:	0a1b      	lsrs	r3, r3, #8
900236a4:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900236a8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900236ac:	433b      	orrs	r3, r7
900236ae:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900236b0:	2cff      	cmp	r4, #255	@ 0xff
900236b2:	d020      	beq.n	900236f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
900236b4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900236b6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
900236ba:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900236bc:	4367      	muls	r7, r4
900236be:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900236c0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900236c4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
900236c8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
900236ca:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900236ce:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900236d2:	fb04 fa0a 	mul.w	sl, r4, sl
900236d6:	44bc      	add	ip, r7
900236d8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900236dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900236e0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900236e4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900236e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900236ec:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900236f0:	ea4c 040a 	orr.w	r4, ip, sl
900236f4:	940d      	str	r4, [sp, #52]	@ 0x34
900236f6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
900236f8:	2cff      	cmp	r4, #255	@ 0xff
900236fa:	d020      	beq.n	9002373e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
900236fc:	9c09      	ldr	r4, [sp, #36]	@ 0x24
900236fe:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023702:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90023704:	4367      	muls	r7, r4
90023706:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90023708:	ea4f 2c17 	mov.w	ip, r7, lsr #8
9002370c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023710:	9c11      	ldr	r4, [sp, #68]	@ 0x44
90023712:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90023716:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002371a:	fb04 fa0a 	mul.w	sl, r4, sl
9002371e:	44bc      	add	ip, r7
90023720:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90023724:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023728:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
9002372c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023730:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90023734:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023738:	ea4c 040a 	orr.w	r4, ip, sl
9002373c:	9409      	str	r4, [sp, #36]	@ 0x24
9002373e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
90023740:	2cff      	cmp	r4, #255	@ 0xff
90023742:	d020      	beq.n	90023786 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
90023744:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023746:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
9002374a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9002374c:	4367      	muls	r7, r4
9002374e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023750:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90023754:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
90023758:	9c15      	ldr	r4, [sp, #84]	@ 0x54
9002375a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002375e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023762:	fb04 fa0a 	mul.w	sl, r4, sl
90023766:	44bc      	add	ip, r7
90023768:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
9002376c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90023770:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90023774:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90023778:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002377c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90023780:	ea4c 040a 	orr.w	r4, ip, sl
90023784:	940e      	str	r4, [sp, #56]	@ 0x38
90023786:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90023788:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
9002378c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90023790:	43d2      	mvns	r2, r2
90023792:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
90023796:	9c09      	ldr	r4, [sp, #36]	@ 0x24
90023798:	b2d2      	uxtb	r2, r2
9002379a:	fb0e f707 	mul.w	r7, lr, r7
9002379e:	fb01 770c 	mla	r7, r1, ip, r7
900237a2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900237a6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
900237a8:	fb00 770c 	mla	r7, r0, ip, r7
900237ac:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
900237b0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
900237b2:	fb08 770c 	mla	r7, r8, ip, r7
900237b6:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
900237ba:	fb0e fe0c 	mul.w	lr, lr, ip
900237be:	0a3f      	lsrs	r7, r7, #8
900237c0:	fb01 e303 	mla	r3, r1, r3, lr
900237c4:	9909      	ldr	r1, [sp, #36]	@ 0x24
900237c6:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
900237ca:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
900237ce:	990e      	ldr	r1, [sp, #56]	@ 0x38
900237d0:	fb00 330a 	mla	r3, r0, sl, r3
900237d4:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
900237d8:	fb08 3c0c 	mla	ip, r8, ip, r3
900237dc:	f8b9 3000 	ldrh.w	r3, [r9]
900237e0:	1218      	asrs	r0, r3, #8
900237e2:	10d9      	asrs	r1, r3, #3
900237e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900237e8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900237ec:	00db      	lsls	r3, r3, #3
900237ee:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900237f2:	4350      	muls	r0, r2
900237f4:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900237f8:	b2db      	uxtb	r3, r3
900237fa:	4351      	muls	r1, r2
900237fc:	ea47 070c 	orr.w	r7, r7, ip
90023800:	4353      	muls	r3, r2
90023802:	1c42      	adds	r2, r0, #1
90023804:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90023808:	0c3a      	lsrs	r2, r7, #16
9002380a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
9002380e:	4a18      	ldr	r2, [pc, #96]	@ (90023870 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
90023810:	b2c0      	uxtb	r0, r0
90023812:	ea02 2000 	and.w	r0, r2, r0, lsl #8
90023816:	1c4a      	adds	r2, r1, #1
90023818:	eb02 2111 	add.w	r1, r2, r1, lsr #8
9002381c:	0a3a      	lsrs	r2, r7, #8
9002381e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023822:	00c9      	lsls	r1, r1, #3
90023824:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90023828:	4301      	orrs	r1, r0
9002382a:	1c58      	adds	r0, r3, #1
9002382c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90023830:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90023834:	f3c7 00c4 	ubfx	r0, r7, #3, #5
90023838:	4308      	orrs	r0, r1
9002383a:	f8a9 0000 	strh.w	r0, [r9]
9002383e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90023840:	f109 0902 	add.w	r9, r9, #2
90023844:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90023846:	f10b 3bff 	add.w	fp, fp, #4294967295
9002384a:	441a      	add	r2, r3
9002384c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
9002384e:	9225      	str	r2, [sp, #148]	@ 0x94
90023850:	441d      	add	r5, r3
90023852:	e64c      	b.n	900234ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90023854:	2800      	cmp	r0, #0
90023856:	f43f aeed 	beq.w	90023634 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
9002385a:	5c79      	ldrb	r1, [r7, r1]
9002385c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
90023860:	9109      	str	r1, [sp, #36]	@ 0x24
90023862:	0e09      	lsrs	r1, r1, #24
90023864:	9111      	str	r1, [sp, #68]	@ 0x44
90023866:	e6e5      	b.n	90023634 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
90023868:	b01b      	add	sp, #108	@ 0x6c
9002386a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002386e:	bf00      	nop
90023870:	fffff800 	.word	0xfffff800

90023874 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
90023874:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023878:	b085      	sub	sp, #20
9002387a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
9002387e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
90023882:	2800      	cmp	r0, #0
90023884:	9103      	str	r1, [sp, #12]
90023886:	fb00 7406 	mla	r4, r0, r6, r7
9002388a:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
9002388e:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
90023892:	eb02 0544 	add.w	r5, r2, r4, lsl #1
90023896:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
9002389a:	eb03 0904 	add.w	r9, r3, r4
9002389e:	9501      	str	r5, [sp, #4]
900238a0:	f2c0 8150 	blt.w	90023b44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
900238a4:	4583      	cmp	fp, r0
900238a6:	f340 814d 	ble.w	90023b44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
900238aa:	2f00      	cmp	r7, #0
900238ac:	f2c0 8146 	blt.w	90023b3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
900238b0:	42be      	cmp	r6, r7
900238b2:	f340 8143 	ble.w	90023b3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
900238b6:	f813 c004 	ldrb.w	ip, [r3, r4]
900238ba:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
900238be:	f64f 041f 	movw	r4, #63519	@ 0xf81f
900238c2:	ea4f 02ec 	mov.w	r2, ip, asr #3
900238c6:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
900238ca:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900238ce:	4355      	muls	r5, r2
900238d0:	fb0c f203 	mul.w	r2, ip, r3
900238d4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
900238d8:	f605 0501 	addw	r5, r5, #2049	@ 0x801
900238dc:	441d      	add	r5, r3
900238de:	f102 0320 	add.w	r3, r2, #32
900238e2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900238e6:	ea04 1455 	and.w	r4, r4, r5, lsr #5
900238ea:	0a1b      	lsrs	r3, r3, #8
900238ec:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900238f0:	431c      	orrs	r4, r3
900238f2:	1c7b      	adds	r3, r7, #1
900238f4:	f100 812b 	bmi.w	90023b4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
900238f8:	429e      	cmp	r6, r3
900238fa:	f340 8128 	ble.w	90023b4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
900238fe:	2900      	cmp	r1, #0
90023900:	f000 8128 	beq.w	90023b54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
90023904:	9a01      	ldr	r2, [sp, #4]
90023906:	f899 3001 	ldrb.w	r3, [r9, #1]
9002390a:	8855      	ldrh	r5, [r2, #2]
9002390c:	ea4f 08e3 	mov.w	r8, r3, asr #3
90023910:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
90023914:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90023918:	fb08 f802 	mul.w	r8, r8, r2
9002391c:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90023920:	435d      	muls	r5, r3
90023922:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
90023926:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002392a:	44d0      	add	r8, sl
9002392c:	f105 0a20 	add.w	sl, r5, #32
90023930:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90023934:	ea02 1258 	and.w	r2, r2, r8, lsr #5
90023938:	0a2d      	lsrs	r5, r5, #8
9002393a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002393e:	432a      	orrs	r2, r5
90023940:	3001      	adds	r0, #1
90023942:	f100 810d 	bmi.w	90023b60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
90023946:	4583      	cmp	fp, r0
90023948:	f340 810a 	ble.w	90023b60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
9002394c:	f1be 0f00 	cmp.w	lr, #0
90023950:	f000 810b 	beq.w	90023b6a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
90023954:	2f00      	cmp	r7, #0
90023956:	f2c0 8100 	blt.w	90023b5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
9002395a:	42be      	cmp	r6, r7
9002395c:	f340 80fd 	ble.w	90023b5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
90023960:	9801      	ldr	r0, [sp, #4]
90023962:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
90023966:	f819 5006 	ldrb.w	r5, [r9, r6]
9002396a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
9002396e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90023972:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
90023976:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9002397a:	fb0a fa00 	mul.w	sl, sl, r0
9002397e:	fb05 f808 	mul.w	r8, r5, r8
90023982:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
90023986:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
9002398a:	4482      	add	sl, r0
9002398c:	f108 0020 	add.w	r0, r8, #32
90023990:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90023994:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
90023998:	0a00      	lsrs	r0, r0, #8
9002399a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002399e:	ea4b 0b00 	orr.w	fp, fp, r0
900239a2:	3701      	adds	r7, #1
900239a4:	f100 80e6 	bmi.w	90023b74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
900239a8:	42be      	cmp	r6, r7
900239aa:	f340 80e3 	ble.w	90023b74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
900239ae:	2900      	cmp	r1, #0
900239b0:	f000 80e3 	beq.w	90023b7a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
900239b4:	3601      	adds	r6, #1
900239b6:	9801      	ldr	r0, [sp, #4]
900239b8:	f819 7006 	ldrb.w	r7, [r9, r6]
900239bc:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
900239c0:	ea4f 09e7 	mov.w	r9, r7, asr #3
900239c4:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
900239c8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900239cc:	fb09 f906 	mul.w	r9, r9, r6
900239d0:	fb07 f800 	mul.w	r8, r7, r0
900239d4:	f64f 001f 	movw	r0, #63519	@ 0xf81f
900239d8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
900239dc:	f609 0901 	addw	r9, r9, #2049	@ 0x801
900239e0:	44d1      	add	r9, sl
900239e2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
900239e6:	f108 0020 	add.w	r0, r8, #32
900239ea:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900239ee:	0a00      	lsrs	r0, r0, #8
900239f0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900239f4:	4330      	orrs	r0, r6
900239f6:	b28e      	uxth	r6, r1
900239f8:	fa1f f98e 	uxth.w	r9, lr
900239fc:	ea4f 4a04 	mov.w	sl, r4, lsl #16
90023a00:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
90023a04:	fb06 f809 	mul.w	r8, r6, r9
90023a08:	0136      	lsls	r6, r6, #4
90023a0a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90023a0e:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90023a12:	9601      	str	r6, [sp, #4]
90023a14:	ea4a 0404 	orr.w	r4, sl, r4
90023a18:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90023a1c:	fa1f f689 	uxth.w	r6, r9
90023a20:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023a24:	fb11 f90e 	smulbb	r9, r1, lr
90023a28:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90023a2c:	9602      	str	r6, [sp, #8]
90023a2e:	4626      	mov	r6, r4
90023a30:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90023a34:	f1ce 0410 	rsb	r4, lr, #16
90023a38:	ea4a 0202 	orr.w	r2, sl, r2
90023a3c:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90023a40:	1a64      	subs	r4, r4, r1
90023a42:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
90023a46:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90023a4a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90023a4e:	434a      	muls	r2, r1
90023a50:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90023a54:	ea4a 0000 	orr.w	r0, sl, r0
90023a58:	9903      	ldr	r1, [sp, #12]
90023a5a:	fb04 2406 	mla	r4, r4, r6, r2
90023a5e:	9e02      	ldr	r6, [sp, #8]
90023a60:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90023a64:	fb09 4200 	mla	r2, r9, r0, r4
90023a68:	ea4f 440b 	mov.w	r4, fp, lsl #16
90023a6c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90023a70:	8808      	ldrh	r0, [r1, #0]
90023a72:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90023a76:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
90023a7a:	ea44 0b0b 	orr.w	fp, r4, fp
90023a7e:	9c01      	ldr	r4, [sp, #4]
90023a80:	b289      	uxth	r1, r1
90023a82:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
90023a86:	fb0e 2e0b 	mla	lr, lr, fp, r2
90023a8a:	1ba4      	subs	r4, r4, r6
90023a8c:	9e01      	ldr	r6, [sp, #4]
90023a8e:	ea4f 525e 	mov.w	r2, lr, lsr #21
90023a92:	eba6 0608 	sub.w	r6, r6, r8
90023a96:	b2a4      	uxth	r4, r4
90023a98:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90023a9c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023aa0:	b2b6      	uxth	r6, r6
90023aa2:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90023aa6:	4373      	muls	r3, r6
90023aa8:	ea42 0e0e 	orr.w	lr, r2, lr
90023aac:	fb0c 3304 	mla	r3, ip, r4, r3
90023ab0:	9c02      	ldr	r4, [sp, #8]
90023ab2:	fa1f f28e 	uxth.w	r2, lr
90023ab6:	fb04 3505 	mla	r5, r4, r5, r3
90023aba:	10d4      	asrs	r4, r2, #3
90023abc:	fb08 5707 	mla	r7, r8, r7, r5
90023ac0:	1215      	asrs	r5, r2, #8
90023ac2:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
90023ac6:	00d2      	lsls	r2, r2, #3
90023ac8:	f3c7 2707 	ubfx	r7, r7, #8, #8
90023acc:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90023ad0:	b2d2      	uxtb	r2, r2
90023ad2:	434f      	muls	r7, r1
90023ad4:	1c7b      	adds	r3, r7, #1
90023ad6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
90023ada:	1203      	asrs	r3, r0, #8
90023adc:	ea6f 2717 	mvn.w	r7, r7, lsr #8
90023ae0:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90023ae4:	b2ff      	uxtb	r7, r7
90023ae6:	fb13 f307 	smulbb	r3, r3, r7
90023aea:	fb05 3501 	mla	r5, r5, r1, r3
90023aee:	10c3      	asrs	r3, r0, #3
90023af0:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90023af4:	b2ad      	uxth	r5, r5
90023af6:	fb13 f307 	smulbb	r3, r3, r7
90023afa:	fb04 3401 	mla	r4, r4, r1, r3
90023afe:	00c3      	lsls	r3, r0, #3
90023b00:	b2db      	uxtb	r3, r3
90023b02:	b2a4      	uxth	r4, r4
90023b04:	fb13 f307 	smulbb	r3, r3, r7
90023b08:	fb02 3101 	mla	r1, r2, r1, r3
90023b0c:	1c6b      	adds	r3, r5, #1
90023b0e:	1c62      	adds	r2, r4, #1
90023b10:	b289      	uxth	r1, r1
90023b12:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90023b16:	1c4b      	adds	r3, r1, #1
90023b18:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90023b1c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90023b20:	9a03      	ldr	r2, [sp, #12]
90023b22:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90023b26:	0964      	lsrs	r4, r4, #5
90023b28:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023b2c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90023b30:	432b      	orrs	r3, r5
90023b32:	4323      	orrs	r3, r4
90023b34:	8013      	strh	r3, [r2, #0]
90023b36:	b005      	add	sp, #20
90023b38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90023b3c:	f04f 0c00 	mov.w	ip, #0
90023b40:	4664      	mov	r4, ip
90023b42:	e6d6      	b.n	900238f2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
90023b44:	2300      	movs	r3, #0
90023b46:	469c      	mov	ip, r3
90023b48:	461a      	mov	r2, r3
90023b4a:	461c      	mov	r4, r3
90023b4c:	e6f8      	b.n	90023940 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90023b4e:	2300      	movs	r3, #0
90023b50:	461a      	mov	r2, r3
90023b52:	e6f5      	b.n	90023940 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90023b54:	460b      	mov	r3, r1
90023b56:	460a      	mov	r2, r1
90023b58:	e6f2      	b.n	90023940 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
90023b5a:	2500      	movs	r5, #0
90023b5c:	46ab      	mov	fp, r5
90023b5e:	e720      	b.n	900239a2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
90023b60:	2700      	movs	r7, #0
90023b62:	463d      	mov	r5, r7
90023b64:	4638      	mov	r0, r7
90023b66:	46bb      	mov	fp, r7
90023b68:	e745      	b.n	900239f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90023b6a:	4677      	mov	r7, lr
90023b6c:	4675      	mov	r5, lr
90023b6e:	4670      	mov	r0, lr
90023b70:	46f3      	mov	fp, lr
90023b72:	e740      	b.n	900239f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90023b74:	2700      	movs	r7, #0
90023b76:	4638      	mov	r0, r7
90023b78:	e73d      	b.n	900239f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
90023b7a:	460f      	mov	r7, r1
90023b7c:	4608      	mov	r0, r1
90023b7e:	e73a      	b.n	900239f6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

90023b80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90023b80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90023b84:	b097      	sub	sp, #92	@ 0x5c
90023b86:	9214      	str	r2, [sp, #80]	@ 0x50
90023b88:	9308      	str	r3, [sp, #32]
90023b8a:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90023b8c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90023b90:	9015      	str	r0, [sp, #84]	@ 0x54
90023b92:	9312      	str	r3, [sp, #72]	@ 0x48
90023b94:	6850      	ldr	r0, [r2, #4]
90023b96:	9111      	str	r1, [sp, #68]	@ 0x44
90023b98:	6812      	ldr	r2, [r2, #0]
90023b9a:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
90023b9e:	fb00 1303 	mla	r3, r0, r3, r1
90023ba2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90023ba6:	9309      	str	r3, [sp, #36]	@ 0x24
90023ba8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023baa:	681b      	ldr	r3, [r3, #0]
90023bac:	930b      	str	r3, [sp, #44]	@ 0x2c
90023bae:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023bb0:	685b      	ldr	r3, [r3, #4]
90023bb2:	930c      	str	r3, [sp, #48]	@ 0x30
90023bb4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
90023bb8:	930a      	str	r3, [sp, #40]	@ 0x28
90023bba:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90023bbc:	2b00      	cmp	r3, #0
90023bbe:	dc03      	bgt.n	90023bc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90023bc0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90023bc2:	2b00      	cmp	r3, #0
90023bc4:	f340 83cd 	ble.w	90024362 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90023bc8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023bca:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90023bce:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90023bd2:	1e48      	subs	r0, r1, #1
90023bd4:	1e55      	subs	r5, r2, #1
90023bd6:	9b08      	ldr	r3, [sp, #32]
90023bd8:	2b00      	cmp	r3, #0
90023bda:	f340 81a5 	ble.w	90023f28 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
90023bde:	9e21      	ldr	r6, [sp, #132]	@ 0x84
90023be0:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90023be2:	1436      	asrs	r6, r6, #16
90023be4:	ea4f 4323 	mov.w	r3, r3, asr #16
90023be8:	d406      	bmi.n	90023bf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90023bea:	4286      	cmp	r6, r0
90023bec:	da04      	bge.n	90023bf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90023bee:	2b00      	cmp	r3, #0
90023bf0:	db02      	blt.n	90023bf8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90023bf2:	42ab      	cmp	r3, r5
90023bf4:	f2c0 8199 	blt.w	90023f2a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
90023bf8:	3601      	adds	r6, #1
90023bfa:	f100 8186 	bmi.w	90023f0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023bfe:	42b1      	cmp	r1, r6
90023c00:	f2c0 8183 	blt.w	90023f0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023c04:	3301      	adds	r3, #1
90023c06:	f100 8180 	bmi.w	90023f0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023c0a:	429a      	cmp	r2, r3
90023c0c:	f2c0 817d 	blt.w	90023f0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
90023c10:	9b08      	ldr	r3, [sp, #32]
90023c12:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90023c16:	9f09      	ldr	r7, [sp, #36]	@ 0x24
90023c18:	9313      	str	r3, [sp, #76]	@ 0x4c
90023c1a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90023c1c:	2b00      	cmp	r3, #0
90023c1e:	f340 81a6 	ble.w	90023f6e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90023c22:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90023c24:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90023c26:	1418      	asrs	r0, r3, #16
90023c28:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90023c2a:	142d      	asrs	r5, r5, #16
90023c2c:	f3c3 3103 	ubfx	r1, r3, #12, #4
90023c30:	9b22      	ldr	r3, [sp, #136]	@ 0x88
90023c32:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90023c36:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90023c38:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90023c3c:	f100 81fa 	bmi.w	90024034 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90023c40:	f102 3eff 	add.w	lr, r2, #4294967295
90023c44:	4575      	cmp	r5, lr
90023c46:	f280 81f5 	bge.w	90024034 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90023c4a:	2800      	cmp	r0, #0
90023c4c:	f2c0 81f2 	blt.w	90024034 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90023c50:	f103 3eff 	add.w	lr, r3, #4294967295
90023c54:	4570      	cmp	r0, lr
90023c56:	f280 81ed 	bge.w	90024034 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90023c5a:	b212      	sxth	r2, r2
90023c5c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
90023c5e:	fa1f fe81 	uxth.w	lr, r1
90023c62:	fb00 5002 	mla	r0, r0, r2, r5
90023c66:	ea4f 150e 	mov.w	r5, lr, lsl #4
90023c6a:	eb03 0a00 	add.w	sl, r3, r0
90023c6e:	f813 9000 	ldrb.w	r9, [r3, r0]
90023c72:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
90023c76:	f89a 8001 	ldrb.w	r8, [sl, #1]
90023c7a:	b29b      	uxth	r3, r3
90023c7c:	f1bc 0f00 	cmp.w	ip, #0
90023c80:	f000 81bb 	beq.w	90023ffa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
90023c84:	f81a 4002 	ldrb.w	r4, [sl, r2]
90023c88:	eb0a 0b02 	add.w	fp, sl, r2
90023c8c:	fa1f fa8c 	uxth.w	sl, ip
90023c90:	940d      	str	r4, [sp, #52]	@ 0x34
90023c92:	fb0a fe0e 	mul.w	lr, sl, lr
90023c96:	f89b 4001 	ldrb.w	r4, [fp, #1]
90023c9a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
90023c9e:	eba5 050e 	sub.w	r5, r5, lr
90023ca2:	940e      	str	r4, [sp, #56]	@ 0x38
90023ca4:	fa1f fa8a 	uxth.w	sl, sl
90023ca8:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90023caa:	b2ad      	uxth	r5, r5
90023cac:	eba3 030a 	sub.w	r3, r3, sl
90023cb0:	fb08 f505 	mul.w	r5, r8, r5
90023cb4:	b29b      	uxth	r3, r3
90023cb6:	fb09 5303 	mla	r3, r9, r3, r5
90023cba:	fb0a 3304 	mla	r3, sl, r4, r3
90023cbe:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023cc0:	fb0e 3304 	mla	r3, lr, r4, r3
90023cc4:	f3c3 2307 	ubfx	r3, r3, #8, #8
90023cc8:	2b00      	cmp	r3, #0
90023cca:	f000 8111 	beq.w	90023ef0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90023cce:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90023cd0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90023cd4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
90023cd8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
90023cdc:	f000 8192 	beq.w	90024004 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
90023ce0:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90023ce4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90023ce8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023cec:	fb0a fe0e 	mul.w	lr, sl, lr
90023cf0:	fb09 f000 	mul.w	r0, r9, r0
90023cf4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
90023cf8:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90023cfc:	f100 0b20 	add.w	fp, r0, #32
90023d00:	44ce      	add	lr, r9
90023d02:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
90023d06:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90023d0a:	ea4f 2919 	mov.w	r9, r9, lsr #8
90023d0e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90023d12:	ea4e 0909 	orr.w	r9, lr, r9
90023d16:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90023d1a:	8868      	ldrh	r0, [r5, #2]
90023d1c:	d019      	beq.n	90023d52 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
90023d1e:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
90023d22:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90023d26:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023d2a:	fb0a fe0e 	mul.w	lr, sl, lr
90023d2e:	fb08 f800 	mul.w	r8, r8, r0
90023d32:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90023d36:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90023d3a:	f108 0b20 	add.w	fp, r8, #32
90023d3e:	4486      	add	lr, r0
90023d40:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90023d44:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90023d48:	0a00      	lsrs	r0, r0, #8
90023d4a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90023d4e:	ea4e 0000 	orr.w	r0, lr, r0
90023d52:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90023d56:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90023d5a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90023d5e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90023d62:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90023d66:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90023d6a:	ea4e 0909 	orr.w	r9, lr, r9
90023d6e:	ea4a 0000 	orr.w	r0, sl, r0
90023d72:	f1bc 0f00 	cmp.w	ip, #0
90023d76:	f000 8147 	beq.w	90024008 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
90023d7a:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
90023d7e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90023d80:	3a01      	subs	r2, #1
90023d82:	2cff      	cmp	r4, #255	@ 0xff
90023d84:	ea4f 0242 	mov.w	r2, r2, lsl #1
90023d88:	f102 0202 	add.w	r2, r2, #2
90023d8c:	eb05 0e02 	add.w	lr, r5, r2
90023d90:	5aaa      	ldrh	r2, [r5, r2]
90023d92:	d018      	beq.n	90023dc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
90023d94:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90023d98:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023d9c:	ea4f 08e4 	mov.w	r8, r4, asr #3
90023da0:	fb04 fa02 	mul.w	sl, r4, r2
90023da4:	fb08 f805 	mul.w	r8, r8, r5
90023da8:	f10a 0520 	add.w	r5, sl, #32
90023dac:	ea06 1258 	and.w	r2, r6, r8, lsr #5
90023db0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90023db4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90023db8:	4442      	add	r2, r8
90023dba:	0a2d      	lsrs	r5, r5, #8
90023dbc:	ea06 1252 	and.w	r2, r6, r2, lsr #5
90023dc0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90023dc4:	432a      	orrs	r2, r5
90023dc6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
90023dc8:	f8be 5002 	ldrh.w	r5, [lr, #2]
90023dcc:	2cff      	cmp	r4, #255	@ 0xff
90023dce:	d01a      	beq.n	90023e06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
90023dd0:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
90023dd4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90023dd8:	ea4f 08e4 	mov.w	r8, r4, asr #3
90023ddc:	fb04 fa05 	mul.w	sl, r4, r5
90023de0:	fb08 f80e 	mul.w	r8, r8, lr
90023de4:	f10a 0e20 	add.w	lr, sl, #32
90023de8:	ea06 1558 	and.w	r5, r6, r8, lsr #5
90023dec:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90023df0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
90023df4:	4445      	add	r5, r8
90023df6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90023dfa:	ea06 1555 	and.w	r5, r6, r5, lsr #5
90023dfe:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90023e02:	ea45 050e 	orr.w	r5, r5, lr
90023e06:	fb1c fe01 	smulbb	lr, ip, r1
90023e0a:	f1cc 0810 	rsb	r8, ip, #16
90023e0e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90023e12:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90023e16:	ea4f 0eee 	mov.w	lr, lr, asr #3
90023e1a:	eba8 0801 	sub.w	r8, r8, r1
90023e1e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
90023e22:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90023e26:	ebce 0141 	rsb	r1, lr, r1, lsl #1
90023e2a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90023e2e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
90023e32:	ea4a 0202 	orr.w	r2, sl, r2
90023e36:	4341      	muls	r1, r0
90023e38:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90023e3c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90023e40:	fb09 1108 	mla	r1, r9, r8, r1
90023e44:	ea4b 0505 	orr.w	r5, fp, r5
90023e48:	fb0c 1102 	mla	r1, ip, r2, r1
90023e4c:	fb0e 1e05 	mla	lr, lr, r5, r1
90023e50:	ea4f 525e 	mov.w	r2, lr, lsr #21
90023e54:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90023e58:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90023e5c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90023e60:	ea42 0e0e 	orr.w	lr, r2, lr
90023e64:	fa1f f28e 	uxth.w	r2, lr
90023e68:	2bff      	cmp	r3, #255	@ 0xff
90023e6a:	d103      	bne.n	90023e74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90023e6c:	9912      	ldr	r1, [sp, #72]	@ 0x48
90023e6e:	29ff      	cmp	r1, #255	@ 0xff
90023e70:	f000 80de 	beq.w	90024030 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
90023e74:	990a      	ldr	r1, [sp, #40]	@ 0x28
90023e76:	1215      	asrs	r5, r2, #8
90023e78:	8838      	ldrh	r0, [r7, #0]
90023e7a:	434b      	muls	r3, r1
90023e7c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90023e80:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90023e82:	f103 0c01 	add.w	ip, r3, #1
90023e86:	eb0c 2323 	add.w	r3, ip, r3, asr #8
90023e8a:	ea6f 2323 	mvn.w	r3, r3, asr #8
90023e8e:	fa5f fc83 	uxtb.w	ip, r3
90023e92:	1203      	asrs	r3, r0, #8
90023e94:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
90023e98:	fb13 f30c 	smulbb	r3, r3, ip
90023e9c:	fb05 3501 	mla	r5, r5, r1, r3
90023ea0:	10c3      	asrs	r3, r0, #3
90023ea2:	10d1      	asrs	r1, r2, #3
90023ea4:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
90023ea8:	00d2      	lsls	r2, r2, #3
90023eaa:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90023eae:	b2ad      	uxth	r5, r5
90023eb0:	fb13 f30c 	smulbb	r3, r3, ip
90023eb4:	b2d2      	uxtb	r2, r2
90023eb6:	fb01 3104 	mla	r1, r1, r4, r3
90023eba:	00c3      	lsls	r3, r0, #3
90023ebc:	b2db      	uxtb	r3, r3
90023ebe:	b289      	uxth	r1, r1
90023ec0:	fb13 f30c 	smulbb	r3, r3, ip
90023ec4:	fb02 3304 	mla	r3, r2, r4, r3
90023ec8:	b29a      	uxth	r2, r3
90023eca:	1c6b      	adds	r3, r5, #1
90023ecc:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90023ed0:	1c53      	adds	r3, r2, #1
90023ed2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90023ed6:	1c4a      	adds	r2, r1, #1
90023ed8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90023edc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90023ee0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90023ee4:	0949      	lsrs	r1, r1, #5
90023ee6:	432b      	orrs	r3, r5
90023ee8:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90023eec:	430b      	orrs	r3, r1
90023eee:	803b      	strh	r3, [r7, #0]
90023ef0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90023ef2:	3702      	adds	r7, #2
90023ef4:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90023ef6:	4413      	add	r3, r2
90023ef8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
90023efa:	9321      	str	r3, [sp, #132]	@ 0x84
90023efc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023efe:	441a      	add	r2, r3
90023f00:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90023f02:	3b01      	subs	r3, #1
90023f04:	9222      	str	r2, [sp, #136]	@ 0x88
90023f06:	9313      	str	r3, [sp, #76]	@ 0x4c
90023f08:	e687      	b.n	90023c1a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
90023f0a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90023f0c:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
90023f0e:	9c22      	ldr	r4, [sp, #136]	@ 0x88
90023f10:	4433      	add	r3, r6
90023f12:	9321      	str	r3, [sp, #132]	@ 0x84
90023f14:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90023f16:	441c      	add	r4, r3
90023f18:	9b08      	ldr	r3, [sp, #32]
90023f1a:	3b01      	subs	r3, #1
90023f1c:	9422      	str	r4, [sp, #136]	@ 0x88
90023f1e:	9308      	str	r3, [sp, #32]
90023f20:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023f22:	3302      	adds	r3, #2
90023f24:	9309      	str	r3, [sp, #36]	@ 0x24
90023f26:	e656      	b.n	90023bd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
90023f28:	d028      	beq.n	90023f7c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90023f2a:	9b08      	ldr	r3, [sp, #32]
90023f2c:	9823      	ldr	r0, [sp, #140]	@ 0x8c
90023f2e:	3b01      	subs	r3, #1
90023f30:	9d21      	ldr	r5, [sp, #132]	@ 0x84
90023f32:	fb00 5003 	mla	r0, r0, r3, r5
90023f36:	1400      	asrs	r0, r0, #16
90023f38:	f53f ae6a 	bmi.w	90023c10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023f3c:	3901      	subs	r1, #1
90023f3e:	4288      	cmp	r0, r1
90023f40:	f6bf ae66 	bge.w	90023c10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023f44:	9924      	ldr	r1, [sp, #144]	@ 0x90
90023f46:	9822      	ldr	r0, [sp, #136]	@ 0x88
90023f48:	fb01 0303 	mla	r3, r1, r3, r0
90023f4c:	141b      	asrs	r3, r3, #16
90023f4e:	f53f ae5f 	bmi.w	90023c10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023f52:	3a01      	subs	r2, #1
90023f54:	4293      	cmp	r3, r2
90023f56:	f6bf ae5b 	bge.w	90023c10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
90023f5a:	9b08      	ldr	r3, [sp, #32]
90023f5c:	f64f 061f 	movw	r6, #63519	@ 0xf81f
90023f60:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
90023f64:	9313      	str	r3, [sp, #76]	@ 0x4c
90023f66:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90023f68:	2b00      	cmp	r3, #0
90023f6a:	f300 8082 	bgt.w	90024072 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
90023f6e:	9b08      	ldr	r3, [sp, #32]
90023f70:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
90023f74:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90023f76:	eb03 0344 	add.w	r3, r3, r4, lsl #1
90023f7a:	9309      	str	r3, [sp, #36]	@ 0x24
90023f7c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90023f7e:	2b00      	cmp	r3, #0
90023f80:	f340 81ef 	ble.w	90024362 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
90023f84:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90023f88:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023f8a:	ee30 0a04 	vadd.f32	s0, s0, s8
90023f8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
90023f92:	eef0 6a62 	vmov.f32	s13, s5
90023f96:	eec7 7a00 	vdiv.f32	s15, s14, s0
90023f9a:	ee31 1a05 	vadd.f32	s2, s2, s10
90023f9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023fa2:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
90023fa6:	eef0 6a43 	vmov.f32	s13, s6
90023faa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90023fae:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
90023fb2:	ee20 7aa7 	vmul.f32	s14, s1, s15
90023fb6:	ee61 7a27 	vmul.f32	s15, s2, s15
90023fba:	ee77 2a62 	vsub.f32	s5, s14, s5
90023fbe:	ee37 3ac3 	vsub.f32	s6, s15, s6
90023fc2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90023fc6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90023fca:	ee12 2a90 	vmov	r2, s5
90023fce:	eef0 2a47 	vmov.f32	s5, s14
90023fd2:	fb92 f3f3 	sdiv	r3, r2, r3
90023fd6:	ee13 2a10 	vmov	r2, s6
90023fda:	9323      	str	r3, [sp, #140]	@ 0x8c
90023fdc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023fde:	eeb0 3a67 	vmov.f32	s6, s15
90023fe2:	fb92 f3f3 	sdiv	r3, r2, r3
90023fe6:	9324      	str	r3, [sp, #144]	@ 0x90
90023fe8:	9b11      	ldr	r3, [sp, #68]	@ 0x44
90023fea:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90023fec:	3b01      	subs	r3, #1
90023fee:	9311      	str	r3, [sp, #68]	@ 0x44
90023ff0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90023ff2:	bf08      	it	eq
90023ff4:	4613      	moveq	r3, r2
90023ff6:	9308      	str	r3, [sp, #32]
90023ff8:	e5df      	b.n	90023bba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90023ffa:	fb08 f505 	mul.w	r5, r8, r5
90023ffe:	fb09 5303 	mla	r3, r9, r3, r5
90024002:	e65f      	b.n	90023cc4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
90024004:	4681      	mov	r9, r0
90024006:	e686      	b.n	90023d16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
90024008:	f1c1 0210 	rsb	r2, r1, #16
9002400c:	4341      	muls	r1, r0
9002400e:	fb09 1902 	mla	r9, r9, r2, r1
90024012:	ea4f 0949 	mov.w	r9, r9, lsl #1
90024016:	ea4f 5259 	mov.w	r2, r9, lsr #21
9002401a:	ea4f 1959 	mov.w	r9, r9, lsr #5
9002401e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024022:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90024026:	ea42 0909 	orr.w	r9, r2, r9
9002402a:	fa1f f289 	uxth.w	r2, r9
9002402e:	e71b      	b.n	90023e68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
90024030:	803a      	strh	r2, [r7, #0]
90024032:	e75d      	b.n	90023ef0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024034:	f115 0e01 	adds.w	lr, r5, #1
90024038:	f53f af5a 	bmi.w	90023ef0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002403c:	4572      	cmp	r2, lr
9002403e:	f6ff af57 	blt.w	90023ef0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024042:	f110 0e01 	adds.w	lr, r0, #1
90024046:	f53f af53 	bmi.w	90023ef0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002404a:	4573      	cmp	r3, lr
9002404c:	f6ff af50 	blt.w	90023ef0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024050:	9c12      	ldr	r4, [sp, #72]	@ 0x48
90024052:	b21b      	sxth	r3, r3
90024054:	b212      	sxth	r2, r2
90024056:	9502      	str	r5, [sp, #8]
90024058:	9301      	str	r3, [sp, #4]
9002405a:	9200      	str	r2, [sp, #0]
9002405c:	e9cd 0103 	strd	r0, r1, [sp, #12]
90024060:	e9cd c405 	strd	ip, r4, [sp, #20]
90024064:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
90024068:	4639      	mov	r1, r7
9002406a:	9815      	ldr	r0, [sp, #84]	@ 0x54
9002406c:	f7ff fc02 	bl	90023874 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
90024070:	e73e      	b.n	90023ef0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024072:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90024074:	f3c3 3203 	ubfx	r2, r3, #12, #4
90024078:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9002407a:	f3c3 3503 	ubfx	r5, r3, #12, #4
9002407e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90024080:	fa1f fc82 	uxth.w	ip, r2
90024084:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024088:	9b22      	ldr	r3, [sp, #136]	@ 0x88
9002408a:	ea4f 100c 	mov.w	r0, ip, lsl #4
9002408e:	141f      	asrs	r7, r3, #16
90024090:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90024092:	141b      	asrs	r3, r3, #16
90024094:	fb01 3707 	mla	r7, r1, r7, r3
90024098:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002409a:	eb03 0a07 	add.w	sl, r3, r7
9002409e:	f813 9007 	ldrb.w	r9, [r3, r7]
900240a2:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
900240a6:	f89a 8001 	ldrb.w	r8, [sl, #1]
900240aa:	b29b      	uxth	r3, r3
900240ac:	2d00      	cmp	r5, #0
900240ae:	f000 813d 	beq.w	9002432c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
900240b2:	f81a 4001 	ldrb.w	r4, [sl, r1]
900240b6:	eb0a 0b01 	add.w	fp, sl, r1
900240ba:	fa1f fa85 	uxth.w	sl, r5
900240be:	940f      	str	r4, [sp, #60]	@ 0x3c
900240c0:	fb0a fc0c 	mul.w	ip, sl, ip
900240c4:	f89b 4001 	ldrb.w	r4, [fp, #1]
900240c8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
900240cc:	eba0 000c 	sub.w	r0, r0, ip
900240d0:	9410      	str	r4, [sp, #64]	@ 0x40
900240d2:	fa1f fa8a 	uxth.w	sl, sl
900240d6:	b280      	uxth	r0, r0
900240d8:	eba3 030a 	sub.w	r3, r3, sl
900240dc:	fb08 f000 	mul.w	r0, r8, r0
900240e0:	b29b      	uxth	r3, r3
900240e2:	fb09 0303 	mla	r3, r9, r3, r0
900240e6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
900240e8:	fb0a 3300 	mla	r3, sl, r0, r3
900240ec:	fb0c 3304 	mla	r3, ip, r4, r3
900240f0:	f3c3 2307 	ubfx	r3, r3, #8, #8
900240f4:	2b00      	cmp	r3, #0
900240f6:	f000 810b 	beq.w	90024310 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
900240fa:	980b      	ldr	r0, [sp, #44]	@ 0x2c
900240fc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90024100:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90024102:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90024106:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
9002410a:	f000 8114 	beq.w	90024336 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
9002410e:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90024112:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90024116:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9002411a:	fb0a fc0c 	mul.w	ip, sl, ip
9002411e:	fb09 f707 	mul.w	r7, r9, r7
90024122:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90024126:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
9002412a:	f107 0b20 	add.w	fp, r7, #32
9002412e:	44cc      	add	ip, r9
90024130:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90024134:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90024138:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002413c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90024140:	ea4c 0909 	orr.w	r9, ip, r9
90024144:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90024148:	8847      	ldrh	r7, [r0, #2]
9002414a:	d019      	beq.n	90024180 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
9002414c:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90024150:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90024154:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024158:	fb0a fc0c 	mul.w	ip, sl, ip
9002415c:	fb08 f807 	mul.w	r8, r8, r7
90024160:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90024164:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90024168:	f108 0b20 	add.w	fp, r8, #32
9002416c:	44bc      	add	ip, r7
9002416e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90024172:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90024176:	0a3f      	lsrs	r7, r7, #8
90024178:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9002417c:	ea4c 0707 	orr.w	r7, ip, r7
90024180:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90024184:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90024188:	ea4f 4a07 	mov.w	sl, r7, lsl #16
9002418c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90024190:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90024194:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024198:	ea4c 0909 	orr.w	r9, ip, r9
9002419c:	ea4a 0707 	orr.w	r7, sl, r7
900241a0:	2d00      	cmp	r5, #0
900241a2:	f000 80ca 	beq.w	9002433a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
900241a6:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
900241aa:	3901      	subs	r1, #1
900241ac:	0049      	lsls	r1, r1, #1
900241ae:	3102      	adds	r1, #2
900241b0:	eb00 0c01 	add.w	ip, r0, r1
900241b4:	5a41      	ldrh	r1, [r0, r1]
900241b6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
900241b8:	28ff      	cmp	r0, #255	@ 0xff
900241ba:	d019      	beq.n	900241f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
900241bc:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
900241c0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
900241c2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900241c6:	ea4f 08e4 	mov.w	r8, r4, asr #3
900241ca:	fb04 fa01 	mul.w	sl, r4, r1
900241ce:	fb08 f800 	mul.w	r8, r8, r0
900241d2:	f10a 0020 	add.w	r0, sl, #32
900241d6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
900241da:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900241de:	eb00 201a 	add.w	r0, r0, sl, lsr #8
900241e2:	4441      	add	r1, r8
900241e4:	0a00      	lsrs	r0, r0, #8
900241e6:	ea06 1151 	and.w	r1, r6, r1, lsr #5
900241ea:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900241ee:	4301      	orrs	r1, r0
900241f0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
900241f2:	f8bc 0002 	ldrh.w	r0, [ip, #2]
900241f6:	2cff      	cmp	r4, #255	@ 0xff
900241f8:	d01a      	beq.n	90024230 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
900241fa:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
900241fe:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024202:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024206:	fb04 fa00 	mul.w	sl, r4, r0
9002420a:	fb08 f80c 	mul.w	r8, r8, ip
9002420e:	f10a 0c20 	add.w	ip, sl, #32
90024212:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90024216:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002421a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
9002421e:	4440      	add	r0, r8
90024220:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024224:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90024228:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
9002422c:	ea40 000c 	orr.w	r0, r0, ip
90024230:	fb15 fc02 	smulbb	ip, r5, r2
90024234:	f1c5 0810 	rsb	r8, r5, #16
90024238:	ea4f 4a01 	mov.w	sl, r1, lsl #16
9002423c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90024240:	ea4f 0cec 	mov.w	ip, ip, asr #3
90024244:	eba8 0802 	sub.w	r8, r8, r2
90024248:	ea4f 4b00 	mov.w	fp, r0, lsl #16
9002424c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024250:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90024254:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90024258:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
9002425c:	ea4a 0101 	orr.w	r1, sl, r1
90024260:	437a      	muls	r2, r7
90024262:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90024266:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002426a:	fb09 2208 	mla	r2, r9, r8, r2
9002426e:	ea4b 0000 	orr.w	r0, fp, r0
90024272:	fb05 2201 	mla	r2, r5, r1, r2
90024276:	fb0c 2200 	mla	r2, ip, r0, r2
9002427a:	0d57      	lsrs	r7, r2, #21
9002427c:	0952      	lsrs	r2, r2, #5
9002427e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024282:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024286:	433a      	orrs	r2, r7
90024288:	2bff      	cmp	r3, #255	@ 0xff
9002428a:	b292      	uxth	r2, r2
9002428c:	d102      	bne.n	90024294 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
9002428e:	9912      	ldr	r1, [sp, #72]	@ 0x48
90024290:	29ff      	cmp	r1, #255	@ 0xff
90024292:	d063      	beq.n	9002435c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
90024294:	980a      	ldr	r0, [sp, #40]	@ 0x28
90024296:	1215      	asrs	r5, r2, #8
90024298:	f8be 1000 	ldrh.w	r1, [lr]
9002429c:	4343      	muls	r3, r0
9002429e:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
900242a0:	10cf      	asrs	r7, r1, #3
900242a2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900242a6:	1c58      	adds	r0, r3, #1
900242a8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
900242ac:	eb00 2323 	add.w	r3, r0, r3, asr #8
900242b0:	1208      	asrs	r0, r1, #8
900242b2:	ea6f 2323 	mvn.w	r3, r3, asr #8
900242b6:	00c9      	lsls	r1, r1, #3
900242b8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900242bc:	b2db      	uxtb	r3, r3
900242be:	b2c9      	uxtb	r1, r1
900242c0:	fb10 f003 	smulbb	r0, r0, r3
900242c4:	fb11 f103 	smulbb	r1, r1, r3
900242c8:	fb05 0504 	mla	r5, r5, r4, r0
900242cc:	10d0      	asrs	r0, r2, #3
900242ce:	fb17 f703 	smulbb	r7, r7, r3
900242d2:	00d2      	lsls	r2, r2, #3
900242d4:	b2ad      	uxth	r5, r5
900242d6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900242da:	b2d2      	uxtb	r2, r2
900242dc:	fb00 7004 	mla	r0, r0, r4, r7
900242e0:	1c6b      	adds	r3, r5, #1
900242e2:	fb02 1204 	mla	r2, r2, r4, r1
900242e6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
900242ea:	b292      	uxth	r2, r2
900242ec:	b280      	uxth	r0, r0
900242ee:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
900242f2:	1c57      	adds	r7, r2, #1
900242f4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
900242f8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
900242fc:	433d      	orrs	r5, r7
900242fe:	1c47      	adds	r7, r0, #1
90024300:	eb07 2710 	add.w	r7, r7, r0, lsr #8
90024304:	097f      	lsrs	r7, r7, #5
90024306:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
9002430a:	433d      	orrs	r5, r7
9002430c:	f8ae 5000 	strh.w	r5, [lr]
90024310:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90024312:	f10e 0e02 	add.w	lr, lr, #2
90024316:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
90024318:	4413      	add	r3, r2
9002431a:	9a22      	ldr	r2, [sp, #136]	@ 0x88
9002431c:	9321      	str	r3, [sp, #132]	@ 0x84
9002431e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024320:	441a      	add	r2, r3
90024322:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
90024324:	3b01      	subs	r3, #1
90024326:	9222      	str	r2, [sp, #136]	@ 0x88
90024328:	9313      	str	r3, [sp, #76]	@ 0x4c
9002432a:	e61c      	b.n	90023f66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
9002432c:	fb08 f000 	mul.w	r0, r8, r0
90024330:	fb09 0303 	mla	r3, r9, r3, r0
90024334:	e6dc      	b.n	900240f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
90024336:	46b9      	mov	r9, r7
90024338:	e704      	b.n	90024144 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
9002433a:	f1c2 0110 	rsb	r1, r2, #16
9002433e:	437a      	muls	r2, r7
90024340:	fb09 2901 	mla	r9, r9, r1, r2
90024344:	ea4f 0949 	mov.w	r9, r9, lsl #1
90024348:	ea4f 5059 	mov.w	r0, r9, lsr #21
9002434c:	ea4f 1259 	mov.w	r2, r9, lsr #5
90024350:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024354:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024358:	4302      	orrs	r2, r0
9002435a:	e795      	b.n	90024288 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
9002435c:	f8ae 2000 	strh.w	r2, [lr]
90024360:	e7d6      	b.n	90024310 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
90024362:	b017      	add	sp, #92	@ 0x5c
90024364:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

90024368 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
90024368:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002436c:	b085      	sub	sp, #20
9002436e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
90024372:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
90024376:	2800      	cmp	r0, #0
90024378:	9103      	str	r1, [sp, #12]
9002437a:	fb00 7406 	mla	r4, r0, r6, r7
9002437e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
90024382:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
90024386:	eb03 0544 	add.w	r5, r3, r4, lsl #1
9002438a:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
9002438e:	eb02 0904 	add.w	r9, r2, r4
90024392:	9501      	str	r5, [sp, #4]
90024394:	f2c0 8141 	blt.w	9002461a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
90024398:	4583      	cmp	fp, r0
9002439a:	f340 813e 	ble.w	9002461a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
9002439e:	2f00      	cmp	r7, #0
900243a0:	f2c0 8137 	blt.w	90024612 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
900243a4:	42be      	cmp	r6, r7
900243a6:	f340 8134 	ble.w	90024612 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
900243aa:	f812 c004 	ldrb.w	ip, [r2, r4]
900243ae:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
900243b2:	f64f 041f 	movw	r4, #63519	@ 0xf81f
900243b6:	ea4f 02ec 	mov.w	r2, ip, asr #3
900243ba:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
900243be:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900243c2:	4355      	muls	r5, r2
900243c4:	fb0c f203 	mul.w	r2, ip, r3
900243c8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
900243cc:	f605 0501 	addw	r5, r5, #2049	@ 0x801
900243d0:	441d      	add	r5, r3
900243d2:	f102 0320 	add.w	r3, r2, #32
900243d6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900243da:	ea04 1455 	and.w	r4, r4, r5, lsr #5
900243de:	0a1b      	lsrs	r3, r3, #8
900243e0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900243e4:	431c      	orrs	r4, r3
900243e6:	1c7b      	adds	r3, r7, #1
900243e8:	f100 811c 	bmi.w	90024624 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
900243ec:	429e      	cmp	r6, r3
900243ee:	f340 8119 	ble.w	90024624 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
900243f2:	2900      	cmp	r1, #0
900243f4:	f000 8119 	beq.w	9002462a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
900243f8:	9a01      	ldr	r2, [sp, #4]
900243fa:	f899 3001 	ldrb.w	r3, [r9, #1]
900243fe:	8855      	ldrh	r5, [r2, #2]
90024400:	ea4f 08e3 	mov.w	r8, r3, asr #3
90024404:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
90024408:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
9002440c:	fb08 f802 	mul.w	r8, r8, r2
90024410:	f64f 021f 	movw	r2, #63519	@ 0xf81f
90024414:	435d      	muls	r5, r3
90024416:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
9002441a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
9002441e:	44d0      	add	r8, sl
90024420:	f105 0a20 	add.w	sl, r5, #32
90024424:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
90024428:	ea02 1258 	and.w	r2, r2, r8, lsr #5
9002442c:	0a2d      	lsrs	r5, r5, #8
9002442e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024432:	432a      	orrs	r2, r5
90024434:	3001      	adds	r0, #1
90024436:	f100 80fe 	bmi.w	90024636 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
9002443a:	4583      	cmp	fp, r0
9002443c:	f340 80fb 	ble.w	90024636 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
90024440:	f1be 0f00 	cmp.w	lr, #0
90024444:	f000 80fc 	beq.w	90024640 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
90024448:	2f00      	cmp	r7, #0
9002444a:	f2c0 80f1 	blt.w	90024630 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
9002444e:	42be      	cmp	r6, r7
90024450:	f340 80ee 	ble.w	90024630 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
90024454:	9801      	ldr	r0, [sp, #4]
90024456:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
9002445a:	f819 5006 	ldrb.w	r5, [r9, r6]
9002445e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
90024462:	ea4f 0ae5 	mov.w	sl, r5, asr #3
90024466:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
9002446a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
9002446e:	fb0a fa00 	mul.w	sl, sl, r0
90024472:	fb05 f808 	mul.w	r8, r5, r8
90024476:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
9002447a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
9002447e:	4482      	add	sl, r0
90024480:	f108 0020 	add.w	r0, r8, #32
90024484:	eb00 2018 	add.w	r0, r0, r8, lsr #8
90024488:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
9002448c:	0a00      	lsrs	r0, r0, #8
9002448e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024492:	ea4b 0b00 	orr.w	fp, fp, r0
90024496:	3701      	adds	r7, #1
90024498:	f100 80d7 	bmi.w	9002464a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
9002449c:	42be      	cmp	r6, r7
9002449e:	f340 80d4 	ble.w	9002464a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
900244a2:	2900      	cmp	r1, #0
900244a4:	f000 80d4 	beq.w	90024650 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
900244a8:	3601      	adds	r6, #1
900244aa:	9801      	ldr	r0, [sp, #4]
900244ac:	f819 7006 	ldrb.w	r7, [r9, r6]
900244b0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
900244b4:	ea4f 09e7 	mov.w	r9, r7, asr #3
900244b8:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
900244bc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900244c0:	fb09 f906 	mul.w	r9, r9, r6
900244c4:	fb07 f800 	mul.w	r8, r7, r0
900244c8:	f64f 001f 	movw	r0, #63519	@ 0xf81f
900244cc:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
900244d0:	f609 0901 	addw	r9, r9, #2049	@ 0x801
900244d4:	44d1      	add	r9, sl
900244d6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
900244da:	f108 0020 	add.w	r0, r8, #32
900244de:	eb00 2018 	add.w	r0, r0, r8, lsr #8
900244e2:	0a00      	lsrs	r0, r0, #8
900244e4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900244e8:	4330      	orrs	r0, r6
900244ea:	b28e      	uxth	r6, r1
900244ec:	fa1f f98e 	uxth.w	r9, lr
900244f0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
900244f4:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
900244f8:	fb06 f809 	mul.w	r8, r6, r9
900244fc:	0136      	lsls	r6, r6, #4
900244fe:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024502:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
90024506:	9601      	str	r6, [sp, #4]
90024508:	ea4a 0404 	orr.w	r4, sl, r4
9002450c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
90024510:	fa1f f689 	uxth.w	r6, r9
90024514:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024518:	fb11 f90e 	smulbb	r9, r1, lr
9002451c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024520:	9602      	str	r6, [sp, #8]
90024522:	4626      	mov	r6, r4
90024524:	f3c9 09c7 	ubfx	r9, r9, #3, #8
90024528:	f1ce 0410 	rsb	r4, lr, #16
9002452c:	ea4a 0202 	orr.w	r2, sl, r2
90024530:	ea4f 4a00 	mov.w	sl, r0, lsl #16
90024534:	1a64      	subs	r4, r4, r1
90024536:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
9002453a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
9002453e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90024542:	434a      	muls	r2, r1
90024544:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90024548:	ea4a 0000 	orr.w	r0, sl, r0
9002454c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
90024550:	fb04 2406 	mla	r4, r4, r6, r2
90024554:	9903      	ldr	r1, [sp, #12]
90024556:	fb09 4200 	mla	r2, r9, r0, r4
9002455a:	ea4f 440b 	mov.w	r4, fp, lsl #16
9002455e:	9801      	ldr	r0, [sp, #4]
90024560:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
90024564:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90024568:	8809      	ldrh	r1, [r1, #0]
9002456a:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
9002456e:	ea44 0b0b 	orr.w	fp, r4, fp
90024572:	9c02      	ldr	r4, [sp, #8]
90024574:	1b00      	subs	r0, r0, r4
90024576:	9c01      	ldr	r4, [sp, #4]
90024578:	fb0e 2e0b 	mla	lr, lr, fp, r2
9002457c:	eba4 0608 	sub.w	r6, r4, r8
90024580:	b280      	uxth	r0, r0
90024582:	ea4f 525e 	mov.w	r2, lr, lsr #21
90024586:	b2b6      	uxth	r6, r6
90024588:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
9002458c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024590:	4373      	muls	r3, r6
90024592:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
90024596:	fb0c 3300 	mla	r3, ip, r0, r3
9002459a:	9802      	ldr	r0, [sp, #8]
9002459c:	ea42 0e0e 	orr.w	lr, r2, lr
900245a0:	fb00 3505 	mla	r5, r0, r5, r3
900245a4:	120b      	asrs	r3, r1, #8
900245a6:	10c8      	asrs	r0, r1, #3
900245a8:	fb08 5707 	mla	r7, r8, r7, r5
900245ac:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
900245b0:	00c9      	lsls	r1, r1, #3
900245b2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900245b6:	ea6f 2727 	mvn.w	r7, r7, asr #8
900245ba:	fa1f f28e 	uxth.w	r2, lr
900245be:	b2c9      	uxtb	r1, r1
900245c0:	b2ff      	uxtb	r7, r7
900245c2:	437b      	muls	r3, r7
900245c4:	4378      	muls	r0, r7
900245c6:	434f      	muls	r7, r1
900245c8:	1c59      	adds	r1, r3, #1
900245ca:	eb01 2113 	add.w	r1, r1, r3, lsr #8
900245ce:	1213      	asrs	r3, r2, #8
900245d0:	f023 0307 	bic.w	r3, r3, #7
900245d4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
900245d8:	1c41      	adds	r1, r0, #1
900245da:	eb01 2010 	add.w	r0, r1, r0, lsr #8
900245de:	10d1      	asrs	r1, r2, #3
900245e0:	021b      	lsls	r3, r3, #8
900245e2:	f021 0103 	bic.w	r1, r1, #3
900245e6:	00d2      	lsls	r2, r2, #3
900245e8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
900245ec:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900245f0:	00c9      	lsls	r1, r1, #3
900245f2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900245f6:	430b      	orrs	r3, r1
900245f8:	1c79      	adds	r1, r7, #1
900245fa:	eb01 2717 	add.w	r7, r1, r7, lsr #8
900245fe:	eb02 2217 	add.w	r2, r2, r7, lsr #8
90024602:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90024606:	431a      	orrs	r2, r3
90024608:	9b03      	ldr	r3, [sp, #12]
9002460a:	801a      	strh	r2, [r3, #0]
9002460c:	b005      	add	sp, #20
9002460e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024612:	f04f 0c00 	mov.w	ip, #0
90024616:	4664      	mov	r4, ip
90024618:	e6e5      	b.n	900243e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
9002461a:	2300      	movs	r3, #0
9002461c:	469c      	mov	ip, r3
9002461e:	461a      	mov	r2, r3
90024620:	461c      	mov	r4, r3
90024622:	e707      	b.n	90024434 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90024624:	2300      	movs	r3, #0
90024626:	461a      	mov	r2, r3
90024628:	e704      	b.n	90024434 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
9002462a:	460b      	mov	r3, r1
9002462c:	460a      	mov	r2, r1
9002462e:	e701      	b.n	90024434 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
90024630:	2500      	movs	r5, #0
90024632:	46ab      	mov	fp, r5
90024634:	e72f      	b.n	90024496 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
90024636:	2700      	movs	r7, #0
90024638:	463d      	mov	r5, r7
9002463a:	4638      	mov	r0, r7
9002463c:	46bb      	mov	fp, r7
9002463e:	e754      	b.n	900244ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90024640:	4677      	mov	r7, lr
90024642:	4675      	mov	r5, lr
90024644:	4670      	mov	r0, lr
90024646:	46f3      	mov	fp, lr
90024648:	e74f      	b.n	900244ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
9002464a:	2700      	movs	r7, #0
9002464c:	4638      	mov	r0, r7
9002464e:	e74c      	b.n	900244ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
90024650:	460f      	mov	r7, r1
90024652:	4608      	mov	r0, r1
90024654:	e749      	b.n	900244ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

90024658 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024658:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002465c:	b093      	sub	sp, #76	@ 0x4c
9002465e:	9210      	str	r2, [sp, #64]	@ 0x40
90024660:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90024662:	9011      	str	r0, [sp, #68]	@ 0x44
90024664:	910e      	str	r1, [sp, #56]	@ 0x38
90024666:	6850      	ldr	r0, [r2, #4]
90024668:	9306      	str	r3, [sp, #24]
9002466a:	6812      	ldr	r2, [r2, #0]
9002466c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90024670:	fb00 1303 	mla	r3, r0, r3, r1
90024674:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90024678:	9307      	str	r3, [sp, #28]
9002467a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002467c:	681b      	ldr	r3, [r3, #0]
9002467e:	9308      	str	r3, [sp, #32]
90024680:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024682:	685b      	ldr	r3, [r3, #4]
90024684:	9309      	str	r3, [sp, #36]	@ 0x24
90024686:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90024688:	2b00      	cmp	r3, #0
9002468a:	dc03      	bgt.n	90024694 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
9002468c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
9002468e:	2b00      	cmp	r3, #0
90024690:	f340 83b6 	ble.w	90024e00 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
90024694:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024696:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
9002469a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002469e:	1e48      	subs	r0, r1, #1
900246a0:	1e55      	subs	r5, r2, #1
900246a2:	9b06      	ldr	r3, [sp, #24]
900246a4:	2b00      	cmp	r3, #0
900246a6:	f340 8165 	ble.w	90024974 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
900246aa:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
900246ac:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900246ae:	1436      	asrs	r6, r6, #16
900246b0:	ea4f 4323 	mov.w	r3, r3, asr #16
900246b4:	d406      	bmi.n	900246c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900246b6:	4286      	cmp	r6, r0
900246b8:	da04      	bge.n	900246c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900246ba:	2b00      	cmp	r3, #0
900246bc:	db02      	blt.n	900246c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
900246be:	42ab      	cmp	r3, r5
900246c0:	f2c0 8159 	blt.w	90024976 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
900246c4:	3601      	adds	r6, #1
900246c6:	f100 8146 	bmi.w	90024956 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900246ca:	42b1      	cmp	r1, r6
900246cc:	f2c0 8143 	blt.w	90024956 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900246d0:	3301      	adds	r3, #1
900246d2:	f100 8140 	bmi.w	90024956 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900246d6:	429a      	cmp	r2, r3
900246d8:	f2c0 813d 	blt.w	90024956 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
900246dc:	9b06      	ldr	r3, [sp, #24]
900246de:	f64f 061f 	movw	r6, #63519	@ 0xf81f
900246e2:	9f07      	ldr	r7, [sp, #28]
900246e4:	930f      	str	r3, [sp, #60]	@ 0x3c
900246e6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900246e8:	2b00      	cmp	r3, #0
900246ea:	f340 8166 	ble.w	900249ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
900246ee:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900246f0:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
900246f2:	1418      	asrs	r0, r3, #16
900246f4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900246f6:	142d      	asrs	r5, r5, #16
900246f8:	f3c3 3103 	ubfx	r1, r3, #12, #4
900246fc:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
900246fe:	f3c3 3c03 	ubfx	ip, r3, #12, #4
90024702:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024704:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
90024708:	f100 81f0 	bmi.w	90024aec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
9002470c:	f102 3eff 	add.w	lr, r2, #4294967295
90024710:	4575      	cmp	r5, lr
90024712:	f280 81eb 	bge.w	90024aec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90024716:	2800      	cmp	r0, #0
90024718:	f2c0 81e8 	blt.w	90024aec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
9002471c:	f103 3eff 	add.w	lr, r3, #4294967295
90024720:	4570      	cmp	r0, lr
90024722:	f280 81e3 	bge.w	90024aec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
90024726:	b212      	sxth	r2, r2
90024728:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002472a:	fa1f fe81 	uxth.w	lr, r1
9002472e:	fb00 5002 	mla	r0, r0, r2, r5
90024732:	ea4f 150e 	mov.w	r5, lr, lsl #4
90024736:	eb03 0a00 	add.w	sl, r3, r0
9002473a:	f813 9000 	ldrb.w	r9, [r3, r0]
9002473e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
90024742:	f89a 8001 	ldrb.w	r8, [sl, #1]
90024746:	b29b      	uxth	r3, r3
90024748:	f1bc 0f00 	cmp.w	ip, #0
9002474c:	f000 817b 	beq.w	90024a46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
90024750:	f81a 4002 	ldrb.w	r4, [sl, r2]
90024754:	eb0a 0b02 	add.w	fp, sl, r2
90024758:	fa1f fa8c 	uxth.w	sl, ip
9002475c:	940a      	str	r4, [sp, #40]	@ 0x28
9002475e:	fb0a fe0e 	mul.w	lr, sl, lr
90024762:	f89b 4001 	ldrb.w	r4, [fp, #1]
90024766:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
9002476a:	eba5 050e 	sub.w	r5, r5, lr
9002476e:	940b      	str	r4, [sp, #44]	@ 0x2c
90024770:	fa1f fa8a 	uxth.w	sl, sl
90024774:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
90024776:	b2ad      	uxth	r5, r5
90024778:	eba3 030a 	sub.w	r3, r3, sl
9002477c:	fb08 f505 	mul.w	r5, r8, r5
90024780:	b29b      	uxth	r3, r3
90024782:	fb09 5303 	mla	r3, r9, r3, r5
90024786:	fb0a 3304 	mla	r3, sl, r4, r3
9002478a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
9002478c:	fb0e 3304 	mla	r3, lr, r4, r3
90024790:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024794:	2b00      	cmp	r3, #0
90024796:	f000 80d1 	beq.w	9002493c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
9002479a:	9c08      	ldr	r4, [sp, #32]
9002479c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
900247a0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
900247a4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
900247a8:	f000 8152 	beq.w	90024a50 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
900247ac:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
900247b0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
900247b4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900247b8:	fb0a fe0e 	mul.w	lr, sl, lr
900247bc:	fb09 f000 	mul.w	r0, r9, r0
900247c0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
900247c4:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
900247c8:	f100 0b20 	add.w	fp, r0, #32
900247cc:	44ce      	add	lr, r9
900247ce:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
900247d2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
900247d6:	ea4f 2919 	mov.w	r9, r9, lsr #8
900247da:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
900247de:	ea4e 0909 	orr.w	r9, lr, r9
900247e2:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
900247e6:	8868      	ldrh	r0, [r5, #2]
900247e8:	d019      	beq.n	9002481e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
900247ea:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
900247ee:	ea4f 0ae8 	mov.w	sl, r8, asr #3
900247f2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
900247f6:	fb0a fe0e 	mul.w	lr, sl, lr
900247fa:	fb08 f800 	mul.w	r8, r8, r0
900247fe:	ea06 105e 	and.w	r0, r6, lr, lsr #5
90024802:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
90024806:	f108 0b20 	add.w	fp, r8, #32
9002480a:	4486      	add	lr, r0
9002480c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
90024810:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
90024814:	0a00      	lsrs	r0, r0, #8
90024816:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
9002481a:	ea4e 0000 	orr.w	r0, lr, r0
9002481e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
90024822:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90024826:	ea4f 4a00 	mov.w	sl, r0, lsl #16
9002482a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
9002482e:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
90024832:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024836:	ea4e 0909 	orr.w	r9, lr, r9
9002483a:	ea4a 0000 	orr.w	r0, sl, r0
9002483e:	f1bc 0f00 	cmp.w	ip, #0
90024842:	f000 8107 	beq.w	90024a54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
90024846:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
9002484a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
9002484c:	3a01      	subs	r2, #1
9002484e:	2cff      	cmp	r4, #255	@ 0xff
90024850:	ea4f 0242 	mov.w	r2, r2, lsl #1
90024854:	f102 0202 	add.w	r2, r2, #2
90024858:	eb05 0e02 	add.w	lr, r5, r2
9002485c:	5aaa      	ldrh	r2, [r5, r2]
9002485e:	d018      	beq.n	90024892 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
90024860:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
90024864:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024868:	ea4f 08e4 	mov.w	r8, r4, asr #3
9002486c:	fb04 fa02 	mul.w	sl, r4, r2
90024870:	fb08 f805 	mul.w	r8, r8, r5
90024874:	f10a 0520 	add.w	r5, sl, #32
90024878:	ea06 1258 	and.w	r2, r6, r8, lsr #5
9002487c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90024880:	eb05 251a 	add.w	r5, r5, sl, lsr #8
90024884:	4442      	add	r2, r8
90024886:	0a2d      	lsrs	r5, r5, #8
90024888:	ea06 1252 	and.w	r2, r6, r2, lsr #5
9002488c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90024890:	432a      	orrs	r2, r5
90024892:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
90024894:	f8be 5002 	ldrh.w	r5, [lr, #2]
90024898:	2cff      	cmp	r4, #255	@ 0xff
9002489a:	d01a      	beq.n	900248d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
9002489c:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
900248a0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
900248a4:	ea4f 08e4 	mov.w	r8, r4, asr #3
900248a8:	fb04 fa05 	mul.w	sl, r4, r5
900248ac:	fb08 f80e 	mul.w	r8, r8, lr
900248b0:	f10a 0e20 	add.w	lr, sl, #32
900248b4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
900248b8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
900248bc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
900248c0:	4445      	add	r5, r8
900248c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900248c6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
900248ca:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
900248ce:	ea45 050e 	orr.w	r5, r5, lr
900248d2:	fb1c fe01 	smulbb	lr, ip, r1
900248d6:	f1cc 0810 	rsb	r8, ip, #16
900248da:	ea4f 4a02 	mov.w	sl, r2, lsl #16
900248de:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900248e2:	ea4f 0eee 	mov.w	lr, lr, asr #3
900248e6:	eba8 0801 	sub.w	r8, r8, r1
900248ea:	ea4f 4b05 	mov.w	fp, r5, lsl #16
900248ee:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900248f2:	ebce 0141 	rsb	r1, lr, r1, lsl #1
900248f6:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
900248fa:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
900248fe:	ea4a 0202 	orr.w	r2, sl, r2
90024902:	4341      	muls	r1, r0
90024904:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
90024908:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002490c:	fb09 1108 	mla	r1, r9, r8, r1
90024910:	ea4b 0505 	orr.w	r5, fp, r5
90024914:	fb0c 1102 	mla	r1, ip, r2, r1
90024918:	fb0e 1e05 	mla	lr, lr, r5, r1
9002491c:	ea4f 525e 	mov.w	r2, lr, lsr #21
90024920:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
90024924:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024928:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9002492c:	ea42 0e0e 	orr.w	lr, r2, lr
90024930:	fa1f f28e 	uxth.w	r2, lr
90024934:	2bff      	cmp	r3, #255	@ 0xff
90024936:	f040 80a1 	bne.w	90024a7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
9002493a:	803a      	strh	r2, [r7, #0]
9002493c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
9002493e:	3702      	adds	r7, #2
90024940:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
90024942:	4413      	add	r3, r2
90024944:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90024946:	931d      	str	r3, [sp, #116]	@ 0x74
90024948:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002494a:	441a      	add	r2, r3
9002494c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
9002494e:	3b01      	subs	r3, #1
90024950:	921e      	str	r2, [sp, #120]	@ 0x78
90024952:	930f      	str	r3, [sp, #60]	@ 0x3c
90024954:	e6c7      	b.n	900246e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90024956:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90024958:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
9002495a:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
9002495c:	4433      	add	r3, r6
9002495e:	931d      	str	r3, [sp, #116]	@ 0x74
90024960:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024962:	441c      	add	r4, r3
90024964:	9b06      	ldr	r3, [sp, #24]
90024966:	3b01      	subs	r3, #1
90024968:	941e      	str	r4, [sp, #120]	@ 0x78
9002496a:	9306      	str	r3, [sp, #24]
9002496c:	9b07      	ldr	r3, [sp, #28]
9002496e:	3302      	adds	r3, #2
90024970:	9307      	str	r3, [sp, #28]
90024972:	e696      	b.n	900246a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
90024974:	d028      	beq.n	900249c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
90024976:	9b06      	ldr	r3, [sp, #24]
90024978:	981f      	ldr	r0, [sp, #124]	@ 0x7c
9002497a:	3b01      	subs	r3, #1
9002497c:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
9002497e:	fb00 5003 	mla	r0, r0, r3, r5
90024982:	1400      	asrs	r0, r0, #16
90024984:	f53f aeaa 	bmi.w	900246dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90024988:	3901      	subs	r1, #1
9002498a:	4288      	cmp	r0, r1
9002498c:	f6bf aea6 	bge.w	900246dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
90024990:	9920      	ldr	r1, [sp, #128]	@ 0x80
90024992:	981e      	ldr	r0, [sp, #120]	@ 0x78
90024994:	fb01 0303 	mla	r3, r1, r3, r0
90024998:	141b      	asrs	r3, r3, #16
9002499a:	f53f ae9f 	bmi.w	900246dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
9002499e:	3a01      	subs	r2, #1
900249a0:	4293      	cmp	r3, r2
900249a2:	f6bf ae9b 	bge.w	900246dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
900249a6:	9b06      	ldr	r3, [sp, #24]
900249a8:	f64f 061f 	movw	r6, #63519	@ 0xf81f
900249ac:	f8dd e01c 	ldr.w	lr, [sp, #28]
900249b0:	930f      	str	r3, [sp, #60]	@ 0x3c
900249b2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
900249b4:	2b00      	cmp	r3, #0
900249b6:	f300 80b6 	bgt.w	90024b26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
900249ba:	9b06      	ldr	r3, [sp, #24]
900249bc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
900249c0:	9b07      	ldr	r3, [sp, #28]
900249c2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
900249c6:	9307      	str	r3, [sp, #28]
900249c8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
900249ca:	2b00      	cmp	r3, #0
900249cc:	f340 8218 	ble.w	90024e00 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
900249d0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900249d4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900249d6:	ee30 0a04 	vadd.f32	s0, s0, s8
900249da:	ee70 0aa4 	vadd.f32	s1, s1, s9
900249de:	eef0 6a62 	vmov.f32	s13, s5
900249e2:	eec7 7a00 	vdiv.f32	s15, s14, s0
900249e6:	ee31 1a05 	vadd.f32	s2, s2, s10
900249ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900249ee:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
900249f2:	eef0 6a43 	vmov.f32	s13, s6
900249f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900249fa:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
900249fe:	ee20 7aa7 	vmul.f32	s14, s1, s15
90024a02:	ee61 7a27 	vmul.f32	s15, s2, s15
90024a06:	ee77 2a62 	vsub.f32	s5, s14, s5
90024a0a:	ee37 3ac3 	vsub.f32	s6, s15, s6
90024a0e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90024a12:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90024a16:	ee12 2a90 	vmov	r2, s5
90024a1a:	eef0 2a47 	vmov.f32	s5, s14
90024a1e:	fb92 f3f3 	sdiv	r3, r2, r3
90024a22:	ee13 2a10 	vmov	r2, s6
90024a26:	931f      	str	r3, [sp, #124]	@ 0x7c
90024a28:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024a2a:	eeb0 3a67 	vmov.f32	s6, s15
90024a2e:	fb92 f3f3 	sdiv	r3, r2, r3
90024a32:	9320      	str	r3, [sp, #128]	@ 0x80
90024a34:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90024a36:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90024a38:	3b01      	subs	r3, #1
90024a3a:	930e      	str	r3, [sp, #56]	@ 0x38
90024a3c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90024a3e:	bf08      	it	eq
90024a40:	4613      	moveq	r3, r2
90024a42:	9306      	str	r3, [sp, #24]
90024a44:	e61f      	b.n	90024686 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
90024a46:	fb08 f505 	mul.w	r5, r8, r5
90024a4a:	fb09 5303 	mla	r3, r9, r3, r5
90024a4e:	e69f      	b.n	90024790 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
90024a50:	4681      	mov	r9, r0
90024a52:	e6c6      	b.n	900247e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
90024a54:	f1c1 0210 	rsb	r2, r1, #16
90024a58:	4341      	muls	r1, r0
90024a5a:	fb09 1902 	mla	r9, r9, r2, r1
90024a5e:	ea4f 0949 	mov.w	r9, r9, lsl #1
90024a62:	ea4f 5259 	mov.w	r2, r9, lsr #21
90024a66:	ea4f 1959 	mov.w	r9, r9, lsr #5
90024a6a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024a6e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90024a72:	ea42 0909 	orr.w	r9, r2, r9
90024a76:	fa1f f289 	uxth.w	r2, r9
90024a7a:	e75b      	b.n	90024934 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
90024a7c:	f8b7 c000 	ldrh.w	ip, [r7]
90024a80:	43db      	mvns	r3, r3
90024a82:	ea4f 202c 	mov.w	r0, ip, asr #8
90024a86:	fa5f fe83 	uxtb.w	lr, r3
90024a8a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90024a8e:	ea4f 05ec 	mov.w	r5, ip, asr #3
90024a92:	ea4f 03cc 	mov.w	r3, ip, lsl #3
90024a96:	fb00 f00e 	mul.w	r0, r0, lr
90024a9a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90024a9e:	b2db      	uxtb	r3, r3
90024aa0:	1c41      	adds	r1, r0, #1
90024aa2:	fb05 f50e 	mul.w	r5, r5, lr
90024aa6:	fb03 f30e 	mul.w	r3, r3, lr
90024aaa:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90024aae:	1211      	asrs	r1, r2, #8
90024ab0:	f021 0107 	bic.w	r1, r1, #7
90024ab4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
90024ab8:	48d3      	ldr	r0, [pc, #844]	@ (90024e08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90024aba:	b2c9      	uxtb	r1, r1
90024abc:	ea00 2001 	and.w	r0, r0, r1, lsl #8
90024ac0:	1c69      	adds	r1, r5, #1
90024ac2:	eb01 2515 	add.w	r5, r1, r5, lsr #8
90024ac6:	10d1      	asrs	r1, r2, #3
90024ac8:	00d2      	lsls	r2, r2, #3
90024aca:	f021 0103 	bic.w	r1, r1, #3
90024ace:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90024ad2:	00c9      	lsls	r1, r1, #3
90024ad4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90024ad8:	4301      	orrs	r1, r0
90024ada:	1c58      	adds	r0, r3, #1
90024adc:	eb00 2313 	add.w	r3, r0, r3, lsr #8
90024ae0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
90024ae4:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90024ae8:	430a      	orrs	r2, r1
90024aea:	e726      	b.n	9002493a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
90024aec:	f115 0e01 	adds.w	lr, r5, #1
90024af0:	f53f af24 	bmi.w	9002493c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90024af4:	4572      	cmp	r2, lr
90024af6:	f6ff af21 	blt.w	9002493c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90024afa:	f110 0e01 	adds.w	lr, r0, #1
90024afe:	f53f af1d 	bmi.w	9002493c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90024b02:	4573      	cmp	r3, lr
90024b04:	f6ff af1a 	blt.w	9002493c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90024b08:	b21b      	sxth	r3, r3
90024b0a:	b212      	sxth	r2, r2
90024b0c:	9301      	str	r3, [sp, #4]
90024b0e:	9200      	str	r2, [sp, #0]
90024b10:	e9cd 1c04 	strd	r1, ip, [sp, #16]
90024b14:	e9cd 5002 	strd	r5, r0, [sp, #8]
90024b18:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
90024b1c:	4639      	mov	r1, r7
90024b1e:	9811      	ldr	r0, [sp, #68]	@ 0x44
90024b20:	f7ff fc22 	bl	90024368 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
90024b24:	e70a      	b.n	9002493c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
90024b26:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90024b28:	f3c3 3203 	ubfx	r2, r3, #12, #4
90024b2c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90024b2e:	f3c3 3503 	ubfx	r5, r3, #12, #4
90024b32:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024b34:	fa1f fc82 	uxth.w	ip, r2
90024b38:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024b3c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
90024b3e:	ea4f 100c 	mov.w	r0, ip, lsl #4
90024b42:	141f      	asrs	r7, r3, #16
90024b44:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90024b46:	141b      	asrs	r3, r3, #16
90024b48:	fb01 3707 	mla	r7, r1, r7, r3
90024b4c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90024b4e:	eb03 0a07 	add.w	sl, r3, r7
90024b52:	f813 9007 	ldrb.w	r9, [r3, r7]
90024b56:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90024b5a:	f89a 8001 	ldrb.w	r8, [sl, #1]
90024b5e:	b29b      	uxth	r3, r3
90024b60:	2d00      	cmp	r5, #0
90024b62:	f000 80fe 	beq.w	90024d62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
90024b66:	f81a 4001 	ldrb.w	r4, [sl, r1]
90024b6a:	eb0a 0b01 	add.w	fp, sl, r1
90024b6e:	fa1f fa85 	uxth.w	sl, r5
90024b72:	940c      	str	r4, [sp, #48]	@ 0x30
90024b74:	fb0a fc0c 	mul.w	ip, sl, ip
90024b78:	f89b 4001 	ldrb.w	r4, [fp, #1]
90024b7c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
90024b80:	eba0 000c 	sub.w	r0, r0, ip
90024b84:	940d      	str	r4, [sp, #52]	@ 0x34
90024b86:	fa1f fa8a 	uxth.w	sl, sl
90024b8a:	b280      	uxth	r0, r0
90024b8c:	eba3 030a 	sub.w	r3, r3, sl
90024b90:	fb08 f000 	mul.w	r0, r8, r0
90024b94:	b29b      	uxth	r3, r3
90024b96:	fb09 0303 	mla	r3, r9, r3, r0
90024b9a:	980c      	ldr	r0, [sp, #48]	@ 0x30
90024b9c:	fb0a 3300 	mla	r3, sl, r0, r3
90024ba0:	fb0c 3304 	mla	r3, ip, r4, r3
90024ba4:	f3c3 2307 	ubfx	r3, r3, #8, #8
90024ba8:	2b00      	cmp	r3, #0
90024baa:	f000 80cc 	beq.w	90024d46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90024bae:	9808      	ldr	r0, [sp, #32]
90024bb0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
90024bb4:	9c08      	ldr	r4, [sp, #32]
90024bb6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
90024bba:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
90024bbe:	f000 80d5 	beq.w	90024d6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
90024bc2:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90024bc6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
90024bca:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024bce:	fb0a fc0c 	mul.w	ip, sl, ip
90024bd2:	fb09 f707 	mul.w	r7, r9, r7
90024bd6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
90024bda:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90024bde:	f107 0b20 	add.w	fp, r7, #32
90024be2:	44cc      	add	ip, r9
90024be4:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
90024be8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90024bec:	ea4f 2919 	mov.w	r9, r9, lsr #8
90024bf0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
90024bf4:	ea4c 0909 	orr.w	r9, ip, r9
90024bf8:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
90024bfc:	8847      	ldrh	r7, [r0, #2]
90024bfe:	d019      	beq.n	90024c34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
90024c00:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
90024c04:	ea4f 0ae8 	mov.w	sl, r8, asr #3
90024c08:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024c0c:	fb0a fc0c 	mul.w	ip, sl, ip
90024c10:	fb08 f807 	mul.w	r8, r8, r7
90024c14:	ea06 175c 	and.w	r7, r6, ip, lsr #5
90024c18:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
90024c1c:	f108 0b20 	add.w	fp, r8, #32
90024c20:	44bc      	add	ip, r7
90024c22:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
90024c26:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
90024c2a:	0a3f      	lsrs	r7, r7, #8
90024c2c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024c30:	ea4c 0707 	orr.w	r7, ip, r7
90024c34:	ea4f 4c09 	mov.w	ip, r9, lsl #16
90024c38:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
90024c3c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
90024c40:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90024c44:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
90024c48:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024c4c:	ea4c 0909 	orr.w	r9, ip, r9
90024c50:	ea4a 0707 	orr.w	r7, sl, r7
90024c54:	2d00      	cmp	r5, #0
90024c56:	f000 808b 	beq.w	90024d70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
90024c5a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
90024c5e:	3901      	subs	r1, #1
90024c60:	0049      	lsls	r1, r1, #1
90024c62:	3102      	adds	r1, #2
90024c64:	eb00 0c01 	add.w	ip, r0, r1
90024c68:	5a41      	ldrh	r1, [r0, r1]
90024c6a:	980c      	ldr	r0, [sp, #48]	@ 0x30
90024c6c:	28ff      	cmp	r0, #255	@ 0xff
90024c6e:	d019      	beq.n	90024ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
90024c70:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
90024c74:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
90024c76:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90024c7a:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024c7e:	fb04 fa01 	mul.w	sl, r4, r1
90024c82:	fb08 f800 	mul.w	r8, r8, r0
90024c86:	f10a 0020 	add.w	r0, sl, #32
90024c8a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
90024c8e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90024c92:	eb00 201a 	add.w	r0, r0, sl, lsr #8
90024c96:	4441      	add	r1, r8
90024c98:	0a00      	lsrs	r0, r0, #8
90024c9a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
90024c9e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024ca2:	4301      	orrs	r1, r0
90024ca4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
90024ca6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
90024caa:	2cff      	cmp	r4, #255	@ 0xff
90024cac:	d01a      	beq.n	90024ce4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
90024cae:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
90024cb2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024cb6:	ea4f 08e4 	mov.w	r8, r4, asr #3
90024cba:	fb04 fa00 	mul.w	sl, r4, r0
90024cbe:	fb08 f80c 	mul.w	r8, r8, ip
90024cc2:	f10a 0c20 	add.w	ip, sl, #32
90024cc6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
90024cca:	f608 0801 	addw	r8, r8, #2049	@ 0x801
90024cce:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
90024cd2:	4440      	add	r0, r8
90024cd4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90024cd8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
90024cdc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
90024ce0:	ea40 000c 	orr.w	r0, r0, ip
90024ce4:	fb15 fc02 	smulbb	ip, r5, r2
90024ce8:	f1c5 0810 	rsb	r8, r5, #16
90024cec:	ea4f 4a01 	mov.w	sl, r1, lsl #16
90024cf0:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
90024cf4:	ea4f 0cec 	mov.w	ip, ip, asr #3
90024cf8:	eba8 0802 	sub.w	r8, r8, r2
90024cfc:	ea4f 4b00 	mov.w	fp, r0, lsl #16
90024d00:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
90024d04:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
90024d08:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90024d0c:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
90024d10:	ea4a 0101 	orr.w	r1, sl, r1
90024d14:	437a      	muls	r2, r7
90024d16:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
90024d1a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90024d1e:	fb09 2208 	mla	r2, r9, r8, r2
90024d22:	ea4b 0000 	orr.w	r0, fp, r0
90024d26:	fb05 2201 	mla	r2, r5, r1, r2
90024d2a:	fb0c 2200 	mla	r2, ip, r0, r2
90024d2e:	0d57      	lsrs	r7, r2, #21
90024d30:	0952      	lsrs	r2, r2, #5
90024d32:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
90024d36:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024d3a:	433a      	orrs	r2, r7
90024d3c:	2bff      	cmp	r3, #255	@ 0xff
90024d3e:	b292      	uxth	r2, r2
90024d40:	d127      	bne.n	90024d92 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
90024d42:	f8ae 2000 	strh.w	r2, [lr]
90024d46:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
90024d48:	f10e 0e02 	add.w	lr, lr, #2
90024d4c:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
90024d4e:	4413      	add	r3, r2
90024d50:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
90024d52:	931d      	str	r3, [sp, #116]	@ 0x74
90024d54:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90024d56:	441a      	add	r2, r3
90024d58:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
90024d5a:	3b01      	subs	r3, #1
90024d5c:	921e      	str	r2, [sp, #120]	@ 0x78
90024d5e:	930f      	str	r3, [sp, #60]	@ 0x3c
90024d60:	e627      	b.n	900249b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
90024d62:	fb08 f000 	mul.w	r0, r8, r0
90024d66:	fb09 0303 	mla	r3, r9, r3, r0
90024d6a:	e71b      	b.n	90024ba4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
90024d6c:	46b9      	mov	r9, r7
90024d6e:	e743      	b.n	90024bf8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
90024d70:	f1c2 0110 	rsb	r1, r2, #16
90024d74:	437a      	muls	r2, r7
90024d76:	fb09 2901 	mla	r9, r9, r1, r2
90024d7a:	ea4f 0949 	mov.w	r9, r9, lsl #1
90024d7e:	ea4f 5059 	mov.w	r0, r9, lsr #21
90024d82:	ea4f 1259 	mov.w	r2, r9, lsr #5
90024d86:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90024d8a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024d8e:	4302      	orrs	r2, r0
90024d90:	e7d4      	b.n	90024d3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
90024d92:	f8be 7000 	ldrh.w	r7, [lr]
90024d96:	43db      	mvns	r3, r3
90024d98:	4c1b      	ldr	r4, [pc, #108]	@ (90024e08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
90024d9a:	1238      	asrs	r0, r7, #8
90024d9c:	fa5f fc83 	uxtb.w	ip, r3
90024da0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90024da4:	10fd      	asrs	r5, r7, #3
90024da6:	00fb      	lsls	r3, r7, #3
90024da8:	fb00 f00c 	mul.w	r0, r0, ip
90024dac:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
90024db0:	b2db      	uxtb	r3, r3
90024db2:	fb05 f10c 	mul.w	r1, r5, ip
90024db6:	1c45      	adds	r5, r0, #1
90024db8:	fb03 f30c 	mul.w	r3, r3, ip
90024dbc:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90024dc0:	1215      	asrs	r5, r2, #8
90024dc2:	f025 0507 	bic.w	r5, r5, #7
90024dc6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
90024dca:	1c4d      	adds	r5, r1, #1
90024dcc:	eb05 2511 	add.w	r5, r5, r1, lsr #8
90024dd0:	10d1      	asrs	r1, r2, #3
90024dd2:	b2c0      	uxtb	r0, r0
90024dd4:	f021 0103 	bic.w	r1, r1, #3
90024dd8:	00d2      	lsls	r2, r2, #3
90024dda:	ea04 2000 	and.w	r0, r4, r0, lsl #8
90024dde:	eb01 2115 	add.w	r1, r1, r5, lsr #8
90024de2:	00c9      	lsls	r1, r1, #3
90024de4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90024de8:	4308      	orrs	r0, r1
90024dea:	1c59      	adds	r1, r3, #1
90024dec:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90024df0:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90024df4:	f3c3 03c4 	ubfx	r3, r3, #3, #5
90024df8:	4318      	orrs	r0, r3
90024dfa:	f8ae 0000 	strh.w	r0, [lr]
90024dfe:	e7a2      	b.n	90024d46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
90024e00:	b013      	add	sp, #76	@ 0x4c
90024e02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90024e06:	bf00      	nop
90024e08:	fffff800 	.word	0xfffff800

90024e0c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
90024e0c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90024e10:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
90024e14:	f9bd a020 	ldrsh.w	sl, [sp, #32]
90024e18:	fb05 4c03 	mla	ip, r5, r3, r4
90024e1c:	2d00      	cmp	r5, #0
90024e1e:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
90024e22:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90024e26:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
90024e2a:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
90024e2e:	8808      	ldrh	r0, [r1, #0]
90024e30:	f2c0 80a7 	blt.w	90024f82 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90024e34:	45aa      	cmp	sl, r5
90024e36:	f340 80a4 	ble.w	90024f82 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
90024e3a:	2c00      	cmp	r4, #0
90024e3c:	f2c0 809f 	blt.w	90024f7e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90024e40:	42a3      	cmp	r3, r4
90024e42:	f340 809c 	ble.w	90024f7e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
90024e46:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
90024e4a:	1c62      	adds	r2, r4, #1
90024e4c:	f100 809c 	bmi.w	90024f88 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90024e50:	4293      	cmp	r3, r2
90024e52:	f340 8099 	ble.w	90024f88 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90024e56:	f1b9 0f00 	cmp.w	r9, #0
90024e5a:	f000 8095 	beq.w	90024f88 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
90024e5e:	f8be c002 	ldrh.w	ip, [lr, #2]
90024e62:	3501      	adds	r5, #1
90024e64:	f100 8094 	bmi.w	90024f90 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90024e68:	45aa      	cmp	sl, r5
90024e6a:	f340 8091 	ble.w	90024f90 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90024e6e:	2f00      	cmp	r7, #0
90024e70:	f000 808e 	beq.w	90024f90 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
90024e74:	2c00      	cmp	r4, #0
90024e76:	f2c0 8089 	blt.w	90024f8c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90024e7a:	42a3      	cmp	r3, r4
90024e7c:	f340 8086 	ble.w	90024f8c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
90024e80:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
90024e84:	3401      	adds	r4, #1
90024e86:	f100 8086 	bmi.w	90024f96 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90024e8a:	42a3      	cmp	r3, r4
90024e8c:	f340 8083 	ble.w	90024f96 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90024e90:	f1b9 0f00 	cmp.w	r9, #0
90024e94:	d07f      	beq.n	90024f96 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
90024e96:	3301      	adds	r3, #1
90024e98:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
90024e9c:	ea4f 4408 	mov.w	r4, r8, lsl #16
90024ea0:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
90024ea4:	fb19 fe07 	smulbb	lr, r9, r7
90024ea8:	f1c7 0210 	rsb	r2, r7, #16
90024eac:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90024eb0:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
90024eb4:	eba2 0209 	sub.w	r2, r2, r9
90024eb8:	ea44 0808 	orr.w	r8, r4, r8
90024ebc:	ea4f 440c 	mov.w	r4, ip, lsl #16
90024ec0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90024ec4:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
90024ec8:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
90024ecc:	ebce 0747 	rsb	r7, lr, r7, lsl #1
90024ed0:	ea44 0c0c 	orr.w	ip, r4, ip
90024ed4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
90024ed8:	fb04 f40c 	mul.w	r4, r4, ip
90024edc:	fb02 4808 	mla	r8, r2, r8, r4
90024ee0:	041a      	lsls	r2, r3, #16
90024ee2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90024ee6:	b2b4      	uxth	r4, r6
90024ee8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90024eec:	43f6      	mvns	r6, r6
90024eee:	4313      	orrs	r3, r2
90024ef0:	042a      	lsls	r2, r5, #16
90024ef2:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
90024ef6:	b2f6      	uxtb	r6, r6
90024ef8:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90024efc:	fb0e 8303 	mla	r3, lr, r3, r8
90024f00:	432a      	orrs	r2, r5
90024f02:	fb07 3202 	mla	r2, r7, r2, r3
90024f06:	10c7      	asrs	r7, r0, #3
90024f08:	0d53      	lsrs	r3, r2, #21
90024f0a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
90024f0e:	0952      	lsrs	r2, r2, #5
90024f10:	fb17 f706 	smulbb	r7, r7, r6
90024f14:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90024f18:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90024f1c:	431a      	orrs	r2, r3
90024f1e:	b293      	uxth	r3, r2
90024f20:	1202      	asrs	r2, r0, #8
90024f22:	121d      	asrs	r5, r3, #8
90024f24:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90024f28:	00c0      	lsls	r0, r0, #3
90024f2a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
90024f2e:	fb12 f206 	smulbb	r2, r2, r6
90024f32:	b2c0      	uxtb	r0, r0
90024f34:	fb05 2504 	mla	r5, r5, r4, r2
90024f38:	10da      	asrs	r2, r3, #3
90024f3a:	fb10 f006 	smulbb	r0, r0, r6
90024f3e:	00db      	lsls	r3, r3, #3
90024f40:	b2ad      	uxth	r5, r5
90024f42:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90024f46:	b2db      	uxtb	r3, r3
90024f48:	fb02 7204 	mla	r2, r2, r4, r7
90024f4c:	fb03 0004 	mla	r0, r3, r4, r0
90024f50:	1c6b      	adds	r3, r5, #1
90024f52:	b292      	uxth	r2, r2
90024f54:	b280      	uxth	r0, r0
90024f56:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90024f5a:	1c43      	adds	r3, r0, #1
90024f5c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90024f60:	eb03 2310 	add.w	r3, r3, r0, lsr #8
90024f64:	1c50      	adds	r0, r2, #1
90024f66:	eb00 2212 	add.w	r2, r0, r2, lsr #8
90024f6a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90024f6e:	0952      	lsrs	r2, r2, #5
90024f70:	432b      	orrs	r3, r5
90024f72:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90024f76:	4313      	orrs	r3, r2
90024f78:	800b      	strh	r3, [r1, #0]
90024f7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90024f7e:	4680      	mov	r8, r0
90024f80:	e763      	b.n	90024e4a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
90024f82:	4684      	mov	ip, r0
90024f84:	4680      	mov	r8, r0
90024f86:	e76c      	b.n	90024e62 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90024f88:	4684      	mov	ip, r0
90024f8a:	e76a      	b.n	90024e62 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
90024f8c:	4605      	mov	r5, r0
90024f8e:	e779      	b.n	90024e84 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
90024f90:	4603      	mov	r3, r0
90024f92:	4605      	mov	r5, r0
90024f94:	e782      	b.n	90024e9c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
90024f96:	4603      	mov	r3, r0
90024f98:	e780      	b.n	90024e9c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

90024f9a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90024f9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90024f9e:	b093      	sub	sp, #76	@ 0x4c
90024fa0:	461d      	mov	r5, r3
90024fa2:	9210      	str	r2, [sp, #64]	@ 0x40
90024fa4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
90024fa6:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
90024faa:	910a      	str	r1, [sp, #40]	@ 0x28
90024fac:	920b      	str	r2, [sp, #44]	@ 0x2c
90024fae:	6859      	ldr	r1, [r3, #4]
90024fb0:	681b      	ldr	r3, [r3, #0]
90024fb2:	9011      	str	r0, [sp, #68]	@ 0x44
90024fb4:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
90024fb8:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90024fbc:	fb01 2707 	mla	r7, r1, r7, r2
90024fc0:	eb03 0347 	add.w	r3, r3, r7, lsl #1
90024fc4:	9307      	str	r3, [sp, #28]
90024fc6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024fc8:	681b      	ldr	r3, [r3, #0]
90024fca:	9309      	str	r3, [sp, #36]	@ 0x24
90024fcc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
90024fce:	43db      	mvns	r3, r3
90024fd0:	b2db      	uxtb	r3, r3
90024fd2:	9308      	str	r3, [sp, #32]
90024fd4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90024fd6:	2b00      	cmp	r3, #0
90024fd8:	dc03      	bgt.n	90024fe2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90024fda:	9b10      	ldr	r3, [sp, #64]	@ 0x40
90024fdc:	2b00      	cmp	r3, #0
90024fde:	f340 8205 	ble.w	900253ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90024fe2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90024fe4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90024fe8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90024fec:	1e48      	subs	r0, r1, #1
90024fee:	f102 3cff 	add.w	ip, r2, #4294967295
90024ff2:	2d00      	cmp	r5, #0
90024ff4:	f340 80da 	ble.w	900251ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
90024ff8:	ea5f 4e24 	movs.w	lr, r4, asr #16
90024ffc:	ea4f 4326 	mov.w	r3, r6, asr #16
90025000:	d406      	bmi.n	90025010 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90025002:	4586      	cmp	lr, r0
90025004:	da04      	bge.n	90025010 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
90025006:	2b00      	cmp	r3, #0
90025008:	db02      	blt.n	90025010 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
9002500a:	4563      	cmp	r3, ip
9002500c:	f2c0 80cf 	blt.w	900251ae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
90025010:	f11e 0e01 	adds.w	lr, lr, #1
90025014:	f100 80c1 	bmi.w	9002519a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90025018:	4571      	cmp	r1, lr
9002501a:	f2c0 80be 	blt.w	9002519a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9002501e:	3301      	adds	r3, #1
90025020:	f100 80bb 	bmi.w	9002519a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
90025024:	429a      	cmp	r2, r3
90025026:	f2c0 80b8 	blt.w	9002519a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
9002502a:	46a9      	mov	r9, r5
9002502c:	f8dd 801c 	ldr.w	r8, [sp, #28]
90025030:	f1b9 0f00 	cmp.w	r9, #0
90025034:	f340 80d8 	ble.w	900251e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
90025038:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002503a:	1421      	asrs	r1, r4, #16
9002503c:	ea4f 4026 	mov.w	r0, r6, asr #16
90025040:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025044:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90025048:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
9002504c:	f100 8112 	bmi.w	90025274 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90025050:	f10e 3aff 	add.w	sl, lr, #4294967295
90025054:	4551      	cmp	r1, sl
90025056:	f280 810d 	bge.w	90025274 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
9002505a:	2800      	cmp	r0, #0
9002505c:	f2c0 810a 	blt.w	90025274 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
90025060:	f103 3aff 	add.w	sl, r3, #4294967295
90025064:	4550      	cmp	r0, sl
90025066:	f280 8105 	bge.w	90025274 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
9002506a:	fa0f f38e 	sxth.w	r3, lr
9002506e:	fb00 1103 	mla	r1, r0, r3, r1
90025072:	9809      	ldr	r0, [sp, #36]	@ 0x24
90025074:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
90025078:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
9002507c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
90025080:	f1bc 0f00 	cmp.w	ip, #0
90025084:	d007      	beq.n	90025096 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
90025086:	005b      	lsls	r3, r3, #1
90025088:	eb0a 0003 	add.w	r0, sl, r3
9002508c:	f83a 3003 	ldrh.w	r3, [sl, r3]
90025090:	930c      	str	r3, [sp, #48]	@ 0x30
90025092:	8843      	ldrh	r3, [r0, #2]
90025094:	930d      	str	r3, [sp, #52]	@ 0x34
90025096:	ea4f 400e 	mov.w	r0, lr, lsl #16
9002509a:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
9002509e:	fb12 f30c 	smulbb	r3, r2, ip
900250a2:	ea4f 4a01 	mov.w	sl, r1, lsl #16
900250a6:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900250aa:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900250ae:	10db      	asrs	r3, r3, #3
900250b0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
900250b4:	ea40 000e 	orr.w	r0, r0, lr
900250b8:	f1cc 0e10 	rsb	lr, ip, #16
900250bc:	ea4a 0101 	orr.w	r1, sl, r1
900250c0:	9f08      	ldr	r7, [sp, #32]
900250c2:	ebae 0e02 	sub.w	lr, lr, r2
900250c6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900250ca:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
900250ce:	4351      	muls	r1, r2
900250d0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
900250d2:	fb0e 1e00 	mla	lr, lr, r0, r1
900250d6:	990c      	ldr	r1, [sp, #48]	@ 0x30
900250d8:	0410      	lsls	r0, r2, #16
900250da:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900250de:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900250e2:	4310      	orrs	r0, r2
900250e4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900250e6:	0412      	lsls	r2, r2, #16
900250e8:	fb03 e000 	mla	r0, r3, r0, lr
900250ec:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
900250f0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
900250f4:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900250f8:	ea42 020e 	orr.w	r2, r2, lr
900250fc:	fb03 0302 	mla	r3, r3, r2, r0
90025100:	f8b8 0000 	ldrh.w	r0, [r8]
90025104:	0d5a      	lsrs	r2, r3, #21
90025106:	095b      	lsrs	r3, r3, #5
90025108:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002510c:	1201      	asrs	r1, r0, #8
9002510e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90025112:	ea4f 0ee0 	mov.w	lr, r0, asr #3
90025116:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002511a:	00c0      	lsls	r0, r0, #3
9002511c:	4313      	orrs	r3, r2
9002511e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
90025122:	fb11 f107 	smulbb	r1, r1, r7
90025126:	b2c0      	uxtb	r0, r0
90025128:	b29b      	uxth	r3, r3
9002512a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
9002512e:	fb10 f007 	smulbb	r0, r0, r7
90025132:	fb1e fe07 	smulbb	lr, lr, r7
90025136:	ea4f 2c23 	mov.w	ip, r3, asr #8
9002513a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
9002513e:	fb0c 1c02 	mla	ip, ip, r2, r1
90025142:	10d9      	asrs	r1, r3, #3
90025144:	00db      	lsls	r3, r3, #3
90025146:	fa1f fc8c 	uxth.w	ip, ip
9002514a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002514e:	b2db      	uxtb	r3, r3
90025150:	fb01 e102 	mla	r1, r1, r2, lr
90025154:	fb03 0302 	mla	r3, r3, r2, r0
90025158:	b289      	uxth	r1, r1
9002515a:	b29a      	uxth	r2, r3
9002515c:	f10c 0301 	add.w	r3, ip, #1
90025160:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
90025164:	1c53      	adds	r3, r2, #1
90025166:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002516a:	1c4a      	adds	r2, r1, #1
9002516c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
90025170:	eb02 2111 	add.w	r1, r2, r1, lsr #8
90025174:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025178:	0949      	lsrs	r1, r1, #5
9002517a:	ea43 030c 	orr.w	r3, r3, ip
9002517e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90025182:	430b      	orrs	r3, r1
90025184:	f8a8 3000 	strh.w	r3, [r8]
90025188:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002518a:	f108 0802 	add.w	r8, r8, #2
9002518e:	f109 39ff 	add.w	r9, r9, #4294967295
90025192:	441c      	add	r4, r3
90025194:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025196:	441e      	add	r6, r3
90025198:	e74a      	b.n	90025030 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
9002519a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002519c:	3d01      	subs	r5, #1
9002519e:	441c      	add	r4, r3
900251a0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900251a2:	441e      	add	r6, r3
900251a4:	9b07      	ldr	r3, [sp, #28]
900251a6:	3302      	adds	r3, #2
900251a8:	9307      	str	r3, [sp, #28]
900251aa:	e722      	b.n	90024ff2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
900251ac:	d022      	beq.n	900251f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
900251ae:	1e6b      	subs	r3, r5, #1
900251b0:	981f      	ldr	r0, [sp, #124]	@ 0x7c
900251b2:	fb00 4003 	mla	r0, r0, r3, r4
900251b6:	1400      	asrs	r0, r0, #16
900251b8:	f53f af37 	bmi.w	9002502a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900251bc:	3901      	subs	r1, #1
900251be:	4288      	cmp	r0, r1
900251c0:	f6bf af33 	bge.w	9002502a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900251c4:	9920      	ldr	r1, [sp, #128]	@ 0x80
900251c6:	fb01 6303 	mla	r3, r1, r3, r6
900251ca:	141b      	asrs	r3, r3, #16
900251cc:	f53f af2d 	bmi.w	9002502a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900251d0:	3a01      	subs	r2, #1
900251d2:	4293      	cmp	r3, r2
900251d4:	f6bf af29 	bge.w	9002502a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
900251d8:	46a8      	mov	r8, r5
900251da:	f8dd 901c 	ldr.w	r9, [sp, #28]
900251de:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
900251e2:	f1b8 0f00 	cmp.w	r8, #0
900251e6:	dc60      	bgt.n	900252aa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
900251e8:	9b07      	ldr	r3, [sp, #28]
900251ea:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900251ee:	eb03 0345 	add.w	r3, r3, r5, lsl #1
900251f2:	9307      	str	r3, [sp, #28]
900251f4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900251f6:	2b00      	cmp	r3, #0
900251f8:	f340 80f8 	ble.w	900253ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
900251fc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025200:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025202:	ee30 0a04 	vadd.f32	s0, s0, s8
90025206:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002520a:	eef0 6a62 	vmov.f32	s13, s5
9002520e:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025212:	ee31 1a05 	vadd.f32	s2, s2, s10
90025216:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
9002521a:	ee16 4a90 	vmov	r4, s13
9002521e:	eef0 6a43 	vmov.f32	s13, s6
90025222:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025226:	ee16 6a90 	vmov	r6, s13
9002522a:	ee20 7aa7 	vmul.f32	s14, s1, s15
9002522e:	ee61 7a27 	vmul.f32	s15, s2, s15
90025232:	ee77 2a62 	vsub.f32	s5, s14, s5
90025236:	ee37 3ac3 	vsub.f32	s6, s15, s6
9002523a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
9002523e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025242:	ee12 2a90 	vmov	r2, s5
90025246:	eef0 2a47 	vmov.f32	s5, s14
9002524a:	fb92 f3f3 	sdiv	r3, r2, r3
9002524e:	ee13 2a10 	vmov	r2, s6
90025252:	931f      	str	r3, [sp, #124]	@ 0x7c
90025254:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90025256:	eeb0 3a67 	vmov.f32	s6, s15
9002525a:	fb92 f3f3 	sdiv	r3, r2, r3
9002525e:	9320      	str	r3, [sp, #128]	@ 0x80
90025260:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90025262:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90025264:	3b01      	subs	r3, #1
90025266:	930a      	str	r3, [sp, #40]	@ 0x28
90025268:	bf08      	it	eq
9002526a:	4615      	moveq	r5, r2
9002526c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002526e:	bf18      	it	ne
90025270:	461d      	movne	r5, r3
90025272:	e6af      	b.n	90024fd4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90025274:	f111 0a01 	adds.w	sl, r1, #1
90025278:	d486      	bmi.n	90025188 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002527a:	45d6      	cmp	lr, sl
9002527c:	db84      	blt.n	90025188 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002527e:	f110 0a01 	adds.w	sl, r0, #1
90025282:	d481      	bmi.n	90025188 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
90025284:	4553      	cmp	r3, sl
90025286:	f6ff af7f 	blt.w	90025188 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
9002528a:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
9002528c:	b21b      	sxth	r3, r3
9002528e:	9101      	str	r1, [sp, #4]
90025290:	4641      	mov	r1, r8
90025292:	9300      	str	r3, [sp, #0]
90025294:	fa0f f38e 	sxth.w	r3, lr
90025298:	e9cd 0202 	strd	r0, r2, [sp, #8]
9002529c:	e9cd c704 	strd	ip, r7, [sp, #16]
900252a0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
900252a2:	9811      	ldr	r0, [sp, #68]	@ 0x44
900252a4:	f7ff fdb2 	bl	90024e0c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
900252a8:	e76e      	b.n	90025188 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
900252aa:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900252ac:	1430      	asrs	r0, r6, #16
900252ae:	9f09      	ldr	r7, [sp, #36]	@ 0x24
900252b0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
900252b4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900252b8:	1423      	asrs	r3, r4, #16
900252ba:	f3c4 3203 	ubfx	r2, r4, #12, #4
900252be:	fb01 3000 	mla	r0, r1, r0, r3
900252c2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900252c4:	eb03 0340 	add.w	r3, r3, r0, lsl #1
900252c8:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
900252cc:	8858      	ldrh	r0, [r3, #2]
900252ce:	f1be 0f00 	cmp.w	lr, #0
900252d2:	d00b      	beq.n	900252ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
900252d4:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
900252d8:	3901      	subs	r1, #1
900252da:	0049      	lsls	r1, r1, #1
900252dc:	3102      	adds	r1, #2
900252de:	eb03 0b01 	add.w	fp, r3, r1
900252e2:	5a5b      	ldrh	r3, [r3, r1]
900252e4:	930e      	str	r3, [sp, #56]	@ 0x38
900252e6:	f8bb 3002 	ldrh.w	r3, [fp, #2]
900252ea:	930f      	str	r3, [sp, #60]	@ 0x3c
900252ec:	ea4f 410c 	mov.w	r1, ip, lsl #16
900252f0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900252f4:	fb12 f30e 	smulbb	r3, r2, lr
900252f8:	ea4f 4b00 	mov.w	fp, r0, lsl #16
900252fc:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
90025300:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025304:	10db      	asrs	r3, r3, #3
90025306:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
9002530a:	ea41 010c 	orr.w	r1, r1, ip
9002530e:	f1ce 0c10 	rsb	ip, lr, #16
90025312:	ea4b 0000 	orr.w	r0, fp, r0
90025316:	9f08      	ldr	r7, [sp, #32]
90025318:	ebac 0c02 	sub.w	ip, ip, r2
9002531c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
90025320:	f108 38ff 	add.w	r8, r8, #4294967295
90025324:	4350      	muls	r0, r2
90025326:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
9002532a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002532c:	fb0c 0c01 	mla	ip, ip, r1, r0
90025330:	980e      	ldr	r0, [sp, #56]	@ 0x38
90025332:	ea4f 4b02 	mov.w	fp, r2, lsl #16
90025336:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
9002533a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
9002533c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025340:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90025344:	0412      	lsls	r2, r2, #16
90025346:	ea4b 0101 	orr.w	r1, fp, r1
9002534a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
9002534e:	fb03 c101 	mla	r1, r3, r1, ip
90025352:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90025356:	4302      	orrs	r2, r0
90025358:	fb03 1202 	mla	r2, r3, r2, r1
9002535c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
90025360:	0952      	lsrs	r2, r2, #5
90025362:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
90025366:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
9002536a:	f8b9 2000 	ldrh.w	r2, [r9]
9002536e:	ea4b 0303 	orr.w	r3, fp, r3
90025372:	1211      	asrs	r1, r2, #8
90025374:	ea4f 0ce2 	mov.w	ip, r2, asr #3
90025378:	b29b      	uxth	r3, r3
9002537a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
9002537e:	00d2      	lsls	r2, r2, #3
90025380:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
90025384:	fb11 f107 	smulbb	r1, r1, r7
90025388:	1218      	asrs	r0, r3, #8
9002538a:	fb1c fc07 	smulbb	ip, ip, r7
9002538e:	b2d2      	uxtb	r2, r2
90025390:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90025394:	fb12 f207 	smulbb	r2, r2, r7
90025398:	fb00 100a 	mla	r0, r0, sl, r1
9002539c:	10d9      	asrs	r1, r3, #3
9002539e:	00db      	lsls	r3, r3, #3
900253a0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
900253a4:	b280      	uxth	r0, r0
900253a6:	b2db      	uxtb	r3, r3
900253a8:	fb01 c10a 	mla	r1, r1, sl, ip
900253ac:	fb03 230a 	mla	r3, r3, sl, r2
900253b0:	1c42      	adds	r2, r0, #1
900253b2:	b289      	uxth	r1, r1
900253b4:	b29b      	uxth	r3, r3
900253b6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900253ba:	f101 0c01 	add.w	ip, r1, #1
900253be:	1c5a      	adds	r2, r3, #1
900253c0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
900253c4:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
900253c8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900253cc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900253ce:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900253d2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
900253d6:	441c      	add	r4, r3
900253d8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900253dc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900253de:	4310      	orrs	r0, r2
900253e0:	441e      	add	r6, r3
900253e2:	ea40 000c 	orr.w	r0, r0, ip
900253e6:	f829 0b02 	strh.w	r0, [r9], #2
900253ea:	e6fa      	b.n	900251e2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
900253ec:	b013      	add	sp, #76	@ 0x4c
900253ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900253f2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
900253f2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
900253f6:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
900253fa:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
900253fe:	fb0e 4703 	mla	r7, lr, r3, r4
90025402:	f1be 0f00 	cmp.w	lr, #0
90025406:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
9002540a:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
9002540e:	eb02 0847 	add.w	r8, r2, r7, lsl #1
90025412:	8808      	ldrh	r0, [r1, #0]
90025414:	db60      	blt.n	900254d8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
90025416:	45f1      	cmp	r9, lr
90025418:	dd5e      	ble.n	900254d8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
9002541a:	2c00      	cmp	r4, #0
9002541c:	db5a      	blt.n	900254d4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
9002541e:	42a3      	cmp	r3, r4
90025420:	dd58      	ble.n	900254d4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
90025422:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
90025426:	1c62      	adds	r2, r4, #1
90025428:	d459      	bmi.n	900254de <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
9002542a:	4293      	cmp	r3, r2
9002542c:	dd57      	ble.n	900254de <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
9002542e:	2d00      	cmp	r5, #0
90025430:	d055      	beq.n	900254de <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
90025432:	f8b8 7002 	ldrh.w	r7, [r8, #2]
90025436:	f11e 0e01 	adds.w	lr, lr, #1
9002543a:	d454      	bmi.n	900254e6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
9002543c:	45f1      	cmp	r9, lr
9002543e:	dd52      	ble.n	900254e6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90025440:	2e00      	cmp	r6, #0
90025442:	d050      	beq.n	900254e6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
90025444:	2c00      	cmp	r4, #0
90025446:	db4c      	blt.n	900254e2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
90025448:	42a3      	cmp	r3, r4
9002544a:	dd4a      	ble.n	900254e2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
9002544c:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
90025450:	3401      	adds	r4, #1
90025452:	d405      	bmi.n	90025460 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90025454:	42a3      	cmp	r3, r4
90025456:	dd03      	ble.n	90025460 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
90025458:	b115      	cbz	r5, 90025460 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
9002545a:	3301      	adds	r3, #1
9002545c:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
90025460:	fb15 f406 	smulbb	r4, r5, r6
90025464:	ea4f 430c 	mov.w	r3, ip, lsl #16
90025468:	ea4f 4e07 	mov.w	lr, r7, lsl #16
9002546c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
90025470:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
90025474:	f3c4 04c7 	ubfx	r4, r4, #3, #8
90025478:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
9002547c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
90025480:	ea43 0c0c 	orr.w	ip, r3, ip
90025484:	f1c6 0310 	rsb	r3, r6, #16
90025488:	ea4e 0707 	orr.w	r7, lr, r7
9002548c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
90025490:	1b5b      	subs	r3, r3, r5
90025492:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
90025496:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002549a:	437d      	muls	r5, r7
9002549c:	fb03 5c0c 	mla	ip, r3, ip, r5
900254a0:	0403      	lsls	r3, r0, #16
900254a2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900254a6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900254aa:	4318      	orrs	r0, r3
900254ac:	0413      	lsls	r3, r2, #16
900254ae:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
900254b2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
900254b6:	fb04 c000 	mla	r0, r4, r0, ip
900254ba:	4313      	orrs	r3, r2
900254bc:	fb06 0003 	mla	r0, r6, r3, r0
900254c0:	0d43      	lsrs	r3, r0, #21
900254c2:	0940      	lsrs	r0, r0, #5
900254c4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900254c8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
900254cc:	4318      	orrs	r0, r3
900254ce:	8008      	strh	r0, [r1, #0]
900254d0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
900254d4:	4684      	mov	ip, r0
900254d6:	e7a6      	b.n	90025426 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
900254d8:	4607      	mov	r7, r0
900254da:	4684      	mov	ip, r0
900254dc:	e7ab      	b.n	90025436 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
900254de:	4607      	mov	r7, r0
900254e0:	e7a9      	b.n	90025436 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
900254e2:	4602      	mov	r2, r0
900254e4:	e7b4      	b.n	90025450 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
900254e6:	4602      	mov	r2, r0
900254e8:	e7ba      	b.n	90025460 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

900254ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
900254ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900254ee:	b08f      	sub	sp, #60	@ 0x3c
900254f0:	461d      	mov	r5, r3
900254f2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
900254f4:	9107      	str	r1, [sp, #28]
900254f6:	920c      	str	r2, [sp, #48]	@ 0x30
900254f8:	6859      	ldr	r1, [r3, #4]
900254fa:	681b      	ldr	r3, [r3, #0]
900254fc:	900d      	str	r0, [sp, #52]	@ 0x34
900254fe:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
90025502:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
90025506:	fb01 2707 	mla	r7, r1, r7, r2
9002550a:	eb03 0747 	add.w	r7, r3, r7, lsl #1
9002550e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025510:	f8d3 8000 	ldr.w	r8, [r3]
90025514:	9b07      	ldr	r3, [sp, #28]
90025516:	2b00      	cmp	r3, #0
90025518:	dc03      	bgt.n	90025522 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
9002551a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
9002551c:	2b00      	cmp	r3, #0
9002551e:	f340 8182 	ble.w	90025826 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
90025522:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025524:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025528:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002552c:	1e48      	subs	r0, r1, #1
9002552e:	f102 3cff 	add.w	ip, r2, #4294967295
90025532:	2d00      	cmp	r5, #0
90025534:	f340 809b 	ble.w	9002566e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
90025538:	ea5f 4e24 	movs.w	lr, r4, asr #16
9002553c:	ea4f 4326 	mov.w	r3, r6, asr #16
90025540:	d406      	bmi.n	90025550 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90025542:	4586      	cmp	lr, r0
90025544:	da04      	bge.n	90025550 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
90025546:	2b00      	cmp	r3, #0
90025548:	db02      	blt.n	90025550 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
9002554a:	4563      	cmp	r3, ip
9002554c:	f2c0 8090 	blt.w	90025670 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
90025550:	f11e 0e01 	adds.w	lr, lr, #1
90025554:	f100 8084 	bmi.w	90025660 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90025558:	4571      	cmp	r1, lr
9002555a:	f2c0 8081 	blt.w	90025660 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
9002555e:	3301      	adds	r3, #1
90025560:	d47e      	bmi.n	90025660 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90025562:	429a      	cmp	r2, r3
90025564:	db7c      	blt.n	90025660 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
90025566:	46aa      	mov	sl, r5
90025568:	46b9      	mov	r9, r7
9002556a:	f1ba 0f00 	cmp.w	sl, #0
9002556e:	f340 8099 	ble.w	900256a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
90025572:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90025574:	1421      	asrs	r1, r4, #16
90025576:	ea4f 4026 	mov.w	r0, r6, asr #16
9002557a:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002557e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
90025582:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
90025586:	f100 80d1 	bmi.w	9002572c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9002558a:	f10e 3bff 	add.w	fp, lr, #4294967295
9002558e:	4559      	cmp	r1, fp
90025590:	f280 80cc 	bge.w	9002572c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
90025594:	2800      	cmp	r0, #0
90025596:	f2c0 80c9 	blt.w	9002572c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
9002559a:	f103 3bff 	add.w	fp, r3, #4294967295
9002559e:	4558      	cmp	r0, fp
900255a0:	f280 80c4 	bge.w	9002572c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
900255a4:	fa0f fe8e 	sxth.w	lr, lr
900255a8:	fb00 110e 	mla	r1, r0, lr, r1
900255ac:	eb08 0041 	add.w	r0, r8, r1, lsl #1
900255b0:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
900255b4:	8841      	ldrh	r1, [r0, #2]
900255b6:	f1bc 0f00 	cmp.w	ip, #0
900255ba:	d00b      	beq.n	900255d4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
900255bc:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
900255c0:	3b01      	subs	r3, #1
900255c2:	005b      	lsls	r3, r3, #1
900255c4:	3302      	adds	r3, #2
900255c6:	eb00 0e03 	add.w	lr, r0, r3
900255ca:	5ac3      	ldrh	r3, [r0, r3]
900255cc:	9308      	str	r3, [sp, #32]
900255ce:	f8be 3002 	ldrh.w	r3, [lr, #2]
900255d2:	9309      	str	r3, [sp, #36]	@ 0x24
900255d4:	ea4f 400b 	mov.w	r0, fp, lsl #16
900255d8:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
900255dc:	fb12 f30c 	smulbb	r3, r2, ip
900255e0:	f1cc 0e10 	rsb	lr, ip, #16
900255e4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900255e8:	10db      	asrs	r3, r3, #3
900255ea:	ebae 0e02 	sub.w	lr, lr, r2
900255ee:	ea40 000b 	orr.w	r0, r0, fp
900255f2:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900255f6:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900255fa:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900255fe:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
90025602:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
90025606:	ea4b 0101 	orr.w	r1, fp, r1
9002560a:	4351      	muls	r1, r2
9002560c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002560e:	fb0e 1e00 	mla	lr, lr, r0, r1
90025612:	0410      	lsls	r0, r2, #16
90025614:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
90025618:	9908      	ldr	r1, [sp, #32]
9002561a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
9002561e:	4310      	orrs	r0, r2
90025620:	9a08      	ldr	r2, [sp, #32]
90025622:	0412      	lsls	r2, r2, #16
90025624:	fb03 e000 	mla	r0, r3, r0, lr
90025628:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
9002562c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
90025630:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
90025634:	ea42 020e 	orr.w	r2, r2, lr
90025638:	fb03 0302 	mla	r3, r3, r2, r0
9002563c:	0d5a      	lsrs	r2, r3, #21
9002563e:	095b      	lsrs	r3, r3, #5
90025640:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025644:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
90025648:	4313      	orrs	r3, r2
9002564a:	f8a9 3000 	strh.w	r3, [r9]
9002564e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90025650:	f109 0902 	add.w	r9, r9, #2
90025654:	f10a 3aff 	add.w	sl, sl, #4294967295
90025658:	441c      	add	r4, r3
9002565a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002565c:	441e      	add	r6, r3
9002565e:	e784      	b.n	9002556a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
90025660:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
90025662:	3d01      	subs	r5, #1
90025664:	3702      	adds	r7, #2
90025666:	441c      	add	r4, r3
90025668:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002566a:	441e      	add	r6, r3
9002566c:	e761      	b.n	90025532 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
9002566e:	d01d      	beq.n	900256ac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90025670:	1e6b      	subs	r3, r5, #1
90025672:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90025674:	fb00 4003 	mla	r0, r0, r3, r4
90025678:	1400      	asrs	r0, r0, #16
9002567a:	f53f af74 	bmi.w	90025566 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9002567e:	3901      	subs	r1, #1
90025680:	4288      	cmp	r0, r1
90025682:	f6bf af70 	bge.w	90025566 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90025686:	991c      	ldr	r1, [sp, #112]	@ 0x70
90025688:	fb01 6303 	mla	r3, r1, r3, r6
9002568c:	141b      	asrs	r3, r3, #16
9002568e:	f53f af6a 	bmi.w	90025566 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
90025692:	3a01      	subs	r2, #1
90025694:	4293      	cmp	r3, r2
90025696:	f6bf af66 	bge.w	90025566 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
9002569a:	46a9      	mov	r9, r5
9002569c:	46ba      	mov	sl, r7
9002569e:	f1b9 0f00 	cmp.w	r9, #0
900256a2:	dc5b      	bgt.n	9002575c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
900256a4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
900256a8:	eb07 0745 	add.w	r7, r7, r5, lsl #1
900256ac:	9b07      	ldr	r3, [sp, #28]
900256ae:	2b00      	cmp	r3, #0
900256b0:	f340 80b9 	ble.w	90025826 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
900256b4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900256b8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
900256ba:	ee30 0a04 	vadd.f32	s0, s0, s8
900256be:	ee70 0aa4 	vadd.f32	s1, s1, s9
900256c2:	eef0 6a62 	vmov.f32	s13, s5
900256c6:	eec7 7a00 	vdiv.f32	s15, s14, s0
900256ca:	ee31 1a05 	vadd.f32	s2, s2, s10
900256ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900256d2:	ee16 4a90 	vmov	r4, s13
900256d6:	eef0 6a43 	vmov.f32	s13, s6
900256da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900256de:	ee16 6a90 	vmov	r6, s13
900256e2:	ee20 7aa7 	vmul.f32	s14, s1, s15
900256e6:	ee61 7a27 	vmul.f32	s15, s2, s15
900256ea:	ee77 2a62 	vsub.f32	s5, s14, s5
900256ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
900256f2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900256f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900256fa:	ee12 2a90 	vmov	r2, s5
900256fe:	eef0 2a47 	vmov.f32	s5, s14
90025702:	fb92 f3f3 	sdiv	r3, r2, r3
90025706:	ee13 2a10 	vmov	r2, s6
9002570a:	931b      	str	r3, [sp, #108]	@ 0x6c
9002570c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002570e:	eeb0 3a67 	vmov.f32	s6, s15
90025712:	fb92 f3f3 	sdiv	r3, r2, r3
90025716:	931c      	str	r3, [sp, #112]	@ 0x70
90025718:	9b07      	ldr	r3, [sp, #28]
9002571a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
9002571c:	3b01      	subs	r3, #1
9002571e:	9307      	str	r3, [sp, #28]
90025720:	bf08      	it	eq
90025722:	4615      	moveq	r5, r2
90025724:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90025726:	bf18      	it	ne
90025728:	461d      	movne	r5, r3
9002572a:	e6f3      	b.n	90025514 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
9002572c:	f111 0b01 	adds.w	fp, r1, #1
90025730:	d48d      	bmi.n	9002564e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90025732:	45de      	cmp	lr, fp
90025734:	db8b      	blt.n	9002564e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90025736:	f110 0b01 	adds.w	fp, r0, #1
9002573a:	d488      	bmi.n	9002564e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002573c:	455b      	cmp	r3, fp
9002573e:	db86      	blt.n	9002564e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
90025740:	b21b      	sxth	r3, r3
90025742:	e9cd 1001 	strd	r1, r0, [sp, #4]
90025746:	e9cd 2c03 	strd	r2, ip, [sp, #12]
9002574a:	9300      	str	r3, [sp, #0]
9002574c:	4642      	mov	r2, r8
9002574e:	fa0f f38e 	sxth.w	r3, lr
90025752:	4649      	mov	r1, r9
90025754:	980d      	ldr	r0, [sp, #52]	@ 0x34
90025756:	f7ff fe4c 	bl	900253f2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
9002575a:	e778      	b.n	9002564e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
9002575c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002575e:	1420      	asrs	r0, r4, #16
90025760:	1431      	asrs	r1, r6, #16
90025762:	f3c6 3e03 	ubfx	lr, r6, #12, #4
90025766:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
9002576a:	f3c4 3203 	ubfx	r2, r4, #12, #4
9002576e:	fb03 0101 	mla	r1, r3, r1, r0
90025772:	eb08 0041 	add.w	r0, r8, r1, lsl #1
90025776:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
9002577a:	8841      	ldrh	r1, [r0, #2]
9002577c:	f1be 0f00 	cmp.w	lr, #0
90025780:	d00b      	beq.n	9002579a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
90025782:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
90025786:	3b01      	subs	r3, #1
90025788:	005b      	lsls	r3, r3, #1
9002578a:	3302      	adds	r3, #2
9002578c:	eb00 0b03 	add.w	fp, r0, r3
90025790:	5ac3      	ldrh	r3, [r0, r3]
90025792:	930a      	str	r3, [sp, #40]	@ 0x28
90025794:	f8bb 3002 	ldrh.w	r3, [fp, #2]
90025798:	930b      	str	r3, [sp, #44]	@ 0x2c
9002579a:	ea4f 400c 	mov.w	r0, ip, lsl #16
9002579e:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
900257a2:	fb12 f30e 	smulbb	r3, r2, lr
900257a6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
900257aa:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
900257ae:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
900257b2:	10db      	asrs	r3, r3, #3
900257b4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900257b8:	ea40 000c 	orr.w	r0, r0, ip
900257bc:	f1ce 0c10 	rsb	ip, lr, #16
900257c0:	ea4b 0101 	orr.w	r1, fp, r1
900257c4:	f109 39ff 	add.w	r9, r9, #4294967295
900257c8:	ebac 0c02 	sub.w	ip, ip, r2
900257cc:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
900257d0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
900257d4:	4351      	muls	r1, r2
900257d6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
900257d8:	fb0c 1c00 	mla	ip, ip, r0, r1
900257dc:	990a      	ldr	r1, [sp, #40]	@ 0x28
900257de:	ea4f 4b02 	mov.w	fp, r2, lsl #16
900257e2:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
900257e6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900257e8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
900257ec:	0412      	lsls	r2, r2, #16
900257ee:	ea4b 0000 	orr.w	r0, fp, r0
900257f2:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
900257f6:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
900257fa:	fb03 c000 	mla	r0, r3, r0, ip
900257fe:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
90025802:	ea42 0b0b 	orr.w	fp, r2, fp
90025806:	fb03 000b 	mla	r0, r3, fp, r0
9002580a:	0d43      	lsrs	r3, r0, #21
9002580c:	0940      	lsrs	r0, r0, #5
9002580e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90025812:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
90025816:	4318      	orrs	r0, r3
90025818:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
9002581a:	441c      	add	r4, r3
9002581c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
9002581e:	f82a 0b02 	strh.w	r0, [sl], #2
90025822:	441e      	add	r6, r3
90025824:	e73b      	b.n	9002569e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
90025826:	b00f      	add	sp, #60	@ 0x3c
90025828:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

9002582c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
9002582c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025830:	b085      	sub	sp, #20
90025832:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
90025836:	9102      	str	r1, [sp, #8]
90025838:	2c00      	cmp	r4, #0
9002583a:	fb04 7103 	mla	r1, r4, r3, r7
9002583e:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
90025842:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
90025846:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
9002584a:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
9002584e:	f2c0 811b 	blt.w	90025a88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90025852:	45a6      	cmp	lr, r4
90025854:	f340 8118 	ble.w	90025a88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
90025858:	2f00      	cmp	r7, #0
9002585a:	f2c0 8113 	blt.w	90025a84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
9002585e:	42bb      	cmp	r3, r7
90025860:	f340 8110 	ble.w	90025a84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
90025864:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90025868:	1c7a      	adds	r2, r7, #1
9002586a:	f100 8110 	bmi.w	90025a8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
9002586e:	4293      	cmp	r3, r2
90025870:	f340 810d 	ble.w	90025a8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
90025874:	2e00      	cmp	r6, #0
90025876:	f000 810c 	beq.w	90025a92 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
9002587a:	f8dc 1004 	ldr.w	r1, [ip, #4]
9002587e:	3401      	adds	r4, #1
90025880:	f100 810b 	bmi.w	90025a9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
90025884:	45a6      	cmp	lr, r4
90025886:	f340 8108 	ble.w	90025a9a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
9002588a:	2800      	cmp	r0, #0
9002588c:	f000 8108 	beq.w	90025aa0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
90025890:	2f00      	cmp	r7, #0
90025892:	f2c0 8100 	blt.w	90025a96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
90025896:	42bb      	cmp	r3, r7
90025898:	f340 80fd 	ble.w	90025a96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
9002589c:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
900258a0:	3701      	adds	r7, #1
900258a2:	f100 8100 	bmi.w	90025aa6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
900258a6:	42bb      	cmp	r3, r7
900258a8:	f340 80fd 	ble.w	90025aa6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
900258ac:	2e00      	cmp	r6, #0
900258ae:	f000 80fc 	beq.w	90025aaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
900258b2:	3301      	adds	r3, #1
900258b4:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
900258b8:	b2b6      	uxth	r6, r6
900258ba:	b280      	uxth	r0, r0
900258bc:	ea4f 6a11 	mov.w	sl, r1, lsr #24
900258c0:	fb00 fe06 	mul.w	lr, r0, r6
900258c4:	0136      	lsls	r6, r6, #4
900258c6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
900258ca:	ebce 1000 	rsb	r0, lr, r0, lsl #4
900258ce:	eba6 070e 	sub.w	r7, r6, lr
900258d2:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
900258d6:	ea4f 6914 	mov.w	r9, r4, lsr #24
900258da:	b280      	uxth	r0, r0
900258dc:	b2bf      	uxth	r7, r7
900258de:	1a1b      	subs	r3, r3, r0
900258e0:	ea4f 6812 	mov.w	r8, r2, lsr #24
900258e4:	fb0a f607 	mul.w	r6, sl, r7
900258e8:	b29b      	uxth	r3, r3
900258ea:	fb0b 6603 	mla	r6, fp, r3, r6
900258ee:	fb00 6609 	mla	r6, r0, r9, r6
900258f2:	fb0e 6608 	mla	r6, lr, r8, r6
900258f6:	f3c6 2607 	ubfx	r6, r6, #8, #8
900258fa:	9600      	str	r6, [sp, #0]
900258fc:	2e00      	cmp	r6, #0
900258fe:	f000 80be 	beq.w	90025a7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
90025902:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90025906:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
9002590a:	9e02      	ldr	r6, [sp, #8]
9002590c:	fb0b fc0c 	mul.w	ip, fp, ip
90025910:	fb0b f505 	mul.w	r5, fp, r5
90025914:	8836      	ldrh	r6, [r6, #0]
90025916:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
9002591a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002591e:	9501      	str	r5, [sp, #4]
90025920:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
90025924:	44dc      	add	ip, fp
90025926:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002592a:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
9002592e:	9503      	str	r5, [sp, #12]
90025930:	9d01      	ldr	r5, [sp, #4]
90025932:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
90025936:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
9002593a:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
9002593e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90025942:	fb0a fc0c 	mul.w	ip, sl, ip
90025946:	ea4f 2b15 	mov.w	fp, r5, lsr #8
9002594a:	fb0a fa01 	mul.w	sl, sl, r1
9002594e:	ea4f 251c 	mov.w	r5, ip, lsr #8
90025952:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90025956:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
9002595a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002595e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
90025962:	4465      	add	r5, ip
90025964:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90025968:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
9002596c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025970:	fb09 fc0c 	mul.w	ip, r9, ip
90025974:	0a2d      	lsrs	r5, r5, #8
90025976:	fb09 f904 	mul.w	r9, r9, r4
9002597a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002597e:	ea4f 211c 	mov.w	r1, ip, lsr #8
90025982:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90025986:	f509 7480 	add.w	r4, r9, #256	@ 0x100
9002598a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002598e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90025992:	437d      	muls	r5, r7
90025994:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90025998:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
9002599c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
900259a0:	4461      	add	r1, ip
900259a2:	fb08 f404 	mul.w	r4, r8, r4
900259a6:	ea4f 2919 	mov.w	r9, r9, lsr #8
900259aa:	fb08 f802 	mul.w	r8, r8, r2
900259ae:	0a09      	lsrs	r1, r1, #8
900259b0:	0a22      	lsrs	r2, r4, #8
900259b2:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
900259b6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
900259ba:	fb07 f70a 	mul.w	r7, r7, sl
900259be:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900259c2:	4414      	add	r4, r2
900259c4:	f508 7280 	add.w	r2, r8, #256	@ 0x100
900259c8:	0a24      	lsrs	r4, r4, #8
900259ca:	eb02 2818 	add.w	r8, r2, r8, lsr #8
900259ce:	9a03      	ldr	r2, [sp, #12]
900259d0:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
900259d4:	fb02 5503 	mla	r5, r2, r3, r5
900259d8:	ea4f 2818 	mov.w	r8, r8, lsr #8
900259dc:	9a00      	ldr	r2, [sp, #0]
900259de:	fb04 540e 	mla	r4, r4, lr, r5
900259e2:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
900259e6:	1235      	asrs	r5, r6, #8
900259e8:	fb01 4100 	mla	r1, r1, r0, r4
900259ec:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
900259f0:	0a09      	lsrs	r1, r1, #8
900259f2:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
900259f6:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
900259fa:	fb03 7101 	mla	r1, r3, r1, r7
900259fe:	fb0e 1e08 	mla	lr, lr, r8, r1
90025a02:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
90025a06:	fb00 e101 	mla	r1, r0, r1, lr
90025a0a:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
90025a0e:	b287      	uxth	r7, r0
90025a10:	0a09      	lsrs	r1, r1, #8
90025a12:	437a      	muls	r2, r7
90025a14:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
90025a18:	1c53      	adds	r3, r2, #1
90025a1a:	4321      	orrs	r1, r4
90025a1c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90025a20:	0c0a      	lsrs	r2, r1, #16
90025a22:	f3c1 2407 	ubfx	r4, r1, #8, #8
90025a26:	ea6f 2313 	mvn.w	r3, r3, lsr #8
90025a2a:	b2c8      	uxtb	r0, r1
90025a2c:	fb12 f207 	smulbb	r2, r2, r7
90025a30:	fb14 f407 	smulbb	r4, r4, r7
90025a34:	b2db      	uxtb	r3, r3
90025a36:	fb10 f007 	smulbb	r0, r0, r7
90025a3a:	fb05 2503 	mla	r5, r5, r3, r2
90025a3e:	10f2      	asrs	r2, r6, #3
90025a40:	00f6      	lsls	r6, r6, #3
90025a42:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90025a46:	b2ad      	uxth	r5, r5
90025a48:	b2f6      	uxtb	r6, r6
90025a4a:	fb02 4203 	mla	r2, r2, r3, r4
90025a4e:	fb06 0303 	mla	r3, r6, r3, r0
90025a52:	b294      	uxth	r4, r2
90025a54:	b299      	uxth	r1, r3
90025a56:	1c6b      	adds	r3, r5, #1
90025a58:	1c62      	adds	r2, r4, #1
90025a5a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90025a5e:	1c4b      	adds	r3, r1, #1
90025a60:	eb02 2214 	add.w	r2, r2, r4, lsr #8
90025a64:	eb03 2311 	add.w	r3, r3, r1, lsr #8
90025a68:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90025a6c:	0952      	lsrs	r2, r2, #5
90025a6e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025a72:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025a76:	432b      	orrs	r3, r5
90025a78:	4313      	orrs	r3, r2
90025a7a:	9a02      	ldr	r2, [sp, #8]
90025a7c:	8013      	strh	r3, [r2, #0]
90025a7e:	b005      	add	sp, #20
90025a80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90025a84:	2500      	movs	r5, #0
90025a86:	e6ef      	b.n	90025868 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
90025a88:	2100      	movs	r1, #0
90025a8a:	460d      	mov	r5, r1
90025a8c:	e6f7      	b.n	9002587e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90025a8e:	2100      	movs	r1, #0
90025a90:	e6f5      	b.n	9002587e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90025a92:	4631      	mov	r1, r6
90025a94:	e6f3      	b.n	9002587e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
90025a96:	2400      	movs	r4, #0
90025a98:	e702      	b.n	900258a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
90025a9a:	2200      	movs	r2, #0
90025a9c:	4614      	mov	r4, r2
90025a9e:	e70b      	b.n	900258b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90025aa0:	4602      	mov	r2, r0
90025aa2:	4604      	mov	r4, r0
90025aa4:	e708      	b.n	900258b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90025aa6:	2200      	movs	r2, #0
90025aa8:	e706      	b.n	900258b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
90025aaa:	4632      	mov	r2, r6
90025aac:	e704      	b.n	900258b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

90025aae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90025aae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90025ab2:	b09d      	sub	sp, #116	@ 0x74
90025ab4:	9219      	str	r2, [sp, #100]	@ 0x64
90025ab6:	9307      	str	r3, [sp, #28]
90025ab8:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
90025aba:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
90025abe:	901b      	str	r0, [sp, #108]	@ 0x6c
90025ac0:	931a      	str	r3, [sp, #104]	@ 0x68
90025ac2:	6850      	ldr	r0, [r2, #4]
90025ac4:	9117      	str	r1, [sp, #92]	@ 0x5c
90025ac6:	6812      	ldr	r2, [r2, #0]
90025ac8:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
90025acc:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
90025ad0:	fb00 1303 	mla	r3, r0, r3, r1
90025ad4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
90025ad8:	930a      	str	r3, [sp, #40]	@ 0x28
90025ada:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90025adc:	681b      	ldr	r3, [r3, #0]
90025ade:	9310      	str	r3, [sp, #64]	@ 0x40
90025ae0:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
90025ae4:	930b      	str	r3, [sp, #44]	@ 0x2c
90025ae6:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90025ae8:	2b00      	cmp	r3, #0
90025aea:	dc03      	bgt.n	90025af4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
90025aec:	9b19      	ldr	r3, [sp, #100]	@ 0x64
90025aee:	2b00      	cmp	r3, #0
90025af0:	f340 8375 	ble.w	900261de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90025af4:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90025af6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025afa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90025afe:	1e48      	subs	r0, r1, #1
90025b00:	1e57      	subs	r7, r2, #1
90025b02:	9b07      	ldr	r3, [sp, #28]
90025b04:	2b00      	cmp	r3, #0
90025b06:	f340 818e 	ble.w	90025e26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
90025b0a:	ea5f 4c24 	movs.w	ip, r4, asr #16
90025b0e:	ea4f 4326 	mov.w	r3, r6, asr #16
90025b12:	d406      	bmi.n	90025b22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90025b14:	4584      	cmp	ip, r0
90025b16:	da04      	bge.n	90025b22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90025b18:	2b00      	cmp	r3, #0
90025b1a:	db02      	blt.n	90025b22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
90025b1c:	42bb      	cmp	r3, r7
90025b1e:	f2c0 8183 	blt.w	90025e28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
90025b22:	f11c 0c01 	adds.w	ip, ip, #1
90025b26:	f100 8173 	bmi.w	90025e10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90025b2a:	4561      	cmp	r1, ip
90025b2c:	f2c0 8170 	blt.w	90025e10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90025b30:	3301      	adds	r3, #1
90025b32:	f100 816d 	bmi.w	90025e10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90025b36:	429a      	cmp	r2, r3
90025b38:	f2c0 816a 	blt.w	90025e10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
90025b3c:	9b07      	ldr	r3, [sp, #28]
90025b3e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
90025b40:	9318      	str	r3, [sp, #96]	@ 0x60
90025b42:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90025b44:	2b00      	cmp	r3, #0
90025b46:	f340 818c 	ble.w	90025e62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
90025b4a:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
90025b4c:	ea4f 4c26 	mov.w	ip, r6, asr #16
90025b50:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90025b52:	f3c4 3003 	ubfx	r0, r4, #12, #4
90025b56:	f8d2 e00c 	ldr.w	lr, [r2, #12]
90025b5a:	1422      	asrs	r2, r4, #16
90025b5c:	f3c6 3103 	ubfx	r1, r6, #12, #4
90025b60:	689b      	ldr	r3, [r3, #8]
90025b62:	f100 81cd 	bmi.w	90025f00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025b66:	f103 38ff 	add.w	r8, r3, #4294967295
90025b6a:	4542      	cmp	r2, r8
90025b6c:	f280 81c8 	bge.w	90025f00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025b70:	f1bc 0f00 	cmp.w	ip, #0
90025b74:	f2c0 81c4 	blt.w	90025f00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025b78:	f10e 38ff 	add.w	r8, lr, #4294967295
90025b7c:	45c4      	cmp	ip, r8
90025b7e:	f280 81bf 	bge.w	90025f00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
90025b82:	b21b      	sxth	r3, r3
90025b84:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90025b86:	fb0c 2203 	mla	r2, ip, r3, r2
90025b8a:	eb05 0882 	add.w	r8, r5, r2, lsl #2
90025b8e:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90025b92:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90025b96:	2800      	cmp	r0, #0
90025b98:	f000 81a9 	beq.w	90025eee <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
90025b9c:	f8d8 5004 	ldr.w	r5, [r8, #4]
90025ba0:	950c      	str	r5, [sp, #48]	@ 0x30
90025ba2:	0e2d      	lsrs	r5, r5, #24
90025ba4:	9513      	str	r5, [sp, #76]	@ 0x4c
90025ba6:	b181      	cbz	r1, 90025bca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90025ba8:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
90025bac:	3b01      	subs	r3, #1
90025bae:	009b      	lsls	r3, r3, #2
90025bb0:	3304      	adds	r3, #4
90025bb2:	eb08 0c03 	add.w	ip, r8, r3
90025bb6:	f858 3003 	ldr.w	r3, [r8, r3]
90025bba:	9308      	str	r3, [sp, #32]
90025bbc:	0e1b      	lsrs	r3, r3, #24
90025bbe:	9311      	str	r3, [sp, #68]	@ 0x44
90025bc0:	f8dc 3004 	ldr.w	r3, [ip, #4]
90025bc4:	930d      	str	r3, [sp, #52]	@ 0x34
90025bc6:	0e1b      	lsrs	r3, r3, #24
90025bc8:	9314      	str	r3, [sp, #80]	@ 0x50
90025bca:	b280      	uxth	r0, r0
90025bcc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90025bce:	b289      	uxth	r1, r1
90025bd0:	fb00 f901 	mul.w	r9, r0, r1
90025bd4:	0100      	lsls	r0, r0, #4
90025bd6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
90025bda:	eba0 0809 	sub.w	r8, r0, r9
90025bde:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
90025be2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
90025be4:	b289      	uxth	r1, r1
90025be6:	fa1f f888 	uxth.w	r8, r8
90025bea:	1a5b      	subs	r3, r3, r1
90025bec:	fb08 f000 	mul.w	r0, r8, r0
90025bf0:	b29b      	uxth	r3, r3
90025bf2:	fb03 000e 	mla	r0, r3, lr, r0
90025bf6:	fb01 0005 	mla	r0, r1, r5, r0
90025bfa:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90025bfc:	fb09 0005 	mla	r0, r9, r5, r0
90025c00:	f3c0 2007 	ubfx	r0, r0, #8, #8
90025c04:	2800      	cmp	r0, #0
90025c06:	f000 80fa 	beq.w	90025dfe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90025c0a:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
90025c0e:	d01b      	beq.n	90025c48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
90025c10:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
90025c14:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90025c18:	fb0e fa0a 	mul.w	sl, lr, sl
90025c1c:	fb0e fe02 	mul.w	lr, lr, r2
90025c20:	ea4f 221a 	mov.w	r2, sl, lsr #8
90025c24:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90025c28:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
90025c2c:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90025c30:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
90025c34:	4452      	add	r2, sl
90025c36:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025c3a:	0a12      	lsrs	r2, r2, #8
90025c3c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90025c40:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
90025c44:	ea42 020c 	orr.w	r2, r2, ip
90025c48:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90025c4a:	2dff      	cmp	r5, #255	@ 0xff
90025c4c:	d021      	beq.n	90025c92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
90025c4e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90025c50:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90025c54:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90025c56:	fb05 fb0b 	mul.w	fp, r5, fp
90025c5a:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90025c5c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90025c60:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90025c62:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025c66:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90025c6a:	fb05 fa0a 	mul.w	sl, r5, sl
90025c6e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025c72:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90025c76:	44de      	add	lr, fp
90025c78:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025c7c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025c80:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025c84:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025c88:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025c8c:	ea4e 050a 	orr.w	r5, lr, sl
90025c90:	950c      	str	r5, [sp, #48]	@ 0x30
90025c92:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90025c94:	2dff      	cmp	r5, #255	@ 0xff
90025c96:	d021      	beq.n	90025cdc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
90025c98:	9d08      	ldr	r5, [sp, #32]
90025c9a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90025c9e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90025ca0:	fb05 fb0b 	mul.w	fp, r5, fp
90025ca4:	9d08      	ldr	r5, [sp, #32]
90025ca6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90025caa:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90025cac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025cb0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90025cb4:	fb05 fa0a 	mul.w	sl, r5, sl
90025cb8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025cbc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90025cc0:	44de      	add	lr, fp
90025cc2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025cc6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025cca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025cce:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025cd2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025cd6:	ea4e 050a 	orr.w	r5, lr, sl
90025cda:	9508      	str	r5, [sp, #32]
90025cdc:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90025cde:	2dff      	cmp	r5, #255	@ 0xff
90025ce0:	d021      	beq.n	90025d26 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
90025ce2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90025ce4:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90025ce8:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90025cea:	fb05 fb0b 	mul.w	fp, r5, fp
90025cee:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90025cf0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90025cf4:	9d14      	ldr	r5, [sp, #80]	@ 0x50
90025cf6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90025cfa:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90025cfe:	fb05 fa0a 	mul.w	sl, r5, sl
90025d02:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025d06:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90025d0a:	44de      	add	lr, fp
90025d0c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90025d10:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90025d14:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90025d18:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90025d1c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90025d20:	ea4e 050a 	orr.w	r5, lr, sl
90025d24:	950d      	str	r5, [sp, #52]	@ 0x34
90025d26:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90025d28:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
90025d2c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90025d30:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90025d34:	9d08      	ldr	r5, [sp, #32]
90025d36:	fb08 fc0c 	mul.w	ip, r8, ip
90025d3a:	fb03 cc0e 	mla	ip, r3, lr, ip
90025d3e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90025d42:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90025d44:	fb01 cc0e 	mla	ip, r1, lr, ip
90025d48:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
90025d4c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90025d4e:	fb09 cc0e 	mla	ip, r9, lr, ip
90025d52:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90025d56:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90025d58:	fb08 f80e 	mul.w	r8, r8, lr
90025d5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90025d60:	fb03 8202 	mla	r2, r3, r2, r8
90025d64:	9b08      	ldr	r3, [sp, #32]
90025d66:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90025d6a:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
90025d6e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90025d70:	fb01 220a 	mla	r2, r1, sl, r2
90025d74:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
90025d78:	883b      	ldrh	r3, [r7, #0]
90025d7a:	fb09 2901 	mla	r9, r9, r1, r2
90025d7e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90025d80:	1219      	asrs	r1, r3, #8
90025d82:	4342      	muls	r2, r0
90025d84:	ea4f 2919 	mov.w	r9, r9, lsr #8
90025d88:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90025d8c:	1c50      	adds	r0, r2, #1
90025d8e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90025d92:	eb00 2012 	add.w	r0, r0, r2, lsr #8
90025d96:	ea4c 0c09 	orr.w	ip, ip, r9
90025d9a:	ea6f 2010 	mvn.w	r0, r0, lsr #8
90025d9e:	ea4f 421c 	mov.w	r2, ip, lsr #16
90025da2:	f3cc 2e07 	ubfx	lr, ip, #8, #8
90025da6:	fa5f fc8c 	uxtb.w	ip, ip
90025daa:	fb12 f205 	smulbb	r2, r2, r5
90025dae:	b2c0      	uxtb	r0, r0
90025db0:	fb1c fc05 	smulbb	ip, ip, r5
90025db4:	fb01 2100 	mla	r1, r1, r0, r2
90025db8:	10da      	asrs	r2, r3, #3
90025dba:	fb1e fe05 	smulbb	lr, lr, r5
90025dbe:	00db      	lsls	r3, r3, #3
90025dc0:	b289      	uxth	r1, r1
90025dc2:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90025dc6:	b2db      	uxtb	r3, r3
90025dc8:	fb02 e200 	mla	r2, r2, r0, lr
90025dcc:	fb03 c300 	mla	r3, r3, r0, ip
90025dd0:	b292      	uxth	r2, r2
90025dd2:	fa1f fc83 	uxth.w	ip, r3
90025dd6:	1c4b      	adds	r3, r1, #1
90025dd8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90025ddc:	f10c 0301 	add.w	r3, ip, #1
90025de0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
90025de4:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90025de8:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90025dec:	430b      	orrs	r3, r1
90025dee:	1c51      	adds	r1, r2, #1
90025df0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90025df4:	0952      	lsrs	r2, r2, #5
90025df6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90025dfa:	4313      	orrs	r3, r2
90025dfc:	803b      	strh	r3, [r7, #0]
90025dfe:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90025e00:	3702      	adds	r7, #2
90025e02:	441c      	add	r4, r3
90025e04:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90025e06:	441e      	add	r6, r3
90025e08:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90025e0a:	3b01      	subs	r3, #1
90025e0c:	9318      	str	r3, [sp, #96]	@ 0x60
90025e0e:	e698      	b.n	90025b42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
90025e10:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
90025e12:	441c      	add	r4, r3
90025e14:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
90025e16:	441e      	add	r6, r3
90025e18:	9b07      	ldr	r3, [sp, #28]
90025e1a:	3b01      	subs	r3, #1
90025e1c:	9307      	str	r3, [sp, #28]
90025e1e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90025e20:	3302      	adds	r3, #2
90025e22:	930a      	str	r3, [sp, #40]	@ 0x28
90025e24:	e66d      	b.n	90025b02 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
90025e26:	d023      	beq.n	90025e70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
90025e28:	9b07      	ldr	r3, [sp, #28]
90025e2a:	9829      	ldr	r0, [sp, #164]	@ 0xa4
90025e2c:	3b01      	subs	r3, #1
90025e2e:	fb00 4003 	mla	r0, r0, r3, r4
90025e32:	1400      	asrs	r0, r0, #16
90025e34:	f53f ae82 	bmi.w	90025b3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90025e38:	3901      	subs	r1, #1
90025e3a:	4288      	cmp	r0, r1
90025e3c:	f6bf ae7e 	bge.w	90025b3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90025e40:	992a      	ldr	r1, [sp, #168]	@ 0xa8
90025e42:	fb01 6303 	mla	r3, r1, r3, r6
90025e46:	141b      	asrs	r3, r3, #16
90025e48:	f53f ae78 	bmi.w	90025b3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90025e4c:	3a01      	subs	r2, #1
90025e4e:	4293      	cmp	r3, r2
90025e50:	f6bf ae74 	bge.w	90025b3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
90025e54:	f8dd b01c 	ldr.w	fp, [sp, #28]
90025e58:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
90025e5c:	f1bb 0f00 	cmp.w	fp, #0
90025e60:	dc6c      	bgt.n	90025f3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
90025e62:	9b07      	ldr	r3, [sp, #28]
90025e64:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90025e68:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
90025e6a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
90025e6e:	930a      	str	r3, [sp, #40]	@ 0x28
90025e70:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90025e72:	2b00      	cmp	r3, #0
90025e74:	f340 81b3 	ble.w	900261de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
90025e78:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90025e7c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90025e7e:	ee30 0a04 	vadd.f32	s0, s0, s8
90025e82:	ee70 0aa4 	vadd.f32	s1, s1, s9
90025e86:	eef0 6a62 	vmov.f32	s13, s5
90025e8a:	eec7 7a00 	vdiv.f32	s15, s14, s0
90025e8e:	ee31 1a05 	vadd.f32	s2, s2, s10
90025e92:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025e96:	ee16 4a90 	vmov	r4, s13
90025e9a:	eef0 6a43 	vmov.f32	s13, s6
90025e9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90025ea2:	ee16 6a90 	vmov	r6, s13
90025ea6:	ee20 7aa7 	vmul.f32	s14, s1, s15
90025eaa:	ee61 7a27 	vmul.f32	s15, s2, s15
90025eae:	ee77 2a62 	vsub.f32	s5, s14, s5
90025eb2:	ee37 3ac3 	vsub.f32	s6, s15, s6
90025eb6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90025eba:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90025ebe:	ee12 2a90 	vmov	r2, s5
90025ec2:	eef0 2a47 	vmov.f32	s5, s14
90025ec6:	fb92 f3f3 	sdiv	r3, r2, r3
90025eca:	ee13 2a10 	vmov	r2, s6
90025ece:	9329      	str	r3, [sp, #164]	@ 0xa4
90025ed0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90025ed2:	eeb0 3a67 	vmov.f32	s6, s15
90025ed6:	fb92 f3f3 	sdiv	r3, r2, r3
90025eda:	932a      	str	r3, [sp, #168]	@ 0xa8
90025edc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90025ede:	9a19      	ldr	r2, [sp, #100]	@ 0x64
90025ee0:	3b01      	subs	r3, #1
90025ee2:	9317      	str	r3, [sp, #92]	@ 0x5c
90025ee4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
90025ee6:	bf08      	it	eq
90025ee8:	4613      	moveq	r3, r2
90025eea:	9307      	str	r3, [sp, #28]
90025eec:	e5fb      	b.n	90025ae6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
90025eee:	2900      	cmp	r1, #0
90025ef0:	f43f ae6b 	beq.w	90025bca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90025ef4:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90025ef8:	9308      	str	r3, [sp, #32]
90025efa:	0e1b      	lsrs	r3, r3, #24
90025efc:	9311      	str	r3, [sp, #68]	@ 0x44
90025efe:	e664      	b.n	90025bca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
90025f00:	f112 0801 	adds.w	r8, r2, #1
90025f04:	f53f af7b 	bmi.w	90025dfe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90025f08:	4543      	cmp	r3, r8
90025f0a:	f6ff af78 	blt.w	90025dfe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90025f0e:	f11c 0801 	adds.w	r8, ip, #1
90025f12:	f53f af74 	bmi.w	90025dfe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90025f16:	45c6      	cmp	lr, r8
90025f18:	f6ff af71 	blt.w	90025dfe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90025f1c:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
90025f1e:	b21b      	sxth	r3, r3
90025f20:	9201      	str	r2, [sp, #4]
90025f22:	fa0f f28e 	sxth.w	r2, lr
90025f26:	e9cd 1504 	strd	r1, r5, [sp, #16]
90025f2a:	e9cd c002 	strd	ip, r0, [sp, #8]
90025f2e:	9200      	str	r2, [sp, #0]
90025f30:	4639      	mov	r1, r7
90025f32:	9a10      	ldr	r2, [sp, #64]	@ 0x40
90025f34:	981b      	ldr	r0, [sp, #108]	@ 0x6c
90025f36:	f7ff fc79 	bl	9002582c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
90025f3a:	e760      	b.n	90025dfe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
90025f3c:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
90025f3e:	1427      	asrs	r7, r4, #16
90025f40:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90025f42:	f3c4 3203 	ubfx	r2, r4, #12, #4
90025f46:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90025f4a:	1433      	asrs	r3, r6, #16
90025f4c:	f3c6 3003 	ubfx	r0, r6, #12, #4
90025f50:	fb01 7303 	mla	r3, r1, r3, r7
90025f54:	eb05 0783 	add.w	r7, r5, r3, lsl #2
90025f58:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
90025f5c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
90025f60:	2a00      	cmp	r2, #0
90025f62:	f000 8133 	beq.w	900261cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
90025f66:	687d      	ldr	r5, [r7, #4]
90025f68:	950e      	str	r5, [sp, #56]	@ 0x38
90025f6a:	0e2d      	lsrs	r5, r5, #24
90025f6c:	9515      	str	r5, [sp, #84]	@ 0x54
90025f6e:	b178      	cbz	r0, 90025f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
90025f70:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
90025f74:	3901      	subs	r1, #1
90025f76:	0089      	lsls	r1, r1, #2
90025f78:	3104      	adds	r1, #4
90025f7a:	eb07 0e01 	add.w	lr, r7, r1
90025f7e:	5879      	ldr	r1, [r7, r1]
90025f80:	9109      	str	r1, [sp, #36]	@ 0x24
90025f82:	0e09      	lsrs	r1, r1, #24
90025f84:	9112      	str	r1, [sp, #72]	@ 0x48
90025f86:	f8de 1004 	ldr.w	r1, [lr, #4]
90025f8a:	910f      	str	r1, [sp, #60]	@ 0x3c
90025f8c:	0e09      	lsrs	r1, r1, #24
90025f8e:	9116      	str	r1, [sp, #88]	@ 0x58
90025f90:	b292      	uxth	r2, r2
90025f92:	9915      	ldr	r1, [sp, #84]	@ 0x54
90025f94:	b280      	uxth	r0, r0
90025f96:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90025f98:	fb02 f800 	mul.w	r8, r2, r0
90025f9c:	0112      	lsls	r2, r2, #4
90025f9e:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
90025fa2:	eba2 0e08 	sub.w	lr, r2, r8
90025fa6:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
90025faa:	b280      	uxth	r0, r0
90025fac:	fa1f fe8e 	uxth.w	lr, lr
90025fb0:	1a12      	subs	r2, r2, r0
90025fb2:	fb0e f101 	mul.w	r1, lr, r1
90025fb6:	b292      	uxth	r2, r2
90025fb8:	fb02 110c 	mla	r1, r2, ip, r1
90025fbc:	fb00 1105 	mla	r1, r0, r5, r1
90025fc0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
90025fc2:	fb08 1105 	mla	r1, r8, r5, r1
90025fc6:	f3c1 2107 	ubfx	r1, r1, #8, #8
90025fca:	2900      	cmp	r1, #0
90025fcc:	f000 80f5 	beq.w	900261ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
90025fd0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90025fd4:	d019      	beq.n	9002600a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
90025fd6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90025fda:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90025fde:	fb0c fa0a 	mul.w	sl, ip, sl
90025fe2:	fb0c fc03 	mul.w	ip, ip, r3
90025fe6:	ea4f 231a 	mov.w	r3, sl, lsr #8
90025fea:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
90025fee:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
90025ff2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90025ff6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90025ffa:	4453      	add	r3, sl
90025ffc:	0a3f      	lsrs	r7, r7, #8
90025ffe:	0a1b      	lsrs	r3, r3, #8
90026000:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
90026004:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90026008:	433b      	orrs	r3, r7
9002600a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
9002600c:	2dff      	cmp	r5, #255	@ 0xff
9002600e:	d020      	beq.n	90026052 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
90026010:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90026012:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90026016:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90026018:	436f      	muls	r7, r5
9002601a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002601c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026020:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026024:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90026026:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
9002602a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002602e:	fb05 fa0a 	mul.w	sl, r5, sl
90026032:	44bc      	add	ip, r7
90026034:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90026038:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
9002603c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026040:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026044:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026048:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002604c:	ea4c 050a 	orr.w	r5, ip, sl
90026050:	950e      	str	r5, [sp, #56]	@ 0x38
90026052:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026054:	2dff      	cmp	r5, #255	@ 0xff
90026056:	d020      	beq.n	9002609a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
90026058:	9d09      	ldr	r5, [sp, #36]	@ 0x24
9002605a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
9002605e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
90026060:	436f      	muls	r7, r5
90026062:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90026064:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026068:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
9002606c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9002606e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90026072:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026076:	fb05 fa0a 	mul.w	sl, r5, sl
9002607a:	44bc      	add	ip, r7
9002607c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90026080:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026084:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026088:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
9002608c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026090:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026094:	ea4c 050a 	orr.w	r5, ip, sl
90026098:	9509      	str	r5, [sp, #36]	@ 0x24
9002609a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
9002609c:	2dff      	cmp	r5, #255	@ 0xff
9002609e:	d020      	beq.n	900260e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
900260a0:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900260a2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900260a6:	9d16      	ldr	r5, [sp, #88]	@ 0x58
900260a8:	436f      	muls	r7, r5
900260aa:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900260ac:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900260b0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900260b4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
900260b6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900260ba:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900260be:	fb05 fa0a 	mul.w	sl, r5, sl
900260c2:	44bc      	add	ip, r7
900260c4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900260c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900260cc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900260d0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900260d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900260d8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900260dc:	ea4c 050a 	orr.w	r5, ip, sl
900260e0:	950f      	str	r5, [sp, #60]	@ 0x3c
900260e2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
900260e4:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
900260e8:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
900260ec:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900260f0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
900260f2:	fb0e f707 	mul.w	r7, lr, r7
900260f6:	fb02 770c 	mla	r7, r2, ip, r7
900260fa:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900260fe:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90026100:	fb00 770c 	mla	r7, r0, ip, r7
90026104:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90026108:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
9002610a:	fb08 770c 	mla	r7, r8, ip, r7
9002610e:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90026112:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
90026114:	fb0e fe0c 	mul.w	lr, lr, ip
90026118:	0a3f      	lsrs	r7, r7, #8
9002611a:	fb02 e303 	mla	r3, r2, r3, lr
9002611e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90026120:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90026124:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
90026128:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
9002612a:	fb00 330a 	mla	r3, r0, sl, r3
9002612e:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
90026132:	f8b9 0000 	ldrh.w	r0, [r9]
90026136:	fb08 3c0c 	mla	ip, r8, ip, r3
9002613a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
9002613c:	1202      	asrs	r2, r0, #8
9002613e:	4359      	muls	r1, r3
90026140:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026144:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
90026148:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
9002614c:	1c4b      	adds	r3, r1, #1
9002614e:	ea47 070c 	orr.w	r7, r7, ip
90026152:	eb03 2111 	add.w	r1, r3, r1, lsr #8
90026156:	0c3b      	lsrs	r3, r7, #16
90026158:	ea6f 2111 	mvn.w	r1, r1, lsr #8
9002615c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
90026160:	b2ff      	uxtb	r7, r7
90026162:	fb13 f305 	smulbb	r3, r3, r5
90026166:	b2c9      	uxtb	r1, r1
90026168:	fb17 f705 	smulbb	r7, r7, r5
9002616c:	fb02 3201 	mla	r2, r2, r1, r3
90026170:	10c3      	asrs	r3, r0, #3
90026172:	fb1c fc05 	smulbb	ip, ip, r5
90026176:	00c0      	lsls	r0, r0, #3
90026178:	b292      	uxth	r2, r2
9002617a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
9002617e:	b2c0      	uxtb	r0, r0
90026180:	fb03 c301 	mla	r3, r3, r1, ip
90026184:	fb00 7001 	mla	r0, r0, r1, r7
90026188:	1c51      	adds	r1, r2, #1
9002618a:	b29b      	uxth	r3, r3
9002618c:	b280      	uxth	r0, r0
9002618e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90026192:	f100 0c01 	add.w	ip, r0, #1
90026196:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
9002619a:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
9002619e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
900261a2:	ea4c 0202 	orr.w	r2, ip, r2
900261a6:	f103 0c01 	add.w	ip, r3, #1
900261aa:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
900261ae:	095b      	lsrs	r3, r3, #5
900261b0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900261b4:	431a      	orrs	r2, r3
900261b6:	f8a9 2000 	strh.w	r2, [r9]
900261ba:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
900261bc:	f109 0902 	add.w	r9, r9, #2
900261c0:	f10b 3bff 	add.w	fp, fp, #4294967295
900261c4:	441c      	add	r4, r3
900261c6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
900261c8:	441e      	add	r6, r3
900261ca:	e647      	b.n	90025e5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
900261cc:	2800      	cmp	r0, #0
900261ce:	f43f aedf 	beq.w	90025f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
900261d2:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
900261d6:	9109      	str	r1, [sp, #36]	@ 0x24
900261d8:	0e09      	lsrs	r1, r1, #24
900261da:	9112      	str	r1, [sp, #72]	@ 0x48
900261dc:	e6d8      	b.n	90025f90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
900261de:	b01d      	add	sp, #116	@ 0x74
900261e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900261e4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
900261e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900261e8:	b085      	sub	sp, #20
900261ea:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
900261ee:	9102      	str	r1, [sp, #8]
900261f0:	2c00      	cmp	r4, #0
900261f2:	fb04 7103 	mla	r1, r4, r3, r7
900261f6:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
900261fa:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
900261fe:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
90026202:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
90026206:	f2c0 810c 	blt.w	90026422 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
9002620a:	45a6      	cmp	lr, r4
9002620c:	f340 8109 	ble.w	90026422 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
90026210:	2f00      	cmp	r7, #0
90026212:	f2c0 8104 	blt.w	9002641e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
90026216:	42bb      	cmp	r3, r7
90026218:	f340 8101 	ble.w	9002641e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
9002621c:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
90026220:	1c7a      	adds	r2, r7, #1
90026222:	f100 8101 	bmi.w	90026428 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
90026226:	4293      	cmp	r3, r2
90026228:	f340 80fe 	ble.w	90026428 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
9002622c:	2e00      	cmp	r6, #0
9002622e:	f000 80fd 	beq.w	9002642c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
90026232:	f8dc 1004 	ldr.w	r1, [ip, #4]
90026236:	3401      	adds	r4, #1
90026238:	f100 80fc 	bmi.w	90026434 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
9002623c:	45a6      	cmp	lr, r4
9002623e:	f340 80f9 	ble.w	90026434 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
90026242:	2800      	cmp	r0, #0
90026244:	f000 80f9 	beq.w	9002643a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
90026248:	2f00      	cmp	r7, #0
9002624a:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
9002624e:	f2c0 80ef 	blt.w	90026430 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90026252:	42bb      	cmp	r3, r7
90026254:	f340 80ec 	ble.w	90026430 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
90026258:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
9002625c:	3701      	adds	r7, #1
9002625e:	f100 80ef 	bmi.w	90026440 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90026262:	42bb      	cmp	r3, r7
90026264:	f340 80ec 	ble.w	90026440 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
90026268:	2e00      	cmp	r6, #0
9002626a:	f000 80eb 	beq.w	90026444 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
9002626e:	6852      	ldr	r2, [r2, #4]
90026270:	b2b6      	uxth	r6, r6
90026272:	b280      	uxth	r0, r0
90026274:	ea4f 6a11 	mov.w	sl, r1, lsr #24
90026278:	fb00 fe06 	mul.w	lr, r0, r6
9002627c:	0136      	lsls	r6, r6, #4
9002627e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
90026282:	ebce 1000 	rsb	r0, lr, r0, lsl #4
90026286:	eba6 070e 	sub.w	r7, r6, lr
9002628a:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
9002628e:	ea4f 6914 	mov.w	r9, r4, lsr #24
90026292:	b280      	uxth	r0, r0
90026294:	b2bf      	uxth	r7, r7
90026296:	1a1b      	subs	r3, r3, r0
90026298:	ea4f 6812 	mov.w	r8, r2, lsr #24
9002629c:	fb07 f60a 	mul.w	r6, r7, sl
900262a0:	b29b      	uxth	r3, r3
900262a2:	fb0b 6603 	mla	r6, fp, r3, r6
900262a6:	fb00 6609 	mla	r6, r0, r9, r6
900262aa:	fb0e 6608 	mla	r6, lr, r8, r6
900262ae:	f3c6 2607 	ubfx	r6, r6, #8, #8
900262b2:	9600      	str	r6, [sp, #0]
900262b4:	2e00      	cmp	r6, #0
900262b6:	f000 80af 	beq.w	90026418 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
900262ba:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900262be:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
900262c2:	9e02      	ldr	r6, [sp, #8]
900262c4:	fb0b fc0c 	mul.w	ip, fp, ip
900262c8:	fb0b f505 	mul.w	r5, fp, r5
900262cc:	8836      	ldrh	r6, [r6, #0]
900262ce:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
900262d2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
900262d6:	9501      	str	r5, [sp, #4]
900262d8:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
900262dc:	44dc      	add	ip, fp
900262de:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900262e2:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
900262e6:	9503      	str	r5, [sp, #12]
900262e8:	9d01      	ldr	r5, [sp, #4]
900262ea:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
900262ee:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
900262f2:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
900262f6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900262fa:	fb0a fc0c 	mul.w	ip, sl, ip
900262fe:	ea4f 2b15 	mov.w	fp, r5, lsr #8
90026302:	fb0a fa01 	mul.w	sl, sl, r1
90026306:	ea4f 251c 	mov.w	r5, ip, lsr #8
9002630a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
9002630e:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
90026312:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
90026316:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
9002631a:	4465      	add	r5, ip
9002631c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
90026320:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
90026324:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026328:	fb09 fc0c 	mul.w	ip, r9, ip
9002632c:	0a2d      	lsrs	r5, r5, #8
9002632e:	fb09 f904 	mul.w	r9, r9, r4
90026332:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026336:	ea4f 211c 	mov.w	r1, ip, lsr #8
9002633a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
9002633e:	f509 7480 	add.w	r4, r9, #256	@ 0x100
90026342:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
90026346:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
9002634a:	437d      	muls	r5, r7
9002634c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
90026350:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
90026354:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
90026358:	4461      	add	r1, ip
9002635a:	fb08 f404 	mul.w	r4, r8, r4
9002635e:	ea4f 2919 	mov.w	r9, r9, lsr #8
90026362:	fb08 f802 	mul.w	r8, r8, r2
90026366:	0a09      	lsrs	r1, r1, #8
90026368:	0a22      	lsrs	r2, r4, #8
9002636a:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
9002636e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
90026372:	fb07 f70a 	mul.w	r7, r7, sl
90026376:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
9002637a:	4414      	add	r4, r2
9002637c:	f508 7280 	add.w	r2, r8, #256	@ 0x100
90026380:	0a24      	lsrs	r4, r4, #8
90026382:	eb02 2818 	add.w	r8, r2, r8, lsr #8
90026386:	9a03      	ldr	r2, [sp, #12]
90026388:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
9002638c:	fb02 5503 	mla	r5, r2, r3, r5
90026390:	ea4f 2818 	mov.w	r8, r8, lsr #8
90026394:	fb04 540e 	mla	r4, r4, lr, r5
90026398:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
9002639c:	fb01 4100 	mla	r1, r1, r0, r4
900263a0:	0a09      	lsrs	r1, r1, #8
900263a2:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
900263a6:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
900263aa:	fb03 7101 	mla	r1, r3, r1, r7
900263ae:	9b00      	ldr	r3, [sp, #0]
900263b0:	fb0e 1e08 	mla	lr, lr, r8, r1
900263b4:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
900263b8:	43da      	mvns	r2, r3
900263ba:	1233      	asrs	r3, r6, #8
900263bc:	fb00 e101 	mla	r1, r0, r1, lr
900263c0:	10f0      	asrs	r0, r6, #3
900263c2:	b2d2      	uxtb	r2, r2
900263c4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
900263c8:	0a09      	lsrs	r1, r1, #8
900263ca:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
900263ce:	00f6      	lsls	r6, r6, #3
900263d0:	4353      	muls	r3, r2
900263d2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
900263d6:	4350      	muls	r0, r2
900263d8:	b2f6      	uxtb	r6, r6
900263da:	4321      	orrs	r1, r4
900263dc:	4356      	muls	r6, r2
900263de:	1c5a      	adds	r2, r3, #1
900263e0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
900263e4:	0c0b      	lsrs	r3, r1, #16
900263e6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
900263ea:	1c42      	adds	r2, r0, #1
900263ec:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900263f0:	0a0a      	lsrs	r2, r1, #8
900263f2:	021b      	lsls	r3, r3, #8
900263f4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
900263f8:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
900263fc:	00d2      	lsls	r2, r2, #3
900263fe:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026402:	4313      	orrs	r3, r2
90026404:	1c72      	adds	r2, r6, #1
90026406:	eb02 2616 	add.w	r6, r2, r6, lsr #8
9002640a:	eb01 2116 	add.w	r1, r1, r6, lsr #8
9002640e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90026412:	4319      	orrs	r1, r3
90026414:	9b02      	ldr	r3, [sp, #8]
90026416:	8019      	strh	r1, [r3, #0]
90026418:	b005      	add	sp, #20
9002641a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002641e:	2500      	movs	r5, #0
90026420:	e6fe      	b.n	90026220 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
90026422:	2100      	movs	r1, #0
90026424:	460d      	mov	r5, r1
90026426:	e706      	b.n	90026236 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90026428:	2100      	movs	r1, #0
9002642a:	e704      	b.n	90026236 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
9002642c:	4631      	mov	r1, r6
9002642e:	e702      	b.n	90026236 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
90026430:	2400      	movs	r4, #0
90026432:	e713      	b.n	9002625c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
90026434:	2200      	movs	r2, #0
90026436:	4614      	mov	r4, r2
90026438:	e71a      	b.n	90026270 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
9002643a:	4602      	mov	r2, r0
9002643c:	4604      	mov	r4, r0
9002643e:	e717      	b.n	90026270 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90026440:	2200      	movs	r2, #0
90026442:	e715      	b.n	90026270 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
90026444:	4632      	mov	r2, r6
90026446:	e713      	b.n	90026270 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

90026448 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002644c:	b09b      	sub	sp, #108	@ 0x6c
9002644e:	9218      	str	r2, [sp, #96]	@ 0x60
90026450:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
90026452:	9019      	str	r0, [sp, #100]	@ 0x64
90026454:	9116      	str	r1, [sp, #88]	@ 0x58
90026456:	6850      	ldr	r0, [r2, #4]
90026458:	9307      	str	r3, [sp, #28]
9002645a:	6812      	ldr	r2, [r2, #0]
9002645c:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
90026460:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
90026464:	fb00 1303 	mla	r3, r0, r3, r1
90026468:	eb02 0343 	add.w	r3, r2, r3, lsl #1
9002646c:	930a      	str	r3, [sp, #40]	@ 0x28
9002646e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90026470:	681b      	ldr	r3, [r3, #0]
90026472:	930f      	str	r3, [sp, #60]	@ 0x3c
90026474:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90026476:	2b00      	cmp	r3, #0
90026478:	dc03      	bgt.n	90026482 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
9002647a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
9002647c:	2b00      	cmp	r3, #0
9002647e:	f340 8387 	ble.w	90026b90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
90026482:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
90026484:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026488:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
9002648c:	1e48      	subs	r0, r1, #1
9002648e:	1e57      	subs	r7, r2, #1
90026490:	9b07      	ldr	r3, [sp, #28]
90026492:	2b00      	cmp	r3, #0
90026494:	f340 8166 	ble.w	90026764 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
90026498:	ea5f 4c24 	movs.w	ip, r4, asr #16
9002649c:	ea4f 4326 	mov.w	r3, r6, asr #16
900264a0:	d406      	bmi.n	900264b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900264a2:	4584      	cmp	ip, r0
900264a4:	da04      	bge.n	900264b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900264a6:	2b00      	cmp	r3, #0
900264a8:	db02      	blt.n	900264b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
900264aa:	42bb      	cmp	r3, r7
900264ac:	f2c0 815b 	blt.w	90026766 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
900264b0:	f11c 0c01 	adds.w	ip, ip, #1
900264b4:	f100 814b 	bmi.w	9002674e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900264b8:	4561      	cmp	r1, ip
900264ba:	f2c0 8148 	blt.w	9002674e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900264be:	3301      	adds	r3, #1
900264c0:	f100 8145 	bmi.w	9002674e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900264c4:	429a      	cmp	r2, r3
900264c6:	f2c0 8142 	blt.w	9002674e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
900264ca:	9b07      	ldr	r3, [sp, #28]
900264cc:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
900264ce:	9317      	str	r3, [sp, #92]	@ 0x5c
900264d0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
900264d2:	2b00      	cmp	r3, #0
900264d4:	f340 8165 	ble.w	900267a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
900264d8:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
900264da:	ea4f 4c26 	mov.w	ip, r6, asr #16
900264de:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900264e0:	f3c4 3103 	ubfx	r1, r4, #12, #4
900264e4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
900264e8:	1422      	asrs	r2, r4, #16
900264ea:	f3c6 3003 	ubfx	r0, r6, #12, #4
900264ee:	689b      	ldr	r3, [r3, #8]
900264f0:	f100 81d5 	bmi.w	9002689e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900264f4:	f103 38ff 	add.w	r8, r3, #4294967295
900264f8:	4542      	cmp	r2, r8
900264fa:	f280 81d0 	bge.w	9002689e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
900264fe:	f1bc 0f00 	cmp.w	ip, #0
90026502:	f2c0 81cc 	blt.w	9002689e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90026506:	f10e 38ff 	add.w	r8, lr, #4294967295
9002650a:	45c4      	cmp	ip, r8
9002650c:	f280 81c7 	bge.w	9002689e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
90026510:	b21b      	sxth	r3, r3
90026512:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
90026514:	fb0c 2203 	mla	r2, ip, r3, r2
90026518:	eb05 0882 	add.w	r8, r5, r2, lsl #2
9002651c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
90026520:	ea4f 6e12 	mov.w	lr, r2, lsr #24
90026524:	2900      	cmp	r1, #0
90026526:	f000 8182 	beq.w	9002682e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
9002652a:	f8d8 5004 	ldr.w	r5, [r8, #4]
9002652e:	950b      	str	r5, [sp, #44]	@ 0x2c
90026530:	0e2d      	lsrs	r5, r5, #24
90026532:	9512      	str	r5, [sp, #72]	@ 0x48
90026534:	b180      	cbz	r0, 90026558 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90026536:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
9002653a:	3b01      	subs	r3, #1
9002653c:	009b      	lsls	r3, r3, #2
9002653e:	3304      	adds	r3, #4
90026540:	eb08 0c03 	add.w	ip, r8, r3
90026544:	f858 3003 	ldr.w	r3, [r8, r3]
90026548:	9308      	str	r3, [sp, #32]
9002654a:	0e1b      	lsrs	r3, r3, #24
9002654c:	9310      	str	r3, [sp, #64]	@ 0x40
9002654e:	f8dc 3004 	ldr.w	r3, [ip, #4]
90026552:	930c      	str	r3, [sp, #48]	@ 0x30
90026554:	0e1b      	lsrs	r3, r3, #24
90026556:	9313      	str	r3, [sp, #76]	@ 0x4c
90026558:	b289      	uxth	r1, r1
9002655a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
9002655c:	b280      	uxth	r0, r0
9002655e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90026560:	fb01 f900 	mul.w	r9, r1, r0
90026564:	0109      	lsls	r1, r1, #4
90026566:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9002656a:	eba1 0809 	sub.w	r8, r1, r9
9002656e:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
90026572:	b280      	uxth	r0, r0
90026574:	fa1f f888 	uxth.w	r8, r8
90026578:	1a09      	subs	r1, r1, r0
9002657a:	fb08 f303 	mul.w	r3, r8, r3
9002657e:	b289      	uxth	r1, r1
90026580:	fb01 330e 	mla	r3, r1, lr, r3
90026584:	fb00 3305 	mla	r3, r0, r5, r3
90026588:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9002658a:	fb09 3305 	mla	r3, r9, r5, r3
9002658e:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026592:	2b00      	cmp	r3, #0
90026594:	f000 80d2 	beq.w	9002673c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
90026598:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
9002659c:	d01b      	beq.n	900265d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
9002659e:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
900265a2:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
900265a6:	fb0e fa0a 	mul.w	sl, lr, sl
900265aa:	fb0e fe02 	mul.w	lr, lr, r2
900265ae:	ea4f 221a 	mov.w	r2, sl, lsr #8
900265b2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
900265b6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
900265ba:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900265be:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
900265c2:	4452      	add	r2, sl
900265c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900265c8:	0a12      	lsrs	r2, r2, #8
900265ca:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
900265ce:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
900265d2:	ea42 020c 	orr.w	r2, r2, ip
900265d6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900265d8:	2dff      	cmp	r5, #255	@ 0xff
900265da:	d021      	beq.n	90026620 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
900265dc:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900265de:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
900265e2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900265e4:	fb05 fb0b 	mul.w	fp, r5, fp
900265e8:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900265ea:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900265ee:	9d12      	ldr	r5, [sp, #72]	@ 0x48
900265f0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
900265f4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
900265f8:	fb05 fa0a 	mul.w	sl, r5, sl
900265fc:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026600:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90026604:	44de      	add	lr, fp
90026606:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002660a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
9002660e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026612:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026616:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
9002661a:	ea4e 050a 	orr.w	r5, lr, sl
9002661e:	950b      	str	r5, [sp, #44]	@ 0x2c
90026620:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90026622:	2dff      	cmp	r5, #255	@ 0xff
90026624:	d021      	beq.n	9002666a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
90026626:	9d08      	ldr	r5, [sp, #32]
90026628:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
9002662c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9002662e:	fb05 fb0b 	mul.w	fp, r5, fp
90026632:	9d08      	ldr	r5, [sp, #32]
90026634:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
90026638:	9d10      	ldr	r5, [sp, #64]	@ 0x40
9002663a:	fb05 fa0e 	mul.w	sl, r5, lr
9002663e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026642:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
90026646:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
9002664a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
9002664e:	44de      	add	lr, fp
90026650:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
90026654:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
90026658:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
9002665c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026660:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026664:	ea4e 050a 	orr.w	r5, lr, sl
90026668:	9508      	str	r5, [sp, #32]
9002666a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
9002666c:	2dff      	cmp	r5, #255	@ 0xff
9002666e:	d021      	beq.n	900266b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
90026670:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
90026672:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
90026676:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90026678:	fb05 fb0b 	mul.w	fp, r5, fp
9002667c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
9002667e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026682:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
90026684:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
90026688:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
9002668c:	fb05 fa0a 	mul.w	sl, r5, sl
90026690:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
90026694:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
90026698:	44de      	add	lr, fp
9002669a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
9002669e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
900266a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900266a6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
900266aa:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900266ae:	ea4e 050a 	orr.w	r5, lr, sl
900266b2:	950c      	str	r5, [sp, #48]	@ 0x30
900266b4:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900266b6:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
900266ba:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
900266be:	2bff      	cmp	r3, #255	@ 0xff
900266c0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
900266c4:	9d08      	ldr	r5, [sp, #32]
900266c6:	fb08 fc0c 	mul.w	ip, r8, ip
900266ca:	fb01 cc0e 	mla	ip, r1, lr, ip
900266ce:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
900266d2:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
900266d4:	fb00 cc0e 	mla	ip, r0, lr, ip
900266d8:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
900266dc:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
900266de:	fb09 cc0e 	mla	ip, r9, lr, ip
900266e2:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
900266e6:	fb08 f80e 	mul.w	r8, r8, lr
900266ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900266ee:	fb01 8202 	mla	r2, r1, r2, r8
900266f2:	9908      	ldr	r1, [sp, #32]
900266f4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900266f8:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
900266fc:	990c      	ldr	r1, [sp, #48]	@ 0x30
900266fe:	fb00 220a 	mla	r2, r0, sl, r2
90026702:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
90026706:	fb09 2900 	mla	r9, r9, r0, r2
9002670a:	ea4f 2919 	mov.w	r9, r9, lsr #8
9002670e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
90026712:	ea4c 0c09 	orr.w	ip, ip, r9
90026716:	ea4f 221c 	mov.w	r2, ip, lsr #8
9002671a:	f040 8091 	bne.w	90026840 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
9002671e:	ea4f 135c 	mov.w	r3, ip, lsr #5
90026722:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
90026726:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
9002672a:	f022 0207 	bic.w	r2, r2, #7
9002672e:	431a      	orrs	r2, r3
90026730:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
90026734:	ea4c 0c02 	orr.w	ip, ip, r2
90026738:	f8a7 c000 	strh.w	ip, [r7]
9002673c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
9002673e:	3702      	adds	r7, #2
90026740:	441c      	add	r4, r3
90026742:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026744:	441e      	add	r6, r3
90026746:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
90026748:	3b01      	subs	r3, #1
9002674a:	9317      	str	r3, [sp, #92]	@ 0x5c
9002674c:	e6c0      	b.n	900264d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
9002674e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90026750:	441c      	add	r4, r3
90026752:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026754:	441e      	add	r6, r3
90026756:	9b07      	ldr	r3, [sp, #28]
90026758:	3b01      	subs	r3, #1
9002675a:	9307      	str	r3, [sp, #28]
9002675c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
9002675e:	3302      	adds	r3, #2
90026760:	930a      	str	r3, [sp, #40]	@ 0x28
90026762:	e695      	b.n	90026490 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90026764:	d024      	beq.n	900267b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
90026766:	9b07      	ldr	r3, [sp, #28]
90026768:	9827      	ldr	r0, [sp, #156]	@ 0x9c
9002676a:	3b01      	subs	r3, #1
9002676c:	fb00 4003 	mla	r0, r0, r3, r4
90026770:	1400      	asrs	r0, r0, #16
90026772:	f53f aeaa 	bmi.w	900264ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90026776:	3901      	subs	r1, #1
90026778:	4288      	cmp	r0, r1
9002677a:	f6bf aea6 	bge.w	900264ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002677e:	9928      	ldr	r1, [sp, #160]	@ 0xa0
90026780:	fb01 6303 	mla	r3, r1, r3, r6
90026784:	141b      	asrs	r3, r3, #16
90026786:	f53f aea0 	bmi.w	900264ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
9002678a:	3a01      	subs	r2, #1
9002678c:	4293      	cmp	r3, r2
9002678e:	f6bf ae9c 	bge.w	900264ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
90026792:	f8dd b01c 	ldr.w	fp, [sp, #28]
90026796:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
9002679a:	f1bb 0f00 	cmp.w	fp, #0
9002679e:	f300 809a 	bgt.w	900268d6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
900267a2:	9b07      	ldr	r3, [sp, #28]
900267a4:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
900267a8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
900267aa:	eb03 0345 	add.w	r3, r3, r5, lsl #1
900267ae:	930a      	str	r3, [sp, #40]	@ 0x28
900267b0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
900267b2:	2b00      	cmp	r3, #0
900267b4:	f340 81ec 	ble.w	90026b90 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
900267b8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900267bc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900267be:	ee30 0a04 	vadd.f32	s0, s0, s8
900267c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
900267c6:	eef0 6a62 	vmov.f32	s13, s5
900267ca:	eec7 7a00 	vdiv.f32	s15, s14, s0
900267ce:	ee31 1a05 	vadd.f32	s2, s2, s10
900267d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900267d6:	ee16 4a90 	vmov	r4, s13
900267da:	eef0 6a43 	vmov.f32	s13, s6
900267de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900267e2:	ee16 6a90 	vmov	r6, s13
900267e6:	ee20 7aa7 	vmul.f32	s14, s1, s15
900267ea:	ee61 7a27 	vmul.f32	s15, s2, s15
900267ee:	ee77 2a62 	vsub.f32	s5, s14, s5
900267f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
900267f6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900267fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900267fe:	ee12 2a90 	vmov	r2, s5
90026802:	eef0 2a47 	vmov.f32	s5, s14
90026806:	fb92 f3f3 	sdiv	r3, r2, r3
9002680a:	ee13 2a10 	vmov	r2, s6
9002680e:	9327      	str	r3, [sp, #156]	@ 0x9c
90026810:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026812:	eeb0 3a67 	vmov.f32	s6, s15
90026816:	fb92 f3f3 	sdiv	r3, r2, r3
9002681a:	9328      	str	r3, [sp, #160]	@ 0xa0
9002681c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
9002681e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
90026820:	3b01      	subs	r3, #1
90026822:	9316      	str	r3, [sp, #88]	@ 0x58
90026824:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026826:	bf08      	it	eq
90026828:	4613      	moveq	r3, r2
9002682a:	9307      	str	r3, [sp, #28]
9002682c:	e622      	b.n	90026474 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
9002682e:	2800      	cmp	r0, #0
90026830:	f43f ae92 	beq.w	90026558 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90026834:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
90026838:	9308      	str	r3, [sp, #32]
9002683a:	0e1b      	lsrs	r3, r3, #24
9002683c:	9310      	str	r3, [sp, #64]	@ 0x40
9002683e:	e68b      	b.n	90026558 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
90026840:	8839      	ldrh	r1, [r7, #0]
90026842:	43db      	mvns	r3, r3
90026844:	4dd4      	ldr	r5, [pc, #848]	@ (90026b98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90026846:	ea4f 2e21 	mov.w	lr, r1, asr #8
9002684a:	fa5f f883 	uxtb.w	r8, r3
9002684e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
90026852:	10c8      	asrs	r0, r1, #3
90026854:	00cb      	lsls	r3, r1, #3
90026856:	fb0e fe08 	mul.w	lr, lr, r8
9002685a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
9002685e:	b2db      	uxtb	r3, r3
90026860:	f10e 0101 	add.w	r1, lr, #1
90026864:	fb00 f008 	mul.w	r0, r0, r8
90026868:	fb03 f308 	mul.w	r3, r3, r8
9002686c:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
90026870:	ea4f 411c 	mov.w	r1, ip, lsr #16
90026874:	eb01 211e 	add.w	r1, r1, lr, lsr #8
90026878:	f100 0e01 	add.w	lr, r0, #1
9002687c:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
90026880:	b2c9      	uxtb	r1, r1
90026882:	eb02 2210 	add.w	r2, r2, r0, lsr #8
90026886:	ea05 2101 	and.w	r1, r5, r1, lsl #8
9002688a:	00d2      	lsls	r2, r2, #3
9002688c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026890:	430a      	orrs	r2, r1
90026892:	1c59      	adds	r1, r3, #1
90026894:	eb01 2313 	add.w	r3, r1, r3, lsr #8
90026898:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
9002689c:	e748      	b.n	90026730 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
9002689e:	f112 0801 	adds.w	r8, r2, #1
900268a2:	f53f af4b 	bmi.w	9002673c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900268a6:	4543      	cmp	r3, r8
900268a8:	f6ff af48 	blt.w	9002673c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900268ac:	f11c 0801 	adds.w	r8, ip, #1
900268b0:	f53f af44 	bmi.w	9002673c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900268b4:	45c6      	cmp	lr, r8
900268b6:	f6ff af41 	blt.w	9002673c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900268ba:	b21b      	sxth	r3, r3
900268bc:	e9cd 2c01 	strd	r2, ip, [sp, #4]
900268c0:	fa0f f28e 	sxth.w	r2, lr
900268c4:	e9cd 1003 	strd	r1, r0, [sp, #12]
900268c8:	9200      	str	r2, [sp, #0]
900268ca:	4639      	mov	r1, r7
900268cc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900268ce:	9819      	ldr	r0, [sp, #100]	@ 0x64
900268d0:	f7ff fc88 	bl	900261e4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
900268d4:	e732      	b.n	9002673c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
900268d6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
900268d8:	1421      	asrs	r1, r4, #16
900268da:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900268dc:	f3c4 3203 	ubfx	r2, r4, #12, #4
900268e0:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
900268e4:	1433      	asrs	r3, r6, #16
900268e6:	f3c6 3003 	ubfx	r0, r6, #12, #4
900268ea:	fb07 1303 	mla	r3, r7, r3, r1
900268ee:	990f      	ldr	r1, [sp, #60]	@ 0x3c
900268f0:	eb01 0183 	add.w	r1, r1, r3, lsl #2
900268f4:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
900268f8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
900268fc:	2a00      	cmp	r2, #0
900268fe:	f000 8108 	beq.w	90026b12 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
90026902:	684d      	ldr	r5, [r1, #4]
90026904:	950d      	str	r5, [sp, #52]	@ 0x34
90026906:	0e2d      	lsrs	r5, r5, #24
90026908:	9514      	str	r5, [sp, #80]	@ 0x50
9002690a:	b178      	cbz	r0, 9002692c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
9002690c:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
90026910:	3f01      	subs	r7, #1
90026912:	00bf      	lsls	r7, r7, #2
90026914:	3704      	adds	r7, #4
90026916:	eb01 0e07 	add.w	lr, r1, r7
9002691a:	59c9      	ldr	r1, [r1, r7]
9002691c:	9109      	str	r1, [sp, #36]	@ 0x24
9002691e:	0e09      	lsrs	r1, r1, #24
90026920:	9111      	str	r1, [sp, #68]	@ 0x44
90026922:	f8de 1004 	ldr.w	r1, [lr, #4]
90026926:	910e      	str	r1, [sp, #56]	@ 0x38
90026928:	0e09      	lsrs	r1, r1, #24
9002692a:	9115      	str	r1, [sp, #84]	@ 0x54
9002692c:	b292      	uxth	r2, r2
9002692e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026930:	b280      	uxth	r0, r0
90026932:	fb02 f900 	mul.w	r9, r2, r0
90026936:	0112      	lsls	r2, r2, #4
90026938:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
9002693c:	eba2 0e09 	sub.w	lr, r2, r9
90026940:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
90026944:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90026946:	b280      	uxth	r0, r0
90026948:	fa1f fe8e 	uxth.w	lr, lr
9002694c:	1a09      	subs	r1, r1, r0
9002694e:	fb0e f202 	mul.w	r2, lr, r2
90026952:	b289      	uxth	r1, r1
90026954:	fb01 220c 	mla	r2, r1, ip, r2
90026958:	fb00 2205 	mla	r2, r0, r5, r2
9002695c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
9002695e:	fb09 2205 	mla	r2, r9, r5, r2
90026962:	f3c2 2207 	ubfx	r2, r2, #8, #8
90026966:	2a00      	cmp	r2, #0
90026968:	f000 80ca 	beq.w	90026b00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
9002696c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
90026970:	d019      	beq.n	900269a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
90026972:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
90026976:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
9002697a:	fb0c fa0a 	mul.w	sl, ip, sl
9002697e:	fb0c fc03 	mul.w	ip, ip, r3
90026982:	ea4f 231a 	mov.w	r3, sl, lsr #8
90026986:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
9002698a:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
9002698e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
90026992:	eb07 271c 	add.w	r7, r7, ip, lsr #8
90026996:	4453      	add	r3, sl
90026998:	0a3f      	lsrs	r7, r7, #8
9002699a:	0a1b      	lsrs	r3, r3, #8
9002699c:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
900269a0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
900269a4:	433b      	orrs	r3, r7
900269a6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900269a8:	2dff      	cmp	r5, #255	@ 0xff
900269aa:	d020      	beq.n	900269ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
900269ac:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900269ae:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900269b2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900269b4:	436f      	muls	r7, r5
900269b6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
900269b8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
900269bc:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
900269c0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
900269c2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
900269c6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900269ca:	fb05 fa0a 	mul.w	sl, r5, sl
900269ce:	44bc      	add	ip, r7
900269d0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
900269d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
900269d8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
900269dc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
900269e0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
900269e4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
900269e8:	ea4c 050a 	orr.w	r5, ip, sl
900269ec:	950d      	str	r5, [sp, #52]	@ 0x34
900269ee:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900269f0:	2dff      	cmp	r5, #255	@ 0xff
900269f2:	d020      	beq.n	90026a36 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
900269f4:	9d09      	ldr	r5, [sp, #36]	@ 0x24
900269f6:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
900269fa:	9d11      	ldr	r5, [sp, #68]	@ 0x44
900269fc:	436f      	muls	r7, r5
900269fe:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90026a00:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90026a04:	9d11      	ldr	r5, [sp, #68]	@ 0x44
90026a06:	fb05 fa0c 	mul.w	sl, r5, ip
90026a0a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026a0e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90026a12:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026a16:	44bc      	add	ip, r7
90026a18:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90026a1c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026a20:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026a24:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026a28:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026a2c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026a30:	ea4c 050a 	orr.w	r5, ip, sl
90026a34:	9509      	str	r5, [sp, #36]	@ 0x24
90026a36:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90026a38:	2dff      	cmp	r5, #255	@ 0xff
90026a3a:	d020      	beq.n	90026a7e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
90026a3c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90026a3e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90026a42:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90026a44:	436f      	muls	r7, r5
90026a46:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90026a48:	ea4f 2c17 	mov.w	ip, r7, lsr #8
90026a4c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
90026a50:	9d15      	ldr	r5, [sp, #84]	@ 0x54
90026a52:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
90026a56:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026a5a:	fb05 fa0a 	mul.w	sl, r5, sl
90026a5e:	44bc      	add	ip, r7
90026a60:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
90026a64:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026a68:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
90026a6c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
90026a70:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
90026a74:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
90026a78:	ea4c 050a 	orr.w	r5, ip, sl
90026a7c:	950e      	str	r5, [sp, #56]	@ 0x38
90026a7e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90026a80:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
90026a84:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
90026a88:	2aff      	cmp	r2, #255	@ 0xff
90026a8a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
90026a8e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
90026a90:	fb0e f707 	mul.w	r7, lr, r7
90026a94:	fb01 770c 	mla	r7, r1, ip, r7
90026a98:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90026a9c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90026a9e:	fb00 770c 	mla	r7, r0, ip, r7
90026aa2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
90026aa6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
90026aa8:	fb09 770c 	mla	r7, r9, ip, r7
90026aac:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
90026ab0:	fb0e fe0c 	mul.w	lr, lr, ip
90026ab4:	ea4f 2717 	mov.w	r7, r7, lsr #8
90026ab8:	fb01 e303 	mla	r3, r1, r3, lr
90026abc:	9909      	ldr	r1, [sp, #36]	@ 0x24
90026abe:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
90026ac2:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
90026ac6:	990e      	ldr	r1, [sp, #56]	@ 0x38
90026ac8:	fb00 330a 	mla	r3, r0, sl, r3
90026acc:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
90026ad0:	fb09 3c0c 	mla	ip, r9, ip, r3
90026ad4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
90026ad8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
90026adc:	ea47 070c 	orr.w	r7, r7, ip
90026ae0:	ea4f 2317 	mov.w	r3, r7, lsr #8
90026ae4:	d11e      	bne.n	90026b24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
90026ae6:	097a      	lsrs	r2, r7, #5
90026ae8:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
90026aec:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90026af0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90026af4:	f023 0307 	bic.w	r3, r3, #7
90026af8:	4313      	orrs	r3, r2
90026afa:	431f      	orrs	r7, r3
90026afc:	f8a8 7000 	strh.w	r7, [r8]
90026b00:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
90026b02:	f108 0802 	add.w	r8, r8, #2
90026b06:	f10b 3bff 	add.w	fp, fp, #4294967295
90026b0a:	441c      	add	r4, r3
90026b0c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026b0e:	441e      	add	r6, r3
90026b10:	e643      	b.n	9002679a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
90026b12:	2800      	cmp	r0, #0
90026b14:	f43f af0a 	beq.w	9002692c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90026b18:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
90026b1c:	9109      	str	r1, [sp, #36]	@ 0x24
90026b1e:	0e09      	lsrs	r1, r1, #24
90026b20:	9111      	str	r1, [sp, #68]	@ 0x44
90026b22:	e703      	b.n	9002692c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
90026b24:	f8b8 1000 	ldrh.w	r1, [r8]
90026b28:	43d2      	mvns	r2, r2
90026b2a:	ea4f 2c21 	mov.w	ip, r1, asr #8
90026b2e:	fa5f fe82 	uxtb.w	lr, r2
90026b32:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
90026b36:	10c8      	asrs	r0, r1, #3
90026b38:	00ca      	lsls	r2, r1, #3
90026b3a:	fb0c fc0e 	mul.w	ip, ip, lr
90026b3e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90026b42:	b2d2      	uxtb	r2, r2
90026b44:	f10c 0101 	add.w	r1, ip, #1
90026b48:	fb00 f00e 	mul.w	r0, r0, lr
90026b4c:	fb02 f20e 	mul.w	r2, r2, lr
90026b50:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90026b54:	0c39      	lsrs	r1, r7, #16
90026b56:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
90026b5a:	490f      	ldr	r1, [pc, #60]	@ (90026b98 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
90026b5c:	fa5f fc8c 	uxtb.w	ip, ip
90026b60:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
90026b64:	1c41      	adds	r1, r0, #1
90026b66:	eb01 2010 	add.w	r0, r1, r0, lsr #8
90026b6a:	1c51      	adds	r1, r2, #1
90026b6c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90026b70:	eb01 2212 	add.w	r2, r1, r2, lsr #8
90026b74:	00c0      	lsls	r0, r0, #3
90026b76:	eb07 2712 	add.w	r7, r7, r2, lsr #8
90026b7a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026b7e:	f3c7 07c4 	ubfx	r7, r7, #3, #5
90026b82:	ea4c 0c00 	orr.w	ip, ip, r0
90026b86:	ea47 0c0c 	orr.w	ip, r7, ip
90026b8a:	f8a8 c000 	strh.w	ip, [r8]
90026b8e:	e7b7      	b.n	90026b00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
90026b90:	b01b      	add	sp, #108	@ 0x6c
90026b92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90026b96:	bf00      	nop
90026b98:	fffff800 	.word	0xfffff800

90026b9c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
90026b9c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
90026ba0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
90026ba4:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
90026ba8:	2d00      	cmp	r5, #0
90026baa:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
90026bae:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
90026bb2:	fb05 0e03 	mla	lr, r5, r3, r0
90026bb6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
90026bba:	f2c0 808c 	blt.w	90026cd6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90026bbe:	45a9      	cmp	r9, r5
90026bc0:	f340 8089 	ble.w	90026cd6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
90026bc4:	2800      	cmp	r0, #0
90026bc6:	f2c0 8084 	blt.w	90026cd2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90026bca:	4580      	cmp	r8, r0
90026bcc:	f340 8081 	ble.w	90026cd2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
90026bd0:	ea4f 045e 	mov.w	r4, lr, lsr #1
90026bd4:	f01e 0f01 	tst.w	lr, #1
90026bd8:	5d16      	ldrb	r6, [r2, r4]
90026bda:	bf0c      	ite	eq
90026bdc:	f006 060f 	andeq.w	r6, r6, #15
90026be0:	1136      	asrne	r6, r6, #4
90026be2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90026be6:	b2f6      	uxtb	r6, r6
90026be8:	1c44      	adds	r4, r0, #1
90026bea:	d477      	bmi.n	90026cdc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90026bec:	45a0      	cmp	r8, r4
90026bee:	dd75      	ble.n	90026cdc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
90026bf0:	2f00      	cmp	r7, #0
90026bf2:	d075      	beq.n	90026ce0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
90026bf4:	f10e 0a01 	add.w	sl, lr, #1
90026bf8:	ea4f 045a 	mov.w	r4, sl, lsr #1
90026bfc:	f01a 0f01 	tst.w	sl, #1
90026c00:	5d14      	ldrb	r4, [r2, r4]
90026c02:	bf0c      	ite	eq
90026c04:	f004 040f 	andeq.w	r4, r4, #15
90026c08:	1124      	asrne	r4, r4, #4
90026c0a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90026c0e:	b2e4      	uxtb	r4, r4
90026c10:	3501      	adds	r5, #1
90026c12:	d469      	bmi.n	90026ce8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90026c14:	45a9      	cmp	r9, r5
90026c16:	dd67      	ble.n	90026ce8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
90026c18:	f1bc 0f00 	cmp.w	ip, #0
90026c1c:	d067      	beq.n	90026cee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
90026c1e:	2800      	cmp	r0, #0
90026c20:	db60      	blt.n	90026ce4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90026c22:	4580      	cmp	r8, r0
90026c24:	dd5e      	ble.n	90026ce4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
90026c26:	eb03 090e 	add.w	r9, r3, lr
90026c2a:	ea4f 0559 	mov.w	r5, r9, lsr #1
90026c2e:	f019 0f01 	tst.w	r9, #1
90026c32:	5d55      	ldrb	r5, [r2, r5]
90026c34:	bf0c      	ite	eq
90026c36:	f005 050f 	andeq.w	r5, r5, #15
90026c3a:	112d      	asrne	r5, r5, #4
90026c3c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
90026c40:	b2ed      	uxtb	r5, r5
90026c42:	3001      	adds	r0, #1
90026c44:	d456      	bmi.n	90026cf4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90026c46:	4580      	cmp	r8, r0
90026c48:	dd54      	ble.n	90026cf4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
90026c4a:	2f00      	cmp	r7, #0
90026c4c:	d054      	beq.n	90026cf8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
90026c4e:	3301      	adds	r3, #1
90026c50:	449e      	add	lr, r3
90026c52:	ea4f 035e 	mov.w	r3, lr, lsr #1
90026c56:	f01e 0f01 	tst.w	lr, #1
90026c5a:	5cd0      	ldrb	r0, [r2, r3]
90026c5c:	bf0c      	ite	eq
90026c5e:	f000 000f 	andeq.w	r0, r0, #15
90026c62:	1100      	asrne	r0, r0, #4
90026c64:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90026c68:	b2c3      	uxtb	r3, r0
90026c6a:	b2ba      	uxth	r2, r7
90026c6c:	fa1f fc8c 	uxth.w	ip, ip
90026c70:	fb02 f00c 	mul.w	r0, r2, ip
90026c74:	0112      	lsls	r2, r2, #4
90026c76:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
90026c7a:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
90026c7e:	1a12      	subs	r2, r2, r0
90026c80:	fa1f fc8c 	uxth.w	ip, ip
90026c84:	b292      	uxth	r2, r2
90026c86:	eba7 070c 	sub.w	r7, r7, ip
90026c8a:	4362      	muls	r2, r4
90026c8c:	b2bf      	uxth	r7, r7
90026c8e:	fb06 2207 	mla	r2, r6, r7, r2
90026c92:	fb0c 2505 	mla	r5, ip, r5, r2
90026c96:	fb00 5303 	mla	r3, r0, r3, r5
90026c9a:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026c9e:	b1b3      	cbz	r3, 90026cce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90026ca0:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
90026ca4:	435a      	muls	r2, r3
90026ca6:	1c53      	adds	r3, r2, #1
90026ca8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026cac:	4a2d      	ldr	r2, [pc, #180]	@ (90026d64 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
90026cae:	121b      	asrs	r3, r3, #8
90026cb0:	6812      	ldr	r2, [r2, #0]
90026cb2:	2bff      	cmp	r3, #255	@ 0xff
90026cb4:	ea4f 2612 	mov.w	r6, r2, lsr #8
90026cb8:	d120      	bne.n	90026cfc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
90026cba:	0950      	lsrs	r0, r2, #5
90026cbc:	4b2a      	ldr	r3, [pc, #168]	@ (90026d68 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
90026cbe:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90026cc2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026cc6:	4033      	ands	r3, r6
90026cc8:	4318      	orrs	r0, r3
90026cca:	4302      	orrs	r2, r0
90026ccc:	800a      	strh	r2, [r1, #0]
90026cce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
90026cd2:	2600      	movs	r6, #0
90026cd4:	e788      	b.n	90026be8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
90026cd6:	2400      	movs	r4, #0
90026cd8:	4626      	mov	r6, r4
90026cda:	e799      	b.n	90026c10 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90026cdc:	2400      	movs	r4, #0
90026cde:	e797      	b.n	90026c10 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90026ce0:	463c      	mov	r4, r7
90026ce2:	e795      	b.n	90026c10 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
90026ce4:	2500      	movs	r5, #0
90026ce6:	e7ac      	b.n	90026c42 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
90026ce8:	2300      	movs	r3, #0
90026cea:	461d      	mov	r5, r3
90026cec:	e7bd      	b.n	90026c6a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90026cee:	4663      	mov	r3, ip
90026cf0:	4665      	mov	r5, ip
90026cf2:	e7ba      	b.n	90026c6a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90026cf4:	2300      	movs	r3, #0
90026cf6:	e7b8      	b.n	90026c6a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90026cf8:	463b      	mov	r3, r7
90026cfa:	e7b6      	b.n	90026c6a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
90026cfc:	880d      	ldrh	r5, [r1, #0]
90026cfe:	b29f      	uxth	r7, r3
90026d00:	f3c2 4007 	ubfx	r0, r2, #16, #8
90026d04:	43db      	mvns	r3, r3
90026d06:	122c      	asrs	r4, r5, #8
90026d08:	fb10 f007 	smulbb	r0, r0, r7
90026d0c:	b2db      	uxtb	r3, r3
90026d0e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90026d12:	b2f6      	uxtb	r6, r6
90026d14:	b2d2      	uxtb	r2, r2
90026d16:	fb04 0403 	mla	r4, r4, r3, r0
90026d1a:	10e8      	asrs	r0, r5, #3
90026d1c:	fb12 f207 	smulbb	r2, r2, r7
90026d20:	00ed      	lsls	r5, r5, #3
90026d22:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90026d26:	b2a4      	uxth	r4, r4
90026d28:	fb16 f607 	smulbb	r6, r6, r7
90026d2c:	b2ed      	uxtb	r5, r5
90026d2e:	fb00 6603 	mla	r6, r0, r3, r6
90026d32:	fb05 2303 	mla	r3, r5, r3, r2
90026d36:	b2b0      	uxth	r0, r6
90026d38:	b29a      	uxth	r2, r3
90026d3a:	1c63      	adds	r3, r4, #1
90026d3c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90026d40:	1c53      	adds	r3, r2, #1
90026d42:	eb03 2312 	add.w	r3, r3, r2, lsr #8
90026d46:	1c42      	adds	r2, r0, #1
90026d48:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90026d4c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90026d50:	f3c3 23c4 	ubfx	r3, r3, #11, #5
90026d54:	0940      	lsrs	r0, r0, #5
90026d56:	4323      	orrs	r3, r4
90026d58:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90026d5c:	4303      	orrs	r3, r0
90026d5e:	800b      	strh	r3, [r1, #0]
90026d60:	e7b5      	b.n	90026cce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
90026d62:	bf00      	nop
90026d64:	2402199c 	.word	0x2402199c
90026d68:	00fff800 	.word	0x00fff800

90026d6c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90026d6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90026d70:	b097      	sub	sp, #92	@ 0x5c
90026d72:	9214      	str	r2, [sp, #80]	@ 0x50
90026d74:	9309      	str	r3, [sp, #36]	@ 0x24
90026d76:	9a25      	ldr	r2, [sp, #148]	@ 0x94
90026d78:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
90026d7c:	9015      	str	r0, [sp, #84]	@ 0x54
90026d7e:	910d      	str	r1, [sp, #52]	@ 0x34
90026d80:	6850      	ldr	r0, [r2, #4]
90026d82:	930f      	str	r3, [sp, #60]	@ 0x3c
90026d84:	6812      	ldr	r2, [r2, #0]
90026d86:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
90026d8a:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
90026d8e:	fb00 1303 	mla	r3, r0, r3, r1
90026d92:	eb02 0943 	add.w	r9, r2, r3, lsl #1
90026d96:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026d98:	689b      	ldr	r3, [r3, #8]
90026d9a:	3301      	adds	r3, #1
90026d9c:	f023 0301 	bic.w	r3, r3, #1
90026da0:	930a      	str	r3, [sp, #40]	@ 0x28
90026da2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026da4:	681f      	ldr	r7, [r3, #0]
90026da6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90026da8:	2b00      	cmp	r3, #0
90026daa:	dc03      	bgt.n	90026db4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
90026dac:	9b14      	ldr	r3, [sp, #80]	@ 0x50
90026dae:	2b00      	cmp	r3, #0
90026db0:	f340 8289 	ble.w	900272c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90026db4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026db6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
90026dba:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
90026dbe:	1e48      	subs	r0, r1, #1
90026dc0:	f102 3cff 	add.w	ip, r2, #4294967295
90026dc4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90026dc6:	2b00      	cmp	r3, #0
90026dc8:	f340 80c5 	ble.w	90026f56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
90026dcc:	ea5f 4e24 	movs.w	lr, r4, asr #16
90026dd0:	ea4f 4326 	mov.w	r3, r6, asr #16
90026dd4:	d406      	bmi.n	90026de4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90026dd6:	4586      	cmp	lr, r0
90026dd8:	da04      	bge.n	90026de4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90026dda:	2b00      	cmp	r3, #0
90026ddc:	db02      	blt.n	90026de4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
90026dde:	4563      	cmp	r3, ip
90026de0:	f2c0 80ba 	blt.w	90026f58 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
90026de4:	f11e 0e01 	adds.w	lr, lr, #1
90026de8:	f100 80ab 	bmi.w	90026f42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90026dec:	4571      	cmp	r1, lr
90026dee:	f2c0 80a8 	blt.w	90026f42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90026df2:	3301      	adds	r3, #1
90026df4:	f100 80a5 	bmi.w	90026f42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90026df8:	429a      	cmp	r2, r3
90026dfa:	f2c0 80a2 	blt.w	90026f42 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
90026dfe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90026e00:	46c8      	mov	r8, r9
90026e02:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
90026e06:	930e      	str	r3, [sp, #56]	@ 0x38
90026e08:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90026e0a:	2b00      	cmp	r3, #0
90026e0c:	f340 80c4 	ble.w	90026f98 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
90026e10:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
90026e12:	1430      	asrs	r0, r6, #16
90026e14:	f3c4 3203 	ubfx	r2, r4, #12, #4
90026e18:	f3c6 3103 	ubfx	r1, r6, #12, #4
90026e1c:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90026e20:	1423      	asrs	r3, r4, #16
90026e22:	f100 814f 	bmi.w	900270c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90026e26:	f10c 3bff 	add.w	fp, ip, #4294967295
90026e2a:	455b      	cmp	r3, fp
90026e2c:	f280 814a 	bge.w	900270c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90026e30:	2800      	cmp	r0, #0
90026e32:	f2c0 8147 	blt.w	900270c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90026e36:	f10e 3bff 	add.w	fp, lr, #4294967295
90026e3a:	4558      	cmp	r0, fp
90026e3c:	f280 8142 	bge.w	900270c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
90026e40:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
90026e42:	fb00 3305 	mla	r3, r0, r5, r3
90026e46:	0858      	lsrs	r0, r3, #1
90026e48:	07dd      	lsls	r5, r3, #31
90026e4a:	f817 c000 	ldrb.w	ip, [r7, r0]
90026e4e:	bf54      	ite	pl
90026e50:	f00c 0c0f 	andpl.w	ip, ip, #15
90026e54:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90026e58:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90026e5c:	fa5f fc8c 	uxtb.w	ip, ip
90026e60:	2a00      	cmp	r2, #0
90026e62:	f000 80dd 	beq.w	90027020 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
90026e66:	1c58      	adds	r0, r3, #1
90026e68:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90026e6c:	07c0      	lsls	r0, r0, #31
90026e6e:	f817 e00e 	ldrb.w	lr, [r7, lr]
90026e72:	bf54      	ite	pl
90026e74:	f00e 0e0f 	andpl.w	lr, lr, #15
90026e78:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90026e7c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90026e80:	fa5f f08e 	uxtb.w	r0, lr
90026e84:	9010      	str	r0, [sp, #64]	@ 0x40
90026e86:	b1d9      	cbz	r1, 90026ec0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90026e88:	4453      	add	r3, sl
90026e8a:	0858      	lsrs	r0, r3, #1
90026e8c:	07dd      	lsls	r5, r3, #31
90026e8e:	f103 0301 	add.w	r3, r3, #1
90026e92:	5c38      	ldrb	r0, [r7, r0]
90026e94:	bf54      	ite	pl
90026e96:	f000 000f 	andpl.w	r0, r0, #15
90026e9a:	1100      	asrmi	r0, r0, #4
90026e9c:	07dd      	lsls	r5, r3, #31
90026e9e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
90026ea2:	b2c0      	uxtb	r0, r0
90026ea4:	900b      	str	r0, [sp, #44]	@ 0x2c
90026ea6:	ea4f 0053 	mov.w	r0, r3, lsr #1
90026eaa:	f817 e000 	ldrb.w	lr, [r7, r0]
90026eae:	bf54      	ite	pl
90026eb0:	f00e 030f 	andpl.w	r3, lr, #15
90026eb4:	ea4f 132e 	movmi.w	r3, lr, asr #4
90026eb8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90026ebc:	b2db      	uxtb	r3, r3
90026ebe:	9311      	str	r3, [sp, #68]	@ 0x44
90026ec0:	b292      	uxth	r2, r2
90026ec2:	9d10      	ldr	r5, [sp, #64]	@ 0x40
90026ec4:	b289      	uxth	r1, r1
90026ec6:	fb02 f301 	mul.w	r3, r2, r1
90026eca:	0112      	lsls	r2, r2, #4
90026ecc:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
90026ed0:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
90026ed4:	1ad2      	subs	r2, r2, r3
90026ed6:	b289      	uxth	r1, r1
90026ed8:	b292      	uxth	r2, r2
90026eda:	1a40      	subs	r0, r0, r1
90026edc:	436a      	muls	r2, r5
90026ede:	b280      	uxth	r0, r0
90026ee0:	fb0c 2c00 	mla	ip, ip, r0, r2
90026ee4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
90026ee6:	fb01 c102 	mla	r1, r1, r2, ip
90026eea:	9a11      	ldr	r2, [sp, #68]	@ 0x44
90026eec:	fb03 1302 	mla	r3, r3, r2, r1
90026ef0:	f3c3 2307 	ubfx	r3, r3, #8, #8
90026ef4:	b1db      	cbz	r3, 90026f2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90026ef6:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
90026ef8:	4353      	muls	r3, r2
90026efa:	1c5a      	adds	r2, r3, #1
90026efc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
90026f00:	4ac6      	ldr	r2, [pc, #792]	@ (9002721c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
90026f02:	121b      	asrs	r3, r3, #8
90026f04:	6812      	ldr	r2, [r2, #0]
90026f06:	2bff      	cmp	r3, #255	@ 0xff
90026f08:	ea4f 2c12 	mov.w	ip, r2, lsr #8
90026f0c:	f040 8099 	bne.w	90027042 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
90026f10:	0953      	lsrs	r3, r2, #5
90026f12:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
90026f16:	f3c2 02c4 	ubfx	r2, r2, #3, #5
90026f1a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
90026f1e:	f02c 0c07 	bic.w	ip, ip, #7
90026f22:	ea43 0c0c 	orr.w	ip, r3, ip
90026f26:	ea4c 0202 	orr.w	r2, ip, r2
90026f2a:	f8a8 2000 	strh.w	r2, [r8]
90026f2e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90026f30:	f108 0802 	add.w	r8, r8, #2
90026f34:	441c      	add	r4, r3
90026f36:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026f38:	441e      	add	r6, r3
90026f3a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
90026f3c:	3b01      	subs	r3, #1
90026f3e:	930e      	str	r3, [sp, #56]	@ 0x38
90026f40:	e762      	b.n	90026e08 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
90026f42:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
90026f44:	f109 0902 	add.w	r9, r9, #2
90026f48:	441c      	add	r4, r3
90026f4a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90026f4c:	441e      	add	r6, r3
90026f4e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90026f50:	3b01      	subs	r3, #1
90026f52:	9309      	str	r3, [sp, #36]	@ 0x24
90026f54:	e736      	b.n	90026dc4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
90026f56:	d024      	beq.n	90026fa2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
90026f58:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90026f5a:	9823      	ldr	r0, [sp, #140]	@ 0x8c
90026f5c:	3b01      	subs	r3, #1
90026f5e:	fb00 4003 	mla	r0, r0, r3, r4
90026f62:	1400      	asrs	r0, r0, #16
90026f64:	f53f af4b 	bmi.w	90026dfe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90026f68:	3901      	subs	r1, #1
90026f6a:	4288      	cmp	r0, r1
90026f6c:	f6bf af47 	bge.w	90026dfe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90026f70:	9924      	ldr	r1, [sp, #144]	@ 0x90
90026f72:	fb01 6303 	mla	r3, r1, r3, r6
90026f76:	141b      	asrs	r3, r3, #16
90026f78:	f53f af41 	bmi.w	90026dfe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90026f7c:	3a01      	subs	r2, #1
90026f7e:	4293      	cmp	r3, r2
90026f80:	f6bf af3d 	bge.w	90026dfe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
90026f84:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
90026f88:	46c8      	mov	r8, r9
90026f8a:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
90026f8e:	930e      	str	r3, [sp, #56]	@ 0x38
90026f90:	f1bb 0f00 	cmp.w	fp, #0
90026f94:	f300 80b7 	bgt.w	90027106 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
90026f98:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90026f9a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
90026f9e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90026fa2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90026fa4:	2b00      	cmp	r3, #0
90026fa6:	f340 818e 	ble.w	900272c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
90026faa:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90026fae:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90026fb0:	ee30 0a04 	vadd.f32	s0, s0, s8
90026fb4:	ee70 0aa4 	vadd.f32	s1, s1, s9
90026fb8:	eef0 6a62 	vmov.f32	s13, s5
90026fbc:	eec7 7a00 	vdiv.f32	s15, s14, s0
90026fc0:	ee31 1a05 	vadd.f32	s2, s2, s10
90026fc4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026fc8:	ee16 4a90 	vmov	r4, s13
90026fcc:	eef0 6a43 	vmov.f32	s13, s6
90026fd0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
90026fd4:	ee16 6a90 	vmov	r6, s13
90026fd8:	ee20 7aa7 	vmul.f32	s14, s1, s15
90026fdc:	ee61 7a27 	vmul.f32	s15, s2, s15
90026fe0:	ee77 2a62 	vsub.f32	s5, s14, s5
90026fe4:	ee37 3ac3 	vsub.f32	s6, s15, s6
90026fe8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
90026fec:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
90026ff0:	ee12 2a90 	vmov	r2, s5
90026ff4:	eef0 2a47 	vmov.f32	s5, s14
90026ff8:	fb92 f3f3 	sdiv	r3, r2, r3
90026ffc:	ee13 2a10 	vmov	r2, s6
90027000:	9323      	str	r3, [sp, #140]	@ 0x8c
90027002:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027004:	eeb0 3a67 	vmov.f32	s6, s15
90027008:	fb92 f3f3 	sdiv	r3, r2, r3
9002700c:	9324      	str	r3, [sp, #144]	@ 0x90
9002700e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
90027010:	9a14      	ldr	r2, [sp, #80]	@ 0x50
90027012:	3b01      	subs	r3, #1
90027014:	930d      	str	r3, [sp, #52]	@ 0x34
90027016:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027018:	bf08      	it	eq
9002701a:	4613      	moveq	r3, r2
9002701c:	9309      	str	r3, [sp, #36]	@ 0x24
9002701e:	e6c2      	b.n	90026da6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
90027020:	2900      	cmp	r1, #0
90027022:	f43f af4d 	beq.w	90026ec0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90027026:	eb0a 0003 	add.w	r0, sl, r3
9002702a:	0843      	lsrs	r3, r0, #1
9002702c:	07c0      	lsls	r0, r0, #31
9002702e:	5cfb      	ldrb	r3, [r7, r3]
90027030:	bf54      	ite	pl
90027032:	f003 030f 	andpl.w	r3, r3, #15
90027036:	111b      	asrmi	r3, r3, #4
90027038:	eb03 1303 	add.w	r3, r3, r3, lsl #4
9002703c:	b2db      	uxtb	r3, r3
9002703e:	930b      	str	r3, [sp, #44]	@ 0x2c
90027040:	e73e      	b.n	90026ec0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
90027042:	f8b8 e000 	ldrh.w	lr, [r8]
90027046:	fa1f fb83 	uxth.w	fp, r3
9002704a:	f3c2 4107 	ubfx	r1, r2, #16, #8
9002704e:	43db      	mvns	r3, r3
90027050:	ea4f 202e 	mov.w	r0, lr, asr #8
90027054:	fb11 f10b 	smulbb	r1, r1, fp
90027058:	b2db      	uxtb	r3, r3
9002705a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
9002705e:	fa5f fc8c 	uxtb.w	ip, ip
90027062:	b2d2      	uxtb	r2, r2
90027064:	fb00 1003 	mla	r0, r0, r3, r1
90027068:	ea4f 01ee 	mov.w	r1, lr, asr #3
9002706c:	fb1c fc0b 	smulbb	ip, ip, fp
90027070:	ea4f 0ece 	mov.w	lr, lr, lsl #3
90027074:	b280      	uxth	r0, r0
90027076:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
9002707a:	fb12 fb0b 	smulbb	fp, r2, fp
9002707e:	fa5f fe8e 	uxtb.w	lr, lr
90027082:	fb01 cc03 	mla	ip, r1, r3, ip
90027086:	fb0e bb03 	mla	fp, lr, r3, fp
9002708a:	1c43      	adds	r3, r0, #1
9002708c:	fa1f fc8c 	uxth.w	ip, ip
90027090:	fa1f fb8b 	uxth.w	fp, fp
90027094:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90027098:	f10c 0101 	add.w	r1, ip, #1
9002709c:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
900270a0:	f10b 0001 	add.w	r0, fp, #1
900270a4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900270a8:	eb00 201b 	add.w	r0, r0, fp, lsr #8
900270ac:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900270b0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
900270b4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900270b8:	4318      	orrs	r0, r3
900270ba:	ea40 000c 	orr.w	r0, r0, ip
900270be:	f8a8 0000 	strh.w	r0, [r8]
900270c2:	e734      	b.n	90026f2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900270c4:	f113 0b01 	adds.w	fp, r3, #1
900270c8:	f53f af31 	bmi.w	90026f2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900270cc:	45dc      	cmp	ip, fp
900270ce:	f6ff af2e 	blt.w	90026f2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900270d2:	f110 0b01 	adds.w	fp, r0, #1
900270d6:	f53f af2a 	bmi.w	90026f2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900270da:	45de      	cmp	lr, fp
900270dc:	f6ff af27 	blt.w	90026f2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
900270e0:	9302      	str	r3, [sp, #8]
900270e2:	fa0f f38e 	sxth.w	r3, lr
900270e6:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
900270e8:	9301      	str	r3, [sp, #4]
900270ea:	fa0f f38c 	sxth.w	r3, ip
900270ee:	e9cd 0203 	strd	r0, r2, [sp, #12]
900270f2:	e9cd 1505 	strd	r1, r5, [sp, #20]
900270f6:	9300      	str	r3, [sp, #0]
900270f8:	463a      	mov	r2, r7
900270fa:	4653      	mov	r3, sl
900270fc:	4641      	mov	r1, r8
900270fe:	9815      	ldr	r0, [sp, #84]	@ 0x54
90027100:	f7ff fd4c 	bl	90026b9c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
90027104:	e713      	b.n	90026f2e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
90027106:	1422      	asrs	r2, r4, #16
90027108:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
9002710a:	1433      	asrs	r3, r6, #16
9002710c:	f3c4 3103 	ubfx	r1, r4, #12, #4
90027110:	f3c6 3003 	ubfx	r0, r6, #12, #4
90027114:	fb05 2303 	mla	r3, r5, r3, r2
90027118:	085a      	lsrs	r2, r3, #1
9002711a:	07dd      	lsls	r5, r3, #31
9002711c:	5cba      	ldrb	r2, [r7, r2]
9002711e:	bf54      	ite	pl
90027120:	f002 020f 	andpl.w	r2, r2, #15
90027124:	1112      	asrmi	r2, r2, #4
90027126:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9002712a:	b2d2      	uxtb	r2, r2
9002712c:	2900      	cmp	r1, #0
9002712e:	d077      	beq.n	90027220 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
90027130:	f103 0e01 	add.w	lr, r3, #1
90027134:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
90027138:	f01e 0f01 	tst.w	lr, #1
9002713c:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027140:	bf0c      	ite	eq
90027142:	f00c 0c0f 	andeq.w	ip, ip, #15
90027146:	ea4f 1c2c 	movne.w	ip, ip, asr #4
9002714a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
9002714e:	fa5f f58c 	uxtb.w	r5, ip
90027152:	9512      	str	r5, [sp, #72]	@ 0x48
90027154:	b308      	cbz	r0, 9002719a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027156:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90027158:	442b      	add	r3, r5
9002715a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
9002715e:	07dd      	lsls	r5, r3, #31
90027160:	f103 0301 	add.w	r3, r3, #1
90027164:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027168:	bf54      	ite	pl
9002716a:	f00c 0c0f 	andpl.w	ip, ip, #15
9002716e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027172:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027176:	fa5f f58c 	uxtb.w	r5, ip
9002717a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
9002717e:	950c      	str	r5, [sp, #48]	@ 0x30
90027180:	07dd      	lsls	r5, r3, #31
90027182:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027186:	bf54      	ite	pl
90027188:	f00c 0c0f 	andpl.w	ip, ip, #15
9002718c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
90027190:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027194:	fa5f f38c 	uxtb.w	r3, ip
90027198:	9313      	str	r3, [sp, #76]	@ 0x4c
9002719a:	b289      	uxth	r1, r1
9002719c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
9002719e:	b280      	uxth	r0, r0
900271a0:	fb01 f300 	mul.w	r3, r1, r0
900271a4:	0109      	lsls	r1, r1, #4
900271a6:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
900271aa:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
900271ae:	1ac9      	subs	r1, r1, r3
900271b0:	b280      	uxth	r0, r0
900271b2:	b289      	uxth	r1, r1
900271b4:	ebac 0c00 	sub.w	ip, ip, r0
900271b8:	4369      	muls	r1, r5
900271ba:	fa1f fc8c 	uxth.w	ip, ip
900271be:	fb02 120c 	mla	r2, r2, ip, r1
900271c2:	990c      	ldr	r1, [sp, #48]	@ 0x30
900271c4:	fb00 2001 	mla	r0, r0, r1, r2
900271c8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
900271ca:	fb03 0302 	mla	r3, r3, r2, r0
900271ce:	f3c3 2307 	ubfx	r3, r3, #8, #8
900271d2:	b1d3      	cbz	r3, 9002720a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
900271d4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
900271d6:	4353      	muls	r3, r2
900271d8:	1c5a      	adds	r2, r3, #1
900271da:	eb02 2313 	add.w	r3, r2, r3, lsr #8
900271de:	4a0f      	ldr	r2, [pc, #60]	@ (9002721c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
900271e0:	121b      	asrs	r3, r3, #8
900271e2:	6812      	ldr	r2, [r2, #0]
900271e4:	2bff      	cmp	r3, #255	@ 0xff
900271e6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
900271ea:	d12d      	bne.n	90027248 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
900271ec:	0953      	lsrs	r3, r2, #5
900271ee:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
900271f2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900271f6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
900271fa:	f02c 0c07 	bic.w	ip, ip, #7
900271fe:	ea43 0c0c 	orr.w	ip, r3, ip
90027202:	ea4c 0202 	orr.w	r2, ip, r2
90027206:	f8a8 2000 	strh.w	r2, [r8]
9002720a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
9002720c:	f108 0802 	add.w	r8, r8, #2
90027210:	f10b 3bff 	add.w	fp, fp, #4294967295
90027214:	441c      	add	r4, r3
90027216:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027218:	441e      	add	r6, r3
9002721a:	e6b9      	b.n	90026f90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
9002721c:	2402199c 	.word	0x2402199c
90027220:	2800      	cmp	r0, #0
90027222:	d0ba      	beq.n	9002719a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027224:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
90027226:	442b      	add	r3, r5
90027228:	ea4f 0c53 	mov.w	ip, r3, lsr #1
9002722c:	07db      	lsls	r3, r3, #31
9002722e:	f817 c00c 	ldrb.w	ip, [r7, ip]
90027232:	bf54      	ite	pl
90027234:	f00c 0c0f 	andpl.w	ip, ip, #15
90027238:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9002723c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027240:	fa5f f38c 	uxtb.w	r3, ip
90027244:	930c      	str	r3, [sp, #48]	@ 0x30
90027246:	e7a8      	b.n	9002719a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
90027248:	f8b8 e000 	ldrh.w	lr, [r8]
9002724c:	fa1f fa83 	uxth.w	sl, r3
90027250:	f3c2 4107 	ubfx	r1, r2, #16, #8
90027254:	43db      	mvns	r3, r3
90027256:	ea4f 202e 	mov.w	r0, lr, asr #8
9002725a:	fb11 f10a 	smulbb	r1, r1, sl
9002725e:	b2db      	uxtb	r3, r3
90027260:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
90027264:	b2d2      	uxtb	r2, r2
90027266:	fa5f fc8c 	uxtb.w	ip, ip
9002726a:	fb00 1003 	mla	r0, r0, r3, r1
9002726e:	ea4f 01ee 	mov.w	r1, lr, asr #3
90027272:	fb12 f20a 	smulbb	r2, r2, sl
90027276:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002727a:	b280      	uxth	r0, r0
9002727c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
90027280:	fb1c fc0a 	smulbb	ip, ip, sl
90027284:	fa5f fe8e 	uxtb.w	lr, lr
90027288:	fb0e 2203 	mla	r2, lr, r3, r2
9002728c:	fb01 cc03 	mla	ip, r1, r3, ip
90027290:	1c43      	adds	r3, r0, #1
90027292:	b292      	uxth	r2, r2
90027294:	eb03 2010 	add.w	r0, r3, r0, lsr #8
90027298:	1c51      	adds	r1, r2, #1
9002729a:	fa1f fc8c 	uxth.w	ip, ip
9002729e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
900272a2:	eb01 2112 	add.w	r1, r1, r2, lsr #8
900272a6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
900272aa:	4308      	orrs	r0, r1
900272ac:	f10c 0101 	add.w	r1, ip, #1
900272b0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
900272b4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
900272b8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
900272bc:	ea40 000c 	orr.w	r0, r0, ip
900272c0:	f8a8 0000 	strh.w	r0, [r8]
900272c4:	e7a1      	b.n	9002720a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
900272c6:	b017      	add	sp, #92	@ 0x5c
900272c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

900272cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
900272cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
900272d0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
900272d4:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
900272d8:	2d00      	cmp	r5, #0
900272da:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
900272de:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
900272e2:	fb05 0e03 	mla	lr, r5, r3, r0
900272e6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
900272ea:	f2c0 80b0 	blt.w	9002744e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
900272ee:	45a9      	cmp	r9, r5
900272f0:	f340 80ad 	ble.w	9002744e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
900272f4:	2800      	cmp	r0, #0
900272f6:	f2c0 80a8 	blt.w	9002744a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
900272fa:	4580      	cmp	r8, r0
900272fc:	f340 80a5 	ble.w	9002744a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
90027300:	ea4f 045e 	mov.w	r4, lr, lsr #1
90027304:	f01e 0f01 	tst.w	lr, #1
90027308:	5d16      	ldrb	r6, [r2, r4]
9002730a:	bf0c      	ite	eq
9002730c:	f006 060f 	andeq.w	r6, r6, #15
90027310:	1136      	asrne	r6, r6, #4
90027312:	eb06 1606 	add.w	r6, r6, r6, lsl #4
90027316:	b2f6      	uxtb	r6, r6
90027318:	1c44      	adds	r4, r0, #1
9002731a:	f100 809b 	bmi.w	90027454 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
9002731e:	45a0      	cmp	r8, r4
90027320:	f340 8098 	ble.w	90027454 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
90027324:	2f00      	cmp	r7, #0
90027326:	f000 8097 	beq.w	90027458 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
9002732a:	f10e 0a01 	add.w	sl, lr, #1
9002732e:	ea4f 045a 	mov.w	r4, sl, lsr #1
90027332:	f01a 0f01 	tst.w	sl, #1
90027336:	5d14      	ldrb	r4, [r2, r4]
90027338:	bf0c      	ite	eq
9002733a:	f004 040f 	andeq.w	r4, r4, #15
9002733e:	1124      	asrne	r4, r4, #4
90027340:	eb04 1404 	add.w	r4, r4, r4, lsl #4
90027344:	b2e4      	uxtb	r4, r4
90027346:	3501      	adds	r5, #1
90027348:	f100 808a 	bmi.w	90027460 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
9002734c:	45a9      	cmp	r9, r5
9002734e:	f340 8087 	ble.w	90027460 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
90027352:	f1bc 0f00 	cmp.w	ip, #0
90027356:	f000 8086 	beq.w	90027466 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
9002735a:	2800      	cmp	r0, #0
9002735c:	db7e      	blt.n	9002745c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
9002735e:	4580      	cmp	r8, r0
90027360:	dd7c      	ble.n	9002745c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
90027362:	eb03 090e 	add.w	r9, r3, lr
90027366:	ea4f 0559 	mov.w	r5, r9, lsr #1
9002736a:	f019 0f01 	tst.w	r9, #1
9002736e:	5d55      	ldrb	r5, [r2, r5]
90027370:	bf0c      	ite	eq
90027372:	f005 050f 	andeq.w	r5, r5, #15
90027376:	112d      	asrne	r5, r5, #4
90027378:	eb05 1505 	add.w	r5, r5, r5, lsl #4
9002737c:	b2ed      	uxtb	r5, r5
9002737e:	3001      	adds	r0, #1
90027380:	d474      	bmi.n	9002746c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90027382:	4580      	cmp	r8, r0
90027384:	dd72      	ble.n	9002746c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
90027386:	2f00      	cmp	r7, #0
90027388:	d072      	beq.n	90027470 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
9002738a:	3301      	adds	r3, #1
9002738c:	449e      	add	lr, r3
9002738e:	ea4f 035e 	mov.w	r3, lr, lsr #1
90027392:	f01e 0f01 	tst.w	lr, #1
90027396:	5cd0      	ldrb	r0, [r2, r3]
90027398:	bf0c      	ite	eq
9002739a:	f000 000f 	andeq.w	r0, r0, #15
9002739e:	1100      	asrne	r0, r0, #4
900273a0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900273a4:	b2c3      	uxtb	r3, r0
900273a6:	b2ba      	uxth	r2, r7
900273a8:	fa1f fc8c 	uxth.w	ip, ip
900273ac:	fb02 f00c 	mul.w	r0, r2, ip
900273b0:	0112      	lsls	r2, r2, #4
900273b2:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
900273b6:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
900273ba:	1a12      	subs	r2, r2, r0
900273bc:	fa1f fc8c 	uxth.w	ip, ip
900273c0:	b292      	uxth	r2, r2
900273c2:	eba7 070c 	sub.w	r7, r7, ip
900273c6:	4362      	muls	r2, r4
900273c8:	b2bf      	uxth	r7, r7
900273ca:	fb06 2207 	mla	r2, r6, r7, r2
900273ce:	fb0c 2505 	mla	r5, ip, r5, r2
900273d2:	fb00 5303 	mla	r3, r0, r3, r5
900273d6:	f3c3 2307 	ubfx	r3, r3, #8, #8
900273da:	b3a3      	cbz	r3, 90027446 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
900273dc:	4a25      	ldr	r2, [pc, #148]	@ (90027474 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
900273de:	880e      	ldrh	r6, [r1, #0]
900273e0:	6815      	ldr	r5, [r2, #0]
900273e2:	b29a      	uxth	r2, r3
900273e4:	1234      	asrs	r4, r6, #8
900273e6:	43db      	mvns	r3, r3
900273e8:	f3c5 4007 	ubfx	r0, r5, #16, #8
900273ec:	f3c5 2707 	ubfx	r7, r5, #8, #8
900273f0:	b2db      	uxtb	r3, r3
900273f2:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
900273f6:	fb10 f002 	smulbb	r0, r0, r2
900273fa:	b2ed      	uxtb	r5, r5
900273fc:	fb17 f702 	smulbb	r7, r7, r2
90027400:	fb04 0403 	mla	r4, r4, r3, r0
90027404:	10f0      	asrs	r0, r6, #3
90027406:	fb15 f202 	smulbb	r2, r5, r2
9002740a:	00f6      	lsls	r6, r6, #3
9002740c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90027410:	b2a4      	uxth	r4, r4
90027412:	b2f6      	uxtb	r6, r6
90027414:	fb00 7003 	mla	r0, r0, r3, r7
90027418:	fb06 2303 	mla	r3, r6, r3, r2
9002741c:	b280      	uxth	r0, r0
9002741e:	b29a      	uxth	r2, r3
90027420:	1c63      	adds	r3, r4, #1
90027422:	eb03 2414 	add.w	r4, r3, r4, lsr #8
90027426:	1c53      	adds	r3, r2, #1
90027428:	eb03 2312 	add.w	r3, r3, r2, lsr #8
9002742c:	1c42      	adds	r2, r0, #1
9002742e:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90027432:	eb02 2010 	add.w	r0, r2, r0, lsr #8
90027436:	f3c3 23c4 	ubfx	r3, r3, #11, #5
9002743a:	0940      	lsrs	r0, r0, #5
9002743c:	4323      	orrs	r3, r4
9002743e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027442:	4303      	orrs	r3, r0
90027444:	800b      	strh	r3, [r1, #0]
90027446:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002744a:	2600      	movs	r6, #0
9002744c:	e764      	b.n	90027318 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
9002744e:	2400      	movs	r4, #0
90027450:	4626      	mov	r6, r4
90027452:	e778      	b.n	90027346 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90027454:	2400      	movs	r4, #0
90027456:	e776      	b.n	90027346 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
90027458:	463c      	mov	r4, r7
9002745a:	e774      	b.n	90027346 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
9002745c:	2500      	movs	r5, #0
9002745e:	e78e      	b.n	9002737e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
90027460:	2300      	movs	r3, #0
90027462:	461d      	mov	r5, r3
90027464:	e79f      	b.n	900273a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90027466:	4663      	mov	r3, ip
90027468:	4665      	mov	r5, ip
9002746a:	e79c      	b.n	900273a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
9002746c:	2300      	movs	r3, #0
9002746e:	e79a      	b.n	900273a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90027470:	463b      	mov	r3, r7
90027472:	e798      	b.n	900273a6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
90027474:	2402199c 	.word	0x2402199c

90027478 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
90027478:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
9002747c:	b093      	sub	sp, #76	@ 0x4c
9002747e:	461d      	mov	r5, r3
90027480:	920c      	str	r2, [sp, #48]	@ 0x30
90027482:	9a21      	ldr	r2, [sp, #132]	@ 0x84
90027484:	9011      	str	r0, [sp, #68]	@ 0x44
90027486:	9107      	str	r1, [sp, #28]
90027488:	6850      	ldr	r0, [r2, #4]
9002748a:	6812      	ldr	r2, [r2, #0]
9002748c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
90027490:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
90027494:	fb00 1303 	mla	r3, r0, r3, r1
90027498:	eb02 0943 	add.w	r9, r2, r3, lsl #1
9002749c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
9002749e:	689b      	ldr	r3, [r3, #8]
900274a0:	3301      	adds	r3, #1
900274a2:	f023 0301 	bic.w	r3, r3, #1
900274a6:	9306      	str	r3, [sp, #24]
900274a8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900274aa:	681f      	ldr	r7, [r3, #0]
900274ac:	9b07      	ldr	r3, [sp, #28]
900274ae:	2b00      	cmp	r3, #0
900274b0:	dc03      	bgt.n	900274ba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
900274b2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
900274b4:	2b00      	cmp	r3, #0
900274b6:	f340 8267 	ble.w	90027988 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
900274ba:	9b24      	ldr	r3, [sp, #144]	@ 0x90
900274bc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
900274c0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
900274c4:	1e48      	subs	r0, r1, #1
900274c6:	f102 3cff 	add.w	ip, r2, #4294967295
900274ca:	2d00      	cmp	r5, #0
900274cc:	f340 80b7 	ble.w	9002763e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
900274d0:	ea5f 4e24 	movs.w	lr, r4, asr #16
900274d4:	ea4f 4326 	mov.w	r3, r6, asr #16
900274d8:	d406      	bmi.n	900274e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900274da:	4586      	cmp	lr, r0
900274dc:	da04      	bge.n	900274e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900274de:	2b00      	cmp	r3, #0
900274e0:	db02      	blt.n	900274e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
900274e2:	4563      	cmp	r3, ip
900274e4:	f2c0 80ac 	blt.w	90027640 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
900274e8:	f11e 0e01 	adds.w	lr, lr, #1
900274ec:	f100 809f 	bmi.w	9002762e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900274f0:	4571      	cmp	r1, lr
900274f2:	f2c0 809c 	blt.w	9002762e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900274f6:	3301      	adds	r3, #1
900274f8:	f100 8099 	bmi.w	9002762e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
900274fc:	429a      	cmp	r2, r3
900274fe:	f2c0 8096 	blt.w	9002762e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
90027502:	46c8      	mov	r8, r9
90027504:	f9bd a018 	ldrsh.w	sl, [sp, #24]
90027508:	9509      	str	r5, [sp, #36]	@ 0x24
9002750a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
9002750c:	2b00      	cmp	r3, #0
9002750e:	f340 80b5 	ble.w	9002767c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
90027512:	f3c4 3303 	ubfx	r3, r4, #12, #4
90027516:	1430      	asrs	r0, r6, #16
90027518:	f3c6 3103 	ubfx	r1, r6, #12, #4
9002751c:	9308      	str	r3, [sp, #32]
9002751e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
90027520:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
90027524:	1423      	asrs	r3, r4, #16
90027526:	f100 813f 	bmi.w	900277a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002752a:	f10c 3bff 	add.w	fp, ip, #4294967295
9002752e:	455b      	cmp	r3, fp
90027530:	f280 813a 	bge.w	900277a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90027534:	2800      	cmp	r0, #0
90027536:	f2c0 8137 	blt.w	900277a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
9002753a:	f10e 3bff 	add.w	fp, lr, #4294967295
9002753e:	4558      	cmp	r0, fp
90027540:	f280 8132 	bge.w	900277a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
90027544:	9a06      	ldr	r2, [sp, #24]
90027546:	fb00 3302 	mla	r3, r0, r2, r3
9002754a:	0858      	lsrs	r0, r3, #1
9002754c:	07da      	lsls	r2, r3, #31
9002754e:	9a08      	ldr	r2, [sp, #32]
90027550:	f817 c000 	ldrb.w	ip, [r7, r0]
90027554:	bf54      	ite	pl
90027556:	f00c 0c0f 	andpl.w	ip, ip, #15
9002755a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
9002755e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
90027562:	fa5f fc8c 	uxtb.w	ip, ip
90027566:	2a00      	cmp	r2, #0
90027568:	f000 80cc 	beq.w	90027704 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
9002756c:	1c58      	adds	r0, r3, #1
9002756e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
90027572:	07c0      	lsls	r0, r0, #31
90027574:	f817 e00e 	ldrb.w	lr, [r7, lr]
90027578:	bf54      	ite	pl
9002757a:	f00e 0e0f 	andpl.w	lr, lr, #15
9002757e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
90027582:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
90027586:	fa5f fe8e 	uxtb.w	lr, lr
9002758a:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
9002758e:	b1b9      	cbz	r1, 900275c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90027590:	4453      	add	r3, sl
90027592:	0858      	lsrs	r0, r3, #1
90027594:	07da      	lsls	r2, r3, #31
90027596:	5c38      	ldrb	r0, [r7, r0]
90027598:	bf54      	ite	pl
9002759a:	f000 000f 	andpl.w	r0, r0, #15
9002759e:	1100      	asrmi	r0, r0, #4
900275a0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
900275a4:	b2c0      	uxtb	r0, r0
900275a6:	900a      	str	r0, [sp, #40]	@ 0x28
900275a8:	1c58      	adds	r0, r3, #1
900275aa:	0843      	lsrs	r3, r0, #1
900275ac:	07c2      	lsls	r2, r0, #31
900275ae:	5cfb      	ldrb	r3, [r7, r3]
900275b0:	bf54      	ite	pl
900275b2:	f003 030f 	andpl.w	r3, r3, #15
900275b6:	111b      	asrmi	r3, r3, #4
900275b8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
900275bc:	b2db      	uxtb	r3, r3
900275be:	930e      	str	r3, [sp, #56]	@ 0x38
900275c0:	f8bd 2020 	ldrh.w	r2, [sp, #32]
900275c4:	b289      	uxth	r1, r1
900275c6:	fb02 f301 	mul.w	r3, r2, r1
900275ca:	0112      	lsls	r2, r2, #4
900275cc:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
900275d0:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
900275d4:	1ad2      	subs	r2, r2, r3
900275d6:	b289      	uxth	r1, r1
900275d8:	b292      	uxth	r2, r2
900275da:	1a40      	subs	r0, r0, r1
900275dc:	fa1f fe80 	uxth.w	lr, r0
900275e0:	980d      	ldr	r0, [sp, #52]	@ 0x34
900275e2:	4342      	muls	r2, r0
900275e4:	fb0c 2c0e 	mla	ip, ip, lr, r2
900275e8:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
900275ea:	fb01 c102 	mla	r1, r1, r2, ip
900275ee:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
900275f0:	fb03 1302 	mla	r3, r3, r2, r1
900275f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
900275f8:	2bff      	cmp	r3, #255	@ 0xff
900275fa:	f040 8094 	bne.w	90027726 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
900275fe:	4bbf      	ldr	r3, [pc, #764]	@ (900278fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
90027600:	681a      	ldr	r2, [r3, #0]
90027602:	4bbf      	ldr	r3, [pc, #764]	@ (90027900 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
90027604:	0951      	lsrs	r1, r2, #5
90027606:	ea03 2312 	and.w	r3, r3, r2, lsr #8
9002760a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
9002760e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
90027612:	430b      	orrs	r3, r1
90027614:	4313      	orrs	r3, r2
90027616:	f8a8 3000 	strh.w	r3, [r8]
9002761a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
9002761c:	f108 0802 	add.w	r8, r8, #2
90027620:	441c      	add	r4, r3
90027622:	9b20      	ldr	r3, [sp, #128]	@ 0x80
90027624:	441e      	add	r6, r3
90027626:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90027628:	3b01      	subs	r3, #1
9002762a:	9309      	str	r3, [sp, #36]	@ 0x24
9002762c:	e76d      	b.n	9002750a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
9002762e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
90027630:	3d01      	subs	r5, #1
90027632:	f109 0902 	add.w	r9, r9, #2
90027636:	441c      	add	r4, r3
90027638:	9b20      	ldr	r3, [sp, #128]	@ 0x80
9002763a:	441e      	add	r6, r3
9002763c:	e745      	b.n	900274ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
9002763e:	d021      	beq.n	90027684 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
90027640:	1e6b      	subs	r3, r5, #1
90027642:	981f      	ldr	r0, [sp, #124]	@ 0x7c
90027644:	fb00 4003 	mla	r0, r0, r3, r4
90027648:	1400      	asrs	r0, r0, #16
9002764a:	f53f af5a 	bmi.w	90027502 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002764e:	3901      	subs	r1, #1
90027650:	4288      	cmp	r0, r1
90027652:	f6bf af56 	bge.w	90027502 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90027656:	9920      	ldr	r1, [sp, #128]	@ 0x80
90027658:	fb01 6303 	mla	r3, r1, r3, r6
9002765c:	141b      	asrs	r3, r3, #16
9002765e:	f53f af50 	bmi.w	90027502 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
90027662:	3a01      	subs	r2, #1
90027664:	4293      	cmp	r3, r2
90027666:	f6bf af4c 	bge.w	90027502 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
9002766a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
9002766e:	46a8      	mov	r8, r5
90027670:	46ce      	mov	lr, r9
90027672:	9308      	str	r3, [sp, #32]
90027674:	f1b8 0f00 	cmp.w	r8, #0
90027678:	f300 80b6 	bgt.w	900277e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
9002767c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
90027680:	eb09 0945 	add.w	r9, r9, r5, lsl #1
90027684:	9b07      	ldr	r3, [sp, #28]
90027686:	2b00      	cmp	r3, #0
90027688:	f340 817e 	ble.w	90027988 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
9002768c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
90027690:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
90027692:	ee30 0a04 	vadd.f32	s0, s0, s8
90027696:	ee70 0aa4 	vadd.f32	s1, s1, s9
9002769a:	eef0 6a62 	vmov.f32	s13, s5
9002769e:	eec7 7a00 	vdiv.f32	s15, s14, s0
900276a2:	ee31 1a05 	vadd.f32	s2, s2, s10
900276a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900276aa:	ee16 4a90 	vmov	r4, s13
900276ae:	eef0 6a43 	vmov.f32	s13, s6
900276b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
900276b6:	ee16 6a90 	vmov	r6, s13
900276ba:	ee20 7aa7 	vmul.f32	s14, s1, s15
900276be:	ee61 7a27 	vmul.f32	s15, s2, s15
900276c2:	ee77 2a62 	vsub.f32	s5, s14, s5
900276c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
900276ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
900276ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
900276d2:	ee12 2a90 	vmov	r2, s5
900276d6:	eef0 2a47 	vmov.f32	s5, s14
900276da:	fb92 f3f3 	sdiv	r3, r2, r3
900276de:	ee13 2a10 	vmov	r2, s6
900276e2:	931f      	str	r3, [sp, #124]	@ 0x7c
900276e4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900276e6:	eeb0 3a67 	vmov.f32	s6, s15
900276ea:	fb92 f3f3 	sdiv	r3, r2, r3
900276ee:	9320      	str	r3, [sp, #128]	@ 0x80
900276f0:	9b07      	ldr	r3, [sp, #28]
900276f2:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
900276f4:	3b01      	subs	r3, #1
900276f6:	9307      	str	r3, [sp, #28]
900276f8:	bf08      	it	eq
900276fa:	4615      	moveq	r5, r2
900276fc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
900276fe:	bf18      	it	ne
90027700:	461d      	movne	r5, r3
90027702:	e6d3      	b.n	900274ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
90027704:	2900      	cmp	r1, #0
90027706:	f43f af5b 	beq.w	900275c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
9002770a:	eb0a 0003 	add.w	r0, sl, r3
9002770e:	0843      	lsrs	r3, r0, #1
90027710:	07c0      	lsls	r0, r0, #31
90027712:	5cfb      	ldrb	r3, [r7, r3]
90027714:	bf54      	ite	pl
90027716:	f003 030f 	andpl.w	r3, r3, #15
9002771a:	111b      	asrmi	r3, r3, #4
9002771c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
90027720:	b2db      	uxtb	r3, r3
90027722:	930a      	str	r3, [sp, #40]	@ 0x28
90027724:	e74c      	b.n	900275c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
90027726:	2b00      	cmp	r3, #0
90027728:	f43f af77 	beq.w	9002761a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
9002772c:	4a73      	ldr	r2, [pc, #460]	@ (900278fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
9002772e:	fa1f fe83 	uxth.w	lr, r3
90027732:	f8b8 c000 	ldrh.w	ip, [r8]
90027736:	43db      	mvns	r3, r3
90027738:	6810      	ldr	r0, [r2, #0]
9002773a:	ea4f 212c 	mov.w	r1, ip, asr #8
9002773e:	f3c0 4207 	ubfx	r2, r0, #16, #8
90027742:	b2db      	uxtb	r3, r3
90027744:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90027748:	f3c0 2b07 	ubfx	fp, r0, #8, #8
9002774c:	fb12 f20e 	smulbb	r2, r2, lr
90027750:	b2c0      	uxtb	r0, r0
90027752:	fb1b fb0e 	smulbb	fp, fp, lr
90027756:	fb01 2103 	mla	r1, r1, r3, r2
9002775a:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002775e:	fb10 fe0e 	smulbb	lr, r0, lr
90027762:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90027766:	b289      	uxth	r1, r1
90027768:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
9002776c:	fa5f fc8c 	uxtb.w	ip, ip
90027770:	fb02 b203 	mla	r2, r2, r3, fp
90027774:	1c48      	adds	r0, r1, #1
90027776:	fb0c e303 	mla	r3, ip, r3, lr
9002777a:	b292      	uxth	r2, r2
9002777c:	b29b      	uxth	r3, r3
9002777e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
90027782:	f102 0b01 	add.w	fp, r2, #1
90027786:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
9002778a:	1c59      	adds	r1, r3, #1
9002778c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
90027790:	eb01 2113 	add.w	r1, r1, r3, lsr #8
90027794:	0952      	lsrs	r2, r2, #5
90027796:	f3c1 21c4 	ubfx	r1, r1, #11, #5
9002779a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
9002779e:	4301      	orrs	r1, r0
900277a0:	4311      	orrs	r1, r2
900277a2:	f8a8 1000 	strh.w	r1, [r8]
900277a6:	e738      	b.n	9002761a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900277a8:	f113 0b01 	adds.w	fp, r3, #1
900277ac:	f53f af35 	bmi.w	9002761a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900277b0:	45dc      	cmp	ip, fp
900277b2:	f6ff af32 	blt.w	9002761a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900277b6:	f110 0b01 	adds.w	fp, r0, #1
900277ba:	f53f af2e 	bmi.w	9002761a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900277be:	45de      	cmp	lr, fp
900277c0:	f6ff af2b 	blt.w	9002761a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900277c4:	9302      	str	r3, [sp, #8]
900277c6:	fa0f f38e 	sxth.w	r3, lr
900277ca:	9a08      	ldr	r2, [sp, #32]
900277cc:	9301      	str	r3, [sp, #4]
900277ce:	fa0f f38c 	sxth.w	r3, ip
900277d2:	9105      	str	r1, [sp, #20]
900277d4:	4641      	mov	r1, r8
900277d6:	9300      	str	r3, [sp, #0]
900277d8:	4653      	mov	r3, sl
900277da:	e9cd 0203 	strd	r0, r2, [sp, #12]
900277de:	463a      	mov	r2, r7
900277e0:	9811      	ldr	r0, [sp, #68]	@ 0x44
900277e2:	f7ff fd73 	bl	900272cc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
900277e6:	e718      	b.n	9002761a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
900277e8:	1422      	asrs	r2, r4, #16
900277ea:	9906      	ldr	r1, [sp, #24]
900277ec:	1433      	asrs	r3, r6, #16
900277ee:	f3c4 3003 	ubfx	r0, r4, #12, #4
900277f2:	f3c6 3c03 	ubfx	ip, r6, #12, #4
900277f6:	fb01 2303 	mla	r3, r1, r3, r2
900277fa:	085a      	lsrs	r2, r3, #1
900277fc:	07d9      	lsls	r1, r3, #31
900277fe:	5cba      	ldrb	r2, [r7, r2]
90027800:	bf54      	ite	pl
90027802:	f002 020f 	andpl.w	r2, r2, #15
90027806:	1112      	asrmi	r2, r2, #4
90027808:	eb02 1202 	add.w	r2, r2, r2, lsl #4
9002780c:	b2d2      	uxtb	r2, r2
9002780e:	2800      	cmp	r0, #0
90027810:	d063      	beq.n	900278da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
90027812:	f103 0a01 	add.w	sl, r3, #1
90027816:	ea4f 015a 	mov.w	r1, sl, lsr #1
9002781a:	f01a 0f01 	tst.w	sl, #1
9002781e:	5c79      	ldrb	r1, [r7, r1]
90027820:	bf0c      	ite	eq
90027822:	f001 010f 	andeq.w	r1, r1, #15
90027826:	1109      	asrne	r1, r1, #4
90027828:	eb01 1101 	add.w	r1, r1, r1, lsl #4
9002782c:	b2c9      	uxtb	r1, r1
9002782e:	910f      	str	r1, [sp, #60]	@ 0x3c
90027830:	f1bc 0f00 	cmp.w	ip, #0
90027834:	d01a      	beq.n	9002786c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
90027836:	9908      	ldr	r1, [sp, #32]
90027838:	440b      	add	r3, r1
9002783a:	0859      	lsrs	r1, r3, #1
9002783c:	f013 0f01 	tst.w	r3, #1
90027840:	f103 0301 	add.w	r3, r3, #1
90027844:	5c79      	ldrb	r1, [r7, r1]
90027846:	bf0c      	ite	eq
90027848:	f001 010f 	andeq.w	r1, r1, #15
9002784c:	1109      	asrne	r1, r1, #4
9002784e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90027852:	b2c9      	uxtb	r1, r1
90027854:	910b      	str	r1, [sp, #44]	@ 0x2c
90027856:	0859      	lsrs	r1, r3, #1
90027858:	07db      	lsls	r3, r3, #31
9002785a:	5c79      	ldrb	r1, [r7, r1]
9002785c:	bf54      	ite	pl
9002785e:	f001 010f 	andpl.w	r1, r1, #15
90027862:	1109      	asrmi	r1, r1, #4
90027864:	eb01 1101 	add.w	r1, r1, r1, lsl #4
90027868:	b2c9      	uxtb	r1, r1
9002786a:	9110      	str	r1, [sp, #64]	@ 0x40
9002786c:	b280      	uxth	r0, r0
9002786e:	fa1f fc8c 	uxth.w	ip, ip
90027872:	fb00 f30c 	mul.w	r3, r0, ip
90027876:	0100      	lsls	r0, r0, #4
90027878:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
9002787c:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
90027880:	1ac0      	subs	r0, r0, r3
90027882:	fa1f fc8c 	uxth.w	ip, ip
90027886:	b280      	uxth	r0, r0
90027888:	eba1 010c 	sub.w	r1, r1, ip
9002788c:	fa1f fa81 	uxth.w	sl, r1
90027890:	990f      	ldr	r1, [sp, #60]	@ 0x3c
90027892:	4348      	muls	r0, r1
90027894:	990b      	ldr	r1, [sp, #44]	@ 0x2c
90027896:	fb02 020a 	mla	r2, r2, sl, r0
9002789a:	fb0c 2c01 	mla	ip, ip, r1, r2
9002789e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
900278a0:	fb03 c302 	mla	r3, r3, r2, ip
900278a4:	f3c3 2307 	ubfx	r3, r3, #8, #8
900278a8:	2bff      	cmp	r3, #255	@ 0xff
900278aa:	d12b      	bne.n	90027904 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
900278ac:	4b13      	ldr	r3, [pc, #76]	@ (900278fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
900278ae:	681a      	ldr	r2, [r3, #0]
900278b0:	4b13      	ldr	r3, [pc, #76]	@ (90027900 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
900278b2:	0951      	lsrs	r1, r2, #5
900278b4:	ea03 2312 	and.w	r3, r3, r2, lsr #8
900278b8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
900278bc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
900278c0:	430b      	orrs	r3, r1
900278c2:	4313      	orrs	r3, r2
900278c4:	f8ae 3000 	strh.w	r3, [lr]
900278c8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
900278ca:	f10e 0e02 	add.w	lr, lr, #2
900278ce:	f108 38ff 	add.w	r8, r8, #4294967295
900278d2:	441c      	add	r4, r3
900278d4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
900278d6:	441e      	add	r6, r3
900278d8:	e6cc      	b.n	90027674 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
900278da:	f1bc 0f00 	cmp.w	ip, #0
900278de:	d0c5      	beq.n	9002786c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
900278e0:	9908      	ldr	r1, [sp, #32]
900278e2:	440b      	add	r3, r1
900278e4:	0859      	lsrs	r1, r3, #1
900278e6:	07db      	lsls	r3, r3, #31
900278e8:	5c79      	ldrb	r1, [r7, r1]
900278ea:	bf54      	ite	pl
900278ec:	f001 010f 	andpl.w	r1, r1, #15
900278f0:	1109      	asrmi	r1, r1, #4
900278f2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
900278f6:	b2c9      	uxtb	r1, r1
900278f8:	910b      	str	r1, [sp, #44]	@ 0x2c
900278fa:	e7b7      	b.n	9002786c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
900278fc:	2402199c 	.word	0x2402199c
90027900:	fffff800 	.word	0xfffff800
90027904:	2b00      	cmp	r3, #0
90027906:	d0df      	beq.n	900278c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90027908:	4a21      	ldr	r2, [pc, #132]	@ (90027990 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
9002790a:	fa1f fa83 	uxth.w	sl, r3
9002790e:	f8be c000 	ldrh.w	ip, [lr]
90027912:	43db      	mvns	r3, r3
90027914:	6810      	ldr	r0, [r2, #0]
90027916:	ea4f 212c 	mov.w	r1, ip, asr #8
9002791a:	f3c0 4207 	ubfx	r2, r0, #16, #8
9002791e:	b2db      	uxtb	r3, r3
90027920:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
90027924:	f3c0 2b07 	ubfx	fp, r0, #8, #8
90027928:	fb12 f20a 	smulbb	r2, r2, sl
9002792c:	b2c0      	uxtb	r0, r0
9002792e:	fb1b fb0a 	smulbb	fp, fp, sl
90027932:	fb01 2103 	mla	r1, r1, r3, r2
90027936:	ea4f 02ec 	mov.w	r2, ip, asr #3
9002793a:	fb10 f00a 	smulbb	r0, r0, sl
9002793e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
90027942:	b289      	uxth	r1, r1
90027944:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
90027948:	fa5f fc8c 	uxtb.w	ip, ip
9002794c:	fb02 b203 	mla	r2, r2, r3, fp
90027950:	fb0c 0003 	mla	r0, ip, r3, r0
90027954:	1c4b      	adds	r3, r1, #1
90027956:	b292      	uxth	r2, r2
90027958:	b280      	uxth	r0, r0
9002795a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
9002795e:	f100 0b01 	add.w	fp, r0, #1
90027962:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
90027966:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
9002796a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
9002796e:	ea4b 0101 	orr.w	r1, fp, r1
90027972:	f102 0b01 	add.w	fp, r2, #1
90027976:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
9002797a:	0952      	lsrs	r2, r2, #5
9002797c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
90027980:	4311      	orrs	r1, r2
90027982:	f8ae 1000 	strh.w	r1, [lr]
90027986:	e79f      	b.n	900278c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
90027988:	b013      	add	sp, #76	@ 0x4c
9002798a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002798e:	bf00      	nop
90027990:	2402199c 	.word	0x2402199c

90027994 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
90027994:	b570      	push	{r4, r5, r6, lr}
90027996:	1208      	asrs	r0, r1, #8
90027998:	f8bd 5010 	ldrh.w	r5, [sp, #16]
9002799c:	b29e      	uxth	r6, r3
9002799e:	1213      	asrs	r3, r2, #8
900279a0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
900279a4:	10cc      	asrs	r4, r1, #3
900279a6:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
900279aa:	00c9      	lsls	r1, r1, #3
900279ac:	fb10 f006 	smulbb	r0, r0, r6
900279b0:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
900279b4:	fb13 f305 	smulbb	r3, r3, r5
900279b8:	fb14 f406 	smulbb	r4, r4, r6
900279bc:	4418      	add	r0, r3
900279be:	10d3      	asrs	r3, r2, #3
900279c0:	00d2      	lsls	r2, r2, #3
900279c2:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
900279c6:	b280      	uxth	r0, r0
900279c8:	b2d2      	uxtb	r2, r2
900279ca:	fb13 f305 	smulbb	r3, r3, r5
900279ce:	fb12 f205 	smulbb	r2, r2, r5
900279d2:	441c      	add	r4, r3
900279d4:	b2cb      	uxtb	r3, r1
900279d6:	fb13 f306 	smulbb	r3, r3, r6
900279da:	b2a4      	uxth	r4, r4
900279dc:	4413      	add	r3, r2
900279de:	1c42      	adds	r2, r0, #1
900279e0:	b29b      	uxth	r3, r3
900279e2:	eb02 2010 	add.w	r0, r2, r0, lsr #8
900279e6:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
900279ea:	1c58      	adds	r0, r3, #1
900279ec:	eb00 2013 	add.w	r0, r0, r3, lsr #8
900279f0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
900279f4:	4310      	orrs	r0, r2
900279f6:	1c62      	adds	r2, r4, #1
900279f8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
900279fc:	0964      	lsrs	r4, r4, #5
900279fe:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90027a02:	4320      	orrs	r0, r4
90027a04:	bd70      	pop	{r4, r5, r6, pc}
	...

90027a08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
90027a08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027a0c:	b08f      	sub	sp, #60	@ 0x3c
90027a0e:	461c      	mov	r4, r3
90027a10:	460d      	mov	r5, r1
90027a12:	4616      	mov	r6, r2
90027a14:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
90027a18:	9004      	str	r0, [sp, #16]
90027a1a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90027a1c:	2f00      	cmp	r7, #0
90027a1e:	f000 80f6 	beq.w	90027c0e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
90027a22:	6820      	ldr	r0, [r4, #0]
90027a24:	aa0a      	add	r2, sp, #40	@ 0x28
90027a26:	6861      	ldr	r1, [r4, #4]
90027a28:	f04f 0802 	mov.w	r8, #2
90027a2c:	3604      	adds	r6, #4
90027a2e:	c203      	stmia	r2!, {r0, r1}
90027a30:	6818      	ldr	r0, [r3, #0]
90027a32:	aa0c      	add	r2, sp, #48	@ 0x30
90027a34:	6859      	ldr	r1, [r3, #4]
90027a36:	c203      	stmia	r2!, {r0, r1}
90027a38:	a80a      	add	r0, sp, #40	@ 0x28
90027a3a:	f7ee fa15 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90027a3e:	4621      	mov	r1, r4
90027a40:	a80c      	add	r0, sp, #48	@ 0x30
90027a42:	f7ee fa39 	bl	90015eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90027a46:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
90027a4a:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
90027a4e:	f002 0301 	and.w	r3, r2, #1
90027a52:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
90027a56:	9306      	str	r3, [sp, #24]
90027a58:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90027a5c:	f003 0101 	and.w	r1, r3, #1
90027a60:	9105      	str	r1, [sp, #20]
90027a62:	9805      	ldr	r0, [sp, #20]
90027a64:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
90027a68:	4403      	add	r3, r0
90027a6a:	fb01 2303 	mla	r3, r1, r3, r2
90027a6e:	fb93 f3f8 	sdiv	r3, r3, r8
90027a72:	441d      	add	r5, r3
90027a74:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90027a78:	441a      	add	r2, r3
90027a7a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
90027a7e:	4419      	add	r1, r3
90027a80:	4b64      	ldr	r3, [pc, #400]	@ (90027c14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90027a82:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90027a86:	6818      	ldr	r0, [r3, #0]
90027a88:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
90027a8c:	6803      	ldr	r3, [r0, #0]
90027a8e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90027a90:	4798      	blx	r3
90027a92:	4a61      	ldr	r2, [pc, #388]	@ (90027c18 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
90027a94:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
90027a98:	2fff      	cmp	r7, #255	@ 0xff
90027a9a:	8813      	ldrh	r3, [r2, #0]
90027a9c:	4611      	mov	r1, r2
90027a9e:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
90027aa2:	fb03 fb0b 	mul.w	fp, r3, fp
90027aa6:	fb03 a404 	mla	r4, r3, r4, sl
90027aaa:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90027aae:	d06b      	beq.n	90027b88 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
90027ab0:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
90027ab4:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
90027ab8:	9303      	str	r3, [sp, #12]
90027aba:	eb04 034b 	add.w	r3, r4, fp, lsl #1
90027abe:	e9cd 3207 	strd	r3, r2, [sp, #28]
90027ac2:	9b07      	ldr	r3, [sp, #28]
90027ac4:	42a3      	cmp	r3, r4
90027ac6:	f240 809d 	bls.w	90027c04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90027aca:	9b06      	ldr	r3, [sp, #24]
90027acc:	2b00      	cmp	r3, #0
90027ace:	d039      	beq.n	90027b44 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
90027ad0:	782b      	ldrb	r3, [r5, #0]
90027ad2:	f105 0801 	add.w	r8, r5, #1
90027ad6:	f109 3bff 	add.w	fp, r9, #4294967295
90027ada:	8822      	ldrh	r2, [r4, #0]
90027adc:	f003 030f 	and.w	r3, r3, #15
90027ae0:	9804      	ldr	r0, [sp, #16]
90027ae2:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90027ae6:	9b03      	ldr	r3, [sp, #12]
90027ae8:	9300      	str	r3, [sp, #0]
90027aea:	463b      	mov	r3, r7
90027aec:	f7ff ff52 	bl	90027994 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90027af0:	f824 0b02 	strh.w	r0, [r4], #2
90027af4:	f1bb 0f01 	cmp.w	fp, #1
90027af8:	46a2      	mov	sl, r4
90027afa:	f104 0404 	add.w	r4, r4, #4
90027afe:	dd24      	ble.n	90027b4a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
90027b00:	f898 3000 	ldrb.w	r3, [r8]
90027b04:	f1ab 0b02 	sub.w	fp, fp, #2
90027b08:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90027b0c:	091b      	lsrs	r3, r3, #4
90027b0e:	9804      	ldr	r0, [sp, #16]
90027b10:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90027b14:	9b03      	ldr	r3, [sp, #12]
90027b16:	9300      	str	r3, [sp, #0]
90027b18:	463b      	mov	r3, r7
90027b1a:	f7ff ff3b 	bl	90027994 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90027b1e:	f824 0c04 	strh.w	r0, [r4, #-4]
90027b22:	f818 3b01 	ldrb.w	r3, [r8], #1
90027b26:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90027b2a:	f003 030f 	and.w	r3, r3, #15
90027b2e:	9804      	ldr	r0, [sp, #16]
90027b30:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90027b34:	9b03      	ldr	r3, [sp, #12]
90027b36:	9300      	str	r3, [sp, #0]
90027b38:	463b      	mov	r3, r7
90027b3a:	f7ff ff2b 	bl	90027994 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90027b3e:	f824 0c02 	strh.w	r0, [r4, #-2]
90027b42:	e7d7      	b.n	90027af4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90027b44:	46a8      	mov	r8, r5
90027b46:	46cb      	mov	fp, r9
90027b48:	e7d4      	b.n	90027af4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
90027b4a:	d10e      	bne.n	90027b6a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
90027b4c:	f898 3000 	ldrb.w	r3, [r8]
90027b50:	f8ba 2000 	ldrh.w	r2, [sl]
90027b54:	091b      	lsrs	r3, r3, #4
90027b56:	9804      	ldr	r0, [sp, #16]
90027b58:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
90027b5c:	9b03      	ldr	r3, [sp, #12]
90027b5e:	9300      	str	r3, [sp, #0]
90027b60:	463b      	mov	r3, r7
90027b62:	f7ff ff17 	bl	90027994 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
90027b66:	f82a 0b02 	strh.w	r0, [sl], #2
90027b6a:	9b08      	ldr	r3, [sp, #32]
90027b6c:	9a05      	ldr	r2, [sp, #20]
90027b6e:	881c      	ldrh	r4, [r3, #0]
90027b70:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90027b74:	eba4 0409 	sub.w	r4, r4, r9
90027b78:	4413      	add	r3, r2
90027b7a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90027b7c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
90027b80:	fb93 f3f2 	sdiv	r3, r3, r2
90027b84:	441d      	add	r5, r3
90027b86:	e79c      	b.n	90027ac2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
90027b88:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
90027b8c:	45a3      	cmp	fp, r4
90027b8e:	d939      	bls.n	90027c04 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
90027b90:	9b06      	ldr	r3, [sp, #24]
90027b92:	b1fb      	cbz	r3, 90027bd4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
90027b94:	782b      	ldrb	r3, [r5, #0]
90027b96:	1c6a      	adds	r2, r5, #1
90027b98:	f109 30ff 	add.w	r0, r9, #4294967295
90027b9c:	3402      	adds	r4, #2
90027b9e:	f003 030f 	and.w	r3, r3, #15
90027ba2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90027ba6:	f824 3c02 	strh.w	r3, [r4, #-2]
90027baa:	2801      	cmp	r0, #1
90027bac:	4623      	mov	r3, r4
90027bae:	f104 0404 	add.w	r4, r4, #4
90027bb2:	dd12      	ble.n	90027bda <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
90027bb4:	7813      	ldrb	r3, [r2, #0]
90027bb6:	3802      	subs	r0, #2
90027bb8:	091b      	lsrs	r3, r3, #4
90027bba:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90027bbe:	f824 3c04 	strh.w	r3, [r4, #-4]
90027bc2:	f812 3b01 	ldrb.w	r3, [r2], #1
90027bc6:	f003 030f 	and.w	r3, r3, #15
90027bca:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
90027bce:	f824 3c02 	strh.w	r3, [r4, #-2]
90027bd2:	e7ea      	b.n	90027baa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90027bd4:	462a      	mov	r2, r5
90027bd6:	4648      	mov	r0, r9
90027bd8:	e7e7      	b.n	90027baa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
90027bda:	d106      	bne.n	90027bea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
90027bdc:	7812      	ldrb	r2, [r2, #0]
90027bde:	3302      	adds	r3, #2
90027be0:	0912      	lsrs	r2, r2, #4
90027be2:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
90027be6:	f823 2c02 	strh.w	r2, [r3, #-2]
90027bea:	880c      	ldrh	r4, [r1, #0]
90027bec:	9a05      	ldr	r2, [sp, #20]
90027bee:	eba4 0409 	sub.w	r4, r4, r9
90027bf2:	eb03 0444 	add.w	r4, r3, r4, lsl #1
90027bf6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90027bfa:	4413      	add	r3, r2
90027bfc:	fb93 f3f8 	sdiv	r3, r3, r8
90027c00:	441d      	add	r5, r3
90027c02:	e7c3      	b.n	90027b8c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
90027c04:	4b03      	ldr	r3, [pc, #12]	@ (90027c14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
90027c06:	6818      	ldr	r0, [r3, #0]
90027c08:	6803      	ldr	r3, [r0, #0]
90027c0a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90027c0c:	4798      	blx	r3
90027c0e:	b00f      	add	sp, #60	@ 0x3c
90027c10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027c14:	2402198c 	.word	0x2402198c
90027c18:	24021986 	.word	0x24021986

90027c1c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
90027c1c:	b5f0      	push	{r4, r5, r6, r7, lr}
90027c1e:	f89d 5014 	ldrb.w	r5, [sp, #20]
90027c22:	0a0f      	lsrs	r7, r1, #8
90027c24:	2dff      	cmp	r5, #255	@ 0xff
90027c26:	d10c      	bne.n	90027c42 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90027c28:	2bff      	cmp	r3, #255	@ 0xff
90027c2a:	d10a      	bne.n	90027c42 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
90027c2c:	0948      	lsrs	r0, r1, #5
90027c2e:	4b25      	ldr	r3, [pc, #148]	@ (90027cc4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
90027c30:	f3c1 01c4 	ubfx	r1, r1, #3, #5
90027c34:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
90027c38:	403b      	ands	r3, r7
90027c3a:	4318      	orrs	r0, r3
90027c3c:	4308      	orrs	r0, r1
90027c3e:	b280      	uxth	r0, r0
90027c40:	bdf0      	pop	{r4, r5, r6, r7, pc}
90027c42:	fb15 f503 	smulbb	r5, r5, r3
90027c46:	1214      	asrs	r4, r2, #8
90027c48:	10d6      	asrs	r6, r2, #3
90027c4a:	b2ab      	uxth	r3, r5
90027c4c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90027c50:	00d0      	lsls	r0, r2, #3
90027c52:	f3c1 4207 	ubfx	r2, r1, #16, #8
90027c56:	1c5d      	adds	r5, r3, #1
90027c58:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90027c5c:	b2c0      	uxtb	r0, r0
90027c5e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
90027c62:	eb05 2513 	add.w	r5, r5, r3, lsr #8
90027c66:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
90027c6a:	f3c5 2507 	ubfx	r5, r5, #8, #8
90027c6e:	fa1f fc85 	uxth.w	ip, r5
90027c72:	43ed      	mvns	r5, r5
90027c74:	fb12 f20c 	smulbb	r2, r2, ip
90027c78:	b2eb      	uxtb	r3, r5
90027c7a:	b2fd      	uxtb	r5, r7
90027c7c:	fb04 2403 	mla	r4, r4, r3, r2
90027c80:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
90027c84:	fb15 f50c 	smulbb	r5, r5, ip
90027c88:	b2c8      	uxtb	r0, r1
90027c8a:	b2a4      	uxth	r4, r4
90027c8c:	fb10 f00c 	smulbb	r0, r0, ip
90027c90:	fb06 5503 	mla	r5, r6, r3, r5
90027c94:	fb02 0003 	mla	r0, r2, r3, r0
90027c98:	b2ad      	uxth	r5, r5
90027c9a:	b283      	uxth	r3, r0
90027c9c:	1c60      	adds	r0, r4, #1
90027c9e:	eb00 2414 	add.w	r4, r0, r4, lsr #8
90027ca2:	1c58      	adds	r0, r3, #1
90027ca4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90027ca8:	1c6b      	adds	r3, r5, #1
90027caa:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
90027cae:	eb03 2515 	add.w	r5, r3, r5, lsr #8
90027cb2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90027cb6:	096d      	lsrs	r5, r5, #5
90027cb8:	4320      	orrs	r0, r4
90027cba:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
90027cbe:	4328      	orrs	r0, r5
90027cc0:	e7be      	b.n	90027c40 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
90027cc2:	bf00      	nop
90027cc4:	00fff800 	.word	0x00fff800

90027cc8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
90027cc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027ccc:	461c      	mov	r4, r3
90027cce:	b08d      	sub	sp, #52	@ 0x34
90027cd0:	460d      	mov	r5, r1
90027cd2:	4616      	mov	r6, r2
90027cd4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
90027cd6:	4680      	mov	r8, r0
90027cd8:	6861      	ldr	r1, [r4, #4]
90027cda:	aa08      	add	r2, sp, #32
90027cdc:	6820      	ldr	r0, [r4, #0]
90027cde:	f04f 0a02 	mov.w	sl, #2
90027ce2:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
90027ce6:	3604      	adds	r6, #4
90027ce8:	c203      	stmia	r2!, {r0, r1}
90027cea:	6818      	ldr	r0, [r3, #0]
90027cec:	aa0a      	add	r2, sp, #40	@ 0x28
90027cee:	6859      	ldr	r1, [r3, #4]
90027cf0:	c203      	stmia	r2!, {r0, r1}
90027cf2:	a808      	add	r0, sp, #32
90027cf4:	f7ee f8b8 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90027cf8:	4621      	mov	r1, r4
90027cfa:	a80a      	add	r0, sp, #40	@ 0x28
90027cfc:	f7ee f8dc 	bl	90015eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90027d00:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
90027d04:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
90027d08:	f002 0301 	and.w	r3, r2, #1
90027d0c:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
90027d10:	9303      	str	r3, [sp, #12]
90027d12:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
90027d16:	f003 0101 	and.w	r1, r3, #1
90027d1a:	9102      	str	r1, [sp, #8]
90027d1c:	9802      	ldr	r0, [sp, #8]
90027d1e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
90027d22:	4403      	add	r3, r0
90027d24:	fb01 2303 	mla	r3, r1, r3, r2
90027d28:	fb93 f3fa 	sdiv	r3, r3, sl
90027d2c:	441d      	add	r5, r3
90027d2e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
90027d32:	441a      	add	r2, r3
90027d34:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
90027d38:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
90027d3c:	4419      	add	r1, r3
90027d3e:	4a3e      	ldr	r2, [pc, #248]	@ (90027e38 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
90027d40:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
90027d44:	6810      	ldr	r0, [r2, #0]
90027d46:	9205      	str	r2, [sp, #20]
90027d48:	6803      	ldr	r3, [r0, #0]
90027d4a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90027d4c:	4798      	blx	r3
90027d4e:	4b3b      	ldr	r3, [pc, #236]	@ (90027e3c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
90027d50:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
90027d54:	8819      	ldrh	r1, [r3, #0]
90027d56:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
90027d5a:	434f      	muls	r7, r1
90027d5c:	fb01 c404 	mla	r4, r1, r4, ip
90027d60:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90027d64:	eb04 0247 	add.w	r2, r4, r7, lsl #1
90027d68:	e9cd 3a06 	strd	r3, sl, [sp, #24]
90027d6c:	9204      	str	r2, [sp, #16]
90027d6e:	9b04      	ldr	r3, [sp, #16]
90027d70:	429c      	cmp	r4, r3
90027d72:	d258      	bcs.n	90027e26 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
90027d74:	9b03      	ldr	r3, [sp, #12]
90027d76:	2b00      	cmp	r3, #0
90027d78:	d034      	beq.n	90027de4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
90027d7a:	782b      	ldrb	r3, [r5, #0]
90027d7c:	1c6f      	adds	r7, r5, #1
90027d7e:	f003 030f 	and.w	r3, r3, #15
90027d82:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90027d86:	0e0b      	lsrs	r3, r1, #24
90027d88:	d006      	beq.n	90027d98 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
90027d8a:	8822      	ldrh	r2, [r4, #0]
90027d8c:	4640      	mov	r0, r8
90027d8e:	9300      	str	r3, [sp, #0]
90027d90:	464b      	mov	r3, r9
90027d92:	f7ff ff43 	bl	90027c1c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90027d96:	8020      	strh	r0, [r4, #0]
90027d98:	3402      	adds	r4, #2
90027d9a:	f10b 3aff 	add.w	sl, fp, #4294967295
90027d9e:	f1ba 0f01 	cmp.w	sl, #1
90027da2:	dd22      	ble.n	90027dea <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
90027da4:	783b      	ldrb	r3, [r7, #0]
90027da6:	091b      	lsrs	r3, r3, #4
90027da8:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90027dac:	0e0b      	lsrs	r3, r1, #24
90027dae:	d006      	beq.n	90027dbe <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
90027db0:	8822      	ldrh	r2, [r4, #0]
90027db2:	4640      	mov	r0, r8
90027db4:	9300      	str	r3, [sp, #0]
90027db6:	464b      	mov	r3, r9
90027db8:	f7ff ff30 	bl	90027c1c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90027dbc:	8020      	strh	r0, [r4, #0]
90027dbe:	f817 3b01 	ldrb.w	r3, [r7], #1
90027dc2:	f003 030f 	and.w	r3, r3, #15
90027dc6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90027dca:	0e0b      	lsrs	r3, r1, #24
90027dcc:	d006      	beq.n	90027ddc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
90027dce:	8862      	ldrh	r2, [r4, #2]
90027dd0:	4640      	mov	r0, r8
90027dd2:	9300      	str	r3, [sp, #0]
90027dd4:	464b      	mov	r3, r9
90027dd6:	f7ff ff21 	bl	90027c1c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90027dda:	8060      	strh	r0, [r4, #2]
90027ddc:	3404      	adds	r4, #4
90027dde:	f1aa 0a02 	sub.w	sl, sl, #2
90027de2:	e7dc      	b.n	90027d9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90027de4:	462f      	mov	r7, r5
90027de6:	46da      	mov	sl, fp
90027de8:	e7d9      	b.n	90027d9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
90027dea:	d10d      	bne.n	90027e08 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
90027dec:	783b      	ldrb	r3, [r7, #0]
90027dee:	091b      	lsrs	r3, r3, #4
90027df0:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
90027df4:	0e0b      	lsrs	r3, r1, #24
90027df6:	d006      	beq.n	90027e06 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
90027df8:	8822      	ldrh	r2, [r4, #0]
90027dfa:	4640      	mov	r0, r8
90027dfc:	9300      	str	r3, [sp, #0]
90027dfe:	464b      	mov	r3, r9
90027e00:	f7ff ff0c 	bl	90027c1c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
90027e04:	8020      	strh	r0, [r4, #0]
90027e06:	3402      	adds	r4, #2
90027e08:	9b06      	ldr	r3, [sp, #24]
90027e0a:	9a02      	ldr	r2, [sp, #8]
90027e0c:	881b      	ldrh	r3, [r3, #0]
90027e0e:	eba3 030b 	sub.w	r3, r3, fp
90027e12:	eb04 0443 	add.w	r4, r4, r3, lsl #1
90027e16:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
90027e1a:	4413      	add	r3, r2
90027e1c:	9a07      	ldr	r2, [sp, #28]
90027e1e:	fb93 f3f2 	sdiv	r3, r3, r2
90027e22:	441d      	add	r5, r3
90027e24:	e7a3      	b.n	90027d6e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
90027e26:	9b05      	ldr	r3, [sp, #20]
90027e28:	6818      	ldr	r0, [r3, #0]
90027e2a:	6803      	ldr	r3, [r0, #0]
90027e2c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90027e2e:	4798      	blx	r3
90027e30:	b00d      	add	sp, #52	@ 0x34
90027e32:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90027e36:	bf00      	nop
90027e38:	2402198c 	.word	0x2402198c
90027e3c:	24021986 	.word	0x24021986

90027e40 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
90027e40:	b570      	push	{r4, r5, r6, lr}
90027e42:	1214      	asrs	r4, r2, #8
90027e44:	788d      	ldrb	r5, [r1, #2]
90027e46:	f89d 6010 	ldrb.w	r6, [sp, #16]
90027e4a:	10d0      	asrs	r0, r2, #3
90027e4c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
90027e50:	00d2      	lsls	r2, r2, #3
90027e52:	fb15 f503 	smulbb	r5, r5, r3
90027e56:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
90027e5a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
90027e5e:	b2d2      	uxtb	r2, r2
90027e60:	fb04 5506 	mla	r5, r4, r6, r5
90027e64:	784c      	ldrb	r4, [r1, #1]
90027e66:	7809      	ldrb	r1, [r1, #0]
90027e68:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
90027e6c:	fb14 f403 	smulbb	r4, r4, r3
90027e70:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
90027e74:	fb11 f303 	smulbb	r3, r1, r3
90027e78:	b2ad      	uxth	r5, r5
90027e7a:	fb00 4406 	mla	r4, r0, r6, r4
90027e7e:	fb02 3306 	mla	r3, r2, r6, r3
90027e82:	1c68      	adds	r0, r5, #1
90027e84:	b2a4      	uxth	r4, r4
90027e86:	b29b      	uxth	r3, r3
90027e88:	eb00 2515 	add.w	r5, r0, r5, lsr #8
90027e8c:	1c62      	adds	r2, r4, #1
90027e8e:	1c58      	adds	r0, r3, #1
90027e90:	eb02 2414 	add.w	r4, r2, r4, lsr #8
90027e94:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
90027e98:	eb00 2013 	add.w	r0, r0, r3, lsr #8
90027e9c:	0964      	lsrs	r4, r4, #5
90027e9e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
90027ea2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90027ea6:	4328      	orrs	r0, r5
90027ea8:	4320      	orrs	r0, r4
90027eaa:	bd70      	pop	{r4, r5, r6, pc}

90027eac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
90027eac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90027eb0:	b08f      	sub	sp, #60	@ 0x3c
90027eb2:	461c      	mov	r4, r3
90027eb4:	4682      	mov	sl, r0
90027eb6:	460e      	mov	r6, r1
90027eb8:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
90027ebc:	4615      	mov	r5, r2
90027ebe:	9b18      	ldr	r3, [sp, #96]	@ 0x60
90027ec0:	2f00      	cmp	r7, #0
90027ec2:	f000 8141 	beq.w	90028148 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
90027ec6:	6820      	ldr	r0, [r4, #0]
90027ec8:	aa0a      	add	r2, sp, #40	@ 0x28
90027eca:	6861      	ldr	r1, [r4, #4]
90027ecc:	f04f 0802 	mov.w	r8, #2
90027ed0:	3504      	adds	r5, #4
90027ed2:	c203      	stmia	r2!, {r0, r1}
90027ed4:	6818      	ldr	r0, [r3, #0]
90027ed6:	aa0c      	add	r2, sp, #48	@ 0x30
90027ed8:	6859      	ldr	r1, [r3, #4]
90027eda:	c203      	stmia	r2!, {r0, r1}
90027edc:	a80a      	add	r0, sp, #40	@ 0x28
90027ede:	f7ed ffc3 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
90027ee2:	4621      	mov	r1, r4
90027ee4:	a80c      	add	r0, sp, #48	@ 0x30
90027ee6:	f7ed ffe7 	bl	90015eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90027eea:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
90027eee:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
90027ef2:	f002 0301 	and.w	r3, r2, #1
90027ef6:	9306      	str	r3, [sp, #24]
90027ef8:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
90027efc:	f003 0101 	and.w	r1, r3, #1
90027f00:	9105      	str	r1, [sp, #20]
90027f02:	9805      	ldr	r0, [sp, #20]
90027f04:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
90027f08:	4403      	add	r3, r0
90027f0a:	fb01 2303 	mla	r3, r1, r3, r2
90027f0e:	fb93 f3f8 	sdiv	r3, r3, r8
90027f12:	441e      	add	r6, r3
90027f14:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
90027f18:	441a      	add	r2, r3
90027f1a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
90027f1e:	4419      	add	r1, r3
90027f20:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
90027f24:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
90027f28:	9303      	str	r3, [sp, #12]
90027f2a:	4b89      	ldr	r3, [pc, #548]	@ (90028150 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90027f2c:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
90027f30:	6818      	ldr	r0, [r3, #0]
90027f32:	6803      	ldr	r3, [r0, #0]
90027f34:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
90027f36:	4798      	blx	r3
90027f38:	4a86      	ldr	r2, [pc, #536]	@ (90028154 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
90027f3a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
90027f3e:	2fff      	cmp	r7, #255	@ 0xff
90027f40:	8813      	ldrh	r3, [r2, #0]
90027f42:	4694      	mov	ip, r2
90027f44:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
90027f48:	fb03 9404 	mla	r4, r3, r4, r9
90027f4c:	fb03 f30b 	mul.w	r3, r3, fp
90027f50:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90027f54:	d071      	beq.n	9002803a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
90027f56:	43f9      	mvns	r1, r7
90027f58:	eb04 0343 	add.w	r3, r4, r3, lsl #1
90027f5c:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
90027f60:	b2c9      	uxtb	r1, r1
90027f62:	e9cd 3207 	strd	r3, r2, [sp, #28]
90027f66:	9104      	str	r1, [sp, #16]
90027f68:	9b07      	ldr	r3, [sp, #28]
90027f6a:	42a3      	cmp	r3, r4
90027f6c:	f240 80e7 	bls.w	9002813e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90027f70:	9b06      	ldr	r3, [sp, #24]
90027f72:	2b00      	cmp	r3, #0
90027f74:	d03d      	beq.n	90027ff2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
90027f76:	7831      	ldrb	r1, [r6, #0]
90027f78:	4650      	mov	r0, sl
90027f7a:	9b04      	ldr	r3, [sp, #16]
90027f7c:	f106 0801 	add.w	r8, r6, #1
90027f80:	f001 010f 	and.w	r1, r1, #15
90027f84:	8822      	ldrh	r2, [r4, #0]
90027f86:	9300      	str	r3, [sp, #0]
90027f88:	463b      	mov	r3, r7
90027f8a:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90027f8e:	4429      	add	r1, r5
90027f90:	f7ff ff56 	bl	90027e40 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90027f94:	9b03      	ldr	r3, [sp, #12]
90027f96:	f824 0b02 	strh.w	r0, [r4], #2
90027f9a:	f103 3bff 	add.w	fp, r3, #4294967295
90027f9e:	f1bb 0f01 	cmp.w	fp, #1
90027fa2:	46a1      	mov	r9, r4
90027fa4:	f104 0404 	add.w	r4, r4, #4
90027fa8:	dd27      	ble.n	90027ffa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
90027faa:	f898 1000 	ldrb.w	r1, [r8]
90027fae:	4650      	mov	r0, sl
90027fb0:	9b04      	ldr	r3, [sp, #16]
90027fb2:	f1ab 0b02 	sub.w	fp, fp, #2
90027fb6:	0909      	lsrs	r1, r1, #4
90027fb8:	f834 2c04 	ldrh.w	r2, [r4, #-4]
90027fbc:	9300      	str	r3, [sp, #0]
90027fbe:	463b      	mov	r3, r7
90027fc0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90027fc4:	4429      	add	r1, r5
90027fc6:	f7ff ff3b 	bl	90027e40 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90027fca:	f824 0c04 	strh.w	r0, [r4, #-4]
90027fce:	f818 1b01 	ldrb.w	r1, [r8], #1
90027fd2:	4650      	mov	r0, sl
90027fd4:	9b04      	ldr	r3, [sp, #16]
90027fd6:	f001 010f 	and.w	r1, r1, #15
90027fda:	f834 2c02 	ldrh.w	r2, [r4, #-2]
90027fde:	9300      	str	r3, [sp, #0]
90027fe0:	463b      	mov	r3, r7
90027fe2:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90027fe6:	4429      	add	r1, r5
90027fe8:	f7ff ff2a 	bl	90027e40 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90027fec:	f824 0c02 	strh.w	r0, [r4, #-2]
90027ff0:	e7d5      	b.n	90027f9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
90027ff2:	46b0      	mov	r8, r6
90027ff4:	f8dd b00c 	ldr.w	fp, [sp, #12]
90027ff8:	e7d1      	b.n	90027f9e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
90027ffa:	d10f      	bne.n	9002801c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
90027ffc:	f898 1000 	ldrb.w	r1, [r8]
90028000:	4650      	mov	r0, sl
90028002:	9b04      	ldr	r3, [sp, #16]
90028004:	0909      	lsrs	r1, r1, #4
90028006:	f8b9 2000 	ldrh.w	r2, [r9]
9002800a:	9300      	str	r3, [sp, #0]
9002800c:	463b      	mov	r3, r7
9002800e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028012:	4429      	add	r1, r5
90028014:	f7ff ff14 	bl	90027e40 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
90028018:	f829 0b02 	strh.w	r0, [r9], #2
9002801c:	9b08      	ldr	r3, [sp, #32]
9002801e:	9a05      	ldr	r2, [sp, #20]
90028020:	881c      	ldrh	r4, [r3, #0]
90028022:	9b03      	ldr	r3, [sp, #12]
90028024:	1ae4      	subs	r4, r4, r3
90028026:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
9002802a:	4413      	add	r3, r2
9002802c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
9002802e:	eb09 0444 	add.w	r4, r9, r4, lsl #1
90028032:	fb93 f3f2 	sdiv	r3, r3, r2
90028036:	441e      	add	r6, r3
90028038:	e796      	b.n	90027f68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
9002803a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
9002803e:	4f46      	ldr	r7, [pc, #280]	@ (90028158 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
90028040:	42a3      	cmp	r3, r4
90028042:	d97c      	bls.n	9002813e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
90028044:	9a06      	ldr	r2, [sp, #24]
90028046:	2a00      	cmp	r2, #0
90028048:	d054      	beq.n	900280f4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
9002804a:	7830      	ldrb	r0, [r6, #0]
9002804c:	1c71      	adds	r1, r6, #1
9002804e:	f000 000f 	and.w	r0, r0, #15
90028052:	eb00 0040 	add.w	r0, r0, r0, lsl #1
90028056:	eb05 0e00 	add.w	lr, r5, r0
9002805a:	5c28      	ldrb	r0, [r5, r0]
9002805c:	f89e 2002 	ldrb.w	r2, [lr, #2]
90028060:	f89e e001 	ldrb.w	lr, [lr, #1]
90028064:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90028068:	ea4f 0ece 	mov.w	lr, lr, lsl #3
9002806c:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
90028070:	ea42 020e 	orr.w	r2, r2, lr
90028074:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
90028078:	f824 2b02 	strh.w	r2, [r4], #2
9002807c:	9a03      	ldr	r2, [sp, #12]
9002807e:	f102 3eff 	add.w	lr, r2, #4294967295
90028082:	f1be 0f01 	cmp.w	lr, #1
90028086:	4620      	mov	r0, r4
90028088:	f104 0404 	add.w	r4, r4, #4
9002808c:	dd36      	ble.n	900280fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
9002808e:	7808      	ldrb	r0, [r1, #0]
90028090:	f1ae 0e02 	sub.w	lr, lr, #2
90028094:	0900      	lsrs	r0, r0, #4
90028096:	eb00 0040 	add.w	r0, r0, r0, lsl #1
9002809a:	eb05 0a00 	add.w	sl, r5, r0
9002809e:	f89a 2001 	ldrb.w	r2, [sl, #1]
900280a2:	f89a 9002 	ldrb.w	r9, [sl, #2]
900280a6:	00d2      	lsls	r2, r2, #3
900280a8:	ea07 2909 	and.w	r9, r7, r9, lsl #8
900280ac:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900280b0:	ea49 0202 	orr.w	r2, r9, r2
900280b4:	f815 9000 	ldrb.w	r9, [r5, r0]
900280b8:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
900280bc:	f824 2c04 	strh.w	r2, [r4, #-4]
900280c0:	f811 0b01 	ldrb.w	r0, [r1], #1
900280c4:	f000 000f 	and.w	r0, r0, #15
900280c8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
900280cc:	eb05 0a00 	add.w	sl, r5, r0
900280d0:	f89a 2001 	ldrb.w	r2, [sl, #1]
900280d4:	f89a 9002 	ldrb.w	r9, [sl, #2]
900280d8:	00d2      	lsls	r2, r2, #3
900280da:	ea07 2909 	and.w	r9, r7, r9, lsl #8
900280de:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
900280e2:	ea49 0202 	orr.w	r2, r9, r2
900280e6:	f815 9000 	ldrb.w	r9, [r5, r0]
900280ea:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
900280ee:	f824 2c02 	strh.w	r2, [r4, #-2]
900280f2:	e7c6      	b.n	90028082 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
900280f4:	4631      	mov	r1, r6
900280f6:	f8dd e00c 	ldr.w	lr, [sp, #12]
900280fa:	e7c2      	b.n	90028082 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
900280fc:	d111      	bne.n	90028122 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
900280fe:	7809      	ldrb	r1, [r1, #0]
90028100:	0909      	lsrs	r1, r1, #4
90028102:	eb01 0141 	add.w	r1, r1, r1, lsl #1
90028106:	186c      	adds	r4, r5, r1
90028108:	5c69      	ldrb	r1, [r5, r1]
9002810a:	78a2      	ldrb	r2, [r4, #2]
9002810c:	7864      	ldrb	r4, [r4, #1]
9002810e:	ea07 2202 	and.w	r2, r7, r2, lsl #8
90028112:	00e4      	lsls	r4, r4, #3
90028114:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
90028118:	4322      	orrs	r2, r4
9002811a:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
9002811e:	f820 2b02 	strh.w	r2, [r0], #2
90028122:	9a03      	ldr	r2, [sp, #12]
90028124:	f8bc 4000 	ldrh.w	r4, [ip]
90028128:	9905      	ldr	r1, [sp, #20]
9002812a:	1aa4      	subs	r4, r4, r2
9002812c:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
90028130:	440a      	add	r2, r1
90028132:	eb00 0444 	add.w	r4, r0, r4, lsl #1
90028136:	fb92 f2f8 	sdiv	r2, r2, r8
9002813a:	4416      	add	r6, r2
9002813c:	e780      	b.n	90028040 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
9002813e:	4b04      	ldr	r3, [pc, #16]	@ (90028150 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
90028140:	6818      	ldr	r0, [r3, #0]
90028142:	6803      	ldr	r3, [r0, #0]
90028144:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90028146:	4798      	blx	r3
90028148:	b00f      	add	sp, #60	@ 0x3c
9002814a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002814e:	bf00      	nop
90028150:	2402198c 	.word	0x2402198c
90028154:	24021986 	.word	0x24021986
90028158:	fffff800 	.word	0xfffff800

9002815c <CRC_Lock>:
9002815c:	4a2d      	ldr	r2, [pc, #180]	@ (90028214 <CRC_Lock+0xb8>)
9002815e:	b530      	push	{r4, r5, lr}
90028160:	6813      	ldr	r3, [r2, #0]
90028162:	f24c 2540 	movw	r5, #49728	@ 0xc240
90028166:	f023 0301 	bic.w	r3, r3, #1
9002816a:	6013      	str	r3, [r2, #0]
9002816c:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
90028170:	4b29      	ldr	r3, [pc, #164]	@ (90028218 <CRC_Lock+0xbc>)
90028172:	681c      	ldr	r4, [r3, #0]
90028174:	4014      	ands	r4, r2
90028176:	42ac      	cmp	r4, r5
90028178:	d005      	beq.n	90028186 <CRC_Lock+0x2a>
9002817a:	681c      	ldr	r4, [r3, #0]
9002817c:	f24c 2570 	movw	r5, #49776	@ 0xc270
90028180:	4014      	ands	r4, r2
90028182:	42ac      	cmp	r4, r5
90028184:	d125      	bne.n	900281d2 <CRC_Lock+0x76>
90028186:	4b25      	ldr	r3, [pc, #148]	@ (9002821c <CRC_Lock+0xc0>)
90028188:	681b      	ldr	r3, [r3, #0]
9002818a:	2b00      	cmp	r3, #0
9002818c:	d139      	bne.n	90028202 <CRC_Lock+0xa6>
9002818e:	4b24      	ldr	r3, [pc, #144]	@ (90028220 <CRC_Lock+0xc4>)
90028190:	681a      	ldr	r2, [r3, #0]
90028192:	f3c2 020b 	ubfx	r2, r2, #0, #12
90028196:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
9002819a:	d00d      	beq.n	900281b8 <CRC_Lock+0x5c>
9002819c:	681a      	ldr	r2, [r3, #0]
9002819e:	f240 4483 	movw	r4, #1155	@ 0x483
900281a2:	f3c2 020b 	ubfx	r2, r2, #0, #12
900281a6:	42a2      	cmp	r2, r4
900281a8:	d006      	beq.n	900281b8 <CRC_Lock+0x5c>
900281aa:	681b      	ldr	r3, [r3, #0]
900281ac:	f240 4285 	movw	r2, #1157	@ 0x485
900281b0:	f3c3 030b 	ubfx	r3, r3, #0, #12
900281b4:	4293      	cmp	r3, r2
900281b6:	d124      	bne.n	90028202 <CRC_Lock+0xa6>
900281b8:	4b1a      	ldr	r3, [pc, #104]	@ (90028224 <CRC_Lock+0xc8>)
900281ba:	2201      	movs	r2, #1
900281bc:	601a      	str	r2, [r3, #0]
900281be:	681a      	ldr	r2, [r3, #0]
900281c0:	2a00      	cmp	r2, #0
900281c2:	d1fc      	bne.n	900281be <CRC_Lock+0x62>
900281c4:	4b18      	ldr	r3, [pc, #96]	@ (90028228 <CRC_Lock+0xcc>)
900281c6:	6018      	str	r0, [r3, #0]
900281c8:	6818      	ldr	r0, [r3, #0]
900281ca:	1a43      	subs	r3, r0, r1
900281cc:	4258      	negs	r0, r3
900281ce:	4158      	adcs	r0, r3
900281d0:	e00e      	b.n	900281f0 <CRC_Lock+0x94>
900281d2:	681b      	ldr	r3, [r3, #0]
900281d4:	4013      	ands	r3, r2
900281d6:	f24d 2220 	movw	r2, #53792	@ 0xd220
900281da:	4293      	cmp	r3, r2
900281dc:	d111      	bne.n	90028202 <CRC_Lock+0xa6>
900281de:	4b13      	ldr	r3, [pc, #76]	@ (9002822c <CRC_Lock+0xd0>)
900281e0:	f240 4286 	movw	r2, #1158	@ 0x486
900281e4:	681b      	ldr	r3, [r3, #0]
900281e6:	f3c3 030b 	ubfx	r3, r3, #0, #12
900281ea:	4293      	cmp	r3, r2
900281ec:	d001      	beq.n	900281f2 <CRC_Lock+0x96>
900281ee:	2000      	movs	r0, #0
900281f0:	bd30      	pop	{r4, r5, pc}
900281f2:	4b0f      	ldr	r3, [pc, #60]	@ (90028230 <CRC_Lock+0xd4>)
900281f4:	2201      	movs	r2, #1
900281f6:	601a      	str	r2, [r3, #0]
900281f8:	681a      	ldr	r2, [r3, #0]
900281fa:	2a00      	cmp	r2, #0
900281fc:	d1fc      	bne.n	900281f8 <CRC_Lock+0x9c>
900281fe:	4b0d      	ldr	r3, [pc, #52]	@ (90028234 <CRC_Lock+0xd8>)
90028200:	e7e1      	b.n	900281c6 <CRC_Lock+0x6a>
90028202:	4b0d      	ldr	r3, [pc, #52]	@ (90028238 <CRC_Lock+0xdc>)
90028204:	2201      	movs	r2, #1
90028206:	601a      	str	r2, [r3, #0]
90028208:	681a      	ldr	r2, [r3, #0]
9002820a:	2a00      	cmp	r2, #0
9002820c:	d1fc      	bne.n	90028208 <CRC_Lock+0xac>
9002820e:	4b0b      	ldr	r3, [pc, #44]	@ (9002823c <CRC_Lock+0xe0>)
90028210:	e7d9      	b.n	900281c6 <CRC_Lock+0x6a>
90028212:	bf00      	nop
90028214:	e0002000 	.word	0xe0002000
90028218:	e000ed00 	.word	0xe000ed00
9002821c:	e0042000 	.word	0xe0042000
90028220:	5c001000 	.word	0x5c001000
90028224:	58024c08 	.word	0x58024c08
90028228:	58024c00 	.word	0x58024c00
9002822c:	46008ff0 	.word	0x46008ff0
90028230:	46024c08 	.word	0x46024c08
90028234:	46024c00 	.word	0x46024c00
90028238:	40023008 	.word	0x40023008
9002823c:	40023000 	.word	0x40023000

90028240 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
90028240:	6101      	str	r1, [r0, #16]
90028242:	4770      	bx	lr

90028244 <_ZN8touchgfx8Gestures4tickEv>:
90028244:	7b83      	ldrb	r3, [r0, #14]
90028246:	b14b      	cbz	r3, 9002825c <_ZN8touchgfx8Gestures4tickEv+0x18>
90028248:	8903      	ldrh	r3, [r0, #8]
9002824a:	3301      	adds	r3, #1
9002824c:	b29b      	uxth	r3, r3
9002824e:	2b07      	cmp	r3, #7
90028250:	8103      	strh	r3, [r0, #8]
90028252:	bf81      	itttt	hi
90028254:	2300      	movhi	r3, #0
90028256:	8143      	strhhi	r3, [r0, #10]
90028258:	8183      	strhhi	r3, [r0, #12]
9002825a:	7383      	strbhi	r3, [r0, #14]
9002825c:	4770      	bx	lr
	...

90028260 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
90028260:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
90028264:	4698      	mov	r8, r3
90028266:	8883      	ldrh	r3, [r0, #4]
90028268:	4604      	mov	r4, r0
9002826a:	4617      	mov	r7, r2
9002826c:	f8ad 3006 	strh.w	r3, [sp, #6]
90028270:	eba8 0303 	sub.w	r3, r8, r3
90028274:	4a19      	ldr	r2, [pc, #100]	@ (900282dc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
90028276:	460e      	mov	r6, r1
90028278:	b21b      	sxth	r3, r3
9002827a:	88c1      	ldrh	r1, [r0, #6]
9002827c:	9200      	str	r2, [sp, #0]
9002827e:	2000      	movs	r0, #0
90028280:	2b00      	cmp	r3, #0
90028282:	8aa2      	ldrh	r2, [r4, #20]
90028284:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
90028288:	bfb8      	it	lt
9002828a:	425b      	neglt	r3, r3
9002828c:	f88d 0004 	strb.w	r0, [sp, #4]
90028290:	f8ad 1008 	strh.w	r1, [sp, #8]
90028294:	b21b      	sxth	r3, r3
90028296:	f8ad 800a 	strh.w	r8, [sp, #10]
9002829a:	f8ad 500c 	strh.w	r5, [sp, #12]
9002829e:	4293      	cmp	r3, r2
900282a0:	dc07      	bgt.n	900282b2 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
900282a2:	1a69      	subs	r1, r5, r1
900282a4:	b209      	sxth	r1, r1
900282a6:	2900      	cmp	r1, #0
900282a8:	bfb8      	it	lt
900282aa:	4249      	neglt	r1, r1
900282ac:	b209      	sxth	r1, r1
900282ae:	428a      	cmp	r2, r1
900282b0:	da10      	bge.n	900282d4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
900282b2:	6920      	ldr	r0, [r4, #16]
900282b4:	4669      	mov	r1, sp
900282b6:	eba8 0606 	sub.w	r6, r8, r6
900282ba:	1bef      	subs	r7, r5, r7
900282bc:	6803      	ldr	r3, [r0, #0]
900282be:	685b      	ldr	r3, [r3, #4]
900282c0:	4798      	blx	r3
900282c2:	2300      	movs	r3, #0
900282c4:	2001      	movs	r0, #1
900282c6:	8166      	strh	r6, [r4, #10]
900282c8:	8123      	strh	r3, [r4, #8]
900282ca:	81a7      	strh	r7, [r4, #12]
900282cc:	f8a4 8004 	strh.w	r8, [r4, #4]
900282d0:	80e5      	strh	r5, [r4, #6]
900282d2:	73a0      	strb	r0, [r4, #14]
900282d4:	b004      	add	sp, #16
900282d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
900282da:	bf00      	nop
900282dc:	9002d674 	.word	0x9002d674

900282e0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
900282e0:	b5f0      	push	{r4, r5, r6, r7, lr}
900282e2:	461e      	mov	r6, r3
900282e4:	1e4b      	subs	r3, r1, #1
900282e6:	b085      	sub	sp, #20
900282e8:	4604      	mov	r4, r0
900282ea:	2b01      	cmp	r3, #1
900282ec:	460d      	mov	r5, r1
900282ee:	4617      	mov	r7, r2
900282f0:	d84b      	bhi.n	9002838a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
900282f2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
900282f6:	1cd3      	adds	r3, r2, #3
900282f8:	b29b      	uxth	r3, r3
900282fa:	2b06      	cmp	r3, #6
900282fc:	d916      	bls.n	9002832c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
900282fe:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 900283a0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
90028302:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90028306:	f8cd c004 	str.w	ip, [sp, #4]
9002830a:	f04f 0c00 	mov.w	ip, #0
9002830e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
90028312:	6900      	ldr	r0, [r0, #16]
90028314:	f8ad 100c 	strh.w	r1, [sp, #12]
90028318:	a901      	add	r1, sp, #4
9002831a:	f88d c008 	strb.w	ip, [sp, #8]
9002831e:	f8ad 200a 	strh.w	r2, [sp, #10]
90028322:	f8ad 300e 	strh.w	r3, [sp, #14]
90028326:	6803      	ldr	r3, [r0, #0]
90028328:	689b      	ldr	r3, [r3, #8]
9002832a:	4798      	blx	r3
9002832c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
90028330:	1cd3      	adds	r3, r2, #3
90028332:	b29b      	uxth	r3, r3
90028334:	2b06      	cmp	r3, #6
90028336:	d916      	bls.n	90028366 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
90028338:	f8df c064 	ldr.w	ip, [pc, #100]	@ 900283a0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
9002833c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
90028340:	f8cd c004 	str.w	ip, [sp, #4]
90028344:	f04f 0c01 	mov.w	ip, #1
90028348:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
9002834c:	6920      	ldr	r0, [r4, #16]
9002834e:	f8ad 100c 	strh.w	r1, [sp, #12]
90028352:	a901      	add	r1, sp, #4
90028354:	f88d c008 	strb.w	ip, [sp, #8]
90028358:	f8ad 200a 	strh.w	r2, [sp, #10]
9002835c:	f8ad 300e 	strh.w	r3, [sp, #14]
90028360:	6803      	ldr	r3, [r0, #0]
90028362:	689b      	ldr	r3, [r3, #8]
90028364:	4798      	blx	r3
90028366:	4b0d      	ldr	r3, [pc, #52]	@ (9002839c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
90028368:	a901      	add	r1, sp, #4
9002836a:	6920      	ldr	r0, [r4, #16]
9002836c:	9301      	str	r3, [sp, #4]
9002836e:	2300      	movs	r3, #0
90028370:	f88d 5008 	strb.w	r5, [sp, #8]
90028374:	f8ad 700a 	strh.w	r7, [sp, #10]
90028378:	f8ad 600c 	strh.w	r6, [sp, #12]
9002837c:	f8ad 300e 	strh.w	r3, [sp, #14]
90028380:	6803      	ldr	r3, [r0, #0]
90028382:	681b      	ldr	r3, [r3, #0]
90028384:	4798      	blx	r3
90028386:	b005      	add	sp, #20
90028388:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002838a:	2900      	cmp	r1, #0
9002838c:	d1eb      	bne.n	90028366 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002838e:	80a2      	strh	r2, [r4, #4]
90028390:	80c6      	strh	r6, [r0, #6]
90028392:	60a1      	str	r1, [r4, #8]
90028394:	81a1      	strh	r1, [r4, #12]
90028396:	73a1      	strb	r1, [r4, #14]
90028398:	e7e5      	b.n	90028366 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
9002839a:	bf00      	nop
9002839c:	9002d660 	.word	0x9002d660
900283a0:	9002d688 	.word	0x9002d688

900283a4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>:
900283a4:	10c9      	asrs	r1, r1, #3
900283a6:	2900      	cmp	r1, #0
900283a8:	bfb8      	it	lt
900283aa:	4249      	neglt	r1, r1
900283ac:	2801      	cmp	r0, #1
900283ae:	d108      	bne.n	900283c2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
900283b0:	f3c1 0008 	ubfx	r0, r1, #0, #9
900283b4:	f5b0 7f80 	cmp.w	r0, #256	@ 0x100
900283b8:	4601      	mov	r1, r0
900283ba:	dd02      	ble.n	900283c2 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1+0x1e>
900283bc:	f5c0 7000 	rsb	r0, r0, #512	@ 0x200
900283c0:	4770      	bx	lr
900283c2:	29ff      	cmp	r1, #255	@ 0xff
900283c4:	bfa8      	it	ge
900283c6:	21ff      	movge	r1, #255	@ 0xff
900283c8:	4608      	mov	r0, r1
900283ca:	4770      	bx	lr

900283cc <_ZN8touchgfx10Rasterizer6lineToEii>:
900283cc:	b410      	push	{r4}
900283ce:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
900283d2:	429c      	cmp	r4, r3
900283d4:	d803      	bhi.n	900283de <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
900283d6:	f85d 4b04 	ldr.w	r4, [sp], #4
900283da:	f7ec b84f 	b.w	9001447c <_ZN8touchgfx7Outline6lineToEii>
900283de:	f85d 4b04 	ldr.w	r4, [sp], #4
900283e2:	4770      	bx	lr

900283e4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
900283e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
900283e8:	b08b      	sub	sp, #44	@ 0x2c
900283ea:	4606      	mov	r6, r0
900283ec:	468a      	mov	sl, r1
900283ee:	e9cd 2306 	strd	r2, r3, [sp, #24]
900283f2:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
900283f6:	9308      	str	r3, [sp, #32]
900283f8:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
900283fc:	9309      	str	r3, [sp, #36]	@ 0x24
900283fe:	f7ec f9a8 	bl	90014752 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
90028402:	68b5      	ldr	r5, [r6, #8]
90028404:	4604      	mov	r4, r0
90028406:	2d00      	cmp	r5, #0
90028408:	d044      	beq.n	90028494 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
9002840a:	6873      	ldr	r3, [r6, #4]
9002840c:	42ab      	cmp	r3, r5
9002840e:	d33d      	bcc.n	9002848c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
90028410:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
90028414:	f04f 0800 	mov.w	r8, #0
90028418:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	@ 0x34
9002841c:	eb02 0b03 	add.w	fp, r2, r3
90028420:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
90028424:	fb02 1203 	mla	r2, r2, r3, r1
90028428:	9205      	str	r2, [sp, #20]
9002842a:	1e6a      	subs	r2, r5, #1
9002842c:	9204      	str	r2, [sp, #16]
9002842e:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
90028432:	f9b4 7000 	ldrsh.w	r7, [r4]
90028436:	454b      	cmp	r3, r9
90028438:	463a      	mov	r2, r7
9002843a:	d008      	beq.n	9002844e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
9002843c:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	@ 0x34
90028440:	eb03 0b09 	add.w	fp, r3, r9
90028444:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
90028448:	fb03 1309 	mla	r3, r3, r9, r1
9002844c:	9305      	str	r3, [sp, #20]
9002844e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
90028452:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
90028456:	4498      	add	r8, r3
90028458:	9b04      	ldr	r3, [sp, #16]
9002845a:	3b01      	subs	r3, #1
9002845c:	9304      	str	r3, [sp, #16]
9002845e:	9b04      	ldr	r3, [sp, #16]
90028460:	3301      	adds	r3, #1
90028462:	d015      	beq.n	90028490 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
90028464:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
90028468:	42bb      	cmp	r3, r7
9002846a:	d117      	bne.n	9002849c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
9002846c:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
90028470:	9b04      	ldr	r3, [sp, #16]
90028472:	4548      	cmp	r0, r9
90028474:	f103 33ff 	add.w	r3, r3, #4294967295
90028478:	d17d      	bne.n	90028576 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x192>
9002847a:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
9002847e:	4401      	add	r1, r0
90028480:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
90028484:	4480      	add	r8, r0
90028486:	e7e9      	b.n	9002845c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
90028488:	461f      	mov	r7, r3
9002848a:	e042      	b.n	90028512 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x12e>
9002848c:	2000      	movs	r0, #0
9002848e:	e002      	b.n	90028496 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
90028490:	2900      	cmp	r1, #0
90028492:	d16d      	bne.n	90028570 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
90028494:	2001      	movs	r0, #1
90028496:	b00b      	add	sp, #44	@ 0x2c
90028498:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
9002849c:	b379      	cbz	r1, 900284fe <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11a>
9002849e:	2f00      	cmp	r7, #0
900284a0:	db29      	blt.n	900284f6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
900284a2:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
900284a6:	42bb      	cmp	r3, r7
900284a8:	dd25      	ble.n	900284f6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
900284aa:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
900284ae:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
900284b2:	f7ff ff77 	bl	900283a4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
900284b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
900284b8:	fb10 f003 	smulbb	r0, r0, r3
900284bc:	b280      	uxth	r0, r0
900284be:	1c41      	adds	r1, r0, #1
900284c0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
900284c4:	1209      	asrs	r1, r1, #8
900284c6:	f011 0fff 	tst.w	r1, #255	@ 0xff
900284ca:	d014      	beq.n	900284f6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x112>
900284cc:	b2c9      	uxtb	r1, r1
900284ce:	9808      	ldr	r0, [sp, #32]
900284d0:	b2ba      	uxth	r2, r7
900284d2:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
900284d4:	9102      	str	r1, [sp, #8]
900284d6:	2101      	movs	r1, #1
900284d8:	4413      	add	r3, r2
900284da:	4402      	add	r2, r0
900284dc:	9101      	str	r1, [sp, #4]
900284de:	fa0f f18b 	sxth.w	r1, fp
900284e2:	f8da 0000 	ldr.w	r0, [sl]
900284e6:	b21b      	sxth	r3, r3
900284e8:	9100      	str	r1, [sp, #0]
900284ea:	b212      	sxth	r2, r2
900284ec:	6941      	ldr	r1, [r0, #20]
900284ee:	4650      	mov	r0, sl
900284f0:	460d      	mov	r5, r1
900284f2:	9905      	ldr	r1, [sp, #20]
900284f4:	47a8      	blx	r5
900284f6:	9b04      	ldr	r3, [sp, #16]
900284f8:	1c7a      	adds	r2, r7, #1
900284fa:	3301      	adds	r3, #1
900284fc:	d0ca      	beq.n	90028494 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
900284fe:	f9b4 7000 	ldrsh.w	r7, [r4]
90028502:	1abb      	subs	r3, r7, r2
90028504:	2b00      	cmp	r3, #0
90028506:	dd31      	ble.n	9002856c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028508:	2a00      	cmp	r2, #0
9002850a:	dabd      	bge.n	90028488 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
9002850c:	2f00      	cmp	r7, #0
9002850e:	dd2d      	ble.n	9002856c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028510:	2200      	movs	r2, #0
90028512:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	@ 0x36
90028516:	19d1      	adds	r1, r2, r7
90028518:	4299      	cmp	r1, r3
9002851a:	db02      	blt.n	90028522 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x13e>
9002851c:	1a9f      	subs	r7, r3, r2
9002851e:	2f00      	cmp	r7, #0
90028520:	dd24      	ble.n	9002856c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028522:	ea4f 1188 	mov.w	r1, r8, lsl #6
90028526:	f896 0030 	ldrb.w	r0, [r6, #48]	@ 0x30
9002852a:	f7ff ff3b 	bl	900283a4 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.1>
9002852e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90028530:	fb10 f003 	smulbb	r0, r0, r3
90028534:	b280      	uxth	r0, r0
90028536:	1c41      	adds	r1, r0, #1
90028538:	eb01 2110 	add.w	r1, r1, r0, lsr #8
9002853c:	1209      	asrs	r1, r1, #8
9002853e:	f011 0fff 	tst.w	r1, #255	@ 0xff
90028542:	d013      	beq.n	9002856c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
90028544:	b292      	uxth	r2, r2
90028546:	9808      	ldr	r0, [sp, #32]
90028548:	b2c9      	uxtb	r1, r1
9002854a:	8e73      	ldrh	r3, [r6, #50]	@ 0x32
9002854c:	b23f      	sxth	r7, r7
9002854e:	4413      	add	r3, r2
90028550:	9102      	str	r1, [sp, #8]
90028552:	4402      	add	r2, r0
90028554:	fa0f f18b 	sxth.w	r1, fp
90028558:	f8da 0000 	ldr.w	r0, [sl]
9002855c:	b21b      	sxth	r3, r3
9002855e:	9100      	str	r1, [sp, #0]
90028560:	b212      	sxth	r2, r2
90028562:	9701      	str	r7, [sp, #4]
90028564:	9905      	ldr	r1, [sp, #20]
90028566:	6947      	ldr	r7, [r0, #20]
90028568:	4650      	mov	r0, sl
9002856a:	47b8      	blx	r7
9002856c:	464b      	mov	r3, r9
9002856e:	e75e      	b.n	9002842e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
90028570:	2f00      	cmp	r7, #0
90028572:	da96      	bge.n	900284a2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbe>
90028574:	e78e      	b.n	90028494 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
90028576:	2900      	cmp	r1, #0
90028578:	d0f8      	beq.n	9002856c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x188>
9002857a:	e790      	b.n	9002849e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xba>

9002857c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h>:
9002857c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
90028580:	461e      	mov	r6, r3
90028582:	4b36      	ldr	r3, [pc, #216]	@ (9002865c <_ZN8touchgfx6CanvasC1EPKNS_15AbstractPainterERKNS_4RectES6_h+0xe0>)
90028584:	2500      	movs	r5, #0
90028586:	f100 0814 	add.w	r8, r0, #20
9002858a:	4604      	mov	r4, r0
9002858c:	4617      	mov	r7, r2
9002858e:	e9c0 3100 	strd	r3, r1, [r0]
90028592:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
90028596:	8185      	strh	r5, [r0, #12]
90028598:	8103      	strh	r3, [r0, #8]
9002859a:	f89d 3020 	ldrb.w	r3, [sp, #32]
9002859e:	81c5      	strh	r5, [r0, #14]
900285a0:	7283      	strb	r3, [r0, #10]
900285a2:	8205      	strh	r5, [r0, #16]
900285a4:	8245      	strh	r5, [r0, #18]
900285a6:	4640      	mov	r0, r8
900285a8:	f7eb faae 	bl	90013b08 <_ZN8touchgfx7OutlineC1Ev>
900285ac:	f884 5044 	strb.w	r5, [r4, #68]	@ 0x44
900285b0:	f8a4 5046 	strh.w	r5, [r4, #70]	@ 0x46
900285b4:	466b      	mov	r3, sp
900285b6:	f8a4 5048 	strh.w	r5, [r4, #72]	@ 0x48
900285ba:	f8a4 504a 	strh.w	r5, [r4, #74]	@ 0x4a
900285be:	f884 505c 	strb.w	r5, [r4, #92]	@ 0x5c
900285c2:	f884 505d 	strb.w	r5, [r4, #93]	@ 0x5d
900285c6:	f8a4 5068 	strh.w	r5, [r4, #104]	@ 0x68
900285ca:	e9c4 5513 	strd	r5, r5, [r4, #76]	@ 0x4c
900285ce:	e9c4 5515 	strd	r5, r5, [r4, #84]	@ 0x54
900285d2:	e9c4 5518 	strd	r5, r5, [r4, #96]	@ 0x60
900285d6:	e9c4 551b 	strd	r5, r5, [r4, #108]	@ 0x6c
900285da:	6830      	ldr	r0, [r6, #0]
900285dc:	6871      	ldr	r1, [r6, #4]
900285de:	8872      	ldrh	r2, [r6, #2]
900285e0:	8835      	ldrh	r5, [r6, #0]
900285e2:	c303      	stmia	r3!, {r0, r1}
900285e4:	887b      	ldrh	r3, [r7, #2]
900285e6:	f9b6 0004 	ldrsh.w	r0, [r6, #4]
900285ea:	4413      	add	r3, r2
900285ec:	883a      	ldrh	r2, [r7, #0]
900285ee:	f9b6 1006 	ldrsh.w	r1, [r6, #6]
900285f2:	442a      	add	r2, r5
900285f4:	81e3      	strh	r3, [r4, #14]
900285f6:	8220      	strh	r0, [r4, #16]
900285f8:	4668      	mov	r0, sp
900285fa:	81a2      	strh	r2, [r4, #12]
900285fc:	8261      	strh	r1, [r4, #18]
900285fe:	4639      	mov	r1, r7
90028600:	f7ed fc5a 	bl	90015eb8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
90028604:	f104 000c 	add.w	r0, r4, #12
90028608:	f7ed fc2e 	bl	90015e68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
9002860c:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90028610:	f8bd 2000 	ldrh.w	r2, [sp]
90028614:	4640      	mov	r0, r8
90028616:	f8a4 3048 	strh.w	r3, [r4, #72]	@ 0x48
9002861a:	f8a4 2046 	strh.w	r2, [r4, #70]	@ 0x46
9002861e:	f7eb fa57 	bl	90013ad0 <_ZN8touchgfx7Outline5resetEv>
90028622:	f9bd 3000 	ldrsh.w	r3, [sp]
90028626:	f9b4 2012 	ldrsh.w	r2, [r4, #18]
9002862a:	4620      	mov	r0, r4
9002862c:	015b      	lsls	r3, r3, #5
9002862e:	64e3      	str	r3, [r4, #76]	@ 0x4c
90028630:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
90028634:	015b      	lsls	r3, r3, #5
90028636:	6523      	str	r3, [r4, #80]	@ 0x50
90028638:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
9002863c:	015b      	lsls	r3, r3, #5
9002863e:	6563      	str	r3, [r4, #84]	@ 0x54
90028640:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
90028644:	015b      	lsls	r3, r3, #5
90028646:	65a3      	str	r3, [r4, #88]	@ 0x58
90028648:	f9b4 3010 	ldrsh.w	r3, [r4, #16]
9002864c:	f8a4 304a 	strh.w	r3, [r4, #74]	@ 0x4a
90028650:	e9c4 320f 	strd	r3, r2, [r4, #60]	@ 0x3c
90028654:	b002      	add	sp, #8
90028656:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002865a:	bf00      	nop
9002865c:	9002d9c4 	.word	0x9002d9c4

90028660 <_ZN8touchgfx6Canvas5closeEv>:
90028660:	b538      	push	{r3, r4, r5, lr}
90028662:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
90028666:	4604      	mov	r4, r0
90028668:	b193      	cbz	r3, 90028690 <_ZN8touchgfx6Canvas5closeEv+0x30>
9002866a:	f890 3068 	ldrb.w	r3, [r0, #104]	@ 0x68
9002866e:	f890 2069 	ldrb.w	r2, [r0, #105]	@ 0x69
90028672:	4213      	tst	r3, r2
90028674:	d10c      	bne.n	90028690 <_ZN8touchgfx6Canvas5closeEv+0x30>
90028676:	f100 0514 	add.w	r5, r0, #20
9002867a:	b123      	cbz	r3, 90028686 <_ZN8touchgfx6Canvas5closeEv+0x26>
9002867c:	e9d0 1218 	ldrd	r1, r2, [r0, #96]	@ 0x60
90028680:	4628      	mov	r0, r5
90028682:	f7ff fea3 	bl	900283cc <_ZN8touchgfx10Rasterizer6lineToEii>
90028686:	4628      	mov	r0, r5
90028688:	e9d4 121b 	ldrd	r1, r2, [r4, #108]	@ 0x6c
9002868c:	f7ff fe9e 	bl	900283cc <_ZN8touchgfx10Rasterizer6lineToEii>
90028690:	2300      	movs	r3, #0
90028692:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90028696:	e9d4 0306 	ldrd	r0, r3, [r4, #24]
9002869a:	4298      	cmp	r0, r3
9002869c:	bf34      	ite	cc
9002869e:	2000      	movcc	r0, #0
900286a0:	2001      	movcs	r0, #1
900286a2:	bd38      	pop	{r3, r4, r5, pc}

900286a4 <_ZN8touchgfx6Canvas6renderEh>:
900286a4:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
900286a8:	7a85      	ldrb	r5, [r0, #10]
900286aa:	4604      	mov	r4, r0
900286ac:	4369      	muls	r1, r5
900286ae:	1c4d      	adds	r5, r1, #1
900286b0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
900286b4:	122d      	asrs	r5, r5, #8
900286b6:	f000 8098 	beq.w	900287ea <_ZN8touchgfx6Canvas6renderEh+0x146>
900286ba:	f890 305d 	ldrb.w	r3, [r0, #93]	@ 0x5d
900286be:	2b00      	cmp	r3, #0
900286c0:	f000 8093 	beq.w	900287ea <_ZN8touchgfx6Canvas6renderEh+0x146>
900286c4:	f7ff ffcc 	bl	90028660 <_ZN8touchgfx6Canvas5closeEv>
900286c8:	4607      	mov	r7, r0
900286ca:	2800      	cmp	r0, #0
900286cc:	d045      	beq.n	9002875a <_ZN8touchgfx6Canvas6renderEh+0xb6>
900286ce:	6860      	ldr	r0, [r4, #4]
900286d0:	4e47      	ldr	r6, [pc, #284]	@ (900287f0 <_ZN8touchgfx6Canvas6renderEh+0x14c>)
900286d2:	6803      	ldr	r3, [r0, #0]
900286d4:	6837      	ldr	r7, [r6, #0]
900286d6:	689b      	ldr	r3, [r3, #8]
900286d8:	4798      	blx	r3
900286da:	4601      	mov	r1, r0
900286dc:	4638      	mov	r0, r7
900286de:	f7e8 fcb7 	bl	90011050 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
900286e2:	4607      	mov	r7, r0
900286e4:	f7e8 f84a 	bl	9001077c <_ZN8touchgfx3HAL3lcdEv>
900286e8:	6803      	ldr	r3, [r0, #0]
900286ea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
900286ec:	4798      	blx	r3
900286ee:	4680      	mov	r8, r0
900286f0:	f7e8 f844 	bl	9001077c <_ZN8touchgfx3HAL3lcdEv>
900286f4:	6803      	ldr	r3, [r0, #0]
900286f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
900286f8:	4798      	blx	r3
900286fa:	280b      	cmp	r0, #11
900286fc:	d85a      	bhi.n	900287b4 <_ZN8touchgfx6Canvas6renderEh+0x110>
900286fe:	e8df f000 	tbb	[pc, r0]
90028702:	5b50      	.short	0x5b50
90028704:	3059066b 	.word	0x3059066b
90028708:	64646440 	.word	0x64646440
9002870c:	6464      	.short	0x6464
9002870e:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90028712:	2208      	movs	r2, #8
90028714:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
90028718:	fb91 f2f2 	sdiv	r2, r1, r2
9002871c:	fb08 2303 	mla	r3, r8, r3, r2
90028720:	441f      	add	r7, r3
90028722:	424b      	negs	r3, r1
90028724:	f001 0107 	and.w	r1, r1, #7
90028728:	f003 0307 	and.w	r3, r3, #7
9002872c:	bf58      	it	pl
9002872e:	4259      	negpl	r1, r3
90028730:	b2c9      	uxtb	r1, r1
90028732:	b2ed      	uxtb	r5, r5
90028734:	463a      	mov	r2, r7
90028736:	fa0f f388 	sxth.w	r3, r8
9002873a:	f104 0014 	add.w	r0, r4, #20
9002873e:	e9cd 1500 	strd	r1, r5, [sp]
90028742:	6861      	ldr	r1, [r4, #4]
90028744:	f7ff fe4e 	bl	900283e4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
90028748:	4607      	mov	r7, r0
9002874a:	6860      	ldr	r0, [r4, #4]
9002874c:	6803      	ldr	r3, [r0, #0]
9002874e:	691b      	ldr	r3, [r3, #16]
90028750:	4798      	blx	r3
90028752:	6830      	ldr	r0, [r6, #0]
90028754:	6803      	ldr	r3, [r0, #0]
90028756:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
90028758:	4798      	blx	r3
9002875a:	4638      	mov	r0, r7
9002875c:	b002      	add	sp, #8
9002875e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
90028762:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90028766:	2204      	movs	r2, #4
90028768:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002876c:	fb91 f2f2 	sdiv	r2, r1, r2
90028770:	fb08 2303 	mla	r3, r8, r3, r2
90028774:	441f      	add	r7, r3
90028776:	424b      	negs	r3, r1
90028778:	f001 0103 	and.w	r1, r1, #3
9002877c:	f003 0303 	and.w	r3, r3, #3
90028780:	e7d4      	b.n	9002872c <_ZN8touchgfx6Canvas6renderEh+0x88>
90028782:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
90028786:	2202      	movs	r2, #2
90028788:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
9002878c:	2900      	cmp	r1, #0
9002878e:	fb91 f2f2 	sdiv	r2, r1, r2
90028792:	f001 0101 	and.w	r1, r1, #1
90028796:	fb08 2303 	mla	r3, r8, r3, r2
9002879a:	bfb8      	it	lt
9002879c:	4249      	neglt	r1, r1
9002879e:	441f      	add	r7, r3
900287a0:	e7c6      	b.n	90028730 <_ZN8touchgfx6Canvas6renderEh+0x8c>
900287a2:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
900287a6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900287aa:	fb08 f303 	mul.w	r3, r8, r3
900287ae:	eb03 0342 	add.w	r3, r3, r2, lsl #1
900287b2:	441f      	add	r7, r3
900287b4:	2100      	movs	r1, #0
900287b6:	e7bc      	b.n	90028732 <_ZN8touchgfx6Canvas6renderEh+0x8e>
900287b8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
900287bc:	2103      	movs	r1, #3
900287be:	fb08 f203 	mul.w	r2, r8, r3
900287c2:	89a3      	ldrh	r3, [r4, #12]
900287c4:	fb13 2301 	smlabb	r3, r3, r1, r2
900287c8:	e7f3      	b.n	900287b2 <_ZN8touchgfx6Canvas6renderEh+0x10e>
900287ca:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
900287ce:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900287d2:	fb08 2303 	mla	r3, r8, r3, r2
900287d6:	e7ec      	b.n	900287b2 <_ZN8touchgfx6Canvas6renderEh+0x10e>
900287d8:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
900287dc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
900287e0:	fb08 f303 	mul.w	r3, r8, r3
900287e4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
900287e8:	e7e3      	b.n	900287b2 <_ZN8touchgfx6Canvas6renderEh+0x10e>
900287ea:	2701      	movs	r7, #1
900287ec:	e7b5      	b.n	9002875a <_ZN8touchgfx6Canvas6renderEh+0xb6>
900287ee:	bf00      	nop
900287f0:	2402198c 	.word	0x2402198c

900287f4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
900287f4:	4b06      	ldr	r3, [pc, #24]	@ (90028810 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>)
900287f6:	b510      	push	{r4, lr}
900287f8:	781b      	ldrb	r3, [r3, #0]
900287fa:	2b01      	cmp	r3, #1
900287fc:	d107      	bne.n	9002880e <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1a>
900287fe:	f9b0 0008 	ldrsh.w	r0, [r0, #8]
90028802:	680b      	ldr	r3, [r1, #0]
90028804:	6814      	ldr	r4, [r2, #0]
90028806:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
9002880a:	6013      	str	r3, [r2, #0]
9002880c:	600c      	str	r4, [r1, #0]
9002880e:	bd10      	pop	{r4, pc}
90028810:	24021984 	.word	0x24021984

90028814 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
90028814:	b513      	push	{r0, r1, r4, lr}
90028816:	f890 305c 	ldrb.w	r3, [r0, #92]	@ 0x5c
9002881a:	4604      	mov	r4, r0
9002881c:	e9cd 2100 	strd	r2, r1, [sp]
90028820:	b9a3      	cbnz	r3, 9002884c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
90028822:	466a      	mov	r2, sp
90028824:	a901      	add	r1, sp, #4
90028826:	4620      	mov	r0, r4
90028828:	f7ff ffe4 	bl	900287f4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
9002882c:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
9002882e:	9901      	ldr	r1, [sp, #4]
90028830:	9a00      	ldr	r2, [sp, #0]
90028832:	1ac9      	subs	r1, r1, r3
90028834:	6d23      	ldr	r3, [r4, #80]	@ 0x50
90028836:	1ad2      	subs	r2, r2, r3
90028838:	9101      	str	r1, [sp, #4]
9002883a:	2a00      	cmp	r2, #0
9002883c:	9200      	str	r2, [sp, #0]
9002883e:	da0b      	bge.n	90028858 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
90028840:	2301      	movs	r3, #1
90028842:	2900      	cmp	r1, #0
90028844:	da0e      	bge.n	90028864 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
90028846:	f043 0304 	orr.w	r3, r3, #4
9002884a:	e013      	b.n	90028874 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
9002884c:	f7ff ff08 	bl	90028660 <_ZN8touchgfx6Canvas5closeEv>
90028850:	2800      	cmp	r0, #0
90028852:	d1e6      	bne.n	90028822 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
90028854:	b002      	add	sp, #8
90028856:	bd10      	pop	{r4, pc}
90028858:	6da3      	ldr	r3, [r4, #88]	@ 0x58
9002885a:	429a      	cmp	r2, r3
9002885c:	bfac      	ite	ge
9002885e:	2302      	movge	r3, #2
90028860:	2300      	movlt	r3, #0
90028862:	e7ee      	b.n	90028842 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
90028864:	6d60      	ldr	r0, [r4, #84]	@ 0x54
90028866:	4281      	cmp	r1, r0
90028868:	bfac      	ite	ge
9002886a:	2008      	movge	r0, #8
9002886c:	2000      	movlt	r0, #0
9002886e:	4318      	orrs	r0, r3
90028870:	b2c3      	uxtb	r3, r0
90028872:	b158      	cbz	r0, 9002888c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
90028874:	2200      	movs	r2, #0
90028876:	f884 205c 	strb.w	r2, [r4, #92]	@ 0x5c
9002887a:	9901      	ldr	r1, [sp, #4]
9002887c:	9a00      	ldr	r2, [sp, #0]
9002887e:	66e1      	str	r1, [r4, #108]	@ 0x6c
90028880:	6722      	str	r2, [r4, #112]	@ 0x70
90028882:	f884 3068 	strb.w	r3, [r4, #104]	@ 0x68
90028886:	e9c4 1218 	strd	r1, r2, [r4, #96]	@ 0x60
9002888a:	e7e3      	b.n	90028854 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
9002888c:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
90028890:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90028894:	4298      	cmp	r0, r3
90028896:	d803      	bhi.n	900288a0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
90028898:	f104 0014 	add.w	r0, r4, #20
9002889c:	f7eb fe08 	bl	900144b0 <_ZN8touchgfx7Outline6moveToEii>
900288a0:	2301      	movs	r3, #1
900288a2:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
900288a6:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
900288aa:	2300      	movs	r3, #0
900288ac:	e7e5      	b.n	9002887a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

900288ae <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
900288ae:	b573      	push	{r0, r1, r4, r5, r6, lr}
900288b0:	ab02      	add	r3, sp, #8
900288b2:	4604      	mov	r4, r0
900288b4:	9101      	str	r1, [sp, #4]
900288b6:	a901      	add	r1, sp, #4
900288b8:	f843 2d08 	str.w	r2, [r3, #-8]!
900288bc:	461a      	mov	r2, r3
900288be:	f7ff ff99 	bl	900287f4 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
900288c2:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
900288c4:	9901      	ldr	r1, [sp, #4]
900288c6:	9a00      	ldr	r2, [sp, #0]
900288c8:	1ac9      	subs	r1, r1, r3
900288ca:	6d23      	ldr	r3, [r4, #80]	@ 0x50
900288cc:	1ad2      	subs	r2, r2, r3
900288ce:	9101      	str	r1, [sp, #4]
900288d0:	2a00      	cmp	r2, #0
900288d2:	9200      	str	r2, [sp, #0]
900288d4:	db1c      	blt.n	90028910 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
900288d6:	6da3      	ldr	r3, [r4, #88]	@ 0x58
900288d8:	429a      	cmp	r2, r3
900288da:	bfac      	ite	ge
900288dc:	2002      	movge	r0, #2
900288de:	2000      	movlt	r0, #0
900288e0:	2900      	cmp	r1, #0
900288e2:	db17      	blt.n	90028914 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
900288e4:	6d63      	ldr	r3, [r4, #84]	@ 0x54
900288e6:	4299      	cmp	r1, r3
900288e8:	bfac      	ite	ge
900288ea:	2308      	movge	r3, #8
900288ec:	2300      	movlt	r3, #0
900288ee:	4303      	orrs	r3, r0
900288f0:	f894 0068 	ldrb.w	r0, [r4, #104]	@ 0x68
900288f4:	b2dd      	uxtb	r5, r3
900288f6:	b978      	cbnz	r0, 90028918 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
900288f8:	f104 0014 	add.w	r0, r4, #20
900288fc:	f7ff fd66 	bl	900283cc <_ZN8touchgfx10Rasterizer6lineToEii>
90028900:	9b01      	ldr	r3, [sp, #4]
90028902:	f884 5068 	strb.w	r5, [r4, #104]	@ 0x68
90028906:	6623      	str	r3, [r4, #96]	@ 0x60
90028908:	9b00      	ldr	r3, [sp, #0]
9002890a:	6663      	str	r3, [r4, #100]	@ 0x64
9002890c:	b002      	add	sp, #8
9002890e:	bd70      	pop	{r4, r5, r6, pc}
90028910:	2001      	movs	r0, #1
90028912:	e7e5      	b.n	900288e0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
90028914:	2304      	movs	r3, #4
90028916:	e7ea      	b.n	900288ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
90028918:	b113      	cbz	r3, 90028920 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
9002891a:	ea10 0305 	ands.w	r3, r0, r5
9002891e:	d11c      	bne.n	9002895a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
90028920:	f894 305c 	ldrb.w	r3, [r4, #92]	@ 0x5c
90028924:	f104 0614 	add.w	r6, r4, #20
90028928:	e9d4 1218 	ldrd	r1, r2, [r4, #96]	@ 0x60
9002892c:	b98b      	cbnz	r3, 90028952 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
9002892e:	f884 0069 	strb.w	r0, [r4, #105]	@ 0x69
90028932:	e9d4 3006 	ldrd	r3, r0, [r4, #24]
90028936:	4298      	cmp	r0, r3
90028938:	d802      	bhi.n	90028940 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
9002893a:	4630      	mov	r0, r6
9002893c:	f7eb fdb8 	bl	900144b0 <_ZN8touchgfx7Outline6moveToEii>
90028940:	2301      	movs	r3, #1
90028942:	f884 305c 	strb.w	r3, [r4, #92]	@ 0x5c
90028946:	f884 305d 	strb.w	r3, [r4, #93]	@ 0x5d
9002894a:	4630      	mov	r0, r6
9002894c:	e9dd 2100 	ldrd	r2, r1, [sp]
90028950:	e7d4      	b.n	900288fc <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
90028952:	4630      	mov	r0, r6
90028954:	f7ff fd3a 	bl	900283cc <_ZN8touchgfx10Rasterizer6lineToEii>
90028958:	e7f7      	b.n	9002894a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
9002895a:	461d      	mov	r5, r3
9002895c:	e7d0      	b.n	90028900 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

90028960 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>:
90028960:	b538      	push	{r3, r4, r5, lr}
90028962:	ed2d 8b10 	vpush	{d8-d15}
90028966:	eef6 ba00 	vmov.f32	s23, #96	@ 0x3f000000  0.5
9002896a:	4605      	mov	r5, r0
9002896c:	eeb0 ca40 	vmov.f32	s24, s0
90028970:	460c      	mov	r4, r1
90028972:	eef0 ca60 	vmov.f32	s25, s1
90028976:	ed9f ba57 	vldr	s22, [pc, #348]	@ 90028ad4 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x174>
9002897a:	eeb0 da41 	vmov.f32	s26, s2
9002897e:	eef0 da61 	vmov.f32	s27, s3
90028982:	eeb0 ea42 	vmov.f32	s28, s4
90028986:	eef0 ea62 	vmov.f32	s29, s5
9002898a:	eef0 aa6b 	vmov.f32	s21, s23
9002898e:	2c08      	cmp	r4, #8
90028990:	d86e      	bhi.n	90028a70 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x110>
90028992:	ee7e 6a4c 	vsub.f32	s13, s28, s24
90028996:	ee7d 7aee 	vsub.f32	s15, s27, s29
9002899a:	ee3d 6a4e 	vsub.f32	s12, s26, s28
9002899e:	ee3e 7aec 	vsub.f32	s14, s29, s25
900289a2:	ee66 7ae7 	vnmul.f32	s15, s13, s15
900289a6:	ee3c fa0d 	vadd.f32	s30, s24, s26
900289aa:	ee7c faad 	vadd.f32	s31, s25, s27
900289ae:	eee6 7a07 	vfma.f32	s15, s12, s14
900289b2:	ee7d 9a0e 	vadd.f32	s19, s26, s28
900289b6:	ee3d aaae 	vadd.f32	s20, s27, s29
900289ba:	ee2f fa2b 	vmul.f32	s30, s30, s23
900289be:	ee6f faab 	vmul.f32	s31, s31, s23
900289c2:	ee69 9aab 	vmul.f32	s19, s19, s23
900289c6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
900289ca:	ee2a aa2b 	vmul.f32	s20, s20, s23
900289ce:	ee7f 8a29 	vadd.f32	s17, s30, s19
900289d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900289d6:	ee3f 9a8a 	vadd.f32	s18, s31, s20
900289da:	ee68 8aab 	vmul.f32	s17, s17, s23
900289de:	bf48      	it	mi
900289e0:	eef1 7a67 	vnegmi.f32	s15, s15
900289e4:	ee29 9a2b 	vmul.f32	s18, s18, s23
900289e8:	eeb5 6a00 	vmov.f32	s12, #80	@ 0x3e800000  0.250
900289ec:	eef4 7acb 	vcmpe.f32	s15, s22
900289f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900289f4:	dd3f      	ble.n	90028a76 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x116>
900289f6:	ee27 7a07 	vmul.f32	s14, s14, s14
900289fa:	ee67 7aa7 	vmul.f32	s15, s15, s15
900289fe:	eea6 7aa6 	vfma.f32	s14, s13, s13
90028a02:	ee27 7a06 	vmul.f32	s14, s14, s12
90028a06:	eef4 7ac7 	vcmpe.f32	s15, s14
90028a0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028a0e:	d847      	bhi.n	90028aa0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
90028a10:	ee7e 0a4d 	vsub.f32	s1, s28, s26
90028a14:	ee3e 0aed 	vsub.f32	s0, s29, s27
90028a18:	f000 fa57 	bl	90028eca <atan2f>
90028a1c:	eeb0 8a40 	vmov.f32	s16, s0
90028a20:	ee7d 0a4c 	vsub.f32	s1, s26, s24
90028a24:	ee3d 0aec 	vsub.f32	s0, s27, s25
90028a28:	f000 fa4f 	bl	90028eca <atan2f>
90028a2c:	ee38 0a40 	vsub.f32	s0, s16, s0
90028a30:	eddf 7a29 	vldr	s15, [pc, #164]	@ 90028ad8 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x178>
90028a34:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90028a38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028a3c:	bf48      	it	mi
90028a3e:	eeb1 0a40 	vnegmi.f32	s0, s0
90028a42:	eeb4 0ae7 	vcmpe.f32	s0, s15
90028a46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028a4a:	bfa4      	itt	ge
90028a4c:	eddf 7a23 	vldrge	s15, [pc, #140]	@ 90028adc <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x17c>
90028a50:	ee37 0ac0 	vsubge.f32	s0, s15, s0
90028a54:	eddf 7a22 	vldr	s15, [pc, #136]	@ 90028ae0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x180>
90028a58:	eeb4 0ae7 	vcmpe.f32	s0, s15
90028a5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028a60:	d51e      	bpl.n	90028aa0 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x140>
90028a62:	eef0 0a49 	vmov.f32	s1, s18
90028a66:	4628      	mov	r0, r5
90028a68:	eeb0 0a68 	vmov.f32	s0, s17
90028a6c:	f7e9 fce8 	bl	90012440 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90028a70:	ecbd 8b10 	vpop	{d8-d15}
90028a74:	bd38      	pop	{r3, r4, r5, pc}
90028a76:	ee7c 7a0e 	vadd.f32	s15, s24, s28
90028a7a:	eeb0 7a68 	vmov.f32	s14, s17
90028a7e:	eef0 6a49 	vmov.f32	s13, s18
90028a82:	eea7 7aea 	vfms.f32	s14, s15, s21
90028a86:	ee7c 7aae 	vadd.f32	s15, s25, s29
90028a8a:	eee7 6aea 	vfms.f32	s13, s15, s21
90028a8e:	ee66 7aa6 	vmul.f32	s15, s13, s13
90028a92:	eee7 7a07 	vfma.f32	s15, s14, s14
90028a96:	eef4 7ac6 	vcmpe.f32	s15, s12
90028a9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028a9e:	d9e0      	bls.n	90028a62 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x102>
90028aa0:	3401      	adds	r4, #1
90028aa2:	eef0 0a6c 	vmov.f32	s1, s25
90028aa6:	eeb0 0a4c 	vmov.f32	s0, s24
90028aaa:	4628      	mov	r0, r5
90028aac:	4621      	mov	r1, r4
90028aae:	eef0 2a49 	vmov.f32	s5, s18
90028ab2:	eeb0 2a68 	vmov.f32	s4, s17
90028ab6:	eef0 1a6f 	vmov.f32	s3, s31
90028aba:	eeb0 1a4f 	vmov.f32	s2, s30
90028abe:	f7ff ff4f 	bl	90028960 <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj>
90028ac2:	eef0 da4a 	vmov.f32	s27, s20
90028ac6:	eeb0 da69 	vmov.f32	s26, s19
90028aca:	eef0 ca49 	vmov.f32	s25, s18
90028ace:	eeb0 ca68 	vmov.f32	s24, s17
90028ad2:	e75c      	b.n	9002898e <_ZN8touchgfx6Canvas24recursiveQuadraticBezierEffffffj+0x2e>
90028ad4:	2edbe6ff 	.word	0x2edbe6ff
90028ad8:	40490fdb 	.word	0x40490fdb
90028adc:	40c90fdb 	.word	0x40c90fdb
90028ae0:	3dcccccd 	.word	0x3dcccccd

90028ae4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>:
90028ae4:	b530      	push	{r4, r5, lr}
90028ae6:	ed2d 8b10 	vpush	{d8-d15}
90028aea:	eef0 8a40 	vmov.f32	s17, s0
90028aee:	b085      	sub	sp, #20
90028af0:	eef0 9a60 	vmov.f32	s19, s1
90028af4:	4604      	mov	r4, r0
90028af6:	eef0 fa41 	vmov.f32	s31, s2
90028afa:	460d      	mov	r5, r1
90028afc:	eeb0 fa61 	vmov.f32	s30, s3
90028b00:	eef0 ba42 	vmov.f32	s23, s4
90028b04:	eeb0 ca62 	vmov.f32	s24, s5
90028b08:	eef0 aa43 	vmov.f32	s21, s6
90028b0c:	eeb0 ba63 	vmov.f32	s22, s7
90028b10:	2d08      	cmp	r5, #8
90028b12:	f200 8113 	bhi.w	90028d3c <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x258>
90028b16:	eef6 7a00 	vmov.f32	s15, #96	@ 0x3f000000  0.5
90028b1a:	ee3b 6aaa 	vadd.f32	s12, s23, s21
90028b1e:	ee7f 6aab 	vadd.f32	s13, s31, s23
90028b22:	ee38 daaf 	vadd.f32	s26, s17, s31
90028b26:	ee26 6a27 	vmul.f32	s12, s12, s15
90028b2a:	ee7c ca0b 	vadd.f32	s25, s24, s22
90028b2e:	ee2d da27 	vmul.f32	s26, s26, s15
90028b32:	ed8d 6a01 	vstr	s12, [sp, #4]
90028b36:	eea6 6aa7 	vfma.f32	s12, s13, s15
90028b3a:	ee6c caa7 	vmul.f32	s25, s25, s15
90028b3e:	eeb0 ea4d 	vmov.f32	s28, s26
90028b42:	ee79 da8f 	vadd.f32	s27, s19, s30
90028b46:	ee3f 7a0c 	vadd.f32	s14, s30, s24
90028b4a:	eea6 eaa7 	vfma.f32	s28, s13, s15
90028b4e:	ee66 6a27 	vmul.f32	s13, s12, s15
90028b52:	ee6d daa7 	vmul.f32	s27, s27, s15
90028b56:	edcd 6a03 	vstr	s13, [sp, #12]
90028b5a:	eef0 6a6c 	vmov.f32	s13, s25
90028b5e:	eef0 ea6d 	vmov.f32	s29, s27
90028b62:	ee2e ea27 	vmul.f32	s28, s28, s15
90028b66:	eee7 6a27 	vfma.f32	s13, s14, s15
90028b6a:	eee7 ea27 	vfma.f32	s29, s14, s15
90028b6e:	ee26 7aa7 	vmul.f32	s14, s13, s15
90028b72:	ee6e eaa7 	vmul.f32	s29, s29, s15
90028b76:	eef0 6a67 	vmov.f32	s13, s15
90028b7a:	ed8d 7a02 	vstr	s14, [sp, #8]
90028b7e:	ed9d 7a03 	vldr	s14, [sp, #12]
90028b82:	ee3e 9a07 	vadd.f32	s18, s28, s14
90028b86:	ed9d 7a02 	vldr	s14, [sp, #8]
90028b8a:	ee3e aa87 	vadd.f32	s20, s29, s14
90028b8e:	ee29 9a27 	vmul.f32	s18, s18, s15
90028b92:	ee2a aa27 	vmul.f32	s20, s20, s15
90028b96:	2d00      	cmp	r5, #0
90028b98:	f000 810b 	beq.w	90028db2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90028b9c:	ee7a 5ae8 	vsub.f32	s11, s21, s17
90028ba0:	eddf 4a95 	vldr	s9, [pc, #596]	@ 90028df8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
90028ba4:	ee3f 7a4b 	vsub.f32	s14, s30, s22
90028ba8:	ee7b 7a69 	vsub.f32	s15, s22, s19
90028bac:	ee3f 6aea 	vsub.f32	s12, s31, s21
90028bb0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
90028bb4:	ee3b 5aea 	vsub.f32	s10, s23, s21
90028bb8:	eea6 7a27 	vfma.f32	s14, s12, s15
90028bbc:	ee3c 6a4b 	vsub.f32	s12, s24, s22
90028bc0:	ee25 6ac6 	vnmul.f32	s12, s11, s12
90028bc4:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
90028bc8:	eea5 6a27 	vfma.f32	s12, s10, s15
90028bcc:	eeb5 5a00 	vmov.f32	s10, #80	@ 0x3e800000  0.250
90028bd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028bd4:	bf48      	it	mi
90028bd6:	eeb1 7a47 	vnegmi.f32	s14, s14
90028bda:	eeb5 6ac0 	vcmpe.f32	s12, #0.0
90028bde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028be2:	eeb4 7ae4 	vcmpe.f32	s14, s9
90028be6:	bf48      	it	mi
90028be8:	eeb1 6a46 	vnegmi.f32	s12, s12
90028bec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028bf0:	f340 80a8 	ble.w	90028d44 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x260>
90028bf4:	eeb4 6ae4 	vcmpe.f32	s12, s9
90028bf8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028bfc:	dd5a      	ble.n	90028cb4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1d0>
90028bfe:	ee65 5aa5 	vmul.f32	s11, s11, s11
90028c02:	ee37 7a06 	vadd.f32	s14, s14, s12
90028c06:	eee7 5aa7 	vfma.f32	s11, s15, s15
90028c0a:	ee27 7a07 	vmul.f32	s14, s14, s14
90028c0e:	ee65 7a85 	vmul.f32	s15, s11, s10
90028c12:	eeb4 7ae7 	vcmpe.f32	s14, s15
90028c16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028c1a:	f200 80ca 	bhi.w	90028db2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90028c1e:	ee7b 0aef 	vsub.f32	s1, s23, s31
90028c22:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90028c26:	f000 f950 	bl	90028eca <atan2f>
90028c2a:	eeb0 8a40 	vmov.f32	s16, s0
90028c2e:	ee7f 0ae8 	vsub.f32	s1, s31, s17
90028c32:	ee3f 0a69 	vsub.f32	s0, s30, s19
90028c36:	f000 f948 	bl	90028eca <atan2f>
90028c3a:	ee38 fa40 	vsub.f32	s30, s16, s0
90028c3e:	ee7a 0aeb 	vsub.f32	s1, s21, s23
90028c42:	ee3b 0a4c 	vsub.f32	s0, s22, s24
90028c46:	eeb5 fac0 	vcmpe.f32	s30, #0.0
90028c4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028c4e:	bf48      	it	mi
90028c50:	eeb1 fa4f 	vnegmi.f32	s30, s30
90028c54:	f000 f939 	bl	90028eca <atan2f>
90028c58:	ee30 0a48 	vsub.f32	s0, s0, s16
90028c5c:	eddf 7a67 	vldr	s15, [pc, #412]	@ 90028dfc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90028c60:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90028c64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028c68:	eeb4 fae7 	vcmpe.f32	s30, s15
90028c6c:	eddf 7a63 	vldr	s15, [pc, #396]	@ 90028dfc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90028c70:	bf48      	it	mi
90028c72:	eeb1 0a40 	vnegmi.f32	s0, s0
90028c76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028c7a:	eeb4 0ae7 	vcmpe.f32	s0, s15
90028c7e:	eddf 7a60 	vldr	s15, [pc, #384]	@ 90028e00 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
90028c82:	bfa4      	itt	ge
90028c84:	ed9f 7a5f 	vldrge	s14, [pc, #380]	@ 90028e04 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90028c88:	ee37 fa4f 	vsubge.f32	s30, s14, s30
90028c8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028c90:	bfa4      	itt	ge
90028c92:	ed9f 7a5c 	vldrge	s14, [pc, #368]	@ 90028e04 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90028c96:	ee37 0a40 	vsubge.f32	s0, s14, s0
90028c9a:	ee3f 0a00 	vadd.f32	s0, s30, s0
90028c9e:	eeb4 0ae7 	vcmpe.f32	s0, s15
90028ca2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028ca6:	f140 8084 	bpl.w	90028db2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90028caa:	eef0 0a4a 	vmov.f32	s1, s20
90028cae:	eeb0 0a49 	vmov.f32	s0, s18
90028cb2:	e040      	b.n	90028d36 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x252>
90028cb4:	ee67 7aa7 	vmul.f32	s15, s15, s15
90028cb8:	ee27 7a07 	vmul.f32	s14, s14, s14
90028cbc:	eee5 7aa5 	vfma.f32	s15, s11, s11
90028cc0:	ee67 7a85 	vmul.f32	s15, s15, s10
90028cc4:	eeb4 7ae7 	vcmpe.f32	s14, s15
90028cc8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028ccc:	d871      	bhi.n	90028db2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90028cce:	ee7b 0aef 	vsub.f32	s1, s23, s31
90028cd2:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90028cd6:	f000 f8f8 	bl	90028eca <atan2f>
90028cda:	ee7f 0ae8 	vsub.f32	s1, s31, s17
90028cde:	eeb0 8a40 	vmov.f32	s16, s0
90028ce2:	ee3f 0a69 	vsub.f32	s0, s30, s19
90028ce6:	f000 f8f0 	bl	90028eca <atan2f>
90028cea:	ee38 0a40 	vsub.f32	s0, s16, s0
90028cee:	eddf 7a43 	vldr	s15, [pc, #268]	@ 90028dfc <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x318>
90028cf2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
90028cf6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028cfa:	bf48      	it	mi
90028cfc:	eeb1 0a40 	vnegmi.f32	s0, s0
90028d00:	eeb4 0ae7 	vcmpe.f32	s0, s15
90028d04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028d08:	bfa4      	itt	ge
90028d0a:	eddf 7a3e 	vldrge	s15, [pc, #248]	@ 90028e04 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x320>
90028d0e:	ee37 0ac0 	vsubge.f32	s0, s15, s0
90028d12:	eddf 7a3b 	vldr	s15, [pc, #236]	@ 90028e00 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x31c>
90028d16:	eeb4 0ae7 	vcmpe.f32	s0, s15
90028d1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028d1e:	d548      	bpl.n	90028db2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90028d20:	eef0 0a4f 	vmov.f32	s1, s30
90028d24:	4620      	mov	r0, r4
90028d26:	eeb0 0a6f 	vmov.f32	s0, s31
90028d2a:	f7e9 fb89 	bl	90012440 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90028d2e:	eef0 0a4c 	vmov.f32	s1, s24
90028d32:	eeb0 0a6b 	vmov.f32	s0, s23
90028d36:	4620      	mov	r0, r4
90028d38:	f7e9 fb82 	bl	90012440 <_ZN8touchgfx6Canvas6lineToIfEEvT_S2_>
90028d3c:	b005      	add	sp, #20
90028d3e:	ecbd 8b10 	vpop	{d8-d15}
90028d42:	bd30      	pop	{r4, r5, pc}
90028d44:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 90028df8 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x314>
90028d48:	eeb4 6ac7 	vcmpe.f32	s12, s14
90028d4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028d50:	dd19      	ble.n	90028d86 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2a2>
90028d52:	ee67 7aa7 	vmul.f32	s15, s15, s15
90028d56:	ee26 7a06 	vmul.f32	s14, s12, s12
90028d5a:	eee5 7aa5 	vfma.f32	s15, s11, s11
90028d5e:	ee67 7a85 	vmul.f32	s15, s15, s10
90028d62:	eeb4 7ae7 	vcmpe.f32	s14, s15
90028d66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028d6a:	d822      	bhi.n	90028db2 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2ce>
90028d6c:	ee7a 0aeb 	vsub.f32	s1, s21, s23
90028d70:	ee3b 0a4c 	vsub.f32	s0, s22, s24
90028d74:	f000 f8a9 	bl	90028eca <atan2f>
90028d78:	ee7b 0aef 	vsub.f32	s1, s23, s31
90028d7c:	eeb0 8a40 	vmov.f32	s16, s0
90028d80:	ee3c 0a4f 	vsub.f32	s0, s24, s30
90028d84:	e7af      	b.n	90028ce6 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x202>
90028d86:	ee78 7aaa 	vadd.f32	s15, s17, s21
90028d8a:	eeb0 7a49 	vmov.f32	s14, s18
90028d8e:	eeb0 6a4a 	vmov.f32	s12, s20
90028d92:	eea7 7ae6 	vfms.f32	s14, s15, s13
90028d96:	ee79 7a8b 	vadd.f32	s15, s19, s22
90028d9a:	eea7 6ae6 	vfms.f32	s12, s15, s13
90028d9e:	ee66 7a06 	vmul.f32	s15, s12, s12
90028da2:	eee7 7a07 	vfma.f32	s15, s14, s14
90028da6:	eef4 7ac5 	vcmpe.f32	s15, s10
90028daa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028dae:	f67f af7c 	bls.w	90028caa <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x1c6>
90028db2:	3501      	adds	r5, #1
90028db4:	eef0 0a69 	vmov.f32	s1, s19
90028db8:	eeb0 0a68 	vmov.f32	s0, s17
90028dbc:	4620      	mov	r0, r4
90028dbe:	4629      	mov	r1, r5
90028dc0:	eef0 3a4a 	vmov.f32	s7, s20
90028dc4:	eeb0 3a49 	vmov.f32	s6, s18
90028dc8:	eef0 2a6e 	vmov.f32	s5, s29
90028dcc:	eeb0 2a4e 	vmov.f32	s4, s28
90028dd0:	eef0 1a6d 	vmov.f32	s3, s27
90028dd4:	eeb0 1a4d 	vmov.f32	s2, s26
90028dd8:	f7ff fe84 	bl	90028ae4 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj>
90028ddc:	eeb0 ca6c 	vmov.f32	s24, s25
90028de0:	eddd ba01 	vldr	s23, [sp, #4]
90028de4:	eef0 9a4a 	vmov.f32	s19, s20
90028de8:	ed9d fa02 	vldr	s30, [sp, #8]
90028dec:	eef0 8a49 	vmov.f32	s17, s18
90028df0:	eddd fa03 	vldr	s31, [sp, #12]
90028df4:	e68c      	b.n	90028b10 <_ZN8touchgfx6Canvas20recursiveCubicBezierEffffffffj+0x2c>
90028df6:	bf00      	nop
90028df8:	2edbe6ff 	.word	0x2edbe6ff
90028dfc:	40490fdb 	.word	0x40490fdb
90028e00:	3dcccccd 	.word	0x3dcccccd
90028e04:	40c90fdb 	.word	0x40c90fdb

90028e08 <_ZN8touchgfx6CanvasD1Ev>:
90028e08:	4b04      	ldr	r3, [pc, #16]	@ (90028e1c <_ZN8touchgfx6CanvasD1Ev+0x14>)
90028e0a:	b510      	push	{r4, lr}
90028e0c:	4604      	mov	r4, r0
90028e0e:	f840 3b14 	str.w	r3, [r0], #20
90028e12:	f7ea fe55 	bl	90013ac0 <_ZN8touchgfx7OutlineD1Ev>
90028e16:	4620      	mov	r0, r4
90028e18:	bd10      	pop	{r4, pc}
90028e1a:	bf00      	nop
90028e1c:	9002d9c4 	.word	0x9002d9c4

90028e20 <_ZN8touchgfx6CanvasD0Ev>:
90028e20:	b510      	push	{r4, lr}
90028e22:	4604      	mov	r4, r0
90028e24:	f7ff fff0 	bl	90028e08 <_ZN8touchgfx6CanvasD1Ev>
90028e28:	2174      	movs	r1, #116	@ 0x74
90028e2a:	4620      	mov	r0, r4
90028e2c:	f000 f826 	bl	90028e7c <_ZdlPvj>
90028e30:	4620      	mov	r0, r4
90028e32:	bd10      	pop	{r4, pc}

90028e34 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
90028e34:	790b      	ldrb	r3, [r1, #4]
90028e36:	2b00      	cmp	r3, #0
90028e38:	bf0c      	ite	eq
90028e3a:	2301      	moveq	r3, #1
90028e3c:	2300      	movne	r3, #0
90028e3e:	b570      	push	{r4, r5, r6, lr}
90028e40:	4604      	mov	r4, r0
90028e42:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
90028e46:	460e      	mov	r6, r1
90028e48:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
90028e4c:	d109      	bne.n	90028e62 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
90028e4e:	b14d      	cbz	r5, 90028e64 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
90028e50:	7933      	ldrb	r3, [r6, #4]
90028e52:	2b01      	cmp	r3, #1
90028e54:	d10c      	bne.n	90028e70 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90028e56:	6823      	ldr	r3, [r4, #0]
90028e58:	4620      	mov	r0, r4
90028e5a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
90028e5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
90028e60:	4718      	bx	r3
90028e62:	b12d      	cbz	r5, 90028e70 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
90028e64:	6823      	ldr	r3, [r4, #0]
90028e66:	4620      	mov	r0, r4
90028e68:	695b      	ldr	r3, [r3, #20]
90028e6a:	4798      	blx	r3
90028e6c:	2d00      	cmp	r5, #0
90028e6e:	d1ef      	bne.n	90028e50 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
90028e70:	bd70      	pop	{r4, r5, r6, pc}

90028e72 <__aeabi_atexit>:
90028e72:	460b      	mov	r3, r1
90028e74:	4601      	mov	r1, r0
90028e76:	4618      	mov	r0, r3
90028e78:	f000 bc58 	b.w	9002972c <__cxa_atexit>

90028e7c <_ZdlPvj>:
90028e7c:	f000 b812 	b.w	90028ea4 <_ZdlPv>

90028e80 <__cxa_guard_acquire>:
90028e80:	6802      	ldr	r2, [r0, #0]
90028e82:	07d2      	lsls	r2, r2, #31
90028e84:	4603      	mov	r3, r0
90028e86:	d405      	bmi.n	90028e94 <__cxa_guard_acquire+0x14>
90028e88:	7842      	ldrb	r2, [r0, #1]
90028e8a:	b102      	cbz	r2, 90028e8e <__cxa_guard_acquire+0xe>
90028e8c:	deff      	udf	#255	@ 0xff
90028e8e:	2001      	movs	r0, #1
90028e90:	7058      	strb	r0, [r3, #1]
90028e92:	4770      	bx	lr
90028e94:	2000      	movs	r0, #0
90028e96:	4770      	bx	lr

90028e98 <__cxa_guard_release>:
90028e98:	2301      	movs	r3, #1
90028e9a:	6003      	str	r3, [r0, #0]
90028e9c:	4770      	bx	lr

90028e9e <__cxa_pure_virtual>:
90028e9e:	b508      	push	{r3, lr}
90028ea0:	f000 f80e 	bl	90028ec0 <_ZSt9terminatev>

90028ea4 <_ZdlPv>:
90028ea4:	f000 bb8c 	b.w	900295c0 <free>

90028ea8 <_ZN10__cxxabiv111__terminateEPFvvE>:
90028ea8:	b508      	push	{r3, lr}
90028eaa:	4780      	blx	r0
90028eac:	f000 fb55 	bl	9002955a <abort>

90028eb0 <_ZSt13get_terminatev>:
90028eb0:	4b02      	ldr	r3, [pc, #8]	@ (90028ebc <_ZSt13get_terminatev+0xc>)
90028eb2:	6818      	ldr	r0, [r3, #0]
90028eb4:	f3bf 8f5b 	dmb	ish
90028eb8:	4770      	bx	lr
90028eba:	bf00      	nop
90028ebc:	24000104 	.word	0x24000104

90028ec0 <_ZSt9terminatev>:
90028ec0:	b508      	push	{r3, lr}
90028ec2:	f7ff fff5 	bl	90028eb0 <_ZSt13get_terminatev>
90028ec6:	f7ff ffef 	bl	90028ea8 <_ZN10__cxxabiv111__terminateEPFvvE>

90028eca <atan2f>:
90028eca:	f000 b9cd 	b.w	90029268 <__ieee754_atan2f>
	...

90028ed0 <sqrtf>:
90028ed0:	b508      	push	{r3, lr}
90028ed2:	ed2d 8b02 	vpush	{d8}
90028ed6:	eeb0 8a40 	vmov.f32	s16, s0
90028eda:	f000 f9c2 	bl	90029262 <__ieee754_sqrtf>
90028ede:	eeb4 8a48 	vcmp.f32	s16, s16
90028ee2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028ee6:	d60c      	bvs.n	90028f02 <sqrtf+0x32>
90028ee8:	eddf 8a07 	vldr	s17, [pc, #28]	@ 90028f08 <sqrtf+0x38>
90028eec:	eeb4 8ae8 	vcmpe.f32	s16, s17
90028ef0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90028ef4:	d505      	bpl.n	90028f02 <sqrtf+0x32>
90028ef6:	f000 fe87 	bl	90029c08 <__errno>
90028efa:	ee88 0aa8 	vdiv.f32	s0, s17, s17
90028efe:	2321      	movs	r3, #33	@ 0x21
90028f00:	6003      	str	r3, [r0, #0]
90028f02:	ecbd 8b02 	vpop	{d8}
90028f06:	bd08      	pop	{r3, pc}
90028f08:	00000000 	.word	0x00000000

90028f0c <sinf_poly>:
90028f0c:	07cb      	lsls	r3, r1, #31
90028f0e:	d412      	bmi.n	90028f36 <sinf_poly+0x2a>
90028f10:	ee21 5b00 	vmul.f64	d5, d1, d0
90028f14:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
90028f18:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
90028f1c:	eea6 7b01 	vfma.f64	d7, d6, d1
90028f20:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
90028f24:	ee21 1b05 	vmul.f64	d1, d1, d5
90028f28:	eea6 0b05 	vfma.f64	d0, d6, d5
90028f2c:	eea7 0b01 	vfma.f64	d0, d7, d1
90028f30:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
90028f34:	4770      	bx	lr
90028f36:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
90028f3a:	ee21 5b01 	vmul.f64	d5, d1, d1
90028f3e:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
90028f42:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
90028f46:	eea1 7b06 	vfma.f64	d7, d1, d6
90028f4a:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
90028f4e:	eea1 0b06 	vfma.f64	d0, d1, d6
90028f52:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
90028f56:	ee21 1b05 	vmul.f64	d1, d1, d5
90028f5a:	eea5 0b06 	vfma.f64	d0, d5, d6
90028f5e:	e7e5      	b.n	90028f2c <sinf_poly+0x20>

90028f60 <sinf>:
90028f60:	b537      	push	{r0, r1, r2, r4, r5, lr}
90028f62:	ee10 4a10 	vmov	r4, s0
90028f66:	f3c4 530a 	ubfx	r3, r4, #20, #11
90028f6a:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
90028f6e:	eeb7 6ac0 	vcvt.f64.f32	d6, s0
90028f72:	eef0 7a40 	vmov.f32	s15, s0
90028f76:	d218      	bcs.n	90028faa <sinf+0x4a>
90028f78:	ee26 1b06 	vmul.f64	d1, d6, d6
90028f7c:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
90028f80:	d20a      	bcs.n	90028f98 <sinf+0x38>
90028f82:	f014 4fff 	tst.w	r4, #2139095040	@ 0x7f800000
90028f86:	d103      	bne.n	90028f90 <sinf+0x30>
90028f88:	eeb7 1bc1 	vcvt.f32.f64	s2, d1
90028f8c:	ed8d 1a01 	vstr	s2, [sp, #4]
90028f90:	eeb0 0a67 	vmov.f32	s0, s15
90028f94:	b003      	add	sp, #12
90028f96:	bd30      	pop	{r4, r5, pc}
90028f98:	483b      	ldr	r0, [pc, #236]	@ (90029088 <sinf+0x128>)
90028f9a:	eeb0 0b46 	vmov.f64	d0, d6
90028f9e:	2100      	movs	r1, #0
90028fa0:	b003      	add	sp, #12
90028fa2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
90028fa6:	f7ff bfb1 	b.w	90028f0c <sinf_poly>
90028faa:	f240 422e 	movw	r2, #1070	@ 0x42e
90028fae:	4293      	cmp	r3, r2
90028fb0:	d824      	bhi.n	90028ffc <sinf+0x9c>
90028fb2:	4b35      	ldr	r3, [pc, #212]	@ (90029088 <sinf+0x128>)
90028fb4:	ed93 7b08 	vldr	d7, [r3, #32]
90028fb8:	ee26 7b07 	vmul.f64	d7, d6, d7
90028fbc:	eefd 7bc7 	vcvt.s32.f64	s15, d7
90028fc0:	f103 0070 	add.w	r0, r3, #112	@ 0x70
90028fc4:	ee17 1a90 	vmov	r1, s15
90028fc8:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
90028fcc:	1609      	asrs	r1, r1, #24
90028fce:	ee07 1a90 	vmov	s15, r1
90028fd2:	f001 0203 	and.w	r2, r1, #3
90028fd6:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
90028fda:	eeb8 5be7 	vcvt.f64.s32	d5, s15
90028fde:	ed92 0b00 	vldr	d0, [r2]
90028fe2:	ed93 7b0a 	vldr	d7, [r3, #40]	@ 0x28
90028fe6:	f011 0f02 	tst.w	r1, #2
90028fea:	eea5 6b47 	vfms.f64	d6, d5, d7
90028fee:	bf08      	it	eq
90028ff0:	4618      	moveq	r0, r3
90028ff2:	ee26 1b06 	vmul.f64	d1, d6, d6
90028ff6:	ee20 0b06 	vmul.f64	d0, d0, d6
90028ffa:	e7d1      	b.n	90028fa0 <sinf+0x40>
90028ffc:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
90029000:	d237      	bcs.n	90029072 <sinf+0x112>
90029002:	4922      	ldr	r1, [pc, #136]	@ (9002908c <sinf+0x12c>)
90029004:	f3c4 6083 	ubfx	r0, r4, #26, #4
90029008:	eb01 0280 	add.w	r2, r1, r0, lsl #2
9002900c:	f3c4 0316 	ubfx	r3, r4, #0, #23
90029010:	f3c4 55c2 	ubfx	r5, r4, #23, #3
90029014:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
90029018:	6a10      	ldr	r0, [r2, #32]
9002901a:	6912      	ldr	r2, [r2, #16]
9002901c:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
90029020:	40ab      	lsls	r3, r5
90029022:	fba0 5003 	umull	r5, r0, r0, r3
90029026:	4359      	muls	r1, r3
90029028:	fbe3 0102 	umlal	r0, r1, r3, r2
9002902c:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
90029030:	0f9d      	lsrs	r5, r3, #30
90029032:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
90029036:	1ac9      	subs	r1, r1, r3
90029038:	f7d7 fb30 	bl	9000069c <__aeabi_l2d>
9002903c:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
90029040:	4b11      	ldr	r3, [pc, #68]	@ (90029088 <sinf+0x128>)
90029042:	f004 0203 	and.w	r2, r4, #3
90029046:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002904a:	ed9f 6b0d 	vldr	d6, [pc, #52]	@ 90029080 <sinf+0x120>
9002904e:	ed92 0b00 	vldr	d0, [r2]
90029052:	ec41 0b17 	vmov	d7, r0, r1
90029056:	f014 0f02 	tst.w	r4, #2
9002905a:	ee27 7b06 	vmul.f64	d7, d7, d6
9002905e:	f103 0070 	add.w	r0, r3, #112	@ 0x70
90029062:	4629      	mov	r1, r5
90029064:	bf08      	it	eq
90029066:	4618      	moveq	r0, r3
90029068:	ee27 1b07 	vmul.f64	d1, d7, d7
9002906c:	ee20 0b07 	vmul.f64	d0, d0, d7
90029070:	e796      	b.n	90028fa0 <sinf+0x40>
90029072:	b003      	add	sp, #12
90029074:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
90029078:	f000 b8e4 	b.w	90029244 <__math_invalidf>
9002907c:	f3af 8000 	nop.w
90029080:	54442d18 	.word	0x54442d18
90029084:	3c1921fb 	.word	0x3c1921fb
90029088:	9002da30 	.word	0x9002da30
9002908c:	9002d9d0 	.word	0x9002d9d0

90029090 <sinf_poly>:
90029090:	07cb      	lsls	r3, r1, #31
90029092:	d412      	bmi.n	900290ba <sinf_poly+0x2a>
90029094:	ee21 5b00 	vmul.f64	d5, d1, d0
90029098:	ed90 6b1a 	vldr	d6, [r0, #104]	@ 0x68
9002909c:	ed90 7b18 	vldr	d7, [r0, #96]	@ 0x60
900290a0:	eea6 7b01 	vfma.f64	d7, d6, d1
900290a4:	ed90 6b16 	vldr	d6, [r0, #88]	@ 0x58
900290a8:	ee21 1b05 	vmul.f64	d1, d1, d5
900290ac:	eea6 0b05 	vfma.f64	d0, d6, d5
900290b0:	eea7 0b01 	vfma.f64	d0, d7, d1
900290b4:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
900290b8:	4770      	bx	lr
900290ba:	ed90 6b14 	vldr	d6, [r0, #80]	@ 0x50
900290be:	ee21 5b01 	vmul.f64	d5, d1, d1
900290c2:	ed90 7b12 	vldr	d7, [r0, #72]	@ 0x48
900290c6:	ed90 0b0c 	vldr	d0, [r0, #48]	@ 0x30
900290ca:	eea1 7b06 	vfma.f64	d7, d1, d6
900290ce:	ed90 6b0e 	vldr	d6, [r0, #56]	@ 0x38
900290d2:	eea1 0b06 	vfma.f64	d0, d1, d6
900290d6:	ed90 6b10 	vldr	d6, [r0, #64]	@ 0x40
900290da:	ee21 1b05 	vmul.f64	d1, d1, d5
900290de:	eea5 0b06 	vfma.f64	d0, d5, d6
900290e2:	e7e5      	b.n	900290b0 <sinf_poly+0x20>
900290e4:	0000      	movs	r0, r0
	...

900290e8 <cosf>:
900290e8:	b538      	push	{r3, r4, r5, lr}
900290ea:	ee10 4a10 	vmov	r4, s0
900290ee:	f3c4 530a 	ubfx	r3, r4, #20, #11
900290f2:	f5b3 7f7d 	cmp.w	r3, #1012	@ 0x3f4
900290f6:	eeb7 7ac0 	vcvt.f64.f32	d7, s0
900290fa:	d21f      	bcs.n	9002913c <cosf+0x54>
900290fc:	ee27 7b07 	vmul.f64	d7, d7, d7
90029100:	f5b3 7f66 	cmp.w	r3, #920	@ 0x398
90029104:	f0c0 8082 	bcc.w	9002920c <cosf+0x124>
90029108:	ee27 4b07 	vmul.f64	d4, d7, d7
9002910c:	4b44      	ldr	r3, [pc, #272]	@ (90029220 <cosf+0x138>)
9002910e:	ed93 5b14 	vldr	d5, [r3, #80]	@ 0x50
90029112:	ed93 6b12 	vldr	d6, [r3, #72]	@ 0x48
90029116:	ed93 0b0c 	vldr	d0, [r3, #48]	@ 0x30
9002911a:	eea7 6b05 	vfma.f64	d6, d7, d5
9002911e:	ed93 5b0e 	vldr	d5, [r3, #56]	@ 0x38
90029122:	eea7 0b05 	vfma.f64	d0, d7, d5
90029126:	ed93 5b10 	vldr	d5, [r3, #64]	@ 0x40
9002912a:	ee27 7b04 	vmul.f64	d7, d7, d4
9002912e:	eea4 0b05 	vfma.f64	d0, d4, d5
90029132:	eea6 0b07 	vfma.f64	d0, d6, d7
90029136:	eeb7 0bc0 	vcvt.f32.f64	s0, d0
9002913a:	bd38      	pop	{r3, r4, r5, pc}
9002913c:	f240 422e 	movw	r2, #1070	@ 0x42e
90029140:	4293      	cmp	r3, r2
90029142:	d829      	bhi.n	90029198 <cosf+0xb0>
90029144:	4b36      	ldr	r3, [pc, #216]	@ (90029220 <cosf+0x138>)
90029146:	ed93 6b08 	vldr	d6, [r3, #32]
9002914a:	ee27 6b06 	vmul.f64	d6, d7, d6
9002914e:	eefd 6bc6 	vcvt.s32.f64	s13, d6
90029152:	f103 0070 	add.w	r0, r3, #112	@ 0x70
90029156:	ee16 1a90 	vmov	r1, s13
9002915a:	f501 0100 	add.w	r1, r1, #8388608	@ 0x800000
9002915e:	1609      	asrs	r1, r1, #24
90029160:	ee06 1a90 	vmov	s13, r1
90029164:	f001 0203 	and.w	r2, r1, #3
90029168:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
9002916c:	eeb8 5be6 	vcvt.f64.s32	d5, s13
90029170:	ed92 0b00 	vldr	d0, [r2]
90029174:	ed93 6b0a 	vldr	d6, [r3, #40]	@ 0x28
90029178:	f011 0f02 	tst.w	r1, #2
9002917c:	f081 0101 	eor.w	r1, r1, #1
90029180:	eea5 7b46 	vfms.f64	d7, d5, d6
90029184:	bf08      	it	eq
90029186:	4618      	moveq	r0, r3
90029188:	ee27 1b07 	vmul.f64	d1, d7, d7
9002918c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90029190:	ee20 0b07 	vmul.f64	d0, d0, d7
90029194:	f7ff bf7c 	b.w	90029090 <sinf_poly>
90029198:	f5b3 6fff 	cmp.w	r3, #2040	@ 0x7f8
9002919c:	d232      	bcs.n	90029204 <cosf+0x11c>
9002919e:	4921      	ldr	r1, [pc, #132]	@ (90029224 <cosf+0x13c>)
900291a0:	f3c4 6083 	ubfx	r0, r4, #26, #4
900291a4:	eb01 0280 	add.w	r2, r1, r0, lsl #2
900291a8:	f3c4 0316 	ubfx	r3, r4, #0, #23
900291ac:	f3c4 55c2 	ubfx	r5, r4, #23, #3
900291b0:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
900291b4:	6a10      	ldr	r0, [r2, #32]
900291b6:	6912      	ldr	r2, [r2, #16]
900291b8:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
900291bc:	40ab      	lsls	r3, r5
900291be:	fba0 5003 	umull	r5, r0, r0, r3
900291c2:	4359      	muls	r1, r3
900291c4:	fbe3 0102 	umlal	r0, r1, r3, r2
900291c8:	f101 5300 	add.w	r3, r1, #536870912	@ 0x20000000
900291cc:	0f9d      	lsrs	r5, r3, #30
900291ce:	f003 4340 	and.w	r3, r3, #3221225472	@ 0xc0000000
900291d2:	1ac9      	subs	r1, r1, r3
900291d4:	f7d7 fa62 	bl	9000069c <__aeabi_l2d>
900291d8:	eb05 74d4 	add.w	r4, r5, r4, lsr #31
900291dc:	4b10      	ldr	r3, [pc, #64]	@ (90029220 <cosf+0x138>)
900291de:	ed9f 6b0e 	vldr	d6, [pc, #56]	@ 90029218 <cosf+0x130>
900291e2:	ec41 0b17 	vmov	d7, r0, r1
900291e6:	f004 0203 	and.w	r2, r4, #3
900291ea:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
900291ee:	ed92 0b00 	vldr	d0, [r2]
900291f2:	ee27 7b06 	vmul.f64	d7, d7, d6
900291f6:	f103 0070 	add.w	r0, r3, #112	@ 0x70
900291fa:	f014 0f02 	tst.w	r4, #2
900291fe:	f085 0101 	eor.w	r1, r5, #1
90029202:	e7bf      	b.n	90029184 <cosf+0x9c>
90029204:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90029208:	f000 b81c 	b.w	90029244 <__math_invalidf>
9002920c:	eeb7 0a00 	vmov.f32	s0, #112	@ 0x3f800000  1.0
90029210:	e793      	b.n	9002913a <cosf+0x52>
90029212:	bf00      	nop
90029214:	f3af 8000 	nop.w
90029218:	54442d18 	.word	0x54442d18
9002921c:	3c1921fb 	.word	0x3c1921fb
90029220:	9002da30 	.word	0x9002da30
90029224:	9002d9d0 	.word	0x9002d9d0

90029228 <with_errnof>:
90029228:	b510      	push	{r4, lr}
9002922a:	ed2d 8b02 	vpush	{d8}
9002922e:	eeb0 8a40 	vmov.f32	s16, s0
90029232:	4604      	mov	r4, r0
90029234:	f000 fce8 	bl	90029c08 <__errno>
90029238:	eeb0 0a48 	vmov.f32	s0, s16
9002923c:	ecbd 8b02 	vpop	{d8}
90029240:	6004      	str	r4, [r0, #0]
90029242:	bd10      	pop	{r4, pc}

90029244 <__math_invalidf>:
90029244:	eef0 7a40 	vmov.f32	s15, s0
90029248:	ee30 7a40 	vsub.f32	s14, s0, s0
9002924c:	eef4 7a67 	vcmp.f32	s15, s15
90029250:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
90029254:	ee87 0a07 	vdiv.f32	s0, s14, s14
90029258:	d602      	bvs.n	90029260 <__math_invalidf+0x1c>
9002925a:	2021      	movs	r0, #33	@ 0x21
9002925c:	f7ff bfe4 	b.w	90029228 <with_errnof>
90029260:	4770      	bx	lr

90029262 <__ieee754_sqrtf>:
90029262:	eeb1 0ac0 	vsqrt.f32	s0, s0
90029266:	4770      	bx	lr

90029268 <__ieee754_atan2f>:
90029268:	ee10 2a90 	vmov	r2, s1
9002926c:	f022 4100 	bic.w	r1, r2, #2147483648	@ 0x80000000
90029270:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
90029274:	b510      	push	{r4, lr}
90029276:	eef0 7a40 	vmov.f32	s15, s0
9002927a:	d806      	bhi.n	9002928a <__ieee754_atan2f+0x22>
9002927c:	ee10 0a10 	vmov	r0, s0
90029280:	f020 4300 	bic.w	r3, r0, #2147483648	@ 0x80000000
90029284:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
90029288:	d904      	bls.n	90029294 <__ieee754_atan2f+0x2c>
9002928a:	ee77 7aa0 	vadd.f32	s15, s15, s1
9002928e:	eeb0 0a67 	vmov.f32	s0, s15
90029292:	bd10      	pop	{r4, pc}
90029294:	f1b2 5f7e 	cmp.w	r2, #1065353216	@ 0x3f800000
90029298:	d103      	bne.n	900292a2 <__ieee754_atan2f+0x3a>
9002929a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
9002929e:	f000 b881 	b.w	900293a4 <atanf>
900292a2:	1794      	asrs	r4, r2, #30
900292a4:	f004 0402 	and.w	r4, r4, #2
900292a8:	ea44 74d0 	orr.w	r4, r4, r0, lsr #31
900292ac:	b93b      	cbnz	r3, 900292be <__ieee754_atan2f+0x56>
900292ae:	2c02      	cmp	r4, #2
900292b0:	d05c      	beq.n	9002936c <__ieee754_atan2f+0x104>
900292b2:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 90029380 <__ieee754_atan2f+0x118>
900292b6:	2c03      	cmp	r4, #3
900292b8:	fe47 7a00 	vseleq.f32	s15, s14, s0
900292bc:	e7e7      	b.n	9002928e <__ieee754_atan2f+0x26>
900292be:	b939      	cbnz	r1, 900292d0 <__ieee754_atan2f+0x68>
900292c0:	eddf 7a30 	vldr	s15, [pc, #192]	@ 90029384 <__ieee754_atan2f+0x11c>
900292c4:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 90029388 <__ieee754_atan2f+0x120>
900292c8:	2800      	cmp	r0, #0
900292ca:	fe67 7a27 	vselge.f32	s15, s14, s15
900292ce:	e7de      	b.n	9002928e <__ieee754_atan2f+0x26>
900292d0:	f1b1 4fff 	cmp.w	r1, #2139095040	@ 0x7f800000
900292d4:	d110      	bne.n	900292f8 <__ieee754_atan2f+0x90>
900292d6:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
900292da:	f104 34ff 	add.w	r4, r4, #4294967295
900292de:	d107      	bne.n	900292f0 <__ieee754_atan2f+0x88>
900292e0:	2c02      	cmp	r4, #2
900292e2:	d846      	bhi.n	90029372 <__ieee754_atan2f+0x10a>
900292e4:	4b29      	ldr	r3, [pc, #164]	@ (9002938c <__ieee754_atan2f+0x124>)
900292e6:	eb03 0384 	add.w	r3, r3, r4, lsl #2
900292ea:	edd3 7a00 	vldr	s15, [r3]
900292ee:	e7ce      	b.n	9002928e <__ieee754_atan2f+0x26>
900292f0:	2c02      	cmp	r4, #2
900292f2:	d841      	bhi.n	90029378 <__ieee754_atan2f+0x110>
900292f4:	4b26      	ldr	r3, [pc, #152]	@ (90029390 <__ieee754_atan2f+0x128>)
900292f6:	e7f6      	b.n	900292e6 <__ieee754_atan2f+0x7e>
900292f8:	f1b3 4fff 	cmp.w	r3, #2139095040	@ 0x7f800000
900292fc:	d0e0      	beq.n	900292c0 <__ieee754_atan2f+0x58>
900292fe:	1a5b      	subs	r3, r3, r1
90029300:	f1b3 5ff4 	cmp.w	r3, #511705088	@ 0x1e800000
90029304:	ea4f 51e3 	mov.w	r1, r3, asr #23
90029308:	da1a      	bge.n	90029340 <__ieee754_atan2f+0xd8>
9002930a:	2a00      	cmp	r2, #0
9002930c:	da01      	bge.n	90029312 <__ieee754_atan2f+0xaa>
9002930e:	313c      	adds	r1, #60	@ 0x3c
90029310:	db19      	blt.n	90029346 <__ieee754_atan2f+0xde>
90029312:	ee87 0aa0 	vdiv.f32	s0, s15, s1
90029316:	f000 f919 	bl	9002954c <fabsf>
9002931a:	f000 f843 	bl	900293a4 <atanf>
9002931e:	eef0 7a40 	vmov.f32	s15, s0
90029322:	2c01      	cmp	r4, #1
90029324:	d012      	beq.n	9002934c <__ieee754_atan2f+0xe4>
90029326:	2c02      	cmp	r4, #2
90029328:	d017      	beq.n	9002935a <__ieee754_atan2f+0xf2>
9002932a:	2c00      	cmp	r4, #0
9002932c:	d0af      	beq.n	9002928e <__ieee754_atan2f+0x26>
9002932e:	ed9f 7a19 	vldr	s14, [pc, #100]	@ 90029394 <__ieee754_atan2f+0x12c>
90029332:	ee77 7a87 	vadd.f32	s15, s15, s14
90029336:	ed9f 7a18 	vldr	s14, [pc, #96]	@ 90029398 <__ieee754_atan2f+0x130>
9002933a:	ee77 7ac7 	vsub.f32	s15, s15, s14
9002933e:	e7a6      	b.n	9002928e <__ieee754_atan2f+0x26>
90029340:	eddf 7a11 	vldr	s15, [pc, #68]	@ 90029388 <__ieee754_atan2f+0x120>
90029344:	e7ed      	b.n	90029322 <__ieee754_atan2f+0xba>
90029346:	eddf 7a15 	vldr	s15, [pc, #84]	@ 9002939c <__ieee754_atan2f+0x134>
9002934a:	e7ea      	b.n	90029322 <__ieee754_atan2f+0xba>
9002934c:	ee17 3a90 	vmov	r3, s15
90029350:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
90029354:	ee07 3a90 	vmov	s15, r3
90029358:	e799      	b.n	9002928e <__ieee754_atan2f+0x26>
9002935a:	ed9f 7a0e 	vldr	s14, [pc, #56]	@ 90029394 <__ieee754_atan2f+0x12c>
9002935e:	ee77 7a87 	vadd.f32	s15, s15, s14
90029362:	ed9f 7a0d 	vldr	s14, [pc, #52]	@ 90029398 <__ieee754_atan2f+0x130>
90029366:	ee77 7a67 	vsub.f32	s15, s14, s15
9002936a:	e790      	b.n	9002928e <__ieee754_atan2f+0x26>
9002936c:	eddf 7a0a 	vldr	s15, [pc, #40]	@ 90029398 <__ieee754_atan2f+0x130>
90029370:	e78d      	b.n	9002928e <__ieee754_atan2f+0x26>
90029372:	eddf 7a0b 	vldr	s15, [pc, #44]	@ 900293a0 <__ieee754_atan2f+0x138>
90029376:	e78a      	b.n	9002928e <__ieee754_atan2f+0x26>
90029378:	eddf 7a08 	vldr	s15, [pc, #32]	@ 9002939c <__ieee754_atan2f+0x134>
9002937c:	e787      	b.n	9002928e <__ieee754_atan2f+0x26>
9002937e:	bf00      	nop
90029380:	c0490fdb 	.word	0xc0490fdb
90029384:	bfc90fdb 	.word	0xbfc90fdb
90029388:	3fc90fdb 	.word	0x3fc90fdb
9002938c:	9002db1c 	.word	0x9002db1c
90029390:	9002db10 	.word	0x9002db10
90029394:	33bbbd2e 	.word	0x33bbbd2e
90029398:	40490fdb 	.word	0x40490fdb
9002939c:	00000000 	.word	0x00000000
900293a0:	3f490fdb 	.word	0x3f490fdb

900293a4 <atanf>:
900293a4:	b538      	push	{r3, r4, r5, lr}
900293a6:	ee10 5a10 	vmov	r5, s0
900293aa:	f025 4400 	bic.w	r4, r5, #2147483648	@ 0x80000000
900293ae:	f1b4 4fa1 	cmp.w	r4, #1350565888	@ 0x50800000
900293b2:	eef0 7a40 	vmov.f32	s15, s0
900293b6:	d30f      	bcc.n	900293d8 <atanf+0x34>
900293b8:	f1b4 4fff 	cmp.w	r4, #2139095040	@ 0x7f800000
900293bc:	d904      	bls.n	900293c8 <atanf+0x24>
900293be:	ee70 7a00 	vadd.f32	s15, s0, s0
900293c2:	eeb0 0a67 	vmov.f32	s0, s15
900293c6:	bd38      	pop	{r3, r4, r5, pc}
900293c8:	eddf 7a4d 	vldr	s15, [pc, #308]	@ 90029500 <atanf+0x15c>
900293cc:	ed9f 7a4d 	vldr	s14, [pc, #308]	@ 90029504 <atanf+0x160>
900293d0:	2d00      	cmp	r5, #0
900293d2:	fe77 7a27 	vselgt.f32	s15, s14, s15
900293d6:	e7f4      	b.n	900293c2 <atanf+0x1e>
900293d8:	4b4b      	ldr	r3, [pc, #300]	@ (90029508 <atanf+0x164>)
900293da:	429c      	cmp	r4, r3
900293dc:	d810      	bhi.n	90029400 <atanf+0x5c>
900293de:	f1b4 5f44 	cmp.w	r4, #822083584	@ 0x31000000
900293e2:	d20a      	bcs.n	900293fa <atanf+0x56>
900293e4:	ed9f 7a49 	vldr	s14, [pc, #292]	@ 9002950c <atanf+0x168>
900293e8:	ee30 7a07 	vadd.f32	s14, s0, s14
900293ec:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
900293f0:	eeb4 7ae6 	vcmpe.f32	s14, s13
900293f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
900293f8:	dce3      	bgt.n	900293c2 <atanf+0x1e>
900293fa:	f04f 33ff 	mov.w	r3, #4294967295
900293fe:	e013      	b.n	90029428 <atanf+0x84>
90029400:	f000 f8a4 	bl	9002954c <fabsf>
90029404:	4b42      	ldr	r3, [pc, #264]	@ (90029510 <atanf+0x16c>)
90029406:	429c      	cmp	r4, r3
90029408:	d84f      	bhi.n	900294aa <atanf+0x106>
9002940a:	f5a3 03d0 	sub.w	r3, r3, #6815744	@ 0x680000
9002940e:	429c      	cmp	r4, r3
90029410:	d841      	bhi.n	90029496 <atanf+0xf2>
90029412:	eef0 7a00 	vmov.f32	s15, #0	@ 0x40000000  2.0
90029416:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
9002941a:	eea0 7a27 	vfma.f32	s14, s0, s15
9002941e:	2300      	movs	r3, #0
90029420:	ee30 0a27 	vadd.f32	s0, s0, s15
90029424:	eec7 7a00 	vdiv.f32	s15, s14, s0
90029428:	1c5a      	adds	r2, r3, #1
9002942a:	ee27 6aa7 	vmul.f32	s12, s15, s15
9002942e:	ed9f 7a39 	vldr	s14, [pc, #228]	@ 90029514 <atanf+0x170>
90029432:	eddf 5a39 	vldr	s11, [pc, #228]	@ 90029518 <atanf+0x174>
90029436:	ed9f 5a39 	vldr	s10, [pc, #228]	@ 9002951c <atanf+0x178>
9002943a:	ee66 6a06 	vmul.f32	s13, s12, s12
9002943e:	eee6 5a87 	vfma.f32	s11, s13, s14
90029442:	ed9f 7a37 	vldr	s14, [pc, #220]	@ 90029520 <atanf+0x17c>
90029446:	eea5 7aa6 	vfma.f32	s14, s11, s13
9002944a:	eddf 5a36 	vldr	s11, [pc, #216]	@ 90029524 <atanf+0x180>
9002944e:	eee7 5a26 	vfma.f32	s11, s14, s13
90029452:	ed9f 7a35 	vldr	s14, [pc, #212]	@ 90029528 <atanf+0x184>
90029456:	eea5 7aa6 	vfma.f32	s14, s11, s13
9002945a:	eddf 5a34 	vldr	s11, [pc, #208]	@ 9002952c <atanf+0x188>
9002945e:	eee7 5a26 	vfma.f32	s11, s14, s13
90029462:	ed9f 7a33 	vldr	s14, [pc, #204]	@ 90029530 <atanf+0x18c>
90029466:	eea6 5a87 	vfma.f32	s10, s13, s14
9002946a:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 90029534 <atanf+0x190>
9002946e:	eea5 7a26 	vfma.f32	s14, s10, s13
90029472:	ed9f 5a31 	vldr	s10, [pc, #196]	@ 90029538 <atanf+0x194>
90029476:	eea7 5a26 	vfma.f32	s10, s14, s13
9002947a:	ed9f 7a30 	vldr	s14, [pc, #192]	@ 9002953c <atanf+0x198>
9002947e:	eea5 7a26 	vfma.f32	s14, s10, s13
90029482:	ee27 7a26 	vmul.f32	s14, s14, s13
90029486:	eea5 7a86 	vfma.f32	s14, s11, s12
9002948a:	ee27 7a87 	vmul.f32	s14, s15, s14
9002948e:	d121      	bne.n	900294d4 <atanf+0x130>
90029490:	ee77 7ac7 	vsub.f32	s15, s15, s14
90029494:	e795      	b.n	900293c2 <atanf+0x1e>
90029496:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
9002949a:	ee30 7a67 	vsub.f32	s14, s0, s15
9002949e:	ee30 0a27 	vadd.f32	s0, s0, s15
900294a2:	2301      	movs	r3, #1
900294a4:	eec7 7a00 	vdiv.f32	s15, s14, s0
900294a8:	e7be      	b.n	90029428 <atanf+0x84>
900294aa:	4b25      	ldr	r3, [pc, #148]	@ (90029540 <atanf+0x19c>)
900294ac:	429c      	cmp	r4, r3
900294ae:	d80b      	bhi.n	900294c8 <atanf+0x124>
900294b0:	eef7 7a08 	vmov.f32	s15, #120	@ 0x3fc00000  1.5
900294b4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
900294b8:	eea0 7a27 	vfma.f32	s14, s0, s15
900294bc:	2302      	movs	r3, #2
900294be:	ee70 6a67 	vsub.f32	s13, s0, s15
900294c2:	eec6 7a87 	vdiv.f32	s15, s13, s14
900294c6:	e7af      	b.n	90029428 <atanf+0x84>
900294c8:	eebf 7a00 	vmov.f32	s14, #240	@ 0xbf800000 -1.0
900294cc:	eec7 7a00 	vdiv.f32	s15, s14, s0
900294d0:	2303      	movs	r3, #3
900294d2:	e7a9      	b.n	90029428 <atanf+0x84>
900294d4:	4a1b      	ldr	r2, [pc, #108]	@ (90029544 <atanf+0x1a0>)
900294d6:	491c      	ldr	r1, [pc, #112]	@ (90029548 <atanf+0x1a4>)
900294d8:	eb02 0283 	add.w	r2, r2, r3, lsl #2
900294dc:	eb01 0383 	add.w	r3, r1, r3, lsl #2
900294e0:	edd3 6a00 	vldr	s13, [r3]
900294e4:	ee37 7a66 	vsub.f32	s14, s14, s13
900294e8:	2d00      	cmp	r5, #0
900294ea:	ee37 7a67 	vsub.f32	s14, s14, s15
900294ee:	edd2 7a00 	vldr	s15, [r2]
900294f2:	ee77 7ac7 	vsub.f32	s15, s15, s14
900294f6:	bfb8      	it	lt
900294f8:	eef1 7a67 	vneglt.f32	s15, s15
900294fc:	e761      	b.n	900293c2 <atanf+0x1e>
900294fe:	bf00      	nop
90029500:	bfc90fdb 	.word	0xbfc90fdb
90029504:	3fc90fdb 	.word	0x3fc90fdb
90029508:	3edfffff 	.word	0x3edfffff
9002950c:	7149f2ca 	.word	0x7149f2ca
90029510:	3f97ffff 	.word	0x3f97ffff
90029514:	3c8569d7 	.word	0x3c8569d7
90029518:	3d4bda59 	.word	0x3d4bda59
9002951c:	bd6ef16b 	.word	0xbd6ef16b
90029520:	3d886b35 	.word	0x3d886b35
90029524:	3dba2e6e 	.word	0x3dba2e6e
90029528:	3e124925 	.word	0x3e124925
9002952c:	3eaaaaab 	.word	0x3eaaaaab
90029530:	bd15a221 	.word	0xbd15a221
90029534:	bd9d8795 	.word	0xbd9d8795
90029538:	bde38e38 	.word	0xbde38e38
9002953c:	be4ccccd 	.word	0xbe4ccccd
90029540:	401bffff 	.word	0x401bffff
90029544:	9002db38 	.word	0x9002db38
90029548:	9002db28 	.word	0x9002db28

9002954c <fabsf>:
9002954c:	ee10 3a10 	vmov	r3, s0
90029550:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
90029554:	ee00 3a10 	vmov	s0, r3
90029558:	4770      	bx	lr

9002955a <abort>:
9002955a:	b508      	push	{r3, lr}
9002955c:	2006      	movs	r0, #6
9002955e:	f000 fae1 	bl	90029b24 <raise>
90029562:	2001      	movs	r0, #1
90029564:	f7da ff76 	bl	90004454 <_exit>

90029568 <__assert_func>:
90029568:	b51f      	push	{r0, r1, r2, r3, r4, lr}
9002956a:	4614      	mov	r4, r2
9002956c:	461a      	mov	r2, r3
9002956e:	4b09      	ldr	r3, [pc, #36]	@ (90029594 <__assert_func+0x2c>)
90029570:	681b      	ldr	r3, [r3, #0]
90029572:	4605      	mov	r5, r0
90029574:	68d8      	ldr	r0, [r3, #12]
90029576:	b14c      	cbz	r4, 9002958c <__assert_func+0x24>
90029578:	4b07      	ldr	r3, [pc, #28]	@ (90029598 <__assert_func+0x30>)
9002957a:	9100      	str	r1, [sp, #0]
9002957c:	e9cd 3401 	strd	r3, r4, [sp, #4]
90029580:	4906      	ldr	r1, [pc, #24]	@ (9002959c <__assert_func+0x34>)
90029582:	462b      	mov	r3, r5
90029584:	f000 f984 	bl	90029890 <fiprintf>
90029588:	f7ff ffe7 	bl	9002955a <abort>
9002958c:	4b04      	ldr	r3, [pc, #16]	@ (900295a0 <__assert_func+0x38>)
9002958e:	461c      	mov	r4, r3
90029590:	e7f3      	b.n	9002957a <__assert_func+0x12>
90029592:	bf00      	nop
90029594:	24000114 	.word	0x24000114
90029598:	9002db48 	.word	0x9002db48
9002959c:	9002db55 	.word	0x9002db55
900295a0:	9002db83 	.word	0x9002db83

900295a4 <atexit>:
900295a4:	2300      	movs	r3, #0
900295a6:	4601      	mov	r1, r0
900295a8:	461a      	mov	r2, r3
900295aa:	4618      	mov	r0, r3
900295ac:	f000 bb68 	b.w	90029c80 <__register_exitproc>

900295b0 <malloc>:
900295b0:	4b02      	ldr	r3, [pc, #8]	@ (900295bc <malloc+0xc>)
900295b2:	4601      	mov	r1, r0
900295b4:	6818      	ldr	r0, [r3, #0]
900295b6:	f000 b82d 	b.w	90029614 <_malloc_r>
900295ba:	bf00      	nop
900295bc:	24000114 	.word	0x24000114

900295c0 <free>:
900295c0:	4b02      	ldr	r3, [pc, #8]	@ (900295cc <free+0xc>)
900295c2:	4601      	mov	r1, r0
900295c4:	6818      	ldr	r0, [r3, #0]
900295c6:	f000 bbb7 	b.w	90029d38 <_free_r>
900295ca:	bf00      	nop
900295cc:	24000114 	.word	0x24000114

900295d0 <sbrk_aligned>:
900295d0:	b570      	push	{r4, r5, r6, lr}
900295d2:	4e0f      	ldr	r6, [pc, #60]	@ (90029610 <sbrk_aligned+0x40>)
900295d4:	460c      	mov	r4, r1
900295d6:	6831      	ldr	r1, [r6, #0]
900295d8:	4605      	mov	r5, r0
900295da:	b911      	cbnz	r1, 900295e2 <sbrk_aligned+0x12>
900295dc:	f000 faf2 	bl	90029bc4 <_sbrk_r>
900295e0:	6030      	str	r0, [r6, #0]
900295e2:	4621      	mov	r1, r4
900295e4:	4628      	mov	r0, r5
900295e6:	f000 faed 	bl	90029bc4 <_sbrk_r>
900295ea:	1c43      	adds	r3, r0, #1
900295ec:	d103      	bne.n	900295f6 <sbrk_aligned+0x26>
900295ee:	f04f 34ff 	mov.w	r4, #4294967295
900295f2:	4620      	mov	r0, r4
900295f4:	bd70      	pop	{r4, r5, r6, pc}
900295f6:	1cc4      	adds	r4, r0, #3
900295f8:	f024 0403 	bic.w	r4, r4, #3
900295fc:	42a0      	cmp	r0, r4
900295fe:	d0f8      	beq.n	900295f2 <sbrk_aligned+0x22>
90029600:	1a21      	subs	r1, r4, r0
90029602:	4628      	mov	r0, r5
90029604:	f000 fade 	bl	90029bc4 <_sbrk_r>
90029608:	3001      	adds	r0, #1
9002960a:	d1f2      	bne.n	900295f2 <sbrk_aligned+0x22>
9002960c:	e7ef      	b.n	900295ee <sbrk_aligned+0x1e>
9002960e:	bf00      	nop
90029610:	240223e8 	.word	0x240223e8

90029614 <_malloc_r>:
90029614:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90029618:	1ccd      	adds	r5, r1, #3
9002961a:	f025 0503 	bic.w	r5, r5, #3
9002961e:	3508      	adds	r5, #8
90029620:	2d0c      	cmp	r5, #12
90029622:	bf38      	it	cc
90029624:	250c      	movcc	r5, #12
90029626:	2d00      	cmp	r5, #0
90029628:	4606      	mov	r6, r0
9002962a:	db01      	blt.n	90029630 <_malloc_r+0x1c>
9002962c:	42a9      	cmp	r1, r5
9002962e:	d904      	bls.n	9002963a <_malloc_r+0x26>
90029630:	230c      	movs	r3, #12
90029632:	6033      	str	r3, [r6, #0]
90029634:	2000      	movs	r0, #0
90029636:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
9002963a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 90029710 <_malloc_r+0xfc>
9002963e:	f000 f869 	bl	90029714 <__malloc_lock>
90029642:	f8d8 3000 	ldr.w	r3, [r8]
90029646:	461c      	mov	r4, r3
90029648:	bb44      	cbnz	r4, 9002969c <_malloc_r+0x88>
9002964a:	4629      	mov	r1, r5
9002964c:	4630      	mov	r0, r6
9002964e:	f7ff ffbf 	bl	900295d0 <sbrk_aligned>
90029652:	1c43      	adds	r3, r0, #1
90029654:	4604      	mov	r4, r0
90029656:	d158      	bne.n	9002970a <_malloc_r+0xf6>
90029658:	f8d8 4000 	ldr.w	r4, [r8]
9002965c:	4627      	mov	r7, r4
9002965e:	2f00      	cmp	r7, #0
90029660:	d143      	bne.n	900296ea <_malloc_r+0xd6>
90029662:	2c00      	cmp	r4, #0
90029664:	d04b      	beq.n	900296fe <_malloc_r+0xea>
90029666:	6823      	ldr	r3, [r4, #0]
90029668:	4639      	mov	r1, r7
9002966a:	4630      	mov	r0, r6
9002966c:	eb04 0903 	add.w	r9, r4, r3
90029670:	f000 faa8 	bl	90029bc4 <_sbrk_r>
90029674:	4581      	cmp	r9, r0
90029676:	d142      	bne.n	900296fe <_malloc_r+0xea>
90029678:	6821      	ldr	r1, [r4, #0]
9002967a:	1a6d      	subs	r5, r5, r1
9002967c:	4629      	mov	r1, r5
9002967e:	4630      	mov	r0, r6
90029680:	f7ff ffa6 	bl	900295d0 <sbrk_aligned>
90029684:	3001      	adds	r0, #1
90029686:	d03a      	beq.n	900296fe <_malloc_r+0xea>
90029688:	6823      	ldr	r3, [r4, #0]
9002968a:	442b      	add	r3, r5
9002968c:	6023      	str	r3, [r4, #0]
9002968e:	f8d8 3000 	ldr.w	r3, [r8]
90029692:	685a      	ldr	r2, [r3, #4]
90029694:	bb62      	cbnz	r2, 900296f0 <_malloc_r+0xdc>
90029696:	f8c8 7000 	str.w	r7, [r8]
9002969a:	e00f      	b.n	900296bc <_malloc_r+0xa8>
9002969c:	6822      	ldr	r2, [r4, #0]
9002969e:	1b52      	subs	r2, r2, r5
900296a0:	d420      	bmi.n	900296e4 <_malloc_r+0xd0>
900296a2:	2a0b      	cmp	r2, #11
900296a4:	d917      	bls.n	900296d6 <_malloc_r+0xc2>
900296a6:	1961      	adds	r1, r4, r5
900296a8:	42a3      	cmp	r3, r4
900296aa:	6025      	str	r5, [r4, #0]
900296ac:	bf18      	it	ne
900296ae:	6059      	strne	r1, [r3, #4]
900296b0:	6863      	ldr	r3, [r4, #4]
900296b2:	bf08      	it	eq
900296b4:	f8c8 1000 	streq.w	r1, [r8]
900296b8:	5162      	str	r2, [r4, r5]
900296ba:	604b      	str	r3, [r1, #4]
900296bc:	4630      	mov	r0, r6
900296be:	f000 f82f 	bl	90029720 <__malloc_unlock>
900296c2:	f104 000b 	add.w	r0, r4, #11
900296c6:	1d23      	adds	r3, r4, #4
900296c8:	f020 0007 	bic.w	r0, r0, #7
900296cc:	1ac2      	subs	r2, r0, r3
900296ce:	bf1c      	itt	ne
900296d0:	1a1b      	subne	r3, r3, r0
900296d2:	50a3      	strne	r3, [r4, r2]
900296d4:	e7af      	b.n	90029636 <_malloc_r+0x22>
900296d6:	6862      	ldr	r2, [r4, #4]
900296d8:	42a3      	cmp	r3, r4
900296da:	bf0c      	ite	eq
900296dc:	f8c8 2000 	streq.w	r2, [r8]
900296e0:	605a      	strne	r2, [r3, #4]
900296e2:	e7eb      	b.n	900296bc <_malloc_r+0xa8>
900296e4:	4623      	mov	r3, r4
900296e6:	6864      	ldr	r4, [r4, #4]
900296e8:	e7ae      	b.n	90029648 <_malloc_r+0x34>
900296ea:	463c      	mov	r4, r7
900296ec:	687f      	ldr	r7, [r7, #4]
900296ee:	e7b6      	b.n	9002965e <_malloc_r+0x4a>
900296f0:	461a      	mov	r2, r3
900296f2:	685b      	ldr	r3, [r3, #4]
900296f4:	42a3      	cmp	r3, r4
900296f6:	d1fb      	bne.n	900296f0 <_malloc_r+0xdc>
900296f8:	2300      	movs	r3, #0
900296fa:	6053      	str	r3, [r2, #4]
900296fc:	e7de      	b.n	900296bc <_malloc_r+0xa8>
900296fe:	230c      	movs	r3, #12
90029700:	6033      	str	r3, [r6, #0]
90029702:	4630      	mov	r0, r6
90029704:	f000 f80c 	bl	90029720 <__malloc_unlock>
90029708:	e794      	b.n	90029634 <_malloc_r+0x20>
9002970a:	6005      	str	r5, [r0, #0]
9002970c:	e7d6      	b.n	900296bc <_malloc_r+0xa8>
9002970e:	bf00      	nop
90029710:	240223ec 	.word	0x240223ec

90029714 <__malloc_lock>:
90029714:	4801      	ldr	r0, [pc, #4]	@ (9002971c <__malloc_lock+0x8>)
90029716:	f000 baa2 	b.w	90029c5e <__retarget_lock_acquire_recursive>
9002971a:	bf00      	nop
9002971c:	24022530 	.word	0x24022530

90029720 <__malloc_unlock>:
90029720:	4801      	ldr	r0, [pc, #4]	@ (90029728 <__malloc_unlock+0x8>)
90029722:	f000 ba9d 	b.w	90029c60 <__retarget_lock_release_recursive>
90029726:	bf00      	nop
90029728:	24022530 	.word	0x24022530

9002972c <__cxa_atexit>:
9002972c:	b510      	push	{r4, lr}
9002972e:	4604      	mov	r4, r0
90029730:	4804      	ldr	r0, [pc, #16]	@ (90029744 <__cxa_atexit+0x18>)
90029732:	4613      	mov	r3, r2
90029734:	b120      	cbz	r0, 90029740 <__cxa_atexit+0x14>
90029736:	460a      	mov	r2, r1
90029738:	2002      	movs	r0, #2
9002973a:	4621      	mov	r1, r4
9002973c:	f000 faa0 	bl	90029c80 <__register_exitproc>
90029740:	bd10      	pop	{r4, pc}
90029742:	bf00      	nop
90029744:	90029c81 	.word	0x90029c81

90029748 <std>:
90029748:	2300      	movs	r3, #0
9002974a:	b510      	push	{r4, lr}
9002974c:	4604      	mov	r4, r0
9002974e:	e9c0 3300 	strd	r3, r3, [r0]
90029752:	e9c0 3304 	strd	r3, r3, [r0, #16]
90029756:	6083      	str	r3, [r0, #8]
90029758:	8181      	strh	r1, [r0, #12]
9002975a:	6643      	str	r3, [r0, #100]	@ 0x64
9002975c:	81c2      	strh	r2, [r0, #14]
9002975e:	6183      	str	r3, [r0, #24]
90029760:	4619      	mov	r1, r3
90029762:	2208      	movs	r2, #8
90029764:	305c      	adds	r0, #92	@ 0x5c
90029766:	f000 f99b 	bl	90029aa0 <memset>
9002976a:	4b0d      	ldr	r3, [pc, #52]	@ (900297a0 <std+0x58>)
9002976c:	6263      	str	r3, [r4, #36]	@ 0x24
9002976e:	4b0d      	ldr	r3, [pc, #52]	@ (900297a4 <std+0x5c>)
90029770:	62a3      	str	r3, [r4, #40]	@ 0x28
90029772:	4b0d      	ldr	r3, [pc, #52]	@ (900297a8 <std+0x60>)
90029774:	62e3      	str	r3, [r4, #44]	@ 0x2c
90029776:	4b0d      	ldr	r3, [pc, #52]	@ (900297ac <std+0x64>)
90029778:	6323      	str	r3, [r4, #48]	@ 0x30
9002977a:	4b0d      	ldr	r3, [pc, #52]	@ (900297b0 <std+0x68>)
9002977c:	6224      	str	r4, [r4, #32]
9002977e:	429c      	cmp	r4, r3
90029780:	d006      	beq.n	90029790 <std+0x48>
90029782:	f103 0268 	add.w	r2, r3, #104	@ 0x68
90029786:	4294      	cmp	r4, r2
90029788:	d002      	beq.n	90029790 <std+0x48>
9002978a:	33d0      	adds	r3, #208	@ 0xd0
9002978c:	429c      	cmp	r4, r3
9002978e:	d105      	bne.n	9002979c <std+0x54>
90029790:	f104 0058 	add.w	r0, r4, #88	@ 0x58
90029794:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90029798:	f000 ba60 	b.w	90029c5c <__retarget_lock_init_recursive>
9002979c:	bd10      	pop	{r4, pc}
9002979e:	bf00      	nop
900297a0:	900298f1 	.word	0x900298f1
900297a4:	90029913 	.word	0x90029913
900297a8:	9002994b 	.word	0x9002994b
900297ac:	9002996f 	.word	0x9002996f
900297b0:	240223f0 	.word	0x240223f0

900297b4 <stdio_exit_handler>:
900297b4:	4a02      	ldr	r2, [pc, #8]	@ (900297c0 <stdio_exit_handler+0xc>)
900297b6:	4903      	ldr	r1, [pc, #12]	@ (900297c4 <stdio_exit_handler+0x10>)
900297b8:	4803      	ldr	r0, [pc, #12]	@ (900297c8 <stdio_exit_handler+0x14>)
900297ba:	f000 b87b 	b.w	900298b4 <_fwalk_sglue>
900297be:	bf00      	nop
900297c0:	24000108 	.word	0x24000108
900297c4:	9002a471 	.word	0x9002a471
900297c8:	24000118 	.word	0x24000118

900297cc <cleanup_stdio>:
900297cc:	6841      	ldr	r1, [r0, #4]
900297ce:	4b0c      	ldr	r3, [pc, #48]	@ (90029800 <cleanup_stdio+0x34>)
900297d0:	4299      	cmp	r1, r3
900297d2:	b510      	push	{r4, lr}
900297d4:	4604      	mov	r4, r0
900297d6:	d001      	beq.n	900297dc <cleanup_stdio+0x10>
900297d8:	f000 fe4a 	bl	9002a470 <_fflush_r>
900297dc:	68a1      	ldr	r1, [r4, #8]
900297de:	4b09      	ldr	r3, [pc, #36]	@ (90029804 <cleanup_stdio+0x38>)
900297e0:	4299      	cmp	r1, r3
900297e2:	d002      	beq.n	900297ea <cleanup_stdio+0x1e>
900297e4:	4620      	mov	r0, r4
900297e6:	f000 fe43 	bl	9002a470 <_fflush_r>
900297ea:	68e1      	ldr	r1, [r4, #12]
900297ec:	4b06      	ldr	r3, [pc, #24]	@ (90029808 <cleanup_stdio+0x3c>)
900297ee:	4299      	cmp	r1, r3
900297f0:	d004      	beq.n	900297fc <cleanup_stdio+0x30>
900297f2:	4620      	mov	r0, r4
900297f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
900297f8:	f000 be3a 	b.w	9002a470 <_fflush_r>
900297fc:	bd10      	pop	{r4, pc}
900297fe:	bf00      	nop
90029800:	240223f0 	.word	0x240223f0
90029804:	24022458 	.word	0x24022458
90029808:	240224c0 	.word	0x240224c0

9002980c <global_stdio_init.part.0>:
9002980c:	b510      	push	{r4, lr}
9002980e:	4b0b      	ldr	r3, [pc, #44]	@ (9002983c <global_stdio_init.part.0+0x30>)
90029810:	4c0b      	ldr	r4, [pc, #44]	@ (90029840 <global_stdio_init.part.0+0x34>)
90029812:	4a0c      	ldr	r2, [pc, #48]	@ (90029844 <global_stdio_init.part.0+0x38>)
90029814:	601a      	str	r2, [r3, #0]
90029816:	4620      	mov	r0, r4
90029818:	2200      	movs	r2, #0
9002981a:	2104      	movs	r1, #4
9002981c:	f7ff ff94 	bl	90029748 <std>
90029820:	f104 0068 	add.w	r0, r4, #104	@ 0x68
90029824:	2201      	movs	r2, #1
90029826:	2109      	movs	r1, #9
90029828:	f7ff ff8e 	bl	90029748 <std>
9002982c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
90029830:	2202      	movs	r2, #2
90029832:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90029836:	2112      	movs	r1, #18
90029838:	f7ff bf86 	b.w	90029748 <std>
9002983c:	24022528 	.word	0x24022528
90029840:	240223f0 	.word	0x240223f0
90029844:	900297b5 	.word	0x900297b5

90029848 <__sfp_lock_acquire>:
90029848:	4801      	ldr	r0, [pc, #4]	@ (90029850 <__sfp_lock_acquire+0x8>)
9002984a:	f000 ba08 	b.w	90029c5e <__retarget_lock_acquire_recursive>
9002984e:	bf00      	nop
90029850:	24022532 	.word	0x24022532

90029854 <__sfp_lock_release>:
90029854:	4801      	ldr	r0, [pc, #4]	@ (9002985c <__sfp_lock_release+0x8>)
90029856:	f000 ba03 	b.w	90029c60 <__retarget_lock_release_recursive>
9002985a:	bf00      	nop
9002985c:	24022532 	.word	0x24022532

90029860 <__sinit>:
90029860:	b510      	push	{r4, lr}
90029862:	4604      	mov	r4, r0
90029864:	f7ff fff0 	bl	90029848 <__sfp_lock_acquire>
90029868:	6a23      	ldr	r3, [r4, #32]
9002986a:	b11b      	cbz	r3, 90029874 <__sinit+0x14>
9002986c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
90029870:	f7ff bff0 	b.w	90029854 <__sfp_lock_release>
90029874:	4b04      	ldr	r3, [pc, #16]	@ (90029888 <__sinit+0x28>)
90029876:	6223      	str	r3, [r4, #32]
90029878:	4b04      	ldr	r3, [pc, #16]	@ (9002988c <__sinit+0x2c>)
9002987a:	681b      	ldr	r3, [r3, #0]
9002987c:	2b00      	cmp	r3, #0
9002987e:	d1f5      	bne.n	9002986c <__sinit+0xc>
90029880:	f7ff ffc4 	bl	9002980c <global_stdio_init.part.0>
90029884:	e7f2      	b.n	9002986c <__sinit+0xc>
90029886:	bf00      	nop
90029888:	900297cd 	.word	0x900297cd
9002988c:	24022528 	.word	0x24022528

90029890 <fiprintf>:
90029890:	b40e      	push	{r1, r2, r3}
90029892:	b503      	push	{r0, r1, lr}
90029894:	4601      	mov	r1, r0
90029896:	ab03      	add	r3, sp, #12
90029898:	4805      	ldr	r0, [pc, #20]	@ (900298b0 <fiprintf+0x20>)
9002989a:	f853 2b04 	ldr.w	r2, [r3], #4
9002989e:	6800      	ldr	r0, [r0, #0]
900298a0:	9301      	str	r3, [sp, #4]
900298a2:	f000 fabd 	bl	90029e20 <_vfiprintf_r>
900298a6:	b002      	add	sp, #8
900298a8:	f85d eb04 	ldr.w	lr, [sp], #4
900298ac:	b003      	add	sp, #12
900298ae:	4770      	bx	lr
900298b0:	24000114 	.word	0x24000114

900298b4 <_fwalk_sglue>:
900298b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
900298b8:	4607      	mov	r7, r0
900298ba:	4688      	mov	r8, r1
900298bc:	4614      	mov	r4, r2
900298be:	2600      	movs	r6, #0
900298c0:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
900298c4:	f1b9 0901 	subs.w	r9, r9, #1
900298c8:	d505      	bpl.n	900298d6 <_fwalk_sglue+0x22>
900298ca:	6824      	ldr	r4, [r4, #0]
900298cc:	2c00      	cmp	r4, #0
900298ce:	d1f7      	bne.n	900298c0 <_fwalk_sglue+0xc>
900298d0:	4630      	mov	r0, r6
900298d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
900298d6:	89ab      	ldrh	r3, [r5, #12]
900298d8:	2b01      	cmp	r3, #1
900298da:	d907      	bls.n	900298ec <_fwalk_sglue+0x38>
900298dc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
900298e0:	3301      	adds	r3, #1
900298e2:	d003      	beq.n	900298ec <_fwalk_sglue+0x38>
900298e4:	4629      	mov	r1, r5
900298e6:	4638      	mov	r0, r7
900298e8:	47c0      	blx	r8
900298ea:	4306      	orrs	r6, r0
900298ec:	3568      	adds	r5, #104	@ 0x68
900298ee:	e7e9      	b.n	900298c4 <_fwalk_sglue+0x10>

900298f0 <__sread>:
900298f0:	b510      	push	{r4, lr}
900298f2:	460c      	mov	r4, r1
900298f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
900298f8:	f000 f93e 	bl	90029b78 <_read_r>
900298fc:	2800      	cmp	r0, #0
900298fe:	bfab      	itete	ge
90029900:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
90029902:	89a3      	ldrhlt	r3, [r4, #12]
90029904:	181b      	addge	r3, r3, r0
90029906:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
9002990a:	bfac      	ite	ge
9002990c:	6563      	strge	r3, [r4, #84]	@ 0x54
9002990e:	81a3      	strhlt	r3, [r4, #12]
90029910:	bd10      	pop	{r4, pc}

90029912 <__swrite>:
90029912:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
90029916:	461f      	mov	r7, r3
90029918:	898b      	ldrh	r3, [r1, #12]
9002991a:	05db      	lsls	r3, r3, #23
9002991c:	4605      	mov	r5, r0
9002991e:	460c      	mov	r4, r1
90029920:	4616      	mov	r6, r2
90029922:	d505      	bpl.n	90029930 <__swrite+0x1e>
90029924:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90029928:	2302      	movs	r3, #2
9002992a:	2200      	movs	r2, #0
9002992c:	f000 f912 	bl	90029b54 <_lseek_r>
90029930:	89a3      	ldrh	r3, [r4, #12]
90029932:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
90029936:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
9002993a:	81a3      	strh	r3, [r4, #12]
9002993c:	4632      	mov	r2, r6
9002993e:	463b      	mov	r3, r7
90029940:	4628      	mov	r0, r5
90029942:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
90029946:	f000 b94d 	b.w	90029be4 <_write_r>

9002994a <__sseek>:
9002994a:	b510      	push	{r4, lr}
9002994c:	460c      	mov	r4, r1
9002994e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90029952:	f000 f8ff 	bl	90029b54 <_lseek_r>
90029956:	1c43      	adds	r3, r0, #1
90029958:	89a3      	ldrh	r3, [r4, #12]
9002995a:	bf15      	itete	ne
9002995c:	6560      	strne	r0, [r4, #84]	@ 0x54
9002995e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
90029962:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
90029966:	81a3      	strheq	r3, [r4, #12]
90029968:	bf18      	it	ne
9002996a:	81a3      	strhne	r3, [r4, #12]
9002996c:	bd10      	pop	{r4, pc}

9002996e <__sclose>:
9002996e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
90029972:	f000 b8df 	b.w	90029b34 <_close_r>

90029976 <__swbuf_r>:
90029976:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90029978:	460e      	mov	r6, r1
9002997a:	4614      	mov	r4, r2
9002997c:	4605      	mov	r5, r0
9002997e:	b118      	cbz	r0, 90029988 <__swbuf_r+0x12>
90029980:	6a03      	ldr	r3, [r0, #32]
90029982:	b90b      	cbnz	r3, 90029988 <__swbuf_r+0x12>
90029984:	f7ff ff6c 	bl	90029860 <__sinit>
90029988:	69a3      	ldr	r3, [r4, #24]
9002998a:	60a3      	str	r3, [r4, #8]
9002998c:	89a3      	ldrh	r3, [r4, #12]
9002998e:	071a      	lsls	r2, r3, #28
90029990:	d501      	bpl.n	90029996 <__swbuf_r+0x20>
90029992:	6923      	ldr	r3, [r4, #16]
90029994:	b943      	cbnz	r3, 900299a8 <__swbuf_r+0x32>
90029996:	4621      	mov	r1, r4
90029998:	4628      	mov	r0, r5
9002999a:	f000 f82b 	bl	900299f4 <__swsetup_r>
9002999e:	b118      	cbz	r0, 900299a8 <__swbuf_r+0x32>
900299a0:	f04f 37ff 	mov.w	r7, #4294967295
900299a4:	4638      	mov	r0, r7
900299a6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
900299a8:	6823      	ldr	r3, [r4, #0]
900299aa:	6922      	ldr	r2, [r4, #16]
900299ac:	1a98      	subs	r0, r3, r2
900299ae:	6963      	ldr	r3, [r4, #20]
900299b0:	b2f6      	uxtb	r6, r6
900299b2:	4283      	cmp	r3, r0
900299b4:	4637      	mov	r7, r6
900299b6:	dc05      	bgt.n	900299c4 <__swbuf_r+0x4e>
900299b8:	4621      	mov	r1, r4
900299ba:	4628      	mov	r0, r5
900299bc:	f000 fd58 	bl	9002a470 <_fflush_r>
900299c0:	2800      	cmp	r0, #0
900299c2:	d1ed      	bne.n	900299a0 <__swbuf_r+0x2a>
900299c4:	68a3      	ldr	r3, [r4, #8]
900299c6:	3b01      	subs	r3, #1
900299c8:	60a3      	str	r3, [r4, #8]
900299ca:	6823      	ldr	r3, [r4, #0]
900299cc:	1c5a      	adds	r2, r3, #1
900299ce:	6022      	str	r2, [r4, #0]
900299d0:	701e      	strb	r6, [r3, #0]
900299d2:	6962      	ldr	r2, [r4, #20]
900299d4:	1c43      	adds	r3, r0, #1
900299d6:	429a      	cmp	r2, r3
900299d8:	d004      	beq.n	900299e4 <__swbuf_r+0x6e>
900299da:	89a3      	ldrh	r3, [r4, #12]
900299dc:	07db      	lsls	r3, r3, #31
900299de:	d5e1      	bpl.n	900299a4 <__swbuf_r+0x2e>
900299e0:	2e0a      	cmp	r6, #10
900299e2:	d1df      	bne.n	900299a4 <__swbuf_r+0x2e>
900299e4:	4621      	mov	r1, r4
900299e6:	4628      	mov	r0, r5
900299e8:	f000 fd42 	bl	9002a470 <_fflush_r>
900299ec:	2800      	cmp	r0, #0
900299ee:	d0d9      	beq.n	900299a4 <__swbuf_r+0x2e>
900299f0:	e7d6      	b.n	900299a0 <__swbuf_r+0x2a>
	...

900299f4 <__swsetup_r>:
900299f4:	b538      	push	{r3, r4, r5, lr}
900299f6:	4b29      	ldr	r3, [pc, #164]	@ (90029a9c <__swsetup_r+0xa8>)
900299f8:	4605      	mov	r5, r0
900299fa:	6818      	ldr	r0, [r3, #0]
900299fc:	460c      	mov	r4, r1
900299fe:	b118      	cbz	r0, 90029a08 <__swsetup_r+0x14>
90029a00:	6a03      	ldr	r3, [r0, #32]
90029a02:	b90b      	cbnz	r3, 90029a08 <__swsetup_r+0x14>
90029a04:	f7ff ff2c 	bl	90029860 <__sinit>
90029a08:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90029a0c:	0719      	lsls	r1, r3, #28
90029a0e:	d422      	bmi.n	90029a56 <__swsetup_r+0x62>
90029a10:	06da      	lsls	r2, r3, #27
90029a12:	d407      	bmi.n	90029a24 <__swsetup_r+0x30>
90029a14:	2209      	movs	r2, #9
90029a16:	602a      	str	r2, [r5, #0]
90029a18:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
90029a1c:	81a3      	strh	r3, [r4, #12]
90029a1e:	f04f 30ff 	mov.w	r0, #4294967295
90029a22:	e033      	b.n	90029a8c <__swsetup_r+0x98>
90029a24:	0758      	lsls	r0, r3, #29
90029a26:	d512      	bpl.n	90029a4e <__swsetup_r+0x5a>
90029a28:	6b61      	ldr	r1, [r4, #52]	@ 0x34
90029a2a:	b141      	cbz	r1, 90029a3e <__swsetup_r+0x4a>
90029a2c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
90029a30:	4299      	cmp	r1, r3
90029a32:	d002      	beq.n	90029a3a <__swsetup_r+0x46>
90029a34:	4628      	mov	r0, r5
90029a36:	f000 f97f 	bl	90029d38 <_free_r>
90029a3a:	2300      	movs	r3, #0
90029a3c:	6363      	str	r3, [r4, #52]	@ 0x34
90029a3e:	89a3      	ldrh	r3, [r4, #12]
90029a40:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
90029a44:	81a3      	strh	r3, [r4, #12]
90029a46:	2300      	movs	r3, #0
90029a48:	6063      	str	r3, [r4, #4]
90029a4a:	6923      	ldr	r3, [r4, #16]
90029a4c:	6023      	str	r3, [r4, #0]
90029a4e:	89a3      	ldrh	r3, [r4, #12]
90029a50:	f043 0308 	orr.w	r3, r3, #8
90029a54:	81a3      	strh	r3, [r4, #12]
90029a56:	6923      	ldr	r3, [r4, #16]
90029a58:	b94b      	cbnz	r3, 90029a6e <__swsetup_r+0x7a>
90029a5a:	89a3      	ldrh	r3, [r4, #12]
90029a5c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
90029a60:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
90029a64:	d003      	beq.n	90029a6e <__swsetup_r+0x7a>
90029a66:	4621      	mov	r1, r4
90029a68:	4628      	mov	r0, r5
90029a6a:	f000 fd4f 	bl	9002a50c <__smakebuf_r>
90029a6e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
90029a72:	f013 0201 	ands.w	r2, r3, #1
90029a76:	d00a      	beq.n	90029a8e <__swsetup_r+0x9a>
90029a78:	2200      	movs	r2, #0
90029a7a:	60a2      	str	r2, [r4, #8]
90029a7c:	6962      	ldr	r2, [r4, #20]
90029a7e:	4252      	negs	r2, r2
90029a80:	61a2      	str	r2, [r4, #24]
90029a82:	6922      	ldr	r2, [r4, #16]
90029a84:	b942      	cbnz	r2, 90029a98 <__swsetup_r+0xa4>
90029a86:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
90029a8a:	d1c5      	bne.n	90029a18 <__swsetup_r+0x24>
90029a8c:	bd38      	pop	{r3, r4, r5, pc}
90029a8e:	0799      	lsls	r1, r3, #30
90029a90:	bf58      	it	pl
90029a92:	6962      	ldrpl	r2, [r4, #20]
90029a94:	60a2      	str	r2, [r4, #8]
90029a96:	e7f4      	b.n	90029a82 <__swsetup_r+0x8e>
90029a98:	2000      	movs	r0, #0
90029a9a:	e7f7      	b.n	90029a8c <__swsetup_r+0x98>
90029a9c:	24000114 	.word	0x24000114

90029aa0 <memset>:
90029aa0:	4402      	add	r2, r0
90029aa2:	4603      	mov	r3, r0
90029aa4:	4293      	cmp	r3, r2
90029aa6:	d100      	bne.n	90029aaa <memset+0xa>
90029aa8:	4770      	bx	lr
90029aaa:	f803 1b01 	strb.w	r1, [r3], #1
90029aae:	e7f9      	b.n	90029aa4 <memset+0x4>

90029ab0 <strncmp>:
90029ab0:	b510      	push	{r4, lr}
90029ab2:	b16a      	cbz	r2, 90029ad0 <strncmp+0x20>
90029ab4:	3901      	subs	r1, #1
90029ab6:	1884      	adds	r4, r0, r2
90029ab8:	f810 2b01 	ldrb.w	r2, [r0], #1
90029abc:	f811 3f01 	ldrb.w	r3, [r1, #1]!
90029ac0:	429a      	cmp	r2, r3
90029ac2:	d103      	bne.n	90029acc <strncmp+0x1c>
90029ac4:	42a0      	cmp	r0, r4
90029ac6:	d001      	beq.n	90029acc <strncmp+0x1c>
90029ac8:	2a00      	cmp	r2, #0
90029aca:	d1f5      	bne.n	90029ab8 <strncmp+0x8>
90029acc:	1ad0      	subs	r0, r2, r3
90029ace:	bd10      	pop	{r4, pc}
90029ad0:	4610      	mov	r0, r2
90029ad2:	e7fc      	b.n	90029ace <strncmp+0x1e>

90029ad4 <_raise_r>:
90029ad4:	291f      	cmp	r1, #31
90029ad6:	b538      	push	{r3, r4, r5, lr}
90029ad8:	4605      	mov	r5, r0
90029ada:	460c      	mov	r4, r1
90029adc:	d904      	bls.n	90029ae8 <_raise_r+0x14>
90029ade:	2316      	movs	r3, #22
90029ae0:	6003      	str	r3, [r0, #0]
90029ae2:	f04f 30ff 	mov.w	r0, #4294967295
90029ae6:	bd38      	pop	{r3, r4, r5, pc}
90029ae8:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
90029aea:	b112      	cbz	r2, 90029af2 <_raise_r+0x1e>
90029aec:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
90029af0:	b94b      	cbnz	r3, 90029b06 <_raise_r+0x32>
90029af2:	4628      	mov	r0, r5
90029af4:	f000 f864 	bl	90029bc0 <_getpid_r>
90029af8:	4622      	mov	r2, r4
90029afa:	4601      	mov	r1, r0
90029afc:	4628      	mov	r0, r5
90029afe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90029b02:	f000 b84b 	b.w	90029b9c <_kill_r>
90029b06:	2b01      	cmp	r3, #1
90029b08:	d00a      	beq.n	90029b20 <_raise_r+0x4c>
90029b0a:	1c59      	adds	r1, r3, #1
90029b0c:	d103      	bne.n	90029b16 <_raise_r+0x42>
90029b0e:	2316      	movs	r3, #22
90029b10:	6003      	str	r3, [r0, #0]
90029b12:	2001      	movs	r0, #1
90029b14:	e7e7      	b.n	90029ae6 <_raise_r+0x12>
90029b16:	2100      	movs	r1, #0
90029b18:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
90029b1c:	4620      	mov	r0, r4
90029b1e:	4798      	blx	r3
90029b20:	2000      	movs	r0, #0
90029b22:	e7e0      	b.n	90029ae6 <_raise_r+0x12>

90029b24 <raise>:
90029b24:	4b02      	ldr	r3, [pc, #8]	@ (90029b30 <raise+0xc>)
90029b26:	4601      	mov	r1, r0
90029b28:	6818      	ldr	r0, [r3, #0]
90029b2a:	f7ff bfd3 	b.w	90029ad4 <_raise_r>
90029b2e:	bf00      	nop
90029b30:	24000114 	.word	0x24000114

90029b34 <_close_r>:
90029b34:	b538      	push	{r3, r4, r5, lr}
90029b36:	4d06      	ldr	r5, [pc, #24]	@ (90029b50 <_close_r+0x1c>)
90029b38:	2300      	movs	r3, #0
90029b3a:	4604      	mov	r4, r0
90029b3c:	4608      	mov	r0, r1
90029b3e:	602b      	str	r3, [r5, #0]
90029b40:	f7da fcaa 	bl	90004498 <_close>
90029b44:	1c43      	adds	r3, r0, #1
90029b46:	d102      	bne.n	90029b4e <_close_r+0x1a>
90029b48:	682b      	ldr	r3, [r5, #0]
90029b4a:	b103      	cbz	r3, 90029b4e <_close_r+0x1a>
90029b4c:	6023      	str	r3, [r4, #0]
90029b4e:	bd38      	pop	{r3, r4, r5, pc}
90029b50:	2402252c 	.word	0x2402252c

90029b54 <_lseek_r>:
90029b54:	b538      	push	{r3, r4, r5, lr}
90029b56:	4d07      	ldr	r5, [pc, #28]	@ (90029b74 <_lseek_r+0x20>)
90029b58:	4604      	mov	r4, r0
90029b5a:	4608      	mov	r0, r1
90029b5c:	4611      	mov	r1, r2
90029b5e:	2200      	movs	r2, #0
90029b60:	602a      	str	r2, [r5, #0]
90029b62:	461a      	mov	r2, r3
90029b64:	f7da fca4 	bl	900044b0 <_lseek>
90029b68:	1c43      	adds	r3, r0, #1
90029b6a:	d102      	bne.n	90029b72 <_lseek_r+0x1e>
90029b6c:	682b      	ldr	r3, [r5, #0]
90029b6e:	b103      	cbz	r3, 90029b72 <_lseek_r+0x1e>
90029b70:	6023      	str	r3, [r4, #0]
90029b72:	bd38      	pop	{r3, r4, r5, pc}
90029b74:	2402252c 	.word	0x2402252c

90029b78 <_read_r>:
90029b78:	b538      	push	{r3, r4, r5, lr}
90029b7a:	4d07      	ldr	r5, [pc, #28]	@ (90029b98 <_read_r+0x20>)
90029b7c:	4604      	mov	r4, r0
90029b7e:	4608      	mov	r0, r1
90029b80:	4611      	mov	r1, r2
90029b82:	2200      	movs	r2, #0
90029b84:	602a      	str	r2, [r5, #0]
90029b86:	461a      	mov	r2, r3
90029b88:	f7da fc6a 	bl	90004460 <_read>
90029b8c:	1c43      	adds	r3, r0, #1
90029b8e:	d102      	bne.n	90029b96 <_read_r+0x1e>
90029b90:	682b      	ldr	r3, [r5, #0]
90029b92:	b103      	cbz	r3, 90029b96 <_read_r+0x1e>
90029b94:	6023      	str	r3, [r4, #0]
90029b96:	bd38      	pop	{r3, r4, r5, pc}
90029b98:	2402252c 	.word	0x2402252c

90029b9c <_kill_r>:
90029b9c:	b538      	push	{r3, r4, r5, lr}
90029b9e:	4d07      	ldr	r5, [pc, #28]	@ (90029bbc <_kill_r+0x20>)
90029ba0:	2300      	movs	r3, #0
90029ba2:	4604      	mov	r4, r0
90029ba4:	4608      	mov	r0, r1
90029ba6:	4611      	mov	r1, r2
90029ba8:	602b      	str	r3, [r5, #0]
90029baa:	f7da fc49 	bl	90004440 <_kill>
90029bae:	1c43      	adds	r3, r0, #1
90029bb0:	d102      	bne.n	90029bb8 <_kill_r+0x1c>
90029bb2:	682b      	ldr	r3, [r5, #0]
90029bb4:	b103      	cbz	r3, 90029bb8 <_kill_r+0x1c>
90029bb6:	6023      	str	r3, [r4, #0]
90029bb8:	bd38      	pop	{r3, r4, r5, pc}
90029bba:	bf00      	nop
90029bbc:	2402252c 	.word	0x2402252c

90029bc0 <_getpid_r>:
90029bc0:	f7da bc3c 	b.w	9000443c <_getpid>

90029bc4 <_sbrk_r>:
90029bc4:	b538      	push	{r3, r4, r5, lr}
90029bc6:	4d06      	ldr	r5, [pc, #24]	@ (90029be0 <_sbrk_r+0x1c>)
90029bc8:	2300      	movs	r3, #0
90029bca:	4604      	mov	r4, r0
90029bcc:	4608      	mov	r0, r1
90029bce:	602b      	str	r3, [r5, #0]
90029bd0:	f7da fc70 	bl	900044b4 <_sbrk>
90029bd4:	1c43      	adds	r3, r0, #1
90029bd6:	d102      	bne.n	90029bde <_sbrk_r+0x1a>
90029bd8:	682b      	ldr	r3, [r5, #0]
90029bda:	b103      	cbz	r3, 90029bde <_sbrk_r+0x1a>
90029bdc:	6023      	str	r3, [r4, #0]
90029bde:	bd38      	pop	{r3, r4, r5, pc}
90029be0:	2402252c 	.word	0x2402252c

90029be4 <_write_r>:
90029be4:	b538      	push	{r3, r4, r5, lr}
90029be6:	4d07      	ldr	r5, [pc, #28]	@ (90029c04 <_write_r+0x20>)
90029be8:	4604      	mov	r4, r0
90029bea:	4608      	mov	r0, r1
90029bec:	4611      	mov	r1, r2
90029bee:	2200      	movs	r2, #0
90029bf0:	602a      	str	r2, [r5, #0]
90029bf2:	461a      	mov	r2, r3
90029bf4:	f7da fc42 	bl	9000447c <_write>
90029bf8:	1c43      	adds	r3, r0, #1
90029bfa:	d102      	bne.n	90029c02 <_write_r+0x1e>
90029bfc:	682b      	ldr	r3, [r5, #0]
90029bfe:	b103      	cbz	r3, 90029c02 <_write_r+0x1e>
90029c00:	6023      	str	r3, [r4, #0]
90029c02:	bd38      	pop	{r3, r4, r5, pc}
90029c04:	2402252c 	.word	0x2402252c

90029c08 <__errno>:
90029c08:	4b01      	ldr	r3, [pc, #4]	@ (90029c10 <__errno+0x8>)
90029c0a:	6818      	ldr	r0, [r3, #0]
90029c0c:	4770      	bx	lr
90029c0e:	bf00      	nop
90029c10:	24000114 	.word	0x24000114

90029c14 <__libc_init_array>:
90029c14:	b570      	push	{r4, r5, r6, lr}
90029c16:	4d0d      	ldr	r5, [pc, #52]	@ (90029c4c <__libc_init_array+0x38>)
90029c18:	4c0d      	ldr	r4, [pc, #52]	@ (90029c50 <__libc_init_array+0x3c>)
90029c1a:	1b64      	subs	r4, r4, r5
90029c1c:	10a4      	asrs	r4, r4, #2
90029c1e:	2600      	movs	r6, #0
90029c20:	42a6      	cmp	r6, r4
90029c22:	d109      	bne.n	90029c38 <__libc_init_array+0x24>
90029c24:	4d0b      	ldr	r5, [pc, #44]	@ (90029c54 <__libc_init_array+0x40>)
90029c26:	4c0c      	ldr	r4, [pc, #48]	@ (90029c58 <__libc_init_array+0x44>)
90029c28:	f000 fcce 	bl	9002a5c8 <_init>
90029c2c:	1b64      	subs	r4, r4, r5
90029c2e:	10a4      	asrs	r4, r4, #2
90029c30:	2600      	movs	r6, #0
90029c32:	42a6      	cmp	r6, r4
90029c34:	d105      	bne.n	90029c42 <__libc_init_array+0x2e>
90029c36:	bd70      	pop	{r4, r5, r6, pc}
90029c38:	f855 3b04 	ldr.w	r3, [r5], #4
90029c3c:	4798      	blx	r3
90029c3e:	3601      	adds	r6, #1
90029c40:	e7ee      	b.n	90029c20 <__libc_init_array+0xc>
90029c42:	f855 3b04 	ldr.w	r3, [r5], #4
90029c46:	4798      	blx	r3
90029c48:	3601      	adds	r6, #1
90029c4a:	e7f2      	b.n	90029c32 <__libc_init_array+0x1e>
90029c4c:	9002dbec 	.word	0x9002dbec
90029c50:	9002dbec 	.word	0x9002dbec
90029c54:	9002dbec 	.word	0x9002dbec
90029c58:	9002dc04 	.word	0x9002dc04

90029c5c <__retarget_lock_init_recursive>:
90029c5c:	4770      	bx	lr

90029c5e <__retarget_lock_acquire_recursive>:
90029c5e:	4770      	bx	lr

90029c60 <__retarget_lock_release_recursive>:
90029c60:	4770      	bx	lr

90029c62 <memcpy>:
90029c62:	440a      	add	r2, r1
90029c64:	4291      	cmp	r1, r2
90029c66:	f100 33ff 	add.w	r3, r0, #4294967295
90029c6a:	d100      	bne.n	90029c6e <memcpy+0xc>
90029c6c:	4770      	bx	lr
90029c6e:	b510      	push	{r4, lr}
90029c70:	f811 4b01 	ldrb.w	r4, [r1], #1
90029c74:	f803 4f01 	strb.w	r4, [r3, #1]!
90029c78:	4291      	cmp	r1, r2
90029c7a:	d1f9      	bne.n	90029c70 <memcpy+0xe>
90029c7c:	bd10      	pop	{r4, pc}
	...

90029c80 <__register_exitproc>:
90029c80:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
90029c84:	4d27      	ldr	r5, [pc, #156]	@ (90029d24 <__register_exitproc+0xa4>)
90029c86:	4607      	mov	r7, r0
90029c88:	6828      	ldr	r0, [r5, #0]
90029c8a:	4691      	mov	r9, r2
90029c8c:	460e      	mov	r6, r1
90029c8e:	4698      	mov	r8, r3
90029c90:	f7ff ffe5 	bl	90029c5e <__retarget_lock_acquire_recursive>
90029c94:	4a24      	ldr	r2, [pc, #144]	@ (90029d28 <__register_exitproc+0xa8>)
90029c96:	6814      	ldr	r4, [r2, #0]
90029c98:	b93c      	cbnz	r4, 90029caa <__register_exitproc+0x2a>
90029c9a:	4b24      	ldr	r3, [pc, #144]	@ (90029d2c <__register_exitproc+0xac>)
90029c9c:	6013      	str	r3, [r2, #0]
90029c9e:	4a24      	ldr	r2, [pc, #144]	@ (90029d30 <__register_exitproc+0xb0>)
90029ca0:	b112      	cbz	r2, 90029ca8 <__register_exitproc+0x28>
90029ca2:	6812      	ldr	r2, [r2, #0]
90029ca4:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
90029ca8:	4c20      	ldr	r4, [pc, #128]	@ (90029d2c <__register_exitproc+0xac>)
90029caa:	6863      	ldr	r3, [r4, #4]
90029cac:	2b1f      	cmp	r3, #31
90029cae:	dd06      	ble.n	90029cbe <__register_exitproc+0x3e>
90029cb0:	6828      	ldr	r0, [r5, #0]
90029cb2:	f7ff ffd5 	bl	90029c60 <__retarget_lock_release_recursive>
90029cb6:	f04f 30ff 	mov.w	r0, #4294967295
90029cba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
90029cbe:	b32f      	cbz	r7, 90029d0c <__register_exitproc+0x8c>
90029cc0:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
90029cc4:	b968      	cbnz	r0, 90029ce2 <__register_exitproc+0x62>
90029cc6:	4b1b      	ldr	r3, [pc, #108]	@ (90029d34 <__register_exitproc+0xb4>)
90029cc8:	2b00      	cmp	r3, #0
90029cca:	d0f1      	beq.n	90029cb0 <__register_exitproc+0x30>
90029ccc:	f44f 7084 	mov.w	r0, #264	@ 0x108
90029cd0:	f7ff fc6e 	bl	900295b0 <malloc>
90029cd4:	2800      	cmp	r0, #0
90029cd6:	d0eb      	beq.n	90029cb0 <__register_exitproc+0x30>
90029cd8:	2300      	movs	r3, #0
90029cda:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
90029cde:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
90029ce2:	6863      	ldr	r3, [r4, #4]
90029ce4:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
90029ce8:	2201      	movs	r2, #1
90029cea:	409a      	lsls	r2, r3
90029cec:	eb00 0183 	add.w	r1, r0, r3, lsl #2
90029cf0:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
90029cf4:	4313      	orrs	r3, r2
90029cf6:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
90029cfa:	2f02      	cmp	r7, #2
90029cfc:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
90029d00:	bf02      	ittt	eq
90029d02:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
90029d06:	4313      	orreq	r3, r2
90029d08:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
90029d0c:	6863      	ldr	r3, [r4, #4]
90029d0e:	6828      	ldr	r0, [r5, #0]
90029d10:	1c5a      	adds	r2, r3, #1
90029d12:	3302      	adds	r3, #2
90029d14:	6062      	str	r2, [r4, #4]
90029d16:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
90029d1a:	f7ff ffa1 	bl	90029c60 <__retarget_lock_release_recursive>
90029d1e:	2000      	movs	r0, #0
90029d20:	e7cb      	b.n	90029cba <__register_exitproc+0x3a>
90029d22:	bf00      	nop
90029d24:	24000164 	.word	0x24000164
90029d28:	240225c0 	.word	0x240225c0
90029d2c:	24022534 	.word	0x24022534
90029d30:	9002dbb8 	.word	0x9002dbb8
90029d34:	900295b1 	.word	0x900295b1

90029d38 <_free_r>:
90029d38:	b538      	push	{r3, r4, r5, lr}
90029d3a:	4605      	mov	r5, r0
90029d3c:	2900      	cmp	r1, #0
90029d3e:	d041      	beq.n	90029dc4 <_free_r+0x8c>
90029d40:	f851 3c04 	ldr.w	r3, [r1, #-4]
90029d44:	1f0c      	subs	r4, r1, #4
90029d46:	2b00      	cmp	r3, #0
90029d48:	bfb8      	it	lt
90029d4a:	18e4      	addlt	r4, r4, r3
90029d4c:	f7ff fce2 	bl	90029714 <__malloc_lock>
90029d50:	4a1d      	ldr	r2, [pc, #116]	@ (90029dc8 <_free_r+0x90>)
90029d52:	6813      	ldr	r3, [r2, #0]
90029d54:	b933      	cbnz	r3, 90029d64 <_free_r+0x2c>
90029d56:	6063      	str	r3, [r4, #4]
90029d58:	6014      	str	r4, [r2, #0]
90029d5a:	4628      	mov	r0, r5
90029d5c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
90029d60:	f7ff bcde 	b.w	90029720 <__malloc_unlock>
90029d64:	42a3      	cmp	r3, r4
90029d66:	d908      	bls.n	90029d7a <_free_r+0x42>
90029d68:	6820      	ldr	r0, [r4, #0]
90029d6a:	1821      	adds	r1, r4, r0
90029d6c:	428b      	cmp	r3, r1
90029d6e:	bf01      	itttt	eq
90029d70:	6819      	ldreq	r1, [r3, #0]
90029d72:	685b      	ldreq	r3, [r3, #4]
90029d74:	1809      	addeq	r1, r1, r0
90029d76:	6021      	streq	r1, [r4, #0]
90029d78:	e7ed      	b.n	90029d56 <_free_r+0x1e>
90029d7a:	461a      	mov	r2, r3
90029d7c:	685b      	ldr	r3, [r3, #4]
90029d7e:	b10b      	cbz	r3, 90029d84 <_free_r+0x4c>
90029d80:	42a3      	cmp	r3, r4
90029d82:	d9fa      	bls.n	90029d7a <_free_r+0x42>
90029d84:	6811      	ldr	r1, [r2, #0]
90029d86:	1850      	adds	r0, r2, r1
90029d88:	42a0      	cmp	r0, r4
90029d8a:	d10b      	bne.n	90029da4 <_free_r+0x6c>
90029d8c:	6820      	ldr	r0, [r4, #0]
90029d8e:	4401      	add	r1, r0
90029d90:	1850      	adds	r0, r2, r1
90029d92:	4283      	cmp	r3, r0
90029d94:	6011      	str	r1, [r2, #0]
90029d96:	d1e0      	bne.n	90029d5a <_free_r+0x22>
90029d98:	6818      	ldr	r0, [r3, #0]
90029d9a:	685b      	ldr	r3, [r3, #4]
90029d9c:	6053      	str	r3, [r2, #4]
90029d9e:	4408      	add	r0, r1
90029da0:	6010      	str	r0, [r2, #0]
90029da2:	e7da      	b.n	90029d5a <_free_r+0x22>
90029da4:	d902      	bls.n	90029dac <_free_r+0x74>
90029da6:	230c      	movs	r3, #12
90029da8:	602b      	str	r3, [r5, #0]
90029daa:	e7d6      	b.n	90029d5a <_free_r+0x22>
90029dac:	6820      	ldr	r0, [r4, #0]
90029dae:	1821      	adds	r1, r4, r0
90029db0:	428b      	cmp	r3, r1
90029db2:	bf04      	itt	eq
90029db4:	6819      	ldreq	r1, [r3, #0]
90029db6:	685b      	ldreq	r3, [r3, #4]
90029db8:	6063      	str	r3, [r4, #4]
90029dba:	bf04      	itt	eq
90029dbc:	1809      	addeq	r1, r1, r0
90029dbe:	6021      	streq	r1, [r4, #0]
90029dc0:	6054      	str	r4, [r2, #4]
90029dc2:	e7ca      	b.n	90029d5a <_free_r+0x22>
90029dc4:	bd38      	pop	{r3, r4, r5, pc}
90029dc6:	bf00      	nop
90029dc8:	240223ec 	.word	0x240223ec

90029dcc <__sfputc_r>:
90029dcc:	6893      	ldr	r3, [r2, #8]
90029dce:	3b01      	subs	r3, #1
90029dd0:	2b00      	cmp	r3, #0
90029dd2:	b410      	push	{r4}
90029dd4:	6093      	str	r3, [r2, #8]
90029dd6:	da08      	bge.n	90029dea <__sfputc_r+0x1e>
90029dd8:	6994      	ldr	r4, [r2, #24]
90029dda:	42a3      	cmp	r3, r4
90029ddc:	db01      	blt.n	90029de2 <__sfputc_r+0x16>
90029dde:	290a      	cmp	r1, #10
90029de0:	d103      	bne.n	90029dea <__sfputc_r+0x1e>
90029de2:	f85d 4b04 	ldr.w	r4, [sp], #4
90029de6:	f7ff bdc6 	b.w	90029976 <__swbuf_r>
90029dea:	6813      	ldr	r3, [r2, #0]
90029dec:	1c58      	adds	r0, r3, #1
90029dee:	6010      	str	r0, [r2, #0]
90029df0:	7019      	strb	r1, [r3, #0]
90029df2:	4608      	mov	r0, r1
90029df4:	f85d 4b04 	ldr.w	r4, [sp], #4
90029df8:	4770      	bx	lr

90029dfa <__sfputs_r>:
90029dfa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
90029dfc:	4606      	mov	r6, r0
90029dfe:	460f      	mov	r7, r1
90029e00:	4614      	mov	r4, r2
90029e02:	18d5      	adds	r5, r2, r3
90029e04:	42ac      	cmp	r4, r5
90029e06:	d101      	bne.n	90029e0c <__sfputs_r+0x12>
90029e08:	2000      	movs	r0, #0
90029e0a:	e007      	b.n	90029e1c <__sfputs_r+0x22>
90029e0c:	f814 1b01 	ldrb.w	r1, [r4], #1
90029e10:	463a      	mov	r2, r7
90029e12:	4630      	mov	r0, r6
90029e14:	f7ff ffda 	bl	90029dcc <__sfputc_r>
90029e18:	1c43      	adds	r3, r0, #1
90029e1a:	d1f3      	bne.n	90029e04 <__sfputs_r+0xa>
90029e1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

90029e20 <_vfiprintf_r>:
90029e20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
90029e24:	460d      	mov	r5, r1
90029e26:	b09d      	sub	sp, #116	@ 0x74
90029e28:	4614      	mov	r4, r2
90029e2a:	4698      	mov	r8, r3
90029e2c:	4606      	mov	r6, r0
90029e2e:	b118      	cbz	r0, 90029e38 <_vfiprintf_r+0x18>
90029e30:	6a03      	ldr	r3, [r0, #32]
90029e32:	b90b      	cbnz	r3, 90029e38 <_vfiprintf_r+0x18>
90029e34:	f7ff fd14 	bl	90029860 <__sinit>
90029e38:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
90029e3a:	07d9      	lsls	r1, r3, #31
90029e3c:	d405      	bmi.n	90029e4a <_vfiprintf_r+0x2a>
90029e3e:	89ab      	ldrh	r3, [r5, #12]
90029e40:	059a      	lsls	r2, r3, #22
90029e42:	d402      	bmi.n	90029e4a <_vfiprintf_r+0x2a>
90029e44:	6da8      	ldr	r0, [r5, #88]	@ 0x58
90029e46:	f7ff ff0a 	bl	90029c5e <__retarget_lock_acquire_recursive>
90029e4a:	89ab      	ldrh	r3, [r5, #12]
90029e4c:	071b      	lsls	r3, r3, #28
90029e4e:	d501      	bpl.n	90029e54 <_vfiprintf_r+0x34>
90029e50:	692b      	ldr	r3, [r5, #16]
90029e52:	b99b      	cbnz	r3, 90029e7c <_vfiprintf_r+0x5c>
90029e54:	4629      	mov	r1, r5
90029e56:	4630      	mov	r0, r6
90029e58:	f7ff fdcc 	bl	900299f4 <__swsetup_r>
90029e5c:	b170      	cbz	r0, 90029e7c <_vfiprintf_r+0x5c>
90029e5e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
90029e60:	07dc      	lsls	r4, r3, #31
90029e62:	d504      	bpl.n	90029e6e <_vfiprintf_r+0x4e>
90029e64:	f04f 30ff 	mov.w	r0, #4294967295
90029e68:	b01d      	add	sp, #116	@ 0x74
90029e6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
90029e6e:	89ab      	ldrh	r3, [r5, #12]
90029e70:	0598      	lsls	r0, r3, #22
90029e72:	d4f7      	bmi.n	90029e64 <_vfiprintf_r+0x44>
90029e74:	6da8      	ldr	r0, [r5, #88]	@ 0x58
90029e76:	f7ff fef3 	bl	90029c60 <__retarget_lock_release_recursive>
90029e7a:	e7f3      	b.n	90029e64 <_vfiprintf_r+0x44>
90029e7c:	2300      	movs	r3, #0
90029e7e:	9309      	str	r3, [sp, #36]	@ 0x24
90029e80:	2320      	movs	r3, #32
90029e82:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
90029e86:	f8cd 800c 	str.w	r8, [sp, #12]
90029e8a:	2330      	movs	r3, #48	@ 0x30
90029e8c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 9002a03c <_vfiprintf_r+0x21c>
90029e90:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
90029e94:	f04f 0901 	mov.w	r9, #1
90029e98:	4623      	mov	r3, r4
90029e9a:	469a      	mov	sl, r3
90029e9c:	f813 2b01 	ldrb.w	r2, [r3], #1
90029ea0:	b10a      	cbz	r2, 90029ea6 <_vfiprintf_r+0x86>
90029ea2:	2a25      	cmp	r2, #37	@ 0x25
90029ea4:	d1f9      	bne.n	90029e9a <_vfiprintf_r+0x7a>
90029ea6:	ebba 0b04 	subs.w	fp, sl, r4
90029eaa:	d00b      	beq.n	90029ec4 <_vfiprintf_r+0xa4>
90029eac:	465b      	mov	r3, fp
90029eae:	4622      	mov	r2, r4
90029eb0:	4629      	mov	r1, r5
90029eb2:	4630      	mov	r0, r6
90029eb4:	f7ff ffa1 	bl	90029dfa <__sfputs_r>
90029eb8:	3001      	adds	r0, #1
90029eba:	f000 80a7 	beq.w	9002a00c <_vfiprintf_r+0x1ec>
90029ebe:	9a09      	ldr	r2, [sp, #36]	@ 0x24
90029ec0:	445a      	add	r2, fp
90029ec2:	9209      	str	r2, [sp, #36]	@ 0x24
90029ec4:	f89a 3000 	ldrb.w	r3, [sl]
90029ec8:	2b00      	cmp	r3, #0
90029eca:	f000 809f 	beq.w	9002a00c <_vfiprintf_r+0x1ec>
90029ece:	2300      	movs	r3, #0
90029ed0:	f04f 32ff 	mov.w	r2, #4294967295
90029ed4:	e9cd 2305 	strd	r2, r3, [sp, #20]
90029ed8:	f10a 0a01 	add.w	sl, sl, #1
90029edc:	9304      	str	r3, [sp, #16]
90029ede:	9307      	str	r3, [sp, #28]
90029ee0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
90029ee4:	931a      	str	r3, [sp, #104]	@ 0x68
90029ee6:	4654      	mov	r4, sl
90029ee8:	2205      	movs	r2, #5
90029eea:	f814 1b01 	ldrb.w	r1, [r4], #1
90029eee:	4853      	ldr	r0, [pc, #332]	@ (9002a03c <_vfiprintf_r+0x21c>)
90029ef0:	f7d6 f9f6 	bl	900002e0 <memchr>
90029ef4:	9a04      	ldr	r2, [sp, #16]
90029ef6:	b9d8      	cbnz	r0, 90029f30 <_vfiprintf_r+0x110>
90029ef8:	06d1      	lsls	r1, r2, #27
90029efa:	bf44      	itt	mi
90029efc:	2320      	movmi	r3, #32
90029efe:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
90029f02:	0713      	lsls	r3, r2, #28
90029f04:	bf44      	itt	mi
90029f06:	232b      	movmi	r3, #43	@ 0x2b
90029f08:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
90029f0c:	f89a 3000 	ldrb.w	r3, [sl]
90029f10:	2b2a      	cmp	r3, #42	@ 0x2a
90029f12:	d015      	beq.n	90029f40 <_vfiprintf_r+0x120>
90029f14:	9a07      	ldr	r2, [sp, #28]
90029f16:	4654      	mov	r4, sl
90029f18:	2000      	movs	r0, #0
90029f1a:	f04f 0c0a 	mov.w	ip, #10
90029f1e:	4621      	mov	r1, r4
90029f20:	f811 3b01 	ldrb.w	r3, [r1], #1
90029f24:	3b30      	subs	r3, #48	@ 0x30
90029f26:	2b09      	cmp	r3, #9
90029f28:	d94b      	bls.n	90029fc2 <_vfiprintf_r+0x1a2>
90029f2a:	b1b0      	cbz	r0, 90029f5a <_vfiprintf_r+0x13a>
90029f2c:	9207      	str	r2, [sp, #28]
90029f2e:	e014      	b.n	90029f5a <_vfiprintf_r+0x13a>
90029f30:	eba0 0308 	sub.w	r3, r0, r8
90029f34:	fa09 f303 	lsl.w	r3, r9, r3
90029f38:	4313      	orrs	r3, r2
90029f3a:	9304      	str	r3, [sp, #16]
90029f3c:	46a2      	mov	sl, r4
90029f3e:	e7d2      	b.n	90029ee6 <_vfiprintf_r+0xc6>
90029f40:	9b03      	ldr	r3, [sp, #12]
90029f42:	1d19      	adds	r1, r3, #4
90029f44:	681b      	ldr	r3, [r3, #0]
90029f46:	9103      	str	r1, [sp, #12]
90029f48:	2b00      	cmp	r3, #0
90029f4a:	bfbb      	ittet	lt
90029f4c:	425b      	neglt	r3, r3
90029f4e:	f042 0202 	orrlt.w	r2, r2, #2
90029f52:	9307      	strge	r3, [sp, #28]
90029f54:	9307      	strlt	r3, [sp, #28]
90029f56:	bfb8      	it	lt
90029f58:	9204      	strlt	r2, [sp, #16]
90029f5a:	7823      	ldrb	r3, [r4, #0]
90029f5c:	2b2e      	cmp	r3, #46	@ 0x2e
90029f5e:	d10a      	bne.n	90029f76 <_vfiprintf_r+0x156>
90029f60:	7863      	ldrb	r3, [r4, #1]
90029f62:	2b2a      	cmp	r3, #42	@ 0x2a
90029f64:	d132      	bne.n	90029fcc <_vfiprintf_r+0x1ac>
90029f66:	9b03      	ldr	r3, [sp, #12]
90029f68:	1d1a      	adds	r2, r3, #4
90029f6a:	681b      	ldr	r3, [r3, #0]
90029f6c:	9203      	str	r2, [sp, #12]
90029f6e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
90029f72:	3402      	adds	r4, #2
90029f74:	9305      	str	r3, [sp, #20]
90029f76:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 9002a04c <_vfiprintf_r+0x22c>
90029f7a:	7821      	ldrb	r1, [r4, #0]
90029f7c:	2203      	movs	r2, #3
90029f7e:	4650      	mov	r0, sl
90029f80:	f7d6 f9ae 	bl	900002e0 <memchr>
90029f84:	b138      	cbz	r0, 90029f96 <_vfiprintf_r+0x176>
90029f86:	9b04      	ldr	r3, [sp, #16]
90029f88:	eba0 000a 	sub.w	r0, r0, sl
90029f8c:	2240      	movs	r2, #64	@ 0x40
90029f8e:	4082      	lsls	r2, r0
90029f90:	4313      	orrs	r3, r2
90029f92:	3401      	adds	r4, #1
90029f94:	9304      	str	r3, [sp, #16]
90029f96:	f814 1b01 	ldrb.w	r1, [r4], #1
90029f9a:	4829      	ldr	r0, [pc, #164]	@ (9002a040 <_vfiprintf_r+0x220>)
90029f9c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
90029fa0:	2206      	movs	r2, #6
90029fa2:	f7d6 f99d 	bl	900002e0 <memchr>
90029fa6:	2800      	cmp	r0, #0
90029fa8:	d03f      	beq.n	9002a02a <_vfiprintf_r+0x20a>
90029faa:	4b26      	ldr	r3, [pc, #152]	@ (9002a044 <_vfiprintf_r+0x224>)
90029fac:	bb1b      	cbnz	r3, 90029ff6 <_vfiprintf_r+0x1d6>
90029fae:	9b03      	ldr	r3, [sp, #12]
90029fb0:	3307      	adds	r3, #7
90029fb2:	f023 0307 	bic.w	r3, r3, #7
90029fb6:	3308      	adds	r3, #8
90029fb8:	9303      	str	r3, [sp, #12]
90029fba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
90029fbc:	443b      	add	r3, r7
90029fbe:	9309      	str	r3, [sp, #36]	@ 0x24
90029fc0:	e76a      	b.n	90029e98 <_vfiprintf_r+0x78>
90029fc2:	fb0c 3202 	mla	r2, ip, r2, r3
90029fc6:	460c      	mov	r4, r1
90029fc8:	2001      	movs	r0, #1
90029fca:	e7a8      	b.n	90029f1e <_vfiprintf_r+0xfe>
90029fcc:	2300      	movs	r3, #0
90029fce:	3401      	adds	r4, #1
90029fd0:	9305      	str	r3, [sp, #20]
90029fd2:	4619      	mov	r1, r3
90029fd4:	f04f 0c0a 	mov.w	ip, #10
90029fd8:	4620      	mov	r0, r4
90029fda:	f810 2b01 	ldrb.w	r2, [r0], #1
90029fde:	3a30      	subs	r2, #48	@ 0x30
90029fe0:	2a09      	cmp	r2, #9
90029fe2:	d903      	bls.n	90029fec <_vfiprintf_r+0x1cc>
90029fe4:	2b00      	cmp	r3, #0
90029fe6:	d0c6      	beq.n	90029f76 <_vfiprintf_r+0x156>
90029fe8:	9105      	str	r1, [sp, #20]
90029fea:	e7c4      	b.n	90029f76 <_vfiprintf_r+0x156>
90029fec:	fb0c 2101 	mla	r1, ip, r1, r2
90029ff0:	4604      	mov	r4, r0
90029ff2:	2301      	movs	r3, #1
90029ff4:	e7f0      	b.n	90029fd8 <_vfiprintf_r+0x1b8>
90029ff6:	ab03      	add	r3, sp, #12
90029ff8:	9300      	str	r3, [sp, #0]
90029ffa:	462a      	mov	r2, r5
90029ffc:	4b12      	ldr	r3, [pc, #72]	@ (9002a048 <_vfiprintf_r+0x228>)
90029ffe:	a904      	add	r1, sp, #16
9002a000:	4630      	mov	r0, r6
9002a002:	f3af 8000 	nop.w
9002a006:	4607      	mov	r7, r0
9002a008:	1c78      	adds	r0, r7, #1
9002a00a:	d1d6      	bne.n	90029fba <_vfiprintf_r+0x19a>
9002a00c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
9002a00e:	07d9      	lsls	r1, r3, #31
9002a010:	d405      	bmi.n	9002a01e <_vfiprintf_r+0x1fe>
9002a012:	89ab      	ldrh	r3, [r5, #12]
9002a014:	059a      	lsls	r2, r3, #22
9002a016:	d402      	bmi.n	9002a01e <_vfiprintf_r+0x1fe>
9002a018:	6da8      	ldr	r0, [r5, #88]	@ 0x58
9002a01a:	f7ff fe21 	bl	90029c60 <__retarget_lock_release_recursive>
9002a01e:	89ab      	ldrh	r3, [r5, #12]
9002a020:	065b      	lsls	r3, r3, #25
9002a022:	f53f af1f 	bmi.w	90029e64 <_vfiprintf_r+0x44>
9002a026:	9809      	ldr	r0, [sp, #36]	@ 0x24
9002a028:	e71e      	b.n	90029e68 <_vfiprintf_r+0x48>
9002a02a:	ab03      	add	r3, sp, #12
9002a02c:	9300      	str	r3, [sp, #0]
9002a02e:	462a      	mov	r2, r5
9002a030:	4b05      	ldr	r3, [pc, #20]	@ (9002a048 <_vfiprintf_r+0x228>)
9002a032:	a904      	add	r1, sp, #16
9002a034:	4630      	mov	r0, r6
9002a036:	f000 f879 	bl	9002a12c <_printf_i>
9002a03a:	e7e4      	b.n	9002a006 <_vfiprintf_r+0x1e6>
9002a03c:	9002db84 	.word	0x9002db84
9002a040:	9002db8e 	.word	0x9002db8e
9002a044:	00000000 	.word	0x00000000
9002a048:	90029dfb 	.word	0x90029dfb
9002a04c:	9002db8a 	.word	0x9002db8a

9002a050 <_printf_common>:
9002a050:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
9002a054:	4616      	mov	r6, r2
9002a056:	4698      	mov	r8, r3
9002a058:	688a      	ldr	r2, [r1, #8]
9002a05a:	690b      	ldr	r3, [r1, #16]
9002a05c:	f8dd 9020 	ldr.w	r9, [sp, #32]
9002a060:	4293      	cmp	r3, r2
9002a062:	bfb8      	it	lt
9002a064:	4613      	movlt	r3, r2
9002a066:	6033      	str	r3, [r6, #0]
9002a068:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
9002a06c:	4607      	mov	r7, r0
9002a06e:	460c      	mov	r4, r1
9002a070:	b10a      	cbz	r2, 9002a076 <_printf_common+0x26>
9002a072:	3301      	adds	r3, #1
9002a074:	6033      	str	r3, [r6, #0]
9002a076:	6823      	ldr	r3, [r4, #0]
9002a078:	0699      	lsls	r1, r3, #26
9002a07a:	bf42      	ittt	mi
9002a07c:	6833      	ldrmi	r3, [r6, #0]
9002a07e:	3302      	addmi	r3, #2
9002a080:	6033      	strmi	r3, [r6, #0]
9002a082:	6825      	ldr	r5, [r4, #0]
9002a084:	f015 0506 	ands.w	r5, r5, #6
9002a088:	d106      	bne.n	9002a098 <_printf_common+0x48>
9002a08a:	f104 0a19 	add.w	sl, r4, #25
9002a08e:	68e3      	ldr	r3, [r4, #12]
9002a090:	6832      	ldr	r2, [r6, #0]
9002a092:	1a9b      	subs	r3, r3, r2
9002a094:	42ab      	cmp	r3, r5
9002a096:	dc26      	bgt.n	9002a0e6 <_printf_common+0x96>
9002a098:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
9002a09c:	6822      	ldr	r2, [r4, #0]
9002a09e:	3b00      	subs	r3, #0
9002a0a0:	bf18      	it	ne
9002a0a2:	2301      	movne	r3, #1
9002a0a4:	0692      	lsls	r2, r2, #26
9002a0a6:	d42b      	bmi.n	9002a100 <_printf_common+0xb0>
9002a0a8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
9002a0ac:	4641      	mov	r1, r8
9002a0ae:	4638      	mov	r0, r7
9002a0b0:	47c8      	blx	r9
9002a0b2:	3001      	adds	r0, #1
9002a0b4:	d01e      	beq.n	9002a0f4 <_printf_common+0xa4>
9002a0b6:	6823      	ldr	r3, [r4, #0]
9002a0b8:	6922      	ldr	r2, [r4, #16]
9002a0ba:	f003 0306 	and.w	r3, r3, #6
9002a0be:	2b04      	cmp	r3, #4
9002a0c0:	bf02      	ittt	eq
9002a0c2:	68e5      	ldreq	r5, [r4, #12]
9002a0c4:	6833      	ldreq	r3, [r6, #0]
9002a0c6:	1aed      	subeq	r5, r5, r3
9002a0c8:	68a3      	ldr	r3, [r4, #8]
9002a0ca:	bf0c      	ite	eq
9002a0cc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
9002a0d0:	2500      	movne	r5, #0
9002a0d2:	4293      	cmp	r3, r2
9002a0d4:	bfc4      	itt	gt
9002a0d6:	1a9b      	subgt	r3, r3, r2
9002a0d8:	18ed      	addgt	r5, r5, r3
9002a0da:	2600      	movs	r6, #0
9002a0dc:	341a      	adds	r4, #26
9002a0de:	42b5      	cmp	r5, r6
9002a0e0:	d11a      	bne.n	9002a118 <_printf_common+0xc8>
9002a0e2:	2000      	movs	r0, #0
9002a0e4:	e008      	b.n	9002a0f8 <_printf_common+0xa8>
9002a0e6:	2301      	movs	r3, #1
9002a0e8:	4652      	mov	r2, sl
9002a0ea:	4641      	mov	r1, r8
9002a0ec:	4638      	mov	r0, r7
9002a0ee:	47c8      	blx	r9
9002a0f0:	3001      	adds	r0, #1
9002a0f2:	d103      	bne.n	9002a0fc <_printf_common+0xac>
9002a0f4:	f04f 30ff 	mov.w	r0, #4294967295
9002a0f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002a0fc:	3501      	adds	r5, #1
9002a0fe:	e7c6      	b.n	9002a08e <_printf_common+0x3e>
9002a100:	18e1      	adds	r1, r4, r3
9002a102:	1c5a      	adds	r2, r3, #1
9002a104:	2030      	movs	r0, #48	@ 0x30
9002a106:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
9002a10a:	4422      	add	r2, r4
9002a10c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
9002a110:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
9002a114:	3302      	adds	r3, #2
9002a116:	e7c7      	b.n	9002a0a8 <_printf_common+0x58>
9002a118:	2301      	movs	r3, #1
9002a11a:	4622      	mov	r2, r4
9002a11c:	4641      	mov	r1, r8
9002a11e:	4638      	mov	r0, r7
9002a120:	47c8      	blx	r9
9002a122:	3001      	adds	r0, #1
9002a124:	d0e6      	beq.n	9002a0f4 <_printf_common+0xa4>
9002a126:	3601      	adds	r6, #1
9002a128:	e7d9      	b.n	9002a0de <_printf_common+0x8e>
	...

9002a12c <_printf_i>:
9002a12c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
9002a130:	7e0f      	ldrb	r7, [r1, #24]
9002a132:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
9002a134:	2f78      	cmp	r7, #120	@ 0x78
9002a136:	4691      	mov	r9, r2
9002a138:	4680      	mov	r8, r0
9002a13a:	460c      	mov	r4, r1
9002a13c:	469a      	mov	sl, r3
9002a13e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
9002a142:	d807      	bhi.n	9002a154 <_printf_i+0x28>
9002a144:	2f62      	cmp	r7, #98	@ 0x62
9002a146:	d80a      	bhi.n	9002a15e <_printf_i+0x32>
9002a148:	2f00      	cmp	r7, #0
9002a14a:	f000 80d1 	beq.w	9002a2f0 <_printf_i+0x1c4>
9002a14e:	2f58      	cmp	r7, #88	@ 0x58
9002a150:	f000 80b8 	beq.w	9002a2c4 <_printf_i+0x198>
9002a154:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002a158:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
9002a15c:	e03a      	b.n	9002a1d4 <_printf_i+0xa8>
9002a15e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
9002a162:	2b15      	cmp	r3, #21
9002a164:	d8f6      	bhi.n	9002a154 <_printf_i+0x28>
9002a166:	a101      	add	r1, pc, #4	@ (adr r1, 9002a16c <_printf_i+0x40>)
9002a168:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
9002a16c:	9002a1c5 	.word	0x9002a1c5
9002a170:	9002a1d9 	.word	0x9002a1d9
9002a174:	9002a155 	.word	0x9002a155
9002a178:	9002a155 	.word	0x9002a155
9002a17c:	9002a155 	.word	0x9002a155
9002a180:	9002a155 	.word	0x9002a155
9002a184:	9002a1d9 	.word	0x9002a1d9
9002a188:	9002a155 	.word	0x9002a155
9002a18c:	9002a155 	.word	0x9002a155
9002a190:	9002a155 	.word	0x9002a155
9002a194:	9002a155 	.word	0x9002a155
9002a198:	9002a2d7 	.word	0x9002a2d7
9002a19c:	9002a203 	.word	0x9002a203
9002a1a0:	9002a291 	.word	0x9002a291
9002a1a4:	9002a155 	.word	0x9002a155
9002a1a8:	9002a155 	.word	0x9002a155
9002a1ac:	9002a2f9 	.word	0x9002a2f9
9002a1b0:	9002a155 	.word	0x9002a155
9002a1b4:	9002a203 	.word	0x9002a203
9002a1b8:	9002a155 	.word	0x9002a155
9002a1bc:	9002a155 	.word	0x9002a155
9002a1c0:	9002a299 	.word	0x9002a299
9002a1c4:	6833      	ldr	r3, [r6, #0]
9002a1c6:	1d1a      	adds	r2, r3, #4
9002a1c8:	681b      	ldr	r3, [r3, #0]
9002a1ca:	6032      	str	r2, [r6, #0]
9002a1cc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
9002a1d0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
9002a1d4:	2301      	movs	r3, #1
9002a1d6:	e09c      	b.n	9002a312 <_printf_i+0x1e6>
9002a1d8:	6833      	ldr	r3, [r6, #0]
9002a1da:	6820      	ldr	r0, [r4, #0]
9002a1dc:	1d19      	adds	r1, r3, #4
9002a1de:	6031      	str	r1, [r6, #0]
9002a1e0:	0606      	lsls	r6, r0, #24
9002a1e2:	d501      	bpl.n	9002a1e8 <_printf_i+0xbc>
9002a1e4:	681d      	ldr	r5, [r3, #0]
9002a1e6:	e003      	b.n	9002a1f0 <_printf_i+0xc4>
9002a1e8:	0645      	lsls	r5, r0, #25
9002a1ea:	d5fb      	bpl.n	9002a1e4 <_printf_i+0xb8>
9002a1ec:	f9b3 5000 	ldrsh.w	r5, [r3]
9002a1f0:	2d00      	cmp	r5, #0
9002a1f2:	da03      	bge.n	9002a1fc <_printf_i+0xd0>
9002a1f4:	232d      	movs	r3, #45	@ 0x2d
9002a1f6:	426d      	negs	r5, r5
9002a1f8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002a1fc:	4858      	ldr	r0, [pc, #352]	@ (9002a360 <_printf_i+0x234>)
9002a1fe:	230a      	movs	r3, #10
9002a200:	e011      	b.n	9002a226 <_printf_i+0xfa>
9002a202:	6821      	ldr	r1, [r4, #0]
9002a204:	6833      	ldr	r3, [r6, #0]
9002a206:	0608      	lsls	r0, r1, #24
9002a208:	f853 5b04 	ldr.w	r5, [r3], #4
9002a20c:	d402      	bmi.n	9002a214 <_printf_i+0xe8>
9002a20e:	0649      	lsls	r1, r1, #25
9002a210:	bf48      	it	mi
9002a212:	b2ad      	uxthmi	r5, r5
9002a214:	2f6f      	cmp	r7, #111	@ 0x6f
9002a216:	4852      	ldr	r0, [pc, #328]	@ (9002a360 <_printf_i+0x234>)
9002a218:	6033      	str	r3, [r6, #0]
9002a21a:	bf14      	ite	ne
9002a21c:	230a      	movne	r3, #10
9002a21e:	2308      	moveq	r3, #8
9002a220:	2100      	movs	r1, #0
9002a222:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
9002a226:	6866      	ldr	r6, [r4, #4]
9002a228:	60a6      	str	r6, [r4, #8]
9002a22a:	2e00      	cmp	r6, #0
9002a22c:	db05      	blt.n	9002a23a <_printf_i+0x10e>
9002a22e:	6821      	ldr	r1, [r4, #0]
9002a230:	432e      	orrs	r6, r5
9002a232:	f021 0104 	bic.w	r1, r1, #4
9002a236:	6021      	str	r1, [r4, #0]
9002a238:	d04b      	beq.n	9002a2d2 <_printf_i+0x1a6>
9002a23a:	4616      	mov	r6, r2
9002a23c:	fbb5 f1f3 	udiv	r1, r5, r3
9002a240:	fb03 5711 	mls	r7, r3, r1, r5
9002a244:	5dc7      	ldrb	r7, [r0, r7]
9002a246:	f806 7d01 	strb.w	r7, [r6, #-1]!
9002a24a:	462f      	mov	r7, r5
9002a24c:	42bb      	cmp	r3, r7
9002a24e:	460d      	mov	r5, r1
9002a250:	d9f4      	bls.n	9002a23c <_printf_i+0x110>
9002a252:	2b08      	cmp	r3, #8
9002a254:	d10b      	bne.n	9002a26e <_printf_i+0x142>
9002a256:	6823      	ldr	r3, [r4, #0]
9002a258:	07df      	lsls	r7, r3, #31
9002a25a:	d508      	bpl.n	9002a26e <_printf_i+0x142>
9002a25c:	6923      	ldr	r3, [r4, #16]
9002a25e:	6861      	ldr	r1, [r4, #4]
9002a260:	4299      	cmp	r1, r3
9002a262:	bfde      	ittt	le
9002a264:	2330      	movle	r3, #48	@ 0x30
9002a266:	f806 3c01 	strble.w	r3, [r6, #-1]
9002a26a:	f106 36ff 	addle.w	r6, r6, #4294967295
9002a26e:	1b92      	subs	r2, r2, r6
9002a270:	6122      	str	r2, [r4, #16]
9002a272:	f8cd a000 	str.w	sl, [sp]
9002a276:	464b      	mov	r3, r9
9002a278:	aa03      	add	r2, sp, #12
9002a27a:	4621      	mov	r1, r4
9002a27c:	4640      	mov	r0, r8
9002a27e:	f7ff fee7 	bl	9002a050 <_printf_common>
9002a282:	3001      	adds	r0, #1
9002a284:	d14a      	bne.n	9002a31c <_printf_i+0x1f0>
9002a286:	f04f 30ff 	mov.w	r0, #4294967295
9002a28a:	b004      	add	sp, #16
9002a28c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
9002a290:	6823      	ldr	r3, [r4, #0]
9002a292:	f043 0320 	orr.w	r3, r3, #32
9002a296:	6023      	str	r3, [r4, #0]
9002a298:	4832      	ldr	r0, [pc, #200]	@ (9002a364 <_printf_i+0x238>)
9002a29a:	2778      	movs	r7, #120	@ 0x78
9002a29c:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
9002a2a0:	6823      	ldr	r3, [r4, #0]
9002a2a2:	6831      	ldr	r1, [r6, #0]
9002a2a4:	061f      	lsls	r7, r3, #24
9002a2a6:	f851 5b04 	ldr.w	r5, [r1], #4
9002a2aa:	d402      	bmi.n	9002a2b2 <_printf_i+0x186>
9002a2ac:	065f      	lsls	r7, r3, #25
9002a2ae:	bf48      	it	mi
9002a2b0:	b2ad      	uxthmi	r5, r5
9002a2b2:	6031      	str	r1, [r6, #0]
9002a2b4:	07d9      	lsls	r1, r3, #31
9002a2b6:	bf44      	itt	mi
9002a2b8:	f043 0320 	orrmi.w	r3, r3, #32
9002a2bc:	6023      	strmi	r3, [r4, #0]
9002a2be:	b11d      	cbz	r5, 9002a2c8 <_printf_i+0x19c>
9002a2c0:	2310      	movs	r3, #16
9002a2c2:	e7ad      	b.n	9002a220 <_printf_i+0xf4>
9002a2c4:	4826      	ldr	r0, [pc, #152]	@ (9002a360 <_printf_i+0x234>)
9002a2c6:	e7e9      	b.n	9002a29c <_printf_i+0x170>
9002a2c8:	6823      	ldr	r3, [r4, #0]
9002a2ca:	f023 0320 	bic.w	r3, r3, #32
9002a2ce:	6023      	str	r3, [r4, #0]
9002a2d0:	e7f6      	b.n	9002a2c0 <_printf_i+0x194>
9002a2d2:	4616      	mov	r6, r2
9002a2d4:	e7bd      	b.n	9002a252 <_printf_i+0x126>
9002a2d6:	6833      	ldr	r3, [r6, #0]
9002a2d8:	6825      	ldr	r5, [r4, #0]
9002a2da:	6961      	ldr	r1, [r4, #20]
9002a2dc:	1d18      	adds	r0, r3, #4
9002a2de:	6030      	str	r0, [r6, #0]
9002a2e0:	062e      	lsls	r6, r5, #24
9002a2e2:	681b      	ldr	r3, [r3, #0]
9002a2e4:	d501      	bpl.n	9002a2ea <_printf_i+0x1be>
9002a2e6:	6019      	str	r1, [r3, #0]
9002a2e8:	e002      	b.n	9002a2f0 <_printf_i+0x1c4>
9002a2ea:	0668      	lsls	r0, r5, #25
9002a2ec:	d5fb      	bpl.n	9002a2e6 <_printf_i+0x1ba>
9002a2ee:	8019      	strh	r1, [r3, #0]
9002a2f0:	2300      	movs	r3, #0
9002a2f2:	6123      	str	r3, [r4, #16]
9002a2f4:	4616      	mov	r6, r2
9002a2f6:	e7bc      	b.n	9002a272 <_printf_i+0x146>
9002a2f8:	6833      	ldr	r3, [r6, #0]
9002a2fa:	1d1a      	adds	r2, r3, #4
9002a2fc:	6032      	str	r2, [r6, #0]
9002a2fe:	681e      	ldr	r6, [r3, #0]
9002a300:	6862      	ldr	r2, [r4, #4]
9002a302:	2100      	movs	r1, #0
9002a304:	4630      	mov	r0, r6
9002a306:	f7d5 ffeb 	bl	900002e0 <memchr>
9002a30a:	b108      	cbz	r0, 9002a310 <_printf_i+0x1e4>
9002a30c:	1b80      	subs	r0, r0, r6
9002a30e:	6060      	str	r0, [r4, #4]
9002a310:	6863      	ldr	r3, [r4, #4]
9002a312:	6123      	str	r3, [r4, #16]
9002a314:	2300      	movs	r3, #0
9002a316:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
9002a31a:	e7aa      	b.n	9002a272 <_printf_i+0x146>
9002a31c:	6923      	ldr	r3, [r4, #16]
9002a31e:	4632      	mov	r2, r6
9002a320:	4649      	mov	r1, r9
9002a322:	4640      	mov	r0, r8
9002a324:	47d0      	blx	sl
9002a326:	3001      	adds	r0, #1
9002a328:	d0ad      	beq.n	9002a286 <_printf_i+0x15a>
9002a32a:	6823      	ldr	r3, [r4, #0]
9002a32c:	079b      	lsls	r3, r3, #30
9002a32e:	d413      	bmi.n	9002a358 <_printf_i+0x22c>
9002a330:	68e0      	ldr	r0, [r4, #12]
9002a332:	9b03      	ldr	r3, [sp, #12]
9002a334:	4298      	cmp	r0, r3
9002a336:	bfb8      	it	lt
9002a338:	4618      	movlt	r0, r3
9002a33a:	e7a6      	b.n	9002a28a <_printf_i+0x15e>
9002a33c:	2301      	movs	r3, #1
9002a33e:	4632      	mov	r2, r6
9002a340:	4649      	mov	r1, r9
9002a342:	4640      	mov	r0, r8
9002a344:	47d0      	blx	sl
9002a346:	3001      	adds	r0, #1
9002a348:	d09d      	beq.n	9002a286 <_printf_i+0x15a>
9002a34a:	3501      	adds	r5, #1
9002a34c:	68e3      	ldr	r3, [r4, #12]
9002a34e:	9903      	ldr	r1, [sp, #12]
9002a350:	1a5b      	subs	r3, r3, r1
9002a352:	42ab      	cmp	r3, r5
9002a354:	dcf2      	bgt.n	9002a33c <_printf_i+0x210>
9002a356:	e7eb      	b.n	9002a330 <_printf_i+0x204>
9002a358:	2500      	movs	r5, #0
9002a35a:	f104 0619 	add.w	r6, r4, #25
9002a35e:	e7f5      	b.n	9002a34c <_printf_i+0x220>
9002a360:	9002db95 	.word	0x9002db95
9002a364:	9002dba6 	.word	0x9002dba6

9002a368 <__sflush_r>:
9002a368:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
9002a36c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
9002a370:	0716      	lsls	r6, r2, #28
9002a372:	4605      	mov	r5, r0
9002a374:	460c      	mov	r4, r1
9002a376:	d454      	bmi.n	9002a422 <__sflush_r+0xba>
9002a378:	684b      	ldr	r3, [r1, #4]
9002a37a:	2b00      	cmp	r3, #0
9002a37c:	dc02      	bgt.n	9002a384 <__sflush_r+0x1c>
9002a37e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
9002a380:	2b00      	cmp	r3, #0
9002a382:	dd48      	ble.n	9002a416 <__sflush_r+0xae>
9002a384:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002a386:	2e00      	cmp	r6, #0
9002a388:	d045      	beq.n	9002a416 <__sflush_r+0xae>
9002a38a:	2300      	movs	r3, #0
9002a38c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
9002a390:	682f      	ldr	r7, [r5, #0]
9002a392:	6a21      	ldr	r1, [r4, #32]
9002a394:	602b      	str	r3, [r5, #0]
9002a396:	d030      	beq.n	9002a3fa <__sflush_r+0x92>
9002a398:	6d62      	ldr	r2, [r4, #84]	@ 0x54
9002a39a:	89a3      	ldrh	r3, [r4, #12]
9002a39c:	0759      	lsls	r1, r3, #29
9002a39e:	d505      	bpl.n	9002a3ac <__sflush_r+0x44>
9002a3a0:	6863      	ldr	r3, [r4, #4]
9002a3a2:	1ad2      	subs	r2, r2, r3
9002a3a4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
9002a3a6:	b10b      	cbz	r3, 9002a3ac <__sflush_r+0x44>
9002a3a8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
9002a3aa:	1ad2      	subs	r2, r2, r3
9002a3ac:	2300      	movs	r3, #0
9002a3ae:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
9002a3b0:	6a21      	ldr	r1, [r4, #32]
9002a3b2:	4628      	mov	r0, r5
9002a3b4:	47b0      	blx	r6
9002a3b6:	1c43      	adds	r3, r0, #1
9002a3b8:	89a3      	ldrh	r3, [r4, #12]
9002a3ba:	d106      	bne.n	9002a3ca <__sflush_r+0x62>
9002a3bc:	6829      	ldr	r1, [r5, #0]
9002a3be:	291d      	cmp	r1, #29
9002a3c0:	d82b      	bhi.n	9002a41a <__sflush_r+0xb2>
9002a3c2:	4a2a      	ldr	r2, [pc, #168]	@ (9002a46c <__sflush_r+0x104>)
9002a3c4:	40ca      	lsrs	r2, r1
9002a3c6:	07d6      	lsls	r6, r2, #31
9002a3c8:	d527      	bpl.n	9002a41a <__sflush_r+0xb2>
9002a3ca:	2200      	movs	r2, #0
9002a3cc:	6062      	str	r2, [r4, #4]
9002a3ce:	04d9      	lsls	r1, r3, #19
9002a3d0:	6922      	ldr	r2, [r4, #16]
9002a3d2:	6022      	str	r2, [r4, #0]
9002a3d4:	d504      	bpl.n	9002a3e0 <__sflush_r+0x78>
9002a3d6:	1c42      	adds	r2, r0, #1
9002a3d8:	d101      	bne.n	9002a3de <__sflush_r+0x76>
9002a3da:	682b      	ldr	r3, [r5, #0]
9002a3dc:	b903      	cbnz	r3, 9002a3e0 <__sflush_r+0x78>
9002a3de:	6560      	str	r0, [r4, #84]	@ 0x54
9002a3e0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
9002a3e2:	602f      	str	r7, [r5, #0]
9002a3e4:	b1b9      	cbz	r1, 9002a416 <__sflush_r+0xae>
9002a3e6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
9002a3ea:	4299      	cmp	r1, r3
9002a3ec:	d002      	beq.n	9002a3f4 <__sflush_r+0x8c>
9002a3ee:	4628      	mov	r0, r5
9002a3f0:	f7ff fca2 	bl	90029d38 <_free_r>
9002a3f4:	2300      	movs	r3, #0
9002a3f6:	6363      	str	r3, [r4, #52]	@ 0x34
9002a3f8:	e00d      	b.n	9002a416 <__sflush_r+0xae>
9002a3fa:	2301      	movs	r3, #1
9002a3fc:	4628      	mov	r0, r5
9002a3fe:	47b0      	blx	r6
9002a400:	4602      	mov	r2, r0
9002a402:	1c50      	adds	r0, r2, #1
9002a404:	d1c9      	bne.n	9002a39a <__sflush_r+0x32>
9002a406:	682b      	ldr	r3, [r5, #0]
9002a408:	2b00      	cmp	r3, #0
9002a40a:	d0c6      	beq.n	9002a39a <__sflush_r+0x32>
9002a40c:	2b1d      	cmp	r3, #29
9002a40e:	d001      	beq.n	9002a414 <__sflush_r+0xac>
9002a410:	2b16      	cmp	r3, #22
9002a412:	d11e      	bne.n	9002a452 <__sflush_r+0xea>
9002a414:	602f      	str	r7, [r5, #0]
9002a416:	2000      	movs	r0, #0
9002a418:	e022      	b.n	9002a460 <__sflush_r+0xf8>
9002a41a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002a41e:	b21b      	sxth	r3, r3
9002a420:	e01b      	b.n	9002a45a <__sflush_r+0xf2>
9002a422:	690f      	ldr	r7, [r1, #16]
9002a424:	2f00      	cmp	r7, #0
9002a426:	d0f6      	beq.n	9002a416 <__sflush_r+0xae>
9002a428:	0793      	lsls	r3, r2, #30
9002a42a:	680e      	ldr	r6, [r1, #0]
9002a42c:	bf08      	it	eq
9002a42e:	694b      	ldreq	r3, [r1, #20]
9002a430:	600f      	str	r7, [r1, #0]
9002a432:	bf18      	it	ne
9002a434:	2300      	movne	r3, #0
9002a436:	eba6 0807 	sub.w	r8, r6, r7
9002a43a:	608b      	str	r3, [r1, #8]
9002a43c:	f1b8 0f00 	cmp.w	r8, #0
9002a440:	dde9      	ble.n	9002a416 <__sflush_r+0xae>
9002a442:	6a21      	ldr	r1, [r4, #32]
9002a444:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
9002a446:	4643      	mov	r3, r8
9002a448:	463a      	mov	r2, r7
9002a44a:	4628      	mov	r0, r5
9002a44c:	47b0      	blx	r6
9002a44e:	2800      	cmp	r0, #0
9002a450:	dc08      	bgt.n	9002a464 <__sflush_r+0xfc>
9002a452:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002a456:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
9002a45a:	81a3      	strh	r3, [r4, #12]
9002a45c:	f04f 30ff 	mov.w	r0, #4294967295
9002a460:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
9002a464:	4407      	add	r7, r0
9002a466:	eba8 0800 	sub.w	r8, r8, r0
9002a46a:	e7e7      	b.n	9002a43c <__sflush_r+0xd4>
9002a46c:	20400001 	.word	0x20400001

9002a470 <_fflush_r>:
9002a470:	b538      	push	{r3, r4, r5, lr}
9002a472:	690b      	ldr	r3, [r1, #16]
9002a474:	4605      	mov	r5, r0
9002a476:	460c      	mov	r4, r1
9002a478:	b913      	cbnz	r3, 9002a480 <_fflush_r+0x10>
9002a47a:	2500      	movs	r5, #0
9002a47c:	4628      	mov	r0, r5
9002a47e:	bd38      	pop	{r3, r4, r5, pc}
9002a480:	b118      	cbz	r0, 9002a48a <_fflush_r+0x1a>
9002a482:	6a03      	ldr	r3, [r0, #32]
9002a484:	b90b      	cbnz	r3, 9002a48a <_fflush_r+0x1a>
9002a486:	f7ff f9eb 	bl	90029860 <__sinit>
9002a48a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002a48e:	2b00      	cmp	r3, #0
9002a490:	d0f3      	beq.n	9002a47a <_fflush_r+0xa>
9002a492:	6e62      	ldr	r2, [r4, #100]	@ 0x64
9002a494:	07d0      	lsls	r0, r2, #31
9002a496:	d404      	bmi.n	9002a4a2 <_fflush_r+0x32>
9002a498:	0599      	lsls	r1, r3, #22
9002a49a:	d402      	bmi.n	9002a4a2 <_fflush_r+0x32>
9002a49c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002a49e:	f7ff fbde 	bl	90029c5e <__retarget_lock_acquire_recursive>
9002a4a2:	4628      	mov	r0, r5
9002a4a4:	4621      	mov	r1, r4
9002a4a6:	f7ff ff5f 	bl	9002a368 <__sflush_r>
9002a4aa:	6e63      	ldr	r3, [r4, #100]	@ 0x64
9002a4ac:	07da      	lsls	r2, r3, #31
9002a4ae:	4605      	mov	r5, r0
9002a4b0:	d4e4      	bmi.n	9002a47c <_fflush_r+0xc>
9002a4b2:	89a3      	ldrh	r3, [r4, #12]
9002a4b4:	059b      	lsls	r3, r3, #22
9002a4b6:	d4e1      	bmi.n	9002a47c <_fflush_r+0xc>
9002a4b8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
9002a4ba:	f7ff fbd1 	bl	90029c60 <__retarget_lock_release_recursive>
9002a4be:	e7dd      	b.n	9002a47c <_fflush_r+0xc>

9002a4c0 <__swhatbuf_r>:
9002a4c0:	b570      	push	{r4, r5, r6, lr}
9002a4c2:	460c      	mov	r4, r1
9002a4c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
9002a4c8:	2900      	cmp	r1, #0
9002a4ca:	b096      	sub	sp, #88	@ 0x58
9002a4cc:	4615      	mov	r5, r2
9002a4ce:	461e      	mov	r6, r3
9002a4d0:	da0d      	bge.n	9002a4ee <__swhatbuf_r+0x2e>
9002a4d2:	89a3      	ldrh	r3, [r4, #12]
9002a4d4:	f013 0f80 	tst.w	r3, #128	@ 0x80
9002a4d8:	f04f 0100 	mov.w	r1, #0
9002a4dc:	bf14      	ite	ne
9002a4de:	2340      	movne	r3, #64	@ 0x40
9002a4e0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
9002a4e4:	2000      	movs	r0, #0
9002a4e6:	6031      	str	r1, [r6, #0]
9002a4e8:	602b      	str	r3, [r5, #0]
9002a4ea:	b016      	add	sp, #88	@ 0x58
9002a4ec:	bd70      	pop	{r4, r5, r6, pc}
9002a4ee:	466a      	mov	r2, sp
9002a4f0:	f000 f848 	bl	9002a584 <_fstat_r>
9002a4f4:	2800      	cmp	r0, #0
9002a4f6:	dbec      	blt.n	9002a4d2 <__swhatbuf_r+0x12>
9002a4f8:	9901      	ldr	r1, [sp, #4]
9002a4fa:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
9002a4fe:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
9002a502:	4259      	negs	r1, r3
9002a504:	4159      	adcs	r1, r3
9002a506:	f44f 6380 	mov.w	r3, #1024	@ 0x400
9002a50a:	e7eb      	b.n	9002a4e4 <__swhatbuf_r+0x24>

9002a50c <__smakebuf_r>:
9002a50c:	898b      	ldrh	r3, [r1, #12]
9002a50e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
9002a510:	079d      	lsls	r5, r3, #30
9002a512:	4606      	mov	r6, r0
9002a514:	460c      	mov	r4, r1
9002a516:	d507      	bpl.n	9002a528 <__smakebuf_r+0x1c>
9002a518:	f104 0347 	add.w	r3, r4, #71	@ 0x47
9002a51c:	6023      	str	r3, [r4, #0]
9002a51e:	6123      	str	r3, [r4, #16]
9002a520:	2301      	movs	r3, #1
9002a522:	6163      	str	r3, [r4, #20]
9002a524:	b003      	add	sp, #12
9002a526:	bdf0      	pop	{r4, r5, r6, r7, pc}
9002a528:	ab01      	add	r3, sp, #4
9002a52a:	466a      	mov	r2, sp
9002a52c:	f7ff ffc8 	bl	9002a4c0 <__swhatbuf_r>
9002a530:	9f00      	ldr	r7, [sp, #0]
9002a532:	4605      	mov	r5, r0
9002a534:	4639      	mov	r1, r7
9002a536:	4630      	mov	r0, r6
9002a538:	f7ff f86c 	bl	90029614 <_malloc_r>
9002a53c:	b948      	cbnz	r0, 9002a552 <__smakebuf_r+0x46>
9002a53e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
9002a542:	059a      	lsls	r2, r3, #22
9002a544:	d4ee      	bmi.n	9002a524 <__smakebuf_r+0x18>
9002a546:	f023 0303 	bic.w	r3, r3, #3
9002a54a:	f043 0302 	orr.w	r3, r3, #2
9002a54e:	81a3      	strh	r3, [r4, #12]
9002a550:	e7e2      	b.n	9002a518 <__smakebuf_r+0xc>
9002a552:	89a3      	ldrh	r3, [r4, #12]
9002a554:	6020      	str	r0, [r4, #0]
9002a556:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
9002a55a:	81a3      	strh	r3, [r4, #12]
9002a55c:	9b01      	ldr	r3, [sp, #4]
9002a55e:	e9c4 0704 	strd	r0, r7, [r4, #16]
9002a562:	b15b      	cbz	r3, 9002a57c <__smakebuf_r+0x70>
9002a564:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
9002a568:	4630      	mov	r0, r6
9002a56a:	f000 f81d 	bl	9002a5a8 <_isatty_r>
9002a56e:	b128      	cbz	r0, 9002a57c <__smakebuf_r+0x70>
9002a570:	89a3      	ldrh	r3, [r4, #12]
9002a572:	f023 0303 	bic.w	r3, r3, #3
9002a576:	f043 0301 	orr.w	r3, r3, #1
9002a57a:	81a3      	strh	r3, [r4, #12]
9002a57c:	89a3      	ldrh	r3, [r4, #12]
9002a57e:	431d      	orrs	r5, r3
9002a580:	81a5      	strh	r5, [r4, #12]
9002a582:	e7cf      	b.n	9002a524 <__smakebuf_r+0x18>

9002a584 <_fstat_r>:
9002a584:	b538      	push	{r3, r4, r5, lr}
9002a586:	4d07      	ldr	r5, [pc, #28]	@ (9002a5a4 <_fstat_r+0x20>)
9002a588:	2300      	movs	r3, #0
9002a58a:	4604      	mov	r4, r0
9002a58c:	4608      	mov	r0, r1
9002a58e:	4611      	mov	r1, r2
9002a590:	602b      	str	r3, [r5, #0]
9002a592:	f7d9 ff85 	bl	900044a0 <_fstat>
9002a596:	1c43      	adds	r3, r0, #1
9002a598:	d102      	bne.n	9002a5a0 <_fstat_r+0x1c>
9002a59a:	682b      	ldr	r3, [r5, #0]
9002a59c:	b103      	cbz	r3, 9002a5a0 <_fstat_r+0x1c>
9002a59e:	6023      	str	r3, [r4, #0]
9002a5a0:	bd38      	pop	{r3, r4, r5, pc}
9002a5a2:	bf00      	nop
9002a5a4:	2402252c 	.word	0x2402252c

9002a5a8 <_isatty_r>:
9002a5a8:	b538      	push	{r3, r4, r5, lr}
9002a5aa:	4d06      	ldr	r5, [pc, #24]	@ (9002a5c4 <_isatty_r+0x1c>)
9002a5ac:	2300      	movs	r3, #0
9002a5ae:	4604      	mov	r4, r0
9002a5b0:	4608      	mov	r0, r1
9002a5b2:	602b      	str	r3, [r5, #0]
9002a5b4:	f7d9 ff7a 	bl	900044ac <_isatty>
9002a5b8:	1c43      	adds	r3, r0, #1
9002a5ba:	d102      	bne.n	9002a5c2 <_isatty_r+0x1a>
9002a5bc:	682b      	ldr	r3, [r5, #0]
9002a5be:	b103      	cbz	r3, 9002a5c2 <_isatty_r+0x1a>
9002a5c0:	6023      	str	r3, [r4, #0]
9002a5c2:	bd38      	pop	{r3, r4, r5, pc}
9002a5c4:	2402252c 	.word	0x2402252c

9002a5c8 <_init>:
9002a5c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002a5ca:	bf00      	nop
9002a5cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002a5ce:	bc08      	pop	{r3}
9002a5d0:	469e      	mov	lr, r3
9002a5d2:	4770      	bx	lr

9002a5d4 <_fini>:
9002a5d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
9002a5d6:	bf00      	nop
9002a5d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
9002a5da:	bc08      	pop	{r3}
9002a5dc:	469e      	mov	lr, r3
9002a5de:	4770      	bx	lr
